; ModuleID = 'build/96b_meerkat96/gdbstub/zephyr/zephyr.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7em-none-unknown-eabi"

%struct._isr_table_entry = type { i8*, void (i8*)* }
%struct.k_thread.16 = type { %struct._thread_base.9, %struct._callee_saved.10, i8*, %union.anon.5, i32, %struct.k_heap.14*, %struct._thread_arch.15 }
%struct._thread_base.9 = type { %union.anon.5, %union.anon.5*, i8, i8, %union.anon.2.7, i32, i8*, %struct._timeout.8 }
%union.anon.2.7 = type { i16 }
%struct._timeout.8 = type { %struct._dnode.4, void (%struct._timeout.8*)*, i64 }
%struct._dnode.4 = type { %union.anon.0.2, %union.anon.0.2 }
%union.anon.0.2 = type { %struct._dnode.4* }
%struct._callee_saved.10 = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%union.anon.5 = type { %struct._dnode.4 }
%struct.k_heap.14 = type { %struct.sys_heap.12, %union.anon.5, %struct.k_spinlock.13 }
%struct.sys_heap.12 = type { %struct.z_heap.11*, i8*, i32 }
%struct.z_heap.11 = type opaque
%struct.k_spinlock.13 = type {}
%struct._thread_arch.15 = type { i32, i32 }
%struct.z_thread_stack_element = type { i8 }
%struct._static_thread_data = type { %struct.k_thread.16*, %struct.z_thread_stack_element*, i32, void (i8*, i8*, i8*)*, i8*, i8*, i8*, i32, i32, i32, void ()*, i8* }
%struct.init_entry = type { i32 (%struct.device.71*)*, %struct.device.71* }
%struct.device.71 = type { i8*, i8*, i8*, %struct.device_state.293*, i8*, i16* }
%struct.device_state.293 = type { i8, i8 }
%struct.pinctrl_soc_pinmux = type { i32, i32, i32, i8 }
%struct.imx_gpio_config = type { %union.anon.68, %struct.GPIO_Type*, %struct.pinctrl_soc_pinmux*, i8 }
%union.anon.68 = type { i32 }
%struct.GPIO_Type = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.gpio_driver_api = type { i32 (%struct.device.71*, i8, i32)*, i32 (%struct.device.71*, i32*)*, i32 (%struct.device.71*, i32, i32)*, i32 (%struct.device.71*, i32)*, i32 (%struct.device.71*, i32)*, i32 (%struct.device.71*, i32)*, i32 (%struct.device.71*, i8, i32, i32)*, i32 (%struct.device.71*, %struct.gpio_callback*, i1)*, i32 (%struct.device.71*)* }
%struct.gpio_callback = type { %struct._snode, void (%struct.device.71*, %struct.gpio_callback*, i32)*, i32 }
%struct._snode = type { %struct._snode* }
%struct.imx_gpio_data = type { %union.anon.68, %struct._slist }
%struct._slist = type { %struct._snode*, %struct._snode* }
%struct._isr_list = type { i32, i32, i8*, i8* }
%struct.imx_uart_config = type { %struct.UART_Type*, i32, i8, %struct.pinctrl_dev_config*, void (%struct.device.71*)* }
%struct.UART_Type = type { i32, [60 x i8], i32, [60 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.pinctrl_dev_config = type { %struct.pinctrl_state*, i8 }
%struct.pinctrl_state = type { %struct.pinctrl_soc_pin*, i8, i8 }
%struct.pinctrl_soc_pin = type { %struct.pinctrl_soc_pinmux, i32 }
%struct.uart_driver_api = type { i32 (%struct.device.71*, i8*)*, void (%struct.device.71*, i8)*, i32 (%struct.device.71*)*, i32 (%struct.device.71*, %struct.uart_config*)*, i32 (%struct.device.71*, %struct.uart_config*)*, i32 (%struct.device.71*, i8*, i32)*, i32 (%struct.device.71*, i8*, i32)*, void (%struct.device.71*)*, void (%struct.device.71*)*, i32 (%struct.device.71*)*, void (%struct.device.71*)*, void (%struct.device.71*)*, i32 (%struct.device.71*)*, i32 (%struct.device.71*)*, void (%struct.device.71*)*, void (%struct.device.71*)*, i32 (%struct.device.71*)*, i32 (%struct.device.71*)*, void (%struct.device.71*, void (%struct.device.71*, i8*)*, i8*)* }
%struct.uart_config = type { i32, i8, i8, i8, i8 }
%struct.imx_uart_data = type { void (%struct.device.71*, i8*)*, i8* }
%struct.k_thread.180 = type { %struct._thread_base.173, %struct._callee_saved.10, i8*, %union.anon.169, i32, %struct.k_heap.178*, %struct._thread_arch.15 }
%struct._thread_base.173 = type { %union.anon.169, %union.anon.169*, i8, i8, %union.anon.2.7, i32, i8*, %struct._timeout.172 }
%struct._timeout.172 = type { %struct._dnode.168, void (%struct._timeout.172*)*, i64 }
%struct._dnode.168 = type { %union.anon.0.166, %union.anon.0.166 }
%union.anon.0.166 = type { %struct._dnode.168* }
%union.anon.169 = type { %struct._dnode.168 }
%struct.k_heap.178 = type { %struct.sys_heap.176, %union.anon.169, %struct.k_spinlock.13 }
%struct.sys_heap.176 = type { %struct.z_heap.175*, i8*, i32 }
%struct.z_heap.175 = type opaque
%struct._static_thread_data.483 = type { %struct.k_thread.180*, %struct.z_thread_stack_element*, i32, void (i8*, i8*, i8*)*, i8*, i8*, i8*, i32, i32, i32, void ()*, i8* }
%struct.z_kernel = type { [1 x %struct._cpu], %struct._ready_q }
%struct._cpu = type { i32, i8*, %struct.k_thread.180*, %struct.k_thread.180*, i32, i8, %struct.k_spinlock.13 }
%struct._ready_q = type { %struct.k_thread.180*, %struct._dnode.168 }
%struct.__va_list = type { i8* }
%struct.buf_out_context = type { i32, [0 x i8] }
%struct.str_context = type { i8*, i32, i32 }
%struct.k_thread.60 = type { %struct._thread_base.53, %struct._callee_saved.10, i8*, %union.anon.49, i32, %struct.k_heap.58*, %struct._thread_arch.15 }
%struct._thread_base.53 = type { %union.anon.49, %union.anon.49*, i8, i8, %union.anon.2.7, i32, i8*, %struct._timeout.52 }
%struct._timeout.52 = type { %struct._dnode.48, void (%struct._timeout.52*)*, i64 }
%struct._dnode.48 = type { %union.anon.0.46, %union.anon.0.46 }
%union.anon.0.46 = type { %struct._dnode.48* }
%union.anon.49 = type { %struct._dnode.48 }
%struct.k_heap.58 = type { %struct.sys_heap.56, %union.anon.49, %struct.k_spinlock.13 }
%struct.sys_heap.56 = type { %struct.z_heap.55*, i8*, i32 }
%struct.z_heap.55 = type opaque
%struct.anon = type { %union.argument_value, %struct.conversion }
%union.argument_value = type { i64 }
%struct.conversion = type { [3 x i8], i8, %union.anon.68, %union.anon.68 }
%struct.RDC_Type = type { i32, [32 x i8], i32, i32, i32, [464 x i8], [27 x i32], [404 x i8], [118 x i32], [552 x i8], [52 x %struct.anon.2] }
%struct.anon.2 = type { i32, i32, i32, i32 }
%struct.CCM_Type = type { i32, i32, i32, i32, [2032 x i8], [33 x %struct.anon.2], [13808 x i8], [191 x %struct.anon.2], [13328 x i8], [125 x %struct.anon.1] }
%struct.anon.1 = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [48 x i8], i32, i32, i32, i32 }
%struct.WDOG_Type = type { i16, i16, i16, i16, i16 }
%struct.__esf = type { %struct.__basic_sf }
%struct.__basic_sf = type { %union.anon.68, %union.anon.68, %union.anon.68, %union.anon.68, %union.anon.68, %union.anon.68, %union.anon.68, i32 }
%struct.NVIC_Type = type { [8 x i32], [24 x i32], [8 x i32], [24 x i32], [8 x i32], [24 x i32], [8 x i32], [24 x i32], [8 x i32], [56 x i32], [240 x i8], [644 x i32], i32 }
%struct.SCB_Type = type { i32, i32, i32, i32, i32, i32, [12 x i8], i32, i32, i32, i32, i32, i32, i32, [2 x i32], i32, i32, [4 x i32], [5 x i32], [5 x i32], i32 }
%struct.k_fifo = type { %struct.k_queue.315 }
%struct.k_queue.315 = type { %struct._sflist.314, %struct.k_spinlock.13, %struct._wait_q_t.300 }
%struct._sflist.314 = type { %union.anon.68*, %union.anon.68* }
%struct._wait_q_t.300 = type { %struct._dnode.298 }
%struct._dnode.298 = type { %union.anon.0.296, %union.anon.0.296 }
%union.anon.0.296 = type { %struct._dnode.298* }
%struct._uart_init_config = type { i32, i32, i32, i32, i32, i32 }
%struct.CCM_ANALOG_Type = type { [96 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, [12 x i8], i32, [12 x i8], i32, [12 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [12 x i8], i32, [12 x i8], i32, [12 x i8], i32, i32, i32, i32, i32, [12 x i8], i32, [12 x i8], i32, [12 x i8], i32, i32, i32, i32 }
%struct._gpio_init_config = type { i32, i32, i32 }
%struct.GPT_Type = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.ECSPI_Type = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, [28 x i8], i32 }
%struct.CAN_Type = type { i32, i32, i32, [4 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [8 x i8], i32, i32, i32, [48 x i8], [64 x %struct.anon.2], [1024 x i8], [64 x i32], [96 x i8], i32 }
%struct.I2C_Type = type { i16, [2 x i8], i16, [2 x i8], i16, [2 x i8], i16, [2 x i8], i16 }
%struct.rbnode = type { [2 x %struct.rbnode*] }
%struct._priq_rb = type { %struct.rbtree, i32 }
%struct.rbtree = type { %struct.rbnode*, i1 (%struct.rbnode*, %struct.rbnode*)*, i32 }
%struct._rb_foreach = type { %struct.rbnode**, i8*, i32 }
%struct._priq_mq = type { [32 x %struct._dnode.168], i32 }

@_irq_vector_table = dso_local global [127 x i32] [i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32)], section ".gnu.linkonce.irq_vector_table", align 4, !dbg !0
@_sw_isr_table = dso_local global [127 x %struct._isr_table_entry] [%struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 536867316 to i8*), void (i8*)* inttoptr (i32 536862845 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 536867292 to i8*), void (i8*)* inttoptr (i32 536862149 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 536867292 to i8*), void (i8*)* inttoptr (i32 536862149 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }], section ".gnu.linkonce.sw_isr_table", align 4, !dbg !5
@llvm.compiler.used = appending global [12 x i8*] [i8* bitcast (%struct._static_thread_data* @_k_thread_data_thread to i8*), i8* bitcast (%struct.init_entry* @__init_nxp_mcimx7_init to i8*), i8* bitcast (%struct.init_entry* @__init_uart_console_init to i8*), i8* bitcast (%struct.device.71* @__device_dts_ord_25 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_25 to i8*), i8* bitcast (%struct._isr_list* @imx_gpio_0_init.__isr_imx_gpio_port_isr_irq_0 to i8*), i8* bitcast (%struct._isr_list* @imx_gpio_0_init.__isr_imx_gpio_port_isr_irq_1 to i8*), i8* bitcast (%struct.device.71* @__device_dts_ord_198 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_198 to i8*), i8* bitcast (%struct._isr_list* @irq_config_func_0.__isr_uart_imx_isr_irq_0 to i8*), i8* bitcast (%struct.init_entry* @__init_sys_clock_driver_init to i8*), i8* bitcast (%struct.init_entry* @__init_imx_pinctrl_init to i8*)], section "llvm.metadata"
@.str = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@_k_thread_obj_thread = dso_local global %struct.k_thread.16 zeroinitializer, align 8, !dbg !25
@_k_thread_stack_thread = dso_local global [512 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22CMAKE_SOURCE_DIR/src/main.c\22.0", align 8, !dbg !262
@.str.1 = private unnamed_addr constant [7 x i8] c"thread\00", align 1
@_k_thread_data_thread = dso_local global %struct._static_thread_data { %struct.k_thread.16* @_k_thread_obj_thread, %struct.z_thread_stack_element* getelementptr inbounds ([512 x %struct.z_thread_stack_element], [512 x %struct.z_thread_stack_element]* @_k_thread_stack_thread, i32 0, i32 0), i32 512, void (i8*, i8*, i8*)* @thread_entry, i8* null, i8* null, i8* null, i32 7, i32 4, i32 0, void ()* null, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i32 0, i32 0) }, section ".__static_thread_data.static._k_thread_data_thread", align 4, !dbg !105
@thread = dso_local constant %struct.k_thread.16* @_k_thread_obj_thread, align 4, !dbg !258
@.str.2 = private unnamed_addr constant [25 x i8] c"Hello from user thread!\0A\00", align 1
@_char_out = dso_local global i32 (i32)* @arch_printk_char_out, align 4, !dbg !267
@.str.5 = private unnamed_addr constant [6 x i8] c"(nil)\00", align 1
@__init_nxp_mcimx7_init = internal constant %struct.init_entry { i32 (%struct.device.71*)* @nxp_mcimx7_init, %struct.device.71* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !276
@_vector_start = external dso_local global [0 x i8], align 1
@_stdout_hook = internal global i32 (i32)* @_stdout_hook_default, align 4, !dbg !705
@__init_uart_console_init = internal constant %struct.init_entry { i32 (%struct.device.71*)* @uart_console_init, %struct.device.71* null }, section ".z_init_PRE_KERNEL_160_", align 4, !dbg !715
@mcux_igpio_pinmux_0 = dso_local constant [16 x %struct.pinctrl_soc_pinmux] [%struct.pinctrl_soc_pinmux { i32 808189952, i32 808190000, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808189956, i32 808190004, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808189960, i32 808190008, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808189964, i32 808190012, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808189968, i32 808190016, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808189972, i32 808190020, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808189976, i32 808190024, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808189980, i32 808190028, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808648724, i32 808649324, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808648728, i32 808649328, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808648732, i32 808649332, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808648736, i32 808649336, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808648740, i32 808649340, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808648744, i32 808649344, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808648748, i32 808649348, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808648752, i32 808649352, i32 0, i8 0 }], align 4, !dbg !822
@__devicehdl_dts_ord_25 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !1006
@.str.21 = private unnamed_addr constant [14 x i8] c"gpio@30200000\00", align 1
@imx_gpio_0_config = internal constant %struct.imx_gpio_config { %union.anon.68 { i32 -1 }, %struct.GPIO_Type* inttoptr (i32 807403520 to %struct.GPIO_Type*), %struct.pinctrl_soc_pinmux* getelementptr inbounds ([16 x %struct.pinctrl_soc_pinmux], [16 x %struct.pinctrl_soc_pinmux]* @mcux_igpio_pinmux_0, i32 0, i32 0), i8 16 }, align 4, !dbg !959
@imx_gpio_driver_api = internal constant %struct.gpio_driver_api { i32 (%struct.device.71*, i8, i32)* @imx_gpio_configure, i32 (%struct.device.71*, i32*)* @imx_gpio_port_get_raw, i32 (%struct.device.71*, i32, i32)* @imx_gpio_port_set_masked_raw, i32 (%struct.device.71*, i32)* @imx_gpio_port_set_bits_raw, i32 (%struct.device.71*, i32)* @imx_gpio_port_clear_bits_raw, i32 (%struct.device.71*, i32)* @imx_gpio_port_toggle_bits, i32 (%struct.device.71*, i8, i32, i32)* @imx_gpio_pin_interrupt_configure, i32 (%struct.device.71*, %struct.gpio_callback*, i1)* @imx_gpio_manage_callback, i32 (%struct.device.71*)* null }, align 4, !dbg !990
@__devstate_dts_ord_25 = internal global %struct.device_state.293 zeroinitializer, section ".z_devstate", align 1, !dbg !957
@imx_gpio_0_data = internal global %struct.imx_gpio_data zeroinitializer, align 4, !dbg !945
@__device_dts_ord_25 = dso_local constant %struct.device.71 { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.21, i32 0, i32 0), i8* bitcast (%struct.imx_gpio_config* @imx_gpio_0_config to i8*), i8* bitcast (%struct.gpio_driver_api* @imx_gpio_driver_api to i8*), %struct.device_state.293* @__devstate_dts_ord_25, i8* bitcast (%struct.imx_gpio_data* @imx_gpio_0_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_25, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !933
@__init___device_dts_ord_25 = internal constant %struct.init_entry { i32 (%struct.device.71*)* @imx_gpio_0_init, %struct.device.71* @__device_dts_ord_25 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !935
@imx_gpio_0_init.__isr_imx_gpio_port_isr_irq_0 = internal global %struct._isr_list { i32 64, i32 0, i8* bitcast (void (%struct.device.71*)* @imx_gpio_port_isr to i8*), i8* bitcast (%struct.device.71* @__device_dts_ord_25 to i8*) }, section ".intList", align 4, !dbg !992
@imx_gpio_0_init.__isr_imx_gpio_port_isr_irq_1 = internal global %struct._isr_list { i32 65, i32 0, i8* bitcast (void (%struct.device.71*)* @imx_gpio_port_isr to i8*), i8* bitcast (%struct.device.71* @__device_dts_ord_25 to i8*) }, section ".intList", align 4, !dbg !1001
@__devicehdl_dts_ord_198 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !1011
@.str.25 = private unnamed_addr constant [14 x i8] c"uart@30860000\00", align 1
@imx_uart_0_config = internal constant %struct.imx_uart_config { %struct.UART_Type* inttoptr (i32 814088192 to %struct.UART_Type*), i32 115200, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_198, void (%struct.device.71*)* @irq_config_func_0 }, align 4, !dbg !1017
@uart_imx_driver_api = internal constant %struct.uart_driver_api { i32 (%struct.device.71*, i8*)* @uart_imx_poll_in, void (%struct.device.71*, i8)* @uart_imx_poll_out, i32 (%struct.device.71*)* null, i32 (%struct.device.71*, %struct.uart_config*)* null, i32 (%struct.device.71*, %struct.uart_config*)* null, i32 (%struct.device.71*, i8*, i32)* @uart_imx_fifo_fill, i32 (%struct.device.71*, i8*, i32)* @uart_imx_fifo_read, void (%struct.device.71*)* @uart_imx_irq_tx_enable, void (%struct.device.71*)* @uart_imx_irq_tx_disable, i32 (%struct.device.71*)* @uart_imx_irq_tx_ready, void (%struct.device.71*)* @uart_imx_irq_rx_enable, void (%struct.device.71*)* @uart_imx_irq_rx_disable, i32 (%struct.device.71*)* null, i32 (%struct.device.71*)* @uart_imx_irq_rx_ready, void (%struct.device.71*)* @uart_imx_irq_err_enable, void (%struct.device.71*)* @uart_imx_irq_err_disable, i32 (%struct.device.71*)* @uart_imx_irq_is_pending, i32 (%struct.device.71*)* @uart_imx_irq_update, void (%struct.device.71*, void (%struct.device.71*, i8*)*, i8*)* @uart_imx_irq_callback_set }, align 4, !dbg !1275
@__devstate_dts_ord_198 = internal global %struct.device_state.293 zeroinitializer, section ".z_devstate", align 1, !dbg !1273
@imx_uart_0_data = internal global %struct.imx_uart_data zeroinitializer, align 4, !dbg !1267
@__device_dts_ord_198 = dso_local constant %struct.device.71 { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.25, i32 0, i32 0), i8* bitcast (%struct.imx_uart_config* @imx_uart_0_config to i8*), i8* bitcast (%struct.uart_driver_api* @uart_imx_driver_api to i8*), %struct.device_state.293* @__devstate_dts_ord_198, i8* bitcast (%struct.imx_uart_data* @imx_uart_0_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_198, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1258
@__init___device_dts_ord_198 = internal constant %struct.init_entry { i32 (%struct.device.71*)* @uart_imx_init, %struct.device.71* @__device_dts_ord_198 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1260
@__pinctrl_dev_config__device_dts_ord_198 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_198, i32 0, i32 0), i8 1 }, align 4, !dbg !1277
@__pinctrl_states__device_dts_ord_198 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct.pinctrl_soc_pin* getelementptr inbounds ([2 x %struct.pinctrl_soc_pin], [2 x %struct.pinctrl_soc_pin]* @__pinctrl_state_pins_0__device_dts_ord_198, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1279
@__pinctrl_state_pins_0__device_dts_ord_198 = internal constant [2 x %struct.pinctrl_soc_pin] [%struct.pinctrl_soc_pin { %struct.pinctrl_soc_pinmux { i32 808649000, i32 808649624, i32 0, i8 0 }, i32 124 }, %struct.pinctrl_soc_pin { %struct.pinctrl_soc_pinmux { i32 808649004, i32 808649628, i32 808650484, i8 16 }, i32 124 }], align 4, !dbg !1284
@irq_config_func_0.__isr_uart_imx_isr_irq_0 = internal global %struct._isr_list { i32 26, i32 0, i8* bitcast (void (%struct.device.71*)* @uart_imx_isr to i8*), i8* bitcast (%struct.device.71* @__device_dts_ord_198 to i8*) }, section ".intList", align 4, !dbg !1287
@overflow_cyc = internal global i32 0, align 4, !dbg !1296
@cycle_count = internal global i32 0, align 4, !dbg !1554
@announced_cycles = internal global i32 0, align 4, !dbg !1556
@last_load = internal global i32 0, align 4, !dbg !1552
@lock = internal global %struct.k_spinlock.13 zeroinitializer, align 1, !dbg !1549
@__init_sys_clock_driver_init = internal constant %struct.init_entry { i32 (%struct.device.71*)* @sys_clock_driver_init, %struct.device.71* null }, section ".z_init_PRE_KERNEL_20_", align 4, !dbg !1523
@__init_imx_pinctrl_init = internal constant %struct.init_entry { i32 (%struct.device.71*)* @imx_pinctrl_init, %struct.device.71* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !1558
@__device_start = external dso_local constant [0 x %struct.device.71], align 4
@__device_end = external dso_local constant [0 x %struct.device.71], align 4
@_k_neg_eagain = dso_local constant i32 -11, align 4, !dbg !1588
@__bss_start = external dso_local global [0 x i8], align 1
@__bss_end = external dso_local global [0 x i8], align 1
@z_interrupt_stacks = dso_local global [1 x [2048 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.2", align 8, !dbg !1594
@z_main_stack = dso_local global [1024 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.0", align 8, !dbg !1797
@z_main_thread = dso_local global %struct.k_thread.180 zeroinitializer, align 8, !dbg !1805
@z_idle_stacks = internal global [1 x [320 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.1", align 8, !dbg !1812
@z_sys_init_run_level.levels = internal global [6 x %struct.init_entry*] [%struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_EARLY_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_1_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_2_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_POST_KERNEL_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_APPLICATION_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_end, i32 0, i32 0)], align 4, !dbg !1817
@__init_EARLY_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_1_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_2_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_POST_KERNEL_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_APPLICATION_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_end = external dso_local constant [0 x %struct.init_entry], align 4
@.str.68 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@k_thread_state_str.states_str = internal global [8 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.69, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.70, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.71, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5.72, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7, i32 0, i32 0)], align 4, !dbg !1835
@.str.69 = private unnamed_addr constant [6 x i8] c"dummy\00", align 1
@.str.1.70 = private unnamed_addr constant [8 x i8] c"pending\00", align 1
@.str.2.71 = private unnamed_addr constant [9 x i8] c"prestart\00", align 1
@.str.3 = private unnamed_addr constant [5 x i8] c"dead\00", align 1
@.str.4 = private unnamed_addr constant [10 x i8] c"suspended\00", align 1
@.str.5.72 = private unnamed_addr constant [9 x i8] c"aborting\00", align 1
@.str.6 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.7 = private unnamed_addr constant [7 x i8] c"queued\00", align 1
@k_thread_state_str.states_sz = internal constant [8 x i32] [i32 5, i32 7, i32 8, i32 4, i32 9, i32 8, i32 0, i32 6], align 4, !dbg !1943
@.str.8 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@__static_thread_data_list_start = external dso_local global [0 x %struct._static_thread_data.483], align 4
@__static_thread_data_list_end = external dso_local global [0 x %struct._static_thread_data.483], align 4
@sched_spinlock = dso_local global %struct.k_spinlock.13 zeroinitializer, align 1, !dbg !1948
@slice_ticks = internal global i32 0, align 4, !dbg !2050
@slice_max_prio = internal global i32 0, align 4, !dbg !2053
@pending_current = internal global %struct.k_thread.180* null, align 4, !dbg !2055
@z_sys_post_kernel = dso_local global i8 0, align 1, !dbg !1810
@z_idle_threads = dso_local global [1 x %struct.k_thread.180] zeroinitializer, align 8, !dbg !1807
@__data_region_start = external dso_local global [0 x i8], align 1
@__data_region_load_start = external dso_local global [0 x i8], align 1
@__data_region_end = external dso_local global [0 x i8], align 1
@__ramfunc_start = external dso_local global [0 x i8], align 1
@__ramfunc_load_start = external dso_local global [0 x i8], align 1
@__ramfunc_size = external dso_local global [0 x i8], align 1
@timeout_lock = internal global %struct.k_spinlock.13 zeroinitializer, align 1, !dbg !2057
@curr_tick = internal global i64 0, align 8, !dbg !2087
@timeout_list = internal global %struct._dnode.168 { %union.anon.0.166 { %struct._dnode.168* @timeout_list }, %union.anon.0.166 { %struct._dnode.168* @timeout_list } }, align 4, !dbg !2092
@_kernel = dso_local global %struct.z_kernel zeroinitializer, align 4, !dbg !1681
@announce_remaining = internal global i32 0, align 4, !dbg !2090
@.str.126 = private unnamed_addr constant [66 x i8] c"*** Booting Zephyr OS build zephyr-v3.2.0-2126-gffed8388e7cb ***\0A\00", align 1

declare dso_local void @_isr_wrapper() #0

; Function Attrs: noinline nounwind optnone
define dso_local void @_OffsetAbsSyms() #1 !dbg !2725 {
  call void asm sideeffect ".globl\09___cpu_t_current_OFFSET\0A\09.equ\09___cpu_t_current_OFFSET,${0:B}\0A\09.type\09___cpu_t_current_OFFSET,%object", "n"(i32 -9) #9, !dbg !2727, !srcloc !2728
  call void asm sideeffect ".globl\09___cpu_t_nested_OFFSET\0A\09.equ\09___cpu_t_nested_OFFSET,${0:B}\0A\09.type\09___cpu_t_nested_OFFSET,%object", "n"(i32 -1) #9, !dbg !2729, !srcloc !2730
  call void asm sideeffect ".globl\09___cpu_t_irq_stack_OFFSET\0A\09.equ\09___cpu_t_irq_stack_OFFSET,${0:B}\0A\09.type\09___cpu_t_irq_stack_OFFSET,%object", "n"(i32 -5) #9, !dbg !2731, !srcloc !2732
  call void asm sideeffect ".globl\09___cpu_t_arch_OFFSET\0A\09.equ\09___cpu_t_arch_OFFSET,${0:B}\0A\09.type\09___cpu_t_arch_OFFSET,%object", "n"(i32 -22) #9, !dbg !2733, !srcloc !2734
  call void asm sideeffect ".globl\09___cpu_t_SIZEOF\0A\09.equ\09___cpu_t_SIZEOF,${0:B}\0A\09.type\09___cpu_t_SIZEOF,%object", "n"(i32 -25) #9, !dbg !2735, !srcloc !2736
  call void asm sideeffect ".globl\09___kernel_t_cpus_OFFSET\0A\09.equ\09___kernel_t_cpus_OFFSET,${0:B}\0A\09.type\09___kernel_t_cpus_OFFSET,%object", "n"(i32 -1) #9, !dbg !2737, !srcloc !2738
  call void asm sideeffect ".globl\09___kernel_t_ready_q_OFFSET\0A\09.equ\09___kernel_t_ready_q_OFFSET,${0:B}\0A\09.type\09___kernel_t_ready_q_OFFSET,%object", "n"(i32 -25) #9, !dbg !2739, !srcloc !2740
  call void asm sideeffect ".globl\09___ready_q_t_cache_OFFSET\0A\09.equ\09___ready_q_t_cache_OFFSET,${0:B}\0A\09.type\09___ready_q_t_cache_OFFSET,%object", "n"(i32 -1) #9, !dbg !2741, !srcloc !2742
  call void asm sideeffect ".globl\09_STRUCT_KERNEL_SIZE\0A\09.equ\09_STRUCT_KERNEL_SIZE,${0:B}\0A\09.type\09_STRUCT_KERNEL_SIZE,%object", "n"(i32 -37) #9, !dbg !2743, !srcloc !2744
  call void asm sideeffect ".globl\09___thread_base_t_user_options_OFFSET\0A\09.equ\09___thread_base_t_user_options_OFFSET,${0:B}\0A\09.type\09___thread_base_t_user_options_OFFSET,%object", "n"(i32 -13) #9, !dbg !2745, !srcloc !2746
  call void asm sideeffect ".globl\09___thread_base_t_thread_state_OFFSET\0A\09.equ\09___thread_base_t_thread_state_OFFSET,${0:B}\0A\09.type\09___thread_base_t_thread_state_OFFSET,%object", "n"(i32 -14) #9, !dbg !2747, !srcloc !2748
  call void asm sideeffect ".globl\09___thread_base_t_prio_OFFSET\0A\09.equ\09___thread_base_t_prio_OFFSET,${0:B}\0A\09.type\09___thread_base_t_prio_OFFSET,%object", "n"(i32 -15) #9, !dbg !2749, !srcloc !2750
  call void asm sideeffect ".globl\09___thread_base_t_sched_locked_OFFSET\0A\09.equ\09___thread_base_t_sched_locked_OFFSET,${0:B}\0A\09.type\09___thread_base_t_sched_locked_OFFSET,%object", "n"(i32 -16) #9, !dbg !2751, !srcloc !2752
  call void asm sideeffect ".globl\09___thread_base_t_preempt_OFFSET\0A\09.equ\09___thread_base_t_preempt_OFFSET,${0:B}\0A\09.type\09___thread_base_t_preempt_OFFSET,%object", "n"(i32 -15) #9, !dbg !2753, !srcloc !2754
  call void asm sideeffect ".globl\09___thread_base_t_swap_data_OFFSET\0A\09.equ\09___thread_base_t_swap_data_OFFSET,${0:B}\0A\09.type\09___thread_base_t_swap_data_OFFSET,%object", "n"(i32 -21) #9, !dbg !2755, !srcloc !2756
  call void asm sideeffect ".globl\09___thread_t_base_OFFSET\0A\09.equ\09___thread_t_base_OFFSET,${0:B}\0A\09.type\09___thread_t_base_OFFSET,%object", "n"(i32 -1) #9, !dbg !2757, !srcloc !2758
  call void asm sideeffect ".globl\09___thread_t_callee_saved_OFFSET\0A\09.equ\09___thread_t_callee_saved_OFFSET,${0:B}\0A\09.type\09___thread_t_callee_saved_OFFSET,%object", "n"(i32 -49) #9, !dbg !2759, !srcloc !2760
  call void asm sideeffect ".globl\09___thread_t_arch_OFFSET\0A\09.equ\09___thread_t_arch_OFFSET,${0:B}\0A\09.type\09___thread_t_arch_OFFSET,%object", "n"(i32 -105) #9, !dbg !2761, !srcloc !2762
  call void asm sideeffect ".globl\09K_THREAD_SIZEOF\0A\09.equ\09K_THREAD_SIZEOF,${0:B}\0A\09.type\09K_THREAD_SIZEOF,%object", "n"(i32 -113) #9, !dbg !2763, !srcloc !2764
  call void asm sideeffect ".globl\09__z_interrupt_stack_SIZEOF\0A\09.equ\09__z_interrupt_stack_SIZEOF,${0:B}\0A\09.type\09__z_interrupt_stack_SIZEOF,%object", "n"(i32 -2049) #9, !dbg !2765, !srcloc !2766
  call void asm sideeffect ".globl\09_DEVICE_STRUCT_SIZEOF\0A\09.equ\09_DEVICE_STRUCT_SIZEOF,${0:B}\0A\09.type\09_DEVICE_STRUCT_SIZEOF,%object", "n"(i32 -25) #9, !dbg !2767, !srcloc !2768
  call void asm sideeffect ".globl\09_DEVICE_STRUCT_HANDLES_OFFSET\0A\09.equ\09_DEVICE_STRUCT_HANDLES_OFFSET,${0:B}\0A\09.type\09_DEVICE_STRUCT_HANDLES_OFFSET,%object", "n"(i32 -21) #9, !dbg !2769, !srcloc !2770
  call void asm sideeffect ".globl\09_PM_DEVICE_STRUCT_FLAGS_OFFSET\0A\09.equ\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,${0:B}\0A\09.type\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,%object", "n"(i32 -1) #9, !dbg !2771, !srcloc !2772
  call void asm sideeffect ".globl\09_PM_DEVICE_FLAG_PD\0A\09.equ\09_PM_DEVICE_FLAG_PD,${0:B}\0A\09.type\09_PM_DEVICE_FLAG_PD,%object", "n"(i32 -7) #9, !dbg !2773, !srcloc !2774
  call void asm sideeffect ".globl\09___thread_arch_t_basepri_OFFSET\0A\09.equ\09___thread_arch_t_basepri_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_basepri_OFFSET,%object", "n"(i32 -1) #9, !dbg !2775, !srcloc !2778
  call void asm sideeffect ".globl\09___thread_arch_t_swap_return_value_OFFSET\0A\09.equ\09___thread_arch_t_swap_return_value_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_swap_return_value_OFFSET,%object", "n"(i32 -5) #9, !dbg !2779, !srcloc !2780
  call void asm sideeffect ".globl\09___basic_sf_t_a1_OFFSET\0A\09.equ\09___basic_sf_t_a1_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a1_OFFSET,%object", "n"(i32 -1) #9, !dbg !2781, !srcloc !2782
  call void asm sideeffect ".globl\09___basic_sf_t_a2_OFFSET\0A\09.equ\09___basic_sf_t_a2_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a2_OFFSET,%object", "n"(i32 -5) #9, !dbg !2783, !srcloc !2784
  call void asm sideeffect ".globl\09___basic_sf_t_a3_OFFSET\0A\09.equ\09___basic_sf_t_a3_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a3_OFFSET,%object", "n"(i32 -9) #9, !dbg !2785, !srcloc !2786
  call void asm sideeffect ".globl\09___basic_sf_t_a4_OFFSET\0A\09.equ\09___basic_sf_t_a4_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a4_OFFSET,%object", "n"(i32 -13) #9, !dbg !2787, !srcloc !2788
  call void asm sideeffect ".globl\09___basic_sf_t_ip_OFFSET\0A\09.equ\09___basic_sf_t_ip_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_ip_OFFSET,%object", "n"(i32 -17) #9, !dbg !2789, !srcloc !2790
  call void asm sideeffect ".globl\09___basic_sf_t_lr_OFFSET\0A\09.equ\09___basic_sf_t_lr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_lr_OFFSET,%object", "n"(i32 -21) #9, !dbg !2791, !srcloc !2792
  call void asm sideeffect ".globl\09___basic_sf_t_pc_OFFSET\0A\09.equ\09___basic_sf_t_pc_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_pc_OFFSET,%object", "n"(i32 -25) #9, !dbg !2793, !srcloc !2794
  call void asm sideeffect ".globl\09___basic_sf_t_xpsr_OFFSET\0A\09.equ\09___basic_sf_t_xpsr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_xpsr_OFFSET,%object", "n"(i32 -29) #9, !dbg !2795, !srcloc !2796
  call void asm sideeffect ".globl\09___basic_sf_t_SIZEOF\0A\09.equ\09___basic_sf_t_SIZEOF,${0:B}\0A\09.type\09___basic_sf_t_SIZEOF,%object", "n"(i32 -33) #9, !dbg !2797, !srcloc !2798
  call void asm sideeffect ".globl\09___esf_t_SIZEOF\0A\09.equ\09___esf_t_SIZEOF,${0:B}\0A\09.type\09___esf_t_SIZEOF,%object", "n"(i32 -33) #9, !dbg !2799, !srcloc !2800
  call void asm sideeffect ".globl\09___callee_saved_t_v1_OFFSET\0A\09.equ\09___callee_saved_t_v1_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v1_OFFSET,%object", "n"(i32 -1) #9, !dbg !2801, !srcloc !2802
  call void asm sideeffect ".globl\09___callee_saved_t_v2_OFFSET\0A\09.equ\09___callee_saved_t_v2_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v2_OFFSET,%object", "n"(i32 -5) #9, !dbg !2803, !srcloc !2804
  call void asm sideeffect ".globl\09___callee_saved_t_v3_OFFSET\0A\09.equ\09___callee_saved_t_v3_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v3_OFFSET,%object", "n"(i32 -9) #9, !dbg !2805, !srcloc !2806
  call void asm sideeffect ".globl\09___callee_saved_t_v4_OFFSET\0A\09.equ\09___callee_saved_t_v4_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v4_OFFSET,%object", "n"(i32 -13) #9, !dbg !2807, !srcloc !2808
  call void asm sideeffect ".globl\09___callee_saved_t_v5_OFFSET\0A\09.equ\09___callee_saved_t_v5_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v5_OFFSET,%object", "n"(i32 -17) #9, !dbg !2809, !srcloc !2810
  call void asm sideeffect ".globl\09___callee_saved_t_v6_OFFSET\0A\09.equ\09___callee_saved_t_v6_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v6_OFFSET,%object", "n"(i32 -21) #9, !dbg !2811, !srcloc !2812
  call void asm sideeffect ".globl\09___callee_saved_t_v7_OFFSET\0A\09.equ\09___callee_saved_t_v7_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v7_OFFSET,%object", "n"(i32 -25) #9, !dbg !2813, !srcloc !2814
  call void asm sideeffect ".globl\09___callee_saved_t_v8_OFFSET\0A\09.equ\09___callee_saved_t_v8_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v8_OFFSET,%object", "n"(i32 -29) #9, !dbg !2815, !srcloc !2816
  call void asm sideeffect ".globl\09___callee_saved_t_psp_OFFSET\0A\09.equ\09___callee_saved_t_psp_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_psp_OFFSET,%object", "n"(i32 -33) #9, !dbg !2817, !srcloc !2818
  call void asm sideeffect ".globl\09___callee_saved_t_SIZEOF\0A\09.equ\09___callee_saved_t_SIZEOF,${0:B}\0A\09.type\09___callee_saved_t_SIZEOF,%object", "n"(i32 -37) #9, !dbg !2819, !srcloc !2820
  call void asm sideeffect ".globl\09_K_THREAD_NO_FLOAT_SIZEOF\0A\09.equ\09_K_THREAD_NO_FLOAT_SIZEOF,${0:B}\0A\09.type\09_K_THREAD_NO_FLOAT_SIZEOF,%object", "n"(i32 -113) #9, !dbg !2821, !srcloc !2822
  ret void, !dbg !2823
}

; Function Attrs: noinline nounwind optnone
define internal void @thread_entry(i8* noundef %0, i8* noundef %1, i8* noundef %2) #1 !dbg !2826 {
  %4 = alloca i8*, align 4
  %5 = alloca i8*, align 4
  %6 = alloca i8*, align 4
  store i8* %0, i8** %4, align 4
  call void @llvm.dbg.declare(metadata i8** %4, metadata !2827, metadata !DIExpression()), !dbg !2828
  store i8* %1, i8** %5, align 4
  call void @llvm.dbg.declare(metadata i8** %5, metadata !2829, metadata !DIExpression()), !dbg !2830
  store i8* %2, i8** %6, align 4
  call void @llvm.dbg.declare(metadata i8** %6, metadata !2831, metadata !DIExpression()), !dbg !2832
  call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.2, i32 0, i32 0)) #10, !dbg !2833
  ret void, !dbg !2834
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

; Function Attrs: noinline nounwind optnone
define dso_local void @main() #1 !dbg !2835 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %1, metadata !2836, metadata !DIExpression()), !dbg !2837
  %2 = call i32 @test() #10, !dbg !2838
  store i32 %2, i32* %1, align 4, !dbg !2839
  %3 = load i32, i32* %1, align 4, !dbg !2840
  call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i32 noundef %3) #10, !dbg !2841
  ret void, !dbg !2842
}

; Function Attrs: noinline nounwind optnone
define internal i32 @test() #1 !dbg !2843 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %1, metadata !2846, metadata !DIExpression()), !dbg !2847
  call void @llvm.dbg.declare(metadata i32* %2, metadata !2848, metadata !DIExpression()), !dbg !2849
  store i32 10, i32* %1, align 4, !dbg !2850
  %3 = load i32, i32* %1, align 4, !dbg !2851
  %4 = mul nsw i32 %3, 2, !dbg !2852
  store i32 %4, i32* %2, align 4, !dbg !2853
  %5 = load i32, i32* %1, align 4, !dbg !2854
  %6 = load i32, i32* %2, align 4, !dbg !2855
  %7 = add nsw i32 %5, %6, !dbg !2856
  ret i32 %7, !dbg !2857
}

; Function Attrs: noinline nounwind optnone
define weak dso_local i32 @arch_printk_char_out(i32 noundef %0) #1 !dbg !2858 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !2859, metadata !DIExpression()), !dbg !2860
  %3 = load i32, i32* %2, align 4, !dbg !2861
  ret i32 0, !dbg !2862
}

; Function Attrs: noinline nounwind optnone
define dso_local void @__printk_hook_install(i32 (i32)* noundef %0) #1 !dbg !2863 {
  %2 = alloca i32 (i32)*, align 4
  store i32 (i32)* %0, i32 (i32)** %2, align 4
  call void @llvm.dbg.declare(metadata i32 (i32)** %2, metadata !2866, metadata !DIExpression()), !dbg !2867
  %3 = load i32 (i32)*, i32 (i32)** %2, align 4, !dbg !2868
  store i32 (i32)* %3, i32 (i32)** @_char_out, align 4, !dbg !2869
  ret void, !dbg !2870
}

; Function Attrs: noinline nounwind optnone
define dso_local i8* @__printk_get_hook() #1 !dbg !2871 {
  %1 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !2874
  %2 = bitcast i32 (i32)* %1 to i8*, !dbg !2874
  ret i8* %2, !dbg !2875
}

; Function Attrs: noinline nounwind optnone
define dso_local void @vprintk(i8* noundef %0, [1 x i32] %1) #1 !dbg !2876 {
  %3 = alloca %struct.__va_list, align 4
  %4 = alloca i8*, align 4
  %5 = alloca %struct.buf_out_context, align 4
  %6 = getelementptr inbounds %struct.__va_list, %struct.__va_list* %3, i32 0, i32 0
  %7 = bitcast i8** %6 to [1 x i32]*
  store [1 x i32] %1, [1 x i32]* %7, align 4
  store i8* %0, i8** %4, align 4
  call void @llvm.dbg.declare(metadata i8** %4, metadata !2886, metadata !DIExpression()), !dbg !2887
  call void @llvm.dbg.declare(metadata %struct.__va_list* %3, metadata !2888, metadata !DIExpression()), !dbg !2889
  %8 = call zeroext i1 @k_is_user_context() #10, !dbg !2890
  br i1 %8, label %9, label %22, !dbg !2892

9:                                                ; preds = %2
  call void @llvm.dbg.declare(metadata %struct.buf_out_context* %5, metadata !2893, metadata !DIExpression()), !dbg !2902
  %10 = bitcast %struct.buf_out_context* %5 to i8*, !dbg !2902
  call void @llvm.memset.p0i8.i32(i8* align 4 %10, i8 0, i32 4, i1 false), !dbg !2902
  %11 = bitcast %struct.buf_out_context* %5 to i8*, !dbg !2903
  %12 = load i8*, i8** %4, align 4, !dbg !2904
  %13 = getelementptr inbounds %struct.__va_list, %struct.__va_list* %3, i32 0, i32 0, !dbg !2905
  %14 = bitcast i8** %13 to [1 x i32]*, !dbg !2905
  %15 = load [1 x i32], [1 x i32]* %14, align 4, !dbg !2905
  %16 = call i32 @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, i8*)* @buf_char_out to i32 (...)*), i8* noundef %11, i8* noundef %12, [1 x i32] %15) #10, !dbg !2905
  %17 = getelementptr inbounds %struct.buf_out_context, %struct.buf_out_context* %5, i32 0, i32 0, !dbg !2906
  %18 = load i32, i32* %17, align 4, !dbg !2906
  %19 = icmp ne i32 %18, 0, !dbg !2908
  br i1 %19, label %20, label %21, !dbg !2909

20:                                               ; preds = %9
  call void @buf_flush(%struct.buf_out_context* noundef %5) #10, !dbg !2910
  br label %21, !dbg !2912

21:                                               ; preds = %20, %9
  br label %28, !dbg !2913

22:                                               ; preds = %2
  %23 = load i8*, i8** %4, align 4, !dbg !2914
  %24 = getelementptr inbounds %struct.__va_list, %struct.__va_list* %3, i32 0, i32 0, !dbg !2916
  %25 = bitcast i8** %24 to [1 x i32]*, !dbg !2916
  %26 = load [1 x i32], [1 x i32]* %25, align 4, !dbg !2916
  %27 = call i32 @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, i8*)* @char_out to i32 (...)*), i8* noundef null, i8* noundef %23, [1 x i32] %26) #10, !dbg !2916
  br label %28

28:                                               ; preds = %22, %21
  ret void, !dbg !2917
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @k_is_user_context() #1 !dbg !2918 {
  ret i1 false, !dbg !2922
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #3

; Function Attrs: noinline nounwind optnone
define internal i32 @buf_char_out(i32 noundef %0, i8* noundef %1) #1 !dbg !2923 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 4
  %5 = alloca %struct.buf_out_context*, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !2926, metadata !DIExpression()), !dbg !2927
  store i8* %1, i8** %4, align 4
  call void @llvm.dbg.declare(metadata i8** %4, metadata !2928, metadata !DIExpression()), !dbg !2929
  call void @llvm.dbg.declare(metadata %struct.buf_out_context** %5, metadata !2930, metadata !DIExpression()), !dbg !2932
  %6 = load i8*, i8** %4, align 4, !dbg !2933
  %7 = bitcast i8* %6 to %struct.buf_out_context*, !dbg !2933
  store %struct.buf_out_context* %7, %struct.buf_out_context** %5, align 4, !dbg !2932
  %8 = load i32, i32* %3, align 4, !dbg !2934
  %9 = trunc i32 %8 to i8, !dbg !2934
  %10 = load %struct.buf_out_context*, %struct.buf_out_context** %5, align 4, !dbg !2935
  %11 = getelementptr inbounds %struct.buf_out_context, %struct.buf_out_context* %10, i32 0, i32 1, !dbg !2936
  %12 = load %struct.buf_out_context*, %struct.buf_out_context** %5, align 4, !dbg !2937
  %13 = getelementptr inbounds %struct.buf_out_context, %struct.buf_out_context* %12, i32 0, i32 0, !dbg !2938
  %14 = load i32, i32* %13, align 4, !dbg !2939
  %15 = add i32 %14, 1, !dbg !2939
  store i32 %15, i32* %13, align 4, !dbg !2939
  %16 = getelementptr inbounds [0 x i8], [0 x i8]* %11, i32 0, i32 %14, !dbg !2935
  store i8 %9, i8* %16, align 1, !dbg !2940
  %17 = load %struct.buf_out_context*, %struct.buf_out_context** %5, align 4, !dbg !2941
  %18 = getelementptr inbounds %struct.buf_out_context, %struct.buf_out_context* %17, i32 0, i32 0, !dbg !2943
  %19 = load i32, i32* %18, align 4, !dbg !2943
  %20 = icmp eq i32 %19, 0, !dbg !2944
  br i1 %20, label %21, label %23, !dbg !2945

21:                                               ; preds = %2
  %22 = load %struct.buf_out_context*, %struct.buf_out_context** %5, align 4, !dbg !2946
  call void @buf_flush(%struct.buf_out_context* noundef %22) #10, !dbg !2948
  br label %23, !dbg !2949

23:                                               ; preds = %21, %2
  %24 = load i32, i32* %3, align 4, !dbg !2950
  ret i32 %24, !dbg !2951
}

; Function Attrs: noinline nounwind optnone
define internal i32 @cbvprintf(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3) #1 !dbg !2952 {
  %5 = alloca %struct.__va_list, align 4
  %6 = alloca i32 (...)*, align 4
  %7 = alloca i8*, align 4
  %8 = alloca i8*, align 4
  %9 = getelementptr inbounds %struct.__va_list, %struct.__va_list* %5, i32 0, i32 0
  %10 = bitcast i8** %9 to [1 x i32]*
  store [1 x i32] %3, [1 x i32]* %10, align 4
  store i32 (...)* %0, i32 (...)** %6, align 4
  call void @llvm.dbg.declare(metadata i32 (...)** %6, metadata !2960, metadata !DIExpression()), !dbg !2961
  store i8* %1, i8** %7, align 4
  call void @llvm.dbg.declare(metadata i8** %7, metadata !2962, metadata !DIExpression()), !dbg !2963
  store i8* %2, i8** %8, align 4
  call void @llvm.dbg.declare(metadata i8** %8, metadata !2964, metadata !DIExpression()), !dbg !2965
  call void @llvm.dbg.declare(metadata %struct.__va_list* %5, metadata !2966, metadata !DIExpression()), !dbg !2967
  %11 = load i32 (...)*, i32 (...)** %6, align 4, !dbg !2968
  %12 = load i8*, i8** %7, align 4, !dbg !2969
  %13 = load i8*, i8** %8, align 4, !dbg !2970
  %14 = getelementptr inbounds %struct.__va_list, %struct.__va_list* %5, i32 0, i32 0, !dbg !2971
  %15 = bitcast i8** %14 to [1 x i32]*, !dbg !2971
  %16 = load [1 x i32], [1 x i32]* %15, align 4, !dbg !2971
  %17 = call i32 @z_cbvprintf_impl(i32 (...)* noundef %11, i8* noundef %12, i8* noundef %13, [1 x i32] %16, i32 noundef 0) #10, !dbg !2971
  ret i32 %17, !dbg !2972
}

; Function Attrs: noinline nounwind optnone
define internal void @buf_flush(%struct.buf_out_context* noundef %0) #1 !dbg !2973 {
  %2 = alloca %struct.buf_out_context*, align 4
  store %struct.buf_out_context* %0, %struct.buf_out_context** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.buf_out_context** %2, metadata !2976, metadata !DIExpression()), !dbg !2977
  %3 = load %struct.buf_out_context*, %struct.buf_out_context** %2, align 4, !dbg !2978
  %4 = getelementptr inbounds %struct.buf_out_context, %struct.buf_out_context* %3, i32 0, i32 1, !dbg !2979
  %5 = getelementptr inbounds [0 x i8], [0 x i8]* %4, i32 0, i32 0, !dbg !2978
  %6 = load %struct.buf_out_context*, %struct.buf_out_context** %2, align 4, !dbg !2980
  %7 = getelementptr inbounds %struct.buf_out_context, %struct.buf_out_context* %6, i32 0, i32 0, !dbg !2981
  %8 = load i32, i32* %7, align 4, !dbg !2981
  call void @k_str_out(i8* noundef %5, i32 noundef %8) #10, !dbg !2982
  %9 = load %struct.buf_out_context*, %struct.buf_out_context** %2, align 4, !dbg !2983
  %10 = getelementptr inbounds %struct.buf_out_context, %struct.buf_out_context* %9, i32 0, i32 0, !dbg !2984
  store i32 0, i32* %10, align 4, !dbg !2985
  ret void, !dbg !2986
}

; Function Attrs: noinline nounwind optnone
define internal i32 @char_out(i32 noundef %0, i8* noundef %1) #1 !dbg !2987 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !2988, metadata !DIExpression()), !dbg !2989
  store i8* %1, i8** %4, align 4
  call void @llvm.dbg.declare(metadata i8** %4, metadata !2990, metadata !DIExpression()), !dbg !2991
  %5 = load i8*, i8** %4, align 4, !dbg !2992
  %6 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !2993
  %7 = load i32, i32* %3, align 4, !dbg !2994
  %8 = call i32 %6(i32 noundef %7) #10, !dbg !2993
  ret i32 %8, !dbg !2995
}

; Function Attrs: noinline nounwind optnone
define internal void @k_str_out(i8* noundef %0, i32 noundef %1) #1 !dbg !2996 {
  %3 = alloca i8*, align 4
  %4 = alloca i32, align 4
  store i8* %0, i8** %3, align 4
  call void @llvm.dbg.declare(metadata i8** %3, metadata !3000, metadata !DIExpression()), !dbg !3001
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !3002, metadata !DIExpression()), !dbg !3003
  br label %5, !dbg !3004

5:                                                ; preds = %2
  call void asm sideeffect "", "~{memory}"() #9, !dbg !3005, !srcloc !3007
  br label %6, !dbg !3005

6:                                                ; preds = %5
  %7 = load i8*, i8** %3, align 4, !dbg !3008
  %8 = load i32, i32* %4, align 4, !dbg !3009
  call void @z_impl_k_str_out(i8* noundef %7, i32 noundef %8) #10, !dbg !3010
  ret void, !dbg !3011
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_impl_k_str_out(i8* noundef %0, i32 noundef %1) #1 !dbg !3012 {
  %3 = alloca i8*, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  store i8* %0, i8** %3, align 4
  call void @llvm.dbg.declare(metadata i8** %3, metadata !3013, metadata !DIExpression()), !dbg !3014
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !3015, metadata !DIExpression()), !dbg !3016
  call void @llvm.dbg.declare(metadata i32* %5, metadata !3017, metadata !DIExpression()), !dbg !3018
  store i32 0, i32* %5, align 4, !dbg !3019
  br label %6, !dbg !3021

6:                                                ; preds = %18, %2
  %7 = load i32, i32* %5, align 4, !dbg !3022
  %8 = load i32, i32* %4, align 4, !dbg !3024
  %9 = icmp ult i32 %7, %8, !dbg !3025
  br i1 %9, label %10, label %21, !dbg !3026

10:                                               ; preds = %6
  %11 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !3027
  %12 = load i8*, i8** %3, align 4, !dbg !3029
  %13 = load i32, i32* %5, align 4, !dbg !3030
  %14 = getelementptr inbounds i8, i8* %12, i32 %13, !dbg !3029
  %15 = load i8, i8* %14, align 1, !dbg !3029
  %16 = zext i8 %15 to i32, !dbg !3029
  %17 = call i32 %11(i32 noundef %16) #10, !dbg !3027
  br label %18, !dbg !3031

18:                                               ; preds = %10
  %19 = load i32, i32* %5, align 4, !dbg !3032
  %20 = add i32 %19, 1, !dbg !3032
  store i32 %20, i32* %5, align 4, !dbg !3032
  br label %6, !dbg !3033, !llvm.loop !3034

21:                                               ; preds = %6
  ret void, !dbg !3036
}

; Function Attrs: noinline nounwind optnone
define dso_local void @printk(i8* noundef %0, ...) #1 !dbg !3037 {
  %2 = alloca i8*, align 4
  %3 = alloca %struct.__va_list, align 4
  store i8* %0, i8** %2, align 4
  call void @llvm.dbg.declare(metadata i8** %2, metadata !3040, metadata !DIExpression()), !dbg !3041
  call void @llvm.dbg.declare(metadata %struct.__va_list* %3, metadata !3042, metadata !DIExpression()), !dbg !3043
  %4 = bitcast %struct.__va_list* %3 to i8*, !dbg !3044
  call void @llvm.va_start(i8* %4), !dbg !3044
  %5 = load i8*, i8** %2, align 4, !dbg !3045
  %6 = getelementptr inbounds %struct.__va_list, %struct.__va_list* %3, i32 0, i32 0, !dbg !3046
  %7 = bitcast i8** %6 to [1 x i32]*, !dbg !3046
  %8 = load [1 x i32], [1 x i32]* %7, align 4, !dbg !3046
  call void @vprintk(i8* noundef %5, [1 x i32] %8) #10, !dbg !3046
  %9 = bitcast %struct.__va_list* %3 to i8*, !dbg !3047
  call void @llvm.va_end(i8* %9), !dbg !3047
  ret void, !dbg !3048
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #4

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #4

; Function Attrs: noinline nounwind optnone
define dso_local i32 @snprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) #1 !dbg !3049 {
  %4 = alloca i8*, align 4
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 4
  %7 = alloca %struct.__va_list, align 4
  %8 = alloca i32, align 4
  store i8* %0, i8** %4, align 4
  call void @llvm.dbg.declare(metadata i8** %4, metadata !3052, metadata !DIExpression()), !dbg !3053
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !3054, metadata !DIExpression()), !dbg !3055
  store i8* %2, i8** %6, align 4
  call void @llvm.dbg.declare(metadata i8** %6, metadata !3056, metadata !DIExpression()), !dbg !3057
  call void @llvm.dbg.declare(metadata %struct.__va_list* %7, metadata !3058, metadata !DIExpression()), !dbg !3059
  call void @llvm.dbg.declare(metadata i32* %8, metadata !3060, metadata !DIExpression()), !dbg !3061
  %9 = bitcast %struct.__va_list* %7 to i8*, !dbg !3062
  call void @llvm.va_start(i8* %9), !dbg !3062
  %10 = load i8*, i8** %4, align 4, !dbg !3063
  %11 = load i32, i32* %5, align 4, !dbg !3064
  %12 = load i8*, i8** %6, align 4, !dbg !3065
  %13 = getelementptr inbounds %struct.__va_list, %struct.__va_list* %7, i32 0, i32 0, !dbg !3066
  %14 = bitcast i8** %13 to [1 x i32]*, !dbg !3066
  %15 = load [1 x i32], [1 x i32]* %14, align 4, !dbg !3066
  %16 = call i32 @vsnprintk(i8* noundef %10, i32 noundef %11, i8* noundef %12, [1 x i32] %15) #10, !dbg !3066
  store i32 %16, i32* %8, align 4, !dbg !3067
  %17 = bitcast %struct.__va_list* %7 to i8*, !dbg !3068
  call void @llvm.va_end(i8* %17), !dbg !3068
  %18 = load i32, i32* %8, align 4, !dbg !3069
  ret i32 %18, !dbg !3070
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %3) #1 !dbg !3071 {
  %5 = alloca %struct.__va_list, align 4
  %6 = alloca i8*, align 4
  %7 = alloca i32, align 4
  %8 = alloca i8*, align 4
  %9 = alloca %struct.str_context, align 4
  %10 = getelementptr inbounds %struct.__va_list, %struct.__va_list* %5, i32 0, i32 0
  %11 = bitcast i8** %10 to [1 x i32]*
  store [1 x i32] %3, [1 x i32]* %11, align 4
  store i8* %0, i8** %6, align 4
  call void @llvm.dbg.declare(metadata i8** %6, metadata !3074, metadata !DIExpression()), !dbg !3075
  store i32 %1, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !3076, metadata !DIExpression()), !dbg !3077
  store i8* %2, i8** %8, align 4
  call void @llvm.dbg.declare(metadata i8** %8, metadata !3078, metadata !DIExpression()), !dbg !3079
  call void @llvm.dbg.declare(metadata %struct.__va_list* %5, metadata !3080, metadata !DIExpression()), !dbg !3081
  call void @llvm.dbg.declare(metadata %struct.str_context* %9, metadata !3082, metadata !DIExpression()), !dbg !3088
  %12 = getelementptr inbounds %struct.str_context, %struct.str_context* %9, i32 0, i32 0, !dbg !3089
  %13 = load i8*, i8** %6, align 4, !dbg !3090
  store i8* %13, i8** %12, align 4, !dbg !3089
  %14 = getelementptr inbounds %struct.str_context, %struct.str_context* %9, i32 0, i32 1, !dbg !3089
  %15 = load i32, i32* %7, align 4, !dbg !3091
  store i32 %15, i32* %14, align 4, !dbg !3089
  %16 = getelementptr inbounds %struct.str_context, %struct.str_context* %9, i32 0, i32 2, !dbg !3089
  store i32 0, i32* %16, align 4, !dbg !3089
  %17 = bitcast %struct.str_context* %9 to i8*, !dbg !3092
  %18 = load i8*, i8** %8, align 4, !dbg !3093
  %19 = getelementptr inbounds %struct.__va_list, %struct.__va_list* %5, i32 0, i32 0, !dbg !3094
  %20 = bitcast i8** %19 to [1 x i32]*, !dbg !3094
  %21 = load [1 x i32], [1 x i32]* %20, align 4, !dbg !3094
  %22 = call i32 @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, %struct.str_context*)* @str_out to i32 (...)*), i8* noundef %17, i8* noundef %18, [1 x i32] %21) #10, !dbg !3094
  %23 = getelementptr inbounds %struct.str_context, %struct.str_context* %9, i32 0, i32 2, !dbg !3095
  %24 = load i32, i32* %23, align 4, !dbg !3095
  %25 = getelementptr inbounds %struct.str_context, %struct.str_context* %9, i32 0, i32 1, !dbg !3097
  %26 = load i32, i32* %25, align 4, !dbg !3097
  %27 = icmp slt i32 %24, %26, !dbg !3098
  br i1 %27, label %28, label %33, !dbg !3099

28:                                               ; preds = %4
  %29 = load i8*, i8** %6, align 4, !dbg !3100
  %30 = getelementptr inbounds %struct.str_context, %struct.str_context* %9, i32 0, i32 2, !dbg !3102
  %31 = load i32, i32* %30, align 4, !dbg !3102
  %32 = getelementptr inbounds i8, i8* %29, i32 %31, !dbg !3100
  store i8 0, i8* %32, align 1, !dbg !3103
  br label %33, !dbg !3104

33:                                               ; preds = %28, %4
  %34 = getelementptr inbounds %struct.str_context, %struct.str_context* %9, i32 0, i32 2, !dbg !3105
  %35 = load i32, i32* %34, align 4, !dbg !3105
  ret i32 %35, !dbg !3106
}

; Function Attrs: noinline nounwind optnone
define internal i32 @str_out(i32 noundef %0, %struct.str_context* noundef %1) #1 !dbg !3107 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca %struct.str_context*, align 4
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !3111, metadata !DIExpression()), !dbg !3112
  store %struct.str_context* %1, %struct.str_context** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.str_context** %5, metadata !3113, metadata !DIExpression()), !dbg !3114
  %6 = load %struct.str_context*, %struct.str_context** %5, align 4, !dbg !3115
  %7 = getelementptr inbounds %struct.str_context, %struct.str_context* %6, i32 0, i32 0, !dbg !3117
  %8 = load i8*, i8** %7, align 4, !dbg !3117
  %9 = icmp eq i8* %8, null, !dbg !3118
  br i1 %9, label %18, label %10, !dbg !3119

10:                                               ; preds = %2
  %11 = load %struct.str_context*, %struct.str_context** %5, align 4, !dbg !3120
  %12 = getelementptr inbounds %struct.str_context, %struct.str_context* %11, i32 0, i32 2, !dbg !3121
  %13 = load i32, i32* %12, align 4, !dbg !3121
  %14 = load %struct.str_context*, %struct.str_context** %5, align 4, !dbg !3122
  %15 = getelementptr inbounds %struct.str_context, %struct.str_context* %14, i32 0, i32 1, !dbg !3123
  %16 = load i32, i32* %15, align 4, !dbg !3123
  %17 = icmp sge i32 %13, %16, !dbg !3124
  br i1 %17, label %18, label %24, !dbg !3125

18:                                               ; preds = %10, %2
  %19 = load %struct.str_context*, %struct.str_context** %5, align 4, !dbg !3126
  %20 = getelementptr inbounds %struct.str_context, %struct.str_context* %19, i32 0, i32 2, !dbg !3128
  %21 = load i32, i32* %20, align 4, !dbg !3129
  %22 = add nsw i32 %21, 1, !dbg !3129
  store i32 %22, i32* %20, align 4, !dbg !3129
  %23 = load i32, i32* %4, align 4, !dbg !3130
  store i32 %23, i32* %3, align 4, !dbg !3131
  br label %55, !dbg !3131

24:                                               ; preds = %10
  %25 = load %struct.str_context*, %struct.str_context** %5, align 4, !dbg !3132
  %26 = getelementptr inbounds %struct.str_context, %struct.str_context* %25, i32 0, i32 2, !dbg !3134
  %27 = load i32, i32* %26, align 4, !dbg !3134
  %28 = load %struct.str_context*, %struct.str_context** %5, align 4, !dbg !3135
  %29 = getelementptr inbounds %struct.str_context, %struct.str_context* %28, i32 0, i32 1, !dbg !3136
  %30 = load i32, i32* %29, align 4, !dbg !3136
  %31 = sub nsw i32 %30, 1, !dbg !3137
  %32 = icmp eq i32 %27, %31, !dbg !3138
  br i1 %32, label %33, label %42, !dbg !3139

33:                                               ; preds = %24
  %34 = load %struct.str_context*, %struct.str_context** %5, align 4, !dbg !3140
  %35 = getelementptr inbounds %struct.str_context, %struct.str_context* %34, i32 0, i32 0, !dbg !3142
  %36 = load i8*, i8** %35, align 4, !dbg !3142
  %37 = load %struct.str_context*, %struct.str_context** %5, align 4, !dbg !3143
  %38 = getelementptr inbounds %struct.str_context, %struct.str_context* %37, i32 0, i32 2, !dbg !3144
  %39 = load i32, i32* %38, align 4, !dbg !3145
  %40 = add nsw i32 %39, 1, !dbg !3145
  store i32 %40, i32* %38, align 4, !dbg !3145
  %41 = getelementptr inbounds i8, i8* %36, i32 %39, !dbg !3140
  store i8 0, i8* %41, align 1, !dbg !3146
  br label %53, !dbg !3147

42:                                               ; preds = %24
  %43 = load i32, i32* %4, align 4, !dbg !3148
  %44 = trunc i32 %43 to i8, !dbg !3148
  %45 = load %struct.str_context*, %struct.str_context** %5, align 4, !dbg !3150
  %46 = getelementptr inbounds %struct.str_context, %struct.str_context* %45, i32 0, i32 0, !dbg !3151
  %47 = load i8*, i8** %46, align 4, !dbg !3151
  %48 = load %struct.str_context*, %struct.str_context** %5, align 4, !dbg !3152
  %49 = getelementptr inbounds %struct.str_context, %struct.str_context* %48, i32 0, i32 2, !dbg !3153
  %50 = load i32, i32* %49, align 4, !dbg !3154
  %51 = add nsw i32 %50, 1, !dbg !3154
  store i32 %51, i32* %49, align 4, !dbg !3154
  %52 = getelementptr inbounds i8, i8* %47, i32 %50, !dbg !3150
  store i8 %44, i8* %52, align 1, !dbg !3155
  br label %53

53:                                               ; preds = %42, %33
  %54 = load i32, i32* %4, align 4, !dbg !3156
  store i32 %54, i32* %3, align 4, !dbg !3157
  br label %55, !dbg !3157

55:                                               ; preds = %53, %18
  %56 = load i32, i32* %3, align 4, !dbg !3158
  ret i32 %56, !dbg !3158
}

; Function Attrs: noinline noreturn nounwind optnone
define dso_local void @z_thread_entry(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #5 !dbg !3159 {
  %5 = alloca void (i8*, i8*, i8*)*, align 4
  %6 = alloca i8*, align 4
  %7 = alloca i8*, align 4
  %8 = alloca i8*, align 4
  store void (i8*, i8*, i8*)* %0, void (i8*, i8*, i8*)** %5, align 4
  call void @llvm.dbg.declare(metadata void (i8*, i8*, i8*)** %5, metadata !3163, metadata !DIExpression()), !dbg !3164
  store i8* %1, i8** %6, align 4
  call void @llvm.dbg.declare(metadata i8** %6, metadata !3165, metadata !DIExpression()), !dbg !3166
  store i8* %2, i8** %7, align 4
  call void @llvm.dbg.declare(metadata i8** %7, metadata !3167, metadata !DIExpression()), !dbg !3168
  store i8* %3, i8** %8, align 4
  call void @llvm.dbg.declare(metadata i8** %8, metadata !3169, metadata !DIExpression()), !dbg !3170
  %9 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %5, align 4, !dbg !3171
  %10 = load i8*, i8** %6, align 4, !dbg !3172
  %11 = load i8*, i8** %7, align 4, !dbg !3173
  %12 = load i8*, i8** %8, align 4, !dbg !3174
  call void %9(i8* noundef %10, i8* noundef %11, i8* noundef %12) #10, !dbg !3171
  %13 = call %struct.k_thread.60* @k_current_get() #11, !dbg !3175
  call void @k_thread_abort(%struct.k_thread.60* noundef %13) #10, !dbg !3176
  unreachable, !dbg !3177
}

; Function Attrs: noinline nounwind optnone readnone willreturn
define internal %struct.k_thread.60* @k_current_get() #6 !dbg !3178 {
  %1 = call %struct.k_thread.60* @z_current_get() #11, !dbg !3276
  ret %struct.k_thread.60* %1, !dbg !3277
}

; Function Attrs: noinline nounwind optnone
define internal void @k_thread_abort(%struct.k_thread.60* noundef %0) #1 !dbg !3278 {
  %2 = alloca %struct.k_thread.60*, align 4
  store %struct.k_thread.60* %0, %struct.k_thread.60** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.60** %2, metadata !3281, metadata !DIExpression()), !dbg !3282
  br label %3, !dbg !3283

3:                                                ; preds = %1
  call void asm sideeffect "", "~{memory}"() #9, !dbg !3284, !srcloc !3286
  br label %4, !dbg !3284

4:                                                ; preds = %3
  %5 = load %struct.k_thread.60*, %struct.k_thread.60** %2, align 4, !dbg !3287
  call void bitcast (void (%struct.k_thread.180*)* @z_impl_k_thread_abort to void (%struct.k_thread.60*)*)(%struct.k_thread.60* noundef %5) #10, !dbg !3288
  ret void, !dbg !3289
}

; Function Attrs: noinline nounwind optnone readnone willreturn
define internal %struct.k_thread.60* @z_current_get() #6 !dbg !3290 {
  br label %1, !dbg !3291

1:                                                ; preds = %0
  call void asm sideeffect "", "~{memory}"() #9, !dbg !3292, !srcloc !3294
  br label %2, !dbg !3292

2:                                                ; preds = %1
  %3 = call %struct.k_thread.60* bitcast (%struct.k_thread.180* ()* @z_impl_z_current_get to %struct.k_thread.60* ()*)() #10, !dbg !3295
  ret %struct.k_thread.60* %3, !dbg !3296
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @z_cbvprintf_impl(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef %4) #1 !dbg !3297 {
  %6 = alloca i32, align 4
  %7 = alloca %struct.__va_list, align 4
  %8 = alloca i32 (...)*, align 4
  %9 = alloca i8*, align 4
  %10 = alloca i8*, align 4
  %11 = alloca i32, align 4
  %12 = alloca [22 x i8], align 1
  %13 = alloca i32, align 4
  %14 = alloca i64, align 8
  %15 = alloca i8, align 1
  %16 = alloca i32, align 4
  %17 = alloca %struct.anon, align 8
  %18 = alloca %struct.conversion*, align 4
  %19 = alloca %union.argument_value*, align 4
  %20 = alloca i8*, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i8*, align 4
  %24 = alloca i8*, align 4
  %25 = alloca i8, align 1
  %26 = alloca i32, align 4
  %27 = alloca i32, align 4
  %28 = alloca i32, align 4
  %29 = alloca i32, align 4
  %30 = alloca i32, align 4
  %31 = alloca i32, align 4
  %32 = alloca i32, align 4
  %33 = alloca i32, align 4
  %34 = alloca i32, align 4
  %35 = alloca i8, align 1
  %36 = alloca i32, align 4
  %37 = alloca i32, align 4
  %38 = alloca i32, align 4
  %39 = alloca i32, align 4
  %40 = alloca i32, align 4
  %41 = alloca i32, align 4
  %42 = alloca i32, align 4
  %43 = alloca i32, align 4
  %44 = getelementptr inbounds %struct.__va_list, %struct.__va_list* %7, i32 0, i32 0
  %45 = bitcast i8** %44 to [1 x i32]*
  store [1 x i32] %3, [1 x i32]* %45, align 4
  store i32 (...)* %0, i32 (...)** %8, align 4
  call void @llvm.dbg.declare(metadata i32 (...)** %8, metadata !3306, metadata !DIExpression()), !dbg !3307
  store i8* %1, i8** %9, align 4
  call void @llvm.dbg.declare(metadata i8** %9, metadata !3308, metadata !DIExpression()), !dbg !3309
  store i8* %2, i8** %10, align 4
  call void @llvm.dbg.declare(metadata i8** %10, metadata !3310, metadata !DIExpression()), !dbg !3311
  call void @llvm.dbg.declare(metadata %struct.__va_list* %7, metadata !3312, metadata !DIExpression()), !dbg !3313
  store i32 %4, i32* %11, align 4
  call void @llvm.dbg.declare(metadata i32* %11, metadata !3314, metadata !DIExpression()), !dbg !3315
  call void @llvm.dbg.declare(metadata [22 x i8]* %12, metadata !3316, metadata !DIExpression()), !dbg !3320
  call void @llvm.dbg.declare(metadata i32* %13, metadata !3321, metadata !DIExpression()), !dbg !3322
  store i32 0, i32* %13, align 4, !dbg !3322
  call void @llvm.dbg.declare(metadata i64* %14, metadata !3323, metadata !DIExpression()), !dbg !3324
  call void @llvm.dbg.declare(metadata i8* %15, metadata !3325, metadata !DIExpression()), !dbg !3327
  %46 = load i32, i32* %11, align 4, !dbg !3328
  %47 = and i32 %46, 1, !dbg !3329
  %48 = icmp eq i32 %47, 1, !dbg !3330
  %49 = zext i1 %48 to i8, !dbg !3327
  store i8 %49, i8* %15, align 1, !dbg !3327
  br label %50, !dbg !3331

50:                                               ; preds = %833, %581, %432, %77, %5
  %51 = load i8*, i8** %10, align 4, !dbg !3332
  %52 = load i8, i8* %51, align 1, !dbg !3333
  %53 = zext i8 %52 to i32, !dbg !3333
  %54 = icmp ne i32 %53, 0, !dbg !3334
  br i1 %54, label %55, label %834, !dbg !3331

55:                                               ; preds = %50
  %56 = load i8*, i8** %10, align 4, !dbg !3335
  %57 = load i8, i8* %56, align 1, !dbg !3338
  %58 = zext i8 %57 to i32, !dbg !3338
  %59 = icmp ne i32 %58, 37, !dbg !3339
  br i1 %59, label %60, label %78, !dbg !3340

60:                                               ; preds = %55
  br label %61, !dbg !3341

61:                                               ; preds = %60
  call void @llvm.dbg.declare(metadata i32* %16, metadata !3343, metadata !DIExpression()), !dbg !3345
  %62 = load i32 (...)*, i32 (...)** %8, align 4, !dbg !3345
  %63 = load i8*, i8** %10, align 4, !dbg !3345
  %64 = getelementptr inbounds i8, i8* %63, i32 1, !dbg !3345
  store i8* %64, i8** %10, align 4, !dbg !3345
  %65 = load i8, i8* %63, align 1, !dbg !3345
  %66 = zext i8 %65 to i32, !dbg !3345
  %67 = load i8*, i8** %9, align 4, !dbg !3345
  %68 = bitcast i32 (...)* %62 to i32 (i32, i8*)*, !dbg !3345
  %69 = call i32 %68(i32 noundef %66, i8* noundef %67) #10, !dbg !3345
  store i32 %69, i32* %16, align 4, !dbg !3345
  %70 = load i32, i32* %16, align 4, !dbg !3346
  %71 = icmp slt i32 %70, 0, !dbg !3346
  br i1 %71, label %72, label %74, !dbg !3345

72:                                               ; preds = %61
  %73 = load i32, i32* %16, align 4, !dbg !3348
  store i32 %73, i32* %6, align 4, !dbg !3348
  br label %836, !dbg !3348

74:                                               ; preds = %61
  %75 = load i32, i32* %13, align 4, !dbg !3345
  %76 = add i32 %75, 1, !dbg !3345
  store i32 %76, i32* %13, align 4, !dbg !3345
  br label %77, !dbg !3345

77:                                               ; preds = %74
  br label %50, !dbg !3350, !llvm.loop !3351

78:                                               ; preds = %55
  call void @llvm.dbg.declare(metadata %struct.anon* %17, metadata !3353, metadata !DIExpression()), !dbg !3398
  %79 = bitcast %struct.anon* %17 to i8*, !dbg !3398
  call void @llvm.memset.p0i8.i32(i8* align 8 %79, i8 0, i32 24, i1 false), !dbg !3398
  call void @llvm.dbg.declare(metadata %struct.conversion** %18, metadata !3399, metadata !DIExpression()), !dbg !3402
  %80 = getelementptr inbounds %struct.anon, %struct.anon* %17, i32 0, i32 1, !dbg !3403
  store %struct.conversion* %80, %struct.conversion** %18, align 4, !dbg !3402
  call void @llvm.dbg.declare(metadata %union.argument_value** %19, metadata !3404, metadata !DIExpression()), !dbg !3407
  %81 = getelementptr inbounds %struct.anon, %struct.anon* %17, i32 0, i32 0, !dbg !3408
  store %union.argument_value* %81, %union.argument_value** %19, align 4, !dbg !3407
  call void @llvm.dbg.declare(metadata i8** %20, metadata !3409, metadata !DIExpression()), !dbg !3410
  %82 = load i8*, i8** %10, align 4, !dbg !3411
  store i8* %82, i8** %20, align 4, !dbg !3410
  call void @llvm.dbg.declare(metadata i32* %21, metadata !3412, metadata !DIExpression()), !dbg !3413
  store i32 -1, i32* %21, align 4, !dbg !3413
  call void @llvm.dbg.declare(metadata i32* %22, metadata !3414, metadata !DIExpression()), !dbg !3415
  store i32 -1, i32* %22, align 4, !dbg !3415
  call void @llvm.dbg.declare(metadata i8** %23, metadata !3416, metadata !DIExpression()), !dbg !3417
  store i8* null, i8** %23, align 4, !dbg !3417
  call void @llvm.dbg.declare(metadata i8** %24, metadata !3418, metadata !DIExpression()), !dbg !3419
  %83 = getelementptr inbounds [22 x i8], [22 x i8]* %12, i32 0, i32 0, !dbg !3420
  %84 = getelementptr inbounds i8, i8* %83, i32 22, !dbg !3421
  store i8* %84, i8** %24, align 4, !dbg !3419
  call void @llvm.dbg.declare(metadata i8* %25, metadata !3422, metadata !DIExpression()), !dbg !3423
  store i8 0, i8* %25, align 1, !dbg !3423
  %85 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !3424
  %86 = load i8*, i8** %20, align 4, !dbg !3425
  %87 = call i8* @extract_conversion(%struct.conversion* noundef %85, i8* noundef %86) #10, !dbg !3426
  store i8* %87, i8** %10, align 4, !dbg !3427
  %88 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !3428
  %89 = bitcast %struct.conversion* %88 to i24*, !dbg !3430
  %90 = load i24, i24* %89, align 4, !dbg !3430
  %91 = lshr i24 %90, 8, !dbg !3430
  %92 = and i24 %91, 1, !dbg !3430
  %93 = trunc i24 %92 to i1, !dbg !3430
  br i1 %93, label %94, label %111, !dbg !3431

94:                                               ; preds = %78
  %95 = bitcast %struct.__va_list* %7 to i8**, !dbg !3432
  %96 = load i8*, i8** %95, align 4, !dbg !3432
  %97 = getelementptr inbounds i8, i8* %96, i32 4, !dbg !3432
  store i8* %97, i8** %95, align 4, !dbg !3432
  %98 = bitcast i8* %96 to i32*, !dbg !3432
  %99 = load i32, i32* %98, align 4, !dbg !3432
  store i32 %99, i32* %21, align 4, !dbg !3434
  %100 = load i32, i32* %21, align 4, !dbg !3435
  %101 = icmp slt i32 %100, 0, !dbg !3437
  br i1 %101, label %102, label %110, !dbg !3438

102:                                              ; preds = %94
  %103 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !3439
  %104 = bitcast %struct.conversion* %103 to i24*, !dbg !3441
  %105 = load i24, i24* %104, align 4, !dbg !3442
  %106 = and i24 %105, -5, !dbg !3442
  %107 = or i24 %106, 4, !dbg !3442
  store i24 %107, i24* %104, align 4, !dbg !3442
  %108 = load i32, i32* %21, align 4, !dbg !3443
  %109 = sub nsw i32 0, %108, !dbg !3444
  store i32 %109, i32* %21, align 4, !dbg !3445
  br label %110, !dbg !3446

110:                                              ; preds = %102, %94
  br label %125, !dbg !3447

111:                                              ; preds = %78
  %112 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !3448
  %113 = bitcast %struct.conversion* %112 to i24*, !dbg !3450
  %114 = load i24, i24* %113, align 4, !dbg !3450
  %115 = lshr i24 %114, 7, !dbg !3450
  %116 = and i24 %115, 1, !dbg !3450
  %117 = trunc i24 %116 to i1, !dbg !3450
  br i1 %117, label %118, label %123, !dbg !3451

118:                                              ; preds = %111
  %119 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !3452
  %120 = getelementptr inbounds %struct.conversion, %struct.conversion* %119, i32 0, i32 2, !dbg !3454
  %121 = bitcast %union.anon.68* %120 to i32*, !dbg !3454
  %122 = load i32, i32* %121, align 4, !dbg !3454
  store i32 %122, i32* %21, align 4, !dbg !3455
  br label %124, !dbg !3456

123:                                              ; preds = %111
  br label %124

124:                                              ; preds = %123, %118
  br label %125

125:                                              ; preds = %124, %110
  %126 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !3457
  %127 = bitcast %struct.conversion* %126 to i24*, !dbg !3459
  %128 = load i24, i24* %127, align 4, !dbg !3459
  %129 = lshr i24 %128, 10, !dbg !3459
  %130 = and i24 %129, 1, !dbg !3459
  %131 = trunc i24 %130 to i1, !dbg !3459
  br i1 %131, label %132, label %149, !dbg !3460

132:                                              ; preds = %125
  call void @llvm.dbg.declare(metadata i32* %26, metadata !3461, metadata !DIExpression()), !dbg !3463
  %133 = bitcast %struct.__va_list* %7 to i8**, !dbg !3464
  %134 = load i8*, i8** %133, align 4, !dbg !3464
  %135 = getelementptr inbounds i8, i8* %134, i32 4, !dbg !3464
  store i8* %135, i8** %133, align 4, !dbg !3464
  %136 = bitcast i8* %134 to i32*, !dbg !3464
  %137 = load i32, i32* %136, align 4, !dbg !3464
  store i32 %137, i32* %26, align 4, !dbg !3463
  %138 = load i32, i32* %26, align 4, !dbg !3465
  %139 = icmp slt i32 %138, 0, !dbg !3467
  br i1 %139, label %140, label %146, !dbg !3468

140:                                              ; preds = %132
  %141 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !3469
  %142 = bitcast %struct.conversion* %141 to i24*, !dbg !3471
  %143 = load i24, i24* %142, align 4, !dbg !3472
  %144 = and i24 %143, -513, !dbg !3472
  %145 = or i24 %144, 0, !dbg !3472
  store i24 %145, i24* %142, align 4, !dbg !3472
  br label %148, !dbg !3473

146:                                              ; preds = %132
  %147 = load i32, i32* %26, align 4, !dbg !3474
  store i32 %147, i32* %22, align 4, !dbg !3476
  br label %148

148:                                              ; preds = %146, %140
  br label %163, !dbg !3477

149:                                              ; preds = %125
  %150 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !3478
  %151 = bitcast %struct.conversion* %150 to i24*, !dbg !3480
  %152 = load i24, i24* %151, align 4, !dbg !3480
  %153 = lshr i24 %152, 9, !dbg !3480
  %154 = and i24 %153, 1, !dbg !3480
  %155 = trunc i24 %154 to i1, !dbg !3480
  br i1 %155, label %156, label %161, !dbg !3481

156:                                              ; preds = %149
  %157 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !3482
  %158 = getelementptr inbounds %struct.conversion, %struct.conversion* %157, i32 0, i32 3, !dbg !3484
  %159 = bitcast %union.anon.68* %158 to i32*, !dbg !3484
  %160 = load i32, i32* %159, align 4, !dbg !3484
  store i32 %160, i32* %22, align 4, !dbg !3485
  br label %162, !dbg !3486

161:                                              ; preds = %149
  br label %162

162:                                              ; preds = %161, %156
  br label %163

163:                                              ; preds = %162, %148
  %164 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !3487
  %165 = getelementptr inbounds %struct.conversion, %struct.conversion* %164, i32 0, i32 2, !dbg !3488
  %166 = bitcast %union.anon.68* %165 to i32*, !dbg !3488
  store i32 0, i32* %166, align 4, !dbg !3489
  %167 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !3490
  %168 = getelementptr inbounds %struct.conversion, %struct.conversion* %167, i32 0, i32 3, !dbg !3491
  %169 = bitcast %union.anon.68* %168 to i32*, !dbg !3491
  store i32 0, i32* %169, align 4, !dbg !3492
  call void @llvm.dbg.declare(metadata i32* %27, metadata !3493, metadata !DIExpression()), !dbg !3494
  %170 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !3495
  %171 = bitcast %struct.conversion* %170 to i24*, !dbg !3496
  %172 = load i24, i24* %171, align 4, !dbg !3496
  %173 = lshr i24 %172, 16, !dbg !3496
  %174 = and i24 %173, 7, !dbg !3496
  %175 = zext i24 %174 to i32, !dbg !3496
  store i32 %175, i32* %27, align 4, !dbg !3494
  call void @llvm.dbg.declare(metadata i32* %28, metadata !3497, metadata !DIExpression()), !dbg !3498
  %176 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !3499
  %177 = bitcast %struct.conversion* %176 to i24*, !dbg !3500
  %178 = load i24, i24* %177, align 4, !dbg !3500
  %179 = lshr i24 %178, 11, !dbg !3500
  %180 = and i24 %179, 15, !dbg !3500
  %181 = zext i24 %180 to i32, !dbg !3500
  store i32 %181, i32* %28, align 4, !dbg !3498
  %182 = load i32, i32* %27, align 4, !dbg !3501
  %183 = icmp eq i32 %182, 1, !dbg !3503
  br i1 %183, label %184, label %262, !dbg !3504

184:                                              ; preds = %163
  %185 = load i32, i32* %28, align 4, !dbg !3505
  switch i32 %185, label %186 [
    i32 0, label %187
    i32 1, label %187
    i32 2, label %187
    i32 3, label %196
    i32 4, label %205
    i32 5, label %217
    i32 6, label %229
    i32 7, label %229
  ], !dbg !3507

186:                                              ; preds = %184
  br label %187, !dbg !3508

187:                                              ; preds = %184, %184, %184, %186
  %188 = bitcast %struct.__va_list* %7 to i8**, !dbg !3509
  %189 = load i8*, i8** %188, align 4, !dbg !3509
  %190 = getelementptr inbounds i8, i8* %189, i32 4, !dbg !3509
  store i8* %190, i8** %188, align 4, !dbg !3509
  %191 = bitcast i8* %189 to i32*, !dbg !3509
  %192 = load i32, i32* %191, align 4, !dbg !3509
  %193 = sext i32 %192 to i64, !dbg !3509
  %194 = load %union.argument_value*, %union.argument_value** %19, align 4, !dbg !3511
  %195 = bitcast %union.argument_value* %194 to i64*, !dbg !3512
  store i64 %193, i64* %195, align 8, !dbg !3513
  br label %238, !dbg !3514

196:                                              ; preds = %184
  %197 = bitcast %struct.__va_list* %7 to i8**, !dbg !3515
  %198 = load i8*, i8** %197, align 4, !dbg !3515
  %199 = getelementptr inbounds i8, i8* %198, i32 4, !dbg !3515
  store i8* %199, i8** %197, align 4, !dbg !3515
  %200 = bitcast i8* %198 to i32*, !dbg !3515
  %201 = load i32, i32* %200, align 4, !dbg !3515
  %202 = sext i32 %201 to i64, !dbg !3515
  %203 = load %union.argument_value*, %union.argument_value** %19, align 4, !dbg !3518
  %204 = bitcast %union.argument_value* %203 to i64*, !dbg !3519
  store i64 %202, i64* %204, align 8, !dbg !3520
  br label %238, !dbg !3521

205:                                              ; preds = %184
  %206 = bitcast %struct.__va_list* %7 to i8**, !dbg !3522
  %207 = load i8*, i8** %206, align 4, !dbg !3522
  %208 = ptrtoint i8* %207 to i32, !dbg !3522
  %209 = add i32 %208, 7, !dbg !3522
  %210 = and i32 %209, -8, !dbg !3522
  %211 = inttoptr i32 %210 to i8*, !dbg !3522
  %212 = getelementptr inbounds i8, i8* %211, i32 8, !dbg !3522
  store i8* %212, i8** %206, align 4, !dbg !3522
  %213 = bitcast i8* %211 to i64*, !dbg !3522
  %214 = load i64, i64* %213, align 8, !dbg !3522
  %215 = load %union.argument_value*, %union.argument_value** %19, align 4, !dbg !3523
  %216 = bitcast %union.argument_value* %215 to i64*, !dbg !3524
  store i64 %214, i64* %216, align 8, !dbg !3525
  br label %238, !dbg !3526

217:                                              ; preds = %184
  %218 = bitcast %struct.__va_list* %7 to i8**, !dbg !3527
  %219 = load i8*, i8** %218, align 4, !dbg !3527
  %220 = ptrtoint i8* %219 to i32, !dbg !3527
  %221 = add i32 %220, 7, !dbg !3527
  %222 = and i32 %221, -8, !dbg !3527
  %223 = inttoptr i32 %222 to i8*, !dbg !3527
  %224 = getelementptr inbounds i8, i8* %223, i32 8, !dbg !3527
  store i8* %224, i8** %218, align 4, !dbg !3527
  %225 = bitcast i8* %223 to i64*, !dbg !3527
  %226 = load i64, i64* %225, align 8, !dbg !3527
  %227 = load %union.argument_value*, %union.argument_value** %19, align 4, !dbg !3528
  %228 = bitcast %union.argument_value* %227 to i64*, !dbg !3529
  store i64 %226, i64* %228, align 8, !dbg !3530
  br label %238, !dbg !3531

229:                                              ; preds = %184, %184
  %230 = bitcast %struct.__va_list* %7 to i8**, !dbg !3532
  %231 = load i8*, i8** %230, align 4, !dbg !3532
  %232 = getelementptr inbounds i8, i8* %231, i32 4, !dbg !3532
  store i8* %232, i8** %230, align 4, !dbg !3532
  %233 = bitcast i8* %231 to i32*, !dbg !3532
  %234 = load i32, i32* %233, align 4, !dbg !3532
  %235 = sext i32 %234 to i64, !dbg !3533
  %236 = load %union.argument_value*, %union.argument_value** %19, align 4, !dbg !3534
  %237 = bitcast %union.argument_value* %236 to i64*, !dbg !3535
  store i64 %235, i64* %237, align 8, !dbg !3536
  br label %238, !dbg !3537

238:                                              ; preds = %229, %217, %205, %196, %187
  %239 = load i32, i32* %28, align 4, !dbg !3538
  %240 = icmp eq i32 %239, 1, !dbg !3540
  br i1 %240, label %241, label %249, !dbg !3541

241:                                              ; preds = %238
  %242 = load %union.argument_value*, %union.argument_value** %19, align 4, !dbg !3542
  %243 = bitcast %union.argument_value* %242 to i64*, !dbg !3544
  %244 = load i64, i64* %243, align 8, !dbg !3544
  %245 = trunc i64 %244 to i8, !dbg !3545
  %246 = sext i8 %245 to i64, !dbg !3545
  %247 = load %union.argument_value*, %union.argument_value** %19, align 4, !dbg !3546
  %248 = bitcast %union.argument_value* %247 to i64*, !dbg !3547
  store i64 %246, i64* %248, align 8, !dbg !3548
  br label %261, !dbg !3549

249:                                              ; preds = %238
  %250 = load i32, i32* %28, align 4, !dbg !3550
  %251 = icmp eq i32 %250, 2, !dbg !3552
  br i1 %251, label %252, label %260, !dbg !3553

252:                                              ; preds = %249
  %253 = load %union.argument_value*, %union.argument_value** %19, align 4, !dbg !3554
  %254 = bitcast %union.argument_value* %253 to i64*, !dbg !3556
  %255 = load i64, i64* %254, align 8, !dbg !3556
  %256 = trunc i64 %255 to i16, !dbg !3557
  %257 = sext i16 %256 to i64, !dbg !3557
  %258 = load %union.argument_value*, %union.argument_value** %19, align 4, !dbg !3558
  %259 = bitcast %union.argument_value* %258 to i64*, !dbg !3559
  store i64 %257, i64* %259, align 8, !dbg !3560
  br label %260, !dbg !3561

260:                                              ; preds = %252, %249
  br label %261

261:                                              ; preds = %260, %241
  br label %404, !dbg !3562

262:                                              ; preds = %163
  %263 = load i32, i32* %27, align 4, !dbg !3563
  %264 = icmp eq i32 %263, 2, !dbg !3565
  br i1 %264, label %265, label %359, !dbg !3566

265:                                              ; preds = %262
  %266 = load i32, i32* %28, align 4, !dbg !3567
  switch i32 %266, label %267 [
    i32 0, label %268
    i32 1, label %268
    i32 2, label %268
    i32 3, label %277
    i32 4, label %302
    i32 5, label %314
    i32 6, label %326
    i32 7, label %326
  ], !dbg !3569

267:                                              ; preds = %265
  br label %268, !dbg !3570

268:                                              ; preds = %265, %265, %265, %267
  %269 = bitcast %struct.__va_list* %7 to i8**, !dbg !3571
  %270 = load i8*, i8** %269, align 4, !dbg !3571
  %271 = getelementptr inbounds i8, i8* %270, i32 4, !dbg !3571
  store i8* %271, i8** %269, align 4, !dbg !3571
  %272 = bitcast i8* %270 to i32*, !dbg !3571
  %273 = load i32, i32* %272, align 4, !dbg !3571
  %274 = zext i32 %273 to i64, !dbg !3571
  %275 = load %union.argument_value*, %union.argument_value** %19, align 4, !dbg !3573
  %276 = bitcast %union.argument_value* %275 to i64*, !dbg !3574
  store i64 %274, i64* %276, align 8, !dbg !3575
  br label %335, !dbg !3576

277:                                              ; preds = %265
  %278 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !3577
  %279 = getelementptr inbounds %struct.conversion, %struct.conversion* %278, i32 0, i32 1, !dbg !3579
  %280 = load i8, i8* %279, align 1, !dbg !3579
  %281 = zext i8 %280 to i32, !dbg !3577
  %282 = icmp eq i32 %281, 99, !dbg !3580
  br i1 %282, label %283, label %292, !dbg !3581

283:                                              ; preds = %277
  %284 = bitcast %struct.__va_list* %7 to i8**, !dbg !3582
  %285 = load i8*, i8** %284, align 4, !dbg !3582
  %286 = getelementptr inbounds i8, i8* %285, i32 4, !dbg !3582
  store i8* %286, i8** %284, align 4, !dbg !3582
  %287 = bitcast i8* %285 to i32*, !dbg !3582
  %288 = load i32, i32* %287, align 4, !dbg !3582
  %289 = zext i32 %288 to i64, !dbg !3584
  %290 = load %union.argument_value*, %union.argument_value** %19, align 4, !dbg !3585
  %291 = bitcast %union.argument_value* %290 to i64*, !dbg !3586
  store i64 %289, i64* %291, align 8, !dbg !3587
  br label %301, !dbg !3588

292:                                              ; preds = %277
  %293 = bitcast %struct.__va_list* %7 to i8**, !dbg !3589
  %294 = load i8*, i8** %293, align 4, !dbg !3589
  %295 = getelementptr inbounds i8, i8* %294, i32 4, !dbg !3589
  store i8* %295, i8** %293, align 4, !dbg !3589
  %296 = bitcast i8* %294 to i32*, !dbg !3589
  %297 = load i32, i32* %296, align 4, !dbg !3589
  %298 = zext i32 %297 to i64, !dbg !3589
  %299 = load %union.argument_value*, %union.argument_value** %19, align 4, !dbg !3591
  %300 = bitcast %union.argument_value* %299 to i64*, !dbg !3592
  store i64 %298, i64* %300, align 8, !dbg !3593
  br label %301

301:                                              ; preds = %292, %283
  br label %335, !dbg !3594

302:                                              ; preds = %265
  %303 = bitcast %struct.__va_list* %7 to i8**, !dbg !3595
  %304 = load i8*, i8** %303, align 4, !dbg !3595
  %305 = ptrtoint i8* %304 to i32, !dbg !3595
  %306 = add i32 %305, 7, !dbg !3595
  %307 = and i32 %306, -8, !dbg !3595
  %308 = inttoptr i32 %307 to i8*, !dbg !3595
  %309 = getelementptr inbounds i8, i8* %308, i32 8, !dbg !3595
  store i8* %309, i8** %303, align 4, !dbg !3595
  %310 = bitcast i8* %308 to i64*, !dbg !3595
  %311 = load i64, i64* %310, align 8, !dbg !3595
  %312 = load %union.argument_value*, %union.argument_value** %19, align 4, !dbg !3596
  %313 = bitcast %union.argument_value* %312 to i64*, !dbg !3597
  store i64 %311, i64* %313, align 8, !dbg !3598
  br label %335, !dbg !3599

314:                                              ; preds = %265
  %315 = bitcast %struct.__va_list* %7 to i8**, !dbg !3600
  %316 = load i8*, i8** %315, align 4, !dbg !3600
  %317 = ptrtoint i8* %316 to i32, !dbg !3600
  %318 = add i32 %317, 7, !dbg !3600
  %319 = and i32 %318, -8, !dbg !3600
  %320 = inttoptr i32 %319 to i8*, !dbg !3600
  %321 = getelementptr inbounds i8, i8* %320, i32 8, !dbg !3600
  store i8* %321, i8** %315, align 4, !dbg !3600
  %322 = bitcast i8* %320 to i64*, !dbg !3600
  %323 = load i64, i64* %322, align 8, !dbg !3600
  %324 = load %union.argument_value*, %union.argument_value** %19, align 4, !dbg !3601
  %325 = bitcast %union.argument_value* %324 to i64*, !dbg !3602
  store i64 %323, i64* %325, align 8, !dbg !3603
  br label %335, !dbg !3604

326:                                              ; preds = %265, %265
  %327 = bitcast %struct.__va_list* %7 to i8**, !dbg !3605
  %328 = load i8*, i8** %327, align 4, !dbg !3605
  %329 = getelementptr inbounds i8, i8* %328, i32 4, !dbg !3605
  store i8* %329, i8** %327, align 4, !dbg !3605
  %330 = bitcast i8* %328 to i32*, !dbg !3605
  %331 = load i32, i32* %330, align 4, !dbg !3605
  %332 = zext i32 %331 to i64, !dbg !3606
  %333 = load %union.argument_value*, %union.argument_value** %19, align 4, !dbg !3607
  %334 = bitcast %union.argument_value* %333 to i64*, !dbg !3608
  store i64 %332, i64* %334, align 8, !dbg !3609
  br label %335, !dbg !3610

335:                                              ; preds = %326, %314, %302, %301, %268
  %336 = load i32, i32* %28, align 4, !dbg !3611
  %337 = icmp eq i32 %336, 1, !dbg !3613
  br i1 %337, label %338, label %346, !dbg !3614

338:                                              ; preds = %335
  %339 = load %union.argument_value*, %union.argument_value** %19, align 4, !dbg !3615
  %340 = bitcast %union.argument_value* %339 to i64*, !dbg !3617
  %341 = load i64, i64* %340, align 8, !dbg !3617
  %342 = trunc i64 %341 to i8, !dbg !3618
  %343 = zext i8 %342 to i64, !dbg !3618
  %344 = load %union.argument_value*, %union.argument_value** %19, align 4, !dbg !3619
  %345 = bitcast %union.argument_value* %344 to i64*, !dbg !3620
  store i64 %343, i64* %345, align 8, !dbg !3621
  br label %358, !dbg !3622

346:                                              ; preds = %335
  %347 = load i32, i32* %28, align 4, !dbg !3623
  %348 = icmp eq i32 %347, 2, !dbg !3625
  br i1 %348, label %349, label %357, !dbg !3626

349:                                              ; preds = %346
  %350 = load %union.argument_value*, %union.argument_value** %19, align 4, !dbg !3627
  %351 = bitcast %union.argument_value* %350 to i64*, !dbg !3629
  %352 = load i64, i64* %351, align 8, !dbg !3629
  %353 = trunc i64 %352 to i16, !dbg !3630
  %354 = zext i16 %353 to i64, !dbg !3630
  %355 = load %union.argument_value*, %union.argument_value** %19, align 4, !dbg !3631
  %356 = bitcast %union.argument_value* %355 to i64*, !dbg !3632
  store i64 %354, i64* %356, align 8, !dbg !3633
  br label %357, !dbg !3634

357:                                              ; preds = %349, %346
  br label %358

358:                                              ; preds = %357, %338
  br label %403, !dbg !3635

359:                                              ; preds = %262
  %360 = load i32, i32* %27, align 4, !dbg !3636
  %361 = icmp eq i32 %360, 4, !dbg !3638
  br i1 %361, label %362, label %390, !dbg !3639

362:                                              ; preds = %359
  %363 = load i32, i32* %28, align 4, !dbg !3640
  %364 = icmp eq i32 %363, 8, !dbg !3643
  br i1 %364, label %365, label %377, !dbg !3644

365:                                              ; preds = %362
  %366 = bitcast %struct.__va_list* %7 to i8**, !dbg !3645
  %367 = load i8*, i8** %366, align 4, !dbg !3645
  %368 = ptrtoint i8* %367 to i32, !dbg !3645
  %369 = add i32 %368, 7, !dbg !3645
  %370 = and i32 %369, -8, !dbg !3645
  %371 = inttoptr i32 %370 to i8*, !dbg !3645
  %372 = getelementptr inbounds i8, i8* %371, i32 8, !dbg !3645
  store i8* %372, i8** %366, align 4, !dbg !3645
  %373 = bitcast i8* %371 to double*, !dbg !3645
  %374 = load double, double* %373, align 8, !dbg !3645
  %375 = load %union.argument_value*, %union.argument_value** %19, align 4, !dbg !3647
  %376 = bitcast %union.argument_value* %375 to double*, !dbg !3648
  store double %374, double* %376, align 8, !dbg !3649
  br label %389, !dbg !3650

377:                                              ; preds = %362
  %378 = bitcast %struct.__va_list* %7 to i8**, !dbg !3651
  %379 = load i8*, i8** %378, align 4, !dbg !3651
  %380 = ptrtoint i8* %379 to i32, !dbg !3651
  %381 = add i32 %380, 7, !dbg !3651
  %382 = and i32 %381, -8, !dbg !3651
  %383 = inttoptr i32 %382 to i8*, !dbg !3651
  %384 = getelementptr inbounds i8, i8* %383, i32 8, !dbg !3651
  store i8* %384, i8** %378, align 4, !dbg !3651
  %385 = bitcast i8* %383 to double*, !dbg !3651
  %386 = load double, double* %385, align 8, !dbg !3651
  %387 = load %union.argument_value*, %union.argument_value** %19, align 4, !dbg !3653
  %388 = bitcast %union.argument_value* %387 to double*, !dbg !3654
  store double %386, double* %388, align 8, !dbg !3655
  br label %389

389:                                              ; preds = %377, %365
  br label %402, !dbg !3656

390:                                              ; preds = %359
  %391 = load i32, i32* %27, align 4, !dbg !3657
  %392 = icmp eq i32 %391, 3, !dbg !3659
  br i1 %392, label %393, label %401, !dbg !3660

393:                                              ; preds = %390
  %394 = bitcast %struct.__va_list* %7 to i8**, !dbg !3661
  %395 = load i8*, i8** %394, align 4, !dbg !3661
  %396 = getelementptr inbounds i8, i8* %395, i32 4, !dbg !3661
  store i8* %396, i8** %394, align 4, !dbg !3661
  %397 = bitcast i8* %395 to i8**, !dbg !3661
  %398 = load i8*, i8** %397, align 4, !dbg !3661
  %399 = load %union.argument_value*, %union.argument_value** %19, align 4, !dbg !3663
  %400 = bitcast %union.argument_value* %399 to i8**, !dbg !3664
  store i8* %398, i8** %400, align 8, !dbg !3665
  br label %401, !dbg !3666

401:                                              ; preds = %393, %390
  br label %402

402:                                              ; preds = %401, %389
  br label %403

403:                                              ; preds = %402, %358
  br label %404

404:                                              ; preds = %403, %261
  %405 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !3667
  %406 = bitcast %struct.conversion* %405 to i24*, !dbg !3669
  %407 = load i24, i24* %406, align 4, !dbg !3669
  %408 = and i24 %407, 1, !dbg !3669
  %409 = trunc i24 %408 to i1, !dbg !3669
  br i1 %409, label %417, label %410, !dbg !3670

410:                                              ; preds = %404
  %411 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !3671
  %412 = bitcast %struct.conversion* %411 to i24*, !dbg !3672
  %413 = load i24, i24* %412, align 4, !dbg !3672
  %414 = lshr i24 %413, 1, !dbg !3672
  %415 = and i24 %414, 1, !dbg !3672
  %416 = trunc i24 %415 to i1, !dbg !3672
  br i1 %416, label %417, label %433, !dbg !3673

417:                                              ; preds = %410, %404
  br label %418, !dbg !3674

418:                                              ; preds = %417
  call void @llvm.dbg.declare(metadata i32* %29, metadata !3676, metadata !DIExpression()), !dbg !3678
  %419 = load i32 (...)*, i32 (...)** %8, align 4, !dbg !3678
  %420 = load i8*, i8** %9, align 4, !dbg !3678
  %421 = load i8*, i8** %20, align 4, !dbg !3678
  %422 = load i8*, i8** %10, align 4, !dbg !3678
  %423 = call i32 @outs(i32 (...)* noundef %419, i8* noundef %420, i8* noundef %421, i8* noundef %422) #10, !dbg !3678
  store i32 %423, i32* %29, align 4, !dbg !3678
  %424 = load i32, i32* %29, align 4, !dbg !3679
  %425 = icmp slt i32 %424, 0, !dbg !3679
  br i1 %425, label %426, label %428, !dbg !3678

426:                                              ; preds = %418
  %427 = load i32, i32* %29, align 4, !dbg !3681
  store i32 %427, i32* %6, align 4, !dbg !3681
  br label %836, !dbg !3681

428:                                              ; preds = %418
  %429 = load i32, i32* %29, align 4, !dbg !3678
  %430 = load i32, i32* %13, align 4, !dbg !3678
  %431 = add i32 %430, %429, !dbg !3678
  store i32 %431, i32* %13, align 4, !dbg !3678
  br label %432, !dbg !3678

432:                                              ; preds = %428
  br label %50, !dbg !3683, !llvm.loop !3351

433:                                              ; preds = %410
  %434 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !3684
  %435 = getelementptr inbounds %struct.conversion, %struct.conversion* %434, i32 0, i32 1, !dbg !3685
  %436 = load i8, i8* %435, align 1, !dbg !3685
  %437 = zext i8 %436 to i32, !dbg !3684
  switch i32 %437, label %577 [
    i32 37, label %438
    i32 115, label %452
    i32 99, label %469
    i32 100, label %478
    i32 105, label %478
    i32 111, label %511
    i32 117, label %511
    i32 120, label %511
    i32 88, label %511
    i32 112, label %545
    i32 110, label %570
    i32 97, label %576
    i32 65, label %576
    i32 101, label %576
    i32 69, label %576
    i32 102, label %576
    i32 70, label %576
    i32 103, label %576
    i32 71, label %576
  ], !dbg !3686

438:                                              ; preds = %433
  br label %439, !dbg !3687

439:                                              ; preds = %438
  call void @llvm.dbg.declare(metadata i32* %30, metadata !3689, metadata !DIExpression()), !dbg !3691
  %440 = load i32 (...)*, i32 (...)** %8, align 4, !dbg !3691
  %441 = load i8*, i8** %9, align 4, !dbg !3691
  %442 = bitcast i32 (...)* %440 to i32 (i32, i8*)*, !dbg !3691
  %443 = call i32 %442(i32 noundef 37, i8* noundef %441) #10, !dbg !3691
  store i32 %443, i32* %30, align 4, !dbg !3691
  %444 = load i32, i32* %30, align 4, !dbg !3692
  %445 = icmp slt i32 %444, 0, !dbg !3692
  br i1 %445, label %446, label %448, !dbg !3691

446:                                              ; preds = %439
  %447 = load i32, i32* %30, align 4, !dbg !3694
  store i32 %447, i32* %6, align 4, !dbg !3694
  br label %836, !dbg !3694

448:                                              ; preds = %439
  %449 = load i32, i32* %13, align 4, !dbg !3691
  %450 = add i32 %449, 1, !dbg !3691
  store i32 %450, i32* %13, align 4, !dbg !3691
  br label %451, !dbg !3691

451:                                              ; preds = %448
  br label %578, !dbg !3696

452:                                              ; preds = %433
  %453 = load %union.argument_value*, %union.argument_value** %19, align 4, !dbg !3697
  %454 = bitcast %union.argument_value* %453 to i8**, !dbg !3699
  %455 = load i8*, i8** %454, align 8, !dbg !3699
  store i8* %455, i8** %23, align 4, !dbg !3700
  call void @llvm.dbg.declare(metadata i32* %31, metadata !3701, metadata !DIExpression()), !dbg !3702
  %456 = load i32, i32* %22, align 4, !dbg !3703
  %457 = icmp sge i32 %456, 0, !dbg !3705
  br i1 %457, label %458, label %462, !dbg !3706

458:                                              ; preds = %452
  %459 = load i8*, i8** %23, align 4, !dbg !3707
  %460 = load i32, i32* %22, align 4, !dbg !3709
  %461 = call i32 @strnlen(i8* noundef %459, i32 noundef %460) #10, !dbg !3710
  store i32 %461, i32* %31, align 4, !dbg !3711
  br label %465, !dbg !3712

462:                                              ; preds = %452
  %463 = load i8*, i8** %23, align 4, !dbg !3713
  %464 = call i32 @strlen(i8* noundef %463) #10, !dbg !3715
  store i32 %464, i32* %31, align 4, !dbg !3716
  br label %465

465:                                              ; preds = %462, %458
  %466 = load i8*, i8** %23, align 4, !dbg !3717
  %467 = load i32, i32* %31, align 4, !dbg !3718
  %468 = getelementptr inbounds i8, i8* %466, i32 %467, !dbg !3719
  store i8* %468, i8** %24, align 4, !dbg !3720
  store i32 -1, i32* %22, align 4, !dbg !3721
  br label %578, !dbg !3722

469:                                              ; preds = %433
  %470 = getelementptr inbounds [22 x i8], [22 x i8]* %12, i32 0, i32 0, !dbg !3723
  store i8* %470, i8** %23, align 4, !dbg !3724
  %471 = load %union.argument_value*, %union.argument_value** %19, align 4, !dbg !3725
  %472 = bitcast %union.argument_value* %471 to i64*, !dbg !3726
  %473 = load i64, i64* %472, align 8, !dbg !3726
  %474 = trunc i64 %473 to i8, !dbg !3727
  %475 = getelementptr inbounds [22 x i8], [22 x i8]* %12, i32 0, i32 0, !dbg !3728
  store i8 %474, i8* %475, align 1, !dbg !3729
  %476 = getelementptr inbounds [22 x i8], [22 x i8]* %12, i32 0, i32 0, !dbg !3730
  %477 = getelementptr inbounds i8, i8* %476, i32 1, !dbg !3731
  store i8* %477, i8** %24, align 4, !dbg !3732
  br label %578, !dbg !3733

478:                                              ; preds = %433, %433
  %479 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !3734
  %480 = bitcast %struct.conversion* %479 to i24*, !dbg !3736
  %481 = load i24, i24* %480, align 4, !dbg !3736
  %482 = lshr i24 %481, 3, !dbg !3736
  %483 = and i24 %482, 1, !dbg !3736
  %484 = trunc i24 %483 to i1, !dbg !3736
  br i1 %484, label %485, label %486, !dbg !3737

485:                                              ; preds = %478
  store i8 43, i8* %25, align 1, !dbg !3738
  br label %495, !dbg !3740

486:                                              ; preds = %478
  %487 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !3741
  %488 = bitcast %struct.conversion* %487 to i24*, !dbg !3743
  %489 = load i24, i24* %488, align 4, !dbg !3743
  %490 = lshr i24 %489, 4, !dbg !3743
  %491 = and i24 %490, 1, !dbg !3743
  %492 = trunc i24 %491 to i1, !dbg !3743
  br i1 %492, label %493, label %494, !dbg !3744

493:                                              ; preds = %486
  store i8 32, i8* %25, align 1, !dbg !3745
  br label %494, !dbg !3747

494:                                              ; preds = %493, %486
  br label %495

495:                                              ; preds = %494, %485
  %496 = load %union.argument_value*, %union.argument_value** %19, align 4, !dbg !3748
  %497 = bitcast %union.argument_value* %496 to i64*, !dbg !3749
  %498 = load i64, i64* %497, align 8, !dbg !3749
  store i64 %498, i64* %14, align 8, !dbg !3750
  %499 = load i64, i64* %14, align 8, !dbg !3751
  %500 = icmp slt i64 %499, 0, !dbg !3753
  br i1 %500, label %501, label %506, !dbg !3754

501:                                              ; preds = %495
  store i8 45, i8* %25, align 1, !dbg !3755
  %502 = load i64, i64* %14, align 8, !dbg !3757
  %503 = sub nsw i64 0, %502, !dbg !3758
  %504 = load %union.argument_value*, %union.argument_value** %19, align 4, !dbg !3759
  %505 = bitcast %union.argument_value* %504 to i64*, !dbg !3760
  store i64 %503, i64* %505, align 8, !dbg !3761
  br label %510, !dbg !3762

506:                                              ; preds = %495
  %507 = load i64, i64* %14, align 8, !dbg !3763
  %508 = load %union.argument_value*, %union.argument_value** %19, align 4, !dbg !3765
  %509 = bitcast %union.argument_value* %508 to i64*, !dbg !3766
  store i64 %507, i64* %509, align 8, !dbg !3767
  br label %510

510:                                              ; preds = %506, %501
  br label %511, !dbg !3768

511:                                              ; preds = %433, %433, %433, %433, %510
  %512 = load %union.argument_value*, %union.argument_value** %19, align 4, !dbg !3769
  %513 = bitcast %union.argument_value* %512 to i64*, !dbg !3770
  %514 = load i64, i64* %513, align 8, !dbg !3770
  %515 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !3771
  %516 = getelementptr inbounds [22 x i8], [22 x i8]* %12, i32 0, i32 0, !dbg !3772
  %517 = load i8*, i8** %24, align 4, !dbg !3773
  %518 = call i8* @encode_uint(i64 noundef %514, %struct.conversion* noundef %515, i8* noundef %516, i8* noundef %517) #10, !dbg !3774
  store i8* %518, i8** %23, align 4, !dbg !3775
  br label %519, !dbg !3776

519:                                              ; preds = %550, %511
  call void @llvm.dbg.label(metadata !3777), !dbg !3778
  %520 = load i32, i32* %22, align 4, !dbg !3779
  %521 = icmp sge i32 %520, 0, !dbg !3781
  br i1 %521, label %522, label %544, !dbg !3782

522:                                              ; preds = %519
  call void @llvm.dbg.declare(metadata i32* %32, metadata !3783, metadata !DIExpression()), !dbg !3785
  %523 = load i8*, i8** %24, align 4, !dbg !3786
  %524 = load i8*, i8** %23, align 4, !dbg !3787
  %525 = ptrtoint i8* %523 to i32, !dbg !3788
  %526 = ptrtoint i8* %524 to i32, !dbg !3788
  %527 = sub i32 %525, %526, !dbg !3788
  store i32 %527, i32* %32, align 4, !dbg !3785
  %528 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !3789
  %529 = bitcast %struct.conversion* %528 to i24*, !dbg !3790
  %530 = load i24, i24* %529, align 4, !dbg !3791
  %531 = and i24 %530, -65, !dbg !3791
  %532 = or i24 %531, 0, !dbg !3791
  store i24 %532, i24* %529, align 4, !dbg !3791
  %533 = load i32, i32* %32, align 4, !dbg !3792
  %534 = load i32, i32* %22, align 4, !dbg !3794
  %535 = icmp ult i32 %533, %534, !dbg !3795
  br i1 %535, label %536, label %543, !dbg !3796

536:                                              ; preds = %522
  %537 = load i32, i32* %22, align 4, !dbg !3797
  %538 = load i32, i32* %32, align 4, !dbg !3799
  %539 = sub nsw i32 %537, %538, !dbg !3800
  %540 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !3801
  %541 = getelementptr inbounds %struct.conversion, %struct.conversion* %540, i32 0, i32 2, !dbg !3802
  %542 = bitcast %union.anon.68* %541 to i32*, !dbg !3802
  store i32 %539, i32* %542, align 4, !dbg !3803
  br label %543, !dbg !3804

543:                                              ; preds = %536, %522
  br label %544, !dbg !3805

544:                                              ; preds = %543, %519
  br label %578, !dbg !3806

545:                                              ; preds = %433
  %546 = load %union.argument_value*, %union.argument_value** %19, align 4, !dbg !3807
  %547 = bitcast %union.argument_value* %546 to i8**, !dbg !3809
  %548 = load i8*, i8** %547, align 8, !dbg !3809
  %549 = icmp ne i8* %548, null, !dbg !3810
  br i1 %549, label %550, label %567, !dbg !3811

550:                                              ; preds = %545
  %551 = load %union.argument_value*, %union.argument_value** %19, align 4, !dbg !3812
  %552 = bitcast %union.argument_value* %551 to i8**, !dbg !3814
  %553 = load i8*, i8** %552, align 8, !dbg !3814
  %554 = ptrtoint i8* %553 to i32, !dbg !3815
  %555 = zext i32 %554 to i64, !dbg !3815
  %556 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !3816
  %557 = getelementptr inbounds [22 x i8], [22 x i8]* %12, i32 0, i32 0, !dbg !3817
  %558 = load i8*, i8** %24, align 4, !dbg !3818
  %559 = call i8* @encode_uint(i64 noundef %555, %struct.conversion* noundef %556, i8* noundef %557, i8* noundef %558) #10, !dbg !3819
  store i8* %559, i8** %23, align 4, !dbg !3820
  %560 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !3821
  %561 = bitcast %struct.conversion* %560 to i24*, !dbg !3822
  %562 = load i24, i24* %561, align 4, !dbg !3823
  %563 = and i24 %562, -1048577, !dbg !3823
  %564 = or i24 %563, 1048576, !dbg !3823
  store i24 %564, i24* %561, align 4, !dbg !3823
  %565 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !3824
  %566 = getelementptr inbounds %struct.conversion, %struct.conversion* %565, i32 0, i32 1, !dbg !3825
  store i8 120, i8* %566, align 1, !dbg !3826
  br label %519, !dbg !3827

567:                                              ; preds = %545
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i32 0, i32 0), i8** %23, align 4, !dbg !3828
  %568 = load i8*, i8** %23, align 4, !dbg !3829
  %569 = getelementptr inbounds i8, i8* %568, i32 5, !dbg !3830
  store i8* %569, i8** %24, align 4, !dbg !3831
  br label %578, !dbg !3832

570:                                              ; preds = %433
  %571 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !3833
  %572 = load %union.argument_value*, %union.argument_value** %19, align 4, !dbg !3836
  %573 = bitcast %union.argument_value* %572 to i8**, !dbg !3837
  %574 = load i8*, i8** %573, align 8, !dbg !3837
  %575 = load i32, i32* %13, align 4, !dbg !3838
  call void @store_count(%struct.conversion* noundef %571, i8* noundef %574, i32 noundef %575) #10, !dbg !3839
  br label %578, !dbg !3840

576:                                              ; preds = %433, %433, %433, %433, %433, %433, %433, %433
  br label %578, !dbg !3841

577:                                              ; preds = %433
  br label %578, !dbg !3842

578:                                              ; preds = %577, %576, %570, %567, %544, %469, %465, %451
  %579 = load i8*, i8** %23, align 4, !dbg !3843
  %580 = icmp eq i8* %579, null, !dbg !3845
  br i1 %580, label %581, label %582, !dbg !3846

581:                                              ; preds = %578
  br label %50, !dbg !3847, !llvm.loop !3351

582:                                              ; preds = %578
  call void @llvm.dbg.declare(metadata i32* %33, metadata !3849, metadata !DIExpression()), !dbg !3850
  %583 = load i8*, i8** %24, align 4, !dbg !3851
  %584 = load i8*, i8** %23, align 4, !dbg !3852
  %585 = ptrtoint i8* %583 to i32, !dbg !3853
  %586 = ptrtoint i8* %584 to i32, !dbg !3853
  %587 = sub i32 %585, %586, !dbg !3853
  store i32 %587, i32* %33, align 4, !dbg !3850
  call void @llvm.dbg.declare(metadata i32* %34, metadata !3854, metadata !DIExpression()), !dbg !3855
  store i32 0, i32* %34, align 4, !dbg !3855
  %588 = load i8, i8* %25, align 1, !dbg !3856
  %589 = zext i8 %588 to i32, !dbg !3856
  %590 = icmp ne i32 %589, 0, !dbg !3858
  br i1 %590, label %591, label %594, !dbg !3859

591:                                              ; preds = %582
  %592 = load i32, i32* %33, align 4, !dbg !3860
  %593 = add i32 %592, 1, !dbg !3860
  store i32 %593, i32* %33, align 4, !dbg !3860
  br label %594, !dbg !3862

594:                                              ; preds = %591, %582
  %595 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !3863
  %596 = bitcast %struct.conversion* %595 to i24*, !dbg !3865
  %597 = load i24, i24* %596, align 4, !dbg !3865
  %598 = lshr i24 %597, 20, !dbg !3865
  %599 = and i24 %598, 1, !dbg !3865
  %600 = trunc i24 %599 to i1, !dbg !3865
  br i1 %600, label %601, label %604, !dbg !3866

601:                                              ; preds = %594
  %602 = load i32, i32* %33, align 4, !dbg !3867
  %603 = add i32 %602, 2, !dbg !3867
  store i32 %603, i32* %33, align 4, !dbg !3867
  br label %615, !dbg !3869

604:                                              ; preds = %594
  %605 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !3870
  %606 = bitcast %struct.conversion* %605 to i24*, !dbg !3872
  %607 = load i24, i24* %606, align 4, !dbg !3872
  %608 = lshr i24 %607, 19, !dbg !3872
  %609 = and i24 %608, 1, !dbg !3872
  %610 = trunc i24 %609 to i1, !dbg !3872
  br i1 %610, label %611, label %614, !dbg !3873

611:                                              ; preds = %604
  %612 = load i32, i32* %33, align 4, !dbg !3874
  %613 = add i32 %612, 1, !dbg !3874
  store i32 %613, i32* %33, align 4, !dbg !3874
  br label %614, !dbg !3876

614:                                              ; preds = %611, %604
  br label %615

615:                                              ; preds = %614, %601
  %616 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !3877
  %617 = getelementptr inbounds %struct.conversion, %struct.conversion* %616, i32 0, i32 2, !dbg !3878
  %618 = bitcast %union.anon.68* %617 to i32*, !dbg !3878
  %619 = load i32, i32* %618, align 4, !dbg !3878
  %620 = load i32, i32* %33, align 4, !dbg !3879
  %621 = add i32 %620, %619, !dbg !3879
  store i32 %621, i32* %33, align 4, !dbg !3879
  %622 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !3880
  %623 = bitcast %struct.conversion* %622 to i24*, !dbg !3882
  %624 = load i24, i24* %623, align 4, !dbg !3882
  %625 = lshr i24 %624, 22, !dbg !3882
  %626 = and i24 %625, 1, !dbg !3882
  %627 = trunc i24 %626 to i1, !dbg !3882
  br i1 %627, label %628, label %635, !dbg !3883

628:                                              ; preds = %615
  %629 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !3884
  %630 = getelementptr inbounds %struct.conversion, %struct.conversion* %629, i32 0, i32 3, !dbg !3886
  %631 = bitcast %union.anon.68* %630 to i32*, !dbg !3886
  %632 = load i32, i32* %631, align 4, !dbg !3886
  %633 = load i32, i32* %33, align 4, !dbg !3887
  %634 = add i32 %633, %632, !dbg !3887
  store i32 %634, i32* %33, align 4, !dbg !3887
  br label %635, !dbg !3888

635:                                              ; preds = %628, %615
  %636 = load i32, i32* %21, align 4, !dbg !3889
  %637 = icmp sgt i32 %636, 0, !dbg !3891
  br i1 %637, label %638, label %699, !dbg !3892

638:                                              ; preds = %635
  %639 = load i32, i32* %33, align 4, !dbg !3893
  %640 = load i32, i32* %21, align 4, !dbg !3895
  %641 = sub nsw i32 %640, %639, !dbg !3895
  store i32 %641, i32* %21, align 4, !dbg !3895
  %642 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !3896
  %643 = bitcast %struct.conversion* %642 to i24*, !dbg !3898
  %644 = load i24, i24* %643, align 4, !dbg !3898
  %645 = lshr i24 %644, 2, !dbg !3898
  %646 = and i24 %645, 1, !dbg !3898
  %647 = trunc i24 %646 to i1, !dbg !3898
  br i1 %647, label %698, label %648, !dbg !3899

648:                                              ; preds = %638
  call void @llvm.dbg.declare(metadata i8* %35, metadata !3900, metadata !DIExpression()), !dbg !3902
  store i8 32, i8* %35, align 1, !dbg !3902
  %649 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !3903
  %650 = bitcast %struct.conversion* %649 to i24*, !dbg !3905
  %651 = load i24, i24* %650, align 4, !dbg !3905
  %652 = lshr i24 %651, 6, !dbg !3905
  %653 = and i24 %652, 1, !dbg !3905
  %654 = trunc i24 %653 to i1, !dbg !3905
  br i1 %654, label %655, label %676, !dbg !3906

655:                                              ; preds = %648
  %656 = load i8, i8* %25, align 1, !dbg !3907
  %657 = zext i8 %656 to i32, !dbg !3907
  %658 = icmp ne i32 %657, 0, !dbg !3910
  br i1 %658, label %659, label %675, !dbg !3911

659:                                              ; preds = %655
  br label %660, !dbg !3912

660:                                              ; preds = %659
  call void @llvm.dbg.declare(metadata i32* %36, metadata !3914, metadata !DIExpression()), !dbg !3916
  %661 = load i32 (...)*, i32 (...)** %8, align 4, !dbg !3916
  %662 = load i8, i8* %25, align 1, !dbg !3916
  %663 = zext i8 %662 to i32, !dbg !3916
  %664 = load i8*, i8** %9, align 4, !dbg !3916
  %665 = bitcast i32 (...)* %661 to i32 (i32, i8*)*, !dbg !3916
  %666 = call i32 %665(i32 noundef %663, i8* noundef %664) #10, !dbg !3916
  store i32 %666, i32* %36, align 4, !dbg !3916
  %667 = load i32, i32* %36, align 4, !dbg !3917
  %668 = icmp slt i32 %667, 0, !dbg !3917
  br i1 %668, label %669, label %671, !dbg !3916

669:                                              ; preds = %660
  %670 = load i32, i32* %36, align 4, !dbg !3919
  store i32 %670, i32* %6, align 4, !dbg !3919
  br label %836, !dbg !3919

671:                                              ; preds = %660
  %672 = load i32, i32* %13, align 4, !dbg !3916
  %673 = add i32 %672, 1, !dbg !3916
  store i32 %673, i32* %13, align 4, !dbg !3916
  br label %674, !dbg !3916

674:                                              ; preds = %671
  store i8 0, i8* %25, align 1, !dbg !3921
  br label %675, !dbg !3922

675:                                              ; preds = %674, %655
  store i8 48, i8* %35, align 1, !dbg !3923
  br label %676, !dbg !3924

676:                                              ; preds = %675, %648
  br label %677, !dbg !3925

677:                                              ; preds = %696, %676
  %678 = load i32, i32* %21, align 4, !dbg !3926
  %679 = add nsw i32 %678, -1, !dbg !3926
  store i32 %679, i32* %21, align 4, !dbg !3926
  %680 = icmp sgt i32 %678, 0, !dbg !3927
  br i1 %680, label %681, label %697, !dbg !3925

681:                                              ; preds = %677
  br label %682, !dbg !3928

682:                                              ; preds = %681
  call void @llvm.dbg.declare(metadata i32* %37, metadata !3930, metadata !DIExpression()), !dbg !3932
  %683 = load i32 (...)*, i32 (...)** %8, align 4, !dbg !3932
  %684 = load i8, i8* %35, align 1, !dbg !3932
  %685 = zext i8 %684 to i32, !dbg !3932
  %686 = load i8*, i8** %9, align 4, !dbg !3932
  %687 = bitcast i32 (...)* %683 to i32 (i32, i8*)*, !dbg !3932
  %688 = call i32 %687(i32 noundef %685, i8* noundef %686) #10, !dbg !3932
  store i32 %688, i32* %37, align 4, !dbg !3932
  %689 = load i32, i32* %37, align 4, !dbg !3933
  %690 = icmp slt i32 %689, 0, !dbg !3933
  br i1 %690, label %691, label %693, !dbg !3932

691:                                              ; preds = %682
  %692 = load i32, i32* %37, align 4, !dbg !3935
  store i32 %692, i32* %6, align 4, !dbg !3935
  br label %836, !dbg !3935

693:                                              ; preds = %682
  %694 = load i32, i32* %13, align 4, !dbg !3932
  %695 = add i32 %694, 1, !dbg !3932
  store i32 %695, i32* %13, align 4, !dbg !3932
  br label %696, !dbg !3932

696:                                              ; preds = %693
  br label %677, !dbg !3925, !llvm.loop !3937

697:                                              ; preds = %677
  br label %698, !dbg !3939

698:                                              ; preds = %697, %638
  br label %699, !dbg !3940

699:                                              ; preds = %698, %635
  %700 = load i8, i8* %25, align 1, !dbg !3941
  %701 = zext i8 %700 to i32, !dbg !3941
  %702 = icmp ne i32 %701, 0, !dbg !3943
  br i1 %702, label %703, label %719, !dbg !3944

703:                                              ; preds = %699
  br label %704, !dbg !3945

704:                                              ; preds = %703
  call void @llvm.dbg.declare(metadata i32* %38, metadata !3947, metadata !DIExpression()), !dbg !3949
  %705 = load i32 (...)*, i32 (...)** %8, align 4, !dbg !3949
  %706 = load i8, i8* %25, align 1, !dbg !3949
  %707 = zext i8 %706 to i32, !dbg !3949
  %708 = load i8*, i8** %9, align 4, !dbg !3949
  %709 = bitcast i32 (...)* %705 to i32 (i32, i8*)*, !dbg !3949
  %710 = call i32 %709(i32 noundef %707, i8* noundef %708) #10, !dbg !3949
  store i32 %710, i32* %38, align 4, !dbg !3949
  %711 = load i32, i32* %38, align 4, !dbg !3950
  %712 = icmp slt i32 %711, 0, !dbg !3950
  br i1 %712, label %713, label %715, !dbg !3949

713:                                              ; preds = %704
  %714 = load i32, i32* %38, align 4, !dbg !3952
  store i32 %714, i32* %6, align 4, !dbg !3952
  br label %836, !dbg !3952

715:                                              ; preds = %704
  %716 = load i32, i32* %13, align 4, !dbg !3949
  %717 = add i32 %716, 1, !dbg !3949
  store i32 %717, i32* %13, align 4, !dbg !3949
  br label %718, !dbg !3949

718:                                              ; preds = %715
  br label %719, !dbg !3954

719:                                              ; preds = %718, %699
  %720 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !3955
  %721 = bitcast %struct.conversion* %720 to i24*, !dbg !3959
  %722 = load i24, i24* %721, align 4, !dbg !3959
  %723 = lshr i24 %722, 20, !dbg !3959
  %724 = and i24 %723, 1, !dbg !3959
  %725 = trunc i24 %724 to i1, !dbg !3959
  %726 = zext i1 %725 to i32, !dbg !3955
  %727 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !3960
  %728 = bitcast %struct.conversion* %727 to i24*, !dbg !3961
  %729 = load i24, i24* %728, align 4, !dbg !3961
  %730 = lshr i24 %729, 19, !dbg !3961
  %731 = and i24 %730, 1, !dbg !3961
  %732 = trunc i24 %731 to i1, !dbg !3961
  %733 = zext i1 %732 to i32, !dbg !3960
  %734 = or i32 %726, %733, !dbg !3962
  %735 = icmp ne i32 %734, 0, !dbg !3962
  br i1 %735, label %736, label %750, !dbg !3963

736:                                              ; preds = %719
  br label %737, !dbg !3964

737:                                              ; preds = %736
  call void @llvm.dbg.declare(metadata i32* %39, metadata !3966, metadata !DIExpression()), !dbg !3968
  %738 = load i32 (...)*, i32 (...)** %8, align 4, !dbg !3968
  %739 = load i8*, i8** %9, align 4, !dbg !3968
  %740 = bitcast i32 (...)* %738 to i32 (i32, i8*)*, !dbg !3968
  %741 = call i32 %740(i32 noundef 48, i8* noundef %739) #10, !dbg !3968
  store i32 %741, i32* %39, align 4, !dbg !3968
  %742 = load i32, i32* %39, align 4, !dbg !3969
  %743 = icmp slt i32 %742, 0, !dbg !3969
  br i1 %743, label %744, label %746, !dbg !3968

744:                                              ; preds = %737
  %745 = load i32, i32* %39, align 4, !dbg !3971
  store i32 %745, i32* %6, align 4, !dbg !3971
  br label %836, !dbg !3971

746:                                              ; preds = %737
  %747 = load i32, i32* %13, align 4, !dbg !3968
  %748 = add i32 %747, 1, !dbg !3968
  store i32 %748, i32* %13, align 4, !dbg !3968
  br label %749, !dbg !3968

749:                                              ; preds = %746
  br label %750, !dbg !3973

750:                                              ; preds = %749, %719
  %751 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !3974
  %752 = bitcast %struct.conversion* %751 to i24*, !dbg !3976
  %753 = load i24, i24* %752, align 4, !dbg !3976
  %754 = lshr i24 %753, 20, !dbg !3976
  %755 = and i24 %754, 1, !dbg !3976
  %756 = trunc i24 %755 to i1, !dbg !3976
  br i1 %756, label %757, label %775, !dbg !3977

757:                                              ; preds = %750
  br label %758, !dbg !3978

758:                                              ; preds = %757
  call void @llvm.dbg.declare(metadata i32* %40, metadata !3980, metadata !DIExpression()), !dbg !3982
  %759 = load i32 (...)*, i32 (...)** %8, align 4, !dbg !3982
  %760 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !3982
  %761 = getelementptr inbounds %struct.conversion, %struct.conversion* %760, i32 0, i32 1, !dbg !3982
  %762 = load i8, i8* %761, align 1, !dbg !3982
  %763 = zext i8 %762 to i32, !dbg !3982
  %764 = load i8*, i8** %9, align 4, !dbg !3982
  %765 = bitcast i32 (...)* %759 to i32 (i32, i8*)*, !dbg !3982
  %766 = call i32 %765(i32 noundef %763, i8* noundef %764) #10, !dbg !3982
  store i32 %766, i32* %40, align 4, !dbg !3982
  %767 = load i32, i32* %40, align 4, !dbg !3983
  %768 = icmp slt i32 %767, 0, !dbg !3983
  br i1 %768, label %769, label %771, !dbg !3982

769:                                              ; preds = %758
  %770 = load i32, i32* %40, align 4, !dbg !3985
  store i32 %770, i32* %6, align 4, !dbg !3985
  br label %836, !dbg !3985

771:                                              ; preds = %758
  %772 = load i32, i32* %13, align 4, !dbg !3982
  %773 = add i32 %772, 1, !dbg !3982
  store i32 %773, i32* %13, align 4, !dbg !3982
  br label %774, !dbg !3982

774:                                              ; preds = %771
  br label %775, !dbg !3987

775:                                              ; preds = %774, %750
  %776 = load %struct.conversion*, %struct.conversion** %18, align 4, !dbg !3988
  %777 = getelementptr inbounds %struct.conversion, %struct.conversion* %776, i32 0, i32 2, !dbg !3989
  %778 = bitcast %union.anon.68* %777 to i32*, !dbg !3989
  %779 = load i32, i32* %778, align 4, !dbg !3989
  store i32 %779, i32* %34, align 4, !dbg !3990
  br label %780, !dbg !3991

780:                                              ; preds = %797, %775
  %781 = load i32, i32* %34, align 4, !dbg !3992
  %782 = add nsw i32 %781, -1, !dbg !3992
  store i32 %782, i32* %34, align 4, !dbg !3992
  %783 = icmp sgt i32 %781, 0, !dbg !3993
  br i1 %783, label %784, label %798, !dbg !3991

784:                                              ; preds = %780
  br label %785, !dbg !3994

785:                                              ; preds = %784
  call void @llvm.dbg.declare(metadata i32* %41, metadata !3996, metadata !DIExpression()), !dbg !3998
  %786 = load i32 (...)*, i32 (...)** %8, align 4, !dbg !3998
  %787 = load i8*, i8** %9, align 4, !dbg !3998
  %788 = bitcast i32 (...)* %786 to i32 (i32, i8*)*, !dbg !3998
  %789 = call i32 %788(i32 noundef 48, i8* noundef %787) #10, !dbg !3998
  store i32 %789, i32* %41, align 4, !dbg !3998
  %790 = load i32, i32* %41, align 4, !dbg !3999
  %791 = icmp slt i32 %790, 0, !dbg !3999
  br i1 %791, label %792, label %794, !dbg !3998

792:                                              ; preds = %785
  %793 = load i32, i32* %41, align 4, !dbg !4001
  store i32 %793, i32* %6, align 4, !dbg !4001
  br label %836, !dbg !4001

794:                                              ; preds = %785
  %795 = load i32, i32* %13, align 4, !dbg !3998
  %796 = add i32 %795, 1, !dbg !3998
  store i32 %796, i32* %13, align 4, !dbg !3998
  br label %797, !dbg !3998

797:                                              ; preds = %794
  br label %780, !dbg !3991, !llvm.loop !4003

798:                                              ; preds = %780
  br label %799, !dbg !4005

799:                                              ; preds = %798
  call void @llvm.dbg.declare(metadata i32* %42, metadata !4006, metadata !DIExpression()), !dbg !4008
  %800 = load i32 (...)*, i32 (...)** %8, align 4, !dbg !4008
  %801 = load i8*, i8** %9, align 4, !dbg !4008
  %802 = load i8*, i8** %23, align 4, !dbg !4008
  %803 = load i8*, i8** %24, align 4, !dbg !4008
  %804 = call i32 @outs(i32 (...)* noundef %800, i8* noundef %801, i8* noundef %802, i8* noundef %803) #10, !dbg !4008
  store i32 %804, i32* %42, align 4, !dbg !4008
  %805 = load i32, i32* %42, align 4, !dbg !4009
  %806 = icmp slt i32 %805, 0, !dbg !4009
  br i1 %806, label %807, label %809, !dbg !4008

807:                                              ; preds = %799
  %808 = load i32, i32* %42, align 4, !dbg !4011
  store i32 %808, i32* %6, align 4, !dbg !4011
  br label %836, !dbg !4011

809:                                              ; preds = %799
  %810 = load i32, i32* %42, align 4, !dbg !4008
  %811 = load i32, i32* %13, align 4, !dbg !4008
  %812 = add i32 %811, %810, !dbg !4008
  store i32 %812, i32* %13, align 4, !dbg !4008
  br label %813, !dbg !4008

813:                                              ; preds = %809
  br label %814, !dbg !4013

814:                                              ; preds = %830, %813
  %815 = load i32, i32* %21, align 4, !dbg !4014
  %816 = icmp sgt i32 %815, 0, !dbg !4015
  br i1 %816, label %817, label %833, !dbg !4013

817:                                              ; preds = %814
  br label %818, !dbg !4016

818:                                              ; preds = %817
  call void @llvm.dbg.declare(metadata i32* %43, metadata !4018, metadata !DIExpression()), !dbg !4020
  %819 = load i32 (...)*, i32 (...)** %8, align 4, !dbg !4020
  %820 = load i8*, i8** %9, align 4, !dbg !4020
  %821 = bitcast i32 (...)* %819 to i32 (i32, i8*)*, !dbg !4020
  %822 = call i32 %821(i32 noundef 32, i8* noundef %820) #10, !dbg !4020
  store i32 %822, i32* %43, align 4, !dbg !4020
  %823 = load i32, i32* %43, align 4, !dbg !4021
  %824 = icmp slt i32 %823, 0, !dbg !4021
  br i1 %824, label %825, label %827, !dbg !4020

825:                                              ; preds = %818
  %826 = load i32, i32* %43, align 4, !dbg !4023
  store i32 %826, i32* %6, align 4, !dbg !4023
  br label %836, !dbg !4023

827:                                              ; preds = %818
  %828 = load i32, i32* %13, align 4, !dbg !4020
  %829 = add i32 %828, 1, !dbg !4020
  store i32 %829, i32* %13, align 4, !dbg !4020
  br label %830, !dbg !4020

830:                                              ; preds = %827
  %831 = load i32, i32* %21, align 4, !dbg !4025
  %832 = add nsw i32 %831, -1, !dbg !4025
  store i32 %832, i32* %21, align 4, !dbg !4025
  br label %814, !dbg !4013, !llvm.loop !4026

833:                                              ; preds = %814
  br label %50, !dbg !3331, !llvm.loop !3351

834:                                              ; preds = %50
  %835 = load i32, i32* %13, align 4, !dbg !4028
  store i32 %835, i32* %6, align 4, !dbg !4029
  br label %836, !dbg !4029

836:                                              ; preds = %834, %825, %807, %792, %769, %744, %713, %691, %669, %446, %426, %72
  %837 = load i32, i32* %6, align 4, !dbg !4030
  ret i32 %837, !dbg !4030
}

; Function Attrs: noinline nounwind optnone
define internal i8* @extract_conversion(%struct.conversion* noundef %0, i8* noundef %1) #1 !dbg !4031 {
  %3 = alloca i8*, align 4
  %4 = alloca %struct.conversion*, align 4
  %5 = alloca i8*, align 4
  %6 = alloca %struct.conversion, align 4
  store %struct.conversion* %0, %struct.conversion** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.conversion** %4, metadata !4034, metadata !DIExpression()), !dbg !4035
  store i8* %1, i8** %5, align 4
  call void @llvm.dbg.declare(metadata i8** %5, metadata !4036, metadata !DIExpression()), !dbg !4037
  %7 = load %struct.conversion*, %struct.conversion** %4, align 4, !dbg !4038
  %8 = bitcast %struct.conversion* %6 to i24*, !dbg !4039
  %9 = load i24, i24* %8, align 4, !dbg !4039
  %10 = and i24 %9, -2, !dbg !4039
  %11 = or i24 %10, 0, !dbg !4039
  store i24 %11, i24* %8, align 4, !dbg !4039
  %12 = bitcast %struct.conversion* %6 to i24*, !dbg !4039
  %13 = load i24, i24* %12, align 4, !dbg !4039
  %14 = and i24 %13, -3, !dbg !4039
  %15 = or i24 %14, 0, !dbg !4039
  store i24 %15, i24* %12, align 4, !dbg !4039
  %16 = bitcast %struct.conversion* %6 to i24*, !dbg !4039
  %17 = load i24, i24* %16, align 4, !dbg !4039
  %18 = and i24 %17, -5, !dbg !4039
  %19 = or i24 %18, 0, !dbg !4039
  store i24 %19, i24* %16, align 4, !dbg !4039
  %20 = bitcast %struct.conversion* %6 to i24*, !dbg !4039
  %21 = load i24, i24* %20, align 4, !dbg !4039
  %22 = and i24 %21, -9, !dbg !4039
  %23 = or i24 %22, 0, !dbg !4039
  store i24 %23, i24* %20, align 4, !dbg !4039
  %24 = bitcast %struct.conversion* %6 to i24*, !dbg !4039
  %25 = load i24, i24* %24, align 4, !dbg !4039
  %26 = and i24 %25, -17, !dbg !4039
  %27 = or i24 %26, 0, !dbg !4039
  store i24 %27, i24* %24, align 4, !dbg !4039
  %28 = bitcast %struct.conversion* %6 to i24*, !dbg !4039
  %29 = load i24, i24* %28, align 4, !dbg !4039
  %30 = and i24 %29, -33, !dbg !4039
  %31 = or i24 %30, 0, !dbg !4039
  store i24 %31, i24* %28, align 4, !dbg !4039
  %32 = bitcast %struct.conversion* %6 to i24*, !dbg !4039
  %33 = load i24, i24* %32, align 4, !dbg !4039
  %34 = and i24 %33, -65, !dbg !4039
  %35 = or i24 %34, 0, !dbg !4039
  store i24 %35, i24* %32, align 4, !dbg !4039
  %36 = bitcast %struct.conversion* %6 to i24*, !dbg !4039
  %37 = load i24, i24* %36, align 4, !dbg !4039
  %38 = and i24 %37, -129, !dbg !4039
  %39 = or i24 %38, 0, !dbg !4039
  store i24 %39, i24* %36, align 4, !dbg !4039
  %40 = bitcast %struct.conversion* %6 to i24*, !dbg !4039
  %41 = load i24, i24* %40, align 4, !dbg !4039
  %42 = and i24 %41, -257, !dbg !4039
  %43 = or i24 %42, 0, !dbg !4039
  store i24 %43, i24* %40, align 4, !dbg !4039
  %44 = bitcast %struct.conversion* %6 to i24*, !dbg !4039
  %45 = load i24, i24* %44, align 4, !dbg !4039
  %46 = and i24 %45, -513, !dbg !4039
  %47 = or i24 %46, 0, !dbg !4039
  store i24 %47, i24* %44, align 4, !dbg !4039
  %48 = bitcast %struct.conversion* %6 to i24*, !dbg !4039
  %49 = load i24, i24* %48, align 4, !dbg !4039
  %50 = and i24 %49, -1025, !dbg !4039
  %51 = or i24 %50, 0, !dbg !4039
  store i24 %51, i24* %48, align 4, !dbg !4039
  %52 = bitcast %struct.conversion* %6 to i24*, !dbg !4039
  %53 = load i24, i24* %52, align 4, !dbg !4039
  %54 = and i24 %53, -30721, !dbg !4039
  %55 = or i24 %54, 0, !dbg !4039
  store i24 %55, i24* %52, align 4, !dbg !4039
  %56 = bitcast %struct.conversion* %6 to i24*, !dbg !4039
  %57 = load i24, i24* %56, align 4, !dbg !4039
  %58 = and i24 %57, -32769, !dbg !4039
  %59 = or i24 %58, 0, !dbg !4039
  store i24 %59, i24* %56, align 4, !dbg !4039
  %60 = bitcast %struct.conversion* %6 to i24*, !dbg !4039
  %61 = load i24, i24* %60, align 4, !dbg !4039
  %62 = and i24 %61, -458753, !dbg !4039
  %63 = or i24 %62, 0, !dbg !4039
  store i24 %63, i24* %60, align 4, !dbg !4039
  %64 = bitcast %struct.conversion* %6 to i24*, !dbg !4039
  %65 = load i24, i24* %64, align 4, !dbg !4039
  %66 = and i24 %65, -524289, !dbg !4039
  %67 = or i24 %66, 0, !dbg !4039
  store i24 %67, i24* %64, align 4, !dbg !4039
  %68 = bitcast %struct.conversion* %6 to i24*, !dbg !4039
  %69 = load i24, i24* %68, align 4, !dbg !4039
  %70 = and i24 %69, -1048577, !dbg !4039
  %71 = or i24 %70, 0, !dbg !4039
  store i24 %71, i24* %68, align 4, !dbg !4039
  %72 = bitcast %struct.conversion* %6 to i24*, !dbg !4039
  %73 = load i24, i24* %72, align 4, !dbg !4039
  %74 = and i24 %73, -2097153, !dbg !4039
  %75 = or i24 %74, 0, !dbg !4039
  store i24 %75, i24* %72, align 4, !dbg !4039
  %76 = bitcast %struct.conversion* %6 to i24*, !dbg !4039
  %77 = load i24, i24* %76, align 4, !dbg !4039
  %78 = and i24 %77, -4194305, !dbg !4039
  %79 = or i24 %78, 0, !dbg !4039
  store i24 %79, i24* %76, align 4, !dbg !4039
  %80 = getelementptr inbounds %struct.conversion, %struct.conversion* %6, i32 0, i32 1, !dbg !4039
  store i8 0, i8* %80, align 1, !dbg !4039
  %81 = getelementptr inbounds %struct.conversion, %struct.conversion* %6, i32 0, i32 2, !dbg !4039
  %82 = bitcast %union.anon.68* %81 to i8*, !dbg !4039
  call void @llvm.memset.p0i8.i32(i8* align 4 %82, i8 0, i32 4, i1 false), !dbg !4039
  %83 = getelementptr inbounds %struct.conversion, %struct.conversion* %6, i32 0, i32 3, !dbg !4039
  %84 = bitcast %union.anon.68* %83 to i8*, !dbg !4039
  call void @llvm.memset.p0i8.i32(i8* align 4 %84, i8 0, i32 4, i1 false), !dbg !4039
  %85 = bitcast %struct.conversion* %7 to i8*, !dbg !4040
  %86 = bitcast %struct.conversion* %6 to i8*, !dbg !4040
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %85, i8* align 4 %86, i32 12, i1 false), !dbg !4040
  %87 = load i8*, i8** %5, align 4, !dbg !4041
  %88 = getelementptr inbounds i8, i8* %87, i32 1, !dbg !4041
  store i8* %88, i8** %5, align 4, !dbg !4041
  %89 = load i8*, i8** %5, align 4, !dbg !4042
  %90 = load i8, i8* %89, align 1, !dbg !4044
  %91 = zext i8 %90 to i32, !dbg !4044
  %92 = icmp eq i32 %91, 37, !dbg !4045
  br i1 %92, label %93, label %100, !dbg !4046

93:                                               ; preds = %2
  %94 = load i8*, i8** %5, align 4, !dbg !4047
  %95 = getelementptr inbounds i8, i8* %94, i32 1, !dbg !4047
  store i8* %95, i8** %5, align 4, !dbg !4047
  %96 = load i8, i8* %94, align 1, !dbg !4049
  %97 = load %struct.conversion*, %struct.conversion** %4, align 4, !dbg !4050
  %98 = getelementptr inbounds %struct.conversion, %struct.conversion* %97, i32 0, i32 1, !dbg !4051
  store i8 %96, i8* %98, align 1, !dbg !4052
  %99 = load i8*, i8** %5, align 4, !dbg !4053
  store i8* %99, i8** %3, align 4, !dbg !4054
  br label %117, !dbg !4054

100:                                              ; preds = %2
  %101 = load %struct.conversion*, %struct.conversion** %4, align 4, !dbg !4055
  %102 = load i8*, i8** %5, align 4, !dbg !4056
  %103 = call i8* @extract_flags(%struct.conversion* noundef %101, i8* noundef %102) #10, !dbg !4057
  store i8* %103, i8** %5, align 4, !dbg !4058
  %104 = load %struct.conversion*, %struct.conversion** %4, align 4, !dbg !4059
  %105 = load i8*, i8** %5, align 4, !dbg !4060
  %106 = call i8* @extract_width(%struct.conversion* noundef %104, i8* noundef %105) #10, !dbg !4061
  store i8* %106, i8** %5, align 4, !dbg !4062
  %107 = load %struct.conversion*, %struct.conversion** %4, align 4, !dbg !4063
  %108 = load i8*, i8** %5, align 4, !dbg !4064
  %109 = call i8* @extract_prec(%struct.conversion* noundef %107, i8* noundef %108) #10, !dbg !4065
  store i8* %109, i8** %5, align 4, !dbg !4066
  %110 = load %struct.conversion*, %struct.conversion** %4, align 4, !dbg !4067
  %111 = load i8*, i8** %5, align 4, !dbg !4068
  %112 = call i8* @extract_length(%struct.conversion* noundef %110, i8* noundef %111) #10, !dbg !4069
  store i8* %112, i8** %5, align 4, !dbg !4070
  %113 = load %struct.conversion*, %struct.conversion** %4, align 4, !dbg !4071
  %114 = load i8*, i8** %5, align 4, !dbg !4072
  %115 = call i8* @extract_specifier(%struct.conversion* noundef %113, i8* noundef %114) #10, !dbg !4073
  store i8* %115, i8** %5, align 4, !dbg !4074
  %116 = load i8*, i8** %5, align 4, !dbg !4075
  store i8* %116, i8** %3, align 4, !dbg !4076
  br label %117, !dbg !4076

117:                                              ; preds = %100, %93
  %118 = load i8*, i8** %3, align 4, !dbg !4077
  ret i8* %118, !dbg !4077
}

; Function Attrs: noinline nounwind optnone
define internal i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #1 !dbg !4078 {
  %5 = alloca i32, align 4
  %6 = alloca i32 (...)*, align 4
  %7 = alloca i8*, align 4
  %8 = alloca i8*, align 4
  %9 = alloca i8*, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  store i32 (...)* %0, i32 (...)** %6, align 4
  call void @llvm.dbg.declare(metadata i32 (...)** %6, metadata !4081, metadata !DIExpression()), !dbg !4082
  store i8* %1, i8** %7, align 4
  call void @llvm.dbg.declare(metadata i8** %7, metadata !4083, metadata !DIExpression()), !dbg !4084
  store i8* %2, i8** %8, align 4
  call void @llvm.dbg.declare(metadata i8** %8, metadata !4085, metadata !DIExpression()), !dbg !4086
  store i8* %3, i8** %9, align 4
  call void @llvm.dbg.declare(metadata i8** %9, metadata !4087, metadata !DIExpression()), !dbg !4088
  call void @llvm.dbg.declare(metadata i32* %10, metadata !4089, metadata !DIExpression()), !dbg !4090
  store i32 0, i32* %10, align 4, !dbg !4090
  br label %12, !dbg !4091

12:                                               ; preds = %41, %4
  %13 = load i8*, i8** %8, align 4, !dbg !4092
  %14 = load i8*, i8** %9, align 4, !dbg !4093
  %15 = icmp ult i8* %13, %14, !dbg !4094
  br i1 %15, label %26, label %16, !dbg !4095

16:                                               ; preds = %12
  %17 = load i8*, i8** %9, align 4, !dbg !4096
  %18 = icmp eq i8* %17, null, !dbg !4097
  br i1 %18, label %19, label %24, !dbg !4098

19:                                               ; preds = %16
  %20 = load i8*, i8** %8, align 4, !dbg !4099
  %21 = load i8, i8* %20, align 1, !dbg !4100
  %22 = zext i8 %21 to i32, !dbg !4100
  %23 = icmp ne i32 %22, 0, !dbg !4098
  br label %24

24:                                               ; preds = %19, %16
  %25 = phi i1 [ false, %16 ], [ %23, %19 ], !dbg !4101
  br label %26, !dbg !4095

26:                                               ; preds = %24, %12
  %27 = phi i1 [ true, %12 ], [ %25, %24 ]
  br i1 %27, label %28, label %44, !dbg !4091

28:                                               ; preds = %26
  call void @llvm.dbg.declare(metadata i32* %11, metadata !4102, metadata !DIExpression()), !dbg !4104
  %29 = load i32 (...)*, i32 (...)** %6, align 4, !dbg !4105
  %30 = load i8*, i8** %8, align 4, !dbg !4106
  %31 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !4106
  store i8* %31, i8** %8, align 4, !dbg !4106
  %32 = load i8, i8* %30, align 1, !dbg !4107
  %33 = zext i8 %32 to i32, !dbg !4108
  %34 = load i8*, i8** %7, align 4, !dbg !4109
  %35 = bitcast i32 (...)* %29 to i32 (i32, i8*)*, !dbg !4105
  %36 = call i32 %35(i32 noundef %33, i8* noundef %34) #10, !dbg !4105
  store i32 %36, i32* %11, align 4, !dbg !4104
  %37 = load i32, i32* %11, align 4, !dbg !4110
  %38 = icmp slt i32 %37, 0, !dbg !4112
  br i1 %38, label %39, label %41, !dbg !4113

39:                                               ; preds = %28
  %40 = load i32, i32* %11, align 4, !dbg !4114
  store i32 %40, i32* %5, align 4, !dbg !4116
  br label %46, !dbg !4116

41:                                               ; preds = %28
  %42 = load i32, i32* %10, align 4, !dbg !4117
  %43 = add i32 %42, 1, !dbg !4117
  store i32 %43, i32* %10, align 4, !dbg !4117
  br label %12, !dbg !4091, !llvm.loop !4118

44:                                               ; preds = %26
  %45 = load i32, i32* %10, align 4, !dbg !4120
  store i32 %45, i32* %5, align 4, !dbg !4121
  br label %46, !dbg !4121

46:                                               ; preds = %44, %39
  %47 = load i32, i32* %5, align 4, !dbg !4122
  ret i32 %47, !dbg !4122
}

; Function Attrs: noinline nounwind optnone
define internal i8* @encode_uint(i64 noundef %0, %struct.conversion* noundef %1, i8* noundef %2, i8* noundef %3) #1 !dbg !4123 {
  %5 = alloca i64, align 8
  %6 = alloca %struct.conversion*, align 4
  %7 = alloca i8*, align 4
  %8 = alloca i8*, align 4
  %9 = alloca i8, align 1
  %10 = alloca i32, align 4
  %11 = alloca i8*, align 4
  %12 = alloca i32, align 4
  store i64 %0, i64* %5, align 8
  call void @llvm.dbg.declare(metadata i64* %5, metadata !4126, metadata !DIExpression()), !dbg !4127
  store %struct.conversion* %1, %struct.conversion** %6, align 4
  call void @llvm.dbg.declare(metadata %struct.conversion** %6, metadata !4128, metadata !DIExpression()), !dbg !4129
  store i8* %2, i8** %7, align 4
  call void @llvm.dbg.declare(metadata i8** %7, metadata !4130, metadata !DIExpression()), !dbg !4131
  store i8* %3, i8** %8, align 4
  call void @llvm.dbg.declare(metadata i8** %8, metadata !4132, metadata !DIExpression()), !dbg !4133
  call void @llvm.dbg.declare(metadata i8* %9, metadata !4134, metadata !DIExpression()), !dbg !4135
  %13 = load %struct.conversion*, %struct.conversion** %6, align 4, !dbg !4136
  %14 = getelementptr inbounds %struct.conversion, %struct.conversion* %13, i32 0, i32 1, !dbg !4137
  %15 = load i8, i8* %14, align 1, !dbg !4137
  %16 = zext i8 %15 to i32, !dbg !4138
  %17 = call i32 @isupper(i32 noundef %16) #10, !dbg !4139
  %18 = icmp ne i32 %17, 0, !dbg !4139
  %19 = zext i1 %18 to i8, !dbg !4135
  store i8 %19, i8* %9, align 1, !dbg !4135
  call void @llvm.dbg.declare(metadata i32* %10, metadata !4140, metadata !DIExpression()), !dbg !4142
  %20 = load %struct.conversion*, %struct.conversion** %6, align 4, !dbg !4143
  %21 = getelementptr inbounds %struct.conversion, %struct.conversion* %20, i32 0, i32 1, !dbg !4144
  %22 = load i8, i8* %21, align 1, !dbg !4144
  %23 = call i32 @conversion_radix(i8 noundef zeroext %22) #10, !dbg !4145
  store i32 %23, i32* %10, align 4, !dbg !4142
  call void @llvm.dbg.declare(metadata i8** %11, metadata !4146, metadata !DIExpression()), !dbg !4147
  %24 = load i8*, i8** %7, align 4, !dbg !4148
  %25 = load i8*, i8** %8, align 4, !dbg !4149
  %26 = load i8*, i8** %7, align 4, !dbg !4150
  %27 = ptrtoint i8* %25 to i32, !dbg !4151
  %28 = ptrtoint i8* %26 to i32, !dbg !4151
  %29 = sub i32 %27, %28, !dbg !4151
  %30 = getelementptr inbounds i8, i8* %24, i32 %29, !dbg !4152
  store i8* %30, i8** %11, align 4, !dbg !4147
  br label %31, !dbg !4153

31:                                               ; preds = %71, %4
  call void @llvm.dbg.declare(metadata i32* %12, metadata !4154, metadata !DIExpression()), !dbg !4156
  %32 = load i64, i64* %5, align 8, !dbg !4157
  %33 = load i32, i32* %10, align 4, !dbg !4158
  %34 = zext i32 %33 to i64, !dbg !4158
  %35 = urem i64 %32, %34, !dbg !4159
  %36 = trunc i64 %35 to i32, !dbg !4160
  store i32 %36, i32* %12, align 4, !dbg !4156
  %37 = load i32, i32* %12, align 4, !dbg !4161
  %38 = icmp ule i32 %37, 9, !dbg !4162
  br i1 %38, label %39, label %42, !dbg !4163

39:                                               ; preds = %31
  %40 = load i32, i32* %12, align 4, !dbg !4164
  %41 = add i32 48, %40, !dbg !4165
  br label %55, !dbg !4163

42:                                               ; preds = %31
  %43 = load i8, i8* %9, align 1, !dbg !4166
  %44 = trunc i8 %43 to i1, !dbg !4166
  br i1 %44, label %45, label %49, !dbg !4166

45:                                               ; preds = %42
  %46 = load i32, i32* %12, align 4, !dbg !4167
  %47 = add i32 65, %46, !dbg !4168
  %48 = sub i32 %47, 10, !dbg !4169
  br label %53, !dbg !4166

49:                                               ; preds = %42
  %50 = load i32, i32* %12, align 4, !dbg !4170
  %51 = add i32 97, %50, !dbg !4171
  %52 = sub i32 %51, 10, !dbg !4172
  br label %53, !dbg !4166

53:                                               ; preds = %49, %45
  %54 = phi i32 [ %48, %45 ], [ %52, %49 ], !dbg !4166
  br label %55, !dbg !4163

55:                                               ; preds = %53, %39
  %56 = phi i32 [ %41, %39 ], [ %54, %53 ], !dbg !4163
  %57 = trunc i32 %56 to i8, !dbg !4163
  %58 = load i8*, i8** %11, align 4, !dbg !4173
  %59 = getelementptr inbounds i8, i8* %58, i32 -1, !dbg !4173
  store i8* %59, i8** %11, align 4, !dbg !4173
  store i8 %57, i8* %59, align 1, !dbg !4174
  %60 = load i32, i32* %10, align 4, !dbg !4175
  %61 = zext i32 %60 to i64, !dbg !4175
  %62 = load i64, i64* %5, align 8, !dbg !4176
  %63 = udiv i64 %62, %61, !dbg !4176
  store i64 %63, i64* %5, align 8, !dbg !4176
  br label %64, !dbg !4177

64:                                               ; preds = %55
  %65 = load i64, i64* %5, align 8, !dbg !4178
  %66 = icmp ne i64 %65, 0, !dbg !4179
  br i1 %66, label %67, label %71, !dbg !4180

67:                                               ; preds = %64
  %68 = load i8*, i8** %7, align 4, !dbg !4181
  %69 = load i8*, i8** %11, align 4, !dbg !4182
  %70 = icmp ult i8* %68, %69, !dbg !4183
  br label %71

71:                                               ; preds = %67, %64
  %72 = phi i1 [ false, %64 ], [ %70, %67 ], !dbg !4184
  br i1 %72, label %31, label %73, !dbg !4177, !llvm.loop !4185

73:                                               ; preds = %71
  %74 = load %struct.conversion*, %struct.conversion** %6, align 4, !dbg !4187
  %75 = bitcast %struct.conversion* %74 to i24*, !dbg !4189
  %76 = load i24, i24* %75, align 4, !dbg !4189
  %77 = lshr i24 %76, 5, !dbg !4189
  %78 = and i24 %77, 1, !dbg !4189
  %79 = trunc i24 %78 to i1, !dbg !4189
  br i1 %79, label %80, label %101, !dbg !4190

80:                                               ; preds = %73
  %81 = load i32, i32* %10, align 4, !dbg !4191
  %82 = icmp eq i32 %81, 8, !dbg !4194
  br i1 %82, label %83, label %89, !dbg !4195

83:                                               ; preds = %80
  %84 = load %struct.conversion*, %struct.conversion** %6, align 4, !dbg !4196
  %85 = bitcast %struct.conversion* %84 to i24*, !dbg !4198
  %86 = load i24, i24* %85, align 4, !dbg !4199
  %87 = and i24 %86, -524289, !dbg !4199
  %88 = or i24 %87, 524288, !dbg !4199
  store i24 %88, i24* %85, align 4, !dbg !4199
  br label %100, !dbg !4200

89:                                               ; preds = %80
  %90 = load i32, i32* %10, align 4, !dbg !4201
  %91 = icmp eq i32 %90, 16, !dbg !4203
  br i1 %91, label %92, label %98, !dbg !4204

92:                                               ; preds = %89
  %93 = load %struct.conversion*, %struct.conversion** %6, align 4, !dbg !4205
  %94 = bitcast %struct.conversion* %93 to i24*, !dbg !4207
  %95 = load i24, i24* %94, align 4, !dbg !4208
  %96 = and i24 %95, -1048577, !dbg !4208
  %97 = or i24 %96, 1048576, !dbg !4208
  store i24 %97, i24* %94, align 4, !dbg !4208
  br label %99, !dbg !4209

98:                                               ; preds = %89
  br label %99

99:                                               ; preds = %98, %92
  br label %100

100:                                              ; preds = %99, %83
  br label %101, !dbg !4210

101:                                              ; preds = %100, %73
  %102 = load i8*, i8** %11, align 4, !dbg !4211
  ret i8* %102, !dbg !4212
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #2

; Function Attrs: noinline nounwind optnone
define internal void @store_count(%struct.conversion* noundef %0, i8* noundef %1, i32 noundef %2) #1 !dbg !4213 {
  %4 = alloca %struct.conversion*, align 4
  %5 = alloca i8*, align 4
  %6 = alloca i32, align 4
  store %struct.conversion* %0, %struct.conversion** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.conversion** %4, metadata !4218, metadata !DIExpression()), !dbg !4219
  store i8* %1, i8** %5, align 4
  call void @llvm.dbg.declare(metadata i8** %5, metadata !4220, metadata !DIExpression()), !dbg !4221
  store i32 %2, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !4222, metadata !DIExpression()), !dbg !4223
  %7 = load %struct.conversion*, %struct.conversion** %4, align 4, !dbg !4224
  %8 = bitcast %struct.conversion* %7 to i24*, !dbg !4225
  %9 = load i24, i24* %8, align 4, !dbg !4225
  %10 = lshr i24 %9, 11, !dbg !4225
  %11 = and i24 %10, 15, !dbg !4225
  %12 = zext i24 %11 to i32, !dbg !4225
  switch i32 %12, label %48 [
    i32 0, label %13
    i32 1, label %17
    i32 2, label %21
    i32 3, label %26
    i32 4, label %30
    i32 5, label %35
    i32 6, label %40
    i32 7, label %44
  ], !dbg !4226

13:                                               ; preds = %3
  %14 = load i32, i32* %6, align 4, !dbg !4227
  %15 = load i8*, i8** %5, align 4, !dbg !4229
  %16 = bitcast i8* %15 to i32*, !dbg !4230
  store i32 %14, i32* %16, align 4, !dbg !4231
  br label %49, !dbg !4232

17:                                               ; preds = %3
  %18 = load i32, i32* %6, align 4, !dbg !4233
  %19 = trunc i32 %18 to i8, !dbg !4234
  %20 = load i8*, i8** %5, align 4, !dbg !4235
  store i8 %19, i8* %20, align 1, !dbg !4236
  br label %49, !dbg !4237

21:                                               ; preds = %3
  %22 = load i32, i32* %6, align 4, !dbg !4238
  %23 = trunc i32 %22 to i16, !dbg !4239
  %24 = load i8*, i8** %5, align 4, !dbg !4240
  %25 = bitcast i8* %24 to i16*, !dbg !4241
  store i16 %23, i16* %25, align 2, !dbg !4242
  br label %49, !dbg !4243

26:                                               ; preds = %3
  %27 = load i32, i32* %6, align 4, !dbg !4244
  %28 = load i8*, i8** %5, align 4, !dbg !4245
  %29 = bitcast i8* %28 to i32*, !dbg !4246
  store i32 %27, i32* %29, align 4, !dbg !4247
  br label %49, !dbg !4248

30:                                               ; preds = %3
  %31 = load i32, i32* %6, align 4, !dbg !4249
  %32 = sext i32 %31 to i64, !dbg !4250
  %33 = load i8*, i8** %5, align 4, !dbg !4251
  %34 = bitcast i8* %33 to i64*, !dbg !4252
  store i64 %32, i64* %34, align 8, !dbg !4253
  br label %49, !dbg !4254

35:                                               ; preds = %3
  %36 = load i32, i32* %6, align 4, !dbg !4255
  %37 = sext i32 %36 to i64, !dbg !4256
  %38 = load i8*, i8** %5, align 4, !dbg !4257
  %39 = bitcast i8* %38 to i64*, !dbg !4258
  store i64 %37, i64* %39, align 8, !dbg !4259
  br label %49, !dbg !4260

40:                                               ; preds = %3
  %41 = load i32, i32* %6, align 4, !dbg !4261
  %42 = load i8*, i8** %5, align 4, !dbg !4262
  %43 = bitcast i8* %42 to i32*, !dbg !4263
  store i32 %41, i32* %43, align 4, !dbg !4264
  br label %49, !dbg !4265

44:                                               ; preds = %3
  %45 = load i32, i32* %6, align 4, !dbg !4266
  %46 = load i8*, i8** %5, align 4, !dbg !4267
  %47 = bitcast i8* %46 to i32*, !dbg !4268
  store i32 %45, i32* %47, align 4, !dbg !4269
  br label %49, !dbg !4270

48:                                               ; preds = %3
  br label %49, !dbg !4271

49:                                               ; preds = %48, %44, %40, %35, %30, %26, %21, %17, %13
  ret void, !dbg !4272
}

; Function Attrs: noinline nounwind optnone
define internal i32 @isupper(i32 noundef %0) #1 !dbg !4273 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !4275, metadata !DIExpression()), !dbg !4276
  %3 = load i32, i32* %2, align 4, !dbg !4277
  %4 = sub i32 %3, 65, !dbg !4278
  %5 = icmp ult i32 %4, 26, !dbg !4279
  %6 = zext i1 %5 to i32, !dbg !4279
  ret i32 %6, !dbg !4280
}

; Function Attrs: noinline nounwind optnone
define internal i32 @conversion_radix(i8 noundef zeroext %0) #1 !dbg !4281 {
  %2 = alloca i32, align 4
  %3 = alloca i8, align 1
  store i8 %0, i8* %3, align 1
  call void @llvm.dbg.declare(metadata i8* %3, metadata !4284, metadata !DIExpression()), !dbg !4285
  %4 = load i8, i8* %3, align 1, !dbg !4286
  %5 = zext i8 %4 to i32, !dbg !4286
  switch i32 %5, label %6 [
    i32 100, label %7
    i32 105, label %7
    i32 117, label %7
    i32 111, label %8
    i32 112, label %9
    i32 120, label %9
    i32 88, label %9
  ], !dbg !4287

6:                                                ; preds = %1
  br label %7, !dbg !4288

7:                                                ; preds = %1, %1, %1, %6
  store i32 10, i32* %2, align 4, !dbg !4289
  br label %10, !dbg !4289

8:                                                ; preds = %1
  store i32 8, i32* %2, align 4, !dbg !4291
  br label %10, !dbg !4291

9:                                                ; preds = %1, %1, %1
  store i32 16, i32* %2, align 4, !dbg !4292
  br label %10, !dbg !4292

10:                                               ; preds = %9, %8, %7
  %11 = load i32, i32* %2, align 4, !dbg !4293
  ret i32 %11, !dbg !4293
}

; Function Attrs: argmemonly nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i32(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i32, i1 immarg) #7

; Function Attrs: noinline nounwind optnone
define internal i8* @extract_flags(%struct.conversion* noundef %0, i8* noundef %1) #1 !dbg !4294 {
  %3 = alloca %struct.conversion*, align 4
  %4 = alloca i8*, align 4
  %5 = alloca i8, align 1
  store %struct.conversion* %0, %struct.conversion** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.conversion** %3, metadata !4295, metadata !DIExpression()), !dbg !4296
  store i8* %1, i8** %4, align 4
  call void @llvm.dbg.declare(metadata i8** %4, metadata !4297, metadata !DIExpression()), !dbg !4298
  call void @llvm.dbg.declare(metadata i8* %5, metadata !4299, metadata !DIExpression()), !dbg !4300
  store i8 1, i8* %5, align 1, !dbg !4300
  br label %6, !dbg !4301

6:                                                ; preds = %48, %2
  %7 = load i8*, i8** %4, align 4, !dbg !4302
  %8 = load i8, i8* %7, align 1, !dbg !4304
  %9 = zext i8 %8 to i32, !dbg !4304
  switch i32 %9, label %40 [
    i32 45, label %10
    i32 43, label %16
    i32 32, label %22
    i32 35, label %28
    i32 48, label %34
  ], !dbg !4305

10:                                               ; preds = %6
  %11 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !4306
  %12 = bitcast %struct.conversion* %11 to i24*, !dbg !4308
  %13 = load i24, i24* %12, align 4, !dbg !4309
  %14 = and i24 %13, -5, !dbg !4309
  %15 = or i24 %14, 4, !dbg !4309
  store i24 %15, i24* %12, align 4, !dbg !4309
  br label %41, !dbg !4310

16:                                               ; preds = %6
  %17 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !4311
  %18 = bitcast %struct.conversion* %17 to i24*, !dbg !4312
  %19 = load i24, i24* %18, align 4, !dbg !4313
  %20 = and i24 %19, -9, !dbg !4313
  %21 = or i24 %20, 8, !dbg !4313
  store i24 %21, i24* %18, align 4, !dbg !4313
  br label %41, !dbg !4314

22:                                               ; preds = %6
  %23 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !4315
  %24 = bitcast %struct.conversion* %23 to i24*, !dbg !4316
  %25 = load i24, i24* %24, align 4, !dbg !4317
  %26 = and i24 %25, -17, !dbg !4317
  %27 = or i24 %26, 16, !dbg !4317
  store i24 %27, i24* %24, align 4, !dbg !4317
  br label %41, !dbg !4318

28:                                               ; preds = %6
  %29 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !4319
  %30 = bitcast %struct.conversion* %29 to i24*, !dbg !4320
  %31 = load i24, i24* %30, align 4, !dbg !4321
  %32 = and i24 %31, -33, !dbg !4321
  %33 = or i24 %32, 32, !dbg !4321
  store i24 %33, i24* %30, align 4, !dbg !4321
  br label %41, !dbg !4322

34:                                               ; preds = %6
  %35 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !4323
  %36 = bitcast %struct.conversion* %35 to i24*, !dbg !4324
  %37 = load i24, i24* %36, align 4, !dbg !4325
  %38 = and i24 %37, -65, !dbg !4325
  %39 = or i24 %38, 64, !dbg !4325
  store i24 %39, i24* %36, align 4, !dbg !4325
  br label %41, !dbg !4326

40:                                               ; preds = %6
  store i8 0, i8* %5, align 1, !dbg !4327
  br label %41, !dbg !4328

41:                                               ; preds = %40, %34, %28, %22, %16, %10
  %42 = load i8, i8* %5, align 1, !dbg !4329
  %43 = trunc i8 %42 to i1, !dbg !4329
  br i1 %43, label %44, label %47, !dbg !4331

44:                                               ; preds = %41
  %45 = load i8*, i8** %4, align 4, !dbg !4332
  %46 = getelementptr inbounds i8, i8* %45, i32 1, !dbg !4332
  store i8* %46, i8** %4, align 4, !dbg !4332
  br label %47, !dbg !4334

47:                                               ; preds = %44, %41
  br label %48, !dbg !4335

48:                                               ; preds = %47
  %49 = load i8, i8* %5, align 1, !dbg !4336
  %50 = trunc i8 %49 to i1, !dbg !4336
  br i1 %50, label %6, label %51, !dbg !4335, !llvm.loop !4337

51:                                               ; preds = %48
  %52 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !4339
  %53 = bitcast %struct.conversion* %52 to i24*, !dbg !4341
  %54 = load i24, i24* %53, align 4, !dbg !4341
  %55 = lshr i24 %54, 6, !dbg !4341
  %56 = and i24 %55, 1, !dbg !4341
  %57 = trunc i24 %56 to i1, !dbg !4341
  br i1 %57, label %58, label %71, !dbg !4342

58:                                               ; preds = %51
  %59 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !4343
  %60 = bitcast %struct.conversion* %59 to i24*, !dbg !4344
  %61 = load i24, i24* %60, align 4, !dbg !4344
  %62 = lshr i24 %61, 2, !dbg !4344
  %63 = and i24 %62, 1, !dbg !4344
  %64 = trunc i24 %63 to i1, !dbg !4344
  br i1 %64, label %65, label %71, !dbg !4345

65:                                               ; preds = %58
  %66 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !4346
  %67 = bitcast %struct.conversion* %66 to i24*, !dbg !4348
  %68 = load i24, i24* %67, align 4, !dbg !4349
  %69 = and i24 %68, -65, !dbg !4349
  %70 = or i24 %69, 0, !dbg !4349
  store i24 %70, i24* %67, align 4, !dbg !4349
  br label %71, !dbg !4350

71:                                               ; preds = %65, %58, %51
  %72 = load i8*, i8** %4, align 4, !dbg !4351
  ret i8* %72, !dbg !4352
}

; Function Attrs: noinline nounwind optnone
define internal i8* @extract_width(%struct.conversion* noundef %0, i8* noundef %1) #1 !dbg !4353 {
  %3 = alloca i8*, align 4
  %4 = alloca %struct.conversion*, align 4
  %5 = alloca i8*, align 4
  %6 = alloca i8*, align 4
  %7 = alloca i32, align 4
  store %struct.conversion* %0, %struct.conversion** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.conversion** %4, metadata !4354, metadata !DIExpression()), !dbg !4355
  store i8* %1, i8** %5, align 4
  call void @llvm.dbg.declare(metadata i8** %5, metadata !4356, metadata !DIExpression()), !dbg !4357
  %8 = load %struct.conversion*, %struct.conversion** %4, align 4, !dbg !4358
  %9 = bitcast %struct.conversion* %8 to i24*, !dbg !4359
  %10 = load i24, i24* %9, align 4, !dbg !4360
  %11 = and i24 %10, -129, !dbg !4360
  %12 = or i24 %11, 128, !dbg !4360
  store i24 %12, i24* %9, align 4, !dbg !4360
  %13 = load i8*, i8** %5, align 4, !dbg !4361
  %14 = load i8, i8* %13, align 1, !dbg !4363
  %15 = zext i8 %14 to i32, !dbg !4363
  %16 = icmp eq i32 %15, 42, !dbg !4364
  br i1 %16, label %17, label %25, !dbg !4365

17:                                               ; preds = %2
  %18 = load %struct.conversion*, %struct.conversion** %4, align 4, !dbg !4366
  %19 = bitcast %struct.conversion* %18 to i24*, !dbg !4368
  %20 = load i24, i24* %19, align 4, !dbg !4369
  %21 = and i24 %20, -257, !dbg !4369
  %22 = or i24 %21, 256, !dbg !4369
  store i24 %22, i24* %19, align 4, !dbg !4369
  %23 = load i8*, i8** %5, align 4, !dbg !4370
  %24 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !4370
  store i8* %24, i8** %5, align 4, !dbg !4370
  store i8* %24, i8** %3, align 4, !dbg !4371
  br label %74, !dbg !4371

25:                                               ; preds = %2
  call void @llvm.dbg.declare(metadata i8** %6, metadata !4372, metadata !DIExpression()), !dbg !4373
  %26 = load i8*, i8** %5, align 4, !dbg !4374
  store i8* %26, i8** %6, align 4, !dbg !4373
  call void @llvm.dbg.declare(metadata i32* %7, metadata !4375, metadata !DIExpression()), !dbg !4376
  %27 = call i32 @extract_decimal(i8** noundef %5) #10, !dbg !4377
  store i32 %27, i32* %7, align 4, !dbg !4376
  %28 = load i8*, i8** %5, align 4, !dbg !4378
  %29 = load i8*, i8** %6, align 4, !dbg !4380
  %30 = icmp ne i8* %28, %29, !dbg !4381
  br i1 %30, label %31, label %72, !dbg !4382

31:                                               ; preds = %25
  %32 = load %struct.conversion*, %struct.conversion** %4, align 4, !dbg !4383
  %33 = bitcast %struct.conversion* %32 to i24*, !dbg !4385
  %34 = load i24, i24* %33, align 4, !dbg !4386
  %35 = and i24 %34, -129, !dbg !4386
  %36 = or i24 %35, 128, !dbg !4386
  store i24 %36, i24* %33, align 4, !dbg !4386
  %37 = load i32, i32* %7, align 4, !dbg !4387
  %38 = load %struct.conversion*, %struct.conversion** %4, align 4, !dbg !4388
  %39 = getelementptr inbounds %struct.conversion, %struct.conversion* %38, i32 0, i32 2, !dbg !4389
  %40 = bitcast %union.anon.68* %39 to i32*, !dbg !4389
  store i32 %37, i32* %40, align 4, !dbg !4390
  %41 = load %struct.conversion*, %struct.conversion** %4, align 4, !dbg !4391
  %42 = getelementptr inbounds %struct.conversion, %struct.conversion* %41, i32 0, i32 2, !dbg !4392
  %43 = bitcast %union.anon.68* %42 to i32*, !dbg !4392
  %44 = load i32, i32* %43, align 4, !dbg !4392
  %45 = icmp slt i32 %44, 0, !dbg !4393
  br i1 %45, label %53, label %46, !dbg !4394

46:                                               ; preds = %31
  %47 = load i32, i32* %7, align 4, !dbg !4395
  %48 = load %struct.conversion*, %struct.conversion** %4, align 4, !dbg !4396
  %49 = getelementptr inbounds %struct.conversion, %struct.conversion* %48, i32 0, i32 2, !dbg !4397
  %50 = bitcast %union.anon.68* %49 to i32*, !dbg !4397
  %51 = load i32, i32* %50, align 4, !dbg !4397
  %52 = icmp ne i32 %47, %51, !dbg !4398
  br label %53, !dbg !4394

53:                                               ; preds = %46, %31
  %54 = phi i1 [ true, %31 ], [ %52, %46 ]
  %55 = zext i1 %54 to i32, !dbg !4394
  %56 = load %struct.conversion*, %struct.conversion** %4, align 4, !dbg !4399
  %57 = bitcast %struct.conversion* %56 to i24*, !dbg !4400
  %58 = load i24, i24* %57, align 4, !dbg !4401
  %59 = lshr i24 %58, 1, !dbg !4401
  %60 = and i24 %59, 1, !dbg !4401
  %61 = trunc i24 %60 to i1, !dbg !4401
  %62 = zext i1 %61 to i32, !dbg !4401
  %63 = or i32 %62, %55, !dbg !4401
  %64 = icmp ne i32 %63, 0, !dbg !4401
  %65 = zext i1 %64 to i24, !dbg !4401
  %66 = load i24, i24* %57, align 4, !dbg !4401
  %67 = shl i24 %65, 1, !dbg !4401
  %68 = and i24 %66, -3, !dbg !4401
  %69 = or i24 %68, %67, !dbg !4401
  store i24 %69, i24* %57, align 4, !dbg !4401
  %70 = trunc i24 %65 to i8, !dbg !4401
  %71 = trunc i8 %70 to i1, !dbg !4401
  br label %72, !dbg !4402

72:                                               ; preds = %53, %25
  %73 = load i8*, i8** %5, align 4, !dbg !4403
  store i8* %73, i8** %3, align 4, !dbg !4404
  br label %74, !dbg !4404

74:                                               ; preds = %72, %17
  %75 = load i8*, i8** %3, align 4, !dbg !4405
  ret i8* %75, !dbg !4405
}

; Function Attrs: noinline nounwind optnone
define internal i8* @extract_prec(%struct.conversion* noundef %0, i8* noundef %1) #1 !dbg !4406 {
  %3 = alloca i8*, align 4
  %4 = alloca %struct.conversion*, align 4
  %5 = alloca i8*, align 4
  %6 = alloca i32, align 4
  store %struct.conversion* %0, %struct.conversion** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.conversion** %4, metadata !4407, metadata !DIExpression()), !dbg !4408
  store i8* %1, i8** %5, align 4
  call void @llvm.dbg.declare(metadata i8** %5, metadata !4409, metadata !DIExpression()), !dbg !4410
  %7 = load i8*, i8** %5, align 4, !dbg !4411
  %8 = load i8, i8* %7, align 1, !dbg !4412
  %9 = zext i8 %8 to i32, !dbg !4412
  %10 = icmp eq i32 %9, 46, !dbg !4413
  %11 = load %struct.conversion*, %struct.conversion** %4, align 4, !dbg !4414
  %12 = bitcast %struct.conversion* %11 to i24*, !dbg !4415
  %13 = zext i1 %10 to i24, !dbg !4416
  %14 = load i24, i24* %12, align 4, !dbg !4416
  %15 = shl i24 %13, 9, !dbg !4416
  %16 = and i24 %14, -513, !dbg !4416
  %17 = or i24 %16, %15, !dbg !4416
  store i24 %17, i24* %12, align 4, !dbg !4416
  %18 = trunc i24 %13 to i8, !dbg !4416
  %19 = trunc i8 %18 to i1, !dbg !4416
  %20 = load %struct.conversion*, %struct.conversion** %4, align 4, !dbg !4417
  %21 = bitcast %struct.conversion* %20 to i24*, !dbg !4419
  %22 = load i24, i24* %21, align 4, !dbg !4419
  %23 = lshr i24 %22, 9, !dbg !4419
  %24 = and i24 %23, 1, !dbg !4419
  %25 = trunc i24 %24 to i1, !dbg !4419
  br i1 %25, label %28, label %26, !dbg !4420

26:                                               ; preds = %2
  %27 = load i8*, i8** %5, align 4, !dbg !4421
  store i8* %27, i8** %3, align 4, !dbg !4423
  br label %81, !dbg !4423

28:                                               ; preds = %2
  %29 = load i8*, i8** %5, align 4, !dbg !4424
  %30 = getelementptr inbounds i8, i8* %29, i32 1, !dbg !4424
  store i8* %30, i8** %5, align 4, !dbg !4424
  %31 = load i8*, i8** %5, align 4, !dbg !4425
  %32 = load i8, i8* %31, align 1, !dbg !4427
  %33 = zext i8 %32 to i32, !dbg !4427
  %34 = icmp eq i32 %33, 42, !dbg !4428
  br i1 %34, label %35, label %43, !dbg !4429

35:                                               ; preds = %28
  %36 = load %struct.conversion*, %struct.conversion** %4, align 4, !dbg !4430
  %37 = bitcast %struct.conversion* %36 to i24*, !dbg !4432
  %38 = load i24, i24* %37, align 4, !dbg !4433
  %39 = and i24 %38, -1025, !dbg !4433
  %40 = or i24 %39, 1024, !dbg !4433
  store i24 %40, i24* %37, align 4, !dbg !4433
  %41 = load i8*, i8** %5, align 4, !dbg !4434
  %42 = getelementptr inbounds i8, i8* %41, i32 1, !dbg !4434
  store i8* %42, i8** %5, align 4, !dbg !4434
  store i8* %42, i8** %3, align 4, !dbg !4435
  br label %81, !dbg !4435

43:                                               ; preds = %28
  call void @llvm.dbg.declare(metadata i32* %6, metadata !4436, metadata !DIExpression()), !dbg !4437
  %44 = call i32 @extract_decimal(i8** noundef %5) #10, !dbg !4438
  store i32 %44, i32* %6, align 4, !dbg !4437
  %45 = load i32, i32* %6, align 4, !dbg !4439
  %46 = load %struct.conversion*, %struct.conversion** %4, align 4, !dbg !4440
  %47 = getelementptr inbounds %struct.conversion, %struct.conversion* %46, i32 0, i32 3, !dbg !4441
  %48 = bitcast %union.anon.68* %47 to i32*, !dbg !4441
  store i32 %45, i32* %48, align 4, !dbg !4442
  %49 = load %struct.conversion*, %struct.conversion** %4, align 4, !dbg !4443
  %50 = getelementptr inbounds %struct.conversion, %struct.conversion* %49, i32 0, i32 3, !dbg !4444
  %51 = bitcast %union.anon.68* %50 to i32*, !dbg !4444
  %52 = load i32, i32* %51, align 4, !dbg !4444
  %53 = icmp slt i32 %52, 0, !dbg !4445
  br i1 %53, label %61, label %54, !dbg !4446

54:                                               ; preds = %43
  %55 = load i32, i32* %6, align 4, !dbg !4447
  %56 = load %struct.conversion*, %struct.conversion** %4, align 4, !dbg !4448
  %57 = getelementptr inbounds %struct.conversion, %struct.conversion* %56, i32 0, i32 3, !dbg !4449
  %58 = bitcast %union.anon.68* %57 to i32*, !dbg !4449
  %59 = load i32, i32* %58, align 4, !dbg !4449
  %60 = icmp ne i32 %55, %59, !dbg !4450
  br label %61, !dbg !4446

61:                                               ; preds = %54, %43
  %62 = phi i1 [ true, %43 ], [ %60, %54 ]
  %63 = zext i1 %62 to i32, !dbg !4446
  %64 = load %struct.conversion*, %struct.conversion** %4, align 4, !dbg !4451
  %65 = bitcast %struct.conversion* %64 to i24*, !dbg !4452
  %66 = load i24, i24* %65, align 4, !dbg !4453
  %67 = lshr i24 %66, 1, !dbg !4453
  %68 = and i24 %67, 1, !dbg !4453
  %69 = trunc i24 %68 to i1, !dbg !4453
  %70 = zext i1 %69 to i32, !dbg !4453
  %71 = or i32 %70, %63, !dbg !4453
  %72 = icmp ne i32 %71, 0, !dbg !4453
  %73 = zext i1 %72 to i24, !dbg !4453
  %74 = load i24, i24* %65, align 4, !dbg !4453
  %75 = shl i24 %73, 1, !dbg !4453
  %76 = and i24 %74, -3, !dbg !4453
  %77 = or i24 %76, %75, !dbg !4453
  store i24 %77, i24* %65, align 4, !dbg !4453
  %78 = trunc i24 %73 to i8, !dbg !4453
  %79 = trunc i8 %78 to i1, !dbg !4453
  %80 = load i8*, i8** %5, align 4, !dbg !4454
  store i8* %80, i8** %3, align 4, !dbg !4455
  br label %81, !dbg !4455

81:                                               ; preds = %61, %35, %26
  %82 = load i8*, i8** %3, align 4, !dbg !4456
  ret i8* %82, !dbg !4456
}

; Function Attrs: noinline nounwind optnone
define internal i8* @extract_length(%struct.conversion* noundef %0, i8* noundef %1) #1 !dbg !4457 {
  %3 = alloca %struct.conversion*, align 4
  %4 = alloca i8*, align 4
  store %struct.conversion* %0, %struct.conversion** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.conversion** %3, metadata !4458, metadata !DIExpression()), !dbg !4459
  store i8* %1, i8** %4, align 4
  call void @llvm.dbg.declare(metadata i8** %4, metadata !4460, metadata !DIExpression()), !dbg !4461
  %5 = load i8*, i8** %4, align 4, !dbg !4462
  %6 = load i8, i8* %5, align 1, !dbg !4463
  %7 = zext i8 %6 to i32, !dbg !4463
  switch i32 %7, label %87 [
    i32 104, label %8
    i32 108, label %29
    i32 106, label %50
    i32 122, label %58
    i32 116, label %66
    i32 76, label %74
  ], !dbg !4464

8:                                                ; preds = %2
  %9 = load i8*, i8** %4, align 4, !dbg !4465
  %10 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !4465
  store i8* %10, i8** %4, align 4, !dbg !4465
  %11 = load i8, i8* %10, align 1, !dbg !4468
  %12 = zext i8 %11 to i32, !dbg !4468
  %13 = icmp eq i32 %12, 104, !dbg !4469
  br i1 %13, label %14, label %22, !dbg !4470

14:                                               ; preds = %8
  %15 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !4471
  %16 = bitcast %struct.conversion* %15 to i24*, !dbg !4473
  %17 = load i24, i24* %16, align 4, !dbg !4474
  %18 = and i24 %17, -30721, !dbg !4474
  %19 = or i24 %18, 2048, !dbg !4474
  store i24 %19, i24* %16, align 4, !dbg !4474
  %20 = load i8*, i8** %4, align 4, !dbg !4475
  %21 = getelementptr inbounds i8, i8* %20, i32 1, !dbg !4475
  store i8* %21, i8** %4, align 4, !dbg !4475
  br label %28, !dbg !4476

22:                                               ; preds = %8
  %23 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !4477
  %24 = bitcast %struct.conversion* %23 to i24*, !dbg !4479
  %25 = load i24, i24* %24, align 4, !dbg !4480
  %26 = and i24 %25, -30721, !dbg !4480
  %27 = or i24 %26, 4096, !dbg !4480
  store i24 %27, i24* %24, align 4, !dbg !4480
  br label %28

28:                                               ; preds = %22, %14
  br label %93, !dbg !4481

29:                                               ; preds = %2
  %30 = load i8*, i8** %4, align 4, !dbg !4482
  %31 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !4482
  store i8* %31, i8** %4, align 4, !dbg !4482
  %32 = load i8, i8* %31, align 1, !dbg !4484
  %33 = zext i8 %32 to i32, !dbg !4484
  %34 = icmp eq i32 %33, 108, !dbg !4485
  br i1 %34, label %35, label %43, !dbg !4486

35:                                               ; preds = %29
  %36 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !4487
  %37 = bitcast %struct.conversion* %36 to i24*, !dbg !4489
  %38 = load i24, i24* %37, align 4, !dbg !4490
  %39 = and i24 %38, -30721, !dbg !4490
  %40 = or i24 %39, 8192, !dbg !4490
  store i24 %40, i24* %37, align 4, !dbg !4490
  %41 = load i8*, i8** %4, align 4, !dbg !4491
  %42 = getelementptr inbounds i8, i8* %41, i32 1, !dbg !4491
  store i8* %42, i8** %4, align 4, !dbg !4491
  br label %49, !dbg !4492

43:                                               ; preds = %29
  %44 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !4493
  %45 = bitcast %struct.conversion* %44 to i24*, !dbg !4495
  %46 = load i24, i24* %45, align 4, !dbg !4496
  %47 = and i24 %46, -30721, !dbg !4496
  %48 = or i24 %47, 6144, !dbg !4496
  store i24 %48, i24* %45, align 4, !dbg !4496
  br label %49

49:                                               ; preds = %43, %35
  br label %93, !dbg !4497

50:                                               ; preds = %2
  %51 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !4498
  %52 = bitcast %struct.conversion* %51 to i24*, !dbg !4499
  %53 = load i24, i24* %52, align 4, !dbg !4500
  %54 = and i24 %53, -30721, !dbg !4500
  %55 = or i24 %54, 10240, !dbg !4500
  store i24 %55, i24* %52, align 4, !dbg !4500
  %56 = load i8*, i8** %4, align 4, !dbg !4501
  %57 = getelementptr inbounds i8, i8* %56, i32 1, !dbg !4501
  store i8* %57, i8** %4, align 4, !dbg !4501
  br label %93, !dbg !4502

58:                                               ; preds = %2
  %59 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !4503
  %60 = bitcast %struct.conversion* %59 to i24*, !dbg !4504
  %61 = load i24, i24* %60, align 4, !dbg !4505
  %62 = and i24 %61, -30721, !dbg !4505
  %63 = or i24 %62, 12288, !dbg !4505
  store i24 %63, i24* %60, align 4, !dbg !4505
  %64 = load i8*, i8** %4, align 4, !dbg !4506
  %65 = getelementptr inbounds i8, i8* %64, i32 1, !dbg !4506
  store i8* %65, i8** %4, align 4, !dbg !4506
  br label %93, !dbg !4507

66:                                               ; preds = %2
  %67 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !4508
  %68 = bitcast %struct.conversion* %67 to i24*, !dbg !4509
  %69 = load i24, i24* %68, align 4, !dbg !4510
  %70 = and i24 %69, -30721, !dbg !4510
  %71 = or i24 %70, 14336, !dbg !4510
  store i24 %71, i24* %68, align 4, !dbg !4510
  %72 = load i8*, i8** %4, align 4, !dbg !4511
  %73 = getelementptr inbounds i8, i8* %72, i32 1, !dbg !4511
  store i8* %73, i8** %4, align 4, !dbg !4511
  br label %93, !dbg !4512

74:                                               ; preds = %2
  %75 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !4513
  %76 = bitcast %struct.conversion* %75 to i24*, !dbg !4514
  %77 = load i24, i24* %76, align 4, !dbg !4515
  %78 = and i24 %77, -30721, !dbg !4515
  %79 = or i24 %78, 16384, !dbg !4515
  store i24 %79, i24* %76, align 4, !dbg !4515
  %80 = load i8*, i8** %4, align 4, !dbg !4516
  %81 = getelementptr inbounds i8, i8* %80, i32 1, !dbg !4516
  store i8* %81, i8** %4, align 4, !dbg !4516
  %82 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !4517
  %83 = bitcast %struct.conversion* %82 to i24*, !dbg !4518
  %84 = load i24, i24* %83, align 4, !dbg !4519
  %85 = and i24 %84, -3, !dbg !4519
  %86 = or i24 %85, 2, !dbg !4519
  store i24 %86, i24* %83, align 4, !dbg !4519
  br label %93, !dbg !4520

87:                                               ; preds = %2
  %88 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !4521
  %89 = bitcast %struct.conversion* %88 to i24*, !dbg !4522
  %90 = load i24, i24* %89, align 4, !dbg !4523
  %91 = and i24 %90, -30721, !dbg !4523
  %92 = or i24 %91, 0, !dbg !4523
  store i24 %92, i24* %89, align 4, !dbg !4523
  br label %93, !dbg !4524

93:                                               ; preds = %87, %74, %66, %58, %50, %49, %28
  %94 = load i8*, i8** %4, align 4, !dbg !4525
  ret i8* %94, !dbg !4526
}

; Function Attrs: noinline nounwind optnone
define internal i8* @extract_specifier(%struct.conversion* noundef %0, i8* noundef %1) #1 !dbg !4527 {
  %3 = alloca %struct.conversion*, align 4
  %4 = alloca i8*, align 4
  %5 = alloca i8, align 1
  store %struct.conversion* %0, %struct.conversion** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.conversion** %3, metadata !4528, metadata !DIExpression()), !dbg !4529
  store i8* %1, i8** %4, align 4
  call void @llvm.dbg.declare(metadata i8** %4, metadata !4530, metadata !DIExpression()), !dbg !4531
  call void @llvm.dbg.declare(metadata i8* %5, metadata !4532, metadata !DIExpression()), !dbg !4533
  store i8 0, i8* %5, align 1, !dbg !4533
  %6 = load i8*, i8** %4, align 4, !dbg !4534
  %7 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !4534
  store i8* %7, i8** %4, align 4, !dbg !4534
  %8 = load i8, i8* %6, align 1, !dbg !4535
  %9 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !4536
  %10 = getelementptr inbounds %struct.conversion, %struct.conversion* %9, i32 0, i32 1, !dbg !4537
  store i8 %8, i8* %10, align 1, !dbg !4538
  %11 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !4539
  %12 = getelementptr inbounds %struct.conversion, %struct.conversion* %11, i32 0, i32 1, !dbg !4540
  %13 = load i8, i8* %12, align 1, !dbg !4540
  %14 = zext i8 %13 to i32, !dbg !4539
  switch i32 %14, label %94 [
    i32 100, label %15
    i32 105, label %15
    i32 111, label %21
    i32 99, label %21
    i32 117, label %21
    i32 120, label %21
    i32 88, label %21
    i32 97, label %58
    i32 65, label %58
    i32 101, label %58
    i32 69, label %58
    i32 102, label %58
    i32 70, label %58
    i32 103, label %58
    i32 71, label %58
    i32 110, label %64
    i32 115, label %79
    i32 112, label %79
  ], !dbg !4541

15:                                               ; preds = %2, %2
  %16 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !4542
  %17 = bitcast %struct.conversion* %16 to i24*, !dbg !4544
  %18 = load i24, i24* %17, align 4, !dbg !4545
  %19 = and i24 %18, -458753, !dbg !4545
  %20 = or i24 %19, 65536, !dbg !4545
  store i24 %20, i24* %17, align 4, !dbg !4545
  br label %27, !dbg !4546

21:                                               ; preds = %2, %2, %2, %2, %2
  %22 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !4547
  %23 = bitcast %struct.conversion* %22 to i24*, !dbg !4548
  %24 = load i24, i24* %23, align 4, !dbg !4549
  %25 = and i24 %24, -458753, !dbg !4549
  %26 = or i24 %25, 131072, !dbg !4549
  store i24 %26, i24* %23, align 4, !dbg !4549
  br label %27, !dbg !4547

27:                                               ; preds = %21, %15
  call void @llvm.dbg.label(metadata !4550), !dbg !4551
  %28 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !4552
  %29 = bitcast %struct.conversion* %28 to i24*, !dbg !4554
  %30 = load i24, i24* %29, align 4, !dbg !4554
  %31 = lshr i24 %30, 11, !dbg !4554
  %32 = and i24 %31, 15, !dbg !4554
  %33 = zext i24 %32 to i32, !dbg !4554
  %34 = icmp eq i32 %33, 8, !dbg !4555
  br i1 %34, label %35, label %41, !dbg !4556

35:                                               ; preds = %27
  %36 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !4557
  %37 = bitcast %struct.conversion* %36 to i24*, !dbg !4559
  %38 = load i24, i24* %37, align 4, !dbg !4560
  %39 = and i24 %38, -2, !dbg !4560
  %40 = or i24 %39, 1, !dbg !4560
  store i24 %40, i24* %37, align 4, !dbg !4560
  br label %41, !dbg !4561

41:                                               ; preds = %35, %27
  %42 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !4562
  %43 = getelementptr inbounds %struct.conversion, %struct.conversion* %42, i32 0, i32 1, !dbg !4564
  %44 = load i8, i8* %43, align 1, !dbg !4564
  %45 = zext i8 %44 to i32, !dbg !4562
  %46 = icmp eq i32 %45, 99, !dbg !4565
  br i1 %46, label %47, label %56, !dbg !4566

47:                                               ; preds = %41
  %48 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !4567
  %49 = bitcast %struct.conversion* %48 to i24*, !dbg !4569
  %50 = load i24, i24* %49, align 4, !dbg !4569
  %51 = lshr i24 %50, 11, !dbg !4569
  %52 = and i24 %51, 15, !dbg !4569
  %53 = zext i24 %52 to i32, !dbg !4569
  %54 = icmp ne i32 %53, 0, !dbg !4570
  %55 = zext i1 %54 to i8, !dbg !4571
  store i8 %55, i8* %5, align 1, !dbg !4571
  br label %57, !dbg !4572

56:                                               ; preds = %41
  br label %57

57:                                               ; preds = %56, %47
  br label %100, !dbg !4573

58:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2
  %59 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !4574
  %60 = bitcast %struct.conversion* %59 to i24*, !dbg !4575
  %61 = load i24, i24* %60, align 4, !dbg !4576
  %62 = and i24 %61, -458753, !dbg !4576
  %63 = or i24 %62, 262144, !dbg !4576
  store i24 %63, i24* %60, align 4, !dbg !4576
  store i8 1, i8* %5, align 1, !dbg !4577
  br label %100, !dbg !4580

64:                                               ; preds = %2
  %65 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !4581
  %66 = bitcast %struct.conversion* %65 to i24*, !dbg !4582
  %67 = load i24, i24* %66, align 4, !dbg !4583
  %68 = and i24 %67, -458753, !dbg !4583
  %69 = or i24 %68, 196608, !dbg !4583
  store i24 %69, i24* %66, align 4, !dbg !4583
  %70 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !4584
  %71 = bitcast %struct.conversion* %70 to i24*, !dbg !4586
  %72 = load i24, i24* %71, align 4, !dbg !4586
  %73 = lshr i24 %72, 11, !dbg !4586
  %74 = and i24 %73, 15, !dbg !4586
  %75 = zext i24 %74 to i32, !dbg !4586
  %76 = icmp eq i32 %75, 8, !dbg !4587
  br i1 %76, label %77, label %78, !dbg !4588

77:                                               ; preds = %64
  store i8 1, i8* %5, align 1, !dbg !4589
  br label %78, !dbg !4591

78:                                               ; preds = %77, %64
  br label %100, !dbg !4592

79:                                               ; preds = %2, %2
  %80 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !4593
  %81 = bitcast %struct.conversion* %80 to i24*, !dbg !4594
  %82 = load i24, i24* %81, align 4, !dbg !4595
  %83 = and i24 %82, -458753, !dbg !4595
  %84 = or i24 %83, 196608, !dbg !4595
  store i24 %84, i24* %81, align 4, !dbg !4595
  %85 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !4596
  %86 = bitcast %struct.conversion* %85 to i24*, !dbg !4598
  %87 = load i24, i24* %86, align 4, !dbg !4598
  %88 = lshr i24 %87, 11, !dbg !4598
  %89 = and i24 %88, 15, !dbg !4598
  %90 = zext i24 %89 to i32, !dbg !4598
  %91 = icmp ne i32 %90, 0, !dbg !4599
  br i1 %91, label %92, label %93, !dbg !4600

92:                                               ; preds = %79
  store i8 1, i8* %5, align 1, !dbg !4601
  br label %93, !dbg !4603

93:                                               ; preds = %92, %79
  br label %100, !dbg !4604

94:                                               ; preds = %2
  %95 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !4605
  %96 = bitcast %struct.conversion* %95 to i24*, !dbg !4606
  %97 = load i24, i24* %96, align 4, !dbg !4607
  %98 = and i24 %97, -2, !dbg !4607
  %99 = or i24 %98, 1, !dbg !4607
  store i24 %99, i24* %96, align 4, !dbg !4607
  br label %100, !dbg !4608

100:                                              ; preds = %94, %93, %78, %58, %57
  %101 = load i8, i8* %5, align 1, !dbg !4609
  %102 = trunc i8 %101 to i1, !dbg !4609
  %103 = zext i1 %102 to i32, !dbg !4609
  %104 = load %struct.conversion*, %struct.conversion** %3, align 4, !dbg !4610
  %105 = bitcast %struct.conversion* %104 to i24*, !dbg !4611
  %106 = load i24, i24* %105, align 4, !dbg !4612
  %107 = lshr i24 %106, 1, !dbg !4612
  %108 = and i24 %107, 1, !dbg !4612
  %109 = trunc i24 %108 to i1, !dbg !4612
  %110 = zext i1 %109 to i32, !dbg !4612
  %111 = or i32 %110, %103, !dbg !4612
  %112 = icmp ne i32 %111, 0, !dbg !4612
  %113 = zext i1 %112 to i24, !dbg !4612
  %114 = load i24, i24* %105, align 4, !dbg !4612
  %115 = shl i24 %113, 1, !dbg !4612
  %116 = and i24 %114, -3, !dbg !4612
  %117 = or i24 %116, %115, !dbg !4612
  store i24 %117, i24* %105, align 4, !dbg !4612
  %118 = trunc i24 %113 to i8, !dbg !4612
  %119 = trunc i8 %118 to i1, !dbg !4612
  %120 = load i8*, i8** %4, align 4, !dbg !4613
  ret i8* %120, !dbg !4614
}

; Function Attrs: noinline nounwind optnone
define internal i32 @extract_decimal(i8** noundef %0) #1 !dbg !4615 {
  %2 = alloca i8**, align 4
  %3 = alloca i8*, align 4
  %4 = alloca i32, align 4
  store i8** %0, i8*** %2, align 4
  call void @llvm.dbg.declare(metadata i8*** %2, metadata !4619, metadata !DIExpression()), !dbg !4620
  call void @llvm.dbg.declare(metadata i8** %3, metadata !4621, metadata !DIExpression()), !dbg !4622
  %5 = load i8**, i8*** %2, align 4, !dbg !4623
  %6 = load i8*, i8** %5, align 4, !dbg !4624
  store i8* %6, i8** %3, align 4, !dbg !4622
  call void @llvm.dbg.declare(metadata i32* %4, metadata !4625, metadata !DIExpression()), !dbg !4626
  store i32 0, i32* %4, align 4, !dbg !4626
  br label %7, !dbg !4627

7:                                                ; preds = %13, %1
  %8 = load i8*, i8** %3, align 4, !dbg !4628
  %9 = load i8, i8* %8, align 1, !dbg !4629
  %10 = zext i8 %9 to i32, !dbg !4630
  %11 = call i32 @isdigit(i32 noundef %10) #10, !dbg !4631
  %12 = icmp ne i32 %11, 0, !dbg !4627
  br i1 %12, label %13, label %22, !dbg !4627

13:                                               ; preds = %7
  %14 = load i32, i32* %4, align 4, !dbg !4632
  %15 = mul i32 10, %14, !dbg !4634
  %16 = load i8*, i8** %3, align 4, !dbg !4635
  %17 = getelementptr inbounds i8, i8* %16, i32 1, !dbg !4635
  store i8* %17, i8** %3, align 4, !dbg !4635
  %18 = load i8, i8* %16, align 1, !dbg !4636
  %19 = zext i8 %18 to i32, !dbg !4636
  %20 = add i32 %15, %19, !dbg !4637
  %21 = sub i32 %20, 48, !dbg !4638
  store i32 %21, i32* %4, align 4, !dbg !4639
  br label %7, !dbg !4627, !llvm.loop !4640

22:                                               ; preds = %7
  %23 = load i8*, i8** %3, align 4, !dbg !4642
  %24 = load i8**, i8*** %2, align 4, !dbg !4643
  store i8* %23, i8** %24, align 4, !dbg !4644
  %25 = load i32, i32* %4, align 4, !dbg !4645
  ret i32 %25, !dbg !4646
}

; Function Attrs: noinline nounwind optnone
define internal i32 @isdigit(i32 noundef %0) #1 !dbg !4647 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !4648, metadata !DIExpression()), !dbg !4649
  %3 = load i32, i32* %2, align 4, !dbg !4650
  %4 = sub i32 %3, 48, !dbg !4651
  %5 = icmp ult i32 %4, 10, !dbg !4652
  %6 = zext i1 %5 to i32, !dbg !4652
  ret i32 %6, !dbg !4653
}

; Function Attrs: noinline nounwind optnone
define dso_local void @_ConfigAbsSyms() #1 !dbg !4654 {
  call void asm sideeffect ".globl\09CONFIG_GPIO\0A\09.equ\09CONFIG_GPIO,1\0A\09.type\09CONFIG_GPIO,%object", ""() #9, !dbg !4656, !srcloc !4657
  call void asm sideeffect ".globl\09CONFIG_GPIO_INIT_PRIORITY\0A\09.equ\09CONFIG_GPIO_INIT_PRIORITY,40\0A\09.type\09CONFIG_GPIO_INIT_PRIORITY,%object", ""() #9, !dbg !4658, !srcloc !4659
  call void asm sideeffect ".globl\09CONFIG_UART_INTERRUPT_DRIVEN\0A\09.equ\09CONFIG_UART_INTERRUPT_DRIVEN,1\0A\09.type\09CONFIG_UART_INTERRUPT_DRIVEN,%object", ""() #9, !dbg !4660, !srcloc !4661
  call void asm sideeffect ".globl\09CONFIG_BOARD\0A\09.equ\09CONFIG_BOARD,1\0A\09.type\09CONFIG_BOARD,%object", ""() #9, !dbg !4662, !srcloc !4663
  call void asm sideeffect ".globl\09CONFIG_FLASH_SIZE\0A\09.equ\09CONFIG_FLASH_SIZE,32\0A\09.type\09CONFIG_FLASH_SIZE,%object", ""() #9, !dbg !4664, !srcloc !4665
  call void asm sideeffect ".globl\09CONFIG_FLASH_BASE_ADDRESS\0A\09.equ\09CONFIG_FLASH_BASE_ADDRESS,0x1fff8000\0A\09.type\09CONFIG_FLASH_BASE_ADDRESS,%object", ""() #9, !dbg !4666, !srcloc !4667
  call void asm sideeffect ".globl\09CONFIG_SOC\0A\09.equ\09CONFIG_SOC,1\0A\09.type\09CONFIG_SOC,%object", ""() #9, !dbg !4668, !srcloc !4669
  call void asm sideeffect ".globl\09CONFIG_SOC_SERIES\0A\09.equ\09CONFIG_SOC_SERIES,1\0A\09.type\09CONFIG_SOC_SERIES,%object", ""() #9, !dbg !4670, !srcloc !4671
  call void asm sideeffect ".globl\09CONFIG_NUM_IRQS\0A\09.equ\09CONFIG_NUM_IRQS,127\0A\09.type\09CONFIG_NUM_IRQS,%object", ""() #9, !dbg !4672, !srcloc !4673
  call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,200000000\0A\09.type\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,%object", ""() #9, !dbg !4674, !srcloc !4675
  call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY\0A\09.equ\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,30\0A\09.type\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,%object", ""() #9, !dbg !4676, !srcloc !4677
  call void asm sideeffect ".globl\09CONFIG_ICACHE_LINE_SIZE\0A\09.equ\09CONFIG_ICACHE_LINE_SIZE,32\0A\09.type\09CONFIG_ICACHE_LINE_SIZE,%object", ""() #9, !dbg !4678, !srcloc !4679
  call void asm sideeffect ".globl\09CONFIG_DCACHE_LINE_SIZE\0A\09.equ\09CONFIG_DCACHE_LINE_SIZE,32\0A\09.type\09CONFIG_DCACHE_LINE_SIZE,%object", ""() #9, !dbg !4680, !srcloc !4681
  call void asm sideeffect ".globl\09CONFIG_SOC_PART_NUMBER\0A\09.equ\09CONFIG_SOC_PART_NUMBER,1\0A\09.type\09CONFIG_SOC_PART_NUMBER,%object", ""() #9, !dbg !4682, !srcloc !4683
  call void asm sideeffect ".globl\09CONFIG_PINCTRL\0A\09.equ\09CONFIG_PINCTRL,1\0A\09.type\09CONFIG_PINCTRL,%object", ""() #9, !dbg !4684, !srcloc !4685
  call void asm sideeffect ".globl\09CONFIG_HEAP_MEM_POOL_SIZE\0A\09.equ\09CONFIG_HEAP_MEM_POOL_SIZE,0\0A\09.type\09CONFIG_HEAP_MEM_POOL_SIZE,%object", ""() #9, !dbg !4686, !srcloc !4687
  call void asm sideeffect ".globl\09CONFIG_ROM_START_OFFSET\0A\09.equ\09CONFIG_ROM_START_OFFSET,0x0\0A\09.type\09CONFIG_ROM_START_OFFSET,%object", ""() #9, !dbg !4688, !srcloc !4689
  call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL\0A\09.equ\09CONFIG_CLOCK_CONTROL,1\0A\09.type\09CONFIG_CLOCK_CONTROL,%object", ""() #9, !dbg !4690, !srcloc !4691
  call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK,%object", ""() #9, !dbg !4692, !srcloc !4693
  call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_TICKS_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,10000\0A\09.type\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,%object", ""() #9, !dbg !4694, !srcloc !4695
  call void asm sideeffect ".globl\09CONFIG_SERIAL_INIT_PRIORITY\0A\09.equ\09CONFIG_SERIAL_INIT_PRIORITY,55\0A\09.type\09CONFIG_SERIAL_INIT_PRIORITY,%object", ""() #9, !dbg !4696, !srcloc !4697
  call void asm sideeffect ".globl\09CONFIG_PINCTRL_IMX\0A\09.equ\09CONFIG_PINCTRL_IMX,1\0A\09.type\09CONFIG_PINCTRL_IMX,%object", ""() #9, !dbg !4698, !srcloc !4699
  call void asm sideeffect ".globl\09CONFIG_SERIAL\0A\09.equ\09CONFIG_SERIAL,1\0A\09.type\09CONFIG_SERIAL,%object", ""() #9, !dbg !4700, !srcloc !4701
  call void asm sideeffect ".globl\09CONFIG_MAIN_STACK_SIZE\0A\09.equ\09CONFIG_MAIN_STACK_SIZE,1024\0A\09.type\09CONFIG_MAIN_STACK_SIZE,%object", ""() #9, !dbg !4702, !srcloc !4703
  call void asm sideeffect ".globl\09CONFIG_MP_MAX_NUM_CPUS\0A\09.equ\09CONFIG_MP_MAX_NUM_CPUS,1\0A\09.type\09CONFIG_MP_MAX_NUM_CPUS,%object", ""() #9, !dbg !4704, !srcloc !4705
  call void asm sideeffect ".globl\09CONFIG_HAS_DTS\0A\09.equ\09CONFIG_HAS_DTS,1\0A\09.type\09CONFIG_HAS_DTS,%object", ""() #9, !dbg !4706, !srcloc !4707
  call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,%object", ""() #9, !dbg !4708, !srcloc !4709
  call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_CORTEX_M4_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_CORTEX_M4_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_CORTEX_M4_ENABLED,%object", ""() #9, !dbg !4710, !srcloc !4711
  call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,%object", ""() #9, !dbg !4712, !srcloc !4713
  call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,%object", ""() #9, !dbg !4714, !srcloc !4715
  call void asm sideeffect ".globl\09CONFIG_DT_HAS_NXP_IMX_DTCM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_NXP_IMX_DTCM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_NXP_IMX_DTCM_ENABLED,%object", ""() #9, !dbg !4716, !srcloc !4717
  call void asm sideeffect ".globl\09CONFIG_DT_HAS_NXP_IMX_GPIO_ENABLED\0A\09.equ\09CONFIG_DT_HAS_NXP_IMX_GPIO_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_NXP_IMX_GPIO_ENABLED,%object", ""() #9, !dbg !4718, !srcloc !4719
  call void asm sideeffect ".globl\09CONFIG_DT_HAS_NXP_IMX_IOMUXC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_NXP_IMX_IOMUXC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_NXP_IMX_IOMUXC_ENABLED,%object", ""() #9, !dbg !4720, !srcloc !4721
  call void asm sideeffect ".globl\09CONFIG_DT_HAS_NXP_IMX_ITCM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_NXP_IMX_ITCM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_NXP_IMX_ITCM_ENABLED,%object", ""() #9, !dbg !4722, !srcloc !4723
  call void asm sideeffect ".globl\09CONFIG_DT_HAS_NXP_IMX_MU_ENABLED\0A\09.equ\09CONFIG_DT_HAS_NXP_IMX_MU_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_NXP_IMX_MU_ENABLED,%object", ""() #9, !dbg !4724, !srcloc !4725
  call void asm sideeffect ".globl\09CONFIG_DT_HAS_NXP_IMX_UART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_NXP_IMX_UART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_NXP_IMX_UART_ENABLED,%object", ""() #9, !dbg !4726, !srcloc !4727
  call void asm sideeffect ".globl\09CONFIG_DT_HAS_NXP_IMX7D_PINCTRL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_NXP_IMX7D_PINCTRL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_NXP_IMX7D_PINCTRL_ENABLED,%object", ""() #9, !dbg !4728, !srcloc !4729
  call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CANOPENNODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,%object", ""() #9, !dbg !4730, !srcloc !4731
  call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CHRE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CHRE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CHRE_MODULE,%object", ""() #9, !dbg !4732, !srcloc !4733
  call void asm sideeffect ".globl\09CONFIG_ZEPHYR_FATFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_FATFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_FATFS_MODULE,%object", ""() #9, !dbg !4734, !srcloc !4735
  call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,%object", ""() #9, !dbg !4736, !srcloc !4737
  call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,%object", ""() #9, !dbg !4738, !srcloc !4739
  call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,%object", ""() #9, !dbg !4740, !srcloc !4741
  call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,%object", ""() #9, !dbg !4742, !srcloc !4743
  call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,%object", ""() #9, !dbg !4744, !srcloc !4745
  call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NXP_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NXP_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NXP_MODULE,%object", ""() #9, !dbg !4746, !srcloc !4747
  call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,%object", ""() #9, !dbg !4748, !srcloc !4749
  call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_TELINK_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,%object", ""() #9, !dbg !4750, !srcloc !4751
  call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LIBLC3_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LIBLC3_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LIBLC3_MODULE,%object", ""() #9, !dbg !4752, !srcloc !4753
  call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LITTLEFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LITTLEFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LITTLEFS_MODULE,%object", ""() #9, !dbg !4754, !srcloc !4755
  call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,%object", ""() #9, !dbg !4756, !srcloc !4757
  call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LVGL_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LVGL_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LVGL_MODULE,%object", ""() #9, !dbg !4758, !srcloc !4759
  call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LZ4_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LZ4_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LZ4_MODULE,%object", ""() #9, !dbg !4760, !srcloc !4761
  call void asm sideeffect ".globl\09CONFIG_ZEPHYR_MBEDTLS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_MBEDTLS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_MBEDTLS_MODULE,%object", ""() #9, !dbg !4762, !srcloc !4763
  call void asm sideeffect ".globl\09CONFIG_ZEPHYR_NANOPB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_NANOPB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_NANOPB_MODULE,%object", ""() #9, !dbg !4764, !srcloc !4765
  call void asm sideeffect ".globl\09CONFIG_ZEPHYR_OPENTHREAD_MODULE\0A\09.equ\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,%object", ""() #9, !dbg !4766, !srcloc !4767
  call void asm sideeffect ".globl\09CONFIG_ZEPHYR_PICOLIBC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_PICOLIBC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_PICOLIBC_MODULE,%object", ""() #9, !dbg !4768, !srcloc !4769
  call void asm sideeffect ".globl\09CONFIG_ZEPHYR_SOF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_SOF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_SOF_MODULE,%object", ""() #9, !dbg !4770, !srcloc !4771
  call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,%object", ""() #9, !dbg !4772, !srcloc !4773
  call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRACERECORDER_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,%object", ""() #9, !dbg !4774, !srcloc !4775
  call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,%object", ""() #9, !dbg !4776, !srcloc !4777
  call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,%object", ""() #9, !dbg !4778, !srcloc !4779
  call void asm sideeffect ".globl\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,%object", ""() #9, !dbg !4780, !srcloc !4781
  call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZCBOR_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZCBOR_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZCBOR_MODULE,%object", ""() #9, !dbg !4782, !srcloc !4783
  call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZSCILIB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZSCILIB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZSCILIB_MODULE,%object", ""() #9, !dbg !4784, !srcloc !4785
  call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE\0A\09.equ\09CONFIG_HAS_CMSIS_CORE,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE,%object", ""() #9, !dbg !4786, !srcloc !4787
  call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE_M\0A\09.equ\09CONFIG_HAS_CMSIS_CORE_M,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE_M,%object", ""() #9, !dbg !4788, !srcloc !4789
  call void asm sideeffect ".globl\09CONFIG_HAS_IMX_HAL\0A\09.equ\09CONFIG_HAS_IMX_HAL,1\0A\09.type\09CONFIG_HAS_IMX_HAL,%object", ""() #9, !dbg !4790, !srcloc !4791
  call void asm sideeffect ".globl\09CONFIG_HAS_IMX_GPIO\0A\09.equ\09CONFIG_HAS_IMX_GPIO,1\0A\09.type\09CONFIG_HAS_IMX_GPIO,%object", ""() #9, !dbg !4792, !srcloc !4793
  call void asm sideeffect ".globl\09CONFIG_HAS_IMX_I2C\0A\09.equ\09CONFIG_HAS_IMX_I2C,1\0A\09.type\09CONFIG_HAS_IMX_I2C,%object", ""() #9, !dbg !4794, !srcloc !4795
  call void asm sideeffect ".globl\09CONFIG_HAS_IMX_IOMUXC\0A\09.equ\09CONFIG_HAS_IMX_IOMUXC,1\0A\09.type\09CONFIG_HAS_IMX_IOMUXC,%object", ""() #9, !dbg !4796, !srcloc !4797
  call void asm sideeffect ".globl\09CONFIG_BOARD_REVISION\0A\09.equ\09CONFIG_BOARD_REVISION,1\0A\09.type\09CONFIG_BOARD_REVISION,%object", ""() #9, !dbg !4798, !srcloc !4799
  call void asm sideeffect ".globl\09CONFIG_BOARD_96B_MEERKAT96\0A\09.equ\09CONFIG_BOARD_96B_MEERKAT96,1\0A\09.type\09CONFIG_BOARD_96B_MEERKAT96,%object", ""() #9, !dbg !4800, !srcloc !4801
  call void asm sideeffect ".globl\09CONFIG_SOC_SERIES_IMX7_M4\0A\09.equ\09CONFIG_SOC_SERIES_IMX7_M4,1\0A\09.type\09CONFIG_SOC_SERIES_IMX7_M4,%object", ""() #9, !dbg !4802, !srcloc !4803
  call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY\0A\09.equ\09CONFIG_SOC_FAMILY,1\0A\09.type\09CONFIG_SOC_FAMILY,%object", ""() #9, !dbg !4804, !srcloc !4805
  call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY_IMX\0A\09.equ\09CONFIG_SOC_FAMILY_IMX,1\0A\09.type\09CONFIG_SOC_FAMILY_IMX,%object", ""() #9, !dbg !4806, !srcloc !4807
  call void asm sideeffect ".globl\09CONFIG_SOC_MCIMX7_M4\0A\09.equ\09CONFIG_SOC_MCIMX7_M4,1\0A\09.type\09CONFIG_SOC_MCIMX7_M4,%object", ""() #9, !dbg !4808, !srcloc !4809
  call void asm sideeffect ".globl\09CONFIG_SOC_PART_NUMBER_MCIMX7D5EVM10SC\0A\09.equ\09CONFIG_SOC_PART_NUMBER_MCIMX7D5EVM10SC,1\0A\09.type\09CONFIG_SOC_PART_NUMBER_MCIMX7D5EVM10SC,%object", ""() #9, !dbg !4810, !srcloc !4811
  call void asm sideeffect ".globl\09CONFIG_SOC_PART_NUMBER_IMX7_M4\0A\09.equ\09CONFIG_SOC_PART_NUMBER_IMX7_M4,1\0A\09.type\09CONFIG_SOC_PART_NUMBER_IMX7_M4,%object", ""() #9, !dbg !4812, !srcloc !4813
  call void asm sideeffect ".globl\09CONFIG_ARCH\0A\09.equ\09CONFIG_ARCH,1\0A\09.type\09CONFIG_ARCH,%object", ""() #9, !dbg !4814, !srcloc !4815
  call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX\0A\09.equ\09CONFIG_CPU_CORTEX,1\0A\09.type\09CONFIG_CPU_CORTEX,%object", ""() #9, !dbg !4816, !srcloc !4817
  call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M\0A\09.equ\09CONFIG_CPU_CORTEX_M,1\0A\09.type\09CONFIG_CPU_CORTEX_M,%object", ""() #9, !dbg !4818, !srcloc !4819
  call void asm sideeffect ".globl\09CONFIG_ISA_THUMB2\0A\09.equ\09CONFIG_ISA_THUMB2,1\0A\09.type\09CONFIG_ISA_THUMB2,%object", ""() #9, !dbg !4820, !srcloc !4821
  call void asm sideeffect ".globl\09CONFIG_ASSEMBLER_ISA_THUMB2\0A\09.equ\09CONFIG_ASSEMBLER_ISA_THUMB2,1\0A\09.type\09CONFIG_ASSEMBLER_ISA_THUMB2,%object", ""() #9, !dbg !4822, !srcloc !4823
  call void asm sideeffect ".globl\09CONFIG_COMPILER_ISA_THUMB2\0A\09.equ\09CONFIG_COMPILER_ISA_THUMB2,1\0A\09.type\09CONFIG_COMPILER_ISA_THUMB2,%object", ""() #9, !dbg !4824, !srcloc !4825
  call void asm sideeffect ".globl\09CONFIG_STACK_ALIGN_DOUBLE_WORD\0A\09.equ\09CONFIG_STACK_ALIGN_DOUBLE_WORD,1\0A\09.type\09CONFIG_STACK_ALIGN_DOUBLE_WORD,%object", ""() #9, !dbg !4826, !srcloc !4827
  call void asm sideeffect ".globl\09CONFIG_FAULT_DUMP\0A\09.equ\09CONFIG_FAULT_DUMP,2\0A\09.type\09CONFIG_FAULT_DUMP,%object", ""() #9, !dbg !4828, !srcloc !4829
  call void asm sideeffect ".globl\09CONFIG_FP16\0A\09.equ\09CONFIG_FP16,1\0A\09.type\09CONFIG_FP16,%object", ""() #9, !dbg !4830, !srcloc !4831
  call void asm sideeffect ".globl\09CONFIG_FP16_IEEE\0A\09.equ\09CONFIG_FP16_IEEE,1\0A\09.type\09CONFIG_FP16_IEEE,%object", ""() #9, !dbg !4832, !srcloc !4833
  call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M4\0A\09.equ\09CONFIG_CPU_CORTEX_M4,1\0A\09.type\09CONFIG_CPU_CORTEX_M4,%object", ""() #9, !dbg !4834, !srcloc !4835
  call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,%object", ""() #9, !dbg !4836, !srcloc !4837
  call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_DWT\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_DWT,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_DWT,%object", ""() #9, !dbg !4838, !srcloc !4839
  call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,%object", ""() #9, !dbg !4840, !srcloc !4841
  call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_VTOR\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_VTOR,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_VTOR,%object", ""() #9, !dbg !4842, !srcloc !4843
  call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,%object", ""() #9, !dbg !4844, !srcloc !4845
  call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,%object", ""() #9, !dbg !4846, !srcloc !4847
  call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_FP\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_FP,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_FP,%object", ""() #9, !dbg !4848, !srcloc !4849
  call void asm sideeffect ".globl\09CONFIG_GEN_ISR_TABLES\0A\09.equ\09CONFIG_GEN_ISR_TABLES,1\0A\09.type\09CONFIG_GEN_ISR_TABLES,%object", ""() #9, !dbg !4850, !srcloc !4851
  call void asm sideeffect ".globl\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE\0A\09.equ\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,1\0A\09.type\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,%object", ""() #9, !dbg !4852, !srcloc !4853
  call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_VECTOR_TABLE\0A\09.equ\09CONFIG_GEN_IRQ_VECTOR_TABLE,1\0A\09.type\09CONFIG_GEN_IRQ_VECTOR_TABLE,%object", ""() #9, !dbg !4854, !srcloc !4855
  call void asm sideeffect ".globl\09CONFIG_ARM\0A\09.equ\09CONFIG_ARM,1\0A\09.type\09CONFIG_ARM,%object", ""() #9, !dbg !4856, !srcloc !4857
  call void asm sideeffect ".globl\09CONFIG_ARCH_IS_SET\0A\09.equ\09CONFIG_ARCH_IS_SET,1\0A\09.type\09CONFIG_ARCH_IS_SET,%object", ""() #9, !dbg !4858, !srcloc !4859
  call void asm sideeffect ".globl\09CONFIG_LITTLE_ENDIAN\0A\09.equ\09CONFIG_LITTLE_ENDIAN,1\0A\09.type\09CONFIG_LITTLE_ENDIAN,%object", ""() #9, !dbg !4860, !srcloc !4861
  call void asm sideeffect ".globl\09CONFIG_SRAM_SIZE\0A\09.equ\09CONFIG_SRAM_SIZE,32\0A\09.type\09CONFIG_SRAM_SIZE,%object", ""() #9, !dbg !4862, !srcloc !4863
  call void asm sideeffect ".globl\09CONFIG_SRAM_BASE_ADDRESS\0A\09.equ\09CONFIG_SRAM_BASE_ADDRESS,0x20000000\0A\09.type\09CONFIG_SRAM_BASE_ADDRESS,%object", ""() #9, !dbg !4864, !srcloc !4865
  call void asm sideeffect ".globl\09CONFIG_GEN_PRIV_STACKS\0A\09.equ\09CONFIG_GEN_PRIV_STACKS,1\0A\09.type\09CONFIG_GEN_PRIV_STACKS,%object", ""() #9, !dbg !4866, !srcloc !4867
  call void asm sideeffect ".globl\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,%object", ""() #9, !dbg !4868, !srcloc !4869
  call void asm sideeffect ".globl\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS\0A\09.equ\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,1\0A\09.type\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,%object", ""() #9, !dbg !4870, !srcloc !4871
  call void asm sideeffect ".globl\09CONFIG_GEN_SW_ISR_TABLE\0A\09.equ\09CONFIG_GEN_SW_ISR_TABLE,1\0A\09.type\09CONFIG_GEN_SW_ISR_TABLE,%object", ""() #9, !dbg !4872, !srcloc !4873
  call void asm sideeffect ".globl\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,%object", ""() #9, !dbg !4874, !srcloc !4875
  call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_START_VECTOR\0A\09.equ\09CONFIG_GEN_IRQ_START_VECTOR,0\0A\09.type\09CONFIG_GEN_IRQ_START_VECTOR,%object", ""() #9, !dbg !4876, !srcloc !4877
  call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,%object", ""() #9, !dbg !4878, !srcloc !4879
  call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS\0A\09.equ\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,1\0A\09.type\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,%object", ""() #9, !dbg !4880, !srcloc !4881
  call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,%object", ""() #9, !dbg !4882, !srcloc !4883
  call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION\0A\09.equ\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,1\0A\09.type\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,%object", ""() #9, !dbg !4884, !srcloc !4885
  call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_COREDUMP\0A\09.equ\09CONFIG_ARCH_SUPPORTS_COREDUMP,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_COREDUMP,%object", ""() #9, !dbg !4886, !srcloc !4887
  call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT\0A\09.equ\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,%object", ""() #9, !dbg !4888, !srcloc !4889
  call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO\0A\09.equ\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,1\0A\09.type\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,%object", ""() #9, !dbg !4890, !srcloc !4891
  call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,%object", ""() #9, !dbg !4892, !srcloc !4893
  call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM\0A\09.equ\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,1\0A\09.type\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,%object", ""() #9, !dbg !4894, !srcloc !4895
  call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_ABORT\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_ABORT,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_ABORT,%object", ""() #9, !dbg !4896, !srcloc !4897
  call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION\0A\09.equ\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,1\0A\09.type\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,%object", ""() #9, !dbg !4898, !srcloc !4899
  call void asm sideeffect ".globl\09CONFIG_CPU_HAS_FPU\0A\09.equ\09CONFIG_CPU_HAS_FPU,1\0A\09.type\09CONFIG_CPU_HAS_FPU,%object", ""() #9, !dbg !4900, !srcloc !4901
  call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS\0A\09.equ\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,1\0A\09.type\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,%object", ""() #9, !dbg !4902, !srcloc !4903
  call void asm sideeffect ".globl\09CONFIG_MULTITHREADING\0A\09.equ\09CONFIG_MULTITHREADING,1\0A\09.type\09CONFIG_MULTITHREADING,%object", ""() #9, !dbg !4904, !srcloc !4905
  call void asm sideeffect ".globl\09CONFIG_NUM_COOP_PRIORITIES\0A\09.equ\09CONFIG_NUM_COOP_PRIORITIES,16\0A\09.type\09CONFIG_NUM_COOP_PRIORITIES,%object", ""() #9, !dbg !4906, !srcloc !4907
  call void asm sideeffect ".globl\09CONFIG_NUM_PREEMPT_PRIORITIES\0A\09.equ\09CONFIG_NUM_PREEMPT_PRIORITIES,15\0A\09.type\09CONFIG_NUM_PREEMPT_PRIORITIES,%object", ""() #9, !dbg !4908, !srcloc !4909
  call void asm sideeffect ".globl\09CONFIG_MAIN_THREAD_PRIORITY\0A\09.equ\09CONFIG_MAIN_THREAD_PRIORITY,0\0A\09.type\09CONFIG_MAIN_THREAD_PRIORITY,%object", ""() #9, !dbg !4910, !srcloc !4911
  call void asm sideeffect ".globl\09CONFIG_COOP_ENABLED\0A\09.equ\09CONFIG_COOP_ENABLED,1\0A\09.type\09CONFIG_COOP_ENABLED,%object", ""() #9, !dbg !4912, !srcloc !4913
  call void asm sideeffect ".globl\09CONFIG_PREEMPT_ENABLED\0A\09.equ\09CONFIG_PREEMPT_ENABLED,1\0A\09.type\09CONFIG_PREEMPT_ENABLED,%object", ""() #9, !dbg !4914, !srcloc !4915
  call void asm sideeffect ".globl\09CONFIG_PRIORITY_CEILING\0A\09.equ\09CONFIG_PRIORITY_CEILING,-127\0A\09.type\09CONFIG_PRIORITY_CEILING,%object", ""() #9, !dbg !4916, !srcloc !4917
  call void asm sideeffect ".globl\09CONFIG_NUM_METAIRQ_PRIORITIES\0A\09.equ\09CONFIG_NUM_METAIRQ_PRIORITIES,0\0A\09.type\09CONFIG_NUM_METAIRQ_PRIORITIES,%object", ""() #9, !dbg !4918, !srcloc !4919
  call void asm sideeffect ".globl\09CONFIG_IDLE_STACK_SIZE\0A\09.equ\09CONFIG_IDLE_STACK_SIZE,320\0A\09.type\09CONFIG_IDLE_STACK_SIZE,%object", ""() #9, !dbg !4920, !srcloc !4921
  call void asm sideeffect ".globl\09CONFIG_ISR_STACK_SIZE\0A\09.equ\09CONFIG_ISR_STACK_SIZE,2048\0A\09.type\09CONFIG_ISR_STACK_SIZE,%object", ""() #9, !dbg !4922, !srcloc !4923
  call void asm sideeffect ".globl\09CONFIG_ERRNO\0A\09.equ\09CONFIG_ERRNO,1\0A\09.type\09CONFIG_ERRNO,%object", ""() #9, !dbg !4924, !srcloc !4925
  call void asm sideeffect ".globl\09CONFIG_SCHED_DUMB\0A\09.equ\09CONFIG_SCHED_DUMB,1\0A\09.type\09CONFIG_SCHED_DUMB,%object", ""() #9, !dbg !4926, !srcloc !4927
  call void asm sideeffect ".globl\09CONFIG_WAITQ_DUMB\0A\09.equ\09CONFIG_WAITQ_DUMB,1\0A\09.type\09CONFIG_WAITQ_DUMB,%object", ""() #9, !dbg !4928, !srcloc !4929
  call void asm sideeffect ".globl\09CONFIG_BOOT_BANNER\0A\09.equ\09CONFIG_BOOT_BANNER,1\0A\09.type\09CONFIG_BOOT_BANNER,%object", ""() #9, !dbg !4930, !srcloc !4931
  call void asm sideeffect ".globl\09CONFIG_BOOT_DELAY\0A\09.equ\09CONFIG_BOOT_DELAY,0\0A\09.type\09CONFIG_BOOT_DELAY,%object", ""() #9, !dbg !4932, !srcloc !4933
  call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,1024\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,%object", ""() #9, !dbg !4934, !srcloc !4935
  call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,-1\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,%object", ""() #9, !dbg !4936, !srcloc !4937
  call void asm sideeffect ".globl\09CONFIG_ATOMIC_OPERATIONS_BUILTIN\0A\09.equ\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,1\0A\09.type\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,%object", ""() #9, !dbg !4938, !srcloc !4939
  call void asm sideeffect ".globl\09CONFIG_TIMESLICING\0A\09.equ\09CONFIG_TIMESLICING,1\0A\09.type\09CONFIG_TIMESLICING,%object", ""() #9, !dbg !4940, !srcloc !4941
  call void asm sideeffect ".globl\09CONFIG_TIMESLICE_SIZE\0A\09.equ\09CONFIG_TIMESLICE_SIZE,0\0A\09.type\09CONFIG_TIMESLICE_SIZE,%object", ""() #9, !dbg !4942, !srcloc !4943
  call void asm sideeffect ".globl\09CONFIG_TIMESLICE_PRIORITY\0A\09.equ\09CONFIG_TIMESLICE_PRIORITY,0\0A\09.type\09CONFIG_TIMESLICE_PRIORITY,%object", ""() #9, !dbg !4944, !srcloc !4945
  call void asm sideeffect ".globl\09CONFIG_NUM_MBOX_ASYNC_MSGS\0A\09.equ\09CONFIG_NUM_MBOX_ASYNC_MSGS,10\0A\09.type\09CONFIG_NUM_MBOX_ASYNC_MSGS,%object", ""() #9, !dbg !4946, !srcloc !4947
  call void asm sideeffect ".globl\09CONFIG_KERNEL_MEM_POOL\0A\09.equ\09CONFIG_KERNEL_MEM_POOL,1\0A\09.type\09CONFIG_KERNEL_MEM_POOL,%object", ""() #9, !dbg !4948, !srcloc !4949
  call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN\0A\09.equ\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,1\0A\09.type\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,%object", ""() #9, !dbg !4950, !srcloc !4951
  call void asm sideeffect ".globl\09CONFIG_SWAP_NONATOMIC\0A\09.equ\09CONFIG_SWAP_NONATOMIC,1\0A\09.type\09CONFIG_SWAP_NONATOMIC,%object", ""() #9, !dbg !4952, !srcloc !4953
  call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_EXISTS\0A\09.equ\09CONFIG_SYS_CLOCK_EXISTS,1\0A\09.type\09CONFIG_SYS_CLOCK_EXISTS,%object", ""() #9, !dbg !4954, !srcloc !4955
  call void asm sideeffect ".globl\09CONFIG_TIMEOUT_64BIT\0A\09.equ\09CONFIG_TIMEOUT_64BIT,1\0A\09.type\09CONFIG_TIMEOUT_64BIT,%object", ""() #9, !dbg !4956, !srcloc !4957
  call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS\0A\09.equ\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,365\0A\09.type\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,%object", ""() #9, !dbg !4958, !srcloc !4959
  call void asm sideeffect ".globl\09CONFIG_XIP\0A\09.equ\09CONFIG_XIP,1\0A\09.type\09CONFIG_XIP,%object", ""() #9, !dbg !4960, !srcloc !4961
  call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,30\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,%object", ""() #9, !dbg !4962, !srcloc !4963
  call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,40\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,%object", ""() #9, !dbg !4964, !srcloc !4965
  call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,50\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,%object", ""() #9, !dbg !4966, !srcloc !4967
  call void asm sideeffect ".globl\09CONFIG_APPLICATION_INIT_PRIORITY\0A\09.equ\09CONFIG_APPLICATION_INIT_PRIORITY,90\0A\09.type\09CONFIG_APPLICATION_INIT_PRIORITY,%object", ""() #9, !dbg !4968, !srcloc !4969
  call void asm sideeffect ".globl\09CONFIG_MP_NUM_CPUS\0A\09.equ\09CONFIG_MP_NUM_CPUS,1\0A\09.type\09CONFIG_MP_NUM_CPUS,%object", ""() #9, !dbg !4970, !srcloc !4971
  call void asm sideeffect ".globl\09CONFIG_TICKLESS_KERNEL\0A\09.equ\09CONFIG_TICKLESS_KERNEL,1\0A\09.type\09CONFIG_TICKLESS_KERNEL,%object", ""() #9, !dbg !4972, !srcloc !4973
  call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #9, !dbg !4974, !srcloc !4975
  call void asm sideeffect ".globl\09CONFIG_CONSOLE\0A\09.equ\09CONFIG_CONSOLE,1\0A\09.type\09CONFIG_CONSOLE,%object", ""() #9, !dbg !4976, !srcloc !4977
  call void asm sideeffect ".globl\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN\0A\09.equ\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,128\0A\09.type\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,%object", ""() #9, !dbg !4978, !srcloc !4979
  call void asm sideeffect ".globl\09CONFIG_CONSOLE_HAS_DRIVER\0A\09.equ\09CONFIG_CONSOLE_HAS_DRIVER,1\0A\09.type\09CONFIG_CONSOLE_HAS_DRIVER,%object", ""() #9, !dbg !4980, !srcloc !4981
  call void asm sideeffect ".globl\09CONFIG_CONSOLE_INIT_PRIORITY\0A\09.equ\09CONFIG_CONSOLE_INIT_PRIORITY,60\0A\09.type\09CONFIG_CONSOLE_INIT_PRIORITY,%object", ""() #9, !dbg !4982, !srcloc !4983
  call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE\0A\09.equ\09CONFIG_UART_CONSOLE,1\0A\09.type\09CONFIG_UART_CONSOLE,%object", ""() #9, !dbg !4984, !srcloc !4985
  call void asm sideeffect ".globl\09CONFIG_HAS_SEGGER_RTT\0A\09.equ\09CONFIG_HAS_SEGGER_RTT,1\0A\09.type\09CONFIG_HAS_SEGGER_RTT,%object", ""() #9, !dbg !4986, !srcloc !4987
  call void asm sideeffect ".globl\09CONFIG_ETH_INIT_PRIORITY\0A\09.equ\09CONFIG_ETH_INIT_PRIORITY,80\0A\09.type\09CONFIG_ETH_INIT_PRIORITY,%object", ""() #9, !dbg !4988, !srcloc !4989
  call void asm sideeffect ".globl\09CONFIG_SERIAL_HAS_DRIVER\0A\09.equ\09CONFIG_SERIAL_HAS_DRIVER,1\0A\09.type\09CONFIG_SERIAL_HAS_DRIVER,%object", ""() #9, !dbg !4990, !srcloc !4991
  call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_INTERRUPT\0A\09.equ\09CONFIG_SERIAL_SUPPORT_INTERRUPT,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_INTERRUPT,%object", ""() #9, !dbg !4992, !srcloc !4993
  call void asm sideeffect ".globl\09CONFIG_UART_USE_RUNTIME_CONFIGURE\0A\09.equ\09CONFIG_UART_USE_RUNTIME_CONFIGURE,1\0A\09.type\09CONFIG_UART_USE_RUNTIME_CONFIGURE,%object", ""() #9, !dbg !4994, !srcloc !4995
  call void asm sideeffect ".globl\09CONFIG_UART_IMX\0A\09.equ\09CONFIG_UART_IMX,1\0A\09.type\09CONFIG_UART_IMX,%object", ""() #9, !dbg !4996, !srcloc !4997
  call void asm sideeffect ".globl\09CONFIG_INTC_INIT_PRIORITY\0A\09.equ\09CONFIG_INTC_INIT_PRIORITY,40\0A\09.type\09CONFIG_INTC_INIT_PRIORITY,%object", ""() #9, !dbg !4998, !srcloc !4999
  call void asm sideeffect ".globl\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,0\0A\09.type\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,%object", ""() #9, !dbg !5000, !srcloc !5001
  call void asm sideeffect ".globl\09CONFIG_TICKLESS_CAPABLE\0A\09.equ\09CONFIG_TICKLESS_CAPABLE,1\0A\09.type\09CONFIG_TICKLESS_CAPABLE,%object", ""() #9, !dbg !5002, !srcloc !5003
  call void asm sideeffect ".globl\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT\0A\09.equ\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,1\0A\09.type\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,%object", ""() #9, !dbg !5004, !srcloc !5005
  call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,%object", ""() #9, !dbg !5006, !srcloc !5007
  call void asm sideeffect ".globl\09CONFIG_GPIO_IMX\0A\09.equ\09CONFIG_GPIO_IMX,1\0A\09.type\09CONFIG_GPIO_IMX,%object", ""() #9, !dbg !5008, !srcloc !5009
  call void asm sideeffect ".globl\09CONFIG_SUPPORT_MINIMAL_LIBC\0A\09.equ\09CONFIG_SUPPORT_MINIMAL_LIBC,1\0A\09.type\09CONFIG_SUPPORT_MINIMAL_LIBC,%object", ""() #9, !dbg !5010, !srcloc !5011
  call void asm sideeffect ".globl\09CONFIG_PICOLIBC_SUPPORTED\0A\09.equ\09CONFIG_PICOLIBC_SUPPORTED,1\0A\09.type\09CONFIG_PICOLIBC_SUPPORTED,%object", ""() #9, !dbg !5012, !srcloc !5013
  call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC\0A\09.equ\09CONFIG_MINIMAL_LIBC,1\0A\09.type\09CONFIG_MINIMAL_LIBC,%object", ""() #9, !dbg !5014, !srcloc !5015
  call void asm sideeffect ".globl\09CONFIG_HAS_NEWLIB_LIBC_NANO\0A\09.equ\09CONFIG_HAS_NEWLIB_LIBC_NANO,1\0A\09.type\09CONFIG_HAS_NEWLIB_LIBC_NANO,%object", ""() #9, !dbg !5016, !srcloc !5017
  call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS\0A\09.equ\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,1\0A\09.type\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,%object", ""() #9, !dbg !5018, !srcloc !5019
  call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC,%object", ""() #9, !dbg !5020, !srcloc !5021
  call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,0\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,%object", ""() #9, !dbg !5022, !srcloc !5023
  call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_CALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_CALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_CALLOC,%object", ""() #9, !dbg !5024, !srcloc !5025
  call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_REALLOCARRAY\0A\09.equ\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,1\0A\09.type\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,%object", ""() #9, !dbg !5026, !srcloc !5027
  call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_TIME\0A\09.equ\09CONFIG_MINIMAL_LIBC_TIME,1\0A\09.type\09CONFIG_MINIMAL_LIBC_TIME,%object", ""() #9, !dbg !5028, !srcloc !5029
  call void asm sideeffect ".globl\09CONFIG_STDOUT_CONSOLE\0A\09.equ\09CONFIG_STDOUT_CONSOLE,1\0A\09.type\09CONFIG_STDOUT_CONSOLE,%object", ""() #9, !dbg !5030, !srcloc !5031
  call void asm sideeffect ".globl\09CONFIG_NEED_LIBC_MEM_PARTITION\0A\09.equ\09CONFIG_NEED_LIBC_MEM_PARTITION,1\0A\09.type\09CONFIG_NEED_LIBC_MEM_PARTITION,%object", ""() #9, !dbg !5032, !srcloc !5033
  call void asm sideeffect ".globl\09CONFIG_CRC\0A\09.equ\09CONFIG_CRC,1\0A\09.type\09CONFIG_CRC,%object", ""() #9, !dbg !5034, !srcloc !5035
  call void asm sideeffect ".globl\09CONFIG_CBPRINTF_COMPLETE\0A\09.equ\09CONFIG_CBPRINTF_COMPLETE,1\0A\09.type\09CONFIG_CBPRINTF_COMPLETE,%object", ""() #9, !dbg !5036, !srcloc !5037
  call void asm sideeffect ".globl\09CONFIG_CBPRINTF_FULL_INTEGRAL\0A\09.equ\09CONFIG_CBPRINTF_FULL_INTEGRAL,1\0A\09.type\09CONFIG_CBPRINTF_FULL_INTEGRAL,%object", ""() #9, !dbg !5038, !srcloc !5039
  call void asm sideeffect ".globl\09CONFIG_CBPRINTF_N_SPECIFIER\0A\09.equ\09CONFIG_CBPRINTF_N_SPECIFIER,1\0A\09.type\09CONFIG_CBPRINTF_N_SPECIFIER,%object", ""() #9, !dbg !5040, !srcloc !5041
  call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_ALLOC_LOOPS\0A\09.equ\09CONFIG_SYS_HEAP_ALLOC_LOOPS,3\0A\09.type\09CONFIG_SYS_HEAP_ALLOC_LOOPS,%object", ""() #9, !dbg !5042, !srcloc !5043
  call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_SMALL_ONLY\0A\09.equ\09CONFIG_SYS_HEAP_SMALL_ONLY,1\0A\09.type\09CONFIG_SYS_HEAP_SMALL_ONLY,%object", ""() #9, !dbg !5044, !srcloc !5045
  call void asm sideeffect ".globl\09CONFIG_POSIX_MAX_FDS\0A\09.equ\09CONFIG_POSIX_MAX_FDS,4\0A\09.type\09CONFIG_POSIX_MAX_FDS,%object", ""() #9, !dbg !5046, !srcloc !5047
  call void asm sideeffect ".globl\09CONFIG_MAX_TIMER_COUNT\0A\09.equ\09CONFIG_MAX_TIMER_COUNT,5\0A\09.type\09CONFIG_MAX_TIMER_COUNT,%object", ""() #9, !dbg !5048, !srcloc !5049
  call void asm sideeffect ".globl\09CONFIG_PRINTK\0A\09.equ\09CONFIG_PRINTK,1\0A\09.type\09CONFIG_PRINTK,%object", ""() #9, !dbg !5050, !srcloc !5051
  call void asm sideeffect ".globl\09CONFIG_EARLY_CONSOLE\0A\09.equ\09CONFIG_EARLY_CONSOLE,1\0A\09.type\09CONFIG_EARLY_CONSOLE,%object", ""() #9, !dbg !5052, !srcloc !5053
  call void asm sideeffect ".globl\09CONFIG_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ASSERT_VERBOSE,%object", ""() #9, !dbg !5054, !srcloc !5055
  call void asm sideeffect ".globl\09CONFIG_COVERAGE_GCOV_HEAP_SIZE\0A\09.equ\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,16384\0A\09.type\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,%object", ""() #9, !dbg !5056, !srcloc !5057
  call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_0_15\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,%object", ""() #9, !dbg !5058, !srcloc !5059
  call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #9, !dbg !5060, !srcloc !5061
  call void asm sideeffect ".globl\09CONFIG_LINKER_ORPHAN_SECTION_WARN\0A\09.equ\09CONFIG_LINKER_ORPHAN_SECTION_WARN,1\0A\09.type\09CONFIG_LINKER_ORPHAN_SECTION_WARN,%object", ""() #9, !dbg !5062, !srcloc !5063
  call void asm sideeffect ".globl\09CONFIG_HAS_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_HAS_FLASH_LOAD_OFFSET,1\0A\09.type\09CONFIG_HAS_FLASH_LOAD_OFFSET,%object", ""() #9, !dbg !5064, !srcloc !5065
  call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_FLASH_LOAD_OFFSET,0x0\0A\09.type\09CONFIG_FLASH_LOAD_OFFSET,%object", ""() #9, !dbg !5066, !srcloc !5067
  call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_SIZE\0A\09.equ\09CONFIG_FLASH_LOAD_SIZE,0x0\0A\09.type\09CONFIG_FLASH_LOAD_SIZE,%object", ""() #9, !dbg !5068, !srcloc !5069
  call void asm sideeffect ".globl\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED\0A\09.equ\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,1\0A\09.type\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,%object", ""() #9, !dbg !5070, !srcloc !5071
  call void asm sideeffect ".globl\09CONFIG_LD_LINKER_TEMPLATE\0A\09.equ\09CONFIG_LD_LINKER_TEMPLATE,1\0A\09.type\09CONFIG_LD_LINKER_TEMPLATE,%object", ""() #9, !dbg !5072, !srcloc !5073
  call void asm sideeffect ".globl\09CONFIG_KERNEL_ENTRY\0A\09.equ\09CONFIG_KERNEL_ENTRY,1\0A\09.type\09CONFIG_KERNEL_ENTRY,%object", ""() #9, !dbg !5074, !srcloc !5075
  call void asm sideeffect ".globl\09CONFIG_LINKER_SORT_BY_ALIGNMENT\0A\09.equ\09CONFIG_LINKER_SORT_BY_ALIGNMENT,1\0A\09.type\09CONFIG_LINKER_SORT_BY_ALIGNMENT,%object", ""() #9, !dbg !5076, !srcloc !5077
  call void asm sideeffect ".globl\09CONFIG_SRAM_OFFSET\0A\09.equ\09CONFIG_SRAM_OFFSET,0x0\0A\09.type\09CONFIG_SRAM_OFFSET,%object", ""() #9, !dbg !5078, !srcloc !5079
  call void asm sideeffect ".globl\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT\0A\09.equ\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,1\0A\09.type\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,%object", ""() #9, !dbg !5080, !srcloc !5081
  call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID,1\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID,%object", ""() #9, !dbg !5082, !srcloc !5083
  call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,0xE015E015\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,%object", ""() #9, !dbg !5084, !srcloc !5085
  call void asm sideeffect ".globl\09CONFIG_NO_OPTIMIZATIONS\0A\09.equ\09CONFIG_NO_OPTIMIZATIONS,1\0A\09.type\09CONFIG_NO_OPTIMIZATIONS,%object", ""() #9, !dbg !5086, !srcloc !5087
  call void asm sideeffect ".globl\09CONFIG_COMPILER_COLOR_DIAGNOSTICS\0A\09.equ\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,1\0A\09.type\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,%object", ""() #9, !dbg !5088, !srcloc !5089
  call void asm sideeffect ".globl\09CONFIG_FORTIFY_SOURCE_NONE\0A\09.equ\09CONFIG_FORTIFY_SOURCE_NONE,1\0A\09.type\09CONFIG_FORTIFY_SOURCE_NONE,%object", ""() #9, !dbg !5090, !srcloc !5091
  call void asm sideeffect ".globl\09CONFIG_COMPILER_OPT\0A\09.equ\09CONFIG_COMPILER_OPT,1\0A\09.type\09CONFIG_COMPILER_OPT,%object", ""() #9, !dbg !5092, !srcloc !5093
  call void asm sideeffect ".globl\09CONFIG_RUNTIME_ERROR_CHECKS\0A\09.equ\09CONFIG_RUNTIME_ERROR_CHECKS,1\0A\09.type\09CONFIG_RUNTIME_ERROR_CHECKS,%object", ""() #9, !dbg !5094, !srcloc !5095
  call void asm sideeffect ".globl\09CONFIG_KERNEL_BIN_NAME\0A\09.equ\09CONFIG_KERNEL_BIN_NAME,1\0A\09.type\09CONFIG_KERNEL_BIN_NAME,%object", ""() #9, !dbg !5096, !srcloc !5097
  call void asm sideeffect ".globl\09CONFIG_OUTPUT_STAT\0A\09.equ\09CONFIG_OUTPUT_STAT,1\0A\09.type\09CONFIG_OUTPUT_STAT,%object", ""() #9, !dbg !5098, !srcloc !5099
  call void asm sideeffect ".globl\09CONFIG_OUTPUT_DISASSEMBLY\0A\09.equ\09CONFIG_OUTPUT_DISASSEMBLY,1\0A\09.type\09CONFIG_OUTPUT_DISASSEMBLY,%object", ""() #9, !dbg !5100, !srcloc !5101
  call void asm sideeffect ".globl\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE\0A\09.equ\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,1\0A\09.type\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,%object", ""() #9, !dbg !5102, !srcloc !5103
  call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_BIN\0A\09.equ\09CONFIG_BUILD_OUTPUT_BIN,1\0A\09.type\09CONFIG_BUILD_OUTPUT_BIN,%object", ""() #9, !dbg !5104, !srcloc !5105
  call void asm sideeffect ".globl\09CONFIG_WARN_DEPRECATED\0A\09.equ\09CONFIG_WARN_DEPRECATED,1\0A\09.type\09CONFIG_WARN_DEPRECATED,%object", ""() #9, !dbg !5106, !srcloc !5107
  call void asm sideeffect ".globl\09CONFIG_ENFORCE_ZEPHYR_STDINT\0A\09.equ\09CONFIG_ENFORCE_ZEPHYR_STDINT,1\0A\09.type\09CONFIG_ENFORCE_ZEPHYR_STDINT,%object", ""() #9, !dbg !5108, !srcloc !5109
  call void asm sideeffect ".globl\09CONFIG_COMPAT_INCLUDES\0A\09.equ\09CONFIG_COMPAT_INCLUDES,1\0A\09.type\09CONFIG_COMPAT_INCLUDES,%object", ""() #9, !dbg !5110, !srcloc !5111
  ret void, !dbg !5112
}

; Function Attrs: noinline nounwind optnone
define internal i32 @nxp_mcimx7_init(%struct.device.71* noundef %0) #1 !dbg !5113 {
  %2 = alloca %struct.device.71*, align 4
  store %struct.device.71* %0, %struct.device.71** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.device.71** %2, metadata !5114, metadata !DIExpression()), !dbg !5115
  %3 = load %struct.device.71*, %struct.device.71** %2, align 4, !dbg !5116
  call void @SOC_RdcInit() #10, !dbg !5117
  call void @SOC_ClockInit() #10, !dbg !5118
  call void @nxp_mcimx7_gpio_config() #10, !dbg !5119
  call void @nxp_mcimx7_uart_config() #10, !dbg !5120
  ret i32 0, !dbg !5121
}

; Function Attrs: noinline nounwind optnone
define dso_local void @SOC_RdcInit() #1 !dbg !5122 {
  call void @RDC_SetDomainID(%struct.RDC_Type* noundef inttoptr (i32 809304064 to %struct.RDC_Type*), i32 noundef 1, i32 noundef 1, i1 noundef zeroext false) #10, !dbg !5123
  ret void, !dbg !5124
}

; Function Attrs: noinline nounwind optnone
define dso_local void @SOC_ClockInit() #1 !dbg !5125 {
  call void @CCM_UpdateRoot(%struct.CCM_Type* noundef inttoptr (i32 808976384 to %struct.CCM_Type*), i32 noundef 809024384, i32 noundef 0, i32 noundef 0, i32 noundef 0) #10, !dbg !5126
  call void @CCM_EnableRoot(%struct.CCM_Type* noundef inttoptr (i32 808976384 to %struct.CCM_Type*), i32 noundef 809024384) #10, !dbg !5127
  call void @CCM_ControlGate(%struct.CCM_Type* noundef inttoptr (i32 808976384 to %struct.CCM_Type*), i32 noundef 808995296, i32 noundef 4369) #10, !dbg !5128
  call void @RDC_SetPdapAccess(%struct.RDC_Type* noundef inttoptr (i32 809304064 to %struct.RDC_Type*), i32 noundef 10, i8 noundef zeroext 12, i1 noundef zeroext false, i1 noundef zeroext false) #10, !dbg !5129
  call void @WDOG_DisablePowerdown(%struct.WDOG_Type* noundef inttoptr (i32 808058880 to %struct.WDOG_Type*)) #10, !dbg !5130
  call void @CCM_ControlGate(%struct.CCM_Type* noundef inttoptr (i32 808976384 to %struct.CCM_Type*), i32 noundef 808995296, i32 noundef 0) #10, !dbg !5131
  call void @CCM_ControlGate(%struct.CCM_Type* noundef inttoptr (i32 808976384 to %struct.CCM_Type*), i32 noundef 808978528, i32 noundef 4369) #10, !dbg !5132
  call void @CCM_ControlGate(%struct.CCM_Type* noundef inttoptr (i32 808976384 to %struct.CCM_Type*), i32 noundef 808978560, i32 noundef 4369) #10, !dbg !5133
  call void @CCM_ControlGate(%struct.CCM_Type* noundef inttoptr (i32 808976384 to %struct.CCM_Type*), i32 noundef 808992928, i32 noundef 4369) #10, !dbg !5134
  call void @CCM_ControlGate(%struct.CCM_Type* noundef inttoptr (i32 808976384 to %struct.CCM_Type*), i32 noundef 808992944, i32 noundef 4369) #10, !dbg !5135
  call void @CCM_ControlGate(%struct.CCM_Type* noundef inttoptr (i32 808976384 to %struct.CCM_Type*), i32 noundef 808992960, i32 noundef 4369) #10, !dbg !5136
  call void @CCM_ControlGate(%struct.CCM_Type* noundef inttoptr (i32 808976384 to %struct.CCM_Type*), i32 noundef 808995456, i32 noundef 4369) #10, !dbg !5137
  call void @CCM_ControlGate(%struct.CCM_Type* noundef inttoptr (i32 808976384 to %struct.CCM_Type*), i32 noundef 808995472, i32 noundef 4369) #10, !dbg !5138
  call void @CCM_ControlGate(%struct.CCM_Type* noundef inttoptr (i32 808976384 to %struct.CCM_Type*), i32 noundef 808993376, i32 noundef 4369) #10, !dbg !5139
  ret void, !dbg !5140
}

; Function Attrs: noinline nounwind optnone
define internal void @nxp_mcimx7_gpio_config() #1 !dbg !5141 {
  call void @RDC_SetPdapAccess(%struct.RDC_Type* noundef inttoptr (i32 809304064 to %struct.RDC_Type*), i32 noundef 0, i8 noundef zeroext 15, i1 noundef zeroext false, i1 noundef zeroext false) #10, !dbg !5142
  call void @CCM_ControlGate(%struct.CCM_Type* noundef inttoptr (i32 808976384 to %struct.CCM_Type*), i32 noundef 808995328, i32 noundef 8738) #10, !dbg !5143
  ret void, !dbg !5144
}

; Function Attrs: noinline nounwind optnone
define internal void @nxp_mcimx7_uart_config() #1 !dbg !5145 {
  ret void, !dbg !5146
}

; Function Attrs: noinline nounwind optnone
define internal void @RDC_SetPdapAccess(%struct.RDC_Type* noundef %0, i32 noundef %1, i8 noundef zeroext %2, i1 noundef zeroext %3, i1 noundef zeroext %4) #1 !dbg !5147 {
  %6 = alloca %struct.RDC_Type*, align 4
  %7 = alloca i32, align 4
  %8 = alloca i8, align 1
  %9 = alloca i8, align 1
  %10 = alloca i8, align 1
  store %struct.RDC_Type* %0, %struct.RDC_Type** %6, align 4
  call void @llvm.dbg.declare(metadata %struct.RDC_Type** %6, metadata !5151, metadata !DIExpression()), !dbg !5152
  store i32 %1, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !5153, metadata !DIExpression()), !dbg !5154
  store i8 %2, i8* %8, align 1
  call void @llvm.dbg.declare(metadata i8* %8, metadata !5155, metadata !DIExpression()), !dbg !5156
  %11 = zext i1 %3 to i8
  store i8 %11, i8* %9, align 1
  call void @llvm.dbg.declare(metadata i8* %9, metadata !5157, metadata !DIExpression()), !dbg !5158
  %12 = zext i1 %4 to i8
  store i8 %12, i8* %10, align 1
  call void @llvm.dbg.declare(metadata i8* %10, metadata !5159, metadata !DIExpression()), !dbg !5160
  %13 = load i8, i8* %8, align 1, !dbg !5161
  %14 = zext i8 %13 to i32, !dbg !5161
  %15 = load i8, i8* %9, align 1, !dbg !5162
  %16 = trunc i8 %15 to i1, !dbg !5162
  %17 = zext i1 %16 to i64, !dbg !5162
  %18 = select i1 %16, i32 1073741824, i32 0, !dbg !5162
  %19 = or i32 %14, %18, !dbg !5163
  %20 = load i8, i8* %10, align 1, !dbg !5164
  %21 = trunc i8 %20 to i1, !dbg !5164
  %22 = zext i1 %21 to i64, !dbg !5164
  %23 = select i1 %21, i32 -2147483648, i32 0, !dbg !5164
  %24 = or i32 %19, %23, !dbg !5165
  %25 = load %struct.RDC_Type*, %struct.RDC_Type** %6, align 4, !dbg !5166
  %26 = getelementptr inbounds %struct.RDC_Type, %struct.RDC_Type* %25, i32 0, i32 8, !dbg !5167
  %27 = load i32, i32* %7, align 4, !dbg !5168
  %28 = getelementptr inbounds [118 x i32], [118 x i32]* %26, i32 0, i32 %27, !dbg !5166
  store volatile i32 %24, i32* %28, align 4, !dbg !5169
  ret void, !dbg !5170
}

; Function Attrs: noinline nounwind optnone
define internal void @CCM_ControlGate(%struct.CCM_Type* noundef %0, i32 noundef %1, i32 noundef %2) #1 !dbg !5171 {
  %4 = alloca %struct.CCM_Type*, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store %struct.CCM_Type* %0, %struct.CCM_Type** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.CCM_Type** %4, metadata !5174, metadata !DIExpression()), !dbg !5175
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !5176, metadata !DIExpression()), !dbg !5177
  store i32 %2, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !5178, metadata !DIExpression()), !dbg !5179
  %7 = load i32, i32* %6, align 4, !dbg !5180
  %8 = load i32, i32* %5, align 4, !dbg !5181
  %9 = add i32 %8, 0, !dbg !5181
  %10 = inttoptr i32 %9 to i32*, !dbg !5181
  store volatile i32 %7, i32* %10, align 4, !dbg !5182
  ret void, !dbg !5183
}

; Function Attrs: noinline nounwind optnone
define internal void @CCM_EnableRoot(%struct.CCM_Type* noundef %0, i32 noundef %1) #1 !dbg !5184 {
  %3 = alloca %struct.CCM_Type*, align 4
  %4 = alloca i32, align 4
  store %struct.CCM_Type* %0, %struct.CCM_Type** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.CCM_Type** %3, metadata !5187, metadata !DIExpression()), !dbg !5188
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !5189, metadata !DIExpression()), !dbg !5190
  %5 = load i32, i32* %4, align 4, !dbg !5191
  %6 = add i32 %5, 4, !dbg !5191
  %7 = inttoptr i32 %6 to i32*, !dbg !5191
  store volatile i32 268435456, i32* %7, align 4, !dbg !5192
  ret void, !dbg !5193
}

; Function Attrs: noinline nounwind optnone
define internal void @WDOG_DisablePowerdown(%struct.WDOG_Type* noundef %0) #1 !dbg !5194 {
  %2 = alloca %struct.WDOG_Type*, align 4
  store %struct.WDOG_Type* %0, %struct.WDOG_Type** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.WDOG_Type** %2, metadata !5198, metadata !DIExpression()), !dbg !5199
  %3 = load %struct.WDOG_Type*, %struct.WDOG_Type** %2, align 4, !dbg !5200
  %4 = getelementptr inbounds %struct.WDOG_Type, %struct.WDOG_Type* %3, i32 0, i32 4, !dbg !5201
  %5 = load volatile i16, i16* %4, align 2, !dbg !5202
  %6 = zext i16 %5 to i32, !dbg !5202
  %7 = and i32 %6, -2, !dbg !5202
  %8 = trunc i32 %7 to i16, !dbg !5202
  store volatile i16 %8, i16* %4, align 2, !dbg !5202
  ret void, !dbg !5203
}

; Function Attrs: noinline nounwind optnone
define internal void @RDC_SetDomainID(%struct.RDC_Type* noundef %0, i32 noundef %1, i32 noundef %2, i1 noundef zeroext %3) #1 !dbg !5204 {
  %5 = alloca %struct.RDC_Type*, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i8, align 1
  store %struct.RDC_Type* %0, %struct.RDC_Type** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.RDC_Type** %5, metadata !5207, metadata !DIExpression()), !dbg !5208
  store i32 %1, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !5209, metadata !DIExpression()), !dbg !5210
  store i32 %2, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !5211, metadata !DIExpression()), !dbg !5212
  %9 = zext i1 %3 to i8
  store i8 %9, i8* %8, align 1
  call void @llvm.dbg.declare(metadata i8* %8, metadata !5213, metadata !DIExpression()), !dbg !5214
  %10 = load i32, i32* %7, align 4, !dbg !5215
  %11 = shl i32 %10, 0, !dbg !5215
  %12 = and i32 %11, 3, !dbg !5215
  %13 = load i8, i8* %8, align 1, !dbg !5216
  %14 = trunc i8 %13 to i1, !dbg !5216
  %15 = zext i1 %14 to i64, !dbg !5216
  %16 = select i1 %14, i32 -2147483648, i32 0, !dbg !5216
  %17 = or i32 %12, %16, !dbg !5217
  %18 = load %struct.RDC_Type*, %struct.RDC_Type** %5, align 4, !dbg !5218
  %19 = getelementptr inbounds %struct.RDC_Type, %struct.RDC_Type* %18, i32 0, i32 6, !dbg !5219
  %20 = load i32, i32* %6, align 4, !dbg !5220
  %21 = getelementptr inbounds [27 x i32], [27 x i32]* %19, i32 0, i32 %20, !dbg !5218
  store volatile i32 %17, i32* %21, align 4, !dbg !5221
  ret void, !dbg !5222
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_arm_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) #1 !dbg !5223 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.__esf*, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !5271, metadata !DIExpression()), !dbg !5272
  store %struct.__esf* %1, %struct.__esf** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.__esf** %4, metadata !5273, metadata !DIExpression()), !dbg !5274
  %5 = load %struct.__esf*, %struct.__esf** %4, align 4, !dbg !5275
  %6 = icmp ne %struct.__esf* %5, null, !dbg !5277
  br i1 %6, label %7, label %9, !dbg !5278

7:                                                ; preds = %2
  %8 = load %struct.__esf*, %struct.__esf** %4, align 4, !dbg !5279
  call void @esf_dump(%struct.__esf* noundef %8) #10, !dbg !5281
  br label %9, !dbg !5282

9:                                                ; preds = %7, %2
  %10 = load i32, i32* %3, align 4, !dbg !5283
  %11 = load %struct.__esf*, %struct.__esf** %4, align 4, !dbg !5284
  call void @z_fatal_error(i32 noundef %10, %struct.__esf* noundef %11) #10, !dbg !5285
  ret void, !dbg !5286
}

; Function Attrs: noinline nounwind optnone
define internal void @esf_dump(%struct.__esf* noundef %0) #1 !dbg !5287 {
  %2 = alloca %struct.__esf*, align 4
  %3 = alloca i8, align 1
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 4
  %7 = alloca i8, align 1
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i8*, align 4
  %11 = alloca i8, align 1
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i8*, align 4
  %15 = alloca i8, align 1
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i8*, align 4
  store %struct.__esf* %0, %struct.__esf** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.__esf** %2, metadata !5290, metadata !DIExpression()), !dbg !5291
  br label %19, !dbg !5292

19:                                               ; preds = %1
  br label %20, !dbg !5293

20:                                               ; preds = %19
  br label %21, !dbg !5297

21:                                               ; preds = %20
  br label %22, !dbg !5298

22:                                               ; preds = %21
  br label %23, !dbg !5302

23:                                               ; preds = %22
  br label %24, !dbg !5303

24:                                               ; preds = %23
  br label %25, !dbg !5307

25:                                               ; preds = %24
  br label %26, !dbg !5308

26:                                               ; preds = %25
  ret void, !dbg !5312
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_do_kernel_oops(%struct.__esf* noundef %0, %struct._callee_saved.10* noundef %1) #1 !dbg !5313 {
  %3 = alloca %struct.__esf*, align 4
  %4 = alloca %struct._callee_saved.10*, align 4
  %5 = alloca i32, align 4
  store %struct.__esf* %0, %struct.__esf** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.__esf** %3, metadata !5329, metadata !DIExpression()), !dbg !5330
  store %struct._callee_saved.10* %1, %struct._callee_saved.10** %4, align 4
  call void @llvm.dbg.declare(metadata %struct._callee_saved.10** %4, metadata !5331, metadata !DIExpression()), !dbg !5332
  %6 = load %struct._callee_saved.10*, %struct._callee_saved.10** %4, align 4, !dbg !5333
  call void @llvm.dbg.declare(metadata i32* %5, metadata !5334, metadata !DIExpression()), !dbg !5335
  %7 = load %struct.__esf*, %struct.__esf** %3, align 4, !dbg !5336
  %8 = getelementptr inbounds %struct.__esf, %struct.__esf* %7, i32 0, i32 0, !dbg !5337
  %9 = getelementptr inbounds %struct.__basic_sf, %struct.__basic_sf* %8, i32 0, i32 0, !dbg !5338
  %10 = bitcast %union.anon.68* %9 to i32*, !dbg !5338
  %11 = load i32, i32* %10, align 4, !dbg !5338
  store i32 %11, i32* %5, align 4, !dbg !5335
  %12 = load i32, i32* %5, align 4, !dbg !5339
  %13 = load %struct.__esf*, %struct.__esf** %3, align 4, !dbg !5340
  call void @z_arm_fatal_error(i32 noundef %12, %struct.__esf* noundef %13) #10, !dbg !5341
  ret void, !dbg !5342
}

; Function Attrs: noinline noreturn nounwind optnone
define dso_local void @arch_syscall_oops(i8* noundef %0) #5 !dbg !5343 {
  %2 = alloca i8*, align 4
  %3 = alloca i32*, align 4
  %4 = alloca %struct.__esf, align 4
  store i8* %0, i8** %2, align 4
  call void @llvm.dbg.declare(metadata i8** %2, metadata !5346, metadata !DIExpression()), !dbg !5347
  call void @llvm.dbg.declare(metadata i32** %3, metadata !5348, metadata !DIExpression()), !dbg !5349
  %5 = load i8*, i8** %2, align 4, !dbg !5350
  %6 = bitcast i8* %5 to i32*, !dbg !5350
  store i32* %6, i32** %3, align 4, !dbg !5349
  call void @llvm.dbg.declare(metadata %struct.__esf* %4, metadata !5351, metadata !DIExpression()), !dbg !5352
  %7 = bitcast %struct.__esf* %4 to i8*, !dbg !5352
  call void @llvm.memset.p0i8.i32(i8* align 4 %7, i8 0, i32 32, i1 false), !dbg !5352
  %8 = load i32*, i32** %3, align 4, !dbg !5353
  %9 = getelementptr inbounds i32, i32* %8, i32 3, !dbg !5353
  %10 = load i32, i32* %9, align 4, !dbg !5353
  %11 = getelementptr inbounds %struct.__esf, %struct.__esf* %4, i32 0, i32 0, !dbg !5354
  %12 = getelementptr inbounds %struct.__basic_sf, %struct.__basic_sf* %11, i32 0, i32 6, !dbg !5355
  %13 = bitcast %union.anon.68* %12 to i32*, !dbg !5355
  store i32 %10, i32* %13, align 4, !dbg !5356
  call void @z_arm_fatal_error(i32 noundef 3, %struct.__esf* noundef %4) #10, !dbg !5357
  unreachable, !dbg !5358
}

; Function Attrs: noinline nounwind optnone
define dso_local void @arch_irq_enable(i32 noundef %0) #1 !dbg !5359 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !5363, metadata !DIExpression()), !dbg !5364
  %3 = load i32, i32* %2, align 4, !dbg !5365
  call void @__NVIC_EnableIRQ(i32 noundef %3) #10, !dbg !5366
  ret void, !dbg !5367
}

; Function Attrs: noinline nounwind optnone
define internal void @__NVIC_EnableIRQ(i32 noundef %0) #1 !dbg !5368 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !5371, metadata !DIExpression()), !dbg !5372
  %3 = load i32, i32* %2, align 4, !dbg !5373
  %4 = icmp sge i32 %3, 0, !dbg !5375
  br i1 %4, label %5, label %12, !dbg !5376

5:                                                ; preds = %1
  call void asm sideeffect "", "~{memory}"() #9, !dbg !5377, !srcloc !5379
  %6 = load i32, i32* %2, align 4, !dbg !5380
  %7 = and i32 %6, 31, !dbg !5381
  %8 = shl i32 1, %7, !dbg !5382
  %9 = load i32, i32* %2, align 4, !dbg !5383
  %10 = lshr i32 %9, 5, !dbg !5384
  %11 = getelementptr inbounds [8 x i32], [8 x i32]* getelementptr inbounds (%struct.NVIC_Type, %struct.NVIC_Type* inttoptr (i32 -536813312 to %struct.NVIC_Type*), i32 0, i32 0), i32 0, i32 %10, !dbg !5385
  store volatile i32 %8, i32* %11, align 4, !dbg !5386
  call void asm sideeffect "", "~{memory}"() #9, !dbg !5387, !srcloc !5388
  br label %12, !dbg !5389

12:                                               ; preds = %5, %1
  ret void, !dbg !5390
}

; Function Attrs: noinline nounwind optnone
define dso_local void @arch_irq_disable(i32 noundef %0) #1 !dbg !5391 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !5392, metadata !DIExpression()), !dbg !5393
  %3 = load i32, i32* %2, align 4, !dbg !5394
  call void @__NVIC_DisableIRQ(i32 noundef %3) #10, !dbg !5395
  ret void, !dbg !5396
}

; Function Attrs: noinline nounwind optnone
define internal void @__NVIC_DisableIRQ(i32 noundef %0) #1 !dbg !5397 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !5398, metadata !DIExpression()), !dbg !5399
  %3 = load i32, i32* %2, align 4, !dbg !5400
  %4 = icmp sge i32 %3, 0, !dbg !5402
  br i1 %4, label %5, label %12, !dbg !5403

5:                                                ; preds = %1
  %6 = load i32, i32* %2, align 4, !dbg !5404
  %7 = and i32 %6, 31, !dbg !5406
  %8 = shl i32 1, %7, !dbg !5407
  %9 = load i32, i32* %2, align 4, !dbg !5408
  %10 = lshr i32 %9, 5, !dbg !5409
  %11 = getelementptr inbounds [8 x i32], [8 x i32]* getelementptr inbounds (%struct.NVIC_Type, %struct.NVIC_Type* inttoptr (i32 -536813312 to %struct.NVIC_Type*), i32 0, i32 2), i32 0, i32 %10, !dbg !5410
  store volatile i32 %8, i32* %11, align 4, !dbg !5411
  call void asm sideeffect "dsb 0xF", "~{memory}"() #9, !dbg !5412, !srcloc !5416
  call void asm sideeffect "isb 0xF", "~{memory}"() #9, !dbg !5417, !srcloc !5420
  br label %12, !dbg !5421

12:                                               ; preds = %5, %1
  ret void, !dbg !5422
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @arch_irq_is_enabled(i32 noundef %0) #1 !dbg !5423 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !5426, metadata !DIExpression()), !dbg !5427
  %3 = load i32, i32* %2, align 4, !dbg !5428
  %4 = udiv i32 %3, 32, !dbg !5428
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* getelementptr inbounds (%struct.NVIC_Type, %struct.NVIC_Type* inttoptr (i32 -536813312 to %struct.NVIC_Type*), i32 0, i32 0), i32 0, i32 %4, !dbg !5429
  %6 = load volatile i32, i32* %5, align 4, !dbg !5429
  %7 = load i32, i32* %2, align 4, !dbg !5430
  %8 = urem i32 %7, 32, !dbg !5430
  %9 = shl i32 1, %8, !dbg !5430
  %10 = and i32 %6, %9, !dbg !5431
  ret i32 %10, !dbg !5432
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_arm_irq_priority_set(i32 noundef %0, i32 noundef %1, i32 noundef %2) #1 !dbg !5433 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !5436, metadata !DIExpression()), !dbg !5437
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !5438, metadata !DIExpression()), !dbg !5439
  store i32 %2, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !5440, metadata !DIExpression()), !dbg !5441
  %7 = load i32, i32* %5, align 4, !dbg !5442
  %8 = add i32 %7, 1, !dbg !5442
  store i32 %8, i32* %5, align 4, !dbg !5442
  %9 = load i32, i32* %4, align 4, !dbg !5445
  %10 = load i32, i32* %5, align 4, !dbg !5446
  call void @__NVIC_SetPriority(i32 noundef %9, i32 noundef %10) #10, !dbg !5447
  ret void, !dbg !5448
}

; Function Attrs: noinline nounwind optnone
define internal void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %1) #1 !dbg !5449 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !5452, metadata !DIExpression()), !dbg !5453
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !5454, metadata !DIExpression()), !dbg !5455
  %5 = load i32, i32* %3, align 4, !dbg !5456
  %6 = icmp sge i32 %5, 0, !dbg !5458
  br i1 %6, label %7, label %14, !dbg !5459

7:                                                ; preds = %2
  %8 = load i32, i32* %4, align 4, !dbg !5460
  %9 = shl i32 %8, 4, !dbg !5462
  %10 = and i32 %9, 255, !dbg !5463
  %11 = trunc i32 %10 to i8, !dbg !5464
  %12 = load i32, i32* %3, align 4, !dbg !5465
  %13 = getelementptr inbounds [240 x i8], [240 x i8]* getelementptr inbounds (%struct.NVIC_Type, %struct.NVIC_Type* inttoptr (i32 -536813312 to %struct.NVIC_Type*), i32 0, i32 10), i32 0, i32 %12, !dbg !5466
  store volatile i8 %11, i8* %13, align 1, !dbg !5467
  br label %23, !dbg !5468

14:                                               ; preds = %2
  %15 = load i32, i32* %4, align 4, !dbg !5469
  %16 = shl i32 %15, 4, !dbg !5471
  %17 = and i32 %16, 255, !dbg !5472
  %18 = trunc i32 %17 to i8, !dbg !5473
  %19 = load i32, i32* %3, align 4, !dbg !5474
  %20 = and i32 %19, 15, !dbg !5475
  %21 = sub i32 %20, 4, !dbg !5476
  %22 = getelementptr inbounds [12 x i8], [12 x i8]* getelementptr inbounds (%struct.SCB_Type, %struct.SCB_Type* inttoptr (i32 -536810240 to %struct.SCB_Type*), i32 0, i32 6), i32 0, i32 %21, !dbg !5477
  store volatile i8 %18, i8* %22, align 1, !dbg !5478
  br label %23

23:                                               ; preds = %14, %7
  ret void, !dbg !5479
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_irq_spurious(i8* noundef %0) #1 !dbg !5480 {
  %2 = alloca i8*, align 4
  store i8* %0, i8** %2, align 4
  call void @llvm.dbg.declare(metadata i8** %2, metadata !5481, metadata !DIExpression()), !dbg !5482
  %3 = load i8*, i8** %2, align 4, !dbg !5483
  call void @z_arm_fatal_error(i32 noundef 1, %struct.__esf* noundef null) #10, !dbg !5484
  ret void, !dbg !5485
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_arm_nmi() #1 !dbg !5486 {
  call void @z_SysNmiOnReset() #10, !dbg !5488
  call void @z_arm_int_exit() #10, !dbg !5489
  ret void, !dbg !5490
}

declare dso_local void @z_SysNmiOnReset() #0

declare dso_local void @z_arm_int_exit() #0

; Function Attrs: noinline nounwind optnone
define dso_local void @z_arm_prep_c() #1 !dbg !5491 {
  call void @relocate_vector_table() #10, !dbg !5493
  call void @z_arm_floating_point_init() #10, !dbg !5494
  call void @z_bss_zero() #10, !dbg !5495
  call void @z_data_copy() #10, !dbg !5496
  call void @z_arm_interrupt_init() #10, !dbg !5497
  call void @z_cstart() #12, !dbg !5498
  unreachable, !dbg !5498
}

; Function Attrs: noinline nounwind optnone
define internal void @relocate_vector_table() #1 !dbg !5499 {
  store volatile i32 and (i32 ptrtoint ([0 x i8]* @_vector_start to i32), i32 -128), i32* getelementptr inbounds (%struct.SCB_Type, %struct.SCB_Type* inttoptr (i32 -536810240 to %struct.SCB_Type*), i32 0, i32 2), align 4, !dbg !5500
  call void asm sideeffect "dsb 0xF", "~{memory}"() #9, !dbg !5501, !srcloc !5504
  call void asm sideeffect "isb 0xF", "~{memory}"() #9, !dbg !5505, !srcloc !5508
  ret void, !dbg !5509
}

; Function Attrs: noinline nounwind optnone
define internal void @z_arm_floating_point_init() #1 !dbg !5510 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = load volatile i32, i32* getelementptr inbounds (%struct.SCB_Type, %struct.SCB_Type* inttoptr (i32 -536810240 to %struct.SCB_Type*), i32 0, i32 20), align 4, !dbg !5511
  %4 = and i32 %3, -15728641, !dbg !5511
  store volatile i32 %4, i32* getelementptr inbounds (%struct.SCB_Type, %struct.SCB_Type* inttoptr (i32 -536810240 to %struct.SCB_Type*), i32 0, i32 20), align 4, !dbg !5511
  call void @llvm.dbg.declare(metadata i32* %1, metadata !5512, metadata !DIExpression()) #9, !dbg !5516
  %5 = call i32 asm sideeffect "MRS $0, control", "=r"() #9, !dbg !5518, !srcloc !5519
  store i32 %5, i32* %1, align 4, !dbg !5518
  %6 = load i32, i32* %1, align 4, !dbg !5520
  %7 = and i32 %6, -5, !dbg !5521
  store i32 %7, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !5522, metadata !DIExpression()) #9, !dbg !5526
  %8 = load i32, i32* %2, align 4, !dbg !5528
  call void asm sideeffect "MSR control, $0", "r,~{memory}"(i32 %8) #9, !dbg !5529, !srcloc !5530
  call void asm sideeffect "isb 0xF", "~{memory}"() #9, !dbg !5531, !srcloc !5508
  ret void, !dbg !5533
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @arch_swap(i32 noundef %0) #1 !dbg !5534 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !5536, metadata !DIExpression()), !dbg !5537
  %4 = load i32, i32* %3, align 4, !dbg !5538
  %5 = load %struct.k_thread.180*, %struct.k_thread.180** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !5539
  %6 = getelementptr inbounds %struct.k_thread.180, %struct.k_thread.180* %5, i32 0, i32 6, !dbg !5540
  %7 = getelementptr inbounds %struct._thread_arch.15, %struct._thread_arch.15* %6, i32 0, i32 0, !dbg !5541
  store i32 %4, i32* %7, align 8, !dbg !5542
  %8 = load i32, i32* @_k_neg_eagain, align 4, !dbg !5543
  %9 = load %struct.k_thread.180*, %struct.k_thread.180** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !5544
  %10 = getelementptr inbounds %struct.k_thread.180, %struct.k_thread.180* %9, i32 0, i32 6, !dbg !5545
  %11 = getelementptr inbounds %struct._thread_arch.15, %struct._thread_arch.15* %10, i32 0, i32 1, !dbg !5546
  store i32 %8, i32* %11, align 4, !dbg !5547
  %12 = load volatile i32, i32* getelementptr inbounds (%struct.SCB_Type, %struct.SCB_Type* inttoptr (i32 -536810240 to %struct.SCB_Type*), i32 0, i32 1), align 4, !dbg !5548
  %13 = or i32 %12, 268435456, !dbg !5548
  store volatile i32 %13, i32* getelementptr inbounds (%struct.SCB_Type, %struct.SCB_Type* inttoptr (i32 -536810240 to %struct.SCB_Type*), i32 0, i32 1), align 4, !dbg !5548
  store i32 0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !5549, metadata !DIExpression()) #9, !dbg !5552
  %14 = load i32, i32* %2, align 4, !dbg !5554
  call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #9, !dbg !5555, !srcloc !5556
  %15 = load %struct.k_thread.180*, %struct.k_thread.180** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !5557
  %16 = getelementptr inbounds %struct.k_thread.180, %struct.k_thread.180* %15, i32 0, i32 6, !dbg !5558
  %17 = getelementptr inbounds %struct._thread_arch.15, %struct._thread_arch.15* %16, i32 0, i32 1, !dbg !5559
  %18 = load i32, i32* %17, align 4, !dbg !5559
  ret i32 %18, !dbg !5560
}

; Function Attrs: noinline nounwind optnone
define dso_local void @arch_new_thread(%struct.k_thread.180* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) #1 !dbg !5561 {
  %8 = alloca %struct.k_thread.180*, align 4
  %9 = alloca %struct.z_thread_stack_element*, align 4
  %10 = alloca i8*, align 4
  %11 = alloca void (i8*, i8*, i8*)*, align 4
  %12 = alloca i8*, align 4
  %13 = alloca i8*, align 4
  %14 = alloca i8*, align 4
  %15 = alloca %struct.__basic_sf*, align 4
  store %struct.k_thread.180* %0, %struct.k_thread.180** %8, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.180** %8, metadata !5664, metadata !DIExpression()), !dbg !5665
  store %struct.z_thread_stack_element* %1, %struct.z_thread_stack_element** %9, align 4
  call void @llvm.dbg.declare(metadata %struct.z_thread_stack_element** %9, metadata !5666, metadata !DIExpression()), !dbg !5667
  store i8* %2, i8** %10, align 4
  call void @llvm.dbg.declare(metadata i8** %10, metadata !5668, metadata !DIExpression()), !dbg !5669
  store void (i8*, i8*, i8*)* %3, void (i8*, i8*, i8*)** %11, align 4
  call void @llvm.dbg.declare(metadata void (i8*, i8*, i8*)** %11, metadata !5670, metadata !DIExpression()), !dbg !5671
  store i8* %4, i8** %12, align 4
  call void @llvm.dbg.declare(metadata i8** %12, metadata !5672, metadata !DIExpression()), !dbg !5673
  store i8* %5, i8** %13, align 4
  call void @llvm.dbg.declare(metadata i8** %13, metadata !5674, metadata !DIExpression()), !dbg !5675
  store i8* %6, i8** %14, align 4
  call void @llvm.dbg.declare(metadata i8** %14, metadata !5676, metadata !DIExpression()), !dbg !5677
  call void @llvm.dbg.declare(metadata %struct.__basic_sf** %15, metadata !5678, metadata !DIExpression()), !dbg !5679
  %16 = load i8*, i8** %10, align 4, !dbg !5680
  %17 = getelementptr inbounds i8, i8* %16, i32 -32, !dbg !5680
  %18 = bitcast i8* %17 to %struct.__basic_sf*, !dbg !5680
  store %struct.__basic_sf* %18, %struct.__basic_sf** %15, align 4, !dbg !5681
  %19 = load %struct.__basic_sf*, %struct.__basic_sf** %15, align 4, !dbg !5682
  %20 = getelementptr inbounds %struct.__basic_sf, %struct.__basic_sf* %19, i32 0, i32 6, !dbg !5683
  %21 = bitcast %union.anon.68* %20 to i32*, !dbg !5683
  store i32 ptrtoint (void (void (i8*, i8*, i8*)*, i8*, i8*, i8*)* @z_thread_entry to i32), i32* %21, align 4, !dbg !5684
  %22 = load %struct.__basic_sf*, %struct.__basic_sf** %15, align 4, !dbg !5685
  %23 = getelementptr inbounds %struct.__basic_sf, %struct.__basic_sf* %22, i32 0, i32 6, !dbg !5686
  %24 = bitcast %union.anon.68* %23 to i32*, !dbg !5686
  %25 = load i32, i32* %24, align 4, !dbg !5687
  %26 = and i32 %25, -2, !dbg !5687
  store i32 %26, i32* %24, align 4, !dbg !5687
  %27 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %11, align 4, !dbg !5688
  %28 = ptrtoint void (i8*, i8*, i8*)* %27 to i32, !dbg !5689
  %29 = load %struct.__basic_sf*, %struct.__basic_sf** %15, align 4, !dbg !5690
  %30 = getelementptr inbounds %struct.__basic_sf, %struct.__basic_sf* %29, i32 0, i32 0, !dbg !5691
  %31 = bitcast %union.anon.68* %30 to i32*, !dbg !5691
  store i32 %28, i32* %31, align 4, !dbg !5692
  %32 = load i8*, i8** %12, align 4, !dbg !5693
  %33 = ptrtoint i8* %32 to i32, !dbg !5694
  %34 = load %struct.__basic_sf*, %struct.__basic_sf** %15, align 4, !dbg !5695
  %35 = getelementptr inbounds %struct.__basic_sf, %struct.__basic_sf* %34, i32 0, i32 1, !dbg !5696
  %36 = bitcast %union.anon.68* %35 to i32*, !dbg !5696
  store i32 %33, i32* %36, align 4, !dbg !5697
  %37 = load i8*, i8** %13, align 4, !dbg !5698
  %38 = ptrtoint i8* %37 to i32, !dbg !5699
  %39 = load %struct.__basic_sf*, %struct.__basic_sf** %15, align 4, !dbg !5700
  %40 = getelementptr inbounds %struct.__basic_sf, %struct.__basic_sf* %39, i32 0, i32 2, !dbg !5701
  %41 = bitcast %union.anon.68* %40 to i32*, !dbg !5701
  store i32 %38, i32* %41, align 4, !dbg !5702
  %42 = load i8*, i8** %14, align 4, !dbg !5703
  %43 = ptrtoint i8* %42 to i32, !dbg !5704
  %44 = load %struct.__basic_sf*, %struct.__basic_sf** %15, align 4, !dbg !5705
  %45 = getelementptr inbounds %struct.__basic_sf, %struct.__basic_sf* %44, i32 0, i32 3, !dbg !5706
  %46 = bitcast %union.anon.68* %45 to i32*, !dbg !5706
  store i32 %43, i32* %46, align 4, !dbg !5707
  %47 = load %struct.__basic_sf*, %struct.__basic_sf** %15, align 4, !dbg !5708
  %48 = getelementptr inbounds %struct.__basic_sf, %struct.__basic_sf* %47, i32 0, i32 7, !dbg !5709
  store i32 16777216, i32* %48, align 4, !dbg !5710
  %49 = load %struct.__basic_sf*, %struct.__basic_sf** %15, align 4, !dbg !5711
  %50 = ptrtoint %struct.__basic_sf* %49 to i32, !dbg !5712
  %51 = load %struct.k_thread.180*, %struct.k_thread.180** %8, align 4, !dbg !5713
  %52 = getelementptr inbounds %struct.k_thread.180, %struct.k_thread.180* %51, i32 0, i32 1, !dbg !5714
  %53 = getelementptr inbounds %struct._callee_saved.10, %struct._callee_saved.10* %52, i32 0, i32 8, !dbg !5715
  store i32 %50, i32* %53, align 8, !dbg !5716
  %54 = load %struct.k_thread.180*, %struct.k_thread.180** %8, align 4, !dbg !5717
  %55 = getelementptr inbounds %struct.k_thread.180, %struct.k_thread.180* %54, i32 0, i32 6, !dbg !5718
  %56 = getelementptr inbounds %struct._thread_arch.15, %struct._thread_arch.15* %55, i32 0, i32 0, !dbg !5719
  store i32 0, i32* %56, align 8, !dbg !5720
  ret void, !dbg !5721
}

; Function Attrs: noinline nounwind optnone
define dso_local void @arch_switch_to_main_thread(%struct.k_thread.180* noundef %0, i8* noundef %1, void (i8*, i8*, i8*)* noundef %2) #1 !dbg !5722 {
  %4 = alloca %struct.k_thread.180*, align 4
  %5 = alloca i8*, align 4
  %6 = alloca void (i8*, i8*, i8*)*, align 4
  store %struct.k_thread.180* %0, %struct.k_thread.180** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.180** %4, metadata !5725, metadata !DIExpression()), !dbg !5726
  store i8* %1, i8** %5, align 4
  call void @llvm.dbg.declare(metadata i8** %5, metadata !5727, metadata !DIExpression()), !dbg !5728
  store void (i8*, i8*, i8*)* %2, void (i8*, i8*, i8*)** %6, align 4
  call void @llvm.dbg.declare(metadata void (i8*, i8*, i8*)** %6, metadata !5729, metadata !DIExpression()), !dbg !5730
  call void @z_arm_prepare_switch_to_main() #10, !dbg !5731
  %7 = load %struct.k_thread.180*, %struct.k_thread.180** %4, align 4, !dbg !5732
  store %struct.k_thread.180* %7, %struct.k_thread.180** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !5733
  %8 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %6, align 4, !dbg !5734
  %9 = load i8*, i8** %5, align 4, !dbg !5735
  call void asm sideeffect "mov   r0,  $0\0A\09msr   PSP, $1\0A\09movs r1, #0\0A\09cpsie if\0A\09msr   BASEPRI, r1\0A\09isb\0A\09movs r2, #0\0A\09movs r3, #0\0A\09bl z_thread_entry\0A\09", "r,r,~{r0}"(void (i8*, i8*, i8*)* %8, i8* %9) #9, !dbg !5736, !srcloc !5737
  unreachable, !dbg !5738
}

; Function Attrs: noinline nounwind optnone
define internal void @z_arm_prepare_switch_to_main() #1 !dbg !5739 {
  ret void, !dbg !5740
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_arm_fault(i32 noundef %0, i32 noundef %1, i32 noundef %2, %struct._callee_saved.10* noundef %3) #1 !dbg !5741 {
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca %struct._callee_saved.10*, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i8, align 1
  %13 = alloca i8, align 1
  %14 = alloca %struct.__esf*, align 4
  %15 = alloca %struct.__esf, align 4
  store i32 %0, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !5758, metadata !DIExpression()), !dbg !5759
  store i32 %1, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !5760, metadata !DIExpression()), !dbg !5761
  store i32 %2, i32* %8, align 4
  call void @llvm.dbg.declare(metadata i32* %8, metadata !5762, metadata !DIExpression()), !dbg !5763
  store %struct._callee_saved.10* %3, %struct._callee_saved.10** %9, align 4
  call void @llvm.dbg.declare(metadata %struct._callee_saved.10** %9, metadata !5764, metadata !DIExpression()), !dbg !5765
  call void @llvm.dbg.declare(metadata i32* %10, metadata !5766, metadata !DIExpression()), !dbg !5767
  store i32 0, i32* %10, align 4, !dbg !5767
  call void @llvm.dbg.declare(metadata i32* %11, metadata !5768, metadata !DIExpression()), !dbg !5769
  %16 = load volatile i32, i32* getelementptr inbounds (%struct.SCB_Type, %struct.SCB_Type* inttoptr (i32 -536810240 to %struct.SCB_Type*), i32 0, i32 1), align 4, !dbg !5770
  %17 = and i32 %16, 511, !dbg !5771
  store i32 %17, i32* %11, align 4, !dbg !5769
  call void @llvm.dbg.declare(metadata i8* %12, metadata !5772, metadata !DIExpression()), !dbg !5773
  call void @llvm.dbg.declare(metadata i8* %13, metadata !5774, metadata !DIExpression()), !dbg !5775
  call void @llvm.dbg.declare(metadata %struct.__esf** %14, metadata !5776, metadata !DIExpression()), !dbg !5777
  call void @llvm.dbg.declare(metadata %struct.__esf* %15, metadata !5778, metadata !DIExpression()), !dbg !5779
  store i32 0, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !5780, metadata !DIExpression()) #9, !dbg !5782
  %18 = load i32, i32* %5, align 4, !dbg !5784
  call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #9, !dbg !5785, !srcloc !5786
  %19 = load i32, i32* %6, align 4, !dbg !5787
  %20 = load i32, i32* %7, align 4, !dbg !5788
  %21 = load i32, i32* %8, align 4, !dbg !5789
  %22 = call %struct.__esf* @get_esf(i32 noundef %19, i32 noundef %20, i32 noundef %21, i8* noundef %13) #10, !dbg !5790
  store %struct.__esf* %22, %struct.__esf** %14, align 4, !dbg !5791
  %23 = load %struct.__esf*, %struct.__esf** %14, align 4, !dbg !5792
  %24 = load i32, i32* %11, align 4, !dbg !5793
  %25 = call i32 @fault_handle(%struct.__esf* noundef %23, i32 noundef %24, i8* noundef %12) #10, !dbg !5794
  store i32 %25, i32* %10, align 4, !dbg !5795
  %26 = load i8, i8* %12, align 1, !dbg !5796
  %27 = trunc i8 %26 to i1, !dbg !5796
  br i1 %27, label %28, label %29, !dbg !5798

28:                                               ; preds = %4
  br label %56, !dbg !5799

29:                                               ; preds = %4
  %30 = bitcast %struct.__esf* %15 to i8*, !dbg !5801
  %31 = load %struct.__esf*, %struct.__esf** %14, align 4, !dbg !5802
  %32 = bitcast %struct.__esf* %31 to i8*, !dbg !5802
  %33 = call i8* @memcpy(i8* noundef %30, i8* noundef %32, i32 noundef 32) #10, !dbg !5803
  %34 = load %struct._callee_saved.10*, %struct._callee_saved.10** %9, align 4, !dbg !5804
  %35 = load i8, i8* %13, align 1, !dbg !5805
  %36 = trunc i8 %35 to i1, !dbg !5805
  br i1 %36, label %37, label %49, !dbg !5807

37:                                               ; preds = %29
  %38 = getelementptr inbounds %struct.__esf, %struct.__esf* %15, i32 0, i32 0, !dbg !5808
  %39 = getelementptr inbounds %struct.__basic_sf, %struct.__basic_sf* %38, i32 0, i32 7, !dbg !5811
  %40 = load i32, i32* %39, align 4, !dbg !5811
  %41 = and i32 %40, 511, !dbg !5812
  %42 = icmp eq i32 %41, 0, !dbg !5813
  br i1 %42, label %43, label %48, !dbg !5814

43:                                               ; preds = %37
  %44 = getelementptr inbounds %struct.__esf, %struct.__esf* %15, i32 0, i32 0, !dbg !5815
  %45 = getelementptr inbounds %struct.__basic_sf, %struct.__basic_sf* %44, i32 0, i32 7, !dbg !5817
  %46 = load i32, i32* %45, align 4, !dbg !5818
  %47 = or i32 %46, 511, !dbg !5818
  store i32 %47, i32* %45, align 4, !dbg !5818
  br label %48, !dbg !5819

48:                                               ; preds = %43, %37
  br label %54, !dbg !5820

49:                                               ; preds = %29
  %50 = getelementptr inbounds %struct.__esf, %struct.__esf* %15, i32 0, i32 0, !dbg !5821
  %51 = getelementptr inbounds %struct.__basic_sf, %struct.__basic_sf* %50, i32 0, i32 7, !dbg !5823
  %52 = load i32, i32* %51, align 4, !dbg !5824
  %53 = and i32 %52, -512, !dbg !5824
  store i32 %53, i32* %51, align 4, !dbg !5824
  br label %54

54:                                               ; preds = %49, %48
  %55 = load i32, i32* %10, align 4, !dbg !5825
  call void @z_arm_fatal_error(i32 noundef %55, %struct.__esf* noundef %15) #10, !dbg !5826
  br label %56, !dbg !5827

56:                                               ; preds = %54, %28
  ret void, !dbg !5827
}

; Function Attrs: noinline nounwind optnone
define internal %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3) #1 !dbg !5828 {
  %5 = alloca %struct.__esf*, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i8*, align 4
  %10 = alloca i8, align 1
  %11 = alloca %struct.__esf*, align 4
  %12 = alloca i8, align 1
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i8*, align 4
  store i32 %0, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !5832, metadata !DIExpression()), !dbg !5833
  store i32 %1, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !5834, metadata !DIExpression()), !dbg !5835
  store i32 %2, i32* %8, align 4
  call void @llvm.dbg.declare(metadata i32* %8, metadata !5836, metadata !DIExpression()), !dbg !5837
  store i8* %3, i8** %9, align 4
  call void @llvm.dbg.declare(metadata i8** %9, metadata !5838, metadata !DIExpression()), !dbg !5839
  call void @llvm.dbg.declare(metadata i8* %10, metadata !5840, metadata !DIExpression()), !dbg !5841
  store i8 0, i8* %10, align 1, !dbg !5841
  call void @llvm.dbg.declare(metadata %struct.__esf** %11, metadata !5842, metadata !DIExpression()), !dbg !5843
  store %struct.__esf* null, %struct.__esf** %11, align 4, !dbg !5843
  %16 = load i8*, i8** %9, align 4, !dbg !5844
  store i8 0, i8* %16, align 1, !dbg !5845
  %17 = load i32, i32* %8, align 4, !dbg !5846
  %18 = and i32 %17, -16777216, !dbg !5848
  %19 = icmp ne i32 %18, -16777216, !dbg !5849
  br i1 %19, label %20, label %21, !dbg !5850

20:                                               ; preds = %4
  store %struct.__esf* null, %struct.__esf** %5, align 4, !dbg !5851
  br label %49, !dbg !5851

21:                                               ; preds = %4
  %22 = load i32, i32* %8, align 4, !dbg !5853
  %23 = and i32 %22, 8, !dbg !5855
  %24 = icmp ne i32 %23, 0, !dbg !5855
  br i1 %24, label %25, label %32, !dbg !5856

25:                                               ; preds = %21
  %26 = load i32, i32* %8, align 4, !dbg !5857
  %27 = and i32 %26, 4, !dbg !5858
  %28 = icmp ne i32 %27, 0, !dbg !5858
  br i1 %28, label %32, label %29, !dbg !5859

29:                                               ; preds = %25
  br label %30, !dbg !5860

30:                                               ; preds = %29
  br label %31, !dbg !5862

31:                                               ; preds = %30
  store %struct.__esf* null, %struct.__esf** %5, align 4, !dbg !5866
  br label %49, !dbg !5866

32:                                               ; preds = %25, %21
  %33 = load i8, i8* %10, align 1, !dbg !5867
  %34 = trunc i8 %33 to i1, !dbg !5867
  br i1 %34, label %47, label %35, !dbg !5869

35:                                               ; preds = %32
  %36 = load i32, i32* %8, align 4, !dbg !5870
  %37 = and i32 %36, 8, !dbg !5873
  %38 = icmp ne i32 %37, 0, !dbg !5873
  br i1 %38, label %39, label %42, !dbg !5874

39:                                               ; preds = %35
  %40 = load i32, i32* %7, align 4, !dbg !5875
  %41 = inttoptr i32 %40 to %struct.__esf*, !dbg !5877
  store %struct.__esf* %41, %struct.__esf** %11, align 4, !dbg !5878
  br label %46, !dbg !5879

42:                                               ; preds = %35
  %43 = load i32, i32* %6, align 4, !dbg !5880
  %44 = inttoptr i32 %43 to %struct.__esf*, !dbg !5882
  store %struct.__esf* %44, %struct.__esf** %11, align 4, !dbg !5883
  %45 = load i8*, i8** %9, align 4, !dbg !5884
  store i8 1, i8* %45, align 1, !dbg !5885
  br label %46

46:                                               ; preds = %42, %39
  br label %47, !dbg !5886

47:                                               ; preds = %46, %32
  %48 = load %struct.__esf*, %struct.__esf** %11, align 4, !dbg !5887
  store %struct.__esf* %48, %struct.__esf** %5, align 4, !dbg !5888
  br label %49, !dbg !5888

49:                                               ; preds = %47, %31, %20
  %50 = load %struct.__esf*, %struct.__esf** %5, align 4, !dbg !5889
  ret %struct.__esf* %50, !dbg !5889
}

; Function Attrs: noinline nounwind optnone
define internal i32 @fault_handle(%struct.__esf* noundef %0, i32 noundef %1, i8* noundef %2) #1 !dbg !5890 {
  %4 = alloca %struct.__esf*, align 4
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 4
  %7 = alloca i32, align 4
  store %struct.__esf* %0, %struct.__esf** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.__esf** %4, metadata !5893, metadata !DIExpression()), !dbg !5894
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !5895, metadata !DIExpression()), !dbg !5896
  store i8* %2, i8** %6, align 4
  call void @llvm.dbg.declare(metadata i8** %6, metadata !5897, metadata !DIExpression()), !dbg !5898
  call void @llvm.dbg.declare(metadata i32* %7, metadata !5899, metadata !DIExpression()), !dbg !5900
  store i32 0, i32* %7, align 4, !dbg !5900
  %8 = load i8*, i8** %6, align 4, !dbg !5901
  store i8 0, i8* %8, align 1, !dbg !5902
  %9 = load i32, i32* %5, align 4, !dbg !5903
  switch i32 %9, label %28 [
    i32 3, label %10
    i32 4, label %14
    i32 5, label %18
    i32 6, label %22
    i32 12, label %25
  ], !dbg !5904

10:                                               ; preds = %3
  %11 = load %struct.__esf*, %struct.__esf** %4, align 4, !dbg !5905
  %12 = load i8*, i8** %6, align 4, !dbg !5907
  %13 = call i32 @hard_fault(%struct.__esf* noundef %11, i8* noundef %12) #10, !dbg !5908
  store i32 %13, i32* %7, align 4, !dbg !5909
  br label %31, !dbg !5910

14:                                               ; preds = %3
  %15 = load %struct.__esf*, %struct.__esf** %4, align 4, !dbg !5911
  %16 = load i8*, i8** %6, align 4, !dbg !5912
  %17 = call i32 @mem_manage_fault(%struct.__esf* noundef %15, i32 noundef 0, i8* noundef %16) #10, !dbg !5913
  store i32 %17, i32* %7, align 4, !dbg !5914
  br label %31, !dbg !5915

18:                                               ; preds = %3
  %19 = load %struct.__esf*, %struct.__esf** %4, align 4, !dbg !5916
  %20 = load i8*, i8** %6, align 4, !dbg !5917
  %21 = call i32 @bus_fault(%struct.__esf* noundef %19, i32 noundef 0, i8* noundef %20) #10, !dbg !5918
  store i32 %21, i32* %7, align 4, !dbg !5919
  br label %31, !dbg !5920

22:                                               ; preds = %3
  %23 = load %struct.__esf*, %struct.__esf** %4, align 4, !dbg !5921
  %24 = call i32 @usage_fault(%struct.__esf* noundef %23) #10, !dbg !5922
  store i32 %24, i32* %7, align 4, !dbg !5923
  br label %31, !dbg !5924

25:                                               ; preds = %3
  %26 = load %struct.__esf*, %struct.__esf** %4, align 4, !dbg !5925
  %27 = load i8*, i8** %6, align 4, !dbg !5926
  call void @debug_monitor(%struct.__esf* noundef %26, i8* noundef %27) #10, !dbg !5927
  br label %31, !dbg !5928

28:                                               ; preds = %3
  %29 = load %struct.__esf*, %struct.__esf** %4, align 4, !dbg !5929
  %30 = load i32, i32* %5, align 4, !dbg !5930
  call void @reserved_exception(%struct.__esf* noundef %29, i32 noundef %30) #10, !dbg !5931
  br label %31, !dbg !5932

31:                                               ; preds = %28, %25, %22, %18, %14, %10
  %32 = load i8*, i8** %6, align 4, !dbg !5933
  %33 = load i8, i8* %32, align 1, !dbg !5935
  %34 = trunc i8 %33 to i1, !dbg !5935
  %35 = zext i1 %34 to i32, !dbg !5936
  %36 = icmp eq i32 %35, 0, !dbg !5937
  br i1 %36, label %37, label %40, !dbg !5938

37:                                               ; preds = %31
  %38 = load %struct.__esf*, %struct.__esf** %4, align 4, !dbg !5939
  %39 = load i32, i32* %5, align 4, !dbg !5941
  call void @fault_show(%struct.__esf* noundef %38, i32 noundef %39) #10, !dbg !5942
  br label %40, !dbg !5943

40:                                               ; preds = %37, %31
  %41 = load i32, i32* %7, align 4, !dbg !5944
  ret i32 %41, !dbg !5945
}

; Function Attrs: noinline nounwind optnone
define internal i32 @hard_fault(%struct.__esf* noundef %0, i8* noundef %1) #1 !dbg !5946 {
  %3 = alloca %struct.__esf*, align 4
  %4 = alloca i8*, align 4
  %5 = alloca i32, align 4
  %6 = alloca i8, align 1
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i8*, align 4
  %10 = alloca i8, align 1
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i8*, align 4
  %14 = alloca i8, align 1
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i8*, align 4
  %18 = alloca i8, align 1
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i8*, align 4
  %22 = alloca i8, align 1
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca i8*, align 4
  store %struct.__esf* %0, %struct.__esf** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.__esf** %3, metadata !5949, metadata !DIExpression()), !dbg !5950
  store i8* %1, i8** %4, align 4
  call void @llvm.dbg.declare(metadata i8** %4, metadata !5951, metadata !DIExpression()), !dbg !5952
  call void @llvm.dbg.declare(metadata i32* %5, metadata !5953, metadata !DIExpression()), !dbg !5954
  store i32 0, i32* %5, align 4, !dbg !5954
  br label %26, !dbg !5955

26:                                               ; preds = %2
  br label %27, !dbg !5956

27:                                               ; preds = %26
  %28 = load i8*, i8** %4, align 4, !dbg !5960
  store i8 0, i8* %28, align 1, !dbg !5961
  %29 = load volatile i32, i32* getelementptr inbounds (%struct.SCB_Type, %struct.SCB_Type* inttoptr (i32 -536810240 to %struct.SCB_Type*), i32 0, i32 9), align 4, !dbg !5962
  %30 = and i32 %29, 2, !dbg !5964
  %31 = icmp ne i32 %30, 0, !dbg !5965
  br i1 %31, label %32, label %35, !dbg !5966

32:                                               ; preds = %27
  br label %33, !dbg !5967

33:                                               ; preds = %32
  br label %34, !dbg !5969

34:                                               ; preds = %33
  br label %90, !dbg !5973

35:                                               ; preds = %27
  %36 = load volatile i32, i32* getelementptr inbounds (%struct.SCB_Type, %struct.SCB_Type* inttoptr (i32 -536810240 to %struct.SCB_Type*), i32 0, i32 9), align 4, !dbg !5974
  %37 = and i32 %36, -2147483648, !dbg !5976
  %38 = icmp ne i32 %37, 0, !dbg !5977
  br i1 %38, label %39, label %42, !dbg !5978

39:                                               ; preds = %35
  br label %40, !dbg !5979

40:                                               ; preds = %39
  br label %41, !dbg !5981

41:                                               ; preds = %40
  br label %89, !dbg !5985

42:                                               ; preds = %35
  %43 = load volatile i32, i32* getelementptr inbounds (%struct.SCB_Type, %struct.SCB_Type* inttoptr (i32 -536810240 to %struct.SCB_Type*), i32 0, i32 9), align 4, !dbg !5986
  %44 = and i32 %43, 1073741824, !dbg !5988
  %45 = icmp ne i32 %44, 0, !dbg !5989
  br i1 %45, label %46, label %87, !dbg !5990

46:                                               ; preds = %42
  br label %47, !dbg !5991

47:                                               ; preds = %46
  br label %48, !dbg !5993

48:                                               ; preds = %47
  %49 = load %struct.__esf*, %struct.__esf** %3, align 4, !dbg !5997
  %50 = call zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* noundef %49) #10, !dbg !5999
  br i1 %50, label %51, label %59, !dbg !6000

51:                                               ; preds = %48
  br label %52, !dbg !6001

52:                                               ; preds = %51
  br label %53, !dbg !6003

53:                                               ; preds = %52
  %54 = load %struct.__esf*, %struct.__esf** %3, align 4, !dbg !6007
  %55 = getelementptr inbounds %struct.__esf, %struct.__esf* %54, i32 0, i32 0, !dbg !6008
  %56 = getelementptr inbounds %struct.__basic_sf, %struct.__basic_sf* %55, i32 0, i32 0, !dbg !6009
  %57 = bitcast %union.anon.68* %56 to i32*, !dbg !6009
  %58 = load i32, i32* %57, align 4, !dbg !6009
  store i32 %58, i32* %5, align 4, !dbg !6010
  br label %86, !dbg !6011

59:                                               ; preds = %48
  %60 = load volatile i32, i32* getelementptr inbounds (%struct.SCB_Type, %struct.SCB_Type* inttoptr (i32 -536810240 to %struct.SCB_Type*), i32 0, i32 8), align 4, !dbg !6012
  %61 = and i32 %60, 255, !dbg !6014
  %62 = icmp ne i32 %61, 0, !dbg !6015
  br i1 %62, label %63, label %67, !dbg !6016

63:                                               ; preds = %59
  %64 = load %struct.__esf*, %struct.__esf** %3, align 4, !dbg !6017
  %65 = load i8*, i8** %4, align 4, !dbg !6019
  %66 = call i32 @mem_manage_fault(%struct.__esf* noundef %64, i32 noundef 1, i8* noundef %65) #10, !dbg !6020
  store i32 %66, i32* %5, align 4, !dbg !6021
  br label %85, !dbg !6022

67:                                               ; preds = %59
  %68 = load volatile i32, i32* getelementptr inbounds (%struct.SCB_Type, %struct.SCB_Type* inttoptr (i32 -536810240 to %struct.SCB_Type*), i32 0, i32 8), align 4, !dbg !6023
  %69 = and i32 %68, 65280, !dbg !6025
  %70 = icmp ne i32 %69, 0, !dbg !6026
  br i1 %70, label %71, label %75, !dbg !6027

71:                                               ; preds = %67
  %72 = load %struct.__esf*, %struct.__esf** %3, align 4, !dbg !6028
  %73 = load i8*, i8** %4, align 4, !dbg !6030
  %74 = call i32 @bus_fault(%struct.__esf* noundef %72, i32 noundef 1, i8* noundef %73) #10, !dbg !6031
  store i32 %74, i32* %5, align 4, !dbg !6032
  br label %84, !dbg !6033

75:                                               ; preds = %67
  %76 = load volatile i32, i32* getelementptr inbounds (%struct.SCB_Type, %struct.SCB_Type* inttoptr (i32 -536810240 to %struct.SCB_Type*), i32 0, i32 8), align 4, !dbg !6034
  %77 = and i32 %76, -65536, !dbg !6036
  %78 = icmp ne i32 %77, 0, !dbg !6037
  br i1 %78, label %79, label %82, !dbg !6038

79:                                               ; preds = %75
  %80 = load %struct.__esf*, %struct.__esf** %3, align 4, !dbg !6039
  %81 = call i32 @usage_fault(%struct.__esf* noundef %80) #10, !dbg !6041
  store i32 %81, i32* %5, align 4, !dbg !6042
  br label %83, !dbg !6043

82:                                               ; preds = %75
  br label %83

83:                                               ; preds = %82, %79
  br label %84

84:                                               ; preds = %83, %71
  br label %85

85:                                               ; preds = %84, %63
  br label %86

86:                                               ; preds = %85, %53
  br label %88, !dbg !6044

87:                                               ; preds = %42
  br label %88

88:                                               ; preds = %87, %86
  br label %89

89:                                               ; preds = %88, %41
  br label %90

90:                                               ; preds = %89, %34
  %91 = load i32, i32* %5, align 4, !dbg !6045
  ret i32 %91, !dbg !6046
}

; Function Attrs: noinline nounwind optnone
define internal i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef %1, i8* noundef %2) #1 !dbg !6047 {
  %4 = alloca %struct.__esf*, align 4
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i8, align 1
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i8*, align 4
  %13 = alloca i8, align 1
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i8*, align 4
  %17 = alloca i8, align 1
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i8*, align 4
  %21 = alloca i8, align 1
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i8*, align 4
  %25 = alloca i32, align 4
  %26 = alloca i8, align 1
  %27 = alloca i32, align 4
  %28 = alloca i32, align 4
  %29 = alloca i8*, align 4
  %30 = alloca i8, align 1
  %31 = alloca i32, align 4
  %32 = alloca i32, align 4
  %33 = alloca i8*, align 4
  %34 = alloca i8, align 1
  %35 = alloca i32, align 4
  %36 = alloca i32, align 4
  %37 = alloca i8*, align 4
  store %struct.__esf* %0, %struct.__esf** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.__esf** %4, metadata !6048, metadata !DIExpression()), !dbg !6049
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !6050, metadata !DIExpression()), !dbg !6051
  store i8* %2, i8** %6, align 4
  call void @llvm.dbg.declare(metadata i8** %6, metadata !6052, metadata !DIExpression()), !dbg !6053
  call void @llvm.dbg.declare(metadata i32* %7, metadata !6054, metadata !DIExpression()), !dbg !6055
  store i32 0, i32* %7, align 4, !dbg !6055
  call void @llvm.dbg.declare(metadata i32* %8, metadata !6056, metadata !DIExpression()), !dbg !6057
  store i32 -22, i32* %8, align 4, !dbg !6057
  br label %38, !dbg !6058

38:                                               ; preds = %3
  br label %39, !dbg !6059

39:                                               ; preds = %38
  %40 = load volatile i32, i32* getelementptr inbounds (%struct.SCB_Type, %struct.SCB_Type* inttoptr (i32 -536810240 to %struct.SCB_Type*), i32 0, i32 8), align 4, !dbg !6063
  %41 = and i32 %40, 16, !dbg !6065
  %42 = icmp ne i32 %41, 0, !dbg !6066
  br i1 %42, label %43, label %46, !dbg !6067

43:                                               ; preds = %39
  br label %44, !dbg !6068

44:                                               ; preds = %43
  br label %45, !dbg !6070

45:                                               ; preds = %44
  br label %46, !dbg !6074

46:                                               ; preds = %45, %39
  %47 = load volatile i32, i32* getelementptr inbounds (%struct.SCB_Type, %struct.SCB_Type* inttoptr (i32 -536810240 to %struct.SCB_Type*), i32 0, i32 8), align 4, !dbg !6075
  %48 = and i32 %47, 8, !dbg !6077
  %49 = icmp ne i32 %48, 0, !dbg !6078
  br i1 %49, label %50, label %53, !dbg !6079

50:                                               ; preds = %46
  br label %51, !dbg !6080

51:                                               ; preds = %50
  br label %52, !dbg !6082

52:                                               ; preds = %51
  br label %53, !dbg !6086

53:                                               ; preds = %52, %46
  %54 = load volatile i32, i32* getelementptr inbounds (%struct.SCB_Type, %struct.SCB_Type* inttoptr (i32 -536810240 to %struct.SCB_Type*), i32 0, i32 8), align 4, !dbg !6087
  %55 = and i32 %54, 2, !dbg !6089
  %56 = icmp ne i32 %55, 0, !dbg !6090
  br i1 %56, label %57, label %75, !dbg !6091

57:                                               ; preds = %53
  br label %58, !dbg !6092

58:                                               ; preds = %57
  br label %59, !dbg !6094

59:                                               ; preds = %58
  call void @llvm.dbg.declare(metadata i32* %25, metadata !6098, metadata !DIExpression()), !dbg !6099
  %60 = load volatile i32, i32* getelementptr inbounds (%struct.SCB_Type, %struct.SCB_Type* inttoptr (i32 -536810240 to %struct.SCB_Type*), i32 0, i32 11), align 4, !dbg !6100
  store i32 %60, i32* %25, align 4, !dbg !6099
  %61 = load volatile i32, i32* getelementptr inbounds (%struct.SCB_Type, %struct.SCB_Type* inttoptr (i32 -536810240 to %struct.SCB_Type*), i32 0, i32 8), align 4, !dbg !6101
  %62 = and i32 %61, 128, !dbg !6103
  %63 = icmp ne i32 %62, 0, !dbg !6104
  br i1 %63, label %64, label %74, !dbg !6105

64:                                               ; preds = %59
  %65 = load i32, i32* %25, align 4, !dbg !6106
  store i32 %65, i32* %8, align 4, !dbg !6108
  br label %66, !dbg !6109

66:                                               ; preds = %64
  br label %67, !dbg !6110

67:                                               ; preds = %66
  %68 = load i32, i32* %5, align 4, !dbg !6114
  %69 = icmp ne i32 %68, 0, !dbg !6116
  br i1 %69, label %70, label %73, !dbg !6117

70:                                               ; preds = %67
  %71 = load volatile i32, i32* getelementptr inbounds (%struct.SCB_Type, %struct.SCB_Type* inttoptr (i32 -536810240 to %struct.SCB_Type*), i32 0, i32 8), align 4, !dbg !6118
  %72 = and i32 %71, -129, !dbg !6118
  store volatile i32 %72, i32* getelementptr inbounds (%struct.SCB_Type, %struct.SCB_Type* inttoptr (i32 -536810240 to %struct.SCB_Type*), i32 0, i32 8), align 4, !dbg !6118
  br label %73, !dbg !6120

73:                                               ; preds = %70, %67
  br label %74, !dbg !6121

74:                                               ; preds = %73, %59
  br label %75, !dbg !6122

75:                                               ; preds = %74, %53
  %76 = load volatile i32, i32* getelementptr inbounds (%struct.SCB_Type, %struct.SCB_Type* inttoptr (i32 -536810240 to %struct.SCB_Type*), i32 0, i32 8), align 4, !dbg !6123
  %77 = and i32 %76, 1, !dbg !6125
  %78 = icmp ne i32 %77, 0, !dbg !6126
  br i1 %78, label %79, label %82, !dbg !6127

79:                                               ; preds = %75
  br label %80, !dbg !6128

80:                                               ; preds = %79
  br label %81, !dbg !6130

81:                                               ; preds = %80
  br label %82, !dbg !6134

82:                                               ; preds = %81, %75
  %83 = load volatile i32, i32* getelementptr inbounds (%struct.SCB_Type, %struct.SCB_Type* inttoptr (i32 -536810240 to %struct.SCB_Type*), i32 0, i32 8), align 4, !dbg !6135
  %84 = and i32 %83, 32, !dbg !6137
  %85 = icmp ne i32 %84, 0, !dbg !6138
  br i1 %85, label %86, label %89, !dbg !6139

86:                                               ; preds = %82
  br label %87, !dbg !6140

87:                                               ; preds = %86
  br label %88, !dbg !6142

88:                                               ; preds = %87
  br label %89, !dbg !6146

89:                                               ; preds = %88, %82
  %90 = load volatile i32, i32* getelementptr inbounds (%struct.SCB_Type, %struct.SCB_Type* inttoptr (i32 -536810240 to %struct.SCB_Type*), i32 0, i32 8), align 4, !dbg !6147
  %91 = and i32 %90, 16, !dbg !6149
  %92 = icmp ne i32 %91, 0, !dbg !6149
  br i1 %92, label %97, label %93, !dbg !6150

93:                                               ; preds = %89
  %94 = load volatile i32, i32* getelementptr inbounds (%struct.SCB_Type, %struct.SCB_Type* inttoptr (i32 -536810240 to %struct.SCB_Type*), i32 0, i32 8), align 4, !dbg !6151
  %95 = and i32 %94, 2, !dbg !6152
  %96 = icmp ne i32 %95, 0, !dbg !6152
  br i1 %96, label %97, label %99, !dbg !6153

97:                                               ; preds = %93, %89
  %98 = load i32, i32* %8, align 4, !dbg !6154
  br label %99, !dbg !6156

99:                                               ; preds = %97, %93
  %100 = load volatile i32, i32* getelementptr inbounds (%struct.SCB_Type, %struct.SCB_Type* inttoptr (i32 -536810240 to %struct.SCB_Type*), i32 0, i32 8), align 4, !dbg !6157
  %101 = and i32 %100, 32, !dbg !6159
  %102 = icmp ne i32 %101, 0, !dbg !6160
  br i1 %102, label %103, label %106, !dbg !6161

103:                                              ; preds = %99
  %104 = load volatile i32, i32* getelementptr inbounds (%struct.SCB_Type, %struct.SCB_Type* inttoptr (i32 -536810240 to %struct.SCB_Type*), i32 0, i32 7), align 4, !dbg !6162
  %105 = and i32 %104, -8193, !dbg !6162
  store volatile i32 %105, i32* getelementptr inbounds (%struct.SCB_Type, %struct.SCB_Type* inttoptr (i32 -536810240 to %struct.SCB_Type*), i32 0, i32 7), align 4, !dbg !6162
  br label %106, !dbg !6164

106:                                              ; preds = %103, %99
  %107 = load volatile i32, i32* getelementptr inbounds (%struct.SCB_Type, %struct.SCB_Type* inttoptr (i32 -536810240 to %struct.SCB_Type*), i32 0, i32 8), align 4, !dbg !6165
  %108 = or i32 %107, 255, !dbg !6165
  store volatile i32 %108, i32* getelementptr inbounds (%struct.SCB_Type, %struct.SCB_Type* inttoptr (i32 -536810240 to %struct.SCB_Type*), i32 0, i32 8), align 4, !dbg !6165
  %109 = load %struct.__esf*, %struct.__esf** %4, align 4, !dbg !6166
  %110 = call zeroext i1 @memory_fault_recoverable(%struct.__esf* noundef %109, i1 noundef zeroext true) #10, !dbg !6167
  %111 = load i8*, i8** %6, align 4, !dbg !6168
  %112 = zext i1 %110 to i8, !dbg !6169
  store i8 %112, i8* %111, align 1, !dbg !6169
  %113 = load i32, i32* %7, align 4, !dbg !6170
  ret i32 %113, !dbg !6171
}

; Function Attrs: noinline nounwind optnone
define internal i32 @bus_fault(%struct.__esf* noundef %0, i32 noundef %1, i8* noundef %2) #1 !dbg !6172 {
  %4 = alloca %struct.__esf*, align 4
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 4
  %7 = alloca i32, align 4
  %8 = alloca i8, align 1
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i8*, align 4
  %12 = alloca i8, align 1
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i8*, align 4
  %16 = alloca i8, align 1
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i8*, align 4
  %20 = alloca i8, align 1
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i8*, align 4
  %24 = alloca i32, align 4
  %25 = alloca i8, align 1
  %26 = alloca i32, align 4
  %27 = alloca i32, align 4
  %28 = alloca i8*, align 4
  %29 = alloca i8, align 1
  %30 = alloca i32, align 4
  %31 = alloca i32, align 4
  %32 = alloca i8*, align 4
  %33 = alloca i8, align 1
  %34 = alloca i32, align 4
  %35 = alloca i32, align 4
  %36 = alloca i8*, align 4
  %37 = alloca i8, align 1
  %38 = alloca i32, align 4
  %39 = alloca i32, align 4
  %40 = alloca i8*, align 4
  store %struct.__esf* %0, %struct.__esf** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.__esf** %4, metadata !6175, metadata !DIExpression()), !dbg !6176
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !6177, metadata !DIExpression()), !dbg !6178
  store i8* %2, i8** %6, align 4
  call void @llvm.dbg.declare(metadata i8** %6, metadata !6179, metadata !DIExpression()), !dbg !6180
  call void @llvm.dbg.declare(metadata i32* %7, metadata !6181, metadata !DIExpression()), !dbg !6182
  store i32 0, i32* %7, align 4, !dbg !6182
  br label %41, !dbg !6183

41:                                               ; preds = %3
  br label %42, !dbg !6184

42:                                               ; preds = %41
  %43 = load volatile i32, i32* getelementptr inbounds (%struct.SCB_Type, %struct.SCB_Type* inttoptr (i32 -536810240 to %struct.SCB_Type*), i32 0, i32 8), align 4, !dbg !6188
  %44 = and i32 %43, 4096, !dbg !6190
  %45 = icmp ne i32 %44, 0, !dbg !6190
  br i1 %45, label %46, label %49, !dbg !6191

46:                                               ; preds = %42
  br label %47, !dbg !6192

47:                                               ; preds = %46
  br label %48, !dbg !6194

48:                                               ; preds = %47
  br label %49, !dbg !6198

49:                                               ; preds = %48, %42
  %50 = load volatile i32, i32* getelementptr inbounds (%struct.SCB_Type, %struct.SCB_Type* inttoptr (i32 -536810240 to %struct.SCB_Type*), i32 0, i32 8), align 4, !dbg !6199
  %51 = and i32 %50, 2048, !dbg !6201
  %52 = icmp ne i32 %51, 0, !dbg !6201
  br i1 %52, label %53, label %56, !dbg !6202

53:                                               ; preds = %49
  br label %54, !dbg !6203

54:                                               ; preds = %53
  br label %55, !dbg !6205

55:                                               ; preds = %54
  br label %56, !dbg !6209

56:                                               ; preds = %55, %49
  %57 = load volatile i32, i32* getelementptr inbounds (%struct.SCB_Type, %struct.SCB_Type* inttoptr (i32 -536810240 to %struct.SCB_Type*), i32 0, i32 8), align 4, !dbg !6210
  %58 = and i32 %57, 512, !dbg !6212
  %59 = icmp ne i32 %58, 0, !dbg !6212
  br i1 %59, label %60, label %77, !dbg !6213

60:                                               ; preds = %56
  br label %61, !dbg !6214

61:                                               ; preds = %60
  br label %62, !dbg !6216

62:                                               ; preds = %61
  call void @llvm.dbg.declare(metadata i32* %24, metadata !6220, metadata !DIExpression()), !dbg !6221
  %63 = load volatile i32, i32* getelementptr inbounds (%struct.SCB_Type, %struct.SCB_Type* inttoptr (i32 -536810240 to %struct.SCB_Type*), i32 0, i32 12), align 4, !dbg !6221
  store i32 %63, i32* %24, align 4, !dbg !6221
  %64 = load volatile i32, i32* getelementptr inbounds (%struct.SCB_Type, %struct.SCB_Type* inttoptr (i32 -536810240 to %struct.SCB_Type*), i32 0, i32 8), align 4, !dbg !6222
  %65 = and i32 %64, 32768, !dbg !6224
  %66 = icmp ne i32 %65, 0, !dbg !6225
  br i1 %66, label %67, label %76, !dbg !6226

67:                                               ; preds = %62
  br label %68, !dbg !6227

68:                                               ; preds = %67
  br label %69, !dbg !6229

69:                                               ; preds = %68
  %70 = load i32, i32* %5, align 4, !dbg !6233
  %71 = icmp ne i32 %70, 0, !dbg !6235
  br i1 %71, label %72, label %75, !dbg !6236

72:                                               ; preds = %69
  %73 = load volatile i32, i32* getelementptr inbounds (%struct.SCB_Type, %struct.SCB_Type* inttoptr (i32 -536810240 to %struct.SCB_Type*), i32 0, i32 8), align 4, !dbg !6237
  %74 = and i32 %73, -32769, !dbg !6237
  store volatile i32 %74, i32* getelementptr inbounds (%struct.SCB_Type, %struct.SCB_Type* inttoptr (i32 -536810240 to %struct.SCB_Type*), i32 0, i32 8), align 4, !dbg !6237
  br label %75, !dbg !6239

75:                                               ; preds = %72, %69
  br label %76, !dbg !6240

76:                                               ; preds = %75, %62
  br label %77, !dbg !6241

77:                                               ; preds = %76, %56
  %78 = load volatile i32, i32* getelementptr inbounds (%struct.SCB_Type, %struct.SCB_Type* inttoptr (i32 -536810240 to %struct.SCB_Type*), i32 0, i32 8), align 4, !dbg !6242
  %79 = and i32 %78, 1024, !dbg !6244
  %80 = icmp ne i32 %79, 0, !dbg !6244
  br i1 %80, label %81, label %84, !dbg !6245

81:                                               ; preds = %77
  br label %82, !dbg !6246

82:                                               ; preds = %81
  br label %83, !dbg !6248

83:                                               ; preds = %82
  br label %84, !dbg !6252

84:                                               ; preds = %83, %77
  %85 = load volatile i32, i32* getelementptr inbounds (%struct.SCB_Type, %struct.SCB_Type* inttoptr (i32 -536810240 to %struct.SCB_Type*), i32 0, i32 8), align 4, !dbg !6253
  %86 = and i32 %85, 256, !dbg !6255
  %87 = icmp ne i32 %86, 0, !dbg !6256
  br i1 %87, label %88, label %91, !dbg !6257

88:                                               ; preds = %84
  br label %89, !dbg !6258

89:                                               ; preds = %88
  br label %90, !dbg !6260

90:                                               ; preds = %89
  br label %100, !dbg !6264

91:                                               ; preds = %84
  %92 = load volatile i32, i32* getelementptr inbounds (%struct.SCB_Type, %struct.SCB_Type* inttoptr (i32 -536810240 to %struct.SCB_Type*), i32 0, i32 8), align 4, !dbg !6265
  %93 = and i32 %92, 8192, !dbg !6267
  %94 = icmp ne i32 %93, 0, !dbg !6267
  br i1 %94, label %95, label %98, !dbg !6268

95:                                               ; preds = %91
  br label %96, !dbg !6269

96:                                               ; preds = %95
  br label %97, !dbg !6271

97:                                               ; preds = %96
  br label %99, !dbg !6275

98:                                               ; preds = %91
  br label %99

99:                                               ; preds = %98, %97
  br label %100

100:                                              ; preds = %99, %90
  %101 = load volatile i32, i32* getelementptr inbounds (%struct.SCB_Type, %struct.SCB_Type* inttoptr (i32 -536810240 to %struct.SCB_Type*), i32 0, i32 8), align 4, !dbg !6276
  %102 = or i32 %101, 65280, !dbg !6276
  store volatile i32 %102, i32* getelementptr inbounds (%struct.SCB_Type, %struct.SCB_Type* inttoptr (i32 -536810240 to %struct.SCB_Type*), i32 0, i32 8), align 4, !dbg !6276
  %103 = load %struct.__esf*, %struct.__esf** %4, align 4, !dbg !6277
  %104 = call zeroext i1 @memory_fault_recoverable(%struct.__esf* noundef %103, i1 noundef zeroext true) #10, !dbg !6278
  %105 = load i8*, i8** %6, align 4, !dbg !6279
  %106 = zext i1 %104 to i8, !dbg !6280
  store i8 %106, i8* %105, align 1, !dbg !6280
  %107 = load i32, i32* %7, align 4, !dbg !6281
  ret i32 %107, !dbg !6282
}

; Function Attrs: noinline nounwind optnone
define internal i32 @usage_fault(%struct.__esf* noundef %0) #1 !dbg !6283 {
  %2 = alloca %struct.__esf*, align 4
  %3 = alloca i32, align 4
  %4 = alloca i8, align 1
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 4
  %8 = alloca i8, align 1
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i8*, align 4
  %12 = alloca i8, align 1
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i8*, align 4
  %16 = alloca i8, align 1
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i8*, align 4
  %20 = alloca i8, align 1
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i8*, align 4
  %24 = alloca i8, align 1
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  %27 = alloca i8*, align 4
  %28 = alloca i8, align 1
  %29 = alloca i32, align 4
  %30 = alloca i32, align 4
  %31 = alloca i8*, align 4
  store %struct.__esf* %0, %struct.__esf** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.__esf** %2, metadata !6288, metadata !DIExpression()), !dbg !6289
  call void @llvm.dbg.declare(metadata i32* %3, metadata !6290, metadata !DIExpression()), !dbg !6291
  store i32 0, i32* %3, align 4, !dbg !6291
  br label %32, !dbg !6292

32:                                               ; preds = %1
  br label %33, !dbg !6293

33:                                               ; preds = %32
  %34 = load volatile i32, i32* getelementptr inbounds (%struct.SCB_Type, %struct.SCB_Type* inttoptr (i32 -536810240 to %struct.SCB_Type*), i32 0, i32 8), align 4, !dbg !6297
  %35 = and i32 %34, 33554432, !dbg !6299
  %36 = icmp ne i32 %35, 0, !dbg !6300
  br i1 %36, label %37, label %40, !dbg !6301

37:                                               ; preds = %33
  br label %38, !dbg !6302

38:                                               ; preds = %37
  br label %39, !dbg !6304

39:                                               ; preds = %38
  br label %40, !dbg !6308

40:                                               ; preds = %39, %33
  %41 = load volatile i32, i32* getelementptr inbounds (%struct.SCB_Type, %struct.SCB_Type* inttoptr (i32 -536810240 to %struct.SCB_Type*), i32 0, i32 8), align 4, !dbg !6309
  %42 = and i32 %41, 16777216, !dbg !6311
  %43 = icmp ne i32 %42, 0, !dbg !6312
  br i1 %43, label %44, label %47, !dbg !6313

44:                                               ; preds = %40
  br label %45, !dbg !6314

45:                                               ; preds = %44
  br label %46, !dbg !6316

46:                                               ; preds = %45
  br label %47, !dbg !6320

47:                                               ; preds = %46, %40
  %48 = load volatile i32, i32* getelementptr inbounds (%struct.SCB_Type, %struct.SCB_Type* inttoptr (i32 -536810240 to %struct.SCB_Type*), i32 0, i32 8), align 4, !dbg !6321
  %49 = and i32 %48, 524288, !dbg !6323
  %50 = icmp ne i32 %49, 0, !dbg !6324
  br i1 %50, label %51, label %54, !dbg !6325

51:                                               ; preds = %47
  br label %52, !dbg !6326

52:                                               ; preds = %51
  br label %53, !dbg !6328

53:                                               ; preds = %52
  br label %54, !dbg !6332

54:                                               ; preds = %53, %47
  %55 = load volatile i32, i32* getelementptr inbounds (%struct.SCB_Type, %struct.SCB_Type* inttoptr (i32 -536810240 to %struct.SCB_Type*), i32 0, i32 8), align 4, !dbg !6333
  %56 = and i32 %55, 262144, !dbg !6335
  %57 = icmp ne i32 %56, 0, !dbg !6336
  br i1 %57, label %58, label %61, !dbg !6337

58:                                               ; preds = %54
  br label %59, !dbg !6338

59:                                               ; preds = %58
  br label %60, !dbg !6340

60:                                               ; preds = %59
  br label %61, !dbg !6344

61:                                               ; preds = %60, %54
  %62 = load volatile i32, i32* getelementptr inbounds (%struct.SCB_Type, %struct.SCB_Type* inttoptr (i32 -536810240 to %struct.SCB_Type*), i32 0, i32 8), align 4, !dbg !6345
  %63 = and i32 %62, 131072, !dbg !6347
  %64 = icmp ne i32 %63, 0, !dbg !6348
  br i1 %64, label %65, label %68, !dbg !6349

65:                                               ; preds = %61
  br label %66, !dbg !6350

66:                                               ; preds = %65
  br label %67, !dbg !6352

67:                                               ; preds = %66
  br label %68, !dbg !6356

68:                                               ; preds = %67, %61
  %69 = load volatile i32, i32* getelementptr inbounds (%struct.SCB_Type, %struct.SCB_Type* inttoptr (i32 -536810240 to %struct.SCB_Type*), i32 0, i32 8), align 4, !dbg !6357
  %70 = and i32 %69, 65536, !dbg !6359
  %71 = icmp ne i32 %70, 0, !dbg !6360
  br i1 %71, label %72, label %75, !dbg !6361

72:                                               ; preds = %68
  br label %73, !dbg !6362

73:                                               ; preds = %72
  br label %74, !dbg !6364

74:                                               ; preds = %73
  br label %75, !dbg !6368

75:                                               ; preds = %74, %68
  %76 = load volatile i32, i32* getelementptr inbounds (%struct.SCB_Type, %struct.SCB_Type* inttoptr (i32 -536810240 to %struct.SCB_Type*), i32 0, i32 8), align 4, !dbg !6369
  %77 = or i32 %76, -65536, !dbg !6369
  store volatile i32 %77, i32* getelementptr inbounds (%struct.SCB_Type, %struct.SCB_Type* inttoptr (i32 -536810240 to %struct.SCB_Type*), i32 0, i32 8), align 4, !dbg !6369
  %78 = load i32, i32* %3, align 4, !dbg !6370
  ret i32 %78, !dbg !6371
}

; Function Attrs: noinline nounwind optnone
define internal void @debug_monitor(%struct.__esf* noundef %0, i8* noundef %1) #1 !dbg !6372 {
  %3 = alloca %struct.__esf*, align 4
  %4 = alloca i8*, align 4
  %5 = alloca i8, align 1
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i8*, align 4
  store %struct.__esf* %0, %struct.__esf** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.__esf** %3, metadata !6375, metadata !DIExpression()), !dbg !6376
  store i8* %1, i8** %4, align 4
  call void @llvm.dbg.declare(metadata i8** %4, metadata !6377, metadata !DIExpression()), !dbg !6378
  %9 = load i8*, i8** %4, align 4, !dbg !6379
  store i8 0, i8* %9, align 1, !dbg !6380
  br label %10, !dbg !6381

10:                                               ; preds = %2
  br label %11, !dbg !6382

11:                                               ; preds = %10
  ret void, !dbg !6386
}

; Function Attrs: noinline nounwind optnone
define internal void @reserved_exception(%struct.__esf* noundef %0, i32 noundef %1) #1 !dbg !6387 {
  %3 = alloca %struct.__esf*, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8, align 1
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i8*, align 4
  store %struct.__esf* %0, %struct.__esf** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.__esf** %3, metadata !6390, metadata !DIExpression()), !dbg !6391
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !6392, metadata !DIExpression()), !dbg !6393
  %9 = load %struct.__esf*, %struct.__esf** %3, align 4, !dbg !6394
  br label %10, !dbg !6395

10:                                               ; preds = %2
  br label %11, !dbg !6396

11:                                               ; preds = %10
  ret void, !dbg !6400
}

; Function Attrs: noinline nounwind optnone
define internal void @fault_show(%struct.__esf* noundef %0, i32 noundef %1) #1 !dbg !6401 {
  %3 = alloca %struct.__esf*, align 4
  %4 = alloca i32, align 4
  store %struct.__esf* %0, %struct.__esf** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.__esf** %3, metadata !6402, metadata !DIExpression()), !dbg !6403
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !6404, metadata !DIExpression()), !dbg !6405
  %5 = load %struct.__esf*, %struct.__esf** %3, align 4, !dbg !6406
  %6 = load i32, i32* %4, align 4, !dbg !6407
  ret void, !dbg !6408
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @memory_fault_recoverable(%struct.__esf* noundef %0, i1 noundef zeroext %1) #1 !dbg !6409 {
  %3 = alloca %struct.__esf*, align 4
  %4 = alloca i8, align 1
  store %struct.__esf* %0, %struct.__esf** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.__esf** %3, metadata !6412, metadata !DIExpression()), !dbg !6413
  %5 = zext i1 %1 to i8
  store i8 %5, i8* %4, align 1
  call void @llvm.dbg.declare(metadata i8* %4, metadata !6414, metadata !DIExpression()), !dbg !6415
  ret i1 false, !dbg !6416
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* noundef %0) #1 !dbg !6417 {
  %2 = alloca i1, align 1
  %3 = alloca %struct.__esf*, align 4
  %4 = alloca i16*, align 4
  %5 = alloca i16, align 2
  store %struct.__esf* %0, %struct.__esf** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.__esf** %3, metadata !6420, metadata !DIExpression()), !dbg !6421
  call void @llvm.dbg.declare(metadata i16** %4, metadata !6422, metadata !DIExpression()), !dbg !6423
  %6 = load %struct.__esf*, %struct.__esf** %3, align 4, !dbg !6424
  %7 = getelementptr inbounds %struct.__esf, %struct.__esf* %6, i32 0, i32 0, !dbg !6425
  %8 = getelementptr inbounds %struct.__basic_sf, %struct.__basic_sf* %7, i32 0, i32 6, !dbg !6426
  %9 = bitcast %union.anon.68* %8 to i32*, !dbg !6426
  %10 = load i32, i32* %9, align 4, !dbg !6426
  %11 = inttoptr i32 %10 to i16*, !dbg !6427
  store i16* %11, i16** %4, align 4, !dbg !6423
  %12 = load volatile i32, i32* getelementptr inbounds (%struct.SCB_Type, %struct.SCB_Type* inttoptr (i32 -536810240 to %struct.SCB_Type*), i32 0, i32 5), align 4, !dbg !6428
  %13 = or i32 %12, 256, !dbg !6428
  store volatile i32 %13, i32* getelementptr inbounds (%struct.SCB_Type, %struct.SCB_Type* inttoptr (i32 -536810240 to %struct.SCB_Type*), i32 0, i32 5), align 4, !dbg !6428
  call void asm sideeffect "dsb 0xF", "~{memory}"() #9, !dbg !6429, !srcloc !6432
  call void asm sideeffect "isb 0xF", "~{memory}"() #9, !dbg !6433, !srcloc !6436
  call void @llvm.dbg.declare(metadata i16* %5, metadata !6437, metadata !DIExpression()), !dbg !6438
  %14 = load i16*, i16** %4, align 4, !dbg !6439
  %15 = getelementptr inbounds i16, i16* %14, i32 -1, !dbg !6440
  %16 = load i16, i16* %15, align 2, !dbg !6441
  store i16 %16, i16* %5, align 2, !dbg !6438
  %17 = load volatile i32, i32* getelementptr inbounds (%struct.SCB_Type, %struct.SCB_Type* inttoptr (i32 -536810240 to %struct.SCB_Type*), i32 0, i32 5), align 4, !dbg !6442
  %18 = and i32 %17, -257, !dbg !6442
  store volatile i32 %18, i32* getelementptr inbounds (%struct.SCB_Type, %struct.SCB_Type* inttoptr (i32 -536810240 to %struct.SCB_Type*), i32 0, i32 5), align 4, !dbg !6442
  call void asm sideeffect "dsb 0xF", "~{memory}"() #9, !dbg !6443, !srcloc !6432
  call void asm sideeffect "isb 0xF", "~{memory}"() #9, !dbg !6445, !srcloc !6436
  %19 = load i16, i16* %5, align 2, !dbg !6447
  %20 = zext i16 %19 to i32, !dbg !6447
  %21 = and i32 %20, 65280, !dbg !6449
  %22 = icmp eq i32 %21, 57088, !dbg !6450
  br i1 %22, label %23, label %29, !dbg !6451

23:                                               ; preds = %1
  %24 = load i16, i16* %5, align 2, !dbg !6452
  %25 = zext i16 %24 to i32, !dbg !6452
  %26 = and i32 %25, 255, !dbg !6453
  %27 = icmp eq i32 %26, 2, !dbg !6454
  br i1 %27, label %28, label %29, !dbg !6455

28:                                               ; preds = %23
  store i1 true, i1* %2, align 1, !dbg !6456
  br label %30, !dbg !6456

29:                                               ; preds = %23, %1
  store i1 false, i1* %2, align 1, !dbg !6458
  br label %30, !dbg !6458

30:                                               ; preds = %29, %28
  %31 = load i1, i1* %2, align 1, !dbg !6459
  ret i1 %31, !dbg !6459
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_arm_fault_init() #1 !dbg !6460 {
  %1 = load volatile i32, i32* getelementptr inbounds (%struct.SCB_Type, %struct.SCB_Type* inttoptr (i32 -536810240 to %struct.SCB_Type*), i32 0, i32 5), align 4, !dbg !6461
  %2 = or i32 %1, 16, !dbg !6461
  store volatile i32 %2, i32* getelementptr inbounds (%struct.SCB_Type, %struct.SCB_Type* inttoptr (i32 -536810240 to %struct.SCB_Type*), i32 0, i32 5), align 4, !dbg !6461
  ret void, !dbg !6462
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_arm_interrupt_init() #1 !dbg !6463 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %1, metadata !6465, metadata !DIExpression()), !dbg !6466
  store i32 0, i32* %1, align 4, !dbg !6466
  br label %2, !dbg !6467

2:                                                ; preds = %7, %0
  %3 = load i32, i32* %1, align 4, !dbg !6468
  %4 = icmp slt i32 %3, 127, !dbg !6471
  br i1 %4, label %5, label %10, !dbg !6472

5:                                                ; preds = %2
  %6 = load i32, i32* %1, align 4, !dbg !6473
  call void @__NVIC_SetPriority.11(i32 noundef %6, i32 noundef 1) #10, !dbg !6475
  br label %7, !dbg !6476

7:                                                ; preds = %5
  %8 = load i32, i32* %1, align 4, !dbg !6477
  %9 = add nsw i32 %8, 1, !dbg !6477
  store i32 %9, i32* %1, align 4, !dbg !6477
  br label %2, !dbg !6478, !llvm.loop !6479

10:                                               ; preds = %2
  ret void, !dbg !6481
}

; Function Attrs: noinline nounwind optnone
define internal void @__NVIC_SetPriority.11(i32 noundef %0, i32 noundef %1) #1 !dbg !6482 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !6483, metadata !DIExpression()), !dbg !6484
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !6485, metadata !DIExpression()), !dbg !6486
  %5 = load i32, i32* %3, align 4, !dbg !6487
  %6 = icmp sge i32 %5, 0, !dbg !6489
  br i1 %6, label %7, label %14, !dbg !6490

7:                                                ; preds = %2
  %8 = load i32, i32* %4, align 4, !dbg !6491
  %9 = shl i32 %8, 4, !dbg !6493
  %10 = and i32 %9, 255, !dbg !6494
  %11 = trunc i32 %10 to i8, !dbg !6495
  %12 = load i32, i32* %3, align 4, !dbg !6496
  %13 = getelementptr inbounds [240 x i8], [240 x i8]* getelementptr inbounds (%struct.NVIC_Type, %struct.NVIC_Type* inttoptr (i32 -536813312 to %struct.NVIC_Type*), i32 0, i32 10), i32 0, i32 %12, !dbg !6497
  store volatile i8 %11, i8* %13, align 1, !dbg !6498
  br label %23, !dbg !6499

14:                                               ; preds = %2
  %15 = load i32, i32* %4, align 4, !dbg !6500
  %16 = shl i32 %15, 4, !dbg !6502
  %17 = and i32 %16, 255, !dbg !6503
  %18 = trunc i32 %17 to i8, !dbg !6504
  %19 = load i32, i32* %3, align 4, !dbg !6505
  %20 = and i32 %19, 15, !dbg !6506
  %21 = sub i32 %20, 4, !dbg !6507
  %22 = getelementptr inbounds [12 x i8], [12 x i8]* getelementptr inbounds (%struct.SCB_Type, %struct.SCB_Type* inttoptr (i32 -536810240 to %struct.SCB_Type*), i32 0, i32 6), i32 0, i32 %21, !dbg !6508
  store volatile i8 %18, i8* %22, align 1, !dbg !6509
  br label %23

23:                                               ; preds = %14, %7
  ret void, !dbg !6510
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_impl_k_thread_abort(%struct.k_thread.180* noundef %0) #1 !dbg !6511 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.k_thread.180*, align 4
  store %struct.k_thread.180* %0, %struct.k_thread.180** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.180** %3, metadata !6610, metadata !DIExpression()), !dbg !6611
  %4 = load %struct.k_thread.180*, %struct.k_thread.180** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6612
  %5 = load %struct.k_thread.180*, %struct.k_thread.180** %3, align 4, !dbg !6614
  %6 = icmp eq %struct.k_thread.180* %4, %5, !dbg !6615
  br i1 %6, label %7, label %19, !dbg !6616

7:                                                ; preds = %1
  call void @llvm.dbg.declare(metadata i32* %2, metadata !6617, metadata !DIExpression()) #9, !dbg !6619
  %8 = call i32 asm sideeffect "MRS $0, ipsr", "=r"() #9, !dbg !6626, !srcloc !6627
  store i32 %8, i32* %2, align 4, !dbg !6626
  %9 = load i32, i32* %2, align 4, !dbg !6628
  %10 = icmp ne i32 %9, 0, !dbg !6629
  %11 = zext i1 %10 to i64, !dbg !6629
  %12 = select i1 %10, i32 1, i32 0, !dbg !6629
  br i1 %10, label %13, label %18, !dbg !6630

13:                                               ; preds = %7
  %14 = load volatile i32, i32* getelementptr inbounds (%struct.SCB_Type, %struct.SCB_Type* inttoptr (i32 -536810240 to %struct.SCB_Type*), i32 0, i32 1), align 4, !dbg !6631
  %15 = or i32 %14, 268435456, !dbg !6631
  store volatile i32 %15, i32* getelementptr inbounds (%struct.SCB_Type, %struct.SCB_Type* inttoptr (i32 -536810240 to %struct.SCB_Type*), i32 0, i32 1), align 4, !dbg !6631
  %16 = load volatile i32, i32* getelementptr inbounds (%struct.SCB_Type, %struct.SCB_Type* inttoptr (i32 -536810240 to %struct.SCB_Type*), i32 0, i32 7), align 4, !dbg !6633
  %17 = and i32 %16, -32769, !dbg !6633
  store volatile i32 %17, i32* getelementptr inbounds (%struct.SCB_Type, %struct.SCB_Type* inttoptr (i32 -536810240 to %struct.SCB_Type*), i32 0, i32 7), align 4, !dbg !6633
  br label %18, !dbg !6634

18:                                               ; preds = %13, %7
  br label %19, !dbg !6635

19:                                               ; preds = %18, %1
  %20 = load %struct.k_thread.180*, %struct.k_thread.180** %3, align 4, !dbg !6636
  call void @z_thread_abort(%struct.k_thread.180* noundef %20) #10, !dbg !6637
  ret void, !dbg !6638
}

; Function Attrs: noinline nounwind optnone
define dso_local i8* @strcpy(i8* noalias noundef %0, i8* noalias noundef %1) #1 !dbg !6639 {
  %3 = alloca i8*, align 4
  %4 = alloca i8*, align 4
  %5 = alloca i8*, align 4
  store i8* %0, i8** %3, align 4
  call void @llvm.dbg.declare(metadata i8** %3, metadata !6645, metadata !DIExpression()), !dbg !6646
  store i8* %1, i8** %4, align 4
  call void @llvm.dbg.declare(metadata i8** %4, metadata !6647, metadata !DIExpression()), !dbg !6648
  call void @llvm.dbg.declare(metadata i8** %5, metadata !6649, metadata !DIExpression()), !dbg !6650
  %6 = load i8*, i8** %3, align 4, !dbg !6651
  store i8* %6, i8** %5, align 4, !dbg !6650
  br label %7, !dbg !6652

7:                                                ; preds = %12, %2
  %8 = load i8*, i8** %4, align 4, !dbg !6653
  %9 = load i8, i8* %8, align 1, !dbg !6654
  %10 = zext i8 %9 to i32, !dbg !6654
  %11 = icmp ne i32 %10, 0, !dbg !6655
  br i1 %11, label %12, label %20, !dbg !6652

12:                                               ; preds = %7
  %13 = load i8*, i8** %4, align 4, !dbg !6656
  %14 = load i8, i8* %13, align 1, !dbg !6658
  %15 = load i8*, i8** %3, align 4, !dbg !6659
  store i8 %14, i8* %15, align 1, !dbg !6660
  %16 = load i8*, i8** %3, align 4, !dbg !6661
  %17 = getelementptr inbounds i8, i8* %16, i32 1, !dbg !6661
  store i8* %17, i8** %3, align 4, !dbg !6661
  %18 = load i8*, i8** %4, align 4, !dbg !6662
  %19 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !6662
  store i8* %19, i8** %4, align 4, !dbg !6662
  br label %7, !dbg !6652, !llvm.loop !6663

20:                                               ; preds = %7
  %21 = load i8*, i8** %3, align 4, !dbg !6665
  store i8 0, i8* %21, align 1, !dbg !6666
  %22 = load i8*, i8** %5, align 4, !dbg !6667
  ret i8* %22, !dbg !6668
}

; Function Attrs: noinline nounwind optnone
define dso_local i8* @strncpy(i8* noalias noundef %0, i8* noalias noundef %1, i32 noundef %2) #1 !dbg !6669 {
  %4 = alloca i8*, align 4
  %5 = alloca i8*, align 4
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 4
  store i8* %0, i8** %4, align 4
  call void @llvm.dbg.declare(metadata i8** %4, metadata !6672, metadata !DIExpression()), !dbg !6673
  store i8* %1, i8** %5, align 4
  call void @llvm.dbg.declare(metadata i8** %5, metadata !6674, metadata !DIExpression()), !dbg !6675
  store i32 %2, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !6676, metadata !DIExpression()), !dbg !6677
  call void @llvm.dbg.declare(metadata i8** %7, metadata !6678, metadata !DIExpression()), !dbg !6679
  %8 = load i8*, i8** %4, align 4, !dbg !6680
  store i8* %8, i8** %7, align 4, !dbg !6679
  br label %9, !dbg !6681

9:                                                ; preds = %19, %3
  %10 = load i32, i32* %6, align 4, !dbg !6682
  %11 = icmp ugt i32 %10, 0, !dbg !6683
  br i1 %11, label %12, label %17, !dbg !6684

12:                                               ; preds = %9
  %13 = load i8*, i8** %5, align 4, !dbg !6685
  %14 = load i8, i8* %13, align 1, !dbg !6686
  %15 = zext i8 %14 to i32, !dbg !6686
  %16 = icmp ne i32 %15, 0, !dbg !6687
  br label %17

17:                                               ; preds = %12, %9
  %18 = phi i1 [ false, %9 ], [ %16, %12 ], !dbg !6688
  br i1 %18, label %19, label %29, !dbg !6681

19:                                               ; preds = %17
  %20 = load i8*, i8** %5, align 4, !dbg !6689
  %21 = load i8, i8* %20, align 1, !dbg !6691
  %22 = load i8*, i8** %4, align 4, !dbg !6692
  store i8 %21, i8* %22, align 1, !dbg !6693
  %23 = load i8*, i8** %5, align 4, !dbg !6694
  %24 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !6694
  store i8* %24, i8** %5, align 4, !dbg !6694
  %25 = load i8*, i8** %4, align 4, !dbg !6695
  %26 = getelementptr inbounds i8, i8* %25, i32 1, !dbg !6695
  store i8* %26, i8** %4, align 4, !dbg !6695
  %27 = load i32, i32* %6, align 4, !dbg !6696
  %28 = add i32 %27, -1, !dbg !6696
  store i32 %28, i32* %6, align 4, !dbg !6696
  br label %9, !dbg !6681, !llvm.loop !6697

29:                                               ; preds = %17
  br label %30, !dbg !6699

30:                                               ; preds = %33, %29
  %31 = load i32, i32* %6, align 4, !dbg !6700
  %32 = icmp ugt i32 %31, 0, !dbg !6701
  br i1 %32, label %33, label %39, !dbg !6699

33:                                               ; preds = %30
  %34 = load i8*, i8** %4, align 4, !dbg !6702
  store i8 0, i8* %34, align 1, !dbg !6704
  %35 = load i8*, i8** %4, align 4, !dbg !6705
  %36 = getelementptr inbounds i8, i8* %35, i32 1, !dbg !6705
  store i8* %36, i8** %4, align 4, !dbg !6705
  %37 = load i32, i32* %6, align 4, !dbg !6706
  %38 = add i32 %37, -1, !dbg !6706
  store i32 %38, i32* %6, align 4, !dbg !6706
  br label %30, !dbg !6699, !llvm.loop !6707

39:                                               ; preds = %30
  %40 = load i8*, i8** %7, align 4, !dbg !6709
  ret i8* %40, !dbg !6710
}

; Function Attrs: noinline nounwind optnone
define dso_local i8* @strchr(i8* noundef %0, i32 noundef %1) #1 !dbg !6711 {
  %3 = alloca i8*, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8, align 1
  store i8* %0, i8** %3, align 4
  call void @llvm.dbg.declare(metadata i8** %3, metadata !6714, metadata !DIExpression()), !dbg !6715
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !6716, metadata !DIExpression()), !dbg !6717
  call void @llvm.dbg.declare(metadata i8* %5, metadata !6718, metadata !DIExpression()), !dbg !6719
  %6 = load i32, i32* %4, align 4, !dbg !6720
  %7 = trunc i32 %6 to i8, !dbg !6721
  store i8 %7, i8* %5, align 1, !dbg !6719
  br label %8, !dbg !6722

8:                                                ; preds = %22, %2
  %9 = load i8*, i8** %3, align 4, !dbg !6723
  %10 = load i8, i8* %9, align 1, !dbg !6724
  %11 = zext i8 %10 to i32, !dbg !6724
  %12 = load i8, i8* %5, align 1, !dbg !6725
  %13 = zext i8 %12 to i32, !dbg !6725
  %14 = icmp ne i32 %11, %13, !dbg !6726
  br i1 %14, label %15, label %20, !dbg !6727

15:                                               ; preds = %8
  %16 = load i8*, i8** %3, align 4, !dbg !6728
  %17 = load i8, i8* %16, align 1, !dbg !6729
  %18 = zext i8 %17 to i32, !dbg !6729
  %19 = icmp ne i32 %18, 0, !dbg !6730
  br label %20

20:                                               ; preds = %15, %8
  %21 = phi i1 [ false, %8 ], [ %19, %15 ], !dbg !6731
  br i1 %21, label %22, label %25, !dbg !6722

22:                                               ; preds = %20
  %23 = load i8*, i8** %3, align 4, !dbg !6732
  %24 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !6732
  store i8* %24, i8** %3, align 4, !dbg !6732
  br label %8, !dbg !6722, !llvm.loop !6734

25:                                               ; preds = %20
  %26 = load i8*, i8** %3, align 4, !dbg !6736
  %27 = load i8, i8* %26, align 1, !dbg !6737
  %28 = zext i8 %27 to i32, !dbg !6737
  %29 = load i8, i8* %5, align 1, !dbg !6738
  %30 = zext i8 %29 to i32, !dbg !6738
  %31 = icmp eq i32 %28, %30, !dbg !6739
  br i1 %31, label %32, label %34, !dbg !6740

32:                                               ; preds = %25
  %33 = load i8*, i8** %3, align 4, !dbg !6741
  br label %35, !dbg !6740

34:                                               ; preds = %25
  br label %35, !dbg !6740

35:                                               ; preds = %34, %32
  %36 = phi i8* [ %33, %32 ], [ null, %34 ], !dbg !6740
  ret i8* %36, !dbg !6742
}

; Function Attrs: noinline nounwind optnone
define dso_local i8* @strrchr(i8* noundef %0, i32 noundef %1) #1 !dbg !6743 {
  %3 = alloca i8*, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 4
  store i8* %0, i8** %3, align 4
  call void @llvm.dbg.declare(metadata i8** %3, metadata !6744, metadata !DIExpression()), !dbg !6745
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !6746, metadata !DIExpression()), !dbg !6747
  call void @llvm.dbg.declare(metadata i8** %5, metadata !6748, metadata !DIExpression()), !dbg !6749
  store i8* null, i8** %5, align 4, !dbg !6749
  br label %6, !dbg !6750

6:                                                ; preds = %17, %2
  %7 = load i8*, i8** %3, align 4, !dbg !6751
  %8 = load i8, i8* %7, align 1, !dbg !6754
  %9 = zext i8 %8 to i32, !dbg !6754
  %10 = load i32, i32* %4, align 4, !dbg !6755
  %11 = trunc i32 %10 to i8, !dbg !6756
  %12 = zext i8 %11 to i32, !dbg !6756
  %13 = icmp eq i32 %9, %12, !dbg !6757
  br i1 %13, label %14, label %16, !dbg !6758

14:                                               ; preds = %6
  %15 = load i8*, i8** %3, align 4, !dbg !6759
  store i8* %15, i8** %5, align 4, !dbg !6761
  br label %16, !dbg !6762

16:                                               ; preds = %14, %6
  br label %17, !dbg !6763

17:                                               ; preds = %16
  %18 = load i8*, i8** %3, align 4, !dbg !6764
  %19 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !6764
  store i8* %19, i8** %3, align 4, !dbg !6764
  %20 = load i8, i8* %18, align 1, !dbg !6765
  %21 = icmp ne i8 %20, 0, !dbg !6763
  br i1 %21, label %6, label %22, !dbg !6763, !llvm.loop !6766

22:                                               ; preds = %17
  %23 = load i8*, i8** %5, align 4, !dbg !6768
  ret i8* %23, !dbg !6769
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @strlen(i8* noundef %0) #1 !dbg !6770 {
  %2 = alloca i8*, align 4
  %3 = alloca i32, align 4
  store i8* %0, i8** %2, align 4
  call void @llvm.dbg.declare(metadata i8** %2, metadata !6773, metadata !DIExpression()), !dbg !6774
  call void @llvm.dbg.declare(metadata i32* %3, metadata !6775, metadata !DIExpression()), !dbg !6776
  store i32 0, i32* %3, align 4, !dbg !6776
  br label %4, !dbg !6777

4:                                                ; preds = %9, %1
  %5 = load i8*, i8** %2, align 4, !dbg !6778
  %6 = load i8, i8* %5, align 1, !dbg !6779
  %7 = zext i8 %6 to i32, !dbg !6779
  %8 = icmp ne i32 %7, 0, !dbg !6780
  br i1 %8, label %9, label %14, !dbg !6777

9:                                                ; preds = %4
  %10 = load i8*, i8** %2, align 4, !dbg !6781
  %11 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !6781
  store i8* %11, i8** %2, align 4, !dbg !6781
  %12 = load i32, i32* %3, align 4, !dbg !6783
  %13 = add i32 %12, 1, !dbg !6783
  store i32 %13, i32* %3, align 4, !dbg !6783
  br label %4, !dbg !6777, !llvm.loop !6784

14:                                               ; preds = %4
  %15 = load i32, i32* %3, align 4, !dbg !6786
  ret i32 %15, !dbg !6787
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @strnlen(i8* noundef %0, i32 noundef %1) #1 !dbg !6788 {
  %3 = alloca i8*, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  store i8* %0, i8** %3, align 4
  call void @llvm.dbg.declare(metadata i8** %3, metadata !6791, metadata !DIExpression()), !dbg !6792
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !6793, metadata !DIExpression()), !dbg !6794
  call void @llvm.dbg.declare(metadata i32* %5, metadata !6795, metadata !DIExpression()), !dbg !6796
  store i32 0, i32* %5, align 4, !dbg !6796
  br label %6, !dbg !6797

6:                                                ; preds = %17, %2
  %7 = load i8*, i8** %3, align 4, !dbg !6798
  %8 = load i8, i8* %7, align 1, !dbg !6799
  %9 = zext i8 %8 to i32, !dbg !6799
  %10 = icmp ne i32 %9, 0, !dbg !6800
  br i1 %10, label %11, label %15, !dbg !6801

11:                                               ; preds = %6
  %12 = load i32, i32* %5, align 4, !dbg !6802
  %13 = load i32, i32* %4, align 4, !dbg !6803
  %14 = icmp ult i32 %12, %13, !dbg !6804
  br label %15

15:                                               ; preds = %11, %6
  %16 = phi i1 [ false, %6 ], [ %14, %11 ], !dbg !6805
  br i1 %16, label %17, label %22, !dbg !6797

17:                                               ; preds = %15
  %18 = load i8*, i8** %3, align 4, !dbg !6806
  %19 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !6806
  store i8* %19, i8** %3, align 4, !dbg !6806
  %20 = load i32, i32* %5, align 4, !dbg !6808
  %21 = add i32 %20, 1, !dbg !6808
  store i32 %21, i32* %5, align 4, !dbg !6808
  br label %6, !dbg !6797, !llvm.loop !6809

22:                                               ; preds = %15
  %23 = load i32, i32* %5, align 4, !dbg !6811
  ret i32 %23, !dbg !6812
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @strcmp(i8* noundef %0, i8* noundef %1) #1 !dbg !6813 {
  %3 = alloca i8*, align 4
  %4 = alloca i8*, align 4
  store i8* %0, i8** %3, align 4
  call void @llvm.dbg.declare(metadata i8** %3, metadata !6816, metadata !DIExpression()), !dbg !6817
  store i8* %1, i8** %4, align 4
  call void @llvm.dbg.declare(metadata i8** %4, metadata !6818, metadata !DIExpression()), !dbg !6819
  br label %5, !dbg !6820

5:                                                ; preds = %20, %2
  %6 = load i8*, i8** %3, align 4, !dbg !6821
  %7 = load i8, i8* %6, align 1, !dbg !6822
  %8 = zext i8 %7 to i32, !dbg !6822
  %9 = load i8*, i8** %4, align 4, !dbg !6823
  %10 = load i8, i8* %9, align 1, !dbg !6824
  %11 = zext i8 %10 to i32, !dbg !6824
  %12 = icmp eq i32 %8, %11, !dbg !6825
  br i1 %12, label %13, label %18, !dbg !6826

13:                                               ; preds = %5
  %14 = load i8*, i8** %3, align 4, !dbg !6827
  %15 = load i8, i8* %14, align 1, !dbg !6828
  %16 = zext i8 %15 to i32, !dbg !6828
  %17 = icmp ne i32 %16, 0, !dbg !6829
  br label %18

18:                                               ; preds = %13, %5
  %19 = phi i1 [ false, %5 ], [ %17, %13 ], !dbg !6830
  br i1 %19, label %20, label %25, !dbg !6820

20:                                               ; preds = %18
  %21 = load i8*, i8** %3, align 4, !dbg !6831
  %22 = getelementptr inbounds i8, i8* %21, i32 1, !dbg !6831
  store i8* %22, i8** %3, align 4, !dbg !6831
  %23 = load i8*, i8** %4, align 4, !dbg !6833
  %24 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !6833
  store i8* %24, i8** %4, align 4, !dbg !6833
  br label %5, !dbg !6820, !llvm.loop !6834

25:                                               ; preds = %18
  %26 = load i8*, i8** %3, align 4, !dbg !6836
  %27 = load i8, i8* %26, align 1, !dbg !6837
  %28 = zext i8 %27 to i32, !dbg !6837
  %29 = load i8*, i8** %4, align 4, !dbg !6838
  %30 = load i8, i8* %29, align 1, !dbg !6839
  %31 = zext i8 %30 to i32, !dbg !6839
  %32 = sub nsw i32 %28, %31, !dbg !6840
  ret i32 %32, !dbg !6841
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @strncmp(i8* noundef %0, i8* noundef %1, i32 noundef %2) #1 !dbg !6842 {
  %4 = alloca i8*, align 4
  %5 = alloca i8*, align 4
  %6 = alloca i32, align 4
  store i8* %0, i8** %4, align 4
  call void @llvm.dbg.declare(metadata i8** %4, metadata !6845, metadata !DIExpression()), !dbg !6846
  store i8* %1, i8** %5, align 4
  call void @llvm.dbg.declare(metadata i8** %5, metadata !6847, metadata !DIExpression()), !dbg !6848
  store i32 %2, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !6849, metadata !DIExpression()), !dbg !6850
  br label %7, !dbg !6851

7:                                                ; preds = %25, %3
  %8 = load i32, i32* %6, align 4, !dbg !6852
  %9 = icmp ugt i32 %8, 0, !dbg !6853
  br i1 %9, label %10, label %23, !dbg !6854

10:                                               ; preds = %7
  %11 = load i8*, i8** %4, align 4, !dbg !6855
  %12 = load i8, i8* %11, align 1, !dbg !6856
  %13 = zext i8 %12 to i32, !dbg !6856
  %14 = load i8*, i8** %5, align 4, !dbg !6857
  %15 = load i8, i8* %14, align 1, !dbg !6858
  %16 = zext i8 %15 to i32, !dbg !6858
  %17 = icmp eq i32 %13, %16, !dbg !6859
  br i1 %17, label %18, label %23, !dbg !6860

18:                                               ; preds = %10
  %19 = load i8*, i8** %4, align 4, !dbg !6861
  %20 = load i8, i8* %19, align 1, !dbg !6862
  %21 = zext i8 %20 to i32, !dbg !6862
  %22 = icmp ne i32 %21, 0, !dbg !6863
  br label %23

23:                                               ; preds = %18, %10, %7
  %24 = phi i1 [ false, %10 ], [ false, %7 ], [ %22, %18 ], !dbg !6864
  br i1 %24, label %25, label %32, !dbg !6851

25:                                               ; preds = %23
  %26 = load i8*, i8** %4, align 4, !dbg !6865
  %27 = getelementptr inbounds i8, i8* %26, i32 1, !dbg !6865
  store i8* %27, i8** %4, align 4, !dbg !6865
  %28 = load i8*, i8** %5, align 4, !dbg !6867
  %29 = getelementptr inbounds i8, i8* %28, i32 1, !dbg !6867
  store i8* %29, i8** %5, align 4, !dbg !6867
  %30 = load i32, i32* %6, align 4, !dbg !6868
  %31 = add i32 %30, -1, !dbg !6868
  store i32 %31, i32* %6, align 4, !dbg !6868
  br label %7, !dbg !6851, !llvm.loop !6869

32:                                               ; preds = %23
  %33 = load i32, i32* %6, align 4, !dbg !6871
  %34 = icmp eq i32 %33, 0, !dbg !6872
  br i1 %34, label %35, label %36, !dbg !6873

35:                                               ; preds = %32
  br label %44, !dbg !6873

36:                                               ; preds = %32
  %37 = load i8*, i8** %4, align 4, !dbg !6874
  %38 = load i8, i8* %37, align 1, !dbg !6875
  %39 = zext i8 %38 to i32, !dbg !6875
  %40 = load i8*, i8** %5, align 4, !dbg !6876
  %41 = load i8, i8* %40, align 1, !dbg !6877
  %42 = zext i8 %41 to i32, !dbg !6877
  %43 = sub nsw i32 %39, %42, !dbg !6878
  br label %44, !dbg !6873

44:                                               ; preds = %36, %35
  %45 = phi i32 [ 0, %35 ], [ %43, %36 ], !dbg !6873
  ret i32 %45, !dbg !6879
}

; Function Attrs: noinline nounwind optnone
define dso_local i8* @strtok_r(i8* noundef %0, i8* noundef %1, i8** noundef %2) #1 !dbg !6880 {
  %4 = alloca i8*, align 4
  %5 = alloca i8*, align 4
  %6 = alloca i8*, align 4
  %7 = alloca i8**, align 4
  %8 = alloca i8*, align 4
  %9 = alloca i8*, align 4
  store i8* %0, i8** %5, align 4
  call void @llvm.dbg.declare(metadata i8** %5, metadata !6884, metadata !DIExpression()), !dbg !6885
  store i8* %1, i8** %6, align 4
  call void @llvm.dbg.declare(metadata i8** %6, metadata !6886, metadata !DIExpression()), !dbg !6887
  store i8** %2, i8*** %7, align 4
  call void @llvm.dbg.declare(metadata i8*** %7, metadata !6888, metadata !DIExpression()), !dbg !6889
  call void @llvm.dbg.declare(metadata i8** %8, metadata !6890, metadata !DIExpression()), !dbg !6891
  call void @llvm.dbg.declare(metadata i8** %9, metadata !6892, metadata !DIExpression()), !dbg !6893
  %10 = load i8*, i8** %5, align 4, !dbg !6894
  %11 = icmp ne i8* %10, null, !dbg !6894
  br i1 %11, label %12, label %14, !dbg !6894

12:                                               ; preds = %3
  %13 = load i8*, i8** %5, align 4, !dbg !6895
  br label %17, !dbg !6894

14:                                               ; preds = %3
  %15 = load i8**, i8*** %7, align 4, !dbg !6896
  %16 = load i8*, i8** %15, align 4, !dbg !6897
  br label %17, !dbg !6894

17:                                               ; preds = %14, %12
  %18 = phi i8* [ %13, %12 ], [ %16, %14 ], !dbg !6894
  store i8* %18, i8** %8, align 4, !dbg !6898
  br label %19, !dbg !6899

19:                                               ; preds = %33, %17
  %20 = load i8*, i8** %8, align 4, !dbg !6900
  %21 = load i8, i8* %20, align 1, !dbg !6901
  %22 = zext i8 %21 to i32, !dbg !6901
  %23 = icmp ne i32 %22, 0, !dbg !6901
  br i1 %23, label %24, label %31, !dbg !6902

24:                                               ; preds = %19
  %25 = load i8*, i8** %6, align 4, !dbg !6903
  %26 = load i8*, i8** %8, align 4, !dbg !6904
  %27 = load i8, i8* %26, align 1, !dbg !6905
  %28 = zext i8 %27 to i32, !dbg !6905
  %29 = call i8* @strchr(i8* noundef %25, i32 noundef %28) #10, !dbg !6906
  %30 = icmp ne i8* %29, null, !dbg !6902
  br label %31

31:                                               ; preds = %24, %19
  %32 = phi i1 [ false, %19 ], [ %30, %24 ], !dbg !6907
  br i1 %32, label %33, label %36, !dbg !6899

33:                                               ; preds = %31
  %34 = load i8*, i8** %8, align 4, !dbg !6908
  %35 = getelementptr inbounds i8, i8* %34, i32 1, !dbg !6908
  store i8* %35, i8** %8, align 4, !dbg !6908
  br label %19, !dbg !6899, !llvm.loop !6910

36:                                               ; preds = %31
  %37 = load i8*, i8** %8, align 4, !dbg !6912
  %38 = load i8, i8* %37, align 1, !dbg !6914
  %39 = zext i8 %38 to i32, !dbg !6914
  %40 = icmp eq i32 %39, 0, !dbg !6915
  br i1 %40, label %41, label %44, !dbg !6916

41:                                               ; preds = %36
  %42 = load i8*, i8** %8, align 4, !dbg !6917
  %43 = load i8**, i8*** %7, align 4, !dbg !6919
  store i8* %42, i8** %43, align 4, !dbg !6920
  store i8* null, i8** %4, align 4, !dbg !6921
  br label %79, !dbg !6921

44:                                               ; preds = %36
  %45 = load i8*, i8** %8, align 4, !dbg !6922
  store i8* %45, i8** %9, align 4, !dbg !6923
  br label %46, !dbg !6924

46:                                               ; preds = %61, %44
  %47 = load i8*, i8** %9, align 4, !dbg !6925
  %48 = load i8, i8* %47, align 1, !dbg !6926
  %49 = zext i8 %48 to i32, !dbg !6926
  %50 = icmp ne i32 %49, 0, !dbg !6926
  br i1 %50, label %51, label %59, !dbg !6927

51:                                               ; preds = %46
  %52 = load i8*, i8** %6, align 4, !dbg !6928
  %53 = load i8*, i8** %9, align 4, !dbg !6929
  %54 = load i8, i8* %53, align 1, !dbg !6930
  %55 = zext i8 %54 to i32, !dbg !6930
  %56 = call i8* @strchr(i8* noundef %52, i32 noundef %55) #10, !dbg !6931
  %57 = icmp ne i8* %56, null, !dbg !6932
  %58 = xor i1 %57, true, !dbg !6932
  br label %59

59:                                               ; preds = %51, %46
  %60 = phi i1 [ false, %46 ], [ %58, %51 ], !dbg !6907
  br i1 %60, label %61, label %64, !dbg !6924

61:                                               ; preds = %59
  %62 = load i8*, i8** %9, align 4, !dbg !6933
  %63 = getelementptr inbounds i8, i8* %62, i32 1, !dbg !6933
  store i8* %63, i8** %9, align 4, !dbg !6933
  br label %46, !dbg !6924, !llvm.loop !6935

64:                                               ; preds = %59
  %65 = load i8*, i8** %9, align 4, !dbg !6937
  %66 = load i8, i8* %65, align 1, !dbg !6939
  %67 = zext i8 %66 to i32, !dbg !6939
  %68 = icmp ne i32 %67, 0, !dbg !6940
  br i1 %68, label %69, label %74, !dbg !6941

69:                                               ; preds = %64
  %70 = load i8*, i8** %9, align 4, !dbg !6942
  store i8 0, i8* %70, align 1, !dbg !6944
  %71 = load i8*, i8** %9, align 4, !dbg !6945
  %72 = getelementptr inbounds i8, i8* %71, i32 1, !dbg !6946
  %73 = load i8**, i8*** %7, align 4, !dbg !6947
  store i8* %72, i8** %73, align 4, !dbg !6948
  br label %77, !dbg !6949

74:                                               ; preds = %64
  %75 = load i8*, i8** %9, align 4, !dbg !6950
  %76 = load i8**, i8*** %7, align 4, !dbg !6952
  store i8* %75, i8** %76, align 4, !dbg !6953
  br label %77

77:                                               ; preds = %74, %69
  %78 = load i8*, i8** %8, align 4, !dbg !6954
  store i8* %78, i8** %4, align 4, !dbg !6955
  br label %79, !dbg !6955

79:                                               ; preds = %77, %41
  %80 = load i8*, i8** %4, align 4, !dbg !6956
  ret i8* %80, !dbg !6956
}

; Function Attrs: noinline nounwind optnone
define dso_local i8* @strcat(i8* noalias noundef %0, i8* noalias noundef %1) #1 !dbg !6957 {
  %3 = alloca i8*, align 4
  %4 = alloca i8*, align 4
  store i8* %0, i8** %3, align 4
  call void @llvm.dbg.declare(metadata i8** %3, metadata !6958, metadata !DIExpression()), !dbg !6959
  store i8* %1, i8** %4, align 4
  call void @llvm.dbg.declare(metadata i8** %4, metadata !6960, metadata !DIExpression()), !dbg !6961
  %5 = load i8*, i8** %3, align 4, !dbg !6962
  %6 = load i8*, i8** %3, align 4, !dbg !6963
  %7 = call i32 @strlen(i8* noundef %6) #10, !dbg !6964
  %8 = getelementptr inbounds i8, i8* %5, i32 %7, !dbg !6965
  %9 = load i8*, i8** %4, align 4, !dbg !6966
  %10 = call i8* @strcpy(i8* noundef %8, i8* noundef %9) #10, !dbg !6967
  %11 = load i8*, i8** %3, align 4, !dbg !6968
  ret i8* %11, !dbg !6969
}

; Function Attrs: noinline nounwind optnone
define dso_local i8* @strncat(i8* noalias noundef %0, i8* noalias noundef %1, i32 noundef %2) #1 !dbg !6970 {
  %4 = alloca i8*, align 4
  %5 = alloca i8*, align 4
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 4
  %8 = alloca i32, align 4
  store i8* %0, i8** %4, align 4
  call void @llvm.dbg.declare(metadata i8** %4, metadata !6971, metadata !DIExpression()), !dbg !6972
  store i8* %1, i8** %5, align 4
  call void @llvm.dbg.declare(metadata i8** %5, metadata !6973, metadata !DIExpression()), !dbg !6974
  store i32 %2, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !6975, metadata !DIExpression()), !dbg !6976
  call void @llvm.dbg.declare(metadata i8** %7, metadata !6977, metadata !DIExpression()), !dbg !6978
  %9 = load i8*, i8** %4, align 4, !dbg !6979
  store i8* %9, i8** %7, align 4, !dbg !6978
  call void @llvm.dbg.declare(metadata i32* %8, metadata !6980, metadata !DIExpression()), !dbg !6981
  %10 = load i8*, i8** %4, align 4, !dbg !6982
  %11 = call i32 @strlen(i8* noundef %10) #10, !dbg !6983
  store i32 %11, i32* %8, align 4, !dbg !6981
  %12 = load i32, i32* %8, align 4, !dbg !6984
  %13 = load i8*, i8** %4, align 4, !dbg !6985
  %14 = getelementptr inbounds i8, i8* %13, i32 %12, !dbg !6985
  store i8* %14, i8** %4, align 4, !dbg !6985
  br label %15, !dbg !6986

15:                                               ; preds = %26, %3
  %16 = load i32, i32* %6, align 4, !dbg !6987
  %17 = add i32 %16, -1, !dbg !6987
  store i32 %17, i32* %6, align 4, !dbg !6987
  %18 = icmp ugt i32 %16, 0, !dbg !6988
  br i1 %18, label %19, label %24, !dbg !6989

19:                                               ; preds = %15
  %20 = load i8*, i8** %5, align 4, !dbg !6990
  %21 = load i8, i8* %20, align 1, !dbg !6991
  %22 = zext i8 %21 to i32, !dbg !6991
  %23 = icmp ne i32 %22, 0, !dbg !6992
  br label %24

24:                                               ; preds = %19, %15
  %25 = phi i1 [ false, %15 ], [ %23, %19 ], !dbg !6993
  br i1 %25, label %26, label %32, !dbg !6986

26:                                               ; preds = %24
  %27 = load i8*, i8** %5, align 4, !dbg !6994
  %28 = getelementptr inbounds i8, i8* %27, i32 1, !dbg !6994
  store i8* %28, i8** %5, align 4, !dbg !6994
  %29 = load i8, i8* %27, align 1, !dbg !6996
  %30 = load i8*, i8** %4, align 4, !dbg !6997
  %31 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !6997
  store i8* %31, i8** %4, align 4, !dbg !6997
  store i8 %29, i8* %30, align 1, !dbg !6998
  br label %15, !dbg !6986, !llvm.loop !6999

32:                                               ; preds = %24
  %33 = load i8*, i8** %4, align 4, !dbg !7001
  store i8 0, i8* %33, align 1, !dbg !7002
  %34 = load i8*, i8** %7, align 4, !dbg !7003
  ret i8* %34, !dbg !7004
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @memcmp(i8* noundef %0, i8* noundef %1, i32 noundef %2) #1 !dbg !7005 {
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 4
  %6 = alloca i8*, align 4
  %7 = alloca i32, align 4
  %8 = alloca i8*, align 4
  %9 = alloca i8*, align 4
  store i8* %0, i8** %5, align 4
  call void @llvm.dbg.declare(metadata i8** %5, metadata !7008, metadata !DIExpression()), !dbg !7009
  store i8* %1, i8** %6, align 4
  call void @llvm.dbg.declare(metadata i8** %6, metadata !7010, metadata !DIExpression()), !dbg !7011
  store i32 %2, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !7012, metadata !DIExpression()), !dbg !7013
  call void @llvm.dbg.declare(metadata i8** %8, metadata !7014, metadata !DIExpression()), !dbg !7015
  %10 = load i8*, i8** %5, align 4, !dbg !7016
  store i8* %10, i8** %8, align 4, !dbg !7015
  call void @llvm.dbg.declare(metadata i8** %9, metadata !7017, metadata !DIExpression()), !dbg !7018
  %11 = load i8*, i8** %6, align 4, !dbg !7019
  store i8* %11, i8** %9, align 4, !dbg !7018
  %12 = load i32, i32* %7, align 4, !dbg !7020
  %13 = icmp ne i32 %12, 0, !dbg !7020
  br i1 %13, label %15, label %14, !dbg !7022

14:                                               ; preds = %3
  store i32 0, i32* %4, align 4, !dbg !7023
  br label %43, !dbg !7023

15:                                               ; preds = %3
  br label %16, !dbg !7025

16:                                               ; preds = %30, %15
  %17 = load i32, i32* %7, align 4, !dbg !7026
  %18 = add i32 %17, -1, !dbg !7026
  store i32 %18, i32* %7, align 4, !dbg !7026
  %19 = icmp ugt i32 %18, 0, !dbg !7027
  br i1 %19, label %20, label %28, !dbg !7028

20:                                               ; preds = %16
  %21 = load i8*, i8** %8, align 4, !dbg !7029
  %22 = load i8, i8* %21, align 1, !dbg !7030
  %23 = zext i8 %22 to i32, !dbg !7030
  %24 = load i8*, i8** %9, align 4, !dbg !7031
  %25 = load i8, i8* %24, align 1, !dbg !7032
  %26 = zext i8 %25 to i32, !dbg !7032
  %27 = icmp eq i32 %23, %26, !dbg !7033
  br label %28

28:                                               ; preds = %20, %16
  %29 = phi i1 [ false, %16 ], [ %27, %20 ], !dbg !7034
  br i1 %29, label %30, label %35, !dbg !7025

30:                                               ; preds = %28
  %31 = load i8*, i8** %8, align 4, !dbg !7035
  %32 = getelementptr inbounds i8, i8* %31, i32 1, !dbg !7035
  store i8* %32, i8** %8, align 4, !dbg !7035
  %33 = load i8*, i8** %9, align 4, !dbg !7037
  %34 = getelementptr inbounds i8, i8* %33, i32 1, !dbg !7037
  store i8* %34, i8** %9, align 4, !dbg !7037
  br label %16, !dbg !7025, !llvm.loop !7038

35:                                               ; preds = %28
  %36 = load i8*, i8** %8, align 4, !dbg !7040
  %37 = load i8, i8* %36, align 1, !dbg !7041
  %38 = zext i8 %37 to i32, !dbg !7041
  %39 = load i8*, i8** %9, align 4, !dbg !7042
  %40 = load i8, i8* %39, align 1, !dbg !7043
  %41 = zext i8 %40 to i32, !dbg !7043
  %42 = sub nsw i32 %38, %41, !dbg !7044
  store i32 %42, i32* %4, align 4, !dbg !7045
  br label %43, !dbg !7045

43:                                               ; preds = %35, %14
  %44 = load i32, i32* %4, align 4, !dbg !7046
  ret i32 %44, !dbg !7046
}

; Function Attrs: noinline nounwind optnone
define dso_local i8* @memmove(i8* noundef %0, i8* noundef %1, i32 noundef %2) #1 !dbg !7047 {
  %4 = alloca i8*, align 4
  %5 = alloca i8*, align 4
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 4
  %8 = alloca i8*, align 4
  store i8* %0, i8** %4, align 4
  call void @llvm.dbg.declare(metadata i8** %4, metadata !7050, metadata !DIExpression()), !dbg !7051
  store i8* %1, i8** %5, align 4
  call void @llvm.dbg.declare(metadata i8** %5, metadata !7052, metadata !DIExpression()), !dbg !7053
  store i32 %2, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !7054, metadata !DIExpression()), !dbg !7055
  call void @llvm.dbg.declare(metadata i8** %7, metadata !7056, metadata !DIExpression()), !dbg !7057
  %9 = load i8*, i8** %4, align 4, !dbg !7058
  store i8* %9, i8** %7, align 4, !dbg !7057
  call void @llvm.dbg.declare(metadata i8** %8, metadata !7059, metadata !DIExpression()), !dbg !7060
  %10 = load i8*, i8** %5, align 4, !dbg !7061
  store i8* %10, i8** %8, align 4, !dbg !7060
  %11 = load i8*, i8** %7, align 4, !dbg !7062
  %12 = load i8*, i8** %8, align 4, !dbg !7064
  %13 = ptrtoint i8* %11 to i32, !dbg !7065
  %14 = ptrtoint i8* %12 to i32, !dbg !7065
  %15 = sub i32 %13, %14, !dbg !7065
  %16 = load i32, i32* %6, align 4, !dbg !7066
  %17 = icmp ult i32 %15, %16, !dbg !7067
  br i1 %17, label %18, label %33, !dbg !7068

18:                                               ; preds = %3
  br label %19, !dbg !7069

19:                                               ; preds = %22, %18
  %20 = load i32, i32* %6, align 4, !dbg !7071
  %21 = icmp ugt i32 %20, 0, !dbg !7072
  br i1 %21, label %22, label %32, !dbg !7069

22:                                               ; preds = %19
  %23 = load i32, i32* %6, align 4, !dbg !7073
  %24 = add i32 %23, -1, !dbg !7073
  store i32 %24, i32* %6, align 4, !dbg !7073
  %25 = load i8*, i8** %8, align 4, !dbg !7075
  %26 = load i32, i32* %6, align 4, !dbg !7076
  %27 = getelementptr inbounds i8, i8* %25, i32 %26, !dbg !7075
  %28 = load i8, i8* %27, align 1, !dbg !7075
  %29 = load i8*, i8** %7, align 4, !dbg !7077
  %30 = load i32, i32* %6, align 4, !dbg !7078
  %31 = getelementptr inbounds i8, i8* %29, i32 %30, !dbg !7077
  store i8 %28, i8* %31, align 1, !dbg !7079
  br label %19, !dbg !7069, !llvm.loop !7080

32:                                               ; preds = %19
  br label %48, !dbg !7082

33:                                               ; preds = %3
  br label %34, !dbg !7083

34:                                               ; preds = %37, %33
  %35 = load i32, i32* %6, align 4, !dbg !7085
  %36 = icmp ugt i32 %35, 0, !dbg !7086
  br i1 %36, label %37, label %47, !dbg !7083

37:                                               ; preds = %34
  %38 = load i8*, i8** %8, align 4, !dbg !7087
  %39 = load i8, i8* %38, align 1, !dbg !7089
  %40 = load i8*, i8** %7, align 4, !dbg !7090
  store i8 %39, i8* %40, align 1, !dbg !7091
  %41 = load i8*, i8** %7, align 4, !dbg !7092
  %42 = getelementptr inbounds i8, i8* %41, i32 1, !dbg !7092
  store i8* %42, i8** %7, align 4, !dbg !7092
  %43 = load i8*, i8** %8, align 4, !dbg !7093
  %44 = getelementptr inbounds i8, i8* %43, i32 1, !dbg !7093
  store i8* %44, i8** %8, align 4, !dbg !7093
  %45 = load i32, i32* %6, align 4, !dbg !7094
  %46 = add i32 %45, -1, !dbg !7094
  store i32 %46, i32* %6, align 4, !dbg !7094
  br label %34, !dbg !7083, !llvm.loop !7095

47:                                               ; preds = %34
  br label %48

48:                                               ; preds = %47, %32
  %49 = load i8*, i8** %4, align 4, !dbg !7097
  ret i8* %49, !dbg !7098
}

; Function Attrs: noinline nounwind optnone
define dso_local i8* @memcpy(i8* noalias noundef %0, i8* noalias noundef %1, i32 noundef %2) #1 !dbg !7099 {
  %4 = alloca i8*, align 4
  %5 = alloca i8*, align 4
  %6 = alloca i8*, align 4
  %7 = alloca i32, align 4
  %8 = alloca i8*, align 4
  %9 = alloca i8*, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32*, align 4
  %12 = alloca i32*, align 4
  store i8* %0, i8** %5, align 4
  call void @llvm.dbg.declare(metadata i8** %5, metadata !7104, metadata !DIExpression()), !dbg !7105
  store i8* %1, i8** %6, align 4
  call void @llvm.dbg.declare(metadata i8** %6, metadata !7106, metadata !DIExpression()), !dbg !7107
  store i32 %2, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !7108, metadata !DIExpression()), !dbg !7109
  call void @llvm.dbg.declare(metadata i8** %8, metadata !7110, metadata !DIExpression()), !dbg !7111
  %13 = load i8*, i8** %5, align 4, !dbg !7112
  store i8* %13, i8** %8, align 4, !dbg !7111
  call void @llvm.dbg.declare(metadata i8** %9, metadata !7113, metadata !DIExpression()), !dbg !7114
  %14 = load i8*, i8** %6, align 4, !dbg !7115
  store i8* %14, i8** %9, align 4, !dbg !7114
  call void @llvm.dbg.declare(metadata i32* %10, metadata !7116, metadata !DIExpression()), !dbg !7118
  store i32 3, i32* %10, align 4, !dbg !7118
  %15 = load i8*, i8** %5, align 4, !dbg !7119
  %16 = ptrtoint i8* %15 to i32, !dbg !7121
  %17 = load i8*, i8** %9, align 4, !dbg !7122
  %18 = ptrtoint i8* %17 to i32, !dbg !7123
  %19 = xor i32 %16, %18, !dbg !7124
  %20 = and i32 %19, 3, !dbg !7125
  %21 = icmp eq i32 %20, 0, !dbg !7126
  br i1 %21, label %22, label %62, !dbg !7127

22:                                               ; preds = %3
  br label %23, !dbg !7128

23:                                               ; preds = %33, %22
  %24 = load i8*, i8** %8, align 4, !dbg !7130
  %25 = ptrtoint i8* %24 to i32, !dbg !7131
  %26 = and i32 %25, 3, !dbg !7132
  %27 = icmp ne i32 %26, 0, !dbg !7128
  br i1 %27, label %28, label %41, !dbg !7128

28:                                               ; preds = %23
  %29 = load i32, i32* %7, align 4, !dbg !7133
  %30 = icmp eq i32 %29, 0, !dbg !7136
  br i1 %30, label %31, label %33, !dbg !7137

31:                                               ; preds = %28
  %32 = load i8*, i8** %5, align 4, !dbg !7138
  store i8* %32, i8** %4, align 4, !dbg !7140
  br label %76, !dbg !7140

33:                                               ; preds = %28
  %34 = load i8*, i8** %9, align 4, !dbg !7141
  %35 = getelementptr inbounds i8, i8* %34, i32 1, !dbg !7141
  store i8* %35, i8** %9, align 4, !dbg !7141
  %36 = load i8, i8* %34, align 1, !dbg !7142
  %37 = load i8*, i8** %8, align 4, !dbg !7143
  %38 = getelementptr inbounds i8, i8* %37, i32 1, !dbg !7143
  store i8* %38, i8** %8, align 4, !dbg !7143
  store i8 %36, i8* %37, align 1, !dbg !7144
  %39 = load i32, i32* %7, align 4, !dbg !7145
  %40 = add i32 %39, -1, !dbg !7145
  store i32 %40, i32* %7, align 4, !dbg !7145
  br label %23, !dbg !7128, !llvm.loop !7146

41:                                               ; preds = %23
  call void @llvm.dbg.declare(metadata i32** %11, metadata !7148, metadata !DIExpression()), !dbg !7149
  %42 = load i8*, i8** %8, align 4, !dbg !7150
  %43 = bitcast i8* %42 to i32*, !dbg !7151
  store i32* %43, i32** %11, align 4, !dbg !7149
  call void @llvm.dbg.declare(metadata i32** %12, metadata !7152, metadata !DIExpression()), !dbg !7153
  %44 = load i8*, i8** %9, align 4, !dbg !7154
  %45 = bitcast i8* %44 to i32*, !dbg !7155
  store i32* %45, i32** %12, align 4, !dbg !7153
  br label %46, !dbg !7156

46:                                               ; preds = %49, %41
  %47 = load i32, i32* %7, align 4, !dbg !7157
  %48 = icmp uge i32 %47, 4, !dbg !7158
  br i1 %48, label %49, label %57, !dbg !7156

49:                                               ; preds = %46
  %50 = load i32*, i32** %12, align 4, !dbg !7159
  %51 = getelementptr inbounds i32, i32* %50, i32 1, !dbg !7159
  store i32* %51, i32** %12, align 4, !dbg !7159
  %52 = load i32, i32* %50, align 4, !dbg !7161
  %53 = load i32*, i32** %11, align 4, !dbg !7162
  %54 = getelementptr inbounds i32, i32* %53, i32 1, !dbg !7162
  store i32* %54, i32** %11, align 4, !dbg !7162
  store i32 %52, i32* %53, align 4, !dbg !7163
  %55 = load i32, i32* %7, align 4, !dbg !7164
  %56 = sub i32 %55, 4, !dbg !7164
  store i32 %56, i32* %7, align 4, !dbg !7164
  br label %46, !dbg !7156, !llvm.loop !7165

57:                                               ; preds = %46
  %58 = load i32*, i32** %11, align 4, !dbg !7167
  %59 = bitcast i32* %58 to i8*, !dbg !7168
  store i8* %59, i8** %8, align 4, !dbg !7169
  %60 = load i32*, i32** %12, align 4, !dbg !7170
  %61 = bitcast i32* %60 to i8*, !dbg !7171
  store i8* %61, i8** %9, align 4, !dbg !7172
  br label %62, !dbg !7173

62:                                               ; preds = %57, %3
  br label %63, !dbg !7174

63:                                               ; preds = %66, %62
  %64 = load i32, i32* %7, align 4, !dbg !7175
  %65 = icmp ugt i32 %64, 0, !dbg !7176
  br i1 %65, label %66, label %74, !dbg !7174

66:                                               ; preds = %63
  %67 = load i8*, i8** %9, align 4, !dbg !7177
  %68 = getelementptr inbounds i8, i8* %67, i32 1, !dbg !7177
  store i8* %68, i8** %9, align 4, !dbg !7177
  %69 = load i8, i8* %67, align 1, !dbg !7179
  %70 = load i8*, i8** %8, align 4, !dbg !7180
  %71 = getelementptr inbounds i8, i8* %70, i32 1, !dbg !7180
  store i8* %71, i8** %8, align 4, !dbg !7180
  store i8 %69, i8* %70, align 1, !dbg !7181
  %72 = load i32, i32* %7, align 4, !dbg !7182
  %73 = add i32 %72, -1, !dbg !7182
  store i32 %73, i32* %7, align 4, !dbg !7182
  br label %63, !dbg !7174, !llvm.loop !7183

74:                                               ; preds = %63
  %75 = load i8*, i8** %5, align 4, !dbg !7185
  store i8* %75, i8** %4, align 4, !dbg !7186
  br label %76, !dbg !7186

76:                                               ; preds = %74, %31
  %77 = load i8*, i8** %4, align 4, !dbg !7187
  ret i8* %77, !dbg !7187
}

; Function Attrs: noinline nounwind optnone
define dso_local i8* @memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) #1 !dbg !7188 {
  %4 = alloca i8*, align 4
  %5 = alloca i8*, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i8*, align 4
  %9 = alloca i8, align 1
  %10 = alloca i32*, align 4
  %11 = alloca i32, align 4
  store i8* %0, i8** %5, align 4
  call void @llvm.dbg.declare(metadata i8** %5, metadata !7191, metadata !DIExpression()), !dbg !7192
  store i32 %1, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !7193, metadata !DIExpression()), !dbg !7194
  store i32 %2, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !7195, metadata !DIExpression()), !dbg !7196
  call void @llvm.dbg.declare(metadata i8** %8, metadata !7197, metadata !DIExpression()), !dbg !7198
  %12 = load i8*, i8** %5, align 4, !dbg !7199
  store i8* %12, i8** %8, align 4, !dbg !7198
  call void @llvm.dbg.declare(metadata i8* %9, metadata !7200, metadata !DIExpression()), !dbg !7201
  %13 = load i32, i32* %6, align 4, !dbg !7202
  %14 = trunc i32 %13 to i8, !dbg !7203
  store i8 %14, i8* %9, align 1, !dbg !7201
  br label %15, !dbg !7204

15:                                               ; preds = %25, %3
  %16 = load i8*, i8** %8, align 4, !dbg !7205
  %17 = ptrtoint i8* %16 to i32, !dbg !7206
  %18 = and i32 %17, 3, !dbg !7207
  %19 = icmp ne i32 %18, 0, !dbg !7204
  br i1 %19, label %20, label %31, !dbg !7204

20:                                               ; preds = %15
  %21 = load i32, i32* %7, align 4, !dbg !7208
  %22 = icmp eq i32 %21, 0, !dbg !7211
  br i1 %22, label %23, label %25, !dbg !7212

23:                                               ; preds = %20
  %24 = load i8*, i8** %5, align 4, !dbg !7213
  store i8* %24, i8** %4, align 4, !dbg !7215
  br label %67, !dbg !7215

25:                                               ; preds = %20
  %26 = load i8, i8* %9, align 1, !dbg !7216
  %27 = load i8*, i8** %8, align 4, !dbg !7217
  %28 = getelementptr inbounds i8, i8* %27, i32 1, !dbg !7217
  store i8* %28, i8** %8, align 4, !dbg !7217
  store i8 %26, i8* %27, align 1, !dbg !7218
  %29 = load i32, i32* %7, align 4, !dbg !7219
  %30 = add i32 %29, -1, !dbg !7219
  store i32 %30, i32* %7, align 4, !dbg !7219
  br label %15, !dbg !7204, !llvm.loop !7220

31:                                               ; preds = %15
  call void @llvm.dbg.declare(metadata i32** %10, metadata !7222, metadata !DIExpression()), !dbg !7223
  %32 = load i8*, i8** %8, align 4, !dbg !7224
  %33 = bitcast i8* %32 to i32*, !dbg !7225
  store i32* %33, i32** %10, align 4, !dbg !7223
  call void @llvm.dbg.declare(metadata i32* %11, metadata !7226, metadata !DIExpression()), !dbg !7227
  %34 = load i8, i8* %9, align 1, !dbg !7228
  %35 = zext i8 %34 to i32, !dbg !7229
  store i32 %35, i32* %11, align 4, !dbg !7227
  %36 = load i32, i32* %11, align 4, !dbg !7230
  %37 = shl i32 %36, 8, !dbg !7231
  %38 = load i32, i32* %11, align 4, !dbg !7232
  %39 = or i32 %38, %37, !dbg !7232
  store i32 %39, i32* %11, align 4, !dbg !7232
  %40 = load i32, i32* %11, align 4, !dbg !7233
  %41 = shl i32 %40, 16, !dbg !7234
  %42 = load i32, i32* %11, align 4, !dbg !7235
  %43 = or i32 %42, %41, !dbg !7235
  store i32 %43, i32* %11, align 4, !dbg !7235
  br label %44, !dbg !7236

44:                                               ; preds = %47, %31
  %45 = load i32, i32* %7, align 4, !dbg !7237
  %46 = icmp uge i32 %45, 4, !dbg !7238
  br i1 %46, label %47, label %53, !dbg !7236

47:                                               ; preds = %44
  %48 = load i32, i32* %11, align 4, !dbg !7239
  %49 = load i32*, i32** %10, align 4, !dbg !7241
  %50 = getelementptr inbounds i32, i32* %49, i32 1, !dbg !7241
  store i32* %50, i32** %10, align 4, !dbg !7241
  store i32 %48, i32* %49, align 4, !dbg !7242
  %51 = load i32, i32* %7, align 4, !dbg !7243
  %52 = sub i32 %51, 4, !dbg !7243
  store i32 %52, i32* %7, align 4, !dbg !7243
  br label %44, !dbg !7236, !llvm.loop !7244

53:                                               ; preds = %44
  %54 = load i32*, i32** %10, align 4, !dbg !7246
  %55 = bitcast i32* %54 to i8*, !dbg !7247
  store i8* %55, i8** %8, align 4, !dbg !7248
  br label %56, !dbg !7249

56:                                               ; preds = %59, %53
  %57 = load i32, i32* %7, align 4, !dbg !7250
  %58 = icmp ugt i32 %57, 0, !dbg !7251
  br i1 %58, label %59, label %65, !dbg !7249

59:                                               ; preds = %56
  %60 = load i8, i8* %9, align 1, !dbg !7252
  %61 = load i8*, i8** %8, align 4, !dbg !7254
  %62 = getelementptr inbounds i8, i8* %61, i32 1, !dbg !7254
  store i8* %62, i8** %8, align 4, !dbg !7254
  store i8 %60, i8* %61, align 1, !dbg !7255
  %63 = load i32, i32* %7, align 4, !dbg !7256
  %64 = add i32 %63, -1, !dbg !7256
  store i32 %64, i32* %7, align 4, !dbg !7256
  br label %56, !dbg !7249, !llvm.loop !7257

65:                                               ; preds = %56
  %66 = load i8*, i8** %5, align 4, !dbg !7259
  store i8* %66, i8** %4, align 4, !dbg !7260
  br label %67, !dbg !7260

67:                                               ; preds = %65, %23
  %68 = load i8*, i8** %4, align 4, !dbg !7261
  ret i8* %68, !dbg !7261
}

; Function Attrs: noinline nounwind optnone
define dso_local i8* @memchr(i8* noundef %0, i32 noundef %1, i32 noundef %2) #1 !dbg !7262 {
  %4 = alloca i8*, align 4
  %5 = alloca i8*, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i8*, align 4
  store i8* %0, i8** %5, align 4
  call void @llvm.dbg.declare(metadata i8** %5, metadata !7265, metadata !DIExpression()), !dbg !7266
  store i32 %1, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !7267, metadata !DIExpression()), !dbg !7268
  store i32 %2, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !7269, metadata !DIExpression()), !dbg !7270
  %9 = load i32, i32* %7, align 4, !dbg !7271
  %10 = icmp ne i32 %9, 0, !dbg !7273
  br i1 %10, label %11, label %31, !dbg !7274

11:                                               ; preds = %3
  call void @llvm.dbg.declare(metadata i8** %8, metadata !7275, metadata !DIExpression()), !dbg !7277
  %12 = load i8*, i8** %5, align 4, !dbg !7278
  store i8* %12, i8** %8, align 4, !dbg !7277
  br label %13, !dbg !7279

13:                                               ; preds = %26, %11
  %14 = load i8*, i8** %8, align 4, !dbg !7280
  %15 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !7280
  store i8* %15, i8** %8, align 4, !dbg !7280
  %16 = load i8, i8* %14, align 1, !dbg !7283
  %17 = zext i8 %16 to i32, !dbg !7283
  %18 = load i32, i32* %6, align 4, !dbg !7284
  %19 = trunc i32 %18 to i8, !dbg !7285
  %20 = zext i8 %19 to i32, !dbg !7285
  %21 = icmp eq i32 %17, %20, !dbg !7286
  br i1 %21, label %22, label %25, !dbg !7287

22:                                               ; preds = %13
  %23 = load i8*, i8** %8, align 4, !dbg !7288
  %24 = getelementptr inbounds i8, i8* %23, i32 -1, !dbg !7290
  store i8* %24, i8** %4, align 4, !dbg !7291
  br label %32, !dbg !7291

25:                                               ; preds = %13
  br label %26, !dbg !7292

26:                                               ; preds = %25
  %27 = load i32, i32* %7, align 4, !dbg !7293
  %28 = add i32 %27, -1, !dbg !7293
  store i32 %28, i32* %7, align 4, !dbg !7293
  %29 = icmp ne i32 %28, 0, !dbg !7294
  br i1 %29, label %13, label %30, !dbg !7292, !llvm.loop !7295

30:                                               ; preds = %26
  br label %31, !dbg !7297

31:                                               ; preds = %30, %3
  store i8* null, i8** %4, align 4, !dbg !7298
  br label %32, !dbg !7298

32:                                               ; preds = %31, %22
  %33 = load i8*, i8** %4, align 4, !dbg !7299
  ret i8* %33, !dbg !7299
}

; Function Attrs: noinline nounwind optnone
define dso_local void @__stdout_hook_install(i32 (i32)* noundef %0) #1 !dbg !7300 {
  %2 = alloca i32 (i32)*, align 4
  store i32 (i32)* %0, i32 (i32)** %2, align 4
  call void @llvm.dbg.declare(metadata i32 (i32)** %2, metadata !7301, metadata !DIExpression()), !dbg !7302
  %3 = load i32 (i32)*, i32 (i32)** %2, align 4, !dbg !7303
  store i32 (i32)* %3, i32 (i32)** @_stdout_hook, align 4, !dbg !7304
  ret void, !dbg !7305
}

; Function Attrs: noinline nounwind optnone
define internal i32 @_stdout_hook_default(i32 noundef %0) #1 !dbg !7306 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !7307, metadata !DIExpression()), !dbg !7308
  %3 = load i32, i32* %2, align 4, !dbg !7309
  ret i32 -1, !dbg !7310
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) #1 !dbg !7311 {
  %3 = alloca i32, align 4
  %4 = alloca i32*, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !7314, metadata !DIExpression()), !dbg !7315
  store i32* %1, i32** %4, align 4
  call void @llvm.dbg.declare(metadata i32** %4, metadata !7316, metadata !DIExpression()), !dbg !7317
  %5 = load i32*, i32** %4, align 4, !dbg !7318
  %6 = icmp eq i32* %5, inttoptr (i32 2 to i32*), !dbg !7319
  br i1 %6, label %10, label %7, !dbg !7320

7:                                                ; preds = %2
  %8 = load i32*, i32** %4, align 4, !dbg !7321
  %9 = icmp eq i32* %8, inttoptr (i32 3 to i32*), !dbg !7322
  br i1 %9, label %10, label %14, !dbg !7323

10:                                               ; preds = %7, %2
  %11 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !7324
  %12 = load i32, i32* %3, align 4, !dbg !7325
  %13 = call i32 %11(i32 noundef %12) #10, !dbg !7324
  br label %15, !dbg !7323

14:                                               ; preds = %7
  br label %15, !dbg !7323

15:                                               ; preds = %14, %10
  %16 = phi i32 [ %13, %10 ], [ -1, %14 ], !dbg !7323
  ret i32 %16, !dbg !7326
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @fputc(i32 noundef %0, i32* noundef %1) #1 !dbg !7327 {
  %3 = alloca i32, align 4
  %4 = alloca i32*, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !7328, metadata !DIExpression()), !dbg !7329
  store i32* %1, i32** %4, align 4
  call void @llvm.dbg.declare(metadata i32** %4, metadata !7330, metadata !DIExpression()), !dbg !7331
  %5 = load i32, i32* %3, align 4, !dbg !7332
  %6 = load i32*, i32** %4, align 4, !dbg !7333
  %7 = call i32 @zephyr_fputc(i32 noundef %5, i32* noundef %6) #10, !dbg !7334
  ret i32 %7, !dbg !7335
}

; Function Attrs: noinline nounwind optnone
define internal i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) #1 !dbg !7336 {
  %3 = alloca i32, align 4
  %4 = alloca i32*, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !7338, metadata !DIExpression()), !dbg !7339
  store i32* %1, i32** %4, align 4
  call void @llvm.dbg.declare(metadata i32** %4, metadata !7340, metadata !DIExpression()), !dbg !7341
  br label %5, !dbg !7342

5:                                                ; preds = %2
  call void asm sideeffect "", "~{memory}"() #9, !dbg !7343, !srcloc !7345
  br label %6, !dbg !7343

6:                                                ; preds = %5
  %7 = load i32, i32* %3, align 4, !dbg !7346
  %8 = load i32*, i32** %4, align 4, !dbg !7347
  %9 = call i32 @z_impl_zephyr_fputc(i32 noundef %7, i32* noundef %8) #10, !dbg !7348
  ret i32 %9, !dbg !7349
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @fputs(i8* noalias noundef %0, i32* noalias noundef %1) #1 !dbg !7350 {
  %3 = alloca i8*, align 4
  %4 = alloca i32*, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store i8* %0, i8** %3, align 4
  call void @llvm.dbg.declare(metadata i8** %3, metadata !7354, metadata !DIExpression()), !dbg !7355
  store i32* %1, i32** %4, align 4
  call void @llvm.dbg.declare(metadata i32** %4, metadata !7356, metadata !DIExpression()), !dbg !7357
  call void @llvm.dbg.declare(metadata i32* %5, metadata !7358, metadata !DIExpression()), !dbg !7359
  %7 = load i8*, i8** %3, align 4, !dbg !7360
  %8 = call i32 @strlen(i8* noundef %7) #10, !dbg !7361
  store i32 %8, i32* %5, align 4, !dbg !7359
  call void @llvm.dbg.declare(metadata i32* %6, metadata !7362, metadata !DIExpression()), !dbg !7363
  %9 = load i8*, i8** %3, align 4, !dbg !7364
  %10 = load i32, i32* %5, align 4, !dbg !7365
  %11 = load i32*, i32** %4, align 4, !dbg !7366
  %12 = call i32 @fwrite(i8* noundef %9, i32 noundef 1, i32 noundef %10, i32* noundef %11) #10, !dbg !7367
  store i32 %12, i32* %6, align 4, !dbg !7368
  %13 = load i32, i32* %5, align 4, !dbg !7369
  %14 = load i32, i32* %6, align 4, !dbg !7370
  %15 = icmp eq i32 %13, %14, !dbg !7371
  %16 = zext i1 %15 to i64, !dbg !7369
  %17 = select i1 %15, i32 0, i32 -1, !dbg !7369
  ret i32 %17, !dbg !7372
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @fwrite(i8* noalias noundef %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) #1 !dbg !7373 {
  %5 = alloca i8*, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32*, align 4
  store i8* %0, i8** %5, align 4
  call void @llvm.dbg.declare(metadata i8** %5, metadata !7376, metadata !DIExpression()), !dbg !7377
  store i32 %1, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !7378, metadata !DIExpression()), !dbg !7379
  store i32 %2, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !7380, metadata !DIExpression()), !dbg !7381
  store i32* %3, i32** %8, align 4
  call void @llvm.dbg.declare(metadata i32** %8, metadata !7382, metadata !DIExpression()), !dbg !7383
  %9 = load i8*, i8** %5, align 4, !dbg !7384
  %10 = load i32, i32* %6, align 4, !dbg !7385
  %11 = load i32, i32* %7, align 4, !dbg !7386
  %12 = load i32*, i32** %8, align 4, !dbg !7387
  %13 = call i32 @zephyr_fwrite(i8* noundef %9, i32 noundef %10, i32 noundef %11, i32* noundef %12) #10, !dbg !7388
  ret i32 %13, !dbg !7389
}

; Function Attrs: noinline nounwind optnone
define internal i32 @zephyr_fwrite(i8* noalias noundef %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) #1 !dbg !7390 {
  %5 = alloca i8*, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32*, align 4
  store i8* %0, i8** %5, align 4
  call void @llvm.dbg.declare(metadata i8** %5, metadata !7391, metadata !DIExpression()), !dbg !7392
  store i32 %1, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !7393, metadata !DIExpression()), !dbg !7394
  store i32 %2, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !7395, metadata !DIExpression()), !dbg !7396
  store i32* %3, i32** %8, align 4
  call void @llvm.dbg.declare(metadata i32** %8, metadata !7397, metadata !DIExpression()), !dbg !7398
  br label %9, !dbg !7399

9:                                                ; preds = %4
  call void asm sideeffect "", "~{memory}"() #9, !dbg !7400, !srcloc !7402
  br label %10, !dbg !7400

10:                                               ; preds = %9
  %11 = load i8*, i8** %5, align 4, !dbg !7403
  %12 = load i32, i32* %6, align 4, !dbg !7404
  %13 = load i32, i32* %7, align 4, !dbg !7405
  %14 = load i32*, i32** %8, align 4, !dbg !7406
  %15 = call i32 @z_impl_zephyr_fwrite(i8* noundef %11, i32 noundef %12, i32 noundef %13, i32* noundef %14) #10, !dbg !7407
  ret i32 %15, !dbg !7408
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @z_impl_zephyr_fwrite(i8* noalias noundef %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) #1 !dbg !7409 {
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32*, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i8*, align 4
  store i8* %0, i8** %6, align 4
  call void @llvm.dbg.declare(metadata i8** %6, metadata !7410, metadata !DIExpression()), !dbg !7411
  store i32 %1, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !7412, metadata !DIExpression()), !dbg !7413
  store i32 %2, i32* %8, align 4
  call void @llvm.dbg.declare(metadata i32* %8, metadata !7414, metadata !DIExpression()), !dbg !7415
  store i32* %3, i32** %9, align 4
  call void @llvm.dbg.declare(metadata i32** %9, metadata !7416, metadata !DIExpression()), !dbg !7417
  call void @llvm.dbg.declare(metadata i32* %10, metadata !7418, metadata !DIExpression()), !dbg !7419
  call void @llvm.dbg.declare(metadata i32* %11, metadata !7420, metadata !DIExpression()), !dbg !7421
  call void @llvm.dbg.declare(metadata i8** %12, metadata !7422, metadata !DIExpression()), !dbg !7423
  %13 = load i32*, i32** %9, align 4, !dbg !7424
  %14 = icmp ne i32* %13, inttoptr (i32 2 to i32*), !dbg !7426
  br i1 %14, label %15, label %18, !dbg !7427

15:                                               ; preds = %4
  %16 = load i32*, i32** %9, align 4, !dbg !7428
  %17 = icmp ne i32* %16, inttoptr (i32 3 to i32*), !dbg !7429
  br i1 %17, label %24, label %18, !dbg !7430

18:                                               ; preds = %15, %4
  %19 = load i32, i32* %8, align 4, !dbg !7431
  %20 = icmp eq i32 %19, 0, !dbg !7432
  br i1 %20, label %24, label %21, !dbg !7433

21:                                               ; preds = %18
  %22 = load i32, i32* %7, align 4, !dbg !7434
  %23 = icmp eq i32 %22, 0, !dbg !7435
  br i1 %23, label %24, label %25, !dbg !7436

24:                                               ; preds = %21, %18, %15
  store i32 0, i32* %5, align 4, !dbg !7437
  br label %56, !dbg !7437

25:                                               ; preds = %21
  %26 = load i8*, i8** %6, align 4, !dbg !7439
  store i8* %26, i8** %12, align 4, !dbg !7440
  %27 = load i32, i32* %8, align 4, !dbg !7441
  store i32 %27, i32* %10, align 4, !dbg !7442
  br label %28, !dbg !7443

28:                                               ; preds = %48, %25
  %29 = load i32, i32* %7, align 4, !dbg !7444
  store i32 %29, i32* %11, align 4, !dbg !7446
  br label %30, !dbg !7447

30:                                               ; preds = %42, %28
  %31 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !7448
  %32 = load i8*, i8** %12, align 4, !dbg !7451
  %33 = getelementptr inbounds i8, i8* %32, i32 1, !dbg !7451
  store i8* %33, i8** %12, align 4, !dbg !7451
  %34 = load i8, i8* %32, align 1, !dbg !7452
  %35 = zext i8 %34 to i32, !dbg !7453
  %36 = call i32 %31(i32 noundef %35) #10, !dbg !7448
  %37 = icmp eq i32 %36, -1, !dbg !7454
  br i1 %37, label %38, label %39, !dbg !7455

38:                                               ; preds = %30
  br label %52, !dbg !7456

39:                                               ; preds = %30
  %40 = load i32, i32* %11, align 4, !dbg !7458
  %41 = add i32 %40, -1, !dbg !7458
  store i32 %41, i32* %11, align 4, !dbg !7458
  br label %42, !dbg !7459

42:                                               ; preds = %39
  %43 = load i32, i32* %11, align 4, !dbg !7460
  %44 = icmp ugt i32 %43, 0, !dbg !7461
  br i1 %44, label %30, label %45, !dbg !7459, !llvm.loop !7462

45:                                               ; preds = %42
  %46 = load i32, i32* %10, align 4, !dbg !7464
  %47 = add i32 %46, -1, !dbg !7464
  store i32 %47, i32* %10, align 4, !dbg !7464
  br label %48, !dbg !7465

48:                                               ; preds = %45
  %49 = load i32, i32* %10, align 4, !dbg !7466
  %50 = icmp ugt i32 %49, 0, !dbg !7467
  br i1 %50, label %28, label %51, !dbg !7465, !llvm.loop !7468

51:                                               ; preds = %48
  br label %52, !dbg !7465

52:                                               ; preds = %51, %38
  call void @llvm.dbg.label(metadata !7470), !dbg !7471
  %53 = load i32, i32* %8, align 4, !dbg !7472
  %54 = load i32, i32* %10, align 4, !dbg !7473
  %55 = sub i32 %53, %54, !dbg !7474
  store i32 %55, i32* %5, align 4, !dbg !7475
  br label %56, !dbg !7475

56:                                               ; preds = %52, %24
  %57 = load i32, i32* %5, align 4, !dbg !7476
  ret i32 %57, !dbg !7476
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @puts(i8* noundef %0) #1 !dbg !7477 {
  %2 = alloca i32, align 4
  %3 = alloca i8*, align 4
  store i8* %0, i8** %3, align 4
  call void @llvm.dbg.declare(metadata i8** %3, metadata !7480, metadata !DIExpression()), !dbg !7481
  %4 = load i8*, i8** %3, align 4, !dbg !7482
  %5 = call i32 @fputs(i8* noundef %4, i32* noundef inttoptr (i32 2 to i32*)) #10, !dbg !7484
  %6 = icmp eq i32 %5, -1, !dbg !7485
  br i1 %6, label %7, label %8, !dbg !7486

7:                                                ; preds = %1
  store i32 -1, i32* %2, align 4, !dbg !7487
  br label %13, !dbg !7487

8:                                                ; preds = %1
  %9 = call i32 @fputc(i32 noundef 10, i32* noundef inttoptr (i32 2 to i32*)) #10, !dbg !7489
  %10 = icmp eq i32 %9, -1, !dbg !7490
  %11 = zext i1 %10 to i64, !dbg !7489
  %12 = select i1 %10, i32 -1, i32 0, !dbg !7489
  store i32 %12, i32* %2, align 4, !dbg !7491
  br label %13, !dbg !7491

13:                                               ; preds = %8, %7
  %14 = load i32, i32* %2, align 4, !dbg !7492
  ret i32 %14, !dbg !7492
}

; Function Attrs: noinline nounwind optnone
define internal i32 @uart_console_init(%struct.device.71* noundef %0) #1 !dbg !7493 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.device.71*, align 4
  store %struct.device.71* %0, %struct.device.71** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.device.71** %3, metadata !7494, metadata !DIExpression()), !dbg !7495
  %4 = load %struct.device.71*, %struct.device.71** %3, align 4, !dbg !7496
  %5 = call zeroext i1 @device_is_ready(%struct.device.71* noundef @__device_dts_ord_198) #10, !dbg !7497
  br i1 %5, label %7, label %6, !dbg !7499

6:                                                ; preds = %1
  store i32 -19, i32* %2, align 4, !dbg !7500
  br label %8, !dbg !7500

7:                                                ; preds = %1
  call void @uart_console_hook_install() #10, !dbg !7502
  store i32 0, i32* %2, align 4, !dbg !7503
  br label %8, !dbg !7503

8:                                                ; preds = %7, %6
  %9 = load i32, i32* %2, align 4, !dbg !7504
  ret i32 %9, !dbg !7504
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @device_is_ready(%struct.device.71* noundef %0) #1 !dbg !7505 {
  %2 = alloca %struct.device.71*, align 4
  store %struct.device.71* %0, %struct.device.71** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.device.71** %2, metadata !7509, metadata !DIExpression()), !dbg !7510
  br label %3, !dbg !7511

3:                                                ; preds = %1
  call void asm sideeffect "", "~{memory}"() #9, !dbg !7512, !srcloc !7514
  br label %4, !dbg !7512

4:                                                ; preds = %3
  %5 = load %struct.device.71*, %struct.device.71** %2, align 4, !dbg !7515
  %6 = call zeroext i1 @z_impl_device_is_ready(%struct.device.71* noundef %5) #10, !dbg !7516
  ret i1 %6, !dbg !7517
}

; Function Attrs: noinline nounwind optnone
define internal void @uart_console_hook_install() #1 !dbg !7518 {
  call void @__stdout_hook_install(i32 (i32)* noundef @console_out) #10, !dbg !7519
  call void @__printk_hook_install(i32 (i32)* noundef @console_out) #10, !dbg !7520
  ret void, !dbg !7521
}

; Function Attrs: noinline nounwind optnone
define internal i32 @console_out(i32 noundef %0) #1 !dbg !7522 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !7523, metadata !DIExpression()), !dbg !7524
  %3 = load i32, i32* %2, align 4, !dbg !7525
  %4 = icmp eq i32 10, %3, !dbg !7527
  br i1 %4, label %5, label %6, !dbg !7528

5:                                                ; preds = %1
  call void @uart_poll_out(%struct.device.71* noundef @__device_dts_ord_198, i8 noundef zeroext 13) #10, !dbg !7529
  br label %6, !dbg !7531

6:                                                ; preds = %5, %1
  %7 = load i32, i32* %2, align 4, !dbg !7532
  %8 = trunc i32 %7 to i8, !dbg !7532
  call void @uart_poll_out(%struct.device.71* noundef @__device_dts_ord_198, i8 noundef zeroext %8) #10, !dbg !7533
  %9 = load i32, i32* %2, align 4, !dbg !7534
  ret i32 %9, !dbg !7535
}

; Function Attrs: noinline nounwind optnone
define internal void @uart_poll_out(%struct.device.71* noundef %0, i8 noundef zeroext %1) #1 !dbg !7536 {
  %3 = alloca %struct.device.71*, align 4
  %4 = alloca i8, align 1
  store %struct.device.71* %0, %struct.device.71** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.device.71** %3, metadata !7538, metadata !DIExpression()), !dbg !7539
  store i8 %1, i8* %4, align 1
  call void @llvm.dbg.declare(metadata i8* %4, metadata !7540, metadata !DIExpression()), !dbg !7541
  br label %5, !dbg !7542

5:                                                ; preds = %2
  call void asm sideeffect "", "~{memory}"() #9, !dbg !7543, !srcloc !7545
  br label %6, !dbg !7543

6:                                                ; preds = %5
  %7 = load %struct.device.71*, %struct.device.71** %3, align 4, !dbg !7546
  %8 = load i8, i8* %4, align 1, !dbg !7547
  call void @z_impl_uart_poll_out(%struct.device.71* noundef %7, i8 noundef zeroext %8) #10, !dbg !7548
  ret void, !dbg !7549
}

; Function Attrs: noinline nounwind optnone
define internal void @z_impl_uart_poll_out(%struct.device.71* noundef %0, i8 noundef zeroext %1) #1 !dbg !7550 {
  %3 = alloca %struct.device.71*, align 4
  %4 = alloca i8, align 1
  %5 = alloca %struct.uart_driver_api*, align 4
  store %struct.device.71* %0, %struct.device.71** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.device.71** %3, metadata !7551, metadata !DIExpression()), !dbg !7552
  store i8 %1, i8* %4, align 1
  call void @llvm.dbg.declare(metadata i8* %4, metadata !7553, metadata !DIExpression()), !dbg !7554
  call void @llvm.dbg.declare(metadata %struct.uart_driver_api** %5, metadata !7555, metadata !DIExpression()), !dbg !7556
  %6 = load %struct.device.71*, %struct.device.71** %3, align 4, !dbg !7557
  %7 = getelementptr inbounds %struct.device.71, %struct.device.71* %6, i32 0, i32 2, !dbg !7558
  %8 = load i8*, i8** %7, align 4, !dbg !7558
  %9 = bitcast i8* %8 to %struct.uart_driver_api*, !dbg !7559
  store %struct.uart_driver_api* %9, %struct.uart_driver_api** %5, align 4, !dbg !7556
  %10 = load %struct.uart_driver_api*, %struct.uart_driver_api** %5, align 4, !dbg !7560
  %11 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %10, i32 0, i32 1, !dbg !7561
  %12 = load void (%struct.device.71*, i8)*, void (%struct.device.71*, i8)** %11, align 4, !dbg !7561
  %13 = load %struct.device.71*, %struct.device.71** %3, align 4, !dbg !7562
  %14 = load i8, i8* %4, align 1, !dbg !7563
  call void %12(%struct.device.71* noundef %13, i8 noundef zeroext %14) #10, !dbg !7560
  ret void, !dbg !7564
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @z_impl_device_is_ready(%struct.device.71* noundef %0) #1 !dbg !7565 {
  %2 = alloca %struct.device.71*, align 4
  store %struct.device.71* %0, %struct.device.71** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.device.71** %2, metadata !7566, metadata !DIExpression()), !dbg !7567
  %3 = load %struct.device.71*, %struct.device.71** %2, align 4, !dbg !7568
  %4 = call zeroext i1 @z_device_is_ready(%struct.device.71* noundef %3) #10, !dbg !7569
  ret i1 %4, !dbg !7570
}

; Function Attrs: noinline nounwind optnone
define dso_local void @uart_register_input(%struct.k_fifo* noundef %0, %struct.k_fifo* noundef %1, i8 (i8*, i8)* noundef %2) #1 !dbg !7571 {
  %4 = alloca %struct.k_fifo*, align 4
  %5 = alloca %struct.k_fifo*, align 4
  %6 = alloca i8 (i8*, i8)*, align 4
  store %struct.k_fifo* %0, %struct.k_fifo** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.k_fifo** %4, metadata !7617, metadata !DIExpression()), !dbg !7618
  store %struct.k_fifo* %1, %struct.k_fifo** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.k_fifo** %5, metadata !7619, metadata !DIExpression()), !dbg !7620
  store i8 (i8*, i8)* %2, i8 (i8*, i8)** %6, align 4
  call void @llvm.dbg.declare(metadata i8 (i8*, i8)** %6, metadata !7621, metadata !DIExpression()), !dbg !7622
  %7 = load %struct.k_fifo*, %struct.k_fifo** %4, align 4, !dbg !7623
  %8 = load %struct.k_fifo*, %struct.k_fifo** %5, align 4, !dbg !7624
  %9 = load i8 (i8*, i8)*, i8 (i8*, i8)** %6, align 4, !dbg !7625
  ret void, !dbg !7626
}

; Function Attrs: noinline nounwind optnone
define internal i32 @imx_gpio_configure(%struct.device.71* noundef %0, i8 noundef zeroext %1, i32 noundef %2) #1 !dbg !7627 {
  %4 = alloca i32, align 4
  %5 = alloca %struct.device.71*, align 4
  %6 = alloca i8, align 1
  %7 = alloca i32, align 4
  %8 = alloca %struct.imx_gpio_config*, align 4
  %9 = alloca %struct.GPIO_Type*, align 4
  %10 = alloca %struct.pinctrl_soc_pin, align 4
  %11 = alloca i32*, align 4
  %12 = alloca i32, align 4
  store %struct.device.71* %0, %struct.device.71** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.device.71** %5, metadata !7628, metadata !DIExpression()), !dbg !7629
  store i8 %1, i8* %6, align 1
  call void @llvm.dbg.declare(metadata i8* %6, metadata !7630, metadata !DIExpression()), !dbg !7631
  store i32 %2, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !7632, metadata !DIExpression()), !dbg !7633
  call void @llvm.dbg.declare(metadata %struct.imx_gpio_config** %8, metadata !7634, metadata !DIExpression()), !dbg !7636
  %13 = load %struct.device.71*, %struct.device.71** %5, align 4, !dbg !7637
  %14 = getelementptr inbounds %struct.device.71, %struct.device.71* %13, i32 0, i32 1, !dbg !7638
  %15 = load i8*, i8** %14, align 4, !dbg !7638
  %16 = bitcast i8* %15 to %struct.imx_gpio_config*, !dbg !7637
  store %struct.imx_gpio_config* %16, %struct.imx_gpio_config** %8, align 4, !dbg !7636
  call void @llvm.dbg.declare(metadata %struct.GPIO_Type** %9, metadata !7639, metadata !DIExpression()), !dbg !7640
  %17 = load %struct.imx_gpio_config*, %struct.imx_gpio_config** %8, align 4, !dbg !7641
  %18 = getelementptr inbounds %struct.imx_gpio_config, %struct.imx_gpio_config* %17, i32 0, i32 1, !dbg !7642
  %19 = load %struct.GPIO_Type*, %struct.GPIO_Type** %18, align 4, !dbg !7642
  store %struct.GPIO_Type* %19, %struct.GPIO_Type** %9, align 4, !dbg !7640
  %20 = load i32, i32* %7, align 4, !dbg !7643
  %21 = and i32 %20, 65536, !dbg !7645
  %22 = icmp ne i32 %21, 0, !dbg !7646
  br i1 %22, label %23, label %28, !dbg !7647

23:                                               ; preds = %3
  %24 = load i32, i32* %7, align 4, !dbg !7648
  %25 = and i32 %24, 131072, !dbg !7649
  %26 = icmp ne i32 %25, 0, !dbg !7650
  br i1 %26, label %27, label %28, !dbg !7651

27:                                               ; preds = %23
  store i32 -134, i32* %4, align 4, !dbg !7652
  br label %130, !dbg !7652

28:                                               ; preds = %23, %3
  call void @llvm.dbg.declare(metadata %struct.pinctrl_soc_pin* %10, metadata !7654, metadata !DIExpression()), !dbg !7659
  call void @llvm.dbg.declare(metadata i32** %11, metadata !7660, metadata !DIExpression()), !dbg !7661
  %29 = load %struct.imx_gpio_config*, %struct.imx_gpio_config** %8, align 4, !dbg !7662
  %30 = getelementptr inbounds %struct.imx_gpio_config, %struct.imx_gpio_config* %29, i32 0, i32 2, !dbg !7663
  %31 = load %struct.pinctrl_soc_pinmux*, %struct.pinctrl_soc_pinmux** %30, align 4, !dbg !7663
  %32 = load i8, i8* %6, align 1, !dbg !7664
  %33 = zext i8 %32 to i32, !dbg !7662
  %34 = getelementptr inbounds %struct.pinctrl_soc_pinmux, %struct.pinctrl_soc_pinmux* %31, i32 %33, !dbg !7662
  %35 = getelementptr inbounds %struct.pinctrl_soc_pinmux, %struct.pinctrl_soc_pinmux* %34, i32 0, i32 1, !dbg !7665
  %36 = load i32, i32* %35, align 4, !dbg !7665
  %37 = inttoptr i32 %36 to i32*, !dbg !7666
  store i32* %37, i32** %11, align 4, !dbg !7661
  call void @llvm.dbg.declare(metadata i32* %12, metadata !7667, metadata !DIExpression()), !dbg !7668
  %38 = load i32*, i32** %11, align 4, !dbg !7669
  %39 = load volatile i32, i32* %38, align 4, !dbg !7670
  store i32 %39, i32* %12, align 4, !dbg !7668
  %40 = load i32, i32* %7, align 4, !dbg !7671
  %41 = and i32 %40, 2, !dbg !7673
  %42 = icmp ne i32 %41, 0, !dbg !7674
  br i1 %42, label %43, label %44, !dbg !7675

43:                                               ; preds = %28
  store i32 -134, i32* %4, align 4, !dbg !7676
  br label %130, !dbg !7676

44:                                               ; preds = %28
  %45 = load i32, i32* %7, align 4, !dbg !7678
  %46 = and i32 %45, 16, !dbg !7680
  %47 = icmp ne i32 %46, 0, !dbg !7681
  br i1 %47, label %52, label %48, !dbg !7682

48:                                               ; preds = %44
  %49 = load i32, i32* %7, align 4, !dbg !7683
  %50 = and i32 %49, 32, !dbg !7684
  %51 = icmp ne i32 %50, 0, !dbg !7685
  br i1 %51, label %52, label %65, !dbg !7686

52:                                               ; preds = %48, %44
  %53 = load i32, i32* %12, align 4, !dbg !7687
  %54 = or i32 %53, 16, !dbg !7687
  store i32 %54, i32* %12, align 4, !dbg !7687
  %55 = load i32, i32* %7, align 4, !dbg !7689
  %56 = and i32 %55, 16, !dbg !7691
  %57 = icmp ne i32 %56, 0, !dbg !7692
  br i1 %57, label %58, label %61, !dbg !7693

58:                                               ; preds = %52
  %59 = load i32, i32* %12, align 4, !dbg !7694
  %60 = or i32 %59, 32, !dbg !7694
  store i32 %60, i32* %12, align 4, !dbg !7694
  br label %64, !dbg !7696

61:                                               ; preds = %52
  %62 = load i32, i32* %12, align 4, !dbg !7697
  %63 = and i32 %62, -33, !dbg !7697
  store i32 %63, i32* %12, align 4, !dbg !7697
  br label %64

64:                                               ; preds = %61, %58
  br label %68, !dbg !7699

65:                                               ; preds = %48
  %66 = load i32, i32* %12, align 4, !dbg !7700
  %67 = and i32 %66, -17, !dbg !7700
  store i32 %67, i32* %12, align 4, !dbg !7700
  br label %68

68:                                               ; preds = %65, %64
  %69 = getelementptr inbounds %struct.pinctrl_soc_pin, %struct.pinctrl_soc_pin* %10, i32 0, i32 0, !dbg !7702
  %70 = bitcast %struct.pinctrl_soc_pinmux* %69 to i8*, !dbg !7703
  %71 = load %struct.imx_gpio_config*, %struct.imx_gpio_config** %8, align 4, !dbg !7704
  %72 = getelementptr inbounds %struct.imx_gpio_config, %struct.imx_gpio_config* %71, i32 0, i32 2, !dbg !7705
  %73 = load %struct.pinctrl_soc_pinmux*, %struct.pinctrl_soc_pinmux** %72, align 4, !dbg !7705
  %74 = load i8, i8* %6, align 1, !dbg !7706
  %75 = zext i8 %74 to i32, !dbg !7704
  %76 = getelementptr inbounds %struct.pinctrl_soc_pinmux, %struct.pinctrl_soc_pinmux* %73, i32 %75, !dbg !7704
  %77 = bitcast %struct.pinctrl_soc_pinmux* %76 to i8*, !dbg !7707
  %78 = call i8* @memcpy(i8* noundef %70, i8* noundef %77, i32 noundef 20) #10, !dbg !7708
  %79 = load i32, i32* %12, align 4, !dbg !7709
  %80 = getelementptr inbounds %struct.pinctrl_soc_pin, %struct.pinctrl_soc_pin* %10, i32 0, i32 1, !dbg !7710
  store i32 %79, i32* %80, align 4, !dbg !7711
  %81 = call i32 @pinctrl_configure_pins(%struct.pinctrl_soc_pin* noundef %10, i8 noundef zeroext 1, i32 noundef 0) #10, !dbg !7712
  %82 = load %struct.GPIO_Type*, %struct.GPIO_Type** %9, align 4, !dbg !7713
  %83 = load i8, i8* %6, align 1, !dbg !7714
  %84 = zext i8 %83 to i32, !dbg !7714
  call void @GPIO_SetPinIntMode(%struct.GPIO_Type* noundef %82, i32 noundef %84, i1 noundef zeroext false) #10, !dbg !7715
  %85 = load %struct.GPIO_Type*, %struct.GPIO_Type** %9, align 4, !dbg !7716
  %86 = load i8, i8* %6, align 1, !dbg !7717
  %87 = zext i8 %86 to i32, !dbg !7717
  call void @GPIO_SetIntEdgeSelect(%struct.GPIO_Type* noundef %85, i32 noundef %87, i1 noundef zeroext false) #10, !dbg !7718
  %88 = load i32, i32* %7, align 4, !dbg !7719
  %89 = and i32 %88, 131072, !dbg !7721
  %90 = icmp ne i32 %89, 0, !dbg !7722
  br i1 %90, label %91, label %118, !dbg !7723

91:                                               ; preds = %68
  %92 = load i32, i32* %7, align 4, !dbg !7724
  %93 = and i32 %92, 262144, !dbg !7727
  %94 = icmp ne i32 %93, 0, !dbg !7728
  br i1 %94, label %95, label %99, !dbg !7729

95:                                               ; preds = %91
  %96 = load %struct.GPIO_Type*, %struct.GPIO_Type** %9, align 4, !dbg !7730
  %97 = load i8, i8* %6, align 1, !dbg !7732
  %98 = zext i8 %97 to i32, !dbg !7732
  call void @GPIO_WritePinOutput(%struct.GPIO_Type* noundef %96, i32 noundef %98, i32 noundef 0) #10, !dbg !7733
  br label %108, !dbg !7734

99:                                               ; preds = %91
  %100 = load i32, i32* %7, align 4, !dbg !7735
  %101 = and i32 %100, 524288, !dbg !7737
  %102 = icmp ne i32 %101, 0, !dbg !7738
  br i1 %102, label %103, label %107, !dbg !7739

103:                                              ; preds = %99
  %104 = load %struct.GPIO_Type*, %struct.GPIO_Type** %9, align 4, !dbg !7740
  %105 = load i8, i8* %6, align 1, !dbg !7742
  %106 = zext i8 %105 to i32, !dbg !7742
  call void @GPIO_WritePinOutput(%struct.GPIO_Type* noundef %104, i32 noundef %106, i32 noundef 1) #10, !dbg !7743
  br label %107, !dbg !7744

107:                                              ; preds = %103, %99
  br label %108

108:                                              ; preds = %107, %95
  %109 = load %struct.GPIO_Type*, %struct.GPIO_Type** %9, align 4, !dbg !7745
  %110 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %109, i32 0, i32 1, !dbg !7745
  %111 = load volatile i32, i32* %110, align 4, !dbg !7745
  %112 = load i8, i8* %6, align 1, !dbg !7745
  %113 = zext i8 %112 to i32, !dbg !7745
  %114 = shl i32 1, %113, !dbg !7745
  %115 = or i32 %111, %114, !dbg !7745
  %116 = load %struct.GPIO_Type*, %struct.GPIO_Type** %9, align 4, !dbg !7745
  %117 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %116, i32 0, i32 1, !dbg !7745
  store volatile i32 %115, i32* %117, align 4, !dbg !7745
  br label %129, !dbg !7746

118:                                              ; preds = %68
  %119 = load %struct.GPIO_Type*, %struct.GPIO_Type** %9, align 4, !dbg !7747
  %120 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %119, i32 0, i32 1, !dbg !7747
  %121 = load volatile i32, i32* %120, align 4, !dbg !7747
  %122 = load i8, i8* %6, align 1, !dbg !7747
  %123 = zext i8 %122 to i32, !dbg !7747
  %124 = shl i32 1, %123, !dbg !7747
  %125 = xor i32 %124, -1, !dbg !7747
  %126 = and i32 %121, %125, !dbg !7747
  %127 = load %struct.GPIO_Type*, %struct.GPIO_Type** %9, align 4, !dbg !7747
  %128 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %127, i32 0, i32 1, !dbg !7747
  store volatile i32 %126, i32* %128, align 4, !dbg !7747
  br label %129

129:                                              ; preds = %118, %108
  store i32 0, i32* %4, align 4, !dbg !7749
  br label %130, !dbg !7749

130:                                              ; preds = %129, %43, %27
  %131 = load i32, i32* %4, align 4, !dbg !7750
  ret i32 %131, !dbg !7750
}

; Function Attrs: noinline nounwind optnone
define internal i32 @imx_gpio_port_get_raw(%struct.device.71* noundef %0, i32* noundef %1) #1 !dbg !7751 {
  %3 = alloca %struct.device.71*, align 4
  %4 = alloca i32*, align 4
  %5 = alloca %struct.imx_gpio_config*, align 4
  %6 = alloca %struct.GPIO_Type*, align 4
  store %struct.device.71* %0, %struct.device.71** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.device.71** %3, metadata !7754, metadata !DIExpression()), !dbg !7755
  store i32* %1, i32** %4, align 4
  call void @llvm.dbg.declare(metadata i32** %4, metadata !7756, metadata !DIExpression()), !dbg !7757
  call void @llvm.dbg.declare(metadata %struct.imx_gpio_config** %5, metadata !7758, metadata !DIExpression()), !dbg !7759
  %7 = load %struct.device.71*, %struct.device.71** %3, align 4, !dbg !7760
  %8 = getelementptr inbounds %struct.device.71, %struct.device.71* %7, i32 0, i32 1, !dbg !7761
  %9 = load i8*, i8** %8, align 4, !dbg !7761
  %10 = bitcast i8* %9 to %struct.imx_gpio_config*, !dbg !7760
  store %struct.imx_gpio_config* %10, %struct.imx_gpio_config** %5, align 4, !dbg !7759
  call void @llvm.dbg.declare(metadata %struct.GPIO_Type** %6, metadata !7762, metadata !DIExpression()), !dbg !7763
  %11 = load %struct.imx_gpio_config*, %struct.imx_gpio_config** %5, align 4, !dbg !7764
  %12 = getelementptr inbounds %struct.imx_gpio_config, %struct.imx_gpio_config* %11, i32 0, i32 1, !dbg !7765
  %13 = load %struct.GPIO_Type*, %struct.GPIO_Type** %12, align 4, !dbg !7765
  store %struct.GPIO_Type* %13, %struct.GPIO_Type** %6, align 4, !dbg !7763
  %14 = load %struct.GPIO_Type*, %struct.GPIO_Type** %6, align 4, !dbg !7766
  %15 = call i32 @GPIO_ReadPortInput(%struct.GPIO_Type* noundef %14) #10, !dbg !7767
  %16 = load i32*, i32** %4, align 4, !dbg !7768
  store i32 %15, i32* %16, align 4, !dbg !7769
  ret i32 0, !dbg !7770
}

; Function Attrs: noinline nounwind optnone
define internal i32 @imx_gpio_port_set_masked_raw(%struct.device.71* noundef %0, i32 noundef %1, i32 noundef %2) #1 !dbg !7771 {
  %4 = alloca %struct.device.71*, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca %struct.imx_gpio_config*, align 4
  %8 = alloca %struct.GPIO_Type*, align 4
  store %struct.device.71* %0, %struct.device.71** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.device.71** %4, metadata !7772, metadata !DIExpression()), !dbg !7773
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !7774, metadata !DIExpression()), !dbg !7775
  store i32 %2, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !7776, metadata !DIExpression()), !dbg !7777
  call void @llvm.dbg.declare(metadata %struct.imx_gpio_config** %7, metadata !7778, metadata !DIExpression()), !dbg !7779
  %9 = load %struct.device.71*, %struct.device.71** %4, align 4, !dbg !7780
  %10 = getelementptr inbounds %struct.device.71, %struct.device.71* %9, i32 0, i32 1, !dbg !7781
  %11 = load i8*, i8** %10, align 4, !dbg !7781
  %12 = bitcast i8* %11 to %struct.imx_gpio_config*, !dbg !7780
  store %struct.imx_gpio_config* %12, %struct.imx_gpio_config** %7, align 4, !dbg !7779
  call void @llvm.dbg.declare(metadata %struct.GPIO_Type** %8, metadata !7782, metadata !DIExpression()), !dbg !7783
  %13 = load %struct.imx_gpio_config*, %struct.imx_gpio_config** %7, align 4, !dbg !7784
  %14 = getelementptr inbounds %struct.imx_gpio_config, %struct.imx_gpio_config* %13, i32 0, i32 1, !dbg !7785
  %15 = load %struct.GPIO_Type*, %struct.GPIO_Type** %14, align 4, !dbg !7785
  store %struct.GPIO_Type* %15, %struct.GPIO_Type** %8, align 4, !dbg !7783
  %16 = load %struct.GPIO_Type*, %struct.GPIO_Type** %8, align 4, !dbg !7786
  %17 = load %struct.GPIO_Type*, %struct.GPIO_Type** %8, align 4, !dbg !7787
  %18 = call i32 @GPIO_ReadPortInput(%struct.GPIO_Type* noundef %17) #10, !dbg !7788
  %19 = load i32, i32* %5, align 4, !dbg !7789
  %20 = xor i32 %19, -1, !dbg !7790
  %21 = and i32 %18, %20, !dbg !7791
  %22 = load i32, i32* %6, align 4, !dbg !7792
  %23 = load i32, i32* %5, align 4, !dbg !7793
  %24 = and i32 %22, %23, !dbg !7794
  %25 = or i32 %21, %24, !dbg !7795
  call void @GPIO_WritePortOutput(%struct.GPIO_Type* noundef %16, i32 noundef %25) #10, !dbg !7796
  ret i32 0, !dbg !7797
}

; Function Attrs: noinline nounwind optnone
define internal i32 @imx_gpio_port_set_bits_raw(%struct.device.71* noundef %0, i32 noundef %1) #1 !dbg !7798 {
  %3 = alloca %struct.device.71*, align 4
  %4 = alloca i32, align 4
  %5 = alloca %struct.imx_gpio_config*, align 4
  %6 = alloca %struct.GPIO_Type*, align 4
  store %struct.device.71* %0, %struct.device.71** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.device.71** %3, metadata !7799, metadata !DIExpression()), !dbg !7800
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !7801, metadata !DIExpression()), !dbg !7802
  call void @llvm.dbg.declare(metadata %struct.imx_gpio_config** %5, metadata !7803, metadata !DIExpression()), !dbg !7804
  %7 = load %struct.device.71*, %struct.device.71** %3, align 4, !dbg !7805
  %8 = getelementptr inbounds %struct.device.71, %struct.device.71* %7, i32 0, i32 1, !dbg !7806
  %9 = load i8*, i8** %8, align 4, !dbg !7806
  %10 = bitcast i8* %9 to %struct.imx_gpio_config*, !dbg !7805
  store %struct.imx_gpio_config* %10, %struct.imx_gpio_config** %5, align 4, !dbg !7804
  call void @llvm.dbg.declare(metadata %struct.GPIO_Type** %6, metadata !7807, metadata !DIExpression()), !dbg !7808
  %11 = load %struct.imx_gpio_config*, %struct.imx_gpio_config** %5, align 4, !dbg !7809
  %12 = getelementptr inbounds %struct.imx_gpio_config, %struct.imx_gpio_config* %11, i32 0, i32 1, !dbg !7810
  %13 = load %struct.GPIO_Type*, %struct.GPIO_Type** %12, align 4, !dbg !7810
  store %struct.GPIO_Type* %13, %struct.GPIO_Type** %6, align 4, !dbg !7808
  %14 = load %struct.GPIO_Type*, %struct.GPIO_Type** %6, align 4, !dbg !7811
  %15 = load %struct.GPIO_Type*, %struct.GPIO_Type** %6, align 4, !dbg !7812
  %16 = call i32 @GPIO_ReadPortInput(%struct.GPIO_Type* noundef %15) #10, !dbg !7813
  %17 = load i32, i32* %4, align 4, !dbg !7814
  %18 = or i32 %16, %17, !dbg !7815
  call void @GPIO_WritePortOutput(%struct.GPIO_Type* noundef %14, i32 noundef %18) #10, !dbg !7816
  ret i32 0, !dbg !7817
}

; Function Attrs: noinline nounwind optnone
define internal i32 @imx_gpio_port_clear_bits_raw(%struct.device.71* noundef %0, i32 noundef %1) #1 !dbg !7818 {
  %3 = alloca %struct.device.71*, align 4
  %4 = alloca i32, align 4
  %5 = alloca %struct.imx_gpio_config*, align 4
  %6 = alloca %struct.GPIO_Type*, align 4
  store %struct.device.71* %0, %struct.device.71** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.device.71** %3, metadata !7819, metadata !DIExpression()), !dbg !7820
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !7821, metadata !DIExpression()), !dbg !7822
  call void @llvm.dbg.declare(metadata %struct.imx_gpio_config** %5, metadata !7823, metadata !DIExpression()), !dbg !7824
  %7 = load %struct.device.71*, %struct.device.71** %3, align 4, !dbg !7825
  %8 = getelementptr inbounds %struct.device.71, %struct.device.71* %7, i32 0, i32 1, !dbg !7826
  %9 = load i8*, i8** %8, align 4, !dbg !7826
  %10 = bitcast i8* %9 to %struct.imx_gpio_config*, !dbg !7825
  store %struct.imx_gpio_config* %10, %struct.imx_gpio_config** %5, align 4, !dbg !7824
  call void @llvm.dbg.declare(metadata %struct.GPIO_Type** %6, metadata !7827, metadata !DIExpression()), !dbg !7828
  %11 = load %struct.imx_gpio_config*, %struct.imx_gpio_config** %5, align 4, !dbg !7829
  %12 = getelementptr inbounds %struct.imx_gpio_config, %struct.imx_gpio_config* %11, i32 0, i32 1, !dbg !7830
  %13 = load %struct.GPIO_Type*, %struct.GPIO_Type** %12, align 4, !dbg !7830
  store %struct.GPIO_Type* %13, %struct.GPIO_Type** %6, align 4, !dbg !7828
  %14 = load %struct.GPIO_Type*, %struct.GPIO_Type** %6, align 4, !dbg !7831
  %15 = load %struct.GPIO_Type*, %struct.GPIO_Type** %6, align 4, !dbg !7832
  %16 = call i32 @GPIO_ReadPortInput(%struct.GPIO_Type* noundef %15) #10, !dbg !7833
  %17 = load i32, i32* %4, align 4, !dbg !7834
  %18 = xor i32 %17, -1, !dbg !7835
  %19 = and i32 %16, %18, !dbg !7836
  call void @GPIO_WritePortOutput(%struct.GPIO_Type* noundef %14, i32 noundef %19) #10, !dbg !7837
  ret i32 0, !dbg !7838
}

; Function Attrs: noinline nounwind optnone
define internal i32 @imx_gpio_port_toggle_bits(%struct.device.71* noundef %0, i32 noundef %1) #1 !dbg !7839 {
  %3 = alloca %struct.device.71*, align 4
  %4 = alloca i32, align 4
  %5 = alloca %struct.imx_gpio_config*, align 4
  %6 = alloca %struct.GPIO_Type*, align 4
  store %struct.device.71* %0, %struct.device.71** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.device.71** %3, metadata !7840, metadata !DIExpression()), !dbg !7841
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !7842, metadata !DIExpression()), !dbg !7843
  call void @llvm.dbg.declare(metadata %struct.imx_gpio_config** %5, metadata !7844, metadata !DIExpression()), !dbg !7845
  %7 = load %struct.device.71*, %struct.device.71** %3, align 4, !dbg !7846
  %8 = getelementptr inbounds %struct.device.71, %struct.device.71* %7, i32 0, i32 1, !dbg !7847
  %9 = load i8*, i8** %8, align 4, !dbg !7847
  %10 = bitcast i8* %9 to %struct.imx_gpio_config*, !dbg !7846
  store %struct.imx_gpio_config* %10, %struct.imx_gpio_config** %5, align 4, !dbg !7845
  call void @llvm.dbg.declare(metadata %struct.GPIO_Type** %6, metadata !7848, metadata !DIExpression()), !dbg !7849
  %11 = load %struct.imx_gpio_config*, %struct.imx_gpio_config** %5, align 4, !dbg !7850
  %12 = getelementptr inbounds %struct.imx_gpio_config, %struct.imx_gpio_config* %11, i32 0, i32 1, !dbg !7851
  %13 = load %struct.GPIO_Type*, %struct.GPIO_Type** %12, align 4, !dbg !7851
  store %struct.GPIO_Type* %13, %struct.GPIO_Type** %6, align 4, !dbg !7849
  %14 = load %struct.GPIO_Type*, %struct.GPIO_Type** %6, align 4, !dbg !7852
  %15 = load %struct.GPIO_Type*, %struct.GPIO_Type** %6, align 4, !dbg !7853
  %16 = call i32 @GPIO_ReadPortInput(%struct.GPIO_Type* noundef %15) #10, !dbg !7854
  %17 = load i32, i32* %4, align 4, !dbg !7855
  %18 = xor i32 %16, %17, !dbg !7856
  call void @GPIO_WritePortOutput(%struct.GPIO_Type* noundef %14, i32 noundef %18) #10, !dbg !7857
  ret i32 0, !dbg !7858
}

; Function Attrs: noinline nounwind optnone
define internal i32 @imx_gpio_pin_interrupt_configure(%struct.device.71* noundef %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) #1 !dbg !7859 {
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca %struct.device.71*, align 4
  %10 = alloca i8, align 1
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca %struct.imx_gpio_config*, align 4
  %14 = alloca %struct.GPIO_Type*, align 4
  %15 = alloca i32*, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i8, align 1
  store %struct.device.71* %0, %struct.device.71** %9, align 4
  call void @llvm.dbg.declare(metadata %struct.device.71** %9, metadata !7860, metadata !DIExpression()), !dbg !7861
  store i8 %1, i8* %10, align 1
  call void @llvm.dbg.declare(metadata i8* %10, metadata !7862, metadata !DIExpression()), !dbg !7863
  store i32 %2, i32* %11, align 4
  call void @llvm.dbg.declare(metadata i32* %11, metadata !7864, metadata !DIExpression()), !dbg !7865
  store i32 %3, i32* %12, align 4
  call void @llvm.dbg.declare(metadata i32* %12, metadata !7866, metadata !DIExpression()), !dbg !7867
  call void @llvm.dbg.declare(metadata %struct.imx_gpio_config** %13, metadata !7868, metadata !DIExpression()), !dbg !7869
  %19 = load %struct.device.71*, %struct.device.71** %9, align 4, !dbg !7870
  %20 = getelementptr inbounds %struct.device.71, %struct.device.71* %19, i32 0, i32 1, !dbg !7871
  %21 = load i8*, i8** %20, align 4, !dbg !7871
  %22 = bitcast i8* %21 to %struct.imx_gpio_config*, !dbg !7870
  store %struct.imx_gpio_config* %22, %struct.imx_gpio_config** %13, align 4, !dbg !7869
  call void @llvm.dbg.declare(metadata %struct.GPIO_Type** %14, metadata !7872, metadata !DIExpression()), !dbg !7873
  %23 = load %struct.imx_gpio_config*, %struct.imx_gpio_config** %13, align 4, !dbg !7874
  %24 = getelementptr inbounds %struct.imx_gpio_config, %struct.imx_gpio_config* %23, i32 0, i32 1, !dbg !7875
  %25 = load %struct.GPIO_Type*, %struct.GPIO_Type** %24, align 4, !dbg !7875
  store %struct.GPIO_Type* %25, %struct.GPIO_Type** %14, align 4, !dbg !7873
  call void @llvm.dbg.declare(metadata i32** %15, metadata !7876, metadata !DIExpression()), !dbg !7877
  call void @llvm.dbg.declare(metadata i32* %16, metadata !7878, metadata !DIExpression()), !dbg !7879
  call void @llvm.dbg.declare(metadata i32* %17, metadata !7880, metadata !DIExpression()), !dbg !7881
  call void @llvm.dbg.declare(metadata i8* %18, metadata !7882, metadata !DIExpression()), !dbg !7883
  %26 = load %struct.GPIO_Type*, %struct.GPIO_Type** %14, align 4, !dbg !7884
  %27 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %26, i32 0, i32 1, !dbg !7886
  %28 = load volatile i32, i32* %27, align 4, !dbg !7886
  %29 = load i8, i8* %10, align 1, !dbg !7887
  %30 = zext i8 %29 to i32, !dbg !7887
  %31 = shl i32 1, %30, !dbg !7887
  %32 = and i32 %28, %31, !dbg !7888
  %33 = icmp ne i32 %32, 0, !dbg !7889
  br i1 %33, label %34, label %38, !dbg !7890

34:                                               ; preds = %4
  %35 = load i32, i32* %11, align 4, !dbg !7891
  %36 = icmp ne i32 %35, 2097152, !dbg !7892
  br i1 %36, label %37, label %38, !dbg !7893

37:                                               ; preds = %34
  store i32 -134, i32* %8, align 4, !dbg !7894
  br label %176, !dbg !7894

38:                                               ; preds = %34, %4
  %39 = load i32, i32* %11, align 4, !dbg !7896
  %40 = icmp eq i32 %39, 20971520, !dbg !7898
  br i1 %40, label %41, label %45, !dbg !7899

41:                                               ; preds = %38
  %42 = load i32, i32* %12, align 4, !dbg !7900
  %43 = icmp eq i32 %42, 33554432, !dbg !7901
  br i1 %43, label %44, label %45, !dbg !7902

44:                                               ; preds = %41
  store i32 3, i32* %17, align 4, !dbg !7903
  br label %62, !dbg !7905

45:                                               ; preds = %41, %38
  %46 = load i32, i32* %11, align 4, !dbg !7906
  %47 = icmp eq i32 %46, 20971520, !dbg !7908
  br i1 %47, label %48, label %52, !dbg !7909

48:                                               ; preds = %45
  %49 = load i32, i32* %12, align 4, !dbg !7910
  %50 = icmp eq i32 %49, 67108864, !dbg !7911
  br i1 %50, label %51, label %52, !dbg !7912

51:                                               ; preds = %48
  store i32 2, i32* %17, align 4, !dbg !7913
  br label %61, !dbg !7915

52:                                               ; preds = %48, %45
  %53 = load i32, i32* %11, align 4, !dbg !7916
  %54 = icmp eq i32 %53, 4194304, !dbg !7918
  br i1 %54, label %55, label %59, !dbg !7919

55:                                               ; preds = %52
  %56 = load i32, i32* %12, align 4, !dbg !7920
  %57 = icmp eq i32 %56, 67108864, !dbg !7921
  br i1 %57, label %58, label %59, !dbg !7922

58:                                               ; preds = %55
  store i32 1, i32* %17, align 4, !dbg !7923
  br label %60, !dbg !7925

59:                                               ; preds = %55, %52
  store i32 0, i32* %17, align 4, !dbg !7926
  br label %60

60:                                               ; preds = %59, %58
  br label %61

61:                                               ; preds = %60, %51
  br label %62

62:                                               ; preds = %61, %44
  %63 = load i8, i8* %10, align 1, !dbg !7928
  %64 = zext i8 %63 to i32, !dbg !7928
  %65 = icmp ult i32 %64, 16, !dbg !7930
  br i1 %65, label %66, label %73, !dbg !7931

66:                                               ; preds = %62
  %67 = load i8, i8* %10, align 1, !dbg !7932
  %68 = zext i8 %67 to i32, !dbg !7932
  %69 = mul i32 2, %68, !dbg !7934
  %70 = trunc i32 %69 to i8, !dbg !7935
  store i8 %70, i8* %18, align 1, !dbg !7936
  %71 = load %struct.GPIO_Type*, %struct.GPIO_Type** %14, align 4, !dbg !7937
  %72 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %71, i32 0, i32 3, !dbg !7938
  store i32* %72, i32** %15, align 4, !dbg !7939
  br label %87, !dbg !7940

73:                                               ; preds = %62
  %74 = load i8, i8* %10, align 1, !dbg !7941
  %75 = zext i8 %74 to i32, !dbg !7941
  %76 = icmp ult i32 %75, 32, !dbg !7943
  br i1 %76, label %77, label %85, !dbg !7944

77:                                               ; preds = %73
  %78 = load i8, i8* %10, align 1, !dbg !7945
  %79 = zext i8 %78 to i32, !dbg !7945
  %80 = sub i32 %79, 16, !dbg !7947
  %81 = mul i32 2, %80, !dbg !7948
  %82 = trunc i32 %81 to i8, !dbg !7949
  store i8 %82, i8* %18, align 1, !dbg !7950
  %83 = load %struct.GPIO_Type*, %struct.GPIO_Type** %14, align 4, !dbg !7951
  %84 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %83, i32 0, i32 4, !dbg !7952
  store i32* %84, i32** %15, align 4, !dbg !7953
  br label %86, !dbg !7954

85:                                               ; preds = %73
  store i32 -22, i32* %8, align 4, !dbg !7955
  br label %176, !dbg !7955

86:                                               ; preds = %77
  br label %87

87:                                               ; preds = %86, %66
  call void @llvm.dbg.declare(metadata i32* %6, metadata !7957, metadata !DIExpression()) #9, !dbg !7961
  call void @llvm.dbg.declare(metadata i32* %7, metadata !7963, metadata !DIExpression()) #9, !dbg !7964
  %88 = call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #9, !dbg !7965, !srcloc !7966
  %89 = extractvalue { i32, i32 } %88, 0, !dbg !7965
  %90 = extractvalue { i32, i32 } %88, 1, !dbg !7965
  store i32 %89, i32* %6, align 4, !dbg !7965
  store i32 %90, i32* %7, align 4, !dbg !7965
  %91 = load i32, i32* %6, align 4, !dbg !7967
  store i32 %91, i32* %16, align 4, !dbg !7968
  %92 = load i32*, i32** %15, align 4, !dbg !7969
  %93 = load volatile i32, i32* %92, align 4, !dbg !7970
  %94 = load i8, i8* %18, align 1, !dbg !7971
  %95 = zext i8 %94 to i32, !dbg !7971
  %96 = shl i32 3, %95, !dbg !7972
  %97 = xor i32 %96, -1, !dbg !7973
  %98 = and i32 %93, %97, !dbg !7974
  %99 = load i32, i32* %17, align 4, !dbg !7975
  %100 = load i8, i8* %18, align 1, !dbg !7976
  %101 = zext i8 %100 to i32, !dbg !7976
  %102 = shl i32 %99, %101, !dbg !7977
  %103 = or i32 %98, %102, !dbg !7978
  %104 = load i32*, i32** %15, align 4, !dbg !7979
  store volatile i32 %103, i32* %104, align 4, !dbg !7980
  %105 = load i32, i32* %12, align 4, !dbg !7981
  %106 = icmp eq i32 %105, 100663296, !dbg !7981
  br i1 %106, label %107, label %115, !dbg !7981

107:                                              ; preds = %87
  %108 = load %struct.GPIO_Type*, %struct.GPIO_Type** %14, align 4, !dbg !7981
  %109 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %108, i32 0, i32 7, !dbg !7981
  %110 = load volatile i32, i32* %109, align 4, !dbg !7981
  %111 = load i8, i8* %10, align 1, !dbg !7981
  %112 = zext i8 %111 to i32, !dbg !7981
  %113 = shl i32 1, %112, !dbg !7981
  %114 = or i32 %110, %113, !dbg !7981
  br label %124, !dbg !7981

115:                                              ; preds = %87
  %116 = load %struct.GPIO_Type*, %struct.GPIO_Type** %14, align 4, !dbg !7981
  %117 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %116, i32 0, i32 7, !dbg !7981
  %118 = load volatile i32, i32* %117, align 4, !dbg !7981
  %119 = load i8, i8* %10, align 1, !dbg !7981
  %120 = zext i8 %119 to i32, !dbg !7981
  %121 = shl i32 1, %120, !dbg !7981
  %122 = xor i32 %121, -1, !dbg !7981
  %123 = and i32 %118, %122, !dbg !7981
  br label %124, !dbg !7981

124:                                              ; preds = %115, %107
  %125 = phi i32 [ %114, %107 ], [ %123, %115 ], !dbg !7981
  %126 = load %struct.GPIO_Type*, %struct.GPIO_Type** %14, align 4, !dbg !7981
  %127 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %126, i32 0, i32 7, !dbg !7981
  store volatile i32 %125, i32* %127, align 4, !dbg !7981
  %128 = load i32, i32* %11, align 4, !dbg !7982
  %129 = icmp ne i32 %128, 2097152, !dbg !7982
  br i1 %129, label %130, label %138, !dbg !7982

130:                                              ; preds = %124
  %131 = load %struct.GPIO_Type*, %struct.GPIO_Type** %14, align 4, !dbg !7982
  %132 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %131, i32 0, i32 6, !dbg !7982
  %133 = load volatile i32, i32* %132, align 4, !dbg !7982
  %134 = load i8, i8* %10, align 1, !dbg !7982
  %135 = zext i8 %134 to i32, !dbg !7982
  %136 = shl i32 1, %135, !dbg !7982
  %137 = or i32 %133, %136, !dbg !7982
  br label %147, !dbg !7982

138:                                              ; preds = %124
  %139 = load %struct.GPIO_Type*, %struct.GPIO_Type** %14, align 4, !dbg !7982
  %140 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %139, i32 0, i32 6, !dbg !7982
  %141 = load volatile i32, i32* %140, align 4, !dbg !7982
  %142 = load i8, i8* %10, align 1, !dbg !7982
  %143 = zext i8 %142 to i32, !dbg !7982
  %144 = shl i32 1, %143, !dbg !7982
  %145 = xor i32 %144, -1, !dbg !7982
  %146 = and i32 %141, %145, !dbg !7982
  br label %147, !dbg !7982

147:                                              ; preds = %138, %130
  %148 = phi i32 [ %137, %130 ], [ %146, %138 ], !dbg !7982
  %149 = load %struct.GPIO_Type*, %struct.GPIO_Type** %14, align 4, !dbg !7982
  %150 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %149, i32 0, i32 6, !dbg !7982
  store volatile i32 %148, i32* %150, align 4, !dbg !7982
  %151 = load i32, i32* %11, align 4, !dbg !7983
  %152 = icmp ne i32 %151, 2097152, !dbg !7983
  br i1 %152, label %153, label %161, !dbg !7983

153:                                              ; preds = %147
  %154 = load %struct.GPIO_Type*, %struct.GPIO_Type** %14, align 4, !dbg !7983
  %155 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %154, i32 0, i32 5, !dbg !7983
  %156 = load volatile i32, i32* %155, align 4, !dbg !7983
  %157 = load i8, i8* %10, align 1, !dbg !7983
  %158 = zext i8 %157 to i32, !dbg !7983
  %159 = shl i32 1, %158, !dbg !7983
  %160 = or i32 %156, %159, !dbg !7983
  br label %170, !dbg !7983

161:                                              ; preds = %147
  %162 = load %struct.GPIO_Type*, %struct.GPIO_Type** %14, align 4, !dbg !7983
  %163 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %162, i32 0, i32 5, !dbg !7983
  %164 = load volatile i32, i32* %163, align 4, !dbg !7983
  %165 = load i8, i8* %10, align 1, !dbg !7983
  %166 = zext i8 %165 to i32, !dbg !7983
  %167 = shl i32 1, %166, !dbg !7983
  %168 = xor i32 %167, -1, !dbg !7983
  %169 = and i32 %164, %168, !dbg !7983
  br label %170, !dbg !7983

170:                                              ; preds = %161, %153
  %171 = phi i32 [ %160, %153 ], [ %169, %161 ], !dbg !7983
  %172 = load %struct.GPIO_Type*, %struct.GPIO_Type** %14, align 4, !dbg !7983
  %173 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %172, i32 0, i32 5, !dbg !7983
  store volatile i32 %171, i32* %173, align 4, !dbg !7983
  %174 = load i32, i32* %16, align 4, !dbg !7984
  store i32 %174, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !7985, metadata !DIExpression()) #9, !dbg !7987
  %175 = load i32, i32* %5, align 4, !dbg !7989
  call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %175) #9, !dbg !7990, !srcloc !7991
  store i32 0, i32* %8, align 4, !dbg !7992
  br label %176, !dbg !7992

176:                                              ; preds = %170, %85, %37
  %177 = load i32, i32* %8, align 4, !dbg !7993
  ret i32 %177, !dbg !7993
}

; Function Attrs: noinline nounwind optnone
define internal i32 @imx_gpio_manage_callback(%struct.device.71* noundef %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #1 !dbg !7994 {
  %4 = alloca %struct.device.71*, align 4
  %5 = alloca %struct.gpio_callback*, align 4
  %6 = alloca i8, align 1
  %7 = alloca %struct.imx_gpio_data*, align 4
  store %struct.device.71* %0, %struct.device.71** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.device.71** %4, metadata !7995, metadata !DIExpression()), !dbg !7996
  store %struct.gpio_callback* %1, %struct.gpio_callback** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.gpio_callback** %5, metadata !7997, metadata !DIExpression()), !dbg !7998
  %8 = zext i1 %2 to i8
  store i8 %8, i8* %6, align 1
  call void @llvm.dbg.declare(metadata i8* %6, metadata !7999, metadata !DIExpression()), !dbg !8000
  call void @llvm.dbg.declare(metadata %struct.imx_gpio_data** %7, metadata !8001, metadata !DIExpression()), !dbg !8003
  %9 = load %struct.device.71*, %struct.device.71** %4, align 4, !dbg !8004
  %10 = getelementptr inbounds %struct.device.71, %struct.device.71* %9, i32 0, i32 4, !dbg !8005
  %11 = load i8*, i8** %10, align 4, !dbg !8005
  %12 = bitcast i8* %11 to %struct.imx_gpio_data*, !dbg !8004
  store %struct.imx_gpio_data* %12, %struct.imx_gpio_data** %7, align 4, !dbg !8003
  %13 = load %struct.imx_gpio_data*, %struct.imx_gpio_data** %7, align 4, !dbg !8006
  %14 = getelementptr inbounds %struct.imx_gpio_data, %struct.imx_gpio_data* %13, i32 0, i32 1, !dbg !8007
  %15 = load %struct.gpio_callback*, %struct.gpio_callback** %5, align 4, !dbg !8008
  %16 = load i8, i8* %6, align 1, !dbg !8009
  %17 = trunc i8 %16 to i1, !dbg !8009
  %18 = call i32 @gpio_manage_callback(%struct._slist* noundef %14, %struct.gpio_callback* noundef %15, i1 noundef zeroext %17) #10, !dbg !8010
  ret i32 %18, !dbg !8011
}

; Function Attrs: noinline nounwind optnone
define internal i32 @gpio_manage_callback(%struct._slist* noundef %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #1 !dbg !8012 {
  %4 = alloca i32, align 4
  %5 = alloca %struct._slist*, align 4
  %6 = alloca %struct.gpio_callback*, align 4
  %7 = alloca i8, align 1
  store %struct._slist* %0, %struct._slist** %5, align 4
  call void @llvm.dbg.declare(metadata %struct._slist** %5, metadata !8017, metadata !DIExpression()), !dbg !8018
  store %struct.gpio_callback* %1, %struct.gpio_callback** %6, align 4
  call void @llvm.dbg.declare(metadata %struct.gpio_callback** %6, metadata !8019, metadata !DIExpression()), !dbg !8020
  %8 = zext i1 %2 to i8
  store i8 %8, i8* %7, align 1
  call void @llvm.dbg.declare(metadata i8* %7, metadata !8021, metadata !DIExpression()), !dbg !8022
  %9 = load %struct._slist*, %struct._slist** %5, align 4, !dbg !8023
  %10 = call zeroext i1 @sys_slist_is_empty(%struct._slist* noundef %9) #10, !dbg !8025
  br i1 %10, label %22, label %11, !dbg !8026

11:                                               ; preds = %3
  %12 = load %struct._slist*, %struct._slist** %5, align 4, !dbg !8027
  %13 = load %struct.gpio_callback*, %struct.gpio_callback** %6, align 4, !dbg !8030
  %14 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %13, i32 0, i32 0, !dbg !8031
  %15 = call zeroext i1 @sys_slist_find_and_remove(%struct._slist* noundef %12, %struct._snode* noundef %14) #10, !dbg !8032
  br i1 %15, label %21, label %16, !dbg !8033

16:                                               ; preds = %11
  %17 = load i8, i8* %7, align 1, !dbg !8034
  %18 = trunc i8 %17 to i1, !dbg !8034
  br i1 %18, label %20, label %19, !dbg !8037

19:                                               ; preds = %16
  store i32 -22, i32* %4, align 4, !dbg !8038
  br label %35, !dbg !8038

20:                                               ; preds = %16
  br label %21, !dbg !8040

21:                                               ; preds = %20, %11
  br label %27, !dbg !8041

22:                                               ; preds = %3
  %23 = load i8, i8* %7, align 1, !dbg !8042
  %24 = trunc i8 %23 to i1, !dbg !8042
  br i1 %24, label %26, label %25, !dbg !8044

25:                                               ; preds = %22
  store i32 -22, i32* %4, align 4, !dbg !8045
  br label %35, !dbg !8045

26:                                               ; preds = %22
  br label %27

27:                                               ; preds = %26, %21
  %28 = load i8, i8* %7, align 1, !dbg !8047
  %29 = trunc i8 %28 to i1, !dbg !8047
  br i1 %29, label %30, label %34, !dbg !8049

30:                                               ; preds = %27
  %31 = load %struct._slist*, %struct._slist** %5, align 4, !dbg !8050
  %32 = load %struct.gpio_callback*, %struct.gpio_callback** %6, align 4, !dbg !8052
  %33 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %32, i32 0, i32 0, !dbg !8053
  call void @sys_slist_prepend(%struct._slist* noundef %31, %struct._snode* noundef %33) #10, !dbg !8054
  br label %34, !dbg !8055

34:                                               ; preds = %30, %27
  store i32 0, i32* %4, align 4, !dbg !8056
  br label %35, !dbg !8056

35:                                               ; preds = %34, %25, %19
  %36 = load i32, i32* %4, align 4, !dbg !8057
  ret i32 %36, !dbg !8057
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @sys_slist_is_empty(%struct._slist* noundef %0) #1 !dbg !8058 {
  %2 = alloca %struct._slist*, align 4
  store %struct._slist* %0, %struct._slist** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._slist** %2, metadata !8061, metadata !DIExpression()), !dbg !8062
  %3 = load %struct._slist*, %struct._slist** %2, align 4, !dbg !8062
  %4 = call %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %3) #10, !dbg !8062
  %5 = icmp eq %struct._snode* %4, null, !dbg !8062
  ret i1 %5, !dbg !8062
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @sys_slist_find_and_remove(%struct._slist* noundef %0, %struct._snode* noundef %1) #1 !dbg !8063 {
  %3 = alloca i1, align 1
  %4 = alloca %struct._slist*, align 4
  %5 = alloca %struct._snode*, align 4
  %6 = alloca %struct._snode*, align 4
  %7 = alloca %struct._snode*, align 4
  store %struct._slist* %0, %struct._slist** %4, align 4
  call void @llvm.dbg.declare(metadata %struct._slist** %4, metadata !8066, metadata !DIExpression()), !dbg !8067
  store %struct._snode* %1, %struct._snode** %5, align 4
  call void @llvm.dbg.declare(metadata %struct._snode** %5, metadata !8068, metadata !DIExpression()), !dbg !8067
  call void @llvm.dbg.declare(metadata %struct._snode** %6, metadata !8069, metadata !DIExpression()), !dbg !8067
  store %struct._snode* null, %struct._snode** %6, align 4, !dbg !8067
  call void @llvm.dbg.declare(metadata %struct._snode** %7, metadata !8070, metadata !DIExpression()), !dbg !8067
  %8 = load %struct._slist*, %struct._slist** %4, align 4, !dbg !8071
  %9 = call %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %8) #10, !dbg !8071
  store %struct._snode* %9, %struct._snode** %7, align 4, !dbg !8071
  br label %10, !dbg !8071

10:                                               ; preds = %23, %2
  %11 = load %struct._snode*, %struct._snode** %7, align 4, !dbg !8073
  %12 = icmp ne %struct._snode* %11, null, !dbg !8073
  br i1 %12, label %13, label %26, !dbg !8071

13:                                               ; preds = %10
  %14 = load %struct._snode*, %struct._snode** %7, align 4, !dbg !8075
  %15 = load %struct._snode*, %struct._snode** %5, align 4, !dbg !8075
  %16 = icmp eq %struct._snode* %14, %15, !dbg !8075
  br i1 %16, label %17, label %21, !dbg !8078

17:                                               ; preds = %13
  %18 = load %struct._slist*, %struct._slist** %4, align 4, !dbg !8079
  %19 = load %struct._snode*, %struct._snode** %6, align 4, !dbg !8079
  %20 = load %struct._snode*, %struct._snode** %5, align 4, !dbg !8079
  call void @sys_slist_remove(%struct._slist* noundef %18, %struct._snode* noundef %19, %struct._snode* noundef %20) #10, !dbg !8079
  store i1 true, i1* %3, align 1, !dbg !8079
  br label %27, !dbg !8079

21:                                               ; preds = %13
  %22 = load %struct._snode*, %struct._snode** %7, align 4, !dbg !8078
  store %struct._snode* %22, %struct._snode** %6, align 4, !dbg !8078
  br label %23, !dbg !8078

23:                                               ; preds = %21
  %24 = load %struct._snode*, %struct._snode** %7, align 4, !dbg !8073
  %25 = call %struct._snode* @sys_slist_peek_next(%struct._snode* noundef %24) #10, !dbg !8073
  store %struct._snode* %25, %struct._snode** %7, align 4, !dbg !8073
  br label %10, !dbg !8073, !llvm.loop !8081

26:                                               ; preds = %10
  store i1 false, i1* %3, align 1, !dbg !8067
  br label %27, !dbg !8067

27:                                               ; preds = %26, %17
  %28 = load i1, i1* %3, align 1, !dbg !8067
  ret i1 %28, !dbg !8067
}

; Function Attrs: noinline nounwind optnone
define internal void @sys_slist_prepend(%struct._slist* noundef %0, %struct._snode* noundef %1) #1 !dbg !8082 {
  %3 = alloca %struct._slist*, align 4
  %4 = alloca %struct._snode*, align 4
  store %struct._slist* %0, %struct._slist** %3, align 4
  call void @llvm.dbg.declare(metadata %struct._slist** %3, metadata !8085, metadata !DIExpression()), !dbg !8086
  store %struct._snode* %1, %struct._snode** %4, align 4
  call void @llvm.dbg.declare(metadata %struct._snode** %4, metadata !8087, metadata !DIExpression()), !dbg !8086
  %5 = load %struct._snode*, %struct._snode** %4, align 4, !dbg !8086
  %6 = load %struct._slist*, %struct._slist** %3, align 4, !dbg !8086
  %7 = call %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %6) #10, !dbg !8086
  call void @z_snode_next_set(%struct._snode* noundef %5, %struct._snode* noundef %7) #10, !dbg !8086
  %8 = load %struct._slist*, %struct._slist** %3, align 4, !dbg !8086
  %9 = load %struct._snode*, %struct._snode** %4, align 4, !dbg !8086
  call void @z_slist_head_set(%struct._slist* noundef %8, %struct._snode* noundef %9) #10, !dbg !8086
  %10 = load %struct._slist*, %struct._slist** %3, align 4, !dbg !8088
  %11 = call %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %10) #10, !dbg !8088
  %12 = icmp eq %struct._snode* %11, null, !dbg !8088
  br i1 %12, label %13, label %17, !dbg !8086

13:                                               ; preds = %2
  %14 = load %struct._slist*, %struct._slist** %3, align 4, !dbg !8090
  %15 = load %struct._slist*, %struct._slist** %3, align 4, !dbg !8090
  %16 = call %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %15) #10, !dbg !8090
  call void @z_slist_tail_set(%struct._slist* noundef %14, %struct._snode* noundef %16) #10, !dbg !8090
  br label %17, !dbg !8090

17:                                               ; preds = %13, %2
  ret void, !dbg !8086
}

; Function Attrs: noinline nounwind optnone
define internal %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #1 !dbg !8092 {
  %2 = alloca %struct._slist*, align 4
  store %struct._slist* %0, %struct._slist** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._slist** %2, metadata !8095, metadata !DIExpression()), !dbg !8096
  %3 = load %struct._slist*, %struct._slist** %2, align 4, !dbg !8097
  %4 = getelementptr inbounds %struct._slist, %struct._slist* %3, i32 0, i32 0, !dbg !8098
  %5 = load %struct._snode*, %struct._snode** %4, align 4, !dbg !8098
  ret %struct._snode* %5, !dbg !8099
}

; Function Attrs: noinline nounwind optnone
define internal void @z_snode_next_set(%struct._snode* noundef %0, %struct._snode* noundef %1) #1 !dbg !8100 {
  %3 = alloca %struct._snode*, align 4
  %4 = alloca %struct._snode*, align 4
  store %struct._snode* %0, %struct._snode** %3, align 4
  call void @llvm.dbg.declare(metadata %struct._snode** %3, metadata !8103, metadata !DIExpression()), !dbg !8104
  store %struct._snode* %1, %struct._snode** %4, align 4
  call void @llvm.dbg.declare(metadata %struct._snode** %4, metadata !8105, metadata !DIExpression()), !dbg !8106
  %5 = load %struct._snode*, %struct._snode** %4, align 4, !dbg !8107
  %6 = load %struct._snode*, %struct._snode** %3, align 4, !dbg !8108
  %7 = getelementptr inbounds %struct._snode, %struct._snode* %6, i32 0, i32 0, !dbg !8109
  store %struct._snode* %5, %struct._snode** %7, align 4, !dbg !8110
  ret void, !dbg !8111
}

; Function Attrs: noinline nounwind optnone
define internal void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %1) #1 !dbg !8112 {
  %3 = alloca %struct._slist*, align 4
  %4 = alloca %struct._snode*, align 4
  store %struct._slist* %0, %struct._slist** %3, align 4
  call void @llvm.dbg.declare(metadata %struct._slist** %3, metadata !8113, metadata !DIExpression()), !dbg !8114
  store %struct._snode* %1, %struct._snode** %4, align 4
  call void @llvm.dbg.declare(metadata %struct._snode** %4, metadata !8115, metadata !DIExpression()), !dbg !8116
  %5 = load %struct._snode*, %struct._snode** %4, align 4, !dbg !8117
  %6 = load %struct._slist*, %struct._slist** %3, align 4, !dbg !8118
  %7 = getelementptr inbounds %struct._slist, %struct._slist* %6, i32 0, i32 0, !dbg !8119
  store %struct._snode* %5, %struct._snode** %7, align 4, !dbg !8120
  ret void, !dbg !8121
}

; Function Attrs: noinline nounwind optnone
define internal %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #1 !dbg !8122 {
  %2 = alloca %struct._slist*, align 4
  store %struct._slist* %0, %struct._slist** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._slist** %2, metadata !8123, metadata !DIExpression()), !dbg !8124
  %3 = load %struct._slist*, %struct._slist** %2, align 4, !dbg !8125
  %4 = getelementptr inbounds %struct._slist, %struct._slist* %3, i32 0, i32 1, !dbg !8126
  %5 = load %struct._snode*, %struct._snode** %4, align 4, !dbg !8126
  ret %struct._snode* %5, !dbg !8127
}

; Function Attrs: noinline nounwind optnone
define internal void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %1) #1 !dbg !8128 {
  %3 = alloca %struct._slist*, align 4
  %4 = alloca %struct._snode*, align 4
  store %struct._slist* %0, %struct._slist** %3, align 4
  call void @llvm.dbg.declare(metadata %struct._slist** %3, metadata !8129, metadata !DIExpression()), !dbg !8130
  store %struct._snode* %1, %struct._snode** %4, align 4
  call void @llvm.dbg.declare(metadata %struct._snode** %4, metadata !8131, metadata !DIExpression()), !dbg !8132
  %5 = load %struct._snode*, %struct._snode** %4, align 4, !dbg !8133
  %6 = load %struct._slist*, %struct._slist** %3, align 4, !dbg !8134
  %7 = getelementptr inbounds %struct._slist, %struct._slist* %6, i32 0, i32 1, !dbg !8135
  store %struct._snode* %5, %struct._snode** %7, align 4, !dbg !8136
  ret void, !dbg !8137
}

; Function Attrs: noinline nounwind optnone
define internal void @sys_slist_remove(%struct._slist* noundef %0, %struct._snode* noundef %1, %struct._snode* noundef %2) #1 !dbg !8138 {
  %4 = alloca %struct._slist*, align 4
  %5 = alloca %struct._snode*, align 4
  %6 = alloca %struct._snode*, align 4
  store %struct._slist* %0, %struct._slist** %4, align 4
  call void @llvm.dbg.declare(metadata %struct._slist** %4, metadata !8141, metadata !DIExpression()), !dbg !8142
  store %struct._snode* %1, %struct._snode** %5, align 4
  call void @llvm.dbg.declare(metadata %struct._snode** %5, metadata !8143, metadata !DIExpression()), !dbg !8142
  store %struct._snode* %2, %struct._snode** %6, align 4
  call void @llvm.dbg.declare(metadata %struct._snode** %6, metadata !8144, metadata !DIExpression()), !dbg !8142
  %7 = load %struct._snode*, %struct._snode** %5, align 4, !dbg !8145
  %8 = icmp eq %struct._snode* %7, null, !dbg !8145
  br i1 %8, label %9, label %22, !dbg !8142

9:                                                ; preds = %3
  %10 = load %struct._slist*, %struct._slist** %4, align 4, !dbg !8147
  %11 = load %struct._snode*, %struct._snode** %6, align 4, !dbg !8147
  %12 = call %struct._snode* @z_snode_next_peek(%struct._snode* noundef %11) #10, !dbg !8147
  call void @z_slist_head_set(%struct._slist* noundef %10, %struct._snode* noundef %12) #10, !dbg !8147
  %13 = load %struct._slist*, %struct._slist** %4, align 4, !dbg !8149
  %14 = call %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %13) #10, !dbg !8149
  %15 = load %struct._snode*, %struct._snode** %6, align 4, !dbg !8149
  %16 = icmp eq %struct._snode* %14, %15, !dbg !8149
  br i1 %16, label %17, label %21, !dbg !8147

17:                                               ; preds = %9
  %18 = load %struct._slist*, %struct._slist** %4, align 4, !dbg !8151
  %19 = load %struct._slist*, %struct._slist** %4, align 4, !dbg !8151
  %20 = call %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %19) #10, !dbg !8151
  call void @z_slist_tail_set(%struct._slist* noundef %18, %struct._snode* noundef %20) #10, !dbg !8151
  br label %21, !dbg !8151

21:                                               ; preds = %17, %9
  br label %34, !dbg !8147

22:                                               ; preds = %3
  %23 = load %struct._snode*, %struct._snode** %5, align 4, !dbg !8153
  %24 = load %struct._snode*, %struct._snode** %6, align 4, !dbg !8153
  %25 = call %struct._snode* @z_snode_next_peek(%struct._snode* noundef %24) #10, !dbg !8153
  call void @z_snode_next_set(%struct._snode* noundef %23, %struct._snode* noundef %25) #10, !dbg !8153
  %26 = load %struct._slist*, %struct._slist** %4, align 4, !dbg !8155
  %27 = call %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %26) #10, !dbg !8155
  %28 = load %struct._snode*, %struct._snode** %6, align 4, !dbg !8155
  %29 = icmp eq %struct._snode* %27, %28, !dbg !8155
  br i1 %29, label %30, label %33, !dbg !8153

30:                                               ; preds = %22
  %31 = load %struct._slist*, %struct._slist** %4, align 4, !dbg !8157
  %32 = load %struct._snode*, %struct._snode** %5, align 4, !dbg !8157
  call void @z_slist_tail_set(%struct._slist* noundef %31, %struct._snode* noundef %32) #10, !dbg !8157
  br label %33, !dbg !8157

33:                                               ; preds = %30, %22
  br label %34

34:                                               ; preds = %33, %21
  %35 = load %struct._snode*, %struct._snode** %6, align 4, !dbg !8142
  call void @z_snode_next_set(%struct._snode* noundef %35, %struct._snode* noundef null) #10, !dbg !8142
  ret void, !dbg !8142
}

; Function Attrs: noinline nounwind optnone
define internal %struct._snode* @sys_slist_peek_next(%struct._snode* noundef %0) #1 !dbg !8159 {
  %2 = alloca %struct._snode*, align 4
  store %struct._snode* %0, %struct._snode** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._snode** %2, metadata !8162, metadata !DIExpression()), !dbg !8163
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !8163
  %4 = icmp ne %struct._snode* %3, null, !dbg !8163
  br i1 %4, label %5, label %8, !dbg !8163

5:                                                ; preds = %1
  %6 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !8163
  %7 = call %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* noundef %6) #10, !dbg !8163
  br label %9, !dbg !8163

8:                                                ; preds = %1
  br label %9, !dbg !8163

9:                                                ; preds = %8, %5
  %10 = phi %struct._snode* [ %7, %5 ], [ null, %8 ], !dbg !8163
  ret %struct._snode* %10, !dbg !8163
}

; Function Attrs: noinline nounwind optnone
define internal %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* noundef %0) #1 !dbg !8164 {
  %2 = alloca %struct._snode*, align 4
  store %struct._snode* %0, %struct._snode** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._snode** %2, metadata !8165, metadata !DIExpression()), !dbg !8166
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !8166
  %4 = call %struct._snode* @z_snode_next_peek(%struct._snode* noundef %3) #10, !dbg !8166
  ret %struct._snode* %4, !dbg !8166
}

; Function Attrs: noinline nounwind optnone
define internal %struct._snode* @z_snode_next_peek(%struct._snode* noundef %0) #1 !dbg !8167 {
  %2 = alloca %struct._snode*, align 4
  store %struct._snode* %0, %struct._snode** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._snode** %2, metadata !8168, metadata !DIExpression()), !dbg !8169
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !8170
  %4 = getelementptr inbounds %struct._snode, %struct._snode* %3, i32 0, i32 0, !dbg !8171
  %5 = load %struct._snode*, %struct._snode** %4, align 4, !dbg !8171
  ret %struct._snode* %5, !dbg !8172
}

; Function Attrs: noinline nounwind optnone
define internal i32 @GPIO_ReadPortInput(%struct.GPIO_Type* noundef %0) #1 !dbg !8173 {
  %2 = alloca %struct.GPIO_Type*, align 4
  store %struct.GPIO_Type* %0, %struct.GPIO_Type** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.GPIO_Type** %2, metadata !8176, metadata !DIExpression()), !dbg !8177
  %3 = load %struct.GPIO_Type*, %struct.GPIO_Type** %2, align 4, !dbg !8178
  %4 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %3, i32 0, i32 0, !dbg !8178
  %5 = load volatile i32, i32* %4, align 4, !dbg !8178
  ret i32 %5, !dbg !8179
}

; Function Attrs: noinline nounwind optnone
define internal void @GPIO_WritePortOutput(%struct.GPIO_Type* noundef %0, i32 noundef %1) #1 !dbg !8180 {
  %3 = alloca %struct.GPIO_Type*, align 4
  %4 = alloca i32, align 4
  store %struct.GPIO_Type* %0, %struct.GPIO_Type** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.GPIO_Type** %3, metadata !8183, metadata !DIExpression()), !dbg !8184
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !8185, metadata !DIExpression()), !dbg !8186
  %5 = load i32, i32* %4, align 4, !dbg !8187
  %6 = load %struct.GPIO_Type*, %struct.GPIO_Type** %3, align 4, !dbg !8188
  %7 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %6, i32 0, i32 0, !dbg !8188
  store volatile i32 %5, i32* %7, align 4, !dbg !8189
  ret void, !dbg !8190
}

; Function Attrs: noinline nounwind optnone
define internal void @imx_gpio_port_isr(%struct.device.71* noundef %0) #1 !dbg !8191 {
  %2 = alloca %struct.device.71*, align 4
  %3 = alloca %struct.imx_gpio_config*, align 4
  %4 = alloca %struct.imx_gpio_data*, align 4
  %5 = alloca i32, align 4
  store %struct.device.71* %0, %struct.device.71** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.device.71** %2, metadata !8194, metadata !DIExpression()), !dbg !8195
  call void @llvm.dbg.declare(metadata %struct.imx_gpio_config** %3, metadata !8196, metadata !DIExpression()), !dbg !8197
  %6 = load %struct.device.71*, %struct.device.71** %2, align 4, !dbg !8198
  %7 = getelementptr inbounds %struct.device.71, %struct.device.71* %6, i32 0, i32 1, !dbg !8199
  %8 = load i8*, i8** %7, align 4, !dbg !8199
  %9 = bitcast i8* %8 to %struct.imx_gpio_config*, !dbg !8198
  store %struct.imx_gpio_config* %9, %struct.imx_gpio_config** %3, align 4, !dbg !8197
  call void @llvm.dbg.declare(metadata %struct.imx_gpio_data** %4, metadata !8200, metadata !DIExpression()), !dbg !8201
  %10 = load %struct.device.71*, %struct.device.71** %2, align 4, !dbg !8202
  %11 = getelementptr inbounds %struct.device.71, %struct.device.71* %10, i32 0, i32 4, !dbg !8203
  %12 = load i8*, i8** %11, align 4, !dbg !8203
  %13 = bitcast i8* %12 to %struct.imx_gpio_data*, !dbg !8202
  store %struct.imx_gpio_data* %13, %struct.imx_gpio_data** %4, align 4, !dbg !8201
  call void @llvm.dbg.declare(metadata i32* %5, metadata !8204, metadata !DIExpression()), !dbg !8205
  %14 = load %struct.imx_gpio_config*, %struct.imx_gpio_config** %3, align 4, !dbg !8206
  %15 = getelementptr inbounds %struct.imx_gpio_config, %struct.imx_gpio_config* %14, i32 0, i32 1, !dbg !8207
  %16 = load %struct.GPIO_Type*, %struct.GPIO_Type** %15, align 4, !dbg !8207
  %17 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %16, i32 0, i32 6, !dbg !8208
  %18 = load volatile i32, i32* %17, align 4, !dbg !8208
  store i32 %18, i32* %5, align 4, !dbg !8209
  %19 = load i32, i32* %5, align 4, !dbg !8210
  %20 = load %struct.imx_gpio_config*, %struct.imx_gpio_config** %3, align 4, !dbg !8211
  %21 = getelementptr inbounds %struct.imx_gpio_config, %struct.imx_gpio_config* %20, i32 0, i32 1, !dbg !8212
  %22 = load %struct.GPIO_Type*, %struct.GPIO_Type** %21, align 4, !dbg !8212
  %23 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %22, i32 0, i32 6, !dbg !8213
  store volatile i32 %19, i32* %23, align 4, !dbg !8214
  %24 = load %struct.imx_gpio_data*, %struct.imx_gpio_data** %4, align 4, !dbg !8215
  %25 = getelementptr inbounds %struct.imx_gpio_data, %struct.imx_gpio_data* %24, i32 0, i32 1, !dbg !8216
  %26 = load %struct.device.71*, %struct.device.71** %2, align 4, !dbg !8217
  %27 = load i32, i32* %5, align 4, !dbg !8218
  call void @gpio_fire_callbacks(%struct._slist* noundef %25, %struct.device.71* noundef %26, i32 noundef %27) #10, !dbg !8219
  ret void, !dbg !8220
}

; Function Attrs: noinline nounwind optnone
define internal void @gpio_fire_callbacks(%struct._slist* noundef %0, %struct.device.71* noundef %1, i32 noundef %2) #1 !dbg !8221 {
  %4 = alloca %struct._slist*, align 4
  %5 = alloca %struct.device.71*, align 4
  %6 = alloca i32, align 4
  %7 = alloca %struct.gpio_callback*, align 4
  %8 = alloca %struct.gpio_callback*, align 4
  store %struct._slist* %0, %struct._slist** %4, align 4
  call void @llvm.dbg.declare(metadata %struct._slist** %4, metadata !8224, metadata !DIExpression()), !dbg !8225
  store %struct.device.71* %1, %struct.device.71** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.device.71** %5, metadata !8226, metadata !DIExpression()), !dbg !8227
  store i32 %2, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !8228, metadata !DIExpression()), !dbg !8229
  call void @llvm.dbg.declare(metadata %struct.gpio_callback** %7, metadata !8230, metadata !DIExpression()), !dbg !8231
  call void @llvm.dbg.declare(metadata %struct.gpio_callback** %8, metadata !8232, metadata !DIExpression()), !dbg !8233
  %9 = load %struct._slist*, %struct._slist** %4, align 4, !dbg !8234
  %10 = call %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %9) #10, !dbg !8234
  %11 = icmp ne %struct._snode* %10, null, !dbg !8234
  br i1 %11, label %12, label %18, !dbg !8234

12:                                               ; preds = %3
  %13 = load %struct._slist*, %struct._slist** %4, align 4, !dbg !8234
  %14 = call %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %13) #10, !dbg !8234
  %15 = bitcast %struct._snode* %14 to i8*, !dbg !8234
  %16 = getelementptr inbounds i8, i8* %15, i32 0, !dbg !8234
  %17 = bitcast i8* %16 to %struct.gpio_callback*, !dbg !8234
  br label %19, !dbg !8234

18:                                               ; preds = %3
  br label %19, !dbg !8234

19:                                               ; preds = %18, %12
  %20 = phi %struct.gpio_callback* [ %17, %12 ], [ null, %18 ], !dbg !8234
  store %struct.gpio_callback* %20, %struct.gpio_callback** %7, align 4, !dbg !8234
  %21 = load %struct.gpio_callback*, %struct.gpio_callback** %7, align 4, !dbg !8234
  %22 = icmp ne %struct.gpio_callback* %21, null, !dbg !8234
  br i1 %22, label %23, label %38, !dbg !8234

23:                                               ; preds = %19
  %24 = load %struct.gpio_callback*, %struct.gpio_callback** %7, align 4, !dbg !8234
  %25 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %24, i32 0, i32 0, !dbg !8234
  %26 = call %struct._snode* @sys_slist_peek_next(%struct._snode* noundef %25) #10, !dbg !8234
  %27 = icmp ne %struct._snode* %26, null, !dbg !8234
  br i1 %27, label %28, label %35, !dbg !8234

28:                                               ; preds = %23
  %29 = load %struct.gpio_callback*, %struct.gpio_callback** %7, align 4, !dbg !8234
  %30 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %29, i32 0, i32 0, !dbg !8234
  %31 = call %struct._snode* @sys_slist_peek_next(%struct._snode* noundef %30) #10, !dbg !8234
  %32 = bitcast %struct._snode* %31 to i8*, !dbg !8234
  %33 = getelementptr inbounds i8, i8* %32, i32 0, !dbg !8234
  %34 = bitcast i8* %33 to %struct.gpio_callback*, !dbg !8234
  br label %36, !dbg !8234

35:                                               ; preds = %23
  br label %36, !dbg !8234

36:                                               ; preds = %35, %28
  %37 = phi %struct.gpio_callback* [ %34, %28 ], [ null, %35 ], !dbg !8234
  br label %39, !dbg !8234

38:                                               ; preds = %19
  br label %39, !dbg !8234

39:                                               ; preds = %38, %36
  %40 = phi %struct.gpio_callback* [ %37, %36 ], [ null, %38 ], !dbg !8234
  store %struct.gpio_callback* %40, %struct.gpio_callback** %8, align 4, !dbg !8234
  br label %41, !dbg !8234

41:                                               ; preds = %83, %39
  %42 = load %struct.gpio_callback*, %struct.gpio_callback** %7, align 4, !dbg !8236
  %43 = icmp ne %struct.gpio_callback* %42, null, !dbg !8236
  br i1 %43, label %44, label %85, !dbg !8234

44:                                               ; preds = %41
  %45 = load %struct.gpio_callback*, %struct.gpio_callback** %7, align 4, !dbg !8238
  %46 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %45, i32 0, i32 2, !dbg !8241
  %47 = load i32, i32* %46, align 4, !dbg !8241
  %48 = load i32, i32* %6, align 4, !dbg !8242
  %49 = and i32 %47, %48, !dbg !8243
  %50 = icmp ne i32 %49, 0, !dbg !8243
  br i1 %50, label %51, label %62, !dbg !8244

51:                                               ; preds = %44
  %52 = load %struct.gpio_callback*, %struct.gpio_callback** %7, align 4, !dbg !8245
  %53 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %52, i32 0, i32 1, !dbg !8247
  %54 = load void (%struct.device.71*, %struct.gpio_callback*, i32)*, void (%struct.device.71*, %struct.gpio_callback*, i32)** %53, align 4, !dbg !8247
  %55 = load %struct.device.71*, %struct.device.71** %5, align 4, !dbg !8248
  %56 = load %struct.gpio_callback*, %struct.gpio_callback** %7, align 4, !dbg !8249
  %57 = load %struct.gpio_callback*, %struct.gpio_callback** %7, align 4, !dbg !8250
  %58 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %57, i32 0, i32 2, !dbg !8251
  %59 = load i32, i32* %58, align 4, !dbg !8251
  %60 = load i32, i32* %6, align 4, !dbg !8252
  %61 = and i32 %59, %60, !dbg !8253
  call void %54(%struct.device.71* noundef %55, %struct.gpio_callback* noundef %56, i32 noundef %61) #10, !dbg !8245
  br label %62, !dbg !8254

62:                                               ; preds = %51, %44
  br label %63, !dbg !8255

63:                                               ; preds = %62
  %64 = load %struct.gpio_callback*, %struct.gpio_callback** %8, align 4, !dbg !8236
  store %struct.gpio_callback* %64, %struct.gpio_callback** %7, align 4, !dbg !8236
  %65 = load %struct.gpio_callback*, %struct.gpio_callback** %7, align 4, !dbg !8236
  %66 = icmp ne %struct.gpio_callback* %65, null, !dbg !8236
  br i1 %66, label %67, label %82, !dbg !8236

67:                                               ; preds = %63
  %68 = load %struct.gpio_callback*, %struct.gpio_callback** %7, align 4, !dbg !8236
  %69 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %68, i32 0, i32 0, !dbg !8236
  %70 = call %struct._snode* @sys_slist_peek_next(%struct._snode* noundef %69) #10, !dbg !8236
  %71 = icmp ne %struct._snode* %70, null, !dbg !8236
  br i1 %71, label %72, label %79, !dbg !8236

72:                                               ; preds = %67
  %73 = load %struct.gpio_callback*, %struct.gpio_callback** %7, align 4, !dbg !8236
  %74 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %73, i32 0, i32 0, !dbg !8236
  %75 = call %struct._snode* @sys_slist_peek_next(%struct._snode* noundef %74) #10, !dbg !8236
  %76 = bitcast %struct._snode* %75 to i8*, !dbg !8236
  %77 = getelementptr inbounds i8, i8* %76, i32 0, !dbg !8236
  %78 = bitcast i8* %77 to %struct.gpio_callback*, !dbg !8236
  br label %80, !dbg !8236

79:                                               ; preds = %67
  br label %80, !dbg !8236

80:                                               ; preds = %79, %72
  %81 = phi %struct.gpio_callback* [ %78, %72 ], [ null, %79 ], !dbg !8236
  br label %83, !dbg !8236

82:                                               ; preds = %63
  br label %83, !dbg !8236

83:                                               ; preds = %82, %80
  %84 = phi %struct.gpio_callback* [ %81, %80 ], [ null, %82 ], !dbg !8236
  store %struct.gpio_callback* %84, %struct.gpio_callback** %8, align 4, !dbg !8236
  br label %41, !dbg !8236, !llvm.loop !8256

85:                                               ; preds = %41
  ret void, !dbg !8258
}

; Function Attrs: noinline nounwind optnone
define internal i32 @imx_gpio_0_init(%struct.device.71* noundef %0) #1 !dbg !994 {
  %2 = alloca %struct.device.71*, align 4
  store %struct.device.71* %0, %struct.device.71** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.device.71** %2, metadata !8259, metadata !DIExpression()), !dbg !8260
  call void @z_arm_irq_priority_set(i32 noundef 64, i32 noundef 0, i32 noundef 0) #10, !dbg !8261
  call void @arch_irq_enable(i32 noundef 64) #10, !dbg !8260
  call void @z_arm_irq_priority_set(i32 noundef 65, i32 noundef 0, i32 noundef 0) #10, !dbg !8263
  call void @arch_irq_enable(i32 noundef 65) #10, !dbg !8260
  ret i32 0, !dbg !8260
}

; Function Attrs: noinline nounwind optnone
define internal i32 @uart_imx_poll_in(%struct.device.71* noundef %0, i8* noundef %1) #1 !dbg !8265 {
  %3 = alloca %struct.device.71*, align 4
  %4 = alloca i8*, align 4
  %5 = alloca %struct.UART_Type*, align 4
  %6 = alloca i32, align 4
  store %struct.device.71* %0, %struct.device.71** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.device.71** %3, metadata !8266, metadata !DIExpression()), !dbg !8267
  store i8* %1, i8** %4, align 4
  call void @llvm.dbg.declare(metadata i8** %4, metadata !8268, metadata !DIExpression()), !dbg !8269
  call void @llvm.dbg.declare(metadata %struct.UART_Type** %5, metadata !8270, metadata !DIExpression()), !dbg !8271
  %7 = load %struct.device.71*, %struct.device.71** %3, align 4, !dbg !8272
  %8 = getelementptr inbounds %struct.device.71, %struct.device.71* %7, i32 0, i32 1, !dbg !8272
  %9 = load i8*, i8** %8, align 4, !dbg !8272
  %10 = bitcast i8* %9 to %struct.imx_uart_config*, !dbg !8272
  %11 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %10, i32 0, i32 0, !dbg !8272
  %12 = load %struct.UART_Type*, %struct.UART_Type** %11, align 4, !dbg !8272
  store %struct.UART_Type* %12, %struct.UART_Type** %5, align 4, !dbg !8271
  call void @llvm.dbg.declare(metadata i32* %6, metadata !8273, metadata !DIExpression()), !dbg !8274
  store i32 -1, i32* %6, align 4, !dbg !8274
  %13 = load %struct.UART_Type*, %struct.UART_Type** %5, align 4, !dbg !8275
  %14 = call zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %13, i32 noundef 9961472) #10, !dbg !8277
  br i1 %14, label %15, label %24, !dbg !8278

15:                                               ; preds = %2
  %16 = load %struct.UART_Type*, %struct.UART_Type** %5, align 4, !dbg !8279
  %17 = call zeroext i8 @UART_Getchar(%struct.UART_Type* noundef %16) #10, !dbg !8281
  %18 = load i8*, i8** %4, align 4, !dbg !8282
  store i8 %17, i8* %18, align 1, !dbg !8283
  %19 = load %struct.UART_Type*, %struct.UART_Type** %5, align 4, !dbg !8284
  %20 = call zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %19, i32 noundef 9961473) #10, !dbg !8286
  br i1 %20, label %21, label %23, !dbg !8287

21:                                               ; preds = %15
  %22 = load %struct.UART_Type*, %struct.UART_Type** %5, align 4, !dbg !8288
  call void @UART_ClearStatusFlag(%struct.UART_Type* noundef %22, i32 noundef 9961473) #10, !dbg !8290
  br label %23, !dbg !8291

23:                                               ; preds = %21, %15
  store i32 0, i32* %6, align 4, !dbg !8292
  br label %24, !dbg !8293

24:                                               ; preds = %23, %2
  %25 = load i32, i32* %6, align 4, !dbg !8294
  ret i32 %25, !dbg !8295
}

; Function Attrs: noinline nounwind optnone
define internal void @uart_imx_poll_out(%struct.device.71* noundef %0, i8 noundef zeroext %1) #1 !dbg !8296 {
  %3 = alloca %struct.device.71*, align 4
  %4 = alloca i8, align 1
  %5 = alloca %struct.UART_Type*, align 4
  store %struct.device.71* %0, %struct.device.71** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.device.71** %3, metadata !8297, metadata !DIExpression()), !dbg !8298
  store i8 %1, i8* %4, align 1
  call void @llvm.dbg.declare(metadata i8* %4, metadata !8299, metadata !DIExpression()), !dbg !8300
  call void @llvm.dbg.declare(metadata %struct.UART_Type** %5, metadata !8301, metadata !DIExpression()), !dbg !8302
  %6 = load %struct.device.71*, %struct.device.71** %3, align 4, !dbg !8303
  %7 = getelementptr inbounds %struct.device.71, %struct.device.71* %6, i32 0, i32 1, !dbg !8303
  %8 = load i8*, i8** %7, align 4, !dbg !8303
  %9 = bitcast i8* %8 to %struct.imx_uart_config*, !dbg !8303
  %10 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %9, i32 0, i32 0, !dbg !8303
  %11 = load %struct.UART_Type*, %struct.UART_Type** %10, align 4, !dbg !8303
  store %struct.UART_Type* %11, %struct.UART_Type** %5, align 4, !dbg !8302
  br label %12, !dbg !8304

12:                                               ; preds = %16, %2
  %13 = load %struct.UART_Type*, %struct.UART_Type** %5, align 4, !dbg !8305
  %14 = call zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %13, i32 noundef 9699341) #10, !dbg !8306
  %15 = xor i1 %14, true, !dbg !8307
  br i1 %15, label %16, label %17, !dbg !8304

16:                                               ; preds = %12
  br label %12, !dbg !8304, !llvm.loop !8308

17:                                               ; preds = %12
  %18 = load %struct.UART_Type*, %struct.UART_Type** %5, align 4, !dbg !8310
  %19 = load i8, i8* %4, align 1, !dbg !8311
  call void @UART_Putchar(%struct.UART_Type* noundef %18, i8 noundef zeroext %19) #10, !dbg !8312
  ret void, !dbg !8313
}

; Function Attrs: noinline nounwind optnone
define internal i32 @uart_imx_fifo_fill(%struct.device.71* noundef %0, i8* noundef %1, i32 noundef %2) #1 !dbg !8314 {
  %4 = alloca %struct.device.71*, align 4
  %5 = alloca i8*, align 4
  %6 = alloca i32, align 4
  %7 = alloca %struct.UART_Type*, align 4
  %8 = alloca i32, align 4
  store %struct.device.71* %0, %struct.device.71** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.device.71** %4, metadata !8315, metadata !DIExpression()), !dbg !8316
  store i8* %1, i8** %5, align 4
  call void @llvm.dbg.declare(metadata i8** %5, metadata !8317, metadata !DIExpression()), !dbg !8318
  store i32 %2, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !8319, metadata !DIExpression()), !dbg !8320
  call void @llvm.dbg.declare(metadata %struct.UART_Type** %7, metadata !8321, metadata !DIExpression()), !dbg !8322
  %9 = load %struct.device.71*, %struct.device.71** %4, align 4, !dbg !8323
  %10 = getelementptr inbounds %struct.device.71, %struct.device.71* %9, i32 0, i32 1, !dbg !8323
  %11 = load i8*, i8** %10, align 4, !dbg !8323
  %12 = bitcast i8* %11 to %struct.imx_uart_config*, !dbg !8323
  %13 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %12, i32 0, i32 0, !dbg !8323
  %14 = load %struct.UART_Type*, %struct.UART_Type** %13, align 4, !dbg !8323
  store %struct.UART_Type* %14, %struct.UART_Type** %7, align 4, !dbg !8322
  call void @llvm.dbg.declare(metadata i32* %8, metadata !8324, metadata !DIExpression()), !dbg !8325
  store i32 0, i32* %8, align 4, !dbg !8325
  br label %15, !dbg !8326

15:                                               ; preds = %25, %3
  %16 = load i32, i32* %6, align 4, !dbg !8327
  %17 = load i32, i32* %8, align 4, !dbg !8328
  %18 = sub i32 %16, %17, !dbg !8329
  %19 = icmp ugt i32 %18, 0, !dbg !8330
  br i1 %19, label %20, label %23, !dbg !8331

20:                                               ; preds = %15
  %21 = load %struct.UART_Type*, %struct.UART_Type** %7, align 4, !dbg !8332
  %22 = call zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %21, i32 noundef 9699341) #10, !dbg !8333
  br label %23

23:                                               ; preds = %20, %15
  %24 = phi i1 [ false, %15 ], [ %22, %20 ], !dbg !8334
  br i1 %24, label %25, label %33, !dbg !8326

25:                                               ; preds = %23
  %26 = load %struct.UART_Type*, %struct.UART_Type** %7, align 4, !dbg !8335
  %27 = load i8*, i8** %5, align 4, !dbg !8337
  %28 = load i32, i32* %8, align 4, !dbg !8338
  %29 = getelementptr inbounds i8, i8* %27, i32 %28, !dbg !8337
  %30 = load i8, i8* %29, align 1, !dbg !8337
  call void @UART_Putchar(%struct.UART_Type* noundef %26, i8 noundef zeroext %30) #10, !dbg !8339
  %31 = load i32, i32* %8, align 4, !dbg !8340
  %32 = add i32 %31, 1, !dbg !8340
  store i32 %32, i32* %8, align 4, !dbg !8340
  br label %15, !dbg !8326, !llvm.loop !8341

33:                                               ; preds = %23
  %34 = load i32, i32* %8, align 4, !dbg !8343
  ret i32 %34, !dbg !8344
}

; Function Attrs: noinline nounwind optnone
define internal i32 @uart_imx_fifo_read(%struct.device.71* noundef %0, i8* noundef %1, i32 noundef %2) #1 !dbg !8345 {
  %4 = alloca %struct.device.71*, align 4
  %5 = alloca i8*, align 4
  %6 = alloca i32, align 4
  %7 = alloca %struct.UART_Type*, align 4
  %8 = alloca i32, align 4
  store %struct.device.71* %0, %struct.device.71** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.device.71** %4, metadata !8346, metadata !DIExpression()), !dbg !8347
  store i8* %1, i8** %5, align 4
  call void @llvm.dbg.declare(metadata i8** %5, metadata !8348, metadata !DIExpression()), !dbg !8349
  store i32 %2, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !8350, metadata !DIExpression()), !dbg !8351
  call void @llvm.dbg.declare(metadata %struct.UART_Type** %7, metadata !8352, metadata !DIExpression()), !dbg !8353
  %9 = load %struct.device.71*, %struct.device.71** %4, align 4, !dbg !8354
  %10 = getelementptr inbounds %struct.device.71, %struct.device.71* %9, i32 0, i32 1, !dbg !8354
  %11 = load i8*, i8** %10, align 4, !dbg !8354
  %12 = bitcast i8* %11 to %struct.imx_uart_config*, !dbg !8354
  %13 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %12, i32 0, i32 0, !dbg !8354
  %14 = load %struct.UART_Type*, %struct.UART_Type** %13, align 4, !dbg !8354
  store %struct.UART_Type* %14, %struct.UART_Type** %7, align 4, !dbg !8353
  call void @llvm.dbg.declare(metadata i32* %8, metadata !8355, metadata !DIExpression()), !dbg !8356
  store i32 0, i32* %8, align 4, !dbg !8356
  br label %15, !dbg !8357

15:                                               ; preds = %25, %3
  %16 = load i32, i32* %6, align 4, !dbg !8358
  %17 = load i32, i32* %8, align 4, !dbg !8359
  %18 = sub i32 %16, %17, !dbg !8360
  %19 = icmp ugt i32 %18, 0, !dbg !8361
  br i1 %19, label %20, label %23, !dbg !8362

20:                                               ; preds = %15
  %21 = load %struct.UART_Type*, %struct.UART_Type** %7, align 4, !dbg !8363
  %22 = call zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %21, i32 noundef 9699337) #10, !dbg !8364
  br label %23

23:                                               ; preds = %20, %15
  %24 = phi i1 [ false, %15 ], [ %22, %20 ], !dbg !8365
  br i1 %24, label %25, label %32, !dbg !8357

25:                                               ; preds = %23
  %26 = load %struct.UART_Type*, %struct.UART_Type** %7, align 4, !dbg !8366
  %27 = call zeroext i8 @UART_Getchar(%struct.UART_Type* noundef %26) #10, !dbg !8368
  %28 = load i8*, i8** %5, align 4, !dbg !8369
  %29 = load i32, i32* %8, align 4, !dbg !8370
  %30 = add i32 %29, 1, !dbg !8370
  store i32 %30, i32* %8, align 4, !dbg !8370
  %31 = getelementptr inbounds i8, i8* %28, i32 %29, !dbg !8369
  store i8 %27, i8* %31, align 1, !dbg !8371
  br label %15, !dbg !8357, !llvm.loop !8372

32:                                               ; preds = %23
  %33 = load %struct.UART_Type*, %struct.UART_Type** %7, align 4, !dbg !8374
  %34 = call zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %33, i32 noundef 9961473) #10, !dbg !8376
  br i1 %34, label %35, label %37, !dbg !8377

35:                                               ; preds = %32
  %36 = load %struct.UART_Type*, %struct.UART_Type** %7, align 4, !dbg !8378
  call void @UART_ClearStatusFlag(%struct.UART_Type* noundef %36, i32 noundef 9961473) #10, !dbg !8380
  br label %37, !dbg !8381

37:                                               ; preds = %35, %32
  %38 = load i32, i32* %8, align 4, !dbg !8382
  ret i32 %38, !dbg !8383
}

; Function Attrs: noinline nounwind optnone
define internal void @uart_imx_irq_tx_enable(%struct.device.71* noundef %0) #1 !dbg !8384 {
  %2 = alloca %struct.device.71*, align 4
  %3 = alloca %struct.UART_Type*, align 4
  store %struct.device.71* %0, %struct.device.71** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.device.71** %2, metadata !8385, metadata !DIExpression()), !dbg !8386
  call void @llvm.dbg.declare(metadata %struct.UART_Type** %3, metadata !8387, metadata !DIExpression()), !dbg !8388
  %4 = load %struct.device.71*, %struct.device.71** %2, align 4, !dbg !8389
  %5 = getelementptr inbounds %struct.device.71, %struct.device.71* %4, i32 0, i32 1, !dbg !8389
  %6 = load i8*, i8** %5, align 4, !dbg !8389
  %7 = bitcast i8* %6 to %struct.imx_uart_config*, !dbg !8389
  %8 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %7, i32 0, i32 0, !dbg !8389
  %9 = load %struct.UART_Type*, %struct.UART_Type** %8, align 4, !dbg !8389
  store %struct.UART_Type* %9, %struct.UART_Type** %3, align 4, !dbg !8388
  %10 = load %struct.UART_Type*, %struct.UART_Type** %3, align 4, !dbg !8390
  call void @UART_SetIntCmd(%struct.UART_Type* noundef %10, i32 noundef 8388621, i1 noundef zeroext true) #10, !dbg !8391
  ret void, !dbg !8392
}

; Function Attrs: noinline nounwind optnone
define internal void @uart_imx_irq_tx_disable(%struct.device.71* noundef %0) #1 !dbg !8393 {
  %2 = alloca %struct.device.71*, align 4
  %3 = alloca %struct.UART_Type*, align 4
  store %struct.device.71* %0, %struct.device.71** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.device.71** %2, metadata !8394, metadata !DIExpression()), !dbg !8395
  call void @llvm.dbg.declare(metadata %struct.UART_Type** %3, metadata !8396, metadata !DIExpression()), !dbg !8397
  %4 = load %struct.device.71*, %struct.device.71** %2, align 4, !dbg !8398
  %5 = getelementptr inbounds %struct.device.71, %struct.device.71* %4, i32 0, i32 1, !dbg !8398
  %6 = load i8*, i8** %5, align 4, !dbg !8398
  %7 = bitcast i8* %6 to %struct.imx_uart_config*, !dbg !8398
  %8 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %7, i32 0, i32 0, !dbg !8398
  %9 = load %struct.UART_Type*, %struct.UART_Type** %8, align 4, !dbg !8398
  store %struct.UART_Type* %9, %struct.UART_Type** %3, align 4, !dbg !8397
  %10 = load %struct.UART_Type*, %struct.UART_Type** %3, align 4, !dbg !8399
  call void @UART_SetIntCmd(%struct.UART_Type* noundef %10, i32 noundef 8388621, i1 noundef zeroext false) #10, !dbg !8400
  ret void, !dbg !8401
}

; Function Attrs: noinline nounwind optnone
define internal i32 @uart_imx_irq_tx_ready(%struct.device.71* noundef %0) #1 !dbg !8402 {
  %2 = alloca %struct.device.71*, align 4
  %3 = alloca %struct.UART_Type*, align 4
  store %struct.device.71* %0, %struct.device.71** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.device.71** %2, metadata !8403, metadata !DIExpression()), !dbg !8404
  call void @llvm.dbg.declare(metadata %struct.UART_Type** %3, metadata !8405, metadata !DIExpression()), !dbg !8406
  %4 = load %struct.device.71*, %struct.device.71** %2, align 4, !dbg !8407
  %5 = getelementptr inbounds %struct.device.71, %struct.device.71* %4, i32 0, i32 1, !dbg !8407
  %6 = load i8*, i8** %5, align 4, !dbg !8407
  %7 = bitcast i8* %6 to %struct.imx_uart_config*, !dbg !8407
  %8 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %7, i32 0, i32 0, !dbg !8407
  %9 = load %struct.UART_Type*, %struct.UART_Type** %8, align 4, !dbg !8407
  store %struct.UART_Type* %9, %struct.UART_Type** %3, align 4, !dbg !8406
  %10 = load %struct.UART_Type*, %struct.UART_Type** %3, align 4, !dbg !8408
  %11 = call zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %10, i32 noundef 9699341) #10, !dbg !8409
  %12 = zext i1 %11 to i32, !dbg !8409
  ret i32 %12, !dbg !8410
}

; Function Attrs: noinline nounwind optnone
define internal void @uart_imx_irq_rx_enable(%struct.device.71* noundef %0) #1 !dbg !8411 {
  %2 = alloca %struct.device.71*, align 4
  %3 = alloca %struct.UART_Type*, align 4
  store %struct.device.71* %0, %struct.device.71** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.device.71** %2, metadata !8412, metadata !DIExpression()), !dbg !8413
  call void @llvm.dbg.declare(metadata %struct.UART_Type** %3, metadata !8414, metadata !DIExpression()), !dbg !8415
  %4 = load %struct.device.71*, %struct.device.71** %2, align 4, !dbg !8416
  %5 = getelementptr inbounds %struct.device.71, %struct.device.71* %4, i32 0, i32 1, !dbg !8416
  %6 = load i8*, i8** %5, align 4, !dbg !8416
  %7 = bitcast i8* %6 to %struct.imx_uart_config*, !dbg !8416
  %8 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %7, i32 0, i32 0, !dbg !8416
  %9 = load %struct.UART_Type*, %struct.UART_Type** %8, align 4, !dbg !8416
  store %struct.UART_Type* %9, %struct.UART_Type** %3, align 4, !dbg !8415
  %10 = load %struct.UART_Type*, %struct.UART_Type** %3, align 4, !dbg !8417
  call void @UART_SetIntCmd(%struct.UART_Type* noundef %10, i32 noundef 8388617, i1 noundef zeroext true) #10, !dbg !8418
  ret void, !dbg !8419
}

; Function Attrs: noinline nounwind optnone
define internal void @uart_imx_irq_rx_disable(%struct.device.71* noundef %0) #1 !dbg !8420 {
  %2 = alloca %struct.device.71*, align 4
  %3 = alloca %struct.UART_Type*, align 4
  store %struct.device.71* %0, %struct.device.71** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.device.71** %2, metadata !8421, metadata !DIExpression()), !dbg !8422
  call void @llvm.dbg.declare(metadata %struct.UART_Type** %3, metadata !8423, metadata !DIExpression()), !dbg !8424
  %4 = load %struct.device.71*, %struct.device.71** %2, align 4, !dbg !8425
  %5 = getelementptr inbounds %struct.device.71, %struct.device.71* %4, i32 0, i32 1, !dbg !8425
  %6 = load i8*, i8** %5, align 4, !dbg !8425
  %7 = bitcast i8* %6 to %struct.imx_uart_config*, !dbg !8425
  %8 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %7, i32 0, i32 0, !dbg !8425
  %9 = load %struct.UART_Type*, %struct.UART_Type** %8, align 4, !dbg !8425
  store %struct.UART_Type* %9, %struct.UART_Type** %3, align 4, !dbg !8424
  %10 = load %struct.UART_Type*, %struct.UART_Type** %3, align 4, !dbg !8426
  call void @UART_SetIntCmd(%struct.UART_Type* noundef %10, i32 noundef 8388617, i1 noundef zeroext false) #10, !dbg !8427
  ret void, !dbg !8428
}

; Function Attrs: noinline nounwind optnone
define internal i32 @uart_imx_irq_rx_ready(%struct.device.71* noundef %0) #1 !dbg !8429 {
  %2 = alloca %struct.device.71*, align 4
  %3 = alloca %struct.UART_Type*, align 4
  store %struct.device.71* %0, %struct.device.71** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.device.71** %2, metadata !8430, metadata !DIExpression()), !dbg !8431
  call void @llvm.dbg.declare(metadata %struct.UART_Type** %3, metadata !8432, metadata !DIExpression()), !dbg !8433
  %4 = load %struct.device.71*, %struct.device.71** %2, align 4, !dbg !8434
  %5 = getelementptr inbounds %struct.device.71, %struct.device.71* %4, i32 0, i32 1, !dbg !8434
  %6 = load i8*, i8** %5, align 4, !dbg !8434
  %7 = bitcast i8* %6 to %struct.imx_uart_config*, !dbg !8434
  %8 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %7, i32 0, i32 0, !dbg !8434
  %9 = load %struct.UART_Type*, %struct.UART_Type** %8, align 4, !dbg !8434
  store %struct.UART_Type* %9, %struct.UART_Type** %3, align 4, !dbg !8433
  %10 = load %struct.UART_Type*, %struct.UART_Type** %3, align 4, !dbg !8435
  %11 = call zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %10, i32 noundef 9699337) #10, !dbg !8436
  %12 = zext i1 %11 to i32, !dbg !8436
  ret i32 %12, !dbg !8437
}

; Function Attrs: noinline nounwind optnone
define internal void @uart_imx_irq_err_enable(%struct.device.71* noundef %0) #1 !dbg !8438 {
  %2 = alloca %struct.device.71*, align 4
  %3 = alloca %struct.UART_Type*, align 4
  store %struct.device.71* %0, %struct.device.71** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.device.71** %2, metadata !8439, metadata !DIExpression()), !dbg !8440
  call void @llvm.dbg.declare(metadata %struct.UART_Type** %3, metadata !8441, metadata !DIExpression()), !dbg !8442
  %4 = load %struct.device.71*, %struct.device.71** %2, align 4, !dbg !8443
  %5 = getelementptr inbounds %struct.device.71, %struct.device.71* %4, i32 0, i32 1, !dbg !8443
  %6 = load i8*, i8** %5, align 4, !dbg !8443
  %7 = bitcast i8* %6 to %struct.imx_uart_config*, !dbg !8443
  %8 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %7, i32 0, i32 0, !dbg !8443
  %9 = load %struct.UART_Type*, %struct.UART_Type** %8, align 4, !dbg !8443
  store %struct.UART_Type* %9, %struct.UART_Type** %3, align 4, !dbg !8442
  %10 = load %struct.UART_Type*, %struct.UART_Type** %3, align 4, !dbg !8444
  call void @UART_SetIntCmd(%struct.UART_Type* noundef %10, i32 noundef 8912908, i1 noundef zeroext true) #10, !dbg !8445
  %11 = load %struct.UART_Type*, %struct.UART_Type** %3, align 4, !dbg !8446
  call void @UART_SetIntCmd(%struct.UART_Type* noundef %11, i32 noundef 8912907, i1 noundef zeroext true) #10, !dbg !8447
  ret void, !dbg !8448
}

; Function Attrs: noinline nounwind optnone
define internal void @uart_imx_irq_err_disable(%struct.device.71* noundef %0) #1 !dbg !8449 {
  %2 = alloca %struct.device.71*, align 4
  %3 = alloca %struct.UART_Type*, align 4
  store %struct.device.71* %0, %struct.device.71** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.device.71** %2, metadata !8450, metadata !DIExpression()), !dbg !8451
  call void @llvm.dbg.declare(metadata %struct.UART_Type** %3, metadata !8452, metadata !DIExpression()), !dbg !8453
  %4 = load %struct.device.71*, %struct.device.71** %2, align 4, !dbg !8454
  %5 = getelementptr inbounds %struct.device.71, %struct.device.71* %4, i32 0, i32 1, !dbg !8454
  %6 = load i8*, i8** %5, align 4, !dbg !8454
  %7 = bitcast i8* %6 to %struct.imx_uart_config*, !dbg !8454
  %8 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %7, i32 0, i32 0, !dbg !8454
  %9 = load %struct.UART_Type*, %struct.UART_Type** %8, align 4, !dbg !8454
  store %struct.UART_Type* %9, %struct.UART_Type** %3, align 4, !dbg !8453
  %10 = load %struct.UART_Type*, %struct.UART_Type** %3, align 4, !dbg !8455
  call void @UART_SetIntCmd(%struct.UART_Type* noundef %10, i32 noundef 8912908, i1 noundef zeroext false) #10, !dbg !8456
  %11 = load %struct.UART_Type*, %struct.UART_Type** %3, align 4, !dbg !8457
  call void @UART_SetIntCmd(%struct.UART_Type* noundef %11, i32 noundef 8912907, i1 noundef zeroext false) #10, !dbg !8458
  ret void, !dbg !8459
}

; Function Attrs: noinline nounwind optnone
define internal i32 @uart_imx_irq_is_pending(%struct.device.71* noundef %0) #1 !dbg !8460 {
  %2 = alloca %struct.device.71*, align 4
  %3 = alloca %struct.UART_Type*, align 4
  store %struct.device.71* %0, %struct.device.71** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.device.71** %2, metadata !8461, metadata !DIExpression()), !dbg !8462
  call void @llvm.dbg.declare(metadata %struct.UART_Type** %3, metadata !8463, metadata !DIExpression()), !dbg !8464
  %4 = load %struct.device.71*, %struct.device.71** %2, align 4, !dbg !8465
  %5 = getelementptr inbounds %struct.device.71, %struct.device.71* %4, i32 0, i32 1, !dbg !8465
  %6 = load i8*, i8** %5, align 4, !dbg !8465
  %7 = bitcast i8* %6 to %struct.imx_uart_config*, !dbg !8465
  %8 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %7, i32 0, i32 0, !dbg !8465
  %9 = load %struct.UART_Type*, %struct.UART_Type** %8, align 4, !dbg !8465
  store %struct.UART_Type* %9, %struct.UART_Type** %3, align 4, !dbg !8464
  %10 = load %struct.UART_Type*, %struct.UART_Type** %3, align 4, !dbg !8466
  %11 = call zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %10, i32 noundef 9699337) #10, !dbg !8467
  br i1 %11, label %15, label %12, !dbg !8468

12:                                               ; preds = %1
  %13 = load %struct.UART_Type*, %struct.UART_Type** %3, align 4, !dbg !8469
  %14 = call zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %13, i32 noundef 9699341) #10, !dbg !8470
  br label %15, !dbg !8468

15:                                               ; preds = %12, %1
  %16 = phi i1 [ true, %1 ], [ %14, %12 ]
  %17 = zext i1 %16 to i32, !dbg !8468
  ret i32 %17, !dbg !8471
}

; Function Attrs: noinline nounwind optnone
define internal i32 @uart_imx_irq_update(%struct.device.71* noundef %0) #1 !dbg !8472 {
  %2 = alloca %struct.device.71*, align 4
  store %struct.device.71* %0, %struct.device.71** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.device.71** %2, metadata !8473, metadata !DIExpression()), !dbg !8474
  ret i32 1, !dbg !8475
}

; Function Attrs: noinline nounwind optnone
define internal void @uart_imx_irq_callback_set(%struct.device.71* noundef %0, void (%struct.device.71*, i8*)* noundef %1, i8* noundef %2) #1 !dbg !8476 {
  %4 = alloca %struct.device.71*, align 4
  %5 = alloca void (%struct.device.71*, i8*)*, align 4
  %6 = alloca i8*, align 4
  %7 = alloca %struct.imx_uart_data*, align 4
  store %struct.device.71* %0, %struct.device.71** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.device.71** %4, metadata !8477, metadata !DIExpression()), !dbg !8478
  store void (%struct.device.71*, i8*)* %1, void (%struct.device.71*, i8*)** %5, align 4
  call void @llvm.dbg.declare(metadata void (%struct.device.71*, i8*)** %5, metadata !8479, metadata !DIExpression()), !dbg !8480
  store i8* %2, i8** %6, align 4
  call void @llvm.dbg.declare(metadata i8** %6, metadata !8481, metadata !DIExpression()), !dbg !8482
  call void @llvm.dbg.declare(metadata %struct.imx_uart_data** %7, metadata !8483, metadata !DIExpression()), !dbg !8485
  %8 = load %struct.device.71*, %struct.device.71** %4, align 4, !dbg !8486
  %9 = getelementptr inbounds %struct.device.71, %struct.device.71* %8, i32 0, i32 4, !dbg !8487
  %10 = load i8*, i8** %9, align 4, !dbg !8487
  %11 = bitcast i8* %10 to %struct.imx_uart_data*, !dbg !8486
  store %struct.imx_uart_data* %11, %struct.imx_uart_data** %7, align 4, !dbg !8485
  %12 = load void (%struct.device.71*, i8*)*, void (%struct.device.71*, i8*)** %5, align 4, !dbg !8488
  %13 = load %struct.imx_uart_data*, %struct.imx_uart_data** %7, align 4, !dbg !8489
  %14 = getelementptr inbounds %struct.imx_uart_data, %struct.imx_uart_data* %13, i32 0, i32 0, !dbg !8490
  store void (%struct.device.71*, i8*)* %12, void (%struct.device.71*, i8*)** %14, align 4, !dbg !8491
  %15 = load i8*, i8** %6, align 4, !dbg !8492
  %16 = load %struct.imx_uart_data*, %struct.imx_uart_data** %7, align 4, !dbg !8493
  %17 = getelementptr inbounds %struct.imx_uart_data, %struct.imx_uart_data* %16, i32 0, i32 1, !dbg !8494
  store i8* %15, i8** %17, align 4, !dbg !8495
  ret void, !dbg !8496
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %0, i32 noundef %1) #1 !dbg !8497 {
  %3 = alloca %struct.UART_Type*, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32*, align 4
  store %struct.UART_Type* %0, %struct.UART_Type** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.UART_Type** %3, metadata !8500, metadata !DIExpression()), !dbg !8501
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !8502, metadata !DIExpression()), !dbg !8503
  call void @llvm.dbg.declare(metadata i32** %5, metadata !8504, metadata !DIExpression()), !dbg !8505
  store i32* null, i32** %5, align 4, !dbg !8505
  %6 = load %struct.UART_Type*, %struct.UART_Type** %3, align 4, !dbg !8506
  %7 = ptrtoint %struct.UART_Type* %6 to i32, !dbg !8507
  %8 = load i32, i32* %4, align 4, !dbg !8508
  %9 = lshr i32 %8, 16, !dbg !8509
  %10 = add i32 %7, %9, !dbg !8510
  %11 = inttoptr i32 %10 to i32*, !dbg !8511
  store i32* %11, i32** %5, align 4, !dbg !8512
  %12 = load i32*, i32** %5, align 4, !dbg !8513
  %13 = load volatile i32, i32* %12, align 4, !dbg !8514
  %14 = load i32, i32* %4, align 4, !dbg !8515
  %15 = and i32 %14, 65535, !dbg !8516
  %16 = lshr i32 %13, %15, !dbg !8517
  %17 = and i32 %16, 1, !dbg !8518
  %18 = icmp ne i32 %17, 0, !dbg !8519
  ret i1 %18, !dbg !8520
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i8 @UART_Getchar(%struct.UART_Type* noundef %0) #1 !dbg !8521 {
  %2 = alloca %struct.UART_Type*, align 4
  store %struct.UART_Type* %0, %struct.UART_Type** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.UART_Type** %2, metadata !8524, metadata !DIExpression()), !dbg !8525
  %3 = load %struct.UART_Type*, %struct.UART_Type** %2, align 4, !dbg !8526
  %4 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %3, i32 0, i32 0, !dbg !8526
  %5 = load volatile i32, i32* %4, align 4, !dbg !8526
  %6 = and i32 %5, 255, !dbg !8527
  %7 = trunc i32 %6 to i8, !dbg !8528
  ret i8 %7, !dbg !8529
}

; Function Attrs: noinline nounwind optnone
define internal void @UART_Putchar(%struct.UART_Type* noundef %0, i8 noundef zeroext %1) #1 !dbg !8530 {
  %3 = alloca %struct.UART_Type*, align 4
  %4 = alloca i8, align 1
  store %struct.UART_Type* %0, %struct.UART_Type** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.UART_Type** %3, metadata !8533, metadata !DIExpression()), !dbg !8534
  store i8 %1, i8* %4, align 1
  call void @llvm.dbg.declare(metadata i8* %4, metadata !8535, metadata !DIExpression()), !dbg !8536
  %5 = load i8, i8* %4, align 1, !dbg !8537
  %6 = zext i8 %5 to i32, !dbg !8537
  %7 = and i32 %6, 255, !dbg !8538
  %8 = load %struct.UART_Type*, %struct.UART_Type** %3, align 4, !dbg !8539
  %9 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %8, i32 0, i32 2, !dbg !8539
  store volatile i32 %7, i32* %9, align 4, !dbg !8540
  ret void, !dbg !8541
}

; Function Attrs: noinline nounwind optnone
define internal void @irq_config_func_0(%struct.device.71* noundef %0) #1 !dbg !1289 {
  %2 = alloca %struct.device.71*, align 4
  store %struct.device.71* %0, %struct.device.71** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.device.71** %2, metadata !8542, metadata !DIExpression()), !dbg !8543
  call void @z_arm_irq_priority_set(i32 noundef 26, i32 noundef 3, i32 noundef 0) #10, !dbg !8544
  call void @arch_irq_enable(i32 noundef 26) #10, !dbg !8543
  ret void, !dbg !8543
}

; Function Attrs: noinline nounwind optnone
define dso_local void @uart_imx_isr(%struct.device.71* noundef %0) #1 !dbg !8546 {
  %2 = alloca %struct.device.71*, align 4
  %3 = alloca %struct.imx_uart_data*, align 4
  store %struct.device.71* %0, %struct.device.71** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.device.71** %2, metadata !8547, metadata !DIExpression()), !dbg !8548
  call void @llvm.dbg.declare(metadata %struct.imx_uart_data** %3, metadata !8549, metadata !DIExpression()), !dbg !8550
  %4 = load %struct.device.71*, %struct.device.71** %2, align 4, !dbg !8551
  %5 = getelementptr inbounds %struct.device.71, %struct.device.71* %4, i32 0, i32 4, !dbg !8552
  %6 = load i8*, i8** %5, align 4, !dbg !8552
  %7 = bitcast i8* %6 to %struct.imx_uart_data*, !dbg !8551
  store %struct.imx_uart_data* %7, %struct.imx_uart_data** %3, align 4, !dbg !8550
  %8 = load %struct.imx_uart_data*, %struct.imx_uart_data** %3, align 4, !dbg !8553
  %9 = getelementptr inbounds %struct.imx_uart_data, %struct.imx_uart_data* %8, i32 0, i32 0, !dbg !8555
  %10 = load void (%struct.device.71*, i8*)*, void (%struct.device.71*, i8*)** %9, align 4, !dbg !8555
  %11 = icmp ne void (%struct.device.71*, i8*)* %10, null, !dbg !8553
  br i1 %11, label %12, label %20, !dbg !8556

12:                                               ; preds = %1
  %13 = load %struct.imx_uart_data*, %struct.imx_uart_data** %3, align 4, !dbg !8557
  %14 = getelementptr inbounds %struct.imx_uart_data, %struct.imx_uart_data* %13, i32 0, i32 0, !dbg !8559
  %15 = load void (%struct.device.71*, i8*)*, void (%struct.device.71*, i8*)** %14, align 4, !dbg !8559
  %16 = load %struct.device.71*, %struct.device.71** %2, align 4, !dbg !8560
  %17 = load %struct.imx_uart_data*, %struct.imx_uart_data** %3, align 4, !dbg !8561
  %18 = getelementptr inbounds %struct.imx_uart_data, %struct.imx_uart_data* %17, i32 0, i32 1, !dbg !8562
  %19 = load i8*, i8** %18, align 4, !dbg !8562
  call void %15(%struct.device.71* noundef %16, i8* noundef %19) #10, !dbg !8557
  br label %20, !dbg !8563

20:                                               ; preds = %12, %1
  ret void, !dbg !8564
}

; Function Attrs: noinline nounwind optnone
define internal i32 @uart_imx_init(%struct.device.71* noundef %0) #1 !dbg !8565 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca %struct.device.71*, align 4
  %7 = alloca %struct.UART_Type*, align 4
  %8 = alloca %struct.imx_uart_config*, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca %struct._uart_init_config, align 4
  store %struct.device.71* %0, %struct.device.71** %6, align 4
  call void @llvm.dbg.declare(metadata %struct.device.71** %6, metadata !8566, metadata !DIExpression()), !dbg !8567
  call void @llvm.dbg.declare(metadata %struct.UART_Type** %7, metadata !8568, metadata !DIExpression()), !dbg !8569
  %12 = load %struct.device.71*, %struct.device.71** %6, align 4, !dbg !8570
  %13 = getelementptr inbounds %struct.device.71, %struct.device.71* %12, i32 0, i32 1, !dbg !8570
  %14 = load i8*, i8** %13, align 4, !dbg !8570
  %15 = bitcast i8* %14 to %struct.imx_uart_config*, !dbg !8570
  %16 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %15, i32 0, i32 0, !dbg !8570
  %17 = load %struct.UART_Type*, %struct.UART_Type** %16, align 4, !dbg !8570
  store %struct.UART_Type* %17, %struct.UART_Type** %7, align 4, !dbg !8569
  call void @llvm.dbg.declare(metadata %struct.imx_uart_config** %8, metadata !8571, metadata !DIExpression()), !dbg !8572
  %18 = load %struct.device.71*, %struct.device.71** %6, align 4, !dbg !8573
  %19 = getelementptr inbounds %struct.device.71, %struct.device.71* %18, i32 0, i32 1, !dbg !8574
  %20 = load i8*, i8** %19, align 4, !dbg !8574
  %21 = bitcast i8* %20 to %struct.imx_uart_config*, !dbg !8573
  store %struct.imx_uart_config* %21, %struct.imx_uart_config** %8, align 4, !dbg !8572
  call void @llvm.dbg.declare(metadata i32* %9, metadata !8575, metadata !DIExpression()), !dbg !8576
  call void @llvm.dbg.declare(metadata i32* %10, metadata !8577, metadata !DIExpression()), !dbg !8578
  call void @llvm.dbg.declare(metadata i32* %3, metadata !8579, metadata !DIExpression()) #9, !dbg !8581
  call void @llvm.dbg.declare(metadata i32* %4, metadata !8583, metadata !DIExpression()) #9, !dbg !8584
  %22 = call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #9, !dbg !8585, !srcloc !8586
  %23 = extractvalue { i32, i32 } %22, 0, !dbg !8585
  %24 = extractvalue { i32, i32 } %22, 1, !dbg !8585
  store i32 %23, i32* %3, align 4, !dbg !8585
  store i32 %24, i32* %4, align 4, !dbg !8585
  %25 = load i32, i32* %3, align 4, !dbg !8587
  store i32 %25, i32* %9, align 4, !dbg !8588
  call void @llvm.dbg.declare(metadata %struct._uart_init_config* %11, metadata !8589, metadata !DIExpression()), !dbg !8599
  %26 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %11, i32 0, i32 0, !dbg !8600
  store i32 0, i32* %26, align 4, !dbg !8600
  %27 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %11, i32 0, i32 1, !dbg !8600
  %28 = load %struct.imx_uart_config*, %struct.imx_uart_config** %8, align 4, !dbg !8601
  %29 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %28, i32 0, i32 1, !dbg !8602
  %30 = load i32, i32* %29, align 4, !dbg !8602
  store i32 %30, i32* %27, align 4, !dbg !8600
  %31 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %11, i32 0, i32 2, !dbg !8600
  store i32 32, i32* %31, align 4, !dbg !8600
  %32 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %11, i32 0, i32 3, !dbg !8600
  store i32 0, i32* %32, align 4, !dbg !8600
  %33 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %11, i32 0, i32 4, !dbg !8600
  store i32 0, i32* %33, align 4, !dbg !8600
  %34 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %11, i32 0, i32 5, !dbg !8600
  store i32 6, i32* %34, align 4, !dbg !8600
  %35 = load %struct.imx_uart_config*, %struct.imx_uart_config** %8, align 4, !dbg !8603
  %36 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %35, i32 0, i32 3, !dbg !8604
  %37 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %36, align 4, !dbg !8604
  %38 = call i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %37, i8 noundef zeroext 0) #10, !dbg !8605
  store i32 %38, i32* %10, align 4, !dbg !8606
  %39 = load i32, i32* %10, align 4, !dbg !8607
  %40 = icmp ne i32 %39, 0, !dbg !8607
  br i1 %40, label %41, label %43, !dbg !8609

41:                                               ; preds = %1
  %42 = load i32, i32* %10, align 4, !dbg !8610
  store i32 %42, i32* %5, align 4, !dbg !8612
  br label %62, !dbg !8612

43:                                               ; preds = %1
  %44 = load %struct.UART_Type*, %struct.UART_Type** %7, align 4, !dbg !8613
  %45 = call i32 @get_uart_clock_freq(%struct.UART_Type* noundef %44) #10, !dbg !8614
  %46 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %11, i32 0, i32 0, !dbg !8615
  store i32 %45, i32* %46, align 4, !dbg !8616
  %47 = load %struct.UART_Type*, %struct.UART_Type** %7, align 4, !dbg !8617
  call void @UART_Init(%struct.UART_Type* noundef %47, %struct._uart_init_config* noundef %11) #10, !dbg !8618
  %48 = load %struct.UART_Type*, %struct.UART_Type** %7, align 4, !dbg !8619
  call void @UART_SetTxFifoWatermark(%struct.UART_Type* noundef %48, i8 noundef zeroext 2) #10, !dbg !8620
  %49 = load %struct.UART_Type*, %struct.UART_Type** %7, align 4, !dbg !8621
  call void @UART_SetRxFifoWatermark(%struct.UART_Type* noundef %49, i8 noundef zeroext 1) #10, !dbg !8622
  %50 = load i32, i32* %9, align 4, !dbg !8623
  store i32 %50, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !8624, metadata !DIExpression()) #9, !dbg !8626
  %51 = load i32, i32* %2, align 4, !dbg !8628
  call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %51) #9, !dbg !8629, !srcloc !8630
  %52 = load %struct.imx_uart_config*, %struct.imx_uart_config** %8, align 4, !dbg !8631
  %53 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %52, i32 0, i32 4, !dbg !8632
  %54 = load void (%struct.device.71*)*, void (%struct.device.71*)** %53, align 4, !dbg !8632
  %55 = load %struct.device.71*, %struct.device.71** %6, align 4, !dbg !8633
  call void %54(%struct.device.71* noundef %55) #10, !dbg !8631
  %56 = load %struct.UART_Type*, %struct.UART_Type** %7, align 4, !dbg !8634
  %57 = load %struct.imx_uart_config*, %struct.imx_uart_config** %8, align 4, !dbg !8635
  %58 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %57, i32 0, i32 2, !dbg !8636
  %59 = load i8, i8* %58, align 4, !dbg !8636
  %60 = zext i8 %59 to i32, !dbg !8635
  call void @UART_SetModemMode(%struct.UART_Type* noundef %56, i32 noundef %60) #10, !dbg !8637
  %61 = load %struct.UART_Type*, %struct.UART_Type** %7, align 4, !dbg !8638
  call void @UART_Enable(%struct.UART_Type* noundef %61) #10, !dbg !8639
  store i32 0, i32* %5, align 4, !dbg !8640
  br label %62, !dbg !8640

62:                                               ; preds = %43, %41
  %63 = load i32, i32* %5, align 4, !dbg !8641
  ret i32 %63, !dbg !8641
}

; Function Attrs: noinline nounwind optnone
define internal i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %0, i8 noundef zeroext %1) #1 !dbg !8642 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.pinctrl_dev_config*, align 4
  %5 = alloca i8, align 1
  %6 = alloca i32, align 4
  %7 = alloca %struct.pinctrl_state*, align 4
  store %struct.pinctrl_dev_config* %0, %struct.pinctrl_dev_config** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.pinctrl_dev_config** %4, metadata !8645, metadata !DIExpression()), !dbg !8646
  store i8 %1, i8* %5, align 1
  call void @llvm.dbg.declare(metadata i8* %5, metadata !8647, metadata !DIExpression()), !dbg !8648
  call void @llvm.dbg.declare(metadata i32* %6, metadata !8649, metadata !DIExpression()), !dbg !8650
  call void @llvm.dbg.declare(metadata %struct.pinctrl_state** %7, metadata !8651, metadata !DIExpression()), !dbg !8652
  %8 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %4, align 4, !dbg !8653
  %9 = load i8, i8* %5, align 1, !dbg !8654
  %10 = call i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* noundef %8, i8 noundef zeroext %9, %struct.pinctrl_state** noundef %7) #10, !dbg !8655
  store i32 %10, i32* %6, align 4, !dbg !8656
  %11 = load i32, i32* %6, align 4, !dbg !8657
  %12 = icmp slt i32 %11, 0, !dbg !8659
  br i1 %12, label %13, label %15, !dbg !8660

13:                                               ; preds = %2
  %14 = load i32, i32* %6, align 4, !dbg !8661
  store i32 %14, i32* %3, align 4, !dbg !8663
  br label %19, !dbg !8663

15:                                               ; preds = %2
  %16 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %4, align 4, !dbg !8664
  %17 = load %struct.pinctrl_state*, %struct.pinctrl_state** %7, align 4, !dbg !8665
  %18 = call i32 @pinctrl_apply_state_direct(%struct.pinctrl_dev_config* noundef %16, %struct.pinctrl_state* noundef %17) #10, !dbg !8666
  store i32 %18, i32* %3, align 4, !dbg !8667
  br label %19, !dbg !8667

19:                                               ; preds = %15, %13
  %20 = load i32, i32* %3, align 4, !dbg !8668
  ret i32 %20, !dbg !8668
}

; Function Attrs: noinline nounwind optnone
define internal void @UART_SetTxFifoWatermark(%struct.UART_Type* noundef %0, i8 noundef zeroext %1) #1 !dbg !8669 {
  %3 = alloca %struct.UART_Type*, align 4
  %4 = alloca i8, align 1
  store %struct.UART_Type* %0, %struct.UART_Type** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.UART_Type** %3, metadata !8670, metadata !DIExpression()), !dbg !8671
  store i8 %1, i8* %4, align 1
  call void @llvm.dbg.declare(metadata i8* %4, metadata !8672, metadata !DIExpression()), !dbg !8673
  %5 = load %struct.UART_Type*, %struct.UART_Type** %3, align 4, !dbg !8674
  %6 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %5, i32 0, i32 8, !dbg !8674
  %7 = load volatile i32, i32* %6, align 4, !dbg !8674
  %8 = and i32 %7, -64513, !dbg !8675
  %9 = load i8, i8* %4, align 1, !dbg !8676
  %10 = zext i8 %9 to i32, !dbg !8676
  %11 = shl i32 %10, 10, !dbg !8676
  %12 = and i32 %11, 64512, !dbg !8676
  %13 = or i32 %8, %12, !dbg !8677
  %14 = load %struct.UART_Type*, %struct.UART_Type** %3, align 4, !dbg !8678
  %15 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %14, i32 0, i32 8, !dbg !8678
  store volatile i32 %13, i32* %15, align 4, !dbg !8679
  ret void, !dbg !8680
}

; Function Attrs: noinline nounwind optnone
define internal void @UART_SetRxFifoWatermark(%struct.UART_Type* noundef %0, i8 noundef zeroext %1) #1 !dbg !8681 {
  %3 = alloca %struct.UART_Type*, align 4
  %4 = alloca i8, align 1
  store %struct.UART_Type* %0, %struct.UART_Type** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.UART_Type** %3, metadata !8682, metadata !DIExpression()), !dbg !8683
  store i8 %1, i8* %4, align 1
  call void @llvm.dbg.declare(metadata i8* %4, metadata !8684, metadata !DIExpression()), !dbg !8685
  %5 = load %struct.UART_Type*, %struct.UART_Type** %3, align 4, !dbg !8686
  %6 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %5, i32 0, i32 8, !dbg !8686
  %7 = load volatile i32, i32* %6, align 4, !dbg !8686
  %8 = and i32 %7, -64, !dbg !8687
  %9 = load i8, i8* %4, align 1, !dbg !8688
  %10 = zext i8 %9 to i32, !dbg !8688
  %11 = shl i32 %10, 0, !dbg !8688
  %12 = and i32 %11, 63, !dbg !8688
  %13 = or i32 %8, %12, !dbg !8689
  %14 = load %struct.UART_Type*, %struct.UART_Type** %3, align 4, !dbg !8690
  %15 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %14, i32 0, i32 8, !dbg !8690
  store volatile i32 %13, i32* %15, align 4, !dbg !8691
  ret void, !dbg !8692
}

; Function Attrs: noinline nounwind optnone
define internal void @UART_Enable(%struct.UART_Type* noundef %0) #1 !dbg !8693 {
  %2 = alloca %struct.UART_Type*, align 4
  store %struct.UART_Type* %0, %struct.UART_Type** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.UART_Type** %2, metadata !8696, metadata !DIExpression()), !dbg !8697
  %3 = load %struct.UART_Type*, %struct.UART_Type** %2, align 4, !dbg !8698
  %4 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %3, i32 0, i32 4, !dbg !8698
  %5 = load volatile i32, i32* %4, align 4, !dbg !8699
  %6 = or i32 %5, 1, !dbg !8699
  store volatile i32 %6, i32* %4, align 4, !dbg !8699
  ret void, !dbg !8700
}

; Function Attrs: noinline nounwind optnone
define internal i32 @pinctrl_apply_state_direct(%struct.pinctrl_dev_config* noundef %0, %struct.pinctrl_state* noundef %1) #1 !dbg !8701 {
  %3 = alloca %struct.pinctrl_dev_config*, align 4
  %4 = alloca %struct.pinctrl_state*, align 4
  %5 = alloca i32, align 4
  store %struct.pinctrl_dev_config* %0, %struct.pinctrl_dev_config** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.pinctrl_dev_config** %3, metadata !8704, metadata !DIExpression()), !dbg !8705
  store %struct.pinctrl_state* %1, %struct.pinctrl_state** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.pinctrl_state** %4, metadata !8706, metadata !DIExpression()), !dbg !8707
  call void @llvm.dbg.declare(metadata i32* %5, metadata !8708, metadata !DIExpression()), !dbg !8709
  %6 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %3, align 4, !dbg !8710
  store i32 0, i32* %5, align 4, !dbg !8711
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !8712
  %8 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %7, i32 0, i32 0, !dbg !8713
  %9 = load %struct.pinctrl_soc_pin*, %struct.pinctrl_soc_pin** %8, align 4, !dbg !8713
  %10 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !8714
  %11 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %10, i32 0, i32 1, !dbg !8715
  %12 = load i8, i8* %11, align 4, !dbg !8715
  %13 = load i32, i32* %5, align 4, !dbg !8716
  %14 = call i32 @pinctrl_configure_pins(%struct.pinctrl_soc_pin* noundef %9, i8 noundef zeroext %12, i32 noundef %13) #10, !dbg !8717
  ret i32 %14, !dbg !8718
}

; Function Attrs: noinline nounwind optnone
define internal i32 @sys_clock_driver_init(%struct.device.71* noundef %0) #1 !dbg !8719 {
  %2 = alloca %struct.device.71*, align 4
  store %struct.device.71* %0, %struct.device.71** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.device.71** %2, metadata !8720, metadata !DIExpression()), !dbg !8721
  %3 = load %struct.device.71*, %struct.device.71** %2, align 4, !dbg !8722
  call void @__NVIC_SetPriority.28(i32 noundef -1, i32 noundef 1) #10, !dbg !8723
  %4 = call i32 @sys_clock_hw_cycles_per_sec() #10, !dbg !8724
  %5 = sdiv i32 %4, 10000, !dbg !8724
  %6 = sub nsw i32 %5, 1, !dbg !8725
  store i32 %6, i32* @last_load, align 4, !dbg !8726
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !8727
  %7 = load i32, i32* @last_load, align 4, !dbg !8728
  store volatile i32 %7, i32* getelementptr inbounds (%struct.anon.2, %struct.anon.2* inttoptr (i32 -536813552 to %struct.anon.2*), i32 0, i32 1), align 4, !dbg !8729
  store volatile i32 0, i32* getelementptr inbounds (%struct.anon.2, %struct.anon.2* inttoptr (i32 -536813552 to %struct.anon.2*), i32 0, i32 2), align 4, !dbg !8730
  %8 = load volatile i32, i32* getelementptr inbounds (%struct.anon.2, %struct.anon.2* inttoptr (i32 -536813552 to %struct.anon.2*), i32 0, i32 0), align 4, !dbg !8731
  %9 = or i32 %8, 7, !dbg !8731
  store volatile i32 %9, i32* getelementptr inbounds (%struct.anon.2, %struct.anon.2* inttoptr (i32 -536813552 to %struct.anon.2*), i32 0, i32 0), align 4, !dbg !8731
  ret i32 0, !dbg !8732
}

; Function Attrs: noinline nounwind optnone
define internal void @__NVIC_SetPriority.28(i32 noundef %0, i32 noundef %1) #1 !dbg !8733 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !8734, metadata !DIExpression()), !dbg !8735
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !8736, metadata !DIExpression()), !dbg !8737
  %5 = load i32, i32* %3, align 4, !dbg !8738
  %6 = icmp sge i32 %5, 0, !dbg !8740
  br i1 %6, label %7, label %14, !dbg !8741

7:                                                ; preds = %2
  %8 = load i32, i32* %4, align 4, !dbg !8742
  %9 = shl i32 %8, 4, !dbg !8744
  %10 = and i32 %9, 255, !dbg !8745
  %11 = trunc i32 %10 to i8, !dbg !8746
  %12 = load i32, i32* %3, align 4, !dbg !8747
  %13 = getelementptr inbounds [240 x i8], [240 x i8]* getelementptr inbounds (%struct.NVIC_Type, %struct.NVIC_Type* inttoptr (i32 -536813312 to %struct.NVIC_Type*), i32 0, i32 10), i32 0, i32 %12, !dbg !8748
  store volatile i8 %11, i8* %13, align 1, !dbg !8749
  br label %23, !dbg !8750

14:                                               ; preds = %2
  %15 = load i32, i32* %4, align 4, !dbg !8751
  %16 = shl i32 %15, 4, !dbg !8753
  %17 = and i32 %16, 255, !dbg !8754
  %18 = trunc i32 %17 to i8, !dbg !8755
  %19 = load i32, i32* %3, align 4, !dbg !8756
  %20 = and i32 %19, 15, !dbg !8757
  %21 = sub i32 %20, 4, !dbg !8758
  %22 = getelementptr inbounds [12 x i8], [12 x i8]* getelementptr inbounds (%struct.SCB_Type, %struct.SCB_Type* inttoptr (i32 -536810240 to %struct.SCB_Type*), i32 0, i32 6), i32 0, i32 %21, !dbg !8759
  store volatile i8 %18, i8* %22, align 1, !dbg !8760
  br label %23

23:                                               ; preds = %14, %7
  ret void, !dbg !8761
}

; Function Attrs: noinline nounwind optnone
define internal i32 @sys_clock_hw_cycles_per_sec() #1 !dbg !8762 {
  ret i32 200000000, !dbg !8764
}

; Function Attrs: noinline nounwind optnone
define dso_local void @sys_clock_isr(i8* noundef %0) #1 !dbg !8765 {
  %2 = alloca i8*, align 4
  %3 = alloca i32, align 4
  store i8* %0, i8** %2, align 4
  call void @llvm.dbg.declare(metadata i8** %2, metadata !8766, metadata !DIExpression()), !dbg !8767
  %4 = load i8*, i8** %2, align 4, !dbg !8768
  call void @llvm.dbg.declare(metadata i32* %3, metadata !8769, metadata !DIExpression()), !dbg !8770
  %5 = call i32 @elapsed() #10, !dbg !8771
  %6 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !8772
  %7 = load i32, i32* @cycle_count, align 4, !dbg !8773
  %8 = add i32 %7, %6, !dbg !8773
  store i32 %8, i32* @cycle_count, align 4, !dbg !8773
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !8774
  %9 = load i32, i32* @cycle_count, align 4, !dbg !8775
  %10 = load i32, i32* @announced_cycles, align 4, !dbg !8778
  %11 = sub i32 %9, %10, !dbg !8779
  %12 = call i32 @sys_clock_hw_cycles_per_sec() #10, !dbg !8780
  %13 = sdiv i32 %12, 10000, !dbg !8780
  %14 = udiv i32 %11, %13, !dbg !8781
  store i32 %14, i32* %3, align 4, !dbg !8782
  %15 = load i32, i32* %3, align 4, !dbg !8783
  %16 = call i32 @sys_clock_hw_cycles_per_sec() #10, !dbg !8784
  %17 = sdiv i32 %16, 10000, !dbg !8784
  %18 = mul i32 %15, %17, !dbg !8785
  %19 = load i32, i32* @announced_cycles, align 4, !dbg !8786
  %20 = add i32 %19, %18, !dbg !8786
  store i32 %20, i32* @announced_cycles, align 4, !dbg !8786
  %21 = load i32, i32* %3, align 4, !dbg !8787
  call void @sys_clock_announce(i32 noundef %21) #10, !dbg !8788
  call void @z_arm_int_exit() #10, !dbg !8789
  ret void, !dbg !8790
}

; Function Attrs: noinline nounwind optnone
define internal i32 @elapsed() #1 !dbg !8791 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %1, metadata !8792, metadata !DIExpression()), !dbg !8793
  %4 = load volatile i32, i32* getelementptr inbounds (%struct.anon.2, %struct.anon.2* inttoptr (i32 -536813552 to %struct.anon.2*), i32 0, i32 2), align 4, !dbg !8794
  store i32 %4, i32* %1, align 4, !dbg !8793
  call void @llvm.dbg.declare(metadata i32* %2, metadata !8795, metadata !DIExpression()), !dbg !8796
  %5 = load volatile i32, i32* getelementptr inbounds (%struct.anon.2, %struct.anon.2* inttoptr (i32 -536813552 to %struct.anon.2*), i32 0, i32 0), align 4, !dbg !8797
  store i32 %5, i32* %2, align 4, !dbg !8796
  call void @llvm.dbg.declare(metadata i32* %3, metadata !8798, metadata !DIExpression()), !dbg !8799
  %6 = load volatile i32, i32* getelementptr inbounds (%struct.anon.2, %struct.anon.2* inttoptr (i32 -536813552 to %struct.anon.2*), i32 0, i32 2), align 4, !dbg !8800
  store i32 %6, i32* %3, align 4, !dbg !8799
  %7 = load i32, i32* %2, align 4, !dbg !8801
  %8 = and i32 %7, 65536, !dbg !8803
  %9 = icmp ne i32 %8, 0, !dbg !8803
  br i1 %9, label %14, label %10, !dbg !8804

10:                                               ; preds = %0
  %11 = load i32, i32* %1, align 4, !dbg !8805
  %12 = load i32, i32* %3, align 4, !dbg !8806
  %13 = icmp ult i32 %11, %12, !dbg !8807
  br i1 %13, label %14, label %19, !dbg !8808

14:                                               ; preds = %10, %0
  %15 = load i32, i32* @last_load, align 4, !dbg !8809
  %16 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !8811
  %17 = add i32 %16, %15, !dbg !8811
  store volatile i32 %17, i32* @overflow_cyc, align 4, !dbg !8811
  %18 = load volatile i32, i32* getelementptr inbounds (%struct.anon.2, %struct.anon.2* inttoptr (i32 -536813552 to %struct.anon.2*), i32 0, i32 0), align 4, !dbg !8812
  br label %19, !dbg !8813

19:                                               ; preds = %14, %10
  %20 = load i32, i32* @last_load, align 4, !dbg !8814
  %21 = load i32, i32* %3, align 4, !dbg !8815
  %22 = sub i32 %20, %21, !dbg !8816
  %23 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !8817
  %24 = add i32 %22, %23, !dbg !8818
  ret i32 %24, !dbg !8819
}

; Function Attrs: noinline nounwind optnone
define dso_local void @sys_clock_set_timeout(i32 noundef %0, i1 noundef zeroext %1) #1 !dbg !8820 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca %union.anon.68, align 4
  %7 = alloca %struct.k_spinlock.13*, align 4
  %8 = alloca %union.anon.68, align 4
  %9 = alloca %struct.k_spinlock.13*, align 4
  %10 = alloca i32, align 4
  %11 = alloca i8, align 1
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca %union.anon.68, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  store i32 %0, i32* %10, align 4
  call void @llvm.dbg.declare(metadata i32* %10, metadata !8823, metadata !DIExpression()), !dbg !8824
  %19 = zext i1 %1 to i8
  store i8 %19, i8* %11, align 1
  call void @llvm.dbg.declare(metadata i8* %11, metadata !8825, metadata !DIExpression()), !dbg !8826
  %20 = load i8, i8* %11, align 1, !dbg !8827
  %21 = trunc i8 %20 to i1, !dbg !8827
  br i1 %21, label %22, label %29, !dbg !8829

22:                                               ; preds = %2
  %23 = load i32, i32* %10, align 4, !dbg !8830
  %24 = sext i32 %23 to i64, !dbg !8830
  %25 = icmp eq i64 %24, -1, !dbg !8831
  br i1 %25, label %26, label %29, !dbg !8832

26:                                               ; preds = %22
  %27 = load volatile i32, i32* getelementptr inbounds (%struct.anon.2, %struct.anon.2* inttoptr (i32 -536813552 to %struct.anon.2*), i32 0, i32 0), align 4, !dbg !8833
  %28 = and i32 %27, -2, !dbg !8833
  store volatile i32 %28, i32* getelementptr inbounds (%struct.anon.2, %struct.anon.2* inttoptr (i32 -536813552 to %struct.anon.2*), i32 0, i32 0), align 4, !dbg !8833
  store i32 -16777216, i32* @last_load, align 4, !dbg !8835
  br label %200, !dbg !8836

29:                                               ; preds = %22, %2
  call void @llvm.dbg.declare(metadata i32* %12, metadata !8837, metadata !DIExpression()), !dbg !8838
  call void @llvm.dbg.declare(metadata i32* %13, metadata !8839, metadata !DIExpression()), !dbg !8840
  call void @llvm.dbg.declare(metadata i32* %14, metadata !8841, metadata !DIExpression()), !dbg !8842
  call void @llvm.dbg.declare(metadata i32* %15, metadata !8843, metadata !DIExpression()), !dbg !8844
  %30 = load i32, i32* @last_load, align 4, !dbg !8845
  store i32 %30, i32* %15, align 4, !dbg !8844
  %31 = load i32, i32* %10, align 4, !dbg !8846
  %32 = sext i32 %31 to i64, !dbg !8846
  %33 = icmp eq i64 %32, -1, !dbg !8847
  br i1 %33, label %34, label %39, !dbg !8848

34:                                               ; preds = %29
  %35 = call i32 @sys_clock_hw_cycles_per_sec() #10, !dbg !8849
  %36 = sdiv i32 %35, 10000, !dbg !8849
  %37 = sdiv i32 16777215, %36, !dbg !8849
  %38 = sub nsw i32 %37, 1, !dbg !8849
  br label %41, !dbg !8848

39:                                               ; preds = %29
  %40 = load i32, i32* %10, align 4, !dbg !8850
  br label %41, !dbg !8848

41:                                               ; preds = %39, %34
  %42 = phi i32 [ %38, %34 ], [ %40, %39 ], !dbg !8848
  store i32 %42, i32* %10, align 4, !dbg !8851
  %43 = load i32, i32* %10, align 4, !dbg !8852
  %44 = sub nsw i32 %43, 1, !dbg !8852
  %45 = icmp sle i32 %44, 0, !dbg !8852
  br i1 %45, label %46, label %47, !dbg !8852

46:                                               ; preds = %41
  br label %65, !dbg !8852

47:                                               ; preds = %41
  %48 = load i32, i32* %10, align 4, !dbg !8852
  %49 = sub nsw i32 %48, 1, !dbg !8852
  %50 = call i32 @sys_clock_hw_cycles_per_sec() #10, !dbg !8852
  %51 = sdiv i32 %50, 10000, !dbg !8852
  %52 = sdiv i32 16777215, %51, !dbg !8852
  %53 = sub nsw i32 %52, 1, !dbg !8852
  %54 = icmp slt i32 %49, %53, !dbg !8852
  br i1 %54, label %55, label %58, !dbg !8852

55:                                               ; preds = %47
  %56 = load i32, i32* %10, align 4, !dbg !8852
  %57 = sub nsw i32 %56, 1, !dbg !8852
  br label %63, !dbg !8852

58:                                               ; preds = %47
  %59 = call i32 @sys_clock_hw_cycles_per_sec() #10, !dbg !8852
  %60 = sdiv i32 %59, 10000, !dbg !8852
  %61 = sdiv i32 16777215, %60, !dbg !8852
  %62 = sub nsw i32 %61, 1, !dbg !8852
  br label %63, !dbg !8852

63:                                               ; preds = %58, %55
  %64 = phi i32 [ %57, %55 ], [ %62, %58 ], !dbg !8852
  br label %65, !dbg !8852

65:                                               ; preds = %63, %46
  %66 = phi i32 [ 0, %46 ], [ %64, %63 ], !dbg !8852
  store i32 %66, i32* %10, align 4, !dbg !8853
  call void @llvm.dbg.declare(metadata %union.anon.68* %16, metadata !8854, metadata !DIExpression()), !dbg !8859
  store %struct.k_spinlock.13* @lock, %struct.k_spinlock.13** %9, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %9, metadata !8860, metadata !DIExpression()) #9, !dbg !8865
  %67 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %9, align 4, !dbg !8867
  call void @llvm.dbg.declare(metadata %union.anon.68* %8, metadata !8868, metadata !DIExpression()) #9, !dbg !8869
  call void @llvm.dbg.declare(metadata i32* %4, metadata !8870, metadata !DIExpression()) #9, !dbg !8872
  call void @llvm.dbg.declare(metadata i32* %5, metadata !8874, metadata !DIExpression()) #9, !dbg !8875
  %68 = call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #9, !dbg !8876, !srcloc !8877
  %69 = extractvalue { i32, i32 } %68, 0, !dbg !8876
  %70 = extractvalue { i32, i32 } %68, 1, !dbg !8876
  store i32 %69, i32* %4, align 4, !dbg !8876
  store i32 %70, i32* %5, align 4, !dbg !8876
  %71 = load i32, i32* %4, align 4, !dbg !8878
  %72 = getelementptr inbounds %union.anon.68, %union.anon.68* %8, i32 0, i32 0, !dbg !8879
  store i32 %71, i32* %72, align 4, !dbg !8880
  %73 = getelementptr inbounds %union.anon.68, %union.anon.68* %8, i32 0, i32 0, !dbg !8881
  %74 = load i32, i32* %73, align 4, !dbg !8881
  %75 = getelementptr inbounds %union.anon.68, %union.anon.68* %16, i32 0, i32 0, !dbg !8882
  store i32 %74, i32* %75, align 4, !dbg !8882
  call void @llvm.dbg.declare(metadata i32* %17, metadata !8883, metadata !DIExpression()), !dbg !8884
  %76 = call i32 @elapsed() #10, !dbg !8885
  store i32 %76, i32* %17, align 4, !dbg !8884
  %77 = load volatile i32, i32* getelementptr inbounds (%struct.anon.2, %struct.anon.2* inttoptr (i32 -536813552 to %struct.anon.2*), i32 0, i32 2), align 4, !dbg !8886
  store i32 %77, i32* %13, align 4, !dbg !8887
  %78 = load i32, i32* %17, align 4, !dbg !8888
  %79 = load i32, i32* @cycle_count, align 4, !dbg !8889
  %80 = add i32 %79, %78, !dbg !8889
  store i32 %80, i32* @cycle_count, align 4, !dbg !8889
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !8890
  call void @llvm.dbg.declare(metadata i32* %18, metadata !8891, metadata !DIExpression()), !dbg !8892
  %81 = load i32, i32* @cycle_count, align 4, !dbg !8893
  %82 = load i32, i32* @announced_cycles, align 4, !dbg !8894
  %83 = sub i32 %81, %82, !dbg !8895
  store i32 %83, i32* %18, align 4, !dbg !8892
  %84 = load i32, i32* %18, align 4, !dbg !8896
  %85 = icmp slt i32 %84, 0, !dbg !8898
  br i1 %85, label %86, label %98, !dbg !8899

86:                                               ; preds = %65
  %87 = call i32 @sys_clock_hw_cycles_per_sec() #10, !dbg !8900
  %88 = sdiv i32 %87, 10000, !dbg !8900
  %89 = sdiv i32 %88, 16, !dbg !8900
  %90 = icmp sgt i32 1024, %89, !dbg !8900
  br i1 %90, label %91, label %92, !dbg !8900

91:                                               ; preds = %86
  br label %96, !dbg !8900

92:                                               ; preds = %86
  %93 = call i32 @sys_clock_hw_cycles_per_sec() #10, !dbg !8900
  %94 = sdiv i32 %93, 10000, !dbg !8900
  %95 = sdiv i32 %94, 16, !dbg !8900
  br label %96, !dbg !8900

96:                                               ; preds = %92, %91
  %97 = phi i32 [ 1024, %91 ], [ %95, %92 ], !dbg !8900
  store i32 %97, i32* @last_load, align 4, !dbg !8902
  br label %169, !dbg !8903

98:                                               ; preds = %65
  %99 = load i32, i32* %10, align 4, !dbg !8904
  %100 = call i32 @sys_clock_hw_cycles_per_sec() #10, !dbg !8906
  %101 = sdiv i32 %100, 10000, !dbg !8906
  %102 = mul nsw i32 %99, %101, !dbg !8907
  store i32 %102, i32* %12, align 4, !dbg !8908
  %103 = load i32, i32* %18, align 4, !dbg !8909
  %104 = load i32, i32* %12, align 4, !dbg !8910
  %105 = add i32 %104, %103, !dbg !8910
  store i32 %105, i32* %12, align 4, !dbg !8910
  %106 = load i32, i32* %12, align 4, !dbg !8911
  %107 = call i32 @sys_clock_hw_cycles_per_sec() #10, !dbg !8912
  %108 = sdiv i32 %107, 10000, !dbg !8912
  %109 = add i32 %106, %108, !dbg !8913
  %110 = sub i32 %109, 1, !dbg !8914
  %111 = call i32 @sys_clock_hw_cycles_per_sec() #10, !dbg !8915
  %112 = sdiv i32 %111, 10000, !dbg !8915
  %113 = udiv i32 %110, %112, !dbg !8916
  %114 = call i32 @sys_clock_hw_cycles_per_sec() #10, !dbg !8917
  %115 = sdiv i32 %114, 10000, !dbg !8917
  %116 = mul i32 %113, %115, !dbg !8918
  store i32 %116, i32* %12, align 4, !dbg !8919
  %117 = load i32, i32* %18, align 4, !dbg !8920
  %118 = load i32, i32* %12, align 4, !dbg !8921
  %119 = sub i32 %118, %117, !dbg !8921
  store i32 %119, i32* %12, align 4, !dbg !8921
  %120 = load i32, i32* %12, align 4, !dbg !8922
  %121 = call i32 @sys_clock_hw_cycles_per_sec() #10, !dbg !8922
  %122 = sdiv i32 %121, 10000, !dbg !8922
  %123 = sdiv i32 %122, 16, !dbg !8922
  %124 = icmp sgt i32 1024, %123, !dbg !8922
  br i1 %124, label %125, label %126, !dbg !8922

125:                                              ; preds = %98
  br label %130, !dbg !8922

126:                                              ; preds = %98
  %127 = call i32 @sys_clock_hw_cycles_per_sec() #10, !dbg !8922
  %128 = sdiv i32 %127, 10000, !dbg !8922
  %129 = sdiv i32 %128, 16, !dbg !8922
  br label %130, !dbg !8922

130:                                              ; preds = %126, %125
  %131 = phi i32 [ 1024, %125 ], [ %129, %126 ], !dbg !8922
  %132 = icmp ugt i32 %120, %131, !dbg !8922
  br i1 %132, label %133, label %135, !dbg !8922

133:                                              ; preds = %130
  %134 = load i32, i32* %12, align 4, !dbg !8922
  br label %147, !dbg !8922

135:                                              ; preds = %130
  %136 = call i32 @sys_clock_hw_cycles_per_sec() #10, !dbg !8922
  %137 = sdiv i32 %136, 10000, !dbg !8922
  %138 = sdiv i32 %137, 16, !dbg !8922
  %139 = icmp sgt i32 1024, %138, !dbg !8922
  br i1 %139, label %140, label %141, !dbg !8922

140:                                              ; preds = %135
  br label %145, !dbg !8922

141:                                              ; preds = %135
  %142 = call i32 @sys_clock_hw_cycles_per_sec() #10, !dbg !8922
  %143 = sdiv i32 %142, 10000, !dbg !8922
  %144 = sdiv i32 %143, 16, !dbg !8922
  br label %145, !dbg !8922

145:                                              ; preds = %141, %140
  %146 = phi i32 [ 1024, %140 ], [ %144, %141 ], !dbg !8922
  br label %147, !dbg !8922

147:                                              ; preds = %145, %133
  %148 = phi i32 [ %134, %133 ], [ %146, %145 ], !dbg !8922
  store i32 %148, i32* %12, align 4, !dbg !8923
  %149 = load i32, i32* %12, align 4, !dbg !8924
  %150 = call i32 @sys_clock_hw_cycles_per_sec() #10, !dbg !8926
  %151 = sdiv i32 %150, 10000, !dbg !8926
  %152 = sdiv i32 16777215, %151, !dbg !8926
  %153 = sub nsw i32 %152, 1, !dbg !8926
  %154 = call i32 @sys_clock_hw_cycles_per_sec() #10, !dbg !8926
  %155 = sdiv i32 %154, 10000, !dbg !8926
  %156 = mul nsw i32 %153, %155, !dbg !8926
  %157 = icmp ugt i32 %149, %156, !dbg !8927
  br i1 %157, label %158, label %166, !dbg !8928

158:                                              ; preds = %147
  %159 = call i32 @sys_clock_hw_cycles_per_sec() #10, !dbg !8929
  %160 = sdiv i32 %159, 10000, !dbg !8929
  %161 = sdiv i32 16777215, %160, !dbg !8929
  %162 = sub nsw i32 %161, 1, !dbg !8929
  %163 = call i32 @sys_clock_hw_cycles_per_sec() #10, !dbg !8929
  %164 = sdiv i32 %163, 10000, !dbg !8929
  %165 = mul nsw i32 %162, %164, !dbg !8929
  store i32 %165, i32* @last_load, align 4, !dbg !8931
  br label %168, !dbg !8932

166:                                              ; preds = %147
  %167 = load i32, i32* %12, align 4, !dbg !8933
  store i32 %167, i32* @last_load, align 4, !dbg !8935
  br label %168

168:                                              ; preds = %166, %158
  br label %169

169:                                              ; preds = %168, %96
  %170 = load volatile i32, i32* getelementptr inbounds (%struct.anon.2, %struct.anon.2* inttoptr (i32 -536813552 to %struct.anon.2*), i32 0, i32 2), align 4, !dbg !8936
  store i32 %170, i32* %14, align 4, !dbg !8937
  %171 = load i32, i32* @last_load, align 4, !dbg !8938
  %172 = sub i32 %171, 1, !dbg !8939
  store volatile i32 %172, i32* getelementptr inbounds (%struct.anon.2, %struct.anon.2* inttoptr (i32 -536813552 to %struct.anon.2*), i32 0, i32 1), align 4, !dbg !8940
  store volatile i32 0, i32* getelementptr inbounds (%struct.anon.2, %struct.anon.2* inttoptr (i32 -536813552 to %struct.anon.2*), i32 0, i32 2), align 4, !dbg !8941
  %173 = load i32, i32* %13, align 4, !dbg !8942
  %174 = load i32, i32* %14, align 4, !dbg !8944
  %175 = icmp ult i32 %173, %174, !dbg !8945
  br i1 %175, label %176, label %184, !dbg !8946

176:                                              ; preds = %169
  %177 = load i32, i32* %13, align 4, !dbg !8947
  %178 = load i32, i32* %15, align 4, !dbg !8949
  %179 = load i32, i32* %14, align 4, !dbg !8950
  %180 = sub i32 %178, %179, !dbg !8951
  %181 = add i32 %177, %180, !dbg !8952
  %182 = load i32, i32* @cycle_count, align 4, !dbg !8953
  %183 = add i32 %182, %181, !dbg !8953
  store i32 %183, i32* @cycle_count, align 4, !dbg !8953
  br label %190, !dbg !8954

184:                                              ; preds = %169
  %185 = load i32, i32* %13, align 4, !dbg !8955
  %186 = load i32, i32* %14, align 4, !dbg !8957
  %187 = sub i32 %185, %186, !dbg !8958
  %188 = load i32, i32* @cycle_count, align 4, !dbg !8959
  %189 = add i32 %188, %187, !dbg !8959
  store i32 %189, i32* @cycle_count, align 4, !dbg !8959
  br label %190

190:                                              ; preds = %184, %176
  %191 = getelementptr inbounds %union.anon.68, %union.anon.68* %16, i32 0, i32 0, !dbg !8960
  %192 = bitcast i32* %191 to [1 x i32]*, !dbg !8960
  %193 = load [1 x i32], [1 x i32]* %192, align 4, !dbg !8960
  %194 = getelementptr inbounds %union.anon.68, %union.anon.68* %6, i32 0, i32 0
  %195 = bitcast i32* %194 to [1 x i32]*
  store [1 x i32] %193, [1 x i32]* %195, align 4
  store %struct.k_spinlock.13* @lock, %struct.k_spinlock.13** %7, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %7, metadata !8961, metadata !DIExpression()) #9, !dbg !8965
  call void @llvm.dbg.declare(metadata %union.anon.68* %6, metadata !8967, metadata !DIExpression()) #9, !dbg !8968
  %196 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %7, align 4, !dbg !8969
  %197 = getelementptr inbounds %union.anon.68, %union.anon.68* %6, i32 0, i32 0, !dbg !8970
  %198 = load i32, i32* %197, align 4, !dbg !8970
  store i32 %198, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !8971, metadata !DIExpression()) #9, !dbg !8973
  %199 = load i32, i32* %3, align 4, !dbg !8975
  call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %199) #9, !dbg !8976, !srcloc !8977
  br label %200, !dbg !8978

200:                                              ; preds = %190, %26
  ret void, !dbg !8978
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @sys_clock_elapsed() #1 !dbg !8979 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca %union.anon.68, align 4
  %5 = alloca %struct.k_spinlock.13*, align 4
  %6 = alloca %union.anon.68, align 4
  %7 = alloca %struct.k_spinlock.13*, align 4
  %8 = alloca %union.anon.68, align 4
  %9 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata %union.anon.68* %8, metadata !8980, metadata !DIExpression()), !dbg !8981
  store %struct.k_spinlock.13* @lock, %struct.k_spinlock.13** %7, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %7, metadata !8860, metadata !DIExpression()) #9, !dbg !8982
  %10 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %7, align 4, !dbg !8984
  call void @llvm.dbg.declare(metadata %union.anon.68* %6, metadata !8868, metadata !DIExpression()) #9, !dbg !8985
  call void @llvm.dbg.declare(metadata i32* %2, metadata !8870, metadata !DIExpression()) #9, !dbg !8986
  call void @llvm.dbg.declare(metadata i32* %3, metadata !8874, metadata !DIExpression()) #9, !dbg !8988
  %11 = call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #9, !dbg !8989, !srcloc !8877
  %12 = extractvalue { i32, i32 } %11, 0, !dbg !8989
  %13 = extractvalue { i32, i32 } %11, 1, !dbg !8989
  store i32 %12, i32* %2, align 4, !dbg !8989
  store i32 %13, i32* %3, align 4, !dbg !8989
  %14 = load i32, i32* %2, align 4, !dbg !8990
  %15 = getelementptr inbounds %union.anon.68, %union.anon.68* %6, i32 0, i32 0, !dbg !8991
  store i32 %14, i32* %15, align 4, !dbg !8992
  %16 = getelementptr inbounds %union.anon.68, %union.anon.68* %6, i32 0, i32 0, !dbg !8993
  %17 = load i32, i32* %16, align 4, !dbg !8993
  %18 = getelementptr inbounds %union.anon.68, %union.anon.68* %8, i32 0, i32 0, !dbg !8994
  store i32 %17, i32* %18, align 4, !dbg !8994
  call void @llvm.dbg.declare(metadata i32* %9, metadata !8995, metadata !DIExpression()), !dbg !8996
  %19 = call i32 @elapsed() #10, !dbg !8997
  %20 = load i32, i32* @cycle_count, align 4, !dbg !8998
  %21 = add i32 %19, %20, !dbg !8999
  %22 = load i32, i32* @announced_cycles, align 4, !dbg !9000
  %23 = sub i32 %21, %22, !dbg !9001
  store i32 %23, i32* %9, align 4, !dbg !8996
  %24 = getelementptr inbounds %union.anon.68, %union.anon.68* %8, i32 0, i32 0, !dbg !9002
  %25 = bitcast i32* %24 to [1 x i32]*, !dbg !9002
  %26 = load [1 x i32], [1 x i32]* %25, align 4, !dbg !9002
  %27 = getelementptr inbounds %union.anon.68, %union.anon.68* %4, i32 0, i32 0
  %28 = bitcast i32* %27 to [1 x i32]*
  store [1 x i32] %26, [1 x i32]* %28, align 4
  store %struct.k_spinlock.13* @lock, %struct.k_spinlock.13** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %5, metadata !8961, metadata !DIExpression()) #9, !dbg !9003
  call void @llvm.dbg.declare(metadata %union.anon.68* %4, metadata !8967, metadata !DIExpression()) #9, !dbg !9005
  %29 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %5, align 4, !dbg !9006
  %30 = getelementptr inbounds %union.anon.68, %union.anon.68* %4, i32 0, i32 0, !dbg !9007
  %31 = load i32, i32* %30, align 4, !dbg !9007
  store i32 %31, i32* %1, align 4
  call void @llvm.dbg.declare(metadata i32* %1, metadata !8971, metadata !DIExpression()) #9, !dbg !9008
  %32 = load i32, i32* %1, align 4, !dbg !9010
  call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %32) #9, !dbg !9011, !srcloc !8977
  %33 = load i32, i32* %9, align 4, !dbg !9012
  %34 = call i32 @sys_clock_hw_cycles_per_sec() #10, !dbg !9013
  %35 = sdiv i32 %34, 10000, !dbg !9013
  %36 = udiv i32 %33, %35, !dbg !9014
  ret i32 %36, !dbg !9015
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @sys_clock_cycle_get_32() #1 !dbg !9016 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca %union.anon.68, align 4
  %5 = alloca %struct.k_spinlock.13*, align 4
  %6 = alloca %union.anon.68, align 4
  %7 = alloca %struct.k_spinlock.13*, align 4
  %8 = alloca %union.anon.68, align 4
  %9 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata %union.anon.68* %8, metadata !9017, metadata !DIExpression()), !dbg !9018
  store %struct.k_spinlock.13* @lock, %struct.k_spinlock.13** %7, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %7, metadata !8860, metadata !DIExpression()) #9, !dbg !9019
  %10 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %7, align 4, !dbg !9021
  call void @llvm.dbg.declare(metadata %union.anon.68* %6, metadata !8868, metadata !DIExpression()) #9, !dbg !9022
  call void @llvm.dbg.declare(metadata i32* %2, metadata !8870, metadata !DIExpression()) #9, !dbg !9023
  call void @llvm.dbg.declare(metadata i32* %3, metadata !8874, metadata !DIExpression()) #9, !dbg !9025
  %11 = call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #9, !dbg !9026, !srcloc !8877
  %12 = extractvalue { i32, i32 } %11, 0, !dbg !9026
  %13 = extractvalue { i32, i32 } %11, 1, !dbg !9026
  store i32 %12, i32* %2, align 4, !dbg !9026
  store i32 %13, i32* %3, align 4, !dbg !9026
  %14 = load i32, i32* %2, align 4, !dbg !9027
  %15 = getelementptr inbounds %union.anon.68, %union.anon.68* %6, i32 0, i32 0, !dbg !9028
  store i32 %14, i32* %15, align 4, !dbg !9029
  %16 = getelementptr inbounds %union.anon.68, %union.anon.68* %6, i32 0, i32 0, !dbg !9030
  %17 = load i32, i32* %16, align 4, !dbg !9030
  %18 = getelementptr inbounds %union.anon.68, %union.anon.68* %8, i32 0, i32 0, !dbg !9031
  store i32 %17, i32* %18, align 4, !dbg !9031
  call void @llvm.dbg.declare(metadata i32* %9, metadata !9032, metadata !DIExpression()), !dbg !9033
  %19 = call i32 @elapsed() #10, !dbg !9034
  %20 = load i32, i32* @cycle_count, align 4, !dbg !9035
  %21 = add i32 %19, %20, !dbg !9036
  store i32 %21, i32* %9, align 4, !dbg !9033
  %22 = getelementptr inbounds %union.anon.68, %union.anon.68* %8, i32 0, i32 0, !dbg !9037
  %23 = bitcast i32* %22 to [1 x i32]*, !dbg !9037
  %24 = load [1 x i32], [1 x i32]* %23, align 4, !dbg !9037
  %25 = getelementptr inbounds %union.anon.68, %union.anon.68* %4, i32 0, i32 0
  %26 = bitcast i32* %25 to [1 x i32]*
  store [1 x i32] %24, [1 x i32]* %26, align 4
  store %struct.k_spinlock.13* @lock, %struct.k_spinlock.13** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %5, metadata !8961, metadata !DIExpression()) #9, !dbg !9038
  call void @llvm.dbg.declare(metadata %union.anon.68* %4, metadata !8967, metadata !DIExpression()) #9, !dbg !9040
  %27 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %5, align 4, !dbg !9041
  %28 = getelementptr inbounds %union.anon.68, %union.anon.68* %4, i32 0, i32 0, !dbg !9042
  %29 = load i32, i32* %28, align 4, !dbg !9042
  store i32 %29, i32* %1, align 4
  call void @llvm.dbg.declare(metadata i32* %1, metadata !8971, metadata !DIExpression()) #9, !dbg !9043
  %30 = load i32, i32* %1, align 4, !dbg !9045
  call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %30) #9, !dbg !9046, !srcloc !8977
  %31 = load i32, i32* %9, align 4, !dbg !9047
  ret i32 %31, !dbg !9048
}

; Function Attrs: noinline nounwind optnone
define dso_local void @sys_clock_idle_exit() #1 !dbg !9049 {
  %1 = load i32, i32* @last_load, align 4, !dbg !9050
  %2 = icmp eq i32 %1, -16777216, !dbg !9052
  br i1 %2, label %3, label %6, !dbg !9053

3:                                                ; preds = %0
  %4 = load volatile i32, i32* getelementptr inbounds (%struct.anon.2, %struct.anon.2* inttoptr (i32 -536813552 to %struct.anon.2*), i32 0, i32 0), align 4, !dbg !9054
  %5 = or i32 %4, 1, !dbg !9054
  store volatile i32 %5, i32* getelementptr inbounds (%struct.anon.2, %struct.anon.2* inttoptr (i32 -536813552 to %struct.anon.2*), i32 0, i32 0), align 4, !dbg !9054
  br label %6, !dbg !9056

6:                                                ; preds = %3, %0
  ret void, !dbg !9057
}

; Function Attrs: noinline nounwind optnone
define dso_local void @sys_clock_disable() #1 !dbg !9058 {
  %1 = load volatile i32, i32* getelementptr inbounds (%struct.anon.2, %struct.anon.2* inttoptr (i32 -536813552 to %struct.anon.2*), i32 0, i32 0), align 4, !dbg !9059
  %2 = and i32 %1, -2, !dbg !9059
  store volatile i32 %2, i32* getelementptr inbounds (%struct.anon.2, %struct.anon.2* inttoptr (i32 -536813552 to %struct.anon.2*), i32 0, i32 0), align 4, !dbg !9059
  ret void, !dbg !9060
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* noundef %0, i8 noundef zeroext %1, %struct.pinctrl_state** noundef %2) #1 !dbg !9061 {
  %4 = alloca i32, align 4
  %5 = alloca %struct.pinctrl_dev_config*, align 4
  %6 = alloca i8, align 1
  %7 = alloca %struct.pinctrl_state**, align 4
  store %struct.pinctrl_dev_config* %0, %struct.pinctrl_dev_config** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.pinctrl_dev_config** %5, metadata !9093, metadata !DIExpression()), !dbg !9094
  store i8 %1, i8* %6, align 1
  call void @llvm.dbg.declare(metadata i8* %6, metadata !9095, metadata !DIExpression()), !dbg !9096
  store %struct.pinctrl_state** %2, %struct.pinctrl_state*** %7, align 4
  call void @llvm.dbg.declare(metadata %struct.pinctrl_state*** %7, metadata !9097, metadata !DIExpression()), !dbg !9098
  %8 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %5, align 4, !dbg !9099
  %9 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %8, i32 0, i32 0, !dbg !9100
  %10 = load %struct.pinctrl_state*, %struct.pinctrl_state** %9, align 4, !dbg !9100
  %11 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %10, i32 0, !dbg !9099
  %12 = load %struct.pinctrl_state**, %struct.pinctrl_state*** %7, align 4, !dbg !9101
  store %struct.pinctrl_state* %11, %struct.pinctrl_state** %12, align 4, !dbg !9102
  br label %13, !dbg !9103

13:                                               ; preds = %35, %3
  %14 = load %struct.pinctrl_state**, %struct.pinctrl_state*** %7, align 4, !dbg !9104
  %15 = load %struct.pinctrl_state*, %struct.pinctrl_state** %14, align 4, !dbg !9105
  %16 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %5, align 4, !dbg !9106
  %17 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %16, i32 0, i32 0, !dbg !9107
  %18 = load %struct.pinctrl_state*, %struct.pinctrl_state** %17, align 4, !dbg !9107
  %19 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %5, align 4, !dbg !9108
  %20 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %19, i32 0, i32 1, !dbg !9109
  %21 = load i8, i8* %20, align 4, !dbg !9109
  %22 = zext i8 %21 to i32, !dbg !9106
  %23 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %18, i32 %22, !dbg !9106
  %24 = icmp ult %struct.pinctrl_state* %15, %23, !dbg !9110
  br i1 %24, label %25, label %39, !dbg !9103

25:                                               ; preds = %13
  %26 = load i8, i8* %6, align 1, !dbg !9111
  %27 = zext i8 %26 to i32, !dbg !9111
  %28 = load %struct.pinctrl_state**, %struct.pinctrl_state*** %7, align 4, !dbg !9114
  %29 = load %struct.pinctrl_state*, %struct.pinctrl_state** %28, align 4, !dbg !9115
  %30 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %29, i32 0, i32 2, !dbg !9116
  %31 = load i8, i8* %30, align 1, !dbg !9116
  %32 = zext i8 %31 to i32, !dbg !9117
  %33 = icmp eq i32 %27, %32, !dbg !9118
  br i1 %33, label %34, label %35, !dbg !9119

34:                                               ; preds = %25
  store i32 0, i32* %4, align 4, !dbg !9120
  br label %40, !dbg !9120

35:                                               ; preds = %25
  %36 = load %struct.pinctrl_state**, %struct.pinctrl_state*** %7, align 4, !dbg !9122
  %37 = load %struct.pinctrl_state*, %struct.pinctrl_state** %36, align 4, !dbg !9123
  %38 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %37, i32 1, !dbg !9123
  store %struct.pinctrl_state* %38, %struct.pinctrl_state** %36, align 4, !dbg !9123
  br label %13, !dbg !9103, !llvm.loop !9124

39:                                               ; preds = %13
  store i32 -2, i32* %4, align 4, !dbg !9126
  br label %40, !dbg !9126

40:                                               ; preds = %39, %34
  %41 = load i32, i32* %4, align 4, !dbg !9127
  ret i32 %41, !dbg !9127
}

; Function Attrs: noinline nounwind optnone
define internal i32 @imx_pinctrl_init(%struct.device.71* noundef %0) #1 !dbg !9128 {
  %2 = alloca %struct.device.71*, align 4
  store %struct.device.71* %0, %struct.device.71** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.device.71** %2, metadata !9129, metadata !DIExpression()), !dbg !9130
  %3 = load %struct.device.71*, %struct.device.71** %2, align 4, !dbg !9131
  ret i32 0, !dbg !9132
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @pinctrl_configure_pins(%struct.pinctrl_soc_pin* noundef %0, i8 noundef zeroext %1, i32 noundef %2) #1 !dbg !9133 {
  %4 = alloca %struct.pinctrl_soc_pin*, align 4
  %5 = alloca i8, align 1
  %6 = alloca i32, align 4
  %7 = alloca i8, align 1
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  store %struct.pinctrl_soc_pin* %0, %struct.pinctrl_soc_pin** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.pinctrl_soc_pin** %4, metadata !9150, metadata !DIExpression()), !dbg !9151
  store i8 %1, i8* %5, align 1
  call void @llvm.dbg.declare(metadata i8* %5, metadata !9152, metadata !DIExpression()), !dbg !9153
  store i32 %2, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !9154, metadata !DIExpression()), !dbg !9155
  call void @llvm.dbg.declare(metadata i8* %7, metadata !9156, metadata !DIExpression()), !dbg !9158
  store i8 0, i8* %7, align 1, !dbg !9158
  br label %14, !dbg !9159

14:                                               ; preds = %92, %3
  %15 = load i8, i8* %7, align 1, !dbg !9160
  %16 = zext i8 %15 to i32, !dbg !9160
  %17 = load i8, i8* %5, align 1, !dbg !9162
  %18 = zext i8 %17 to i32, !dbg !9162
  %19 = icmp slt i32 %16, %18, !dbg !9163
  br i1 %19, label %20, label %95, !dbg !9164

20:                                               ; preds = %14
  call void @llvm.dbg.declare(metadata i32* %8, metadata !9165, metadata !DIExpression()), !dbg !9167
  %21 = load %struct.pinctrl_soc_pin*, %struct.pinctrl_soc_pin** %4, align 4, !dbg !9168
  %22 = load i8, i8* %7, align 1, !dbg !9169
  %23 = zext i8 %22 to i32, !dbg !9168
  %24 = getelementptr inbounds %struct.pinctrl_soc_pin, %struct.pinctrl_soc_pin* %21, i32 %23, !dbg !9168
  %25 = getelementptr inbounds %struct.pinctrl_soc_pin, %struct.pinctrl_soc_pin* %24, i32 0, i32 0, !dbg !9170
  %26 = getelementptr inbounds %struct.pinctrl_soc_pinmux, %struct.pinctrl_soc_pinmux* %25, i32 0, i32 0, !dbg !9171
  %27 = load i32, i32* %26, align 4, !dbg !9171
  store i32 %27, i32* %8, align 4, !dbg !9167
  call void @llvm.dbg.declare(metadata i32* %9, metadata !9172, metadata !DIExpression()), !dbg !9173
  %28 = load %struct.pinctrl_soc_pin*, %struct.pinctrl_soc_pin** %4, align 4, !dbg !9174
  %29 = load i8, i8* %7, align 1, !dbg !9175
  %30 = zext i8 %29 to i32, !dbg !9174
  %31 = getelementptr inbounds %struct.pinctrl_soc_pin, %struct.pinctrl_soc_pin* %28, i32 %30, !dbg !9174
  %32 = getelementptr inbounds %struct.pinctrl_soc_pin, %struct.pinctrl_soc_pin* %31, i32 0, i32 0, !dbg !9176
  %33 = getelementptr inbounds %struct.pinctrl_soc_pinmux, %struct.pinctrl_soc_pinmux* %32, i32 0, i32 3, !dbg !9177
  %34 = load i8, i8* %33, align 4, !dbg !9177
  %35 = and i8 %34, 15, !dbg !9177
  %36 = zext i8 %35 to i32, !dbg !9174
  store i32 %36, i32* %9, align 4, !dbg !9173
  call void @llvm.dbg.declare(metadata i32* %10, metadata !9178, metadata !DIExpression()), !dbg !9179
  %37 = load %struct.pinctrl_soc_pin*, %struct.pinctrl_soc_pin** %4, align 4, !dbg !9180
  %38 = load i8, i8* %7, align 1, !dbg !9181
  %39 = zext i8 %38 to i32, !dbg !9180
  %40 = getelementptr inbounds %struct.pinctrl_soc_pin, %struct.pinctrl_soc_pin* %37, i32 %39, !dbg !9180
  %41 = getelementptr inbounds %struct.pinctrl_soc_pin, %struct.pinctrl_soc_pin* %40, i32 0, i32 0, !dbg !9182
  %42 = getelementptr inbounds %struct.pinctrl_soc_pinmux, %struct.pinctrl_soc_pinmux* %41, i32 0, i32 2, !dbg !9183
  %43 = load i32, i32* %42, align 4, !dbg !9183
  store i32 %43, i32* %10, align 4, !dbg !9179
  call void @llvm.dbg.declare(metadata i32* %11, metadata !9184, metadata !DIExpression()), !dbg !9185
  %44 = load %struct.pinctrl_soc_pin*, %struct.pinctrl_soc_pin** %4, align 4, !dbg !9186
  %45 = load i8, i8* %7, align 1, !dbg !9187
  %46 = zext i8 %45 to i32, !dbg !9186
  %47 = getelementptr inbounds %struct.pinctrl_soc_pin, %struct.pinctrl_soc_pin* %44, i32 %46, !dbg !9186
  %48 = getelementptr inbounds %struct.pinctrl_soc_pin, %struct.pinctrl_soc_pin* %47, i32 0, i32 0, !dbg !9188
  %49 = getelementptr inbounds %struct.pinctrl_soc_pinmux, %struct.pinctrl_soc_pinmux* %48, i32 0, i32 3, !dbg !9189
  %50 = load i8, i8* %49, align 4, !dbg !9189
  %51 = lshr i8 %50, 4, !dbg !9189
  %52 = zext i8 %51 to i32, !dbg !9189
  store i32 %52, i32* %11, align 4, !dbg !9185
  call void @llvm.dbg.declare(metadata i32* %12, metadata !9190, metadata !DIExpression()), !dbg !9191
  %53 = load %struct.pinctrl_soc_pin*, %struct.pinctrl_soc_pin** %4, align 4, !dbg !9192
  %54 = load i8, i8* %7, align 1, !dbg !9193
  %55 = zext i8 %54 to i32, !dbg !9192
  %56 = getelementptr inbounds %struct.pinctrl_soc_pin, %struct.pinctrl_soc_pin* %53, i32 %55, !dbg !9192
  %57 = getelementptr inbounds %struct.pinctrl_soc_pin, %struct.pinctrl_soc_pin* %56, i32 0, i32 0, !dbg !9194
  %58 = getelementptr inbounds %struct.pinctrl_soc_pinmux, %struct.pinctrl_soc_pinmux* %57, i32 0, i32 1, !dbg !9195
  %59 = load i32, i32* %58, align 4, !dbg !9195
  store i32 %59, i32* %12, align 4, !dbg !9191
  call void @llvm.dbg.declare(metadata i32* %13, metadata !9196, metadata !DIExpression()), !dbg !9197
  %60 = load %struct.pinctrl_soc_pin*, %struct.pinctrl_soc_pin** %4, align 4, !dbg !9198
  %61 = load i8, i8* %7, align 1, !dbg !9199
  %62 = zext i8 %61 to i32, !dbg !9198
  %63 = getelementptr inbounds %struct.pinctrl_soc_pin, %struct.pinctrl_soc_pin* %60, i32 %62, !dbg !9198
  %64 = getelementptr inbounds %struct.pinctrl_soc_pin, %struct.pinctrl_soc_pin* %63, i32 0, i32 1, !dbg !9200
  %65 = load i32, i32* %64, align 4, !dbg !9200
  store i32 %65, i32* %13, align 4, !dbg !9197
  %66 = load i32, i32* %9, align 4, !dbg !9201
  %67 = and i32 %66, 15, !dbg !9201
  %68 = load i32, i32* %13, align 4, !dbg !9202
  %69 = lshr i32 %68, 31, !dbg !9202
  %70 = and i32 %69, 1, !dbg !9202
  %71 = and i32 %70, 1, !dbg !9202
  %72 = shl i32 %71, 4, !dbg !9202
  %73 = or i32 %67, %72, !dbg !9203
  %74 = load i32, i32* %8, align 4, !dbg !9204
  %75 = inttoptr i32 %74 to i32*, !dbg !9205
  store volatile i32 %73, i32* %75, align 4, !dbg !9206
  %76 = load i32, i32* %10, align 4, !dbg !9207
  %77 = icmp ne i32 %76, 0, !dbg !9207
  br i1 %77, label %78, label %83, !dbg !9209

78:                                               ; preds = %20
  %79 = load i32, i32* %11, align 4, !dbg !9210
  %80 = and i32 %79, 7, !dbg !9210
  %81 = load i32, i32* %10, align 4, !dbg !9212
  %82 = inttoptr i32 %81 to i32*, !dbg !9213
  store volatile i32 %80, i32* %82, align 4, !dbg !9214
  br label %83, !dbg !9215

83:                                               ; preds = %78, %20
  %84 = load i32, i32* %12, align 4, !dbg !9216
  %85 = icmp ne i32 %84, 0, !dbg !9216
  br i1 %85, label %86, label %91, !dbg !9218

86:                                               ; preds = %83
  %87 = load i32, i32* %13, align 4, !dbg !9219
  %88 = and i32 %87, 2147483647, !dbg !9221
  %89 = load i32, i32* %12, align 4, !dbg !9222
  %90 = inttoptr i32 %89 to i32*, !dbg !9223
  store volatile i32 %88, i32* %90, align 4, !dbg !9224
  br label %91, !dbg !9225

91:                                               ; preds = %86, %83
  br label %92, !dbg !9226

92:                                               ; preds = %91
  %93 = load i8, i8* %7, align 1, !dbg !9227
  %94 = add i8 %93, 1, !dbg !9227
  store i8 %94, i8* %7, align 1, !dbg !9227
  br label %14, !dbg !9228, !llvm.loop !9229

95:                                               ; preds = %14
  ret i32 0, !dbg !9231
}

; Function Attrs: noinline nounwind optnone
define dso_local void @CCM_SetRootDivider(%struct.CCM_Type* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #1 !dbg !9232 {
  %5 = alloca %struct.CCM_Type*, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store %struct.CCM_Type* %0, %struct.CCM_Type** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.CCM_Type** %5, metadata !9288, metadata !DIExpression()), !dbg !9289
  store i32 %1, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !9290, metadata !DIExpression()), !dbg !9291
  store i32 %2, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !9292, metadata !DIExpression()), !dbg !9293
  store i32 %3, i32* %8, align 4
  call void @llvm.dbg.declare(metadata i32* %8, metadata !9294, metadata !DIExpression()), !dbg !9295
  %9 = load i32, i32* %6, align 4, !dbg !9296
  %10 = add i32 %9, 0, !dbg !9296
  %11 = inttoptr i32 %10 to i32*, !dbg !9296
  %12 = load volatile i32, i32* %11, align 4, !dbg !9296
  %13 = and i32 %12, -458816, !dbg !9297
  %14 = load i32, i32* %7, align 4, !dbg !9298
  %15 = shl i32 %14, 16, !dbg !9298
  %16 = and i32 %15, 458752, !dbg !9298
  %17 = or i32 %13, %16, !dbg !9299
  %18 = load i32, i32* %8, align 4, !dbg !9300
  %19 = shl i32 %18, 0, !dbg !9300
  %20 = and i32 %19, 63, !dbg !9300
  %21 = or i32 %17, %20, !dbg !9301
  %22 = load i32, i32* %6, align 4, !dbg !9302
  %23 = add i32 %22, 0, !dbg !9302
  %24 = inttoptr i32 %23 to i32*, !dbg !9302
  store volatile i32 %21, i32* %24, align 4, !dbg !9303
  ret void, !dbg !9304
}

; Function Attrs: noinline nounwind optnone
define dso_local void @CCM_GetRootDivider(%struct.CCM_Type* noundef %0, i32 noundef %1, i32* noundef %2, i32* noundef %3) #1 !dbg !9305 {
  %5 = alloca %struct.CCM_Type*, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32*, align 4
  %8 = alloca i32*, align 4
  store %struct.CCM_Type* %0, %struct.CCM_Type** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.CCM_Type** %5, metadata !9308, metadata !DIExpression()), !dbg !9309
  store i32 %1, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !9310, metadata !DIExpression()), !dbg !9311
  store i32* %2, i32** %7, align 4
  call void @llvm.dbg.declare(metadata i32** %7, metadata !9312, metadata !DIExpression()), !dbg !9313
  store i32* %3, i32** %8, align 4
  call void @llvm.dbg.declare(metadata i32** %8, metadata !9314, metadata !DIExpression()), !dbg !9315
  %9 = load i32, i32* %6, align 4, !dbg !9316
  %10 = add i32 %9, 0, !dbg !9316
  %11 = inttoptr i32 %10 to i32*, !dbg !9316
  %12 = load volatile i32, i32* %11, align 4, !dbg !9316
  %13 = and i32 %12, 458752, !dbg !9317
  %14 = lshr i32 %13, 16, !dbg !9318
  %15 = load i32*, i32** %7, align 4, !dbg !9319
  store i32 %14, i32* %15, align 4, !dbg !9320
  %16 = load i32, i32* %6, align 4, !dbg !9321
  %17 = add i32 %16, 0, !dbg !9321
  %18 = inttoptr i32 %17 to i32*, !dbg !9321
  %19 = load volatile i32, i32* %18, align 4, !dbg !9321
  %20 = and i32 %19, 63, !dbg !9322
  %21 = lshr i32 %20, 0, !dbg !9323
  %22 = load i32*, i32** %8, align 4, !dbg !9324
  store i32 %21, i32* %22, align 4, !dbg !9325
  ret void, !dbg !9326
}

; Function Attrs: noinline nounwind optnone
define dso_local void @CCM_UpdateRoot(%struct.CCM_Type* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3, i32 noundef %4) #1 !dbg !9327 {
  %6 = alloca %struct.CCM_Type*, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  store %struct.CCM_Type* %0, %struct.CCM_Type** %6, align 4
  call void @llvm.dbg.declare(metadata %struct.CCM_Type** %6, metadata !9330, metadata !DIExpression()), !dbg !9331
  store i32 %1, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !9332, metadata !DIExpression()), !dbg !9333
  store i32 %2, i32* %8, align 4
  call void @llvm.dbg.declare(metadata i32* %8, metadata !9334, metadata !DIExpression()), !dbg !9335
  store i32 %3, i32* %9, align 4
  call void @llvm.dbg.declare(metadata i32* %9, metadata !9336, metadata !DIExpression()), !dbg !9337
  store i32 %4, i32* %10, align 4
  call void @llvm.dbg.declare(metadata i32* %10, metadata !9338, metadata !DIExpression()), !dbg !9339
  %11 = load i32, i32* %7, align 4, !dbg !9340
  %12 = add i32 %11, 0, !dbg !9340
  %13 = inttoptr i32 %12 to i32*, !dbg !9340
  %14 = load volatile i32, i32* %13, align 4, !dbg !9340
  %15 = and i32 %14, -117899328, !dbg !9341
  %16 = load i32, i32* %8, align 4, !dbg !9342
  %17 = shl i32 %16, 24, !dbg !9342
  %18 = and i32 %17, 117440512, !dbg !9342
  %19 = or i32 %15, %18, !dbg !9343
  %20 = load i32, i32* %9, align 4, !dbg !9344
  %21 = shl i32 %20, 16, !dbg !9344
  %22 = and i32 %21, 458752, !dbg !9344
  %23 = or i32 %19, %22, !dbg !9345
  %24 = load i32, i32* %10, align 4, !dbg !9346
  %25 = shl i32 %24, 0, !dbg !9346
  %26 = and i32 %25, 63, !dbg !9346
  %27 = or i32 %23, %26, !dbg !9347
  %28 = load i32, i32* %7, align 4, !dbg !9348
  %29 = add i32 %28, 0, !dbg !9348
  %30 = inttoptr i32 %29 to i32*, !dbg !9348
  store volatile i32 %27, i32* %30, align 4, !dbg !9349
  ret void, !dbg !9350
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @CCM_ANALOG_GetArmPllFreq(%struct.CCM_ANALOG_Type* noundef %0) #1 !dbg !9351 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.CCM_ANALOG_Type*, align 4
  store %struct.CCM_ANALOG_Type* %0, %struct.CCM_ANALOG_Type** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.CCM_ANALOG_Type** %3, metadata !9355, metadata !DIExpression()), !dbg !9356
  %4 = load %struct.CCM_ANALOG_Type*, %struct.CCM_ANALOG_Type** %3, align 4, !dbg !9357
  %5 = call zeroext i1 @CCM_ANALOG_IsPllBypassed(%struct.CCM_ANALOG_Type* noundef %4, i32 noundef 786528) #10, !dbg !9359
  br i1 %5, label %6, label %7, !dbg !9360

6:                                                ; preds = %1
  store i32 24000000, i32* %2, align 4, !dbg !9361
  br label %11, !dbg !9361

7:                                                ; preds = %1
  %8 = load volatile i32, i32* getelementptr inbounds (%struct.CCM_ANALOG_Type, %struct.CCM_ANALOG_Type* inttoptr (i32 808845312 to %struct.CCM_ANALOG_Type*), i32 0, i32 1), align 4, !dbg !9362
  %9 = and i32 %8, 127, !dbg !9363
  %10 = mul i32 12000000, %9, !dbg !9364
  store i32 %10, i32* %2, align 4, !dbg !9365
  br label %11, !dbg !9365

11:                                               ; preds = %7, %6
  %12 = load i32, i32* %2, align 4, !dbg !9366
  ret i32 %12, !dbg !9366
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @CCM_ANALOG_IsPllBypassed(%struct.CCM_ANALOG_Type* noundef %0, i32 noundef %1) #1 !dbg !9367 {
  %3 = alloca %struct.CCM_ANALOG_Type*, align 4
  %4 = alloca i32, align 4
  store %struct.CCM_ANALOG_Type* %0, %struct.CCM_ANALOG_Type** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.CCM_ANALOG_Type** %3, metadata !9370, metadata !DIExpression()), !dbg !9371
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !9372, metadata !DIExpression()), !dbg !9373
  %5 = load %struct.CCM_ANALOG_Type*, %struct.CCM_ANALOG_Type** %3, align 4, !dbg !9374
  %6 = ptrtoint %struct.CCM_ANALOG_Type* %5 to i32, !dbg !9374
  %7 = load i32, i32* %4, align 4, !dbg !9374
  %8 = and i32 %7, 65535, !dbg !9374
  %9 = add i32 %6, %8, !dbg !9374
  %10 = add i32 %9, 0, !dbg !9374
  %11 = inttoptr i32 %10 to i32*, !dbg !9374
  %12 = load volatile i32, i32* %11, align 4, !dbg !9374
  %13 = and i32 %12, 65536, !dbg !9375
  %14 = icmp ne i32 %13, 0, !dbg !9376
  ret i1 %14, !dbg !9377
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @CCM_ANALOG_GetSysPllFreq(%struct.CCM_ANALOG_Type* noundef %0) #1 !dbg !9378 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.CCM_ANALOG_Type*, align 4
  store %struct.CCM_ANALOG_Type* %0, %struct.CCM_ANALOG_Type** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.CCM_ANALOG_Type** %3, metadata !9379, metadata !DIExpression()), !dbg !9380
  %4 = load %struct.CCM_ANALOG_Type*, %struct.CCM_ANALOG_Type** %3, align 4, !dbg !9381
  %5 = call zeroext i1 @CCM_ANALOG_IsPllBypassed(%struct.CCM_ANALOG_Type* noundef %4, i32 noundef 786608) #10, !dbg !9383
  br i1 %5, label %6, label %7, !dbg !9384

6:                                                ; preds = %1
  store i32 24000000, i32* %2, align 4, !dbg !9385
  br label %13, !dbg !9385

7:                                                ; preds = %1
  %8 = load volatile i32, i32* getelementptr inbounds (%struct.CCM_ANALOG_Type, %struct.CCM_ANALOG_Type* inttoptr (i32 808845312 to %struct.CCM_ANALOG_Type*), i32 0, i32 15), align 4, !dbg !9386
  %9 = and i32 %8, 1, !dbg !9388
  %10 = icmp ne i32 %9, 0, !dbg !9388
  br i1 %10, label %11, label %12, !dbg !9389

11:                                               ; preds = %7
  store i32 528000000, i32* %2, align 4, !dbg !9390
  br label %13, !dbg !9390

12:                                               ; preds = %7
  store i32 480000000, i32* %2, align 4, !dbg !9391
  br label %13, !dbg !9391

13:                                               ; preds = %12, %11, %6
  %14 = load i32, i32* %2, align 4, !dbg !9392
  ret i32 %14, !dbg !9392
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @CCM_ANALOG_GetDdrPllFreq(%struct.CCM_ANALOG_Type* noundef %0) #1 !dbg !9393 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.CCM_ANALOG_Type*, align 4
  %4 = alloca i8, align 1
  %5 = alloca i8, align 1
  %6 = alloca float, align 4
  store %struct.CCM_ANALOG_Type* %0, %struct.CCM_ANALOG_Type** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.CCM_ANALOG_Type** %3, metadata !9394, metadata !DIExpression()), !dbg !9395
  call void @llvm.dbg.declare(metadata i8* %4, metadata !9396, metadata !DIExpression()), !dbg !9397
  call void @llvm.dbg.declare(metadata i8* %5, metadata !9398, metadata !DIExpression()), !dbg !9399
  call void @llvm.dbg.declare(metadata float* %6, metadata !9400, metadata !DIExpression()), !dbg !9401
  %7 = load %struct.CCM_ANALOG_Type*, %struct.CCM_ANALOG_Type** %3, align 4, !dbg !9402
  %8 = call zeroext i1 @CCM_ANALOG_IsPllBypassed(%struct.CCM_ANALOG_Type* noundef %7, i32 noundef 1310832) #10, !dbg !9404
  br i1 %8, label %9, label %10, !dbg !9405

9:                                                ; preds = %1
  store i32 24000000, i32* %2, align 4, !dbg !9406
  br label %65, !dbg !9406

10:                                               ; preds = %1
  %11 = load volatile i32, i32* getelementptr inbounds (%struct.CCM_ANALOG_Type, %struct.CCM_ANALOG_Type* inttoptr (i32 808845312 to %struct.CCM_ANALOG_Type*), i32 0, i32 5), align 4, !dbg !9407
  %12 = and i32 %11, 127, !dbg !9408
  %13 = trunc i32 %12 to i8, !dbg !9407
  store i8 %13, i8* %4, align 1, !dbg !9409
  %14 = load volatile i32, i32* getelementptr inbounds (%struct.CCM_ANALOG_Type, %struct.CCM_ANALOG_Type* inttoptr (i32 808845312 to %struct.CCM_ANALOG_Type*), i32 0, i32 5), align 4, !dbg !9410
  %15 = and i32 %14, 6291456, !dbg !9411
  %16 = lshr i32 %15, 21, !dbg !9412
  %17 = trunc i32 %16 to i8, !dbg !9413
  store i8 %17, i8* %5, align 1, !dbg !9414
  %18 = load i8, i8* %5, align 1, !dbg !9415
  %19 = zext i8 %18 to i32, !dbg !9415
  switch i32 %19, label %23 [
    i32 0, label %20
    i32 1, label %21
    i32 2, label %22
    i32 3, label %22
  ], !dbg !9416

20:                                               ; preds = %10
  store i8 2, i8* %5, align 1, !dbg !9417
  br label %23, !dbg !9419

21:                                               ; preds = %10
  store i8 1, i8* %5, align 1, !dbg !9420
  br label %23, !dbg !9421

22:                                               ; preds = %10, %10
  store i8 0, i8* %5, align 1, !dbg !9422
  br label %23, !dbg !9423

23:                                               ; preds = %10, %22, %21, %20
  %24 = load %struct.CCM_ANALOG_Type*, %struct.CCM_ANALOG_Type** %3, align 4, !dbg !9424
  %25 = getelementptr inbounds %struct.CCM_ANALOG_Type, %struct.CCM_ANALOG_Type* %24, i32 0, i32 9, !dbg !9424
  %26 = load volatile i32, i32* %25, align 4, !dbg !9424
  %27 = and i32 %26, 32768, !dbg !9426
  %28 = icmp ne i32 %27, 0, !dbg !9426
  br i1 %28, label %29, label %58, !dbg !9427

29:                                               ; preds = %23
  %30 = load %struct.CCM_ANALOG_Type*, %struct.CCM_ANALOG_Type** %3, align 4, !dbg !9428
  %31 = getelementptr inbounds %struct.CCM_ANALOG_Type, %struct.CCM_ANALOG_Type* %30, i32 0, i32 9, !dbg !9428
  %32 = load volatile i32, i32* %31, align 4, !dbg !9428
  %33 = and i32 %32, 32767, !dbg !9430
  %34 = uitofp i32 %33 to float, !dbg !9431
  %35 = load %struct.CCM_ANALOG_Type*, %struct.CCM_ANALOG_Type** %3, align 4, !dbg !9432
  %36 = getelementptr inbounds %struct.CCM_ANALOG_Type, %struct.CCM_ANALOG_Type* %35, i32 0, i32 13, !dbg !9432
  %37 = load volatile i32, i32* %36, align 4, !dbg !9432
  %38 = and i32 %37, 1073741823, !dbg !9433
  %39 = uitofp i32 %38 to float, !dbg !9434
  %40 = fdiv float %34, %39, !dbg !9435
  %41 = load %struct.CCM_ANALOG_Type*, %struct.CCM_ANALOG_Type** %3, align 4, !dbg !9436
  %42 = getelementptr inbounds %struct.CCM_ANALOG_Type, %struct.CCM_ANALOG_Type* %41, i32 0, i32 11, !dbg !9436
  %43 = load volatile i32, i32* %42, align 4, !dbg !9436
  %44 = and i32 %43, 1073741823, !dbg !9437
  %45 = uitofp i32 %44 to float, !dbg !9438
  %46 = fmul float %40, %45, !dbg !9439
  store float %46, float* %6, align 4, !dbg !9440
  %47 = load i8, i8* %5, align 1, !dbg !9441
  %48 = zext i8 %47 to i32, !dbg !9441
  %49 = lshr i32 24000000, %48, !dbg !9442
  %50 = uitofp i32 %49 to float, !dbg !9443
  %51 = load i8, i8* %4, align 1, !dbg !9444
  %52 = zext i8 %51 to i32, !dbg !9444
  %53 = sitofp i32 %52 to float, !dbg !9444
  %54 = load float, float* %6, align 4, !dbg !9445
  %55 = fadd float %53, %54, !dbg !9446
  %56 = fmul float %50, %55, !dbg !9447
  %57 = fptoui float %56 to i32, !dbg !9448
  store i32 %57, i32* %2, align 4, !dbg !9449
  br label %65, !dbg !9449

58:                                               ; preds = %23
  %59 = load i8, i8* %5, align 1, !dbg !9450
  %60 = zext i8 %59 to i32, !dbg !9450
  %61 = lshr i32 24000000, %60, !dbg !9452
  %62 = load i8, i8* %4, align 1, !dbg !9453
  %63 = zext i8 %62 to i32, !dbg !9453
  %64 = mul i32 %61, %63, !dbg !9454
  store i32 %64, i32* %2, align 4, !dbg !9455
  br label %65, !dbg !9455

65:                                               ; preds = %58, %29, %9
  %66 = load i32, i32* %2, align 4, !dbg !9456
  ret i32 %66, !dbg !9456
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @CCM_ANALOG_GetEnetPllFreq(%struct.CCM_ANALOG_Type* noundef %0) #1 !dbg !9457 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.CCM_ANALOG_Type*, align 4
  store %struct.CCM_ANALOG_Type* %0, %struct.CCM_ANALOG_Type** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.CCM_ANALOG_Type** %3, metadata !9458, metadata !DIExpression()), !dbg !9459
  %4 = load %struct.CCM_ANALOG_Type*, %struct.CCM_ANALOG_Type** %3, align 4, !dbg !9460
  %5 = call zeroext i1 @CCM_ANALOG_IsPllBypassed(%struct.CCM_ANALOG_Type* noundef %4, i32 noundef 327904) #10, !dbg !9462
  br i1 %5, label %6, label %7, !dbg !9463

6:                                                ; preds = %1
  store i32 24000000, i32* %2, align 4, !dbg !9464
  br label %8, !dbg !9464

7:                                                ; preds = %1
  store i32 1000000000, i32* %2, align 4, !dbg !9465
  br label %8, !dbg !9465

8:                                                ; preds = %7, %6
  %9 = load i32, i32* %2, align 4, !dbg !9466
  ret i32 %9, !dbg !9466
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @CCM_ANALOG_GetAudioPllFreq(%struct.CCM_ANALOG_Type* noundef %0) #1 !dbg !9467 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.CCM_ANALOG_Type*, align 4
  %4 = alloca i8, align 1
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca float, align 4
  store %struct.CCM_ANALOG_Type* %0, %struct.CCM_ANALOG_Type** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.CCM_ANALOG_Type** %3, metadata !9468, metadata !DIExpression()), !dbg !9469
  call void @llvm.dbg.declare(metadata i8* %4, metadata !9470, metadata !DIExpression()), !dbg !9471
  call void @llvm.dbg.declare(metadata i8* %5, metadata !9472, metadata !DIExpression()), !dbg !9473
  call void @llvm.dbg.declare(metadata i8* %6, metadata !9474, metadata !DIExpression()), !dbg !9475
  call void @llvm.dbg.declare(metadata float* %7, metadata !9476, metadata !DIExpression()), !dbg !9477
  %8 = load %struct.CCM_ANALOG_Type*, %struct.CCM_ANALOG_Type** %3, align 4, !dbg !9478
  %9 = call zeroext i1 @CCM_ANALOG_IsPllBypassed(%struct.CCM_ANALOG_Type* noundef %8, i32 noundef 786672) #10, !dbg !9480
  br i1 %9, label %10, label %11, !dbg !9481

10:                                               ; preds = %1
  store i32 24000000, i32* %2, align 4, !dbg !9482
  br label %82, !dbg !9482

11:                                               ; preds = %1
  %12 = load volatile i32, i32* getelementptr inbounds (%struct.CCM_ANALOG_Type, %struct.CCM_ANALOG_Type* inttoptr (i32 808845312 to %struct.CCM_ANALOG_Type*), i32 0, i32 31), align 4, !dbg !9483
  %13 = and i32 %12, 127, !dbg !9484
  %14 = trunc i32 %13 to i8, !dbg !9483
  store i8 %14, i8* %4, align 1, !dbg !9485
  %15 = load volatile i32, i32* getelementptr inbounds (%struct.CCM_ANALOG_Type, %struct.CCM_ANALOG_Type* inttoptr (i32 808845312 to %struct.CCM_ANALOG_Type*), i32 0, i32 31), align 4, !dbg !9486
  %16 = and i32 %15, 12582912, !dbg !9487
  %17 = lshr i32 %16, 22, !dbg !9488
  %18 = trunc i32 %17 to i8, !dbg !9489
  store i8 %18, i8* %5, align 1, !dbg !9490
  %19 = load volatile i32, i32* getelementptr inbounds (%struct.CCM_ANALOG_Type, %struct.CCM_ANALOG_Type* inttoptr (i32 808845312 to %struct.CCM_ANALOG_Type*), i32 0, i32 31), align 4, !dbg !9491
  %20 = and i32 %19, 1572864, !dbg !9492
  %21 = lshr i32 %20, 19, !dbg !9493
  %22 = trunc i32 %21 to i8, !dbg !9494
  store i8 %22, i8* %6, align 1, !dbg !9495
  %23 = load i8, i8* %5, align 1, !dbg !9496
  %24 = zext i8 %23 to i32, !dbg !9496
  switch i32 %24, label %28 [
    i32 0, label %25
    i32 2, label %25
    i32 1, label %26
    i32 3, label %27
  ], !dbg !9497

25:                                               ; preds = %11, %11
  store i8 0, i8* %5, align 1, !dbg !9498
  br label %28, !dbg !9500

26:                                               ; preds = %11
  store i8 1, i8* %5, align 1, !dbg !9501
  br label %28, !dbg !9502

27:                                               ; preds = %11
  store i8 2, i8* %5, align 1, !dbg !9503
  br label %28, !dbg !9504

28:                                               ; preds = %11, %27, %26, %25
  %29 = load i8, i8* %6, align 1, !dbg !9505
  %30 = zext i8 %29 to i32, !dbg !9505
  switch i32 %30, label %34 [
    i32 0, label %31
    i32 1, label %32
    i32 2, label %33
    i32 3, label %33
  ], !dbg !9506

31:                                               ; preds = %28
  store i8 2, i8* %6, align 1, !dbg !9507
  br label %34, !dbg !9509

32:                                               ; preds = %28
  store i8 1, i8* %6, align 1, !dbg !9510
  br label %34, !dbg !9511

33:                                               ; preds = %28, %28
  store i8 0, i8* %6, align 1, !dbg !9512
  br label %34, !dbg !9513

34:                                               ; preds = %28, %33, %32, %31
  %35 = load %struct.CCM_ANALOG_Type*, %struct.CCM_ANALOG_Type** %3, align 4, !dbg !9514
  %36 = getelementptr inbounds %struct.CCM_ANALOG_Type, %struct.CCM_ANALOG_Type* %35, i32 0, i32 35, !dbg !9514
  %37 = load volatile i32, i32* %36, align 4, !dbg !9514
  %38 = and i32 %37, 32768, !dbg !9516
  %39 = icmp ne i32 %38, 0, !dbg !9516
  br i1 %39, label %40, label %72, !dbg !9517

40:                                               ; preds = %34
  %41 = load %struct.CCM_ANALOG_Type*, %struct.CCM_ANALOG_Type** %3, align 4, !dbg !9518
  %42 = getelementptr inbounds %struct.CCM_ANALOG_Type, %struct.CCM_ANALOG_Type* %41, i32 0, i32 35, !dbg !9518
  %43 = load volatile i32, i32* %42, align 4, !dbg !9518
  %44 = and i32 %43, 32767, !dbg !9520
  %45 = uitofp i32 %44 to float, !dbg !9521
  %46 = load %struct.CCM_ANALOG_Type*, %struct.CCM_ANALOG_Type** %3, align 4, !dbg !9522
  %47 = getelementptr inbounds %struct.CCM_ANALOG_Type, %struct.CCM_ANALOG_Type* %46, i32 0, i32 39, !dbg !9522
  %48 = load volatile i32, i32* %47, align 4, !dbg !9522
  %49 = and i32 %48, 1073741823, !dbg !9523
  %50 = uitofp i32 %49 to float, !dbg !9524
  %51 = fdiv float %45, %50, !dbg !9525
  %52 = load %struct.CCM_ANALOG_Type*, %struct.CCM_ANALOG_Type** %3, align 4, !dbg !9526
  %53 = getelementptr inbounds %struct.CCM_ANALOG_Type, %struct.CCM_ANALOG_Type* %52, i32 0, i32 37, !dbg !9526
  %54 = load volatile i32, i32* %53, align 4, !dbg !9526
  %55 = and i32 %54, 1073741823, !dbg !9527
  %56 = uitofp i32 %55 to float, !dbg !9528
  %57 = fmul float %51, %56, !dbg !9529
  store float %57, float* %7, align 4, !dbg !9530
  %58 = load i8, i8* %6, align 1, !dbg !9531
  %59 = zext i8 %58 to i32, !dbg !9531
  %60 = lshr i32 24000000, %59, !dbg !9532
  %61 = load i8, i8* %5, align 1, !dbg !9533
  %62 = zext i8 %61 to i32, !dbg !9533
  %63 = lshr i32 %60, %62, !dbg !9534
  %64 = uitofp i32 %63 to float, !dbg !9535
  %65 = load i8, i8* %4, align 1, !dbg !9536
  %66 = zext i8 %65 to i32, !dbg !9536
  %67 = sitofp i32 %66 to float, !dbg !9536
  %68 = load float, float* %7, align 4, !dbg !9537
  %69 = fadd float %67, %68, !dbg !9538
  %70 = fmul float %64, %69, !dbg !9539
  %71 = fptoui float %70 to i32, !dbg !9540
  store i32 %71, i32* %2, align 4, !dbg !9541
  br label %82, !dbg !9541

72:                                               ; preds = %34
  %73 = load i8, i8* %6, align 1, !dbg !9542
  %74 = zext i8 %73 to i32, !dbg !9542
  %75 = lshr i32 24000000, %74, !dbg !9544
  %76 = load i8, i8* %5, align 1, !dbg !9545
  %77 = zext i8 %76 to i32, !dbg !9545
  %78 = lshr i32 %75, %77, !dbg !9546
  %79 = load i8, i8* %4, align 1, !dbg !9547
  %80 = zext i8 %79 to i32, !dbg !9547
  %81 = mul i32 %78, %80, !dbg !9548
  store i32 %81, i32* %2, align 4, !dbg !9549
  br label %82, !dbg !9549

82:                                               ; preds = %72, %40, %10
  %83 = load i32, i32* %2, align 4, !dbg !9550
  ret i32 %83, !dbg !9550
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @CCM_ANALOG_GetVideoPllFreq(%struct.CCM_ANALOG_Type* noundef %0) #1 !dbg !9551 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.CCM_ANALOG_Type*, align 4
  %4 = alloca i8, align 1
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca float, align 4
  store %struct.CCM_ANALOG_Type* %0, %struct.CCM_ANALOG_Type** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.CCM_ANALOG_Type** %3, metadata !9552, metadata !DIExpression()), !dbg !9553
  call void @llvm.dbg.declare(metadata i8* %4, metadata !9554, metadata !DIExpression()), !dbg !9555
  call void @llvm.dbg.declare(metadata i8* %5, metadata !9556, metadata !DIExpression()), !dbg !9557
  call void @llvm.dbg.declare(metadata i8* %6, metadata !9558, metadata !DIExpression()), !dbg !9559
  call void @llvm.dbg.declare(metadata float* %7, metadata !9560, metadata !DIExpression()), !dbg !9561
  %8 = load %struct.CCM_ANALOG_Type*, %struct.CCM_ANALOG_Type** %3, align 4, !dbg !9562
  %9 = call zeroext i1 @CCM_ANALOG_IsPllBypassed(%struct.CCM_ANALOG_Type* noundef %8, i32 noundef 786736) #10, !dbg !9564
  br i1 %9, label %10, label %11, !dbg !9565

10:                                               ; preds = %1
  store i32 24000000, i32* %2, align 4, !dbg !9566
  br label %82, !dbg !9566

11:                                               ; preds = %1
  %12 = load volatile i32, i32* getelementptr inbounds (%struct.CCM_ANALOG_Type, %struct.CCM_ANALOG_Type* inttoptr (i32 808845312 to %struct.CCM_ANALOG_Type*), i32 0, i32 41), align 4, !dbg !9567
  %13 = and i32 %12, 127, !dbg !9568
  %14 = trunc i32 %13 to i8, !dbg !9567
  store i8 %14, i8* %4, align 1, !dbg !9569
  %15 = load volatile i32, i32* getelementptr inbounds (%struct.CCM_ANALOG_Type, %struct.CCM_ANALOG_Type* inttoptr (i32 808845312 to %struct.CCM_ANALOG_Type*), i32 0, i32 41), align 4, !dbg !9570
  %16 = and i32 %15, 12582912, !dbg !9571
  %17 = lshr i32 %16, 22, !dbg !9572
  %18 = trunc i32 %17 to i8, !dbg !9573
  store i8 %18, i8* %5, align 1, !dbg !9574
  %19 = load volatile i32, i32* getelementptr inbounds (%struct.CCM_ANALOG_Type, %struct.CCM_ANALOG_Type* inttoptr (i32 808845312 to %struct.CCM_ANALOG_Type*), i32 0, i32 41), align 4, !dbg !9575
  %20 = and i32 %19, 1572864, !dbg !9576
  %21 = lshr i32 %20, 19, !dbg !9577
  %22 = trunc i32 %21 to i8, !dbg !9578
  store i8 %22, i8* %6, align 1, !dbg !9579
  %23 = load i8, i8* %5, align 1, !dbg !9580
  %24 = zext i8 %23 to i32, !dbg !9580
  switch i32 %24, label %28 [
    i32 0, label %25
    i32 2, label %25
    i32 1, label %26
    i32 3, label %27
  ], !dbg !9581

25:                                               ; preds = %11, %11
  store i8 0, i8* %5, align 1, !dbg !9582
  br label %28, !dbg !9584

26:                                               ; preds = %11
  store i8 1, i8* %5, align 1, !dbg !9585
  br label %28, !dbg !9586

27:                                               ; preds = %11
  store i8 2, i8* %5, align 1, !dbg !9587
  br label %28, !dbg !9588

28:                                               ; preds = %11, %27, %26, %25
  %29 = load i8, i8* %6, align 1, !dbg !9589
  %30 = zext i8 %29 to i32, !dbg !9589
  switch i32 %30, label %34 [
    i32 0, label %31
    i32 1, label %32
    i32 2, label %33
    i32 3, label %33
  ], !dbg !9590

31:                                               ; preds = %28
  store i8 2, i8* %6, align 1, !dbg !9591
  br label %34, !dbg !9593

32:                                               ; preds = %28
  store i8 1, i8* %6, align 1, !dbg !9594
  br label %34, !dbg !9595

33:                                               ; preds = %28, %28
  store i8 0, i8* %6, align 1, !dbg !9596
  br label %34, !dbg !9597

34:                                               ; preds = %28, %33, %32, %31
  %35 = load %struct.CCM_ANALOG_Type*, %struct.CCM_ANALOG_Type** %3, align 4, !dbg !9598
  %36 = getelementptr inbounds %struct.CCM_ANALOG_Type, %struct.CCM_ANALOG_Type* %35, i32 0, i32 45, !dbg !9598
  %37 = load volatile i32, i32* %36, align 4, !dbg !9598
  %38 = and i32 %37, 32768, !dbg !9600
  %39 = icmp ne i32 %38, 0, !dbg !9600
  br i1 %39, label %40, label %72, !dbg !9601

40:                                               ; preds = %34
  %41 = load %struct.CCM_ANALOG_Type*, %struct.CCM_ANALOG_Type** %3, align 4, !dbg !9602
  %42 = getelementptr inbounds %struct.CCM_ANALOG_Type, %struct.CCM_ANALOG_Type* %41, i32 0, i32 45, !dbg !9602
  %43 = load volatile i32, i32* %42, align 4, !dbg !9602
  %44 = and i32 %43, 32767, !dbg !9604
  %45 = uitofp i32 %44 to float, !dbg !9605
  %46 = load %struct.CCM_ANALOG_Type*, %struct.CCM_ANALOG_Type** %3, align 4, !dbg !9606
  %47 = getelementptr inbounds %struct.CCM_ANALOG_Type, %struct.CCM_ANALOG_Type* %46, i32 0, i32 49, !dbg !9606
  %48 = load volatile i32, i32* %47, align 4, !dbg !9606
  %49 = and i32 %48, 1073741823, !dbg !9607
  %50 = uitofp i32 %49 to float, !dbg !9608
  %51 = fdiv float %45, %50, !dbg !9609
  %52 = load %struct.CCM_ANALOG_Type*, %struct.CCM_ANALOG_Type** %3, align 4, !dbg !9610
  %53 = getelementptr inbounds %struct.CCM_ANALOG_Type, %struct.CCM_ANALOG_Type* %52, i32 0, i32 47, !dbg !9610
  %54 = load volatile i32, i32* %53, align 4, !dbg !9610
  %55 = and i32 %54, 1073741823, !dbg !9611
  %56 = uitofp i32 %55 to float, !dbg !9612
  %57 = fmul float %51, %56, !dbg !9613
  store float %57, float* %7, align 4, !dbg !9614
  %58 = load i8, i8* %6, align 1, !dbg !9615
  %59 = zext i8 %58 to i32, !dbg !9615
  %60 = lshr i32 24000000, %59, !dbg !9616
  %61 = load i8, i8* %5, align 1, !dbg !9617
  %62 = zext i8 %61 to i32, !dbg !9617
  %63 = lshr i32 %60, %62, !dbg !9618
  %64 = uitofp i32 %63 to float, !dbg !9619
  %65 = load i8, i8* %4, align 1, !dbg !9620
  %66 = zext i8 %65 to i32, !dbg !9620
  %67 = sitofp i32 %66 to float, !dbg !9620
  %68 = load float, float* %7, align 4, !dbg !9621
  %69 = fadd float %67, %68, !dbg !9622
  %70 = fmul float %64, %69, !dbg !9623
  %71 = fptoui float %70 to i32, !dbg !9624
  store i32 %71, i32* %2, align 4, !dbg !9625
  br label %82, !dbg !9625

72:                                               ; preds = %34
  %73 = load i8, i8* %6, align 1, !dbg !9626
  %74 = zext i8 %73 to i32, !dbg !9626
  %75 = lshr i32 24000000, %74, !dbg !9628
  %76 = load i8, i8* %5, align 1, !dbg !9629
  %77 = zext i8 %76 to i32, !dbg !9629
  %78 = lshr i32 %75, %77, !dbg !9630
  %79 = load i8, i8* %4, align 1, !dbg !9631
  %80 = zext i8 %79 to i32, !dbg !9631
  %81 = mul i32 %78, %80, !dbg !9632
  store i32 %81, i32* %2, align 4, !dbg !9633
  br label %82, !dbg !9633

82:                                               ; preds = %72, %40, %10
  %83 = load i32, i32* %2, align 4, !dbg !9634
  ret i32 %83, !dbg !9634
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @CCM_ANALOG_GetPfdFreq(%struct.CCM_ANALOG_Type* noundef %0, i32 noundef %1) #1 !dbg !9635 {
  %3 = alloca %struct.CCM_ANALOG_Type*, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store %struct.CCM_ANALOG_Type* %0, %struct.CCM_ANALOG_Type** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.CCM_ANALOG_Type** %3, metadata !9638, metadata !DIExpression()), !dbg !9639
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !9640, metadata !DIExpression()), !dbg !9641
  call void @llvm.dbg.declare(metadata i32* %5, metadata !9642, metadata !DIExpression()), !dbg !9643
  call void @llvm.dbg.declare(metadata i32* %6, metadata !9644, metadata !DIExpression()), !dbg !9645
  %7 = load %struct.CCM_ANALOG_Type*, %struct.CCM_ANALOG_Type** %3, align 4, !dbg !9646
  %8 = call i32 @CCM_ANALOG_GetSysPllFreq(%struct.CCM_ANALOG_Type* noundef %7) #10, !dbg !9647
  store i32 %8, i32* %5, align 4, !dbg !9648
  %9 = load %struct.CCM_ANALOG_Type*, %struct.CCM_ANALOG_Type** %3, align 4, !dbg !9649
  %10 = load i32, i32* %4, align 4, !dbg !9650
  %11 = call i32 @CCM_ANALOG_GetPfdFrac(%struct.CCM_ANALOG_Type* noundef %9, i32 noundef %10) #10, !dbg !9651
  store i32 %11, i32* %6, align 4, !dbg !9652
  %12 = load i32, i32* %5, align 4, !dbg !9653
  %13 = load i32, i32* %6, align 4, !dbg !9654
  %14 = udiv i32 %12, %13, !dbg !9655
  %15 = mul i32 %14, 18, !dbg !9656
  ret i32 %15, !dbg !9657
}

; Function Attrs: noinline nounwind optnone
define internal i32 @CCM_ANALOG_GetPfdFrac(%struct.CCM_ANALOG_Type* noundef %0, i32 noundef %1) #1 !dbg !9658 {
  %3 = alloca %struct.CCM_ANALOG_Type*, align 4
  %4 = alloca i32, align 4
  store %struct.CCM_ANALOG_Type* %0, %struct.CCM_ANALOG_Type** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.CCM_ANALOG_Type** %3, metadata !9659, metadata !DIExpression()), !dbg !9660
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !9661, metadata !DIExpression()), !dbg !9662
  %5 = load %struct.CCM_ANALOG_Type*, %struct.CCM_ANALOG_Type** %3, align 4, !dbg !9663
  %6 = ptrtoint %struct.CCM_ANALOG_Type* %5 to i32, !dbg !9663
  %7 = load i32, i32* %4, align 4, !dbg !9663
  %8 = and i32 %7, 65535, !dbg !9663
  %9 = add i32 %6, %8, !dbg !9663
  %10 = add i32 %9, 0, !dbg !9663
  %11 = inttoptr i32 %10 to i32*, !dbg !9663
  %12 = load volatile i32, i32* %11, align 4, !dbg !9663
  %13 = load i32, i32* %4, align 4, !dbg !9664
  %14 = lshr i32 %13, 16, !dbg !9664
  %15 = and i32 %14, 31, !dbg !9664
  %16 = lshr i32 %12, %15, !dbg !9665
  %17 = and i32 %16, 63, !dbg !9666
  ret i32 %17, !dbg !9667
}

; Function Attrs: noinline nounwind optnone
define dso_local void @GPIO_Init(%struct.GPIO_Type* noundef %0, %struct._gpio_init_config* noundef %1) #1 !dbg !9668 {
  %3 = alloca %struct.GPIO_Type*, align 4
  %4 = alloca %struct._gpio_init_config*, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32*, align 4
  store %struct.GPIO_Type* %0, %struct.GPIO_Type** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.GPIO_Type** %3, metadata !9694, metadata !DIExpression()), !dbg !9695
  store %struct._gpio_init_config* %1, %struct._gpio_init_config** %4, align 4
  call void @llvm.dbg.declare(metadata %struct._gpio_init_config** %4, metadata !9696, metadata !DIExpression()), !dbg !9697
  call void @llvm.dbg.declare(metadata i32* %5, metadata !9698, metadata !DIExpression()), !dbg !9699
  call void @llvm.dbg.declare(metadata i32** %6, metadata !9700, metadata !DIExpression()), !dbg !9701
  %7 = load %struct.GPIO_Type*, %struct.GPIO_Type** %3, align 4, !dbg !9702
  %8 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %7, i32 0, i32 5, !dbg !9702
  store volatile i32 0, i32* %8, align 4, !dbg !9703
  %9 = load %struct.GPIO_Type*, %struct.GPIO_Type** %3, align 4, !dbg !9704
  %10 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 7, !dbg !9704
  store volatile i32 0, i32* %10, align 4, !dbg !9705
  %11 = load %struct._gpio_init_config*, %struct._gpio_init_config** %4, align 4, !dbg !9706
  %12 = getelementptr inbounds %struct._gpio_init_config, %struct._gpio_init_config* %11, i32 0, i32 0, !dbg !9707
  %13 = load i32, i32* %12, align 4, !dbg !9707
  store i32 %13, i32* %5, align 4, !dbg !9708
  %14 = load %struct._gpio_init_config*, %struct._gpio_init_config** %4, align 4, !dbg !9709
  %15 = getelementptr inbounds %struct._gpio_init_config, %struct._gpio_init_config* %14, i32 0, i32 1, !dbg !9711
  %16 = load i32, i32* %15, align 4, !dbg !9711
  %17 = icmp eq i32 %16, 1, !dbg !9712
  br i1 %17, label %18, label %25, !dbg !9713

18:                                               ; preds = %2
  %19 = load i32, i32* %5, align 4, !dbg !9714
  %20 = shl i32 1, %19, !dbg !9715
  %21 = load %struct.GPIO_Type*, %struct.GPIO_Type** %3, align 4, !dbg !9716
  %22 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %21, i32 0, i32 1, !dbg !9716
  %23 = load volatile i32, i32* %22, align 4, !dbg !9717
  %24 = or i32 %23, %20, !dbg !9717
  store volatile i32 %24, i32* %22, align 4, !dbg !9717
  br label %33, !dbg !9716

25:                                               ; preds = %2
  %26 = load i32, i32* %5, align 4, !dbg !9718
  %27 = shl i32 1, %26, !dbg !9719
  %28 = xor i32 %27, -1, !dbg !9720
  %29 = load %struct.GPIO_Type*, %struct.GPIO_Type** %3, align 4, !dbg !9721
  %30 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %29, i32 0, i32 1, !dbg !9721
  %31 = load volatile i32, i32* %30, align 4, !dbg !9722
  %32 = and i32 %31, %28, !dbg !9722
  store volatile i32 %32, i32* %30, align 4, !dbg !9722
  br label %33

33:                                               ; preds = %25, %18
  %34 = load i32, i32* %5, align 4, !dbg !9723
  %35 = icmp ult i32 %34, 16, !dbg !9725
  br i1 %35, label %36, label %39, !dbg !9726

36:                                               ; preds = %33
  %37 = load %struct.GPIO_Type*, %struct.GPIO_Type** %3, align 4, !dbg !9727
  %38 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %37, i32 0, i32 3, !dbg !9727
  store i32* %38, i32** %6, align 4, !dbg !9728
  br label %44, !dbg !9729

39:                                               ; preds = %33
  %40 = load %struct.GPIO_Type*, %struct.GPIO_Type** %3, align 4, !dbg !9730
  %41 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %40, i32 0, i32 4, !dbg !9730
  store i32* %41, i32** %6, align 4, !dbg !9732
  %42 = load i32, i32* %5, align 4, !dbg !9733
  %43 = sub i32 %42, 16, !dbg !9733
  store i32 %43, i32* %5, align 4, !dbg !9733
  br label %44

44:                                               ; preds = %39, %36
  %45 = load %struct._gpio_init_config*, %struct._gpio_init_config** %4, align 4, !dbg !9734
  %46 = getelementptr inbounds %struct._gpio_init_config, %struct._gpio_init_config* %45, i32 0, i32 2, !dbg !9735
  %47 = load i32, i32* %46, align 4, !dbg !9735
  switch i32 %47, label %90 [
    i32 0, label %48
    i32 1, label %56
    i32 2, label %69
    i32 3, label %82
    i32 4, label %89
  ], !dbg !9736

48:                                               ; preds = %44
  %49 = load i32, i32* %5, align 4, !dbg !9737
  %50 = mul i32 2, %49, !dbg !9740
  %51 = shl i32 3, %50, !dbg !9741
  %52 = xor i32 %51, -1, !dbg !9742
  %53 = load i32*, i32** %6, align 4, !dbg !9743
  %54 = load volatile i32, i32* %53, align 4, !dbg !9744
  %55 = and i32 %54, %52, !dbg !9744
  store volatile i32 %55, i32* %53, align 4, !dbg !9744
  br label %90, !dbg !9745

56:                                               ; preds = %44
  %57 = load i32*, i32** %6, align 4, !dbg !9746
  %58 = load volatile i32, i32* %57, align 4, !dbg !9748
  %59 = load i32, i32* %5, align 4, !dbg !9749
  %60 = mul i32 2, %59, !dbg !9750
  %61 = shl i32 3, %60, !dbg !9751
  %62 = xor i32 %61, -1, !dbg !9752
  %63 = and i32 %58, %62, !dbg !9753
  %64 = load i32, i32* %5, align 4, !dbg !9754
  %65 = mul i32 2, %64, !dbg !9755
  %66 = shl i32 1, %65, !dbg !9756
  %67 = or i32 %63, %66, !dbg !9757
  %68 = load i32*, i32** %6, align 4, !dbg !9758
  store volatile i32 %67, i32* %68, align 4, !dbg !9759
  br label %90, !dbg !9760

69:                                               ; preds = %44
  %70 = load i32*, i32** %6, align 4, !dbg !9761
  %71 = load volatile i32, i32* %70, align 4, !dbg !9763
  %72 = load i32, i32* %5, align 4, !dbg !9764
  %73 = mul i32 2, %72, !dbg !9765
  %74 = shl i32 3, %73, !dbg !9766
  %75 = xor i32 %74, -1, !dbg !9767
  %76 = and i32 %71, %75, !dbg !9768
  %77 = load i32, i32* %5, align 4, !dbg !9769
  %78 = mul i32 2, %77, !dbg !9770
  %79 = shl i32 2, %78, !dbg !9771
  %80 = or i32 %76, %79, !dbg !9772
  %81 = load i32*, i32** %6, align 4, !dbg !9773
  store volatile i32 %80, i32* %81, align 4, !dbg !9774
  br label %90, !dbg !9775

82:                                               ; preds = %44
  %83 = load i32, i32* %5, align 4, !dbg !9776
  %84 = mul i32 2, %83, !dbg !9778
  %85 = shl i32 3, %84, !dbg !9779
  %86 = load i32*, i32** %6, align 4, !dbg !9780
  %87 = load volatile i32, i32* %86, align 4, !dbg !9781
  %88 = or i32 %87, %85, !dbg !9781
  store volatile i32 %88, i32* %86, align 4, !dbg !9781
  br label %90, !dbg !9782

89:                                               ; preds = %44
  br label %90, !dbg !9783

90:                                               ; preds = %44, %89, %82, %69, %56, %48
  ret void, !dbg !9785
}

; Function Attrs: noinline nounwind optnone
define dso_local void @GPIO_WritePinOutput(%struct.GPIO_Type* noundef %0, i32 noundef %1, i32 noundef %2) #1 !dbg !9786 {
  %4 = alloca %struct.GPIO_Type*, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store %struct.GPIO_Type* %0, %struct.GPIO_Type** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.GPIO_Type** %4, metadata !9790, metadata !DIExpression()), !dbg !9791
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !9792, metadata !DIExpression()), !dbg !9793
  store i32 %2, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !9794, metadata !DIExpression()), !dbg !9795
  %7 = load i32, i32* %6, align 4, !dbg !9796
  %8 = icmp eq i32 %7, 1, !dbg !9798
  br i1 %8, label %9, label %16, !dbg !9799

9:                                                ; preds = %3
  %10 = load i32, i32* %5, align 4, !dbg !9800
  %11 = shl i32 1, %10, !dbg !9802
  %12 = load %struct.GPIO_Type*, %struct.GPIO_Type** %4, align 4, !dbg !9803
  %13 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %12, i32 0, i32 0, !dbg !9803
  %14 = load volatile i32, i32* %13, align 4, !dbg !9804
  %15 = or i32 %14, %11, !dbg !9804
  store volatile i32 %15, i32* %13, align 4, !dbg !9804
  br label %24, !dbg !9805

16:                                               ; preds = %3
  %17 = load i32, i32* %5, align 4, !dbg !9806
  %18 = shl i32 1, %17, !dbg !9808
  %19 = xor i32 %18, -1, !dbg !9809
  %20 = load %struct.GPIO_Type*, %struct.GPIO_Type** %4, align 4, !dbg !9810
  %21 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %20, i32 0, i32 0, !dbg !9810
  %22 = load volatile i32, i32* %21, align 4, !dbg !9811
  %23 = and i32 %22, %19, !dbg !9811
  store volatile i32 %23, i32* %21, align 4, !dbg !9811
  br label %24

24:                                               ; preds = %16, %9
  ret void, !dbg !9812
}

; Function Attrs: noinline nounwind optnone
define dso_local void @GPIO_SetPinIntMode(%struct.GPIO_Type* noundef %0, i32 noundef %1, i1 noundef zeroext %2) #1 !dbg !9813 {
  %4 = alloca %struct.GPIO_Type*, align 4
  %5 = alloca i32, align 4
  %6 = alloca i8, align 1
  store %struct.GPIO_Type* %0, %struct.GPIO_Type** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.GPIO_Type** %4, metadata !9816, metadata !DIExpression()), !dbg !9817
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !9818, metadata !DIExpression()), !dbg !9819
  %7 = zext i1 %2 to i8
  store i8 %7, i8* %6, align 1
  call void @llvm.dbg.declare(metadata i8* %6, metadata !9820, metadata !DIExpression()), !dbg !9821
  %8 = load i8, i8* %6, align 1, !dbg !9822
  %9 = trunc i8 %8 to i1, !dbg !9822
  br i1 %9, label %10, label %17, !dbg !9824

10:                                               ; preds = %3
  %11 = load i32, i32* %5, align 4, !dbg !9825
  %12 = shl i32 1, %11, !dbg !9826
  %13 = load %struct.GPIO_Type*, %struct.GPIO_Type** %4, align 4, !dbg !9827
  %14 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %13, i32 0, i32 5, !dbg !9827
  %15 = load volatile i32, i32* %14, align 4, !dbg !9828
  %16 = or i32 %15, %12, !dbg !9828
  store volatile i32 %16, i32* %14, align 4, !dbg !9828
  br label %25, !dbg !9827

17:                                               ; preds = %3
  %18 = load i32, i32* %5, align 4, !dbg !9829
  %19 = shl i32 1, %18, !dbg !9830
  %20 = xor i32 %19, -1, !dbg !9831
  %21 = load %struct.GPIO_Type*, %struct.GPIO_Type** %4, align 4, !dbg !9832
  %22 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %21, i32 0, i32 5, !dbg !9832
  %23 = load volatile i32, i32* %22, align 4, !dbg !9833
  %24 = and i32 %23, %20, !dbg !9833
  store volatile i32 %24, i32* %22, align 4, !dbg !9833
  br label %25

25:                                               ; preds = %17, %10
  ret void, !dbg !9834
}

; Function Attrs: noinline nounwind optnone
define dso_local void @GPIO_SetIntEdgeSelect(%struct.GPIO_Type* noundef %0, i32 noundef %1, i1 noundef zeroext %2) #1 !dbg !9835 {
  %4 = alloca %struct.GPIO_Type*, align 4
  %5 = alloca i32, align 4
  %6 = alloca i8, align 1
  store %struct.GPIO_Type* %0, %struct.GPIO_Type** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.GPIO_Type** %4, metadata !9836, metadata !DIExpression()), !dbg !9837
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !9838, metadata !DIExpression()), !dbg !9839
  %7 = zext i1 %2 to i8
  store i8 %7, i8* %6, align 1
  call void @llvm.dbg.declare(metadata i8* %6, metadata !9840, metadata !DIExpression()), !dbg !9841
  %8 = load i8, i8* %6, align 1, !dbg !9842
  %9 = trunc i8 %8 to i1, !dbg !9842
  br i1 %9, label %10, label %17, !dbg !9844

10:                                               ; preds = %3
  %11 = load i32, i32* %5, align 4, !dbg !9845
  %12 = shl i32 1, %11, !dbg !9846
  %13 = load %struct.GPIO_Type*, %struct.GPIO_Type** %4, align 4, !dbg !9847
  %14 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %13, i32 0, i32 7, !dbg !9847
  %15 = load volatile i32, i32* %14, align 4, !dbg !9848
  %16 = or i32 %15, %12, !dbg !9848
  store volatile i32 %16, i32* %14, align 4, !dbg !9848
  br label %25, !dbg !9847

17:                                               ; preds = %3
  %18 = load i32, i32* %5, align 4, !dbg !9849
  %19 = shl i32 1, %18, !dbg !9850
  %20 = xor i32 %19, -1, !dbg !9851
  %21 = load %struct.GPIO_Type*, %struct.GPIO_Type** %4, align 4, !dbg !9852
  %22 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %21, i32 0, i32 7, !dbg !9852
  %23 = load volatile i32, i32* %22, align 4, !dbg !9853
  %24 = and i32 %23, %20, !dbg !9853
  store volatile i32 %24, i32* %22, align 4, !dbg !9853
  br label %25

25:                                               ; preds = %17, %10
  ret void, !dbg !9854
}

; Function Attrs: noinline nounwind optnone
define dso_local void @UART_Init(%struct.UART_Type* noundef %0, %struct._uart_init_config* noundef %1) #1 !dbg !9855 {
  %3 = alloca %struct.UART_Type*, align 4
  %4 = alloca %struct._uart_init_config*, align 4
  store %struct.UART_Type* %0, %struct.UART_Type** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.UART_Type** %3, metadata !9893, metadata !DIExpression()), !dbg !9894
  store %struct._uart_init_config* %1, %struct._uart_init_config** %4, align 4
  call void @llvm.dbg.declare(metadata %struct._uart_init_config** %4, metadata !9895, metadata !DIExpression()), !dbg !9896
  %5 = load %struct.UART_Type*, %struct.UART_Type** %3, align 4, !dbg !9897
  %6 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %5, i32 0, i32 4, !dbg !9897
  %7 = load volatile i32, i32* %6, align 4, !dbg !9898
  %8 = and i32 %7, -2, !dbg !9898
  store volatile i32 %8, i32* %6, align 4, !dbg !9898
  %9 = load %struct.UART_Type*, %struct.UART_Type** %3, align 4, !dbg !9899
  call void @UART_Deinit(%struct.UART_Type* noundef %9) #10, !dbg !9900
  %10 = load %struct._uart_init_config*, %struct._uart_init_config** %4, align 4, !dbg !9901
  %11 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %10, i32 0, i32 2, !dbg !9902
  %12 = load i32, i32* %11, align 4, !dbg !9902
  %13 = load %struct._uart_init_config*, %struct._uart_init_config** %4, align 4, !dbg !9903
  %14 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %13, i32 0, i32 3, !dbg !9904
  %15 = load i32, i32* %14, align 4, !dbg !9904
  %16 = or i32 %12, %15, !dbg !9905
  %17 = load %struct._uart_init_config*, %struct._uart_init_config** %4, align 4, !dbg !9906
  %18 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %17, i32 0, i32 4, !dbg !9907
  %19 = load i32, i32* %18, align 4, !dbg !9907
  %20 = or i32 %16, %19, !dbg !9908
  %21 = load %struct._uart_init_config*, %struct._uart_init_config** %4, align 4, !dbg !9909
  %22 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %21, i32 0, i32 5, !dbg !9910
  %23 = load i32, i32* %22, align 4, !dbg !9910
  %24 = or i32 %20, %23, !dbg !9911
  %25 = or i32 %24, 16384, !dbg !9912
  %26 = load %struct.UART_Type*, %struct.UART_Type** %3, align 4, !dbg !9913
  %27 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %26, i32 0, i32 5, !dbg !9913
  %28 = load volatile i32, i32* %27, align 4, !dbg !9914
  %29 = or i32 %28, %25, !dbg !9914
  store volatile i32 %29, i32* %27, align 4, !dbg !9914
  %30 = load %struct.UART_Type*, %struct.UART_Type** %3, align 4, !dbg !9915
  %31 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %30, i32 0, i32 6, !dbg !9915
  %32 = load volatile i32, i32* %31, align 4, !dbg !9916
  %33 = or i32 %32, 4, !dbg !9916
  store volatile i32 %33, i32* %31, align 4, !dbg !9916
  %34 = load %struct.UART_Type*, %struct.UART_Type** %3, align 4, !dbg !9917
  %35 = load %struct._uart_init_config*, %struct._uart_init_config** %4, align 4, !dbg !9918
  %36 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %35, i32 0, i32 0, !dbg !9919
  %37 = load i32, i32* %36, align 4, !dbg !9919
  %38 = load %struct._uart_init_config*, %struct._uart_init_config** %4, align 4, !dbg !9920
  %39 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %38, i32 0, i32 1, !dbg !9921
  %40 = load i32, i32* %39, align 4, !dbg !9921
  call void @UART_SetBaudRate(%struct.UART_Type* noundef %34, i32 noundef %37, i32 noundef %40) #10, !dbg !9922
  ret void, !dbg !9923
}

; Function Attrs: noinline nounwind optnone
define dso_local void @UART_Deinit(%struct.UART_Type* noundef %0) #1 !dbg !9924 {
  %2 = alloca %struct.UART_Type*, align 4
  store %struct.UART_Type* %0, %struct.UART_Type** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.UART_Type** %2, metadata !9927, metadata !DIExpression()), !dbg !9928
  %3 = load %struct.UART_Type*, %struct.UART_Type** %2, align 4, !dbg !9929
  %4 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %3, i32 0, i32 4, !dbg !9929
  %5 = load volatile i32, i32* %4, align 4, !dbg !9930
  %6 = and i32 %5, -2, !dbg !9930
  store volatile i32 %6, i32* %4, align 4, !dbg !9930
  %7 = load %struct.UART_Type*, %struct.UART_Type** %2, align 4, !dbg !9931
  %8 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %7, i32 0, i32 4, !dbg !9931
  store volatile i32 0, i32* %8, align 4, !dbg !9932
  %9 = load %struct.UART_Type*, %struct.UART_Type** %2, align 4, !dbg !9933
  %10 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %9, i32 0, i32 5, !dbg !9933
  store volatile i32 1, i32* %10, align 4, !dbg !9934
  %11 = load %struct.UART_Type*, %struct.UART_Type** %2, align 4, !dbg !9935
  %12 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %11, i32 0, i32 6, !dbg !9935
  store volatile i32 1792, i32* %12, align 4, !dbg !9936
  %13 = load %struct.UART_Type*, %struct.UART_Type** %2, align 4, !dbg !9937
  %14 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %13, i32 0, i32 7, !dbg !9937
  store volatile i32 32768, i32* %14, align 4, !dbg !9938
  %15 = load %struct.UART_Type*, %struct.UART_Type** %2, align 4, !dbg !9939
  %16 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %15, i32 0, i32 8, !dbg !9939
  store volatile i32 2049, i32* %16, align 4, !dbg !9940
  %17 = load %struct.UART_Type*, %struct.UART_Type** %2, align 4, !dbg !9941
  %18 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %17, i32 0, i32 11, !dbg !9941
  store volatile i32 43, i32* %18, align 4, !dbg !9942
  %19 = load %struct.UART_Type*, %struct.UART_Type** %2, align 4, !dbg !9943
  %20 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %19, i32 0, i32 12, !dbg !9943
  store volatile i32 0, i32* %20, align 4, !dbg !9944
  %21 = load %struct.UART_Type*, %struct.UART_Type** %2, align 4, !dbg !9945
  %22 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %21, i32 0, i32 16, !dbg !9945
  store volatile i32 0, i32* %22, align 4, !dbg !9946
  %23 = load %struct.UART_Type*, %struct.UART_Type** %2, align 4, !dbg !9947
  %24 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %23, i32 0, i32 17, !dbg !9947
  store volatile i32 96, i32* %24, align 4, !dbg !9948
  %25 = load %struct.UART_Type*, %struct.UART_Type** %2, align 4, !dbg !9949
  %26 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %25, i32 0, i32 18, !dbg !9949
  store volatile i32 0, i32* %26, align 4, !dbg !9950
  %27 = load %struct.UART_Type*, %struct.UART_Type** %2, align 4, !dbg !9951
  %28 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %27, i32 0, i32 5, !dbg !9951
  %29 = load volatile i32, i32* %28, align 4, !dbg !9952
  %30 = and i32 %29, -2, !dbg !9952
  store volatile i32 %30, i32* %28, align 4, !dbg !9952
  br label %31, !dbg !9953

31:                                               ; preds = %38, %1
  %32 = load %struct.UART_Type*, %struct.UART_Type** %2, align 4, !dbg !9954
  %33 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %32, i32 0, i32 5, !dbg !9954
  %34 = load volatile i32, i32* %33, align 4, !dbg !9954
  %35 = and i32 %34, 1, !dbg !9955
  %36 = icmp ne i32 %35, 0, !dbg !9956
  %37 = xor i1 %36, true, !dbg !9956
  br i1 %37, label %38, label %39, !dbg !9953

38:                                               ; preds = %31
  br label %31, !dbg !9953, !llvm.loop !9957

39:                                               ; preds = %31
  ret void, !dbg !9959
}

; Function Attrs: noinline nounwind optnone
define dso_local void @UART_SetBaudRate(%struct.UART_Type* noundef %0, i32 noundef %1, i32 noundef %2) #1 !dbg !9960 {
  %4 = alloca %struct.UART_Type*, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  store %struct.UART_Type* %0, %struct.UART_Type** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.UART_Type** %4, metadata !9963, metadata !DIExpression()), !dbg !9964
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !9965, metadata !DIExpression()), !dbg !9966
  store i32 %2, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !9967, metadata !DIExpression()), !dbg !9968
  call void @llvm.dbg.declare(metadata i32* %7, metadata !9969, metadata !DIExpression()), !dbg !9970
  call void @llvm.dbg.declare(metadata i32* %8, metadata !9971, metadata !DIExpression()), !dbg !9972
  call void @llvm.dbg.declare(metadata i32* %9, metadata !9973, metadata !DIExpression()), !dbg !9974
  call void @llvm.dbg.declare(metadata i32* %10, metadata !9975, metadata !DIExpression()), !dbg !9976
  call void @llvm.dbg.declare(metadata i32* %11, metadata !9977, metadata !DIExpression()), !dbg !9978
  store i32 1, i32* %11, align 4, !dbg !9978
  %15 = load i32, i32* %5, align 4, !dbg !9979
  store i32 %15, i32* %7, align 4, !dbg !9980
  %16 = load i32, i32* %6, align 4, !dbg !9981
  %17 = shl i32 %16, 4, !dbg !9982
  store i32 %17, i32* %8, align 4, !dbg !9983
  store i32 1, i32* %9, align 4, !dbg !9984
  br label %18, !dbg !9985

18:                                               ; preds = %21, %3
  %19 = load i32, i32* %8, align 4, !dbg !9986
  %20 = icmp ne i32 %19, 0, !dbg !9987
  br i1 %20, label %21, label %27, !dbg !9985

21:                                               ; preds = %18
  %22 = load i32, i32* %8, align 4, !dbg !9988
  store i32 %22, i32* %9, align 4, !dbg !9990
  %23 = load i32, i32* %7, align 4, !dbg !9991
  %24 = load i32, i32* %8, align 4, !dbg !9992
  %25 = urem i32 %23, %24, !dbg !9993
  store i32 %25, i32* %8, align 4, !dbg !9994
  %26 = load i32, i32* %9, align 4, !dbg !9995
  store i32 %26, i32* %7, align 4, !dbg !9996
  br label %18, !dbg !9985, !llvm.loop !9997

27:                                               ; preds = %18
  %28 = load i32, i32* %5, align 4, !dbg !9999
  %29 = load i32, i32* %9, align 4, !dbg !10000
  %30 = udiv i32 %28, %29, !dbg !10001
  store i32 %30, i32* %7, align 4, !dbg !10002
  %31 = load i32, i32* %6, align 4, !dbg !10003
  %32 = shl i32 %31, 4, !dbg !10004
  %33 = load i32, i32* %9, align 4, !dbg !10005
  %34 = udiv i32 %32, %33, !dbg !10006
  store i32 %34, i32* %8, align 4, !dbg !10007
  %35 = load i32, i32* %7, align 4, !dbg !10008
  %36 = icmp ugt i32 %35, 458745, !dbg !10010
  br i1 %36, label %40, label %37, !dbg !10011

37:                                               ; preds = %27
  %38 = load i32, i32* %8, align 4, !dbg !10012
  %39 = icmp ugt i32 %38, 65535, !dbg !10013
  br i1 %39, label %40, label %72, !dbg !10014

40:                                               ; preds = %37, %27
  call void @llvm.dbg.declare(metadata i32* %12, metadata !10015, metadata !DIExpression()), !dbg !10017
  %41 = load i32, i32* %7, align 4, !dbg !10018
  %42 = sub i32 %41, 1, !dbg !10019
  %43 = udiv i32 %42, 458745, !dbg !10020
  %44 = add i32 %43, 1, !dbg !10021
  store i32 %44, i32* %12, align 4, !dbg !10017
  call void @llvm.dbg.declare(metadata i32* %13, metadata !10022, metadata !DIExpression()), !dbg !10023
  %45 = load i32, i32* %8, align 4, !dbg !10024
  %46 = sub i32 %45, 1, !dbg !10025
  %47 = udiv i32 %46, 65535, !dbg !10026
  %48 = add i32 %47, 1, !dbg !10027
  store i32 %48, i32* %13, align 4, !dbg !10023
  call void @llvm.dbg.declare(metadata i32* %14, metadata !10028, metadata !DIExpression()), !dbg !10029
  %49 = load i32, i32* %12, align 4, !dbg !10030
  %50 = load i32, i32* %13, align 4, !dbg !10031
  %51 = icmp ugt i32 %49, %50, !dbg !10032
  br i1 %51, label %52, label %54, !dbg !10030

52:                                               ; preds = %40
  %53 = load i32, i32* %12, align 4, !dbg !10033
  br label %56, !dbg !10030

54:                                               ; preds = %40
  %55 = load i32, i32* %13, align 4, !dbg !10034
  br label %56, !dbg !10030

56:                                               ; preds = %54, %52
  %57 = phi i32 [ %53, %52 ], [ %55, %54 ], !dbg !10030
  store i32 %57, i32* %14, align 4, !dbg !10029
  %58 = load i32, i32* %14, align 4, !dbg !10035
  %59 = load i32, i32* %7, align 4, !dbg !10036
  %60 = udiv i32 %59, %58, !dbg !10036
  store i32 %60, i32* %7, align 4, !dbg !10036
  %61 = load i32, i32* %14, align 4, !dbg !10037
  %62 = load i32, i32* %8, align 4, !dbg !10038
  %63 = udiv i32 %62, %61, !dbg !10038
  store i32 %63, i32* %8, align 4, !dbg !10038
  %64 = load i32, i32* %7, align 4, !dbg !10039
  %65 = icmp eq i32 0, %64, !dbg !10041
  br i1 %65, label %66, label %67, !dbg !10042

66:                                               ; preds = %56
  store i32 1, i32* %7, align 4, !dbg !10043
  br label %67, !dbg !10044

67:                                               ; preds = %66, %56
  %68 = load i32, i32* %8, align 4, !dbg !10045
  %69 = icmp eq i32 0, %68, !dbg !10047
  br i1 %69, label %70, label %71, !dbg !10048

70:                                               ; preds = %67
  store i32 1, i32* %8, align 4, !dbg !10049
  br label %71, !dbg !10050

71:                                               ; preds = %70, %67
  br label %72, !dbg !10051

72:                                               ; preds = %71, %37
  %73 = load i32, i32* %7, align 4, !dbg !10052
  %74 = sub i32 %73, 1, !dbg !10053
  %75 = udiv i32 %74, 65535, !dbg !10054
  %76 = add i32 %75, 1, !dbg !10055
  store i32 %76, i32* %11, align 4, !dbg !10056
  %77 = load i32, i32* %11, align 4, !dbg !10057
  switch i32 %77, label %85 [
    i32 1, label %78
    i32 2, label %79
    i32 3, label %80
    i32 4, label %81
    i32 5, label %82
    i32 6, label %83
    i32 7, label %84
  ], !dbg !10058

78:                                               ; preds = %72
  store i32 5, i32* %10, align 4, !dbg !10059
  br label %86, !dbg !10061

79:                                               ; preds = %72
  store i32 4, i32* %10, align 4, !dbg !10062
  br label %86, !dbg !10063

80:                                               ; preds = %72
  store i32 3, i32* %10, align 4, !dbg !10064
  br label %86, !dbg !10065

81:                                               ; preds = %72
  store i32 2, i32* %10, align 4, !dbg !10066
  br label %86, !dbg !10067

82:                                               ; preds = %72
  store i32 1, i32* %10, align 4, !dbg !10068
  br label %86, !dbg !10069

83:                                               ; preds = %72
  store i32 0, i32* %10, align 4, !dbg !10070
  br label %86, !dbg !10071

84:                                               ; preds = %72
  store i32 6, i32* %10, align 4, !dbg !10072
  br label %86, !dbg !10073

85:                                               ; preds = %72
  store i32 5, i32* %10, align 4, !dbg !10074
  br label %86, !dbg !10075

86:                                               ; preds = %85, %84, %83, %82, %81, %80, %79, %78
  %87 = load %struct.UART_Type*, %struct.UART_Type** %4, align 4, !dbg !10076
  %88 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %87, i32 0, i32 8, !dbg !10076
  %89 = load volatile i32, i32* %88, align 4, !dbg !10077
  %90 = and i32 %89, -897, !dbg !10077
  store volatile i32 %90, i32* %88, align 4, !dbg !10077
  %91 = load i32, i32* %10, align 4, !dbg !10078
  %92 = shl i32 %91, 7, !dbg !10078
  %93 = and i32 %92, 896, !dbg !10078
  %94 = load %struct.UART_Type*, %struct.UART_Type** %4, align 4, !dbg !10079
  %95 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %94, i32 0, i32 8, !dbg !10079
  %96 = load volatile i32, i32* %95, align 4, !dbg !10080
  %97 = or i32 %96, %93, !dbg !10080
  store volatile i32 %97, i32* %95, align 4, !dbg !10080
  %98 = load i32, i32* %8, align 4, !dbg !10081
  %99 = sub i32 %98, 1, !dbg !10081
  %100 = shl i32 %99, 0, !dbg !10081
  %101 = and i32 %100, 65535, !dbg !10081
  %102 = load %struct.UART_Type*, %struct.UART_Type** %4, align 4, !dbg !10082
  %103 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %102, i32 0, i32 13, !dbg !10082
  store volatile i32 %101, i32* %103, align 4, !dbg !10083
  %104 = load i32, i32* %7, align 4, !dbg !10084
  %105 = load i32, i32* %11, align 4, !dbg !10084
  %106 = udiv i32 %104, %105, !dbg !10084
  %107 = sub i32 %106, 1, !dbg !10084
  %108 = shl i32 %107, 0, !dbg !10084
  %109 = and i32 %108, 65535, !dbg !10084
  %110 = load %struct.UART_Type*, %struct.UART_Type** %4, align 4, !dbg !10085
  %111 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %110, i32 0, i32 14, !dbg !10085
  store volatile i32 %109, i32* %111, align 4, !dbg !10086
  %112 = load i32, i32* %5, align 4, !dbg !10087
  %113 = load i32, i32* %11, align 4, !dbg !10087
  %114 = mul i32 1000, %113, !dbg !10087
  %115 = udiv i32 %112, %114, !dbg !10087
  %116 = shl i32 %115, 0, !dbg !10087
  %117 = and i32 %116, 16777215, !dbg !10087
  %118 = load %struct.UART_Type*, %struct.UART_Type** %4, align 4, !dbg !10088
  %119 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %118, i32 0, i32 16, !dbg !10088
  store volatile i32 %117, i32* %119, align 4, !dbg !10089
  ret void, !dbg !10090
}

; Function Attrs: noinline nounwind optnone
define dso_local void @UART_SetInvertCmd(%struct.UART_Type* noundef %0, i32 noundef %1, i1 noundef zeroext %2) #1 !dbg !10091 {
  %4 = alloca %struct.UART_Type*, align 4
  %5 = alloca i32, align 4
  %6 = alloca i8, align 1
  store %struct.UART_Type* %0, %struct.UART_Type** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.UART_Type** %4, metadata !10094, metadata !DIExpression()), !dbg !10095
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !10096, metadata !DIExpression()), !dbg !10097
  %7 = zext i1 %2 to i8
  store i8 %7, i8* %6, align 1
  call void @llvm.dbg.declare(metadata i8* %6, metadata !10098, metadata !DIExpression()), !dbg !10099
  %8 = load i8, i8* %6, align 1, !dbg !10100
  %9 = trunc i8 %8 to i1, !dbg !10100
  br i1 %9, label %10, label %29, !dbg !10102

10:                                               ; preds = %3
  %11 = load i32, i32* %5, align 4, !dbg !10103
  %12 = and i32 %11, 2, !dbg !10106
  %13 = icmp ne i32 %12, 0, !dbg !10106
  br i1 %13, label %14, label %19, !dbg !10107

14:                                               ; preds = %10
  %15 = load %struct.UART_Type*, %struct.UART_Type** %4, align 4, !dbg !10108
  %16 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %15, i32 0, i32 7, !dbg !10108
  %17 = load volatile i32, i32* %16, align 4, !dbg !10109
  %18 = or i32 %17, 512, !dbg !10109
  store volatile i32 %18, i32* %16, align 4, !dbg !10109
  br label %19, !dbg !10108

19:                                               ; preds = %14, %10
  %20 = load i32, i32* %5, align 4, !dbg !10110
  %21 = and i32 %20, 4, !dbg !10112
  %22 = icmp ne i32 %21, 0, !dbg !10112
  br i1 %22, label %23, label %28, !dbg !10113

23:                                               ; preds = %19
  %24 = load %struct.UART_Type*, %struct.UART_Type** %4, align 4, !dbg !10114
  %25 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %24, i32 0, i32 6, !dbg !10114
  %26 = load volatile i32, i32* %25, align 4, !dbg !10115
  %27 = or i32 %26, 2, !dbg !10115
  store volatile i32 %27, i32* %25, align 4, !dbg !10115
  br label %28, !dbg !10114

28:                                               ; preds = %23, %19
  br label %48, !dbg !10116

29:                                               ; preds = %3
  %30 = load i32, i32* %5, align 4, !dbg !10117
  %31 = and i32 %30, 2, !dbg !10120
  %32 = icmp ne i32 %31, 0, !dbg !10120
  br i1 %32, label %33, label %38, !dbg !10121

33:                                               ; preds = %29
  %34 = load %struct.UART_Type*, %struct.UART_Type** %4, align 4, !dbg !10122
  %35 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %34, i32 0, i32 7, !dbg !10122
  %36 = load volatile i32, i32* %35, align 4, !dbg !10123
  %37 = and i32 %36, -513, !dbg !10123
  store volatile i32 %37, i32* %35, align 4, !dbg !10123
  br label %38, !dbg !10122

38:                                               ; preds = %33, %29
  %39 = load i32, i32* %5, align 4, !dbg !10124
  %40 = and i32 %39, 4, !dbg !10126
  %41 = icmp ne i32 %40, 0, !dbg !10126
  br i1 %41, label %42, label %47, !dbg !10127

42:                                               ; preds = %38
  %43 = load %struct.UART_Type*, %struct.UART_Type** %4, align 4, !dbg !10128
  %44 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %43, i32 0, i32 6, !dbg !10128
  %45 = load volatile i32, i32* %44, align 4, !dbg !10129
  %46 = and i32 %45, -3, !dbg !10129
  store volatile i32 %46, i32* %44, align 4, !dbg !10129
  br label %47, !dbg !10128

47:                                               ; preds = %42, %38
  br label %48

48:                                               ; preds = %47, %28
  ret void, !dbg !10130
}

; Function Attrs: noinline nounwind optnone
define dso_local void @UART_SetDozeMode(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) #1 !dbg !10131 {
  %3 = alloca %struct.UART_Type*, align 4
  %4 = alloca i8, align 1
  store %struct.UART_Type* %0, %struct.UART_Type** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.UART_Type** %3, metadata !10134, metadata !DIExpression()), !dbg !10135
  %5 = zext i1 %1 to i8
  store i8 %5, i8* %4, align 1
  call void @llvm.dbg.declare(metadata i8* %4, metadata !10136, metadata !DIExpression()), !dbg !10137
  %6 = load i8, i8* %4, align 1, !dbg !10138
  %7 = trunc i8 %6 to i1, !dbg !10138
  br i1 %7, label %8, label %13, !dbg !10140

8:                                                ; preds = %2
  %9 = load %struct.UART_Type*, %struct.UART_Type** %3, align 4, !dbg !10141
  %10 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %9, i32 0, i32 4, !dbg !10141
  %11 = load volatile i32, i32* %10, align 4, !dbg !10142
  %12 = and i32 %11, 2, !dbg !10142
  store volatile i32 %12, i32* %10, align 4, !dbg !10142
  br label %18, !dbg !10141

13:                                               ; preds = %2
  %14 = load %struct.UART_Type*, %struct.UART_Type** %3, align 4, !dbg !10143
  %15 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %14, i32 0, i32 4, !dbg !10143
  %16 = load volatile i32, i32* %15, align 4, !dbg !10144
  %17 = or i32 %16, -3, !dbg !10144
  store volatile i32 %17, i32* %15, align 4, !dbg !10144
  br label %18

18:                                               ; preds = %13, %8
  ret void, !dbg !10145
}

; Function Attrs: noinline nounwind optnone
define dso_local void @UART_SetLowPowerMode(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) #1 !dbg !10146 {
  %3 = alloca %struct.UART_Type*, align 4
  %4 = alloca i8, align 1
  store %struct.UART_Type* %0, %struct.UART_Type** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.UART_Type** %3, metadata !10147, metadata !DIExpression()), !dbg !10148
  %5 = zext i1 %1 to i8
  store i8 %5, i8* %4, align 1
  call void @llvm.dbg.declare(metadata i8* %4, metadata !10149, metadata !DIExpression()), !dbg !10150
  %6 = load i8, i8* %4, align 1, !dbg !10151
  %7 = trunc i8 %6 to i1, !dbg !10151
  br i1 %7, label %8, label %13, !dbg !10153

8:                                                ; preds = %2
  %9 = load %struct.UART_Type*, %struct.UART_Type** %3, align 4, !dbg !10154
  %10 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %9, i32 0, i32 7, !dbg !10154
  %11 = load volatile i32, i32* %10, align 4, !dbg !10155
  %12 = and i32 %11, -17, !dbg !10155
  store volatile i32 %12, i32* %10, align 4, !dbg !10155
  br label %18, !dbg !10154

13:                                               ; preds = %2
  %14 = load %struct.UART_Type*, %struct.UART_Type** %3, align 4, !dbg !10156
  %15 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %14, i32 0, i32 7, !dbg !10156
  %16 = load volatile i32, i32* %15, align 4, !dbg !10157
  %17 = or i32 %16, 16, !dbg !10157
  store volatile i32 %17, i32* %15, align 4, !dbg !10157
  br label %18

18:                                               ; preds = %13, %8
  ret void, !dbg !10158
}

; Function Attrs: noinline nounwind optnone
define dso_local void @UART_SetIntCmd(%struct.UART_Type* noundef %0, i32 noundef %1, i1 noundef zeroext %2) #1 !dbg !10159 {
  %4 = alloca %struct.UART_Type*, align 4
  %5 = alloca i32, align 4
  %6 = alloca i8, align 1
  %7 = alloca i32*, align 4
  %8 = alloca i32, align 4
  store %struct.UART_Type* %0, %struct.UART_Type** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.UART_Type** %4, metadata !10160, metadata !DIExpression()), !dbg !10161
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !10162, metadata !DIExpression()), !dbg !10163
  %9 = zext i1 %2 to i8
  store i8 %9, i8* %6, align 1
  call void @llvm.dbg.declare(metadata i8* %6, metadata !10164, metadata !DIExpression()), !dbg !10165
  call void @llvm.dbg.declare(metadata i32** %7, metadata !10166, metadata !DIExpression()), !dbg !10167
  store i32* null, i32** %7, align 4, !dbg !10167
  call void @llvm.dbg.declare(metadata i32* %8, metadata !10168, metadata !DIExpression()), !dbg !10169
  store i32 0, i32* %8, align 4, !dbg !10169
  %10 = load %struct.UART_Type*, %struct.UART_Type** %4, align 4, !dbg !10170
  %11 = ptrtoint %struct.UART_Type* %10 to i32, !dbg !10171
  %12 = load i32, i32* %5, align 4, !dbg !10172
  %13 = lshr i32 %12, 16, !dbg !10173
  %14 = add i32 %11, %13, !dbg !10174
  %15 = inttoptr i32 %14 to i32*, !dbg !10175
  store i32* %15, i32** %7, align 4, !dbg !10176
  %16 = load i32, i32* %5, align 4, !dbg !10177
  %17 = and i32 %16, 65535, !dbg !10178
  %18 = shl i32 1, %17, !dbg !10179
  store i32 %18, i32* %8, align 4, !dbg !10180
  %19 = load i8, i8* %6, align 1, !dbg !10181
  %20 = trunc i8 %19 to i1, !dbg !10181
  br i1 %20, label %21, label %26, !dbg !10183

21:                                               ; preds = %3
  %22 = load i32, i32* %8, align 4, !dbg !10184
  %23 = load i32*, i32** %7, align 4, !dbg !10185
  %24 = load volatile i32, i32* %23, align 4, !dbg !10186
  %25 = or i32 %24, %22, !dbg !10186
  store volatile i32 %25, i32* %23, align 4, !dbg !10186
  br label %32, !dbg !10187

26:                                               ; preds = %3
  %27 = load i32, i32* %8, align 4, !dbg !10188
  %28 = xor i32 %27, -1, !dbg !10189
  %29 = load i32*, i32** %7, align 4, !dbg !10190
  %30 = load volatile i32, i32* %29, align 4, !dbg !10191
  %31 = and i32 %30, %28, !dbg !10191
  store volatile i32 %31, i32* %29, align 4, !dbg !10191
  br label %32

32:                                               ; preds = %26, %21
  ret void, !dbg !10192
}

; Function Attrs: noinline nounwind optnone
define dso_local void @UART_ClearStatusFlag(%struct.UART_Type* noundef %0, i32 noundef %1) #1 !dbg !10193 {
  %3 = alloca %struct.UART_Type*, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32*, align 4
  %6 = alloca i32, align 4
  store %struct.UART_Type* %0, %struct.UART_Type** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.UART_Type** %3, metadata !10196, metadata !DIExpression()), !dbg !10197
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !10198, metadata !DIExpression()), !dbg !10199
  call void @llvm.dbg.declare(metadata i32** %5, metadata !10200, metadata !DIExpression()), !dbg !10201
  store i32* null, i32** %5, align 4, !dbg !10201
  call void @llvm.dbg.declare(metadata i32* %6, metadata !10202, metadata !DIExpression()), !dbg !10203
  store i32 0, i32* %6, align 4, !dbg !10203
  %7 = load %struct.UART_Type*, %struct.UART_Type** %3, align 4, !dbg !10204
  %8 = ptrtoint %struct.UART_Type* %7 to i32, !dbg !10205
  %9 = load i32, i32* %4, align 4, !dbg !10206
  %10 = lshr i32 %9, 16, !dbg !10207
  %11 = add i32 %8, %10, !dbg !10208
  %12 = inttoptr i32 %11 to i32*, !dbg !10209
  store i32* %12, i32** %5, align 4, !dbg !10210
  %13 = load i32, i32* %4, align 4, !dbg !10211
  %14 = and i32 %13, 65535, !dbg !10212
  %15 = shl i32 1, %14, !dbg !10213
  store i32 %15, i32* %6, align 4, !dbg !10214
  %16 = load i32, i32* %6, align 4, !dbg !10215
  %17 = load i32*, i32** %5, align 4, !dbg !10216
  store volatile i32 %16, i32* %17, align 4, !dbg !10217
  ret void, !dbg !10218
}

; Function Attrs: noinline nounwind optnone
define dso_local void @UART_SetDmaCmd(%struct.UART_Type* noundef %0, i32 noundef %1, i1 noundef zeroext %2) #1 !dbg !10219 {
  %4 = alloca %struct.UART_Type*, align 4
  %5 = alloca i32, align 4
  %6 = alloca i8, align 1
  %7 = alloca i32*, align 4
  %8 = alloca i32, align 4
  store %struct.UART_Type* %0, %struct.UART_Type** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.UART_Type** %4, metadata !10220, metadata !DIExpression()), !dbg !10221
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !10222, metadata !DIExpression()), !dbg !10223
  %9 = zext i1 %2 to i8
  store i8 %9, i8* %6, align 1
  call void @llvm.dbg.declare(metadata i8* %6, metadata !10224, metadata !DIExpression()), !dbg !10225
  call void @llvm.dbg.declare(metadata i32** %7, metadata !10226, metadata !DIExpression()), !dbg !10227
  store i32* null, i32** %7, align 4, !dbg !10227
  call void @llvm.dbg.declare(metadata i32* %8, metadata !10228, metadata !DIExpression()), !dbg !10229
  store i32 0, i32* %8, align 4, !dbg !10229
  %10 = load %struct.UART_Type*, %struct.UART_Type** %4, align 4, !dbg !10230
  %11 = ptrtoint %struct.UART_Type* %10 to i32, !dbg !10231
  %12 = load i32, i32* %5, align 4, !dbg !10232
  %13 = lshr i32 %12, 16, !dbg !10233
  %14 = add i32 %11, %13, !dbg !10234
  %15 = inttoptr i32 %14 to i32*, !dbg !10235
  store i32* %15, i32** %7, align 4, !dbg !10236
  %16 = load i32, i32* %5, align 4, !dbg !10237
  %17 = and i32 %16, 65535, !dbg !10238
  %18 = shl i32 1, %17, !dbg !10239
  store i32 %18, i32* %8, align 4, !dbg !10240
  %19 = load i8, i8* %6, align 1, !dbg !10241
  %20 = trunc i8 %19 to i1, !dbg !10241
  br i1 %20, label %21, label %26, !dbg !10243

21:                                               ; preds = %3
  %22 = load i32, i32* %8, align 4, !dbg !10244
  %23 = load i32*, i32** %7, align 4, !dbg !10245
  %24 = load volatile i32, i32* %23, align 4, !dbg !10246
  %25 = or i32 %24, %22, !dbg !10246
  store volatile i32 %25, i32* %23, align 4, !dbg !10246
  br label %32, !dbg !10247

26:                                               ; preds = %3
  %27 = load i32, i32* %8, align 4, !dbg !10248
  %28 = xor i32 %27, -1, !dbg !10249
  %29 = load i32*, i32** %7, align 4, !dbg !10250
  %30 = load volatile i32, i32* %29, align 4, !dbg !10251
  %31 = and i32 %30, %28, !dbg !10251
  store volatile i32 %31, i32* %29, align 4, !dbg !10251
  br label %32

32:                                               ; preds = %26, %21
  ret void, !dbg !10252
}

; Function Attrs: noinline nounwind optnone
define dso_local void @UART_SetRtsFlowCtrlCmd(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) #1 !dbg !10253 {
  %3 = alloca %struct.UART_Type*, align 4
  %4 = alloca i8, align 1
  store %struct.UART_Type* %0, %struct.UART_Type** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.UART_Type** %3, metadata !10254, metadata !DIExpression()), !dbg !10255
  %5 = zext i1 %1 to i8
  store i8 %5, i8* %4, align 1
  call void @llvm.dbg.declare(metadata i8* %4, metadata !10256, metadata !DIExpression()), !dbg !10257
  %6 = load i8, i8* %4, align 1, !dbg !10258
  %7 = trunc i8 %6 to i1, !dbg !10258
  br i1 %7, label %8, label %13, !dbg !10260

8:                                                ; preds = %2
  %9 = load %struct.UART_Type*, %struct.UART_Type** %3, align 4, !dbg !10261
  %10 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %9, i32 0, i32 5, !dbg !10261
  %11 = load volatile i32, i32* %10, align 4, !dbg !10262
  %12 = and i32 %11, -16385, !dbg !10262
  store volatile i32 %12, i32* %10, align 4, !dbg !10262
  br label %18, !dbg !10261

13:                                               ; preds = %2
  %14 = load %struct.UART_Type*, %struct.UART_Type** %3, align 4, !dbg !10263
  %15 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %14, i32 0, i32 5, !dbg !10263
  %16 = load volatile i32, i32* %15, align 4, !dbg !10264
  %17 = or i32 %16, 16384, !dbg !10264
  store volatile i32 %17, i32* %15, align 4, !dbg !10264
  br label %18

18:                                               ; preds = %13, %8
  ret void, !dbg !10265
}

; Function Attrs: noinline nounwind optnone
define dso_local void @UART_SetCtsFlowCtrlCmd(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) #1 !dbg !10266 {
  %3 = alloca %struct.UART_Type*, align 4
  %4 = alloca i8, align 1
  store %struct.UART_Type* %0, %struct.UART_Type** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.UART_Type** %3, metadata !10267, metadata !DIExpression()), !dbg !10268
  %5 = zext i1 %1 to i8
  store i8 %5, i8* %4, align 1
  call void @llvm.dbg.declare(metadata i8* %4, metadata !10269, metadata !DIExpression()), !dbg !10270
  %6 = load i8, i8* %4, align 1, !dbg !10271
  %7 = trunc i8 %6 to i1, !dbg !10271
  br i1 %7, label %8, label %13, !dbg !10273

8:                                                ; preds = %2
  %9 = load %struct.UART_Type*, %struct.UART_Type** %3, align 4, !dbg !10274
  %10 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %9, i32 0, i32 5, !dbg !10274
  %11 = load volatile i32, i32* %10, align 4, !dbg !10275
  %12 = or i32 %11, 8192, !dbg !10275
  store volatile i32 %12, i32* %10, align 4, !dbg !10275
  br label %18, !dbg !10274

13:                                               ; preds = %2
  %14 = load %struct.UART_Type*, %struct.UART_Type** %3, align 4, !dbg !10276
  %15 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %14, i32 0, i32 5, !dbg !10276
  %16 = load volatile i32, i32* %15, align 4, !dbg !10277
  %17 = and i32 %16, -8193, !dbg !10277
  store volatile i32 %17, i32* %15, align 4, !dbg !10277
  br label %18

18:                                               ; preds = %13, %8
  ret void, !dbg !10278
}

; Function Attrs: noinline nounwind optnone
define dso_local void @UART_SetCtsPinLevel(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) #1 !dbg !10279 {
  %3 = alloca %struct.UART_Type*, align 4
  %4 = alloca i8, align 1
  store %struct.UART_Type* %0, %struct.UART_Type** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.UART_Type** %3, metadata !10280, metadata !DIExpression()), !dbg !10281
  %5 = zext i1 %1 to i8
  store i8 %5, i8* %4, align 1
  call void @llvm.dbg.declare(metadata i8* %4, metadata !10282, metadata !DIExpression()), !dbg !10283
  %6 = load i8, i8* %4, align 1, !dbg !10284
  %7 = trunc i8 %6 to i1, !dbg !10284
  br i1 %7, label %8, label %13, !dbg !10286

8:                                                ; preds = %2
  %9 = load %struct.UART_Type*, %struct.UART_Type** %3, align 4, !dbg !10287
  %10 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %9, i32 0, i32 5, !dbg !10287
  %11 = load volatile i32, i32* %10, align 4, !dbg !10288
  %12 = or i32 %11, 4096, !dbg !10288
  store volatile i32 %12, i32* %10, align 4, !dbg !10288
  br label %18, !dbg !10287

13:                                               ; preds = %2
  %14 = load %struct.UART_Type*, %struct.UART_Type** %3, align 4, !dbg !10289
  %15 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %14, i32 0, i32 5, !dbg !10289
  %16 = load volatile i32, i32* %15, align 4, !dbg !10290
  %17 = and i32 %16, -4097, !dbg !10290
  store volatile i32 %17, i32* %15, align 4, !dbg !10290
  br label %18

18:                                               ; preds = %13, %8
  ret void, !dbg !10291
}

; Function Attrs: noinline nounwind optnone
define dso_local void @UART_SetModemMode(%struct.UART_Type* noundef %0, i32 noundef %1) #1 !dbg !10292 {
  %3 = alloca %struct.UART_Type*, align 4
  %4 = alloca i32, align 4
  store %struct.UART_Type* %0, %struct.UART_Type** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.UART_Type** %3, metadata !10293, metadata !DIExpression()), !dbg !10294
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !10295, metadata !DIExpression()), !dbg !10296
  %5 = load i32, i32* %4, align 4, !dbg !10297
  %6 = icmp eq i32 0, %5, !dbg !10299
  br i1 %6, label %7, label %12, !dbg !10300

7:                                                ; preds = %2
  %8 = load %struct.UART_Type*, %struct.UART_Type** %3, align 4, !dbg !10301
  %9 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %8, i32 0, i32 8, !dbg !10301
  %10 = load volatile i32, i32* %9, align 4, !dbg !10302
  %11 = and i32 %10, -65, !dbg !10302
  store volatile i32 %11, i32* %9, align 4, !dbg !10302
  br label %17, !dbg !10301

12:                                               ; preds = %2
  %13 = load %struct.UART_Type*, %struct.UART_Type** %3, align 4, !dbg !10303
  %14 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %13, i32 0, i32 8, !dbg !10303
  %15 = load volatile i32, i32* %14, align 4, !dbg !10304
  %16 = or i32 %15, 64, !dbg !10304
  store volatile i32 %16, i32* %14, align 4, !dbg !10304
  br label %17

17:                                               ; preds = %12, %7
  ret void, !dbg !10305
}

; Function Attrs: noinline nounwind optnone
define dso_local void @UART_SetDtrPinLevel(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) #1 !dbg !10306 {
  %3 = alloca %struct.UART_Type*, align 4
  %4 = alloca i8, align 1
  store %struct.UART_Type* %0, %struct.UART_Type** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.UART_Type** %3, metadata !10307, metadata !DIExpression()), !dbg !10308
  %5 = zext i1 %1 to i8
  store i8 %5, i8* %4, align 1
  call void @llvm.dbg.declare(metadata i8* %4, metadata !10309, metadata !DIExpression()), !dbg !10310
  %6 = load i8, i8* %4, align 1, !dbg !10311
  %7 = trunc i8 %6 to i1, !dbg !10311
  br i1 %7, label %8, label %13, !dbg !10313

8:                                                ; preds = %2
  %9 = load %struct.UART_Type*, %struct.UART_Type** %3, align 4, !dbg !10314
  %10 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %9, i32 0, i32 6, !dbg !10314
  %11 = load volatile i32, i32* %10, align 4, !dbg !10315
  %12 = or i32 %11, 1024, !dbg !10315
  store volatile i32 %12, i32* %10, align 4, !dbg !10315
  br label %18, !dbg !10314

13:                                               ; preds = %2
  %14 = load %struct.UART_Type*, %struct.UART_Type** %3, align 4, !dbg !10316
  %15 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %14, i32 0, i32 6, !dbg !10316
  %16 = load volatile i32, i32* %15, align 4, !dbg !10317
  %17 = and i32 %16, -1025, !dbg !10317
  store volatile i32 %17, i32* %15, align 4, !dbg !10317
  br label %18

18:                                               ; preds = %13, %8
  ret void, !dbg !10318
}

; Function Attrs: noinline nounwind optnone
define dso_local void @UART_SetDcdPinLevel(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) #1 !dbg !10319 {
  %3 = alloca %struct.UART_Type*, align 4
  %4 = alloca i8, align 1
  store %struct.UART_Type* %0, %struct.UART_Type** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.UART_Type** %3, metadata !10320, metadata !DIExpression()), !dbg !10321
  %5 = zext i1 %1 to i8
  store i8 %5, i8* %4, align 1
  call void @llvm.dbg.declare(metadata i8* %4, metadata !10322, metadata !DIExpression()), !dbg !10323
  %6 = load i8, i8* %4, align 1, !dbg !10324
  %7 = trunc i8 %6 to i1, !dbg !10324
  br i1 %7, label %8, label %13, !dbg !10326

8:                                                ; preds = %2
  %9 = load %struct.UART_Type*, %struct.UART_Type** %3, align 4, !dbg !10327
  %10 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %9, i32 0, i32 6, !dbg !10327
  %11 = load volatile i32, i32* %10, align 4, !dbg !10328
  %12 = or i32 %11, 512, !dbg !10328
  store volatile i32 %12, i32* %10, align 4, !dbg !10328
  br label %18, !dbg !10327

13:                                               ; preds = %2
  %14 = load %struct.UART_Type*, %struct.UART_Type** %3, align 4, !dbg !10329
  %15 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %14, i32 0, i32 6, !dbg !10329
  %16 = load volatile i32, i32* %15, align 4, !dbg !10330
  %17 = and i32 %16, -513, !dbg !10330
  store volatile i32 %17, i32* %15, align 4, !dbg !10330
  br label %18

18:                                               ; preds = %13, %8
  ret void, !dbg !10331
}

; Function Attrs: noinline nounwind optnone
define dso_local void @UART_SetRiPinLevel(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) #1 !dbg !10332 {
  %3 = alloca %struct.UART_Type*, align 4
  %4 = alloca i8, align 1
  store %struct.UART_Type* %0, %struct.UART_Type** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.UART_Type** %3, metadata !10333, metadata !DIExpression()), !dbg !10334
  %5 = zext i1 %1 to i8
  store i8 %5, i8* %4, align 1
  call void @llvm.dbg.declare(metadata i8* %4, metadata !10335, metadata !DIExpression()), !dbg !10336
  %6 = load i8, i8* %4, align 1, !dbg !10337
  %7 = trunc i8 %6 to i1, !dbg !10337
  br i1 %7, label %8, label %13, !dbg !10339

8:                                                ; preds = %2
  %9 = load %struct.UART_Type*, %struct.UART_Type** %3, align 4, !dbg !10340
  %10 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %9, i32 0, i32 6, !dbg !10340
  %11 = load volatile i32, i32* %10, align 4, !dbg !10341
  %12 = or i32 %11, 256, !dbg !10341
  store volatile i32 %12, i32* %10, align 4, !dbg !10341
  br label %18, !dbg !10340

13:                                               ; preds = %2
  %14 = load %struct.UART_Type*, %struct.UART_Type** %3, align 4, !dbg !10342
  %15 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %14, i32 0, i32 6, !dbg !10342
  %16 = load volatile i32, i32* %15, align 4, !dbg !10343
  %17 = and i32 %16, -257, !dbg !10343
  store volatile i32 %17, i32* %15, align 4, !dbg !10343
  br label %18

18:                                               ; preds = %13, %8
  ret void, !dbg !10344
}

; Function Attrs: noinline nounwind optnone
define dso_local void @UART_Putchar9(%struct.UART_Type* noundef %0, i16 noundef zeroext %1) #1 !dbg !10345 {
  %3 = alloca %struct.UART_Type*, align 4
  %4 = alloca i16, align 2
  store %struct.UART_Type* %0, %struct.UART_Type** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.UART_Type** %3, metadata !10348, metadata !DIExpression()), !dbg !10349
  store i16 %1, i16* %4, align 2
  call void @llvm.dbg.declare(metadata i16* %4, metadata !10350, metadata !DIExpression()), !dbg !10351
  %5 = load i16, i16* %4, align 2, !dbg !10352
  %6 = zext i16 %5 to i32, !dbg !10352
  %7 = and i32 %6, 256, !dbg !10354
  %8 = icmp ne i32 %7, 0, !dbg !10354
  br i1 %8, label %9, label %14, !dbg !10355

9:                                                ; preds = %2
  %10 = load %struct.UART_Type*, %struct.UART_Type** %3, align 4, !dbg !10356
  %11 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %10, i32 0, i32 18, !dbg !10356
  %12 = load volatile i32, i32* %11, align 4, !dbg !10357
  %13 = or i32 %12, 4, !dbg !10357
  store volatile i32 %13, i32* %11, align 4, !dbg !10357
  br label %19, !dbg !10356

14:                                               ; preds = %2
  %15 = load %struct.UART_Type*, %struct.UART_Type** %3, align 4, !dbg !10358
  %16 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %15, i32 0, i32 18, !dbg !10358
  %17 = load volatile i32, i32* %16, align 4, !dbg !10359
  %18 = and i32 %17, -5, !dbg !10359
  store volatile i32 %18, i32* %16, align 4, !dbg !10359
  br label %19

19:                                               ; preds = %14, %9
  %20 = load i16, i16* %4, align 2, !dbg !10360
  %21 = zext i16 %20 to i32, !dbg !10360
  %22 = and i32 %21, 255, !dbg !10361
  %23 = load %struct.UART_Type*, %struct.UART_Type** %3, align 4, !dbg !10362
  %24 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %23, i32 0, i32 2, !dbg !10362
  store volatile i32 %22, i32* %24, align 4, !dbg !10363
  ret void, !dbg !10364
}

; Function Attrs: noinline nounwind optnone
define dso_local zeroext i16 @UART_Getchar9(%struct.UART_Type* noundef %0) #1 !dbg !10365 {
  %2 = alloca %struct.UART_Type*, align 4
  %3 = alloca i16, align 2
  store %struct.UART_Type* %0, %struct.UART_Type** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.UART_Type** %2, metadata !10368, metadata !DIExpression()), !dbg !10369
  call void @llvm.dbg.declare(metadata i16* %3, metadata !10370, metadata !DIExpression()), !dbg !10371
  %4 = load %struct.UART_Type*, %struct.UART_Type** %2, align 4, !dbg !10372
  %5 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %4, i32 0, i32 0, !dbg !10372
  %6 = load volatile i32, i32* %5, align 4, !dbg !10372
  %7 = trunc i32 %6 to i16, !dbg !10372
  store i16 %7, i16* %3, align 2, !dbg !10371
  %8 = load i16, i16* %3, align 2, !dbg !10373
  %9 = zext i16 %8 to i32, !dbg !10373
  %10 = and i32 %9, 1024, !dbg !10375
  %11 = icmp ne i32 %10, 0, !dbg !10375
  br i1 %11, label %12, label %18, !dbg !10376

12:                                               ; preds = %1
  %13 = load i16, i16* %3, align 2, !dbg !10377
  %14 = zext i16 %13 to i32, !dbg !10377
  %15 = and i32 %14, 255, !dbg !10379
  %16 = or i32 %15, 256, !dbg !10380
  %17 = trunc i32 %16 to i16, !dbg !10381
  store i16 %17, i16* %3, align 2, !dbg !10382
  br label %23, !dbg !10383

18:                                               ; preds = %1
  %19 = load i16, i16* %3, align 2, !dbg !10384
  %20 = zext i16 %19 to i32, !dbg !10384
  %21 = and i32 %20, 255, !dbg !10384
  %22 = trunc i32 %21 to i16, !dbg !10384
  store i16 %22, i16* %3, align 2, !dbg !10384
  br label %23

23:                                               ; preds = %18, %12
  %24 = load i16, i16* %3, align 2, !dbg !10386
  ret i16 %24, !dbg !10387
}

; Function Attrs: noinline nounwind optnone
define dso_local void @UART_SetMultidropMode(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) #1 !dbg !10388 {
  %3 = alloca %struct.UART_Type*, align 4
  %4 = alloca i8, align 1
  store %struct.UART_Type* %0, %struct.UART_Type** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.UART_Type** %3, metadata !10389, metadata !DIExpression()), !dbg !10390
  %5 = zext i1 %1 to i8
  store i8 %5, i8* %4, align 1
  call void @llvm.dbg.declare(metadata i8* %4, metadata !10391, metadata !DIExpression()), !dbg !10392
  %6 = load i8, i8* %4, align 1, !dbg !10393
  %7 = trunc i8 %6 to i1, !dbg !10393
  br i1 %7, label %8, label %13, !dbg !10395

8:                                                ; preds = %2
  %9 = load %struct.UART_Type*, %struct.UART_Type** %3, align 4, !dbg !10396
  %10 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %9, i32 0, i32 18, !dbg !10396
  %11 = load volatile i32, i32* %10, align 4, !dbg !10397
  %12 = or i32 %11, 1, !dbg !10397
  store volatile i32 %12, i32* %10, align 4, !dbg !10397
  br label %18, !dbg !10396

13:                                               ; preds = %2
  %14 = load %struct.UART_Type*, %struct.UART_Type** %3, align 4, !dbg !10398
  %15 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %14, i32 0, i32 18, !dbg !10398
  %16 = load volatile i32, i32* %15, align 4, !dbg !10399
  %17 = and i32 %16, -2, !dbg !10399
  store volatile i32 %17, i32* %15, align 4, !dbg !10399
  br label %18

18:                                               ; preds = %13, %8
  ret void, !dbg !10400
}

; Function Attrs: noinline nounwind optnone
define dso_local void @UART_SetSlaveAddressDetectCmd(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) #1 !dbg !10401 {
  %3 = alloca %struct.UART_Type*, align 4
  %4 = alloca i8, align 1
  store %struct.UART_Type* %0, %struct.UART_Type** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.UART_Type** %3, metadata !10402, metadata !DIExpression()), !dbg !10403
  %5 = zext i1 %1 to i8
  store i8 %5, i8* %4, align 1
  call void @llvm.dbg.declare(metadata i8* %4, metadata !10404, metadata !DIExpression()), !dbg !10405
  %6 = load i8, i8* %4, align 1, !dbg !10406
  %7 = trunc i8 %6 to i1, !dbg !10406
  br i1 %7, label %8, label %13, !dbg !10408

8:                                                ; preds = %2
  %9 = load %struct.UART_Type*, %struct.UART_Type** %3, align 4, !dbg !10409
  %10 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %9, i32 0, i32 18, !dbg !10409
  %11 = load volatile i32, i32* %10, align 4, !dbg !10410
  %12 = or i32 %11, 2, !dbg !10410
  store volatile i32 %12, i32* %10, align 4, !dbg !10410
  br label %18, !dbg !10409

13:                                               ; preds = %2
  %14 = load %struct.UART_Type*, %struct.UART_Type** %3, align 4, !dbg !10411
  %15 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %14, i32 0, i32 18, !dbg !10411
  %16 = load volatile i32, i32* %15, align 4, !dbg !10412
  %17 = and i32 %16, -3, !dbg !10412
  store volatile i32 %17, i32* %15, align 4, !dbg !10412
  br label %18

18:                                               ; preds = %13, %8
  ret void, !dbg !10413
}

; Function Attrs: noinline nounwind optnone
define dso_local void @UART_SetIrDACmd(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) #1 !dbg !10414 {
  %3 = alloca %struct.UART_Type*, align 4
  %4 = alloca i8, align 1
  store %struct.UART_Type* %0, %struct.UART_Type** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.UART_Type** %3, metadata !10415, metadata !DIExpression()), !dbg !10416
  %5 = zext i1 %1 to i8
  store i8 %5, i8* %4, align 1
  call void @llvm.dbg.declare(metadata i8* %4, metadata !10417, metadata !DIExpression()), !dbg !10418
  %6 = load i8, i8* %4, align 1, !dbg !10419
  %7 = trunc i8 %6 to i1, !dbg !10419
  br i1 %7, label %8, label %13, !dbg !10421

8:                                                ; preds = %2
  %9 = load %struct.UART_Type*, %struct.UART_Type** %3, align 4, !dbg !10422
  %10 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %9, i32 0, i32 4, !dbg !10422
  %11 = load volatile i32, i32* %10, align 4, !dbg !10423
  %12 = or i32 %11, 128, !dbg !10423
  store volatile i32 %12, i32* %10, align 4, !dbg !10423
  br label %18, !dbg !10422

13:                                               ; preds = %2
  %14 = load %struct.UART_Type*, %struct.UART_Type** %3, align 4, !dbg !10424
  %15 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %14, i32 0, i32 4, !dbg !10424
  %16 = load volatile i32, i32* %15, align 4, !dbg !10425
  %17 = and i32 %16, -129, !dbg !10425
  store volatile i32 %17, i32* %15, align 4, !dbg !10425
  br label %18

18:                                               ; preds = %13, %8
  ret void, !dbg !10426
}

; Function Attrs: noinline nounwind optnone
define dso_local void @UART_SetIrDAVoteClock(%struct.UART_Type* noundef %0, i32 noundef %1) #1 !dbg !10427 {
  %3 = alloca %struct.UART_Type*, align 4
  %4 = alloca i32, align 4
  store %struct.UART_Type* %0, %struct.UART_Type** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.UART_Type** %3, metadata !10428, metadata !DIExpression()), !dbg !10429
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !10430, metadata !DIExpression()), !dbg !10431
  %5 = load i32, i32* %4, align 4, !dbg !10432
  %6 = icmp eq i32 0, %5, !dbg !10434
  br i1 %6, label %7, label %12, !dbg !10435

7:                                                ; preds = %2
  %8 = load %struct.UART_Type*, %struct.UART_Type** %3, align 4, !dbg !10436
  %9 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %8, i32 0, i32 7, !dbg !10436
  %10 = load volatile i32, i32* %9, align 4, !dbg !10437
  %11 = or i32 %10, 32, !dbg !10437
  store volatile i32 %11, i32* %9, align 4, !dbg !10437
  br label %17, !dbg !10436

12:                                               ; preds = %2
  %13 = load %struct.UART_Type*, %struct.UART_Type** %3, align 4, !dbg !10438
  %14 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %13, i32 0, i32 7, !dbg !10438
  %15 = load volatile i32, i32* %14, align 4, !dbg !10439
  %16 = and i32 %15, -33, !dbg !10439
  store volatile i32 %16, i32* %14, align 4, !dbg !10439
  br label %17

17:                                               ; preds = %12, %7
  ret void, !dbg !10440
}

; Function Attrs: noinline nounwind optnone
define dso_local void @UART_SetAutoBaudRateCmd(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) #1 !dbg !10441 {
  %3 = alloca %struct.UART_Type*, align 4
  %4 = alloca i8, align 1
  store %struct.UART_Type* %0, %struct.UART_Type** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.UART_Type** %3, metadata !10442, metadata !DIExpression()), !dbg !10443
  %5 = zext i1 %1 to i8
  store i8 %5, i8* %4, align 1
  call void @llvm.dbg.declare(metadata i8* %4, metadata !10444, metadata !DIExpression()), !dbg !10445
  %6 = load i8, i8* %4, align 1, !dbg !10446
  %7 = trunc i8 %6 to i1, !dbg !10446
  br i1 %7, label %8, label %13, !dbg !10448

8:                                                ; preds = %2
  %9 = load %struct.UART_Type*, %struct.UART_Type** %3, align 4, !dbg !10449
  %10 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %9, i32 0, i32 4, !dbg !10449
  %11 = load volatile i32, i32* %10, align 4, !dbg !10450
  %12 = or i32 %11, 16384, !dbg !10450
  store volatile i32 %12, i32* %10, align 4, !dbg !10450
  br label %18, !dbg !10449

13:                                               ; preds = %2
  %14 = load %struct.UART_Type*, %struct.UART_Type** %3, align 4, !dbg !10451
  %15 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %14, i32 0, i32 4, !dbg !10451
  %16 = load volatile i32, i32* %15, align 4, !dbg !10452
  %17 = and i32 %16, -16385, !dbg !10452
  store volatile i32 %17, i32* %15, align 4, !dbg !10452
  br label %18

18:                                               ; preds = %13, %8
  ret void, !dbg !10453
}

; Function Attrs: noinline nounwind optnone
define dso_local void @UART_SendBreakChar(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) #1 !dbg !10454 {
  %3 = alloca %struct.UART_Type*, align 4
  %4 = alloca i8, align 1
  store %struct.UART_Type* %0, %struct.UART_Type** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.UART_Type** %3, metadata !10455, metadata !DIExpression()), !dbg !10456
  %5 = zext i1 %1 to i8
  store i8 %5, i8* %4, align 1
  call void @llvm.dbg.declare(metadata i8* %4, metadata !10457, metadata !DIExpression()), !dbg !10458
  %6 = load i8, i8* %4, align 1, !dbg !10459
  %7 = trunc i8 %6 to i1, !dbg !10459
  br i1 %7, label %8, label %13, !dbg !10461

8:                                                ; preds = %2
  %9 = load %struct.UART_Type*, %struct.UART_Type** %3, align 4, !dbg !10462
  %10 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %9, i32 0, i32 4, !dbg !10462
  %11 = load volatile i32, i32* %10, align 4, !dbg !10463
  %12 = or i32 %11, 16, !dbg !10463
  store volatile i32 %12, i32* %10, align 4, !dbg !10463
  br label %18, !dbg !10462

13:                                               ; preds = %2
  %14 = load %struct.UART_Type*, %struct.UART_Type** %3, align 4, !dbg !10464
  %15 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %14, i32 0, i32 4, !dbg !10464
  %16 = load volatile i32, i32* %15, align 4, !dbg !10465
  %17 = and i32 %16, -17, !dbg !10465
  store volatile i32 %17, i32* %15, align 4, !dbg !10465
  br label %18

18:                                               ; preds = %13, %8
  ret void, !dbg !10466
}

; Function Attrs: noinline nounwind optnone
define dso_local void @UART_SetEscapeDecectCmd(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) #1 !dbg !10467 {
  %3 = alloca %struct.UART_Type*, align 4
  %4 = alloca i8, align 1
  store %struct.UART_Type* %0, %struct.UART_Type** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.UART_Type** %3, metadata !10468, metadata !DIExpression()), !dbg !10469
  %5 = zext i1 %1 to i8
  store i8 %5, i8* %4, align 1
  call void @llvm.dbg.declare(metadata i8* %4, metadata !10470, metadata !DIExpression()), !dbg !10471
  %6 = load i8, i8* %4, align 1, !dbg !10472
  %7 = trunc i8 %6 to i1, !dbg !10472
  br i1 %7, label %8, label %13, !dbg !10474

8:                                                ; preds = %2
  %9 = load %struct.UART_Type*, %struct.UART_Type** %3, align 4, !dbg !10475
  %10 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %9, i32 0, i32 5, !dbg !10475
  %11 = load volatile i32, i32* %10, align 4, !dbg !10476
  %12 = or i32 %11, 2048, !dbg !10476
  store volatile i32 %12, i32* %10, align 4, !dbg !10476
  br label %18, !dbg !10475

13:                                               ; preds = %2
  %14 = load %struct.UART_Type*, %struct.UART_Type** %3, align 4, !dbg !10477
  %15 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %14, i32 0, i32 5, !dbg !10477
  %16 = load volatile i32, i32* %15, align 4, !dbg !10478
  %17 = and i32 %16, -2049, !dbg !10478
  store volatile i32 %17, i32* %15, align 4, !dbg !10478
  br label %18

18:                                               ; preds = %13, %8
  ret void, !dbg !10479
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @get_gpt_clock_freq(%struct.GPT_Type* noundef %0) #1 !dbg !10480 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.GPT_Type*, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  store %struct.GPT_Type* %0, %struct.GPT_Type** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.GPT_Type** %3, metadata !10498, metadata !DIExpression()), !dbg !10499
  call void @llvm.dbg.declare(metadata i32* %4, metadata !10500, metadata !DIExpression()), !dbg !10501
  call void @llvm.dbg.declare(metadata i32* %5, metadata !10502, metadata !DIExpression()), !dbg !10503
  call void @llvm.dbg.declare(metadata i32* %6, metadata !10504, metadata !DIExpression()), !dbg !10505
  call void @llvm.dbg.declare(metadata i32* %7, metadata !10506, metadata !DIExpression()), !dbg !10507
  %8 = load %struct.GPT_Type*, %struct.GPT_Type** %3, align 4, !dbg !10508
  %9 = ptrtoint %struct.GPT_Type* %8 to i32, !dbg !10509
  switch i32 %9, label %14 [
    i32 808386560, label %10
    i32 808452096, label %12
  ], !dbg !10510

10:                                               ; preds = %1
  %11 = call i32 @CCM_GetRootMux(%struct.CCM_Type* noundef inttoptr (i32 808976384 to %struct.CCM_Type*), i32 noundef 809024000) #10, !dbg !10511
  store i32 %11, i32* %4, align 4, !dbg !10513
  call void @CCM_GetRootDivider(%struct.CCM_Type* noundef inttoptr (i32 808976384 to %struct.CCM_Type*), i32 noundef 809024000, i32* noundef %6, i32* noundef %7) #10, !dbg !10514
  br label %15, !dbg !10515

12:                                               ; preds = %1
  %13 = call i32 @CCM_GetRootMux(%struct.CCM_Type* noundef inttoptr (i32 808976384 to %struct.CCM_Type*), i32 noundef 809024128) #10, !dbg !10516
  store i32 %13, i32* %4, align 4, !dbg !10517
  call void @CCM_GetRootDivider(%struct.CCM_Type* noundef inttoptr (i32 808976384 to %struct.CCM_Type*), i32 noundef 809024128, i32* noundef %6, i32* noundef %7) #10, !dbg !10518
  br label %15, !dbg !10519

14:                                               ; preds = %1
  store i32 0, i32* %2, align 4, !dbg !10520
  br label %29, !dbg !10520

15:                                               ; preds = %12, %10
  %16 = load i32, i32* %4, align 4, !dbg !10521
  switch i32 %16, label %20 [
    i32 0, label %17
    i32 2, label %18
  ], !dbg !10522

17:                                               ; preds = %15
  store i32 24000000, i32* %5, align 4, !dbg !10523
  br label %21, !dbg !10525

18:                                               ; preds = %15
  %19 = call i32 @CCM_ANALOG_GetPfdFreq(%struct.CCM_ANALOG_Type* noundef inttoptr (i32 808845312 to %struct.CCM_ANALOG_Type*), i32 noundef 192) #10, !dbg !10526
  store i32 %19, i32* %5, align 4, !dbg !10527
  br label %21, !dbg !10528

20:                                               ; preds = %15
  store i32 0, i32* %2, align 4, !dbg !10529
  br label %29, !dbg !10529

21:                                               ; preds = %18, %17
  %22 = load i32, i32* %5, align 4, !dbg !10530
  %23 = load i32, i32* %6, align 4, !dbg !10531
  %24 = add i32 %23, 1, !dbg !10532
  %25 = udiv i32 %22, %24, !dbg !10533
  %26 = load i32, i32* %7, align 4, !dbg !10534
  %27 = add i32 %26, 1, !dbg !10535
  %28 = udiv i32 %25, %27, !dbg !10536
  store i32 %28, i32* %2, align 4, !dbg !10537
  br label %29, !dbg !10537

29:                                               ; preds = %21, %20, %14
  %30 = load i32, i32* %2, align 4, !dbg !10538
  ret i32 %30, !dbg !10538
}

; Function Attrs: noinline nounwind optnone
define internal i32 @CCM_GetRootMux(%struct.CCM_Type* noundef %0, i32 noundef %1) #1 !dbg !10539 {
  %3 = alloca %struct.CCM_Type*, align 4
  %4 = alloca i32, align 4
  store %struct.CCM_Type* %0, %struct.CCM_Type** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.CCM_Type** %3, metadata !10542, metadata !DIExpression()), !dbg !10543
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !10544, metadata !DIExpression()), !dbg !10545
  %5 = load i32, i32* %4, align 4, !dbg !10546
  %6 = add i32 %5, 0, !dbg !10546
  %7 = inttoptr i32 %6 to i32*, !dbg !10546
  %8 = load volatile i32, i32* %7, align 4, !dbg !10546
  %9 = and i32 %8, 117440512, !dbg !10547
  %10 = lshr i32 %9, 24, !dbg !10548
  ret i32 %10, !dbg !10549
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @get_ecspi_clock_freq(%struct.ECSPI_Type* noundef %0) #1 !dbg !10550 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.ECSPI_Type*, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  store %struct.ECSPI_Type* %0, %struct.ECSPI_Type** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.ECSPI_Type** %3, metadata !10571, metadata !DIExpression()), !dbg !10572
  call void @llvm.dbg.declare(metadata i32* %4, metadata !10573, metadata !DIExpression()), !dbg !10574
  call void @llvm.dbg.declare(metadata i32* %5, metadata !10575, metadata !DIExpression()), !dbg !10576
  call void @llvm.dbg.declare(metadata i32* %6, metadata !10577, metadata !DIExpression()), !dbg !10578
  call void @llvm.dbg.declare(metadata i32* %7, metadata !10579, metadata !DIExpression()), !dbg !10580
  %8 = load %struct.ECSPI_Type*, %struct.ECSPI_Type** %3, align 4, !dbg !10581
  %9 = ptrtoint %struct.ECSPI_Type* %8 to i32, !dbg !10582
  switch i32 %9, label %14 [
    i32 813826048, label %10
    i32 813891584, label %12
  ], !dbg !10583

10:                                               ; preds = %1
  %11 = call i32 @CCM_GetRootMux(%struct.CCM_Type* noundef inttoptr (i32 808976384 to %struct.CCM_Type*), i32 noundef 809022208) #10, !dbg !10584
  store i32 %11, i32* %4, align 4, !dbg !10586
  call void @CCM_GetRootDivider(%struct.CCM_Type* noundef inttoptr (i32 808976384 to %struct.CCM_Type*), i32 noundef 809022208, i32* noundef %6, i32* noundef %7) #10, !dbg !10587
  br label %15, !dbg !10588

12:                                               ; preds = %1
  %13 = call i32 @CCM_GetRootMux(%struct.CCM_Type* noundef inttoptr (i32 808976384 to %struct.CCM_Type*), i32 noundef 809022336) #10, !dbg !10589
  store i32 %13, i32* %4, align 4, !dbg !10590
  call void @CCM_GetRootDivider(%struct.CCM_Type* noundef inttoptr (i32 808976384 to %struct.CCM_Type*), i32 noundef 809022336, i32* noundef %6, i32* noundef %7) #10, !dbg !10591
  br label %15, !dbg !10592

14:                                               ; preds = %1
  store i32 0, i32* %2, align 4, !dbg !10593
  br label %29, !dbg !10593

15:                                               ; preds = %12, %10
  %16 = load i32, i32* %4, align 4, !dbg !10594
  switch i32 %16, label %20 [
    i32 0, label %17
    i32 5, label %18
  ], !dbg !10595

17:                                               ; preds = %15
  store i32 24000000, i32* %5, align 4, !dbg !10596
  br label %21, !dbg !10598

18:                                               ; preds = %15
  %19 = call i32 @CCM_ANALOG_GetPfdFreq(%struct.CCM_ANALOG_Type* noundef inttoptr (i32 808845312 to %struct.CCM_ANALOG_Type*), i32 noundef 208) #10, !dbg !10599
  store i32 %19, i32* %5, align 4, !dbg !10600
  br label %21, !dbg !10601

20:                                               ; preds = %15
  store i32 0, i32* %2, align 4, !dbg !10602
  br label %29, !dbg !10602

21:                                               ; preds = %18, %17
  %22 = load i32, i32* %5, align 4, !dbg !10603
  %23 = load i32, i32* %6, align 4, !dbg !10604
  %24 = add i32 %23, 1, !dbg !10605
  %25 = udiv i32 %22, %24, !dbg !10606
  %26 = load i32, i32* %7, align 4, !dbg !10607
  %27 = add i32 %26, 1, !dbg !10608
  %28 = udiv i32 %25, %27, !dbg !10609
  store i32 %28, i32* %2, align 4, !dbg !10610
  br label %29, !dbg !10610

29:                                               ; preds = %21, %20, %14
  %30 = load i32, i32* %2, align 4, !dbg !10611
  ret i32 %30, !dbg !10611
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @get_flexcan_clock_freq(%struct.CAN_Type* noundef %0) #1 !dbg !10612 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.CAN_Type*, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  store %struct.CAN_Type* %0, %struct.CAN_Type** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.CAN_Type** %3, metadata !10657, metadata !DIExpression()), !dbg !10658
  call void @llvm.dbg.declare(metadata i32* %4, metadata !10659, metadata !DIExpression()), !dbg !10660
  call void @llvm.dbg.declare(metadata i32* %5, metadata !10661, metadata !DIExpression()), !dbg !10662
  call void @llvm.dbg.declare(metadata i32* %6, metadata !10663, metadata !DIExpression()), !dbg !10664
  call void @llvm.dbg.declare(metadata i32* %7, metadata !10665, metadata !DIExpression()), !dbg !10666
  %8 = load %struct.CAN_Type*, %struct.CAN_Type** %3, align 4, !dbg !10667
  %9 = ptrtoint %struct.CAN_Type* %8 to i32, !dbg !10668
  switch i32 %9, label %14 [
    i32 815792128, label %10
    i32 815857664, label %12
  ], !dbg !10669

10:                                               ; preds = %1
  %11 = call i32 @CCM_GetRootMux(%struct.CCM_Type* noundef inttoptr (i32 808976384 to %struct.CCM_Type*), i32 noundef 809020544) #10, !dbg !10670
  store i32 %11, i32* %4, align 4, !dbg !10672
  call void @CCM_GetRootDivider(%struct.CCM_Type* noundef inttoptr (i32 808976384 to %struct.CCM_Type*), i32 noundef 809020544, i32* noundef %6, i32* noundef %7) #10, !dbg !10673
  br label %15, !dbg !10674

12:                                               ; preds = %1
  %13 = call i32 @CCM_GetRootMux(%struct.CCM_Type* noundef inttoptr (i32 808976384 to %struct.CCM_Type*), i32 noundef 809020672) #10, !dbg !10675
  store i32 %13, i32* %4, align 4, !dbg !10676
  call void @CCM_GetRootDivider(%struct.CCM_Type* noundef inttoptr (i32 808976384 to %struct.CCM_Type*), i32 noundef 809020672, i32* noundef %6, i32* noundef %7) #10, !dbg !10677
  br label %15, !dbg !10678

14:                                               ; preds = %1
  store i32 0, i32* %2, align 4, !dbg !10679
  br label %32, !dbg !10679

15:                                               ; preds = %12, %10
  %16 = load i32, i32* %4, align 4, !dbg !10680
  switch i32 %16, label %23 [
    i32 0, label %17
    i32 1, label %18
    i32 3, label %21
  ], !dbg !10681

17:                                               ; preds = %15
  store i32 24000000, i32* %5, align 4, !dbg !10682
  br label %24, !dbg !10684

18:                                               ; preds = %15
  %19 = call i32 @CCM_ANALOG_GetSysPllFreq(%struct.CCM_ANALOG_Type* noundef inttoptr (i32 808845312 to %struct.CCM_ANALOG_Type*)) #10, !dbg !10685
  %20 = lshr i32 %19, 2, !dbg !10686
  store i32 %20, i32* %5, align 4, !dbg !10687
  br label %24, !dbg !10688

21:                                               ; preds = %15
  %22 = call i32 @CCM_ANALOG_GetSysPllFreq(%struct.CCM_ANALOG_Type* noundef inttoptr (i32 808845312 to %struct.CCM_ANALOG_Type*)) #10, !dbg !10689
  store i32 %22, i32* %5, align 4, !dbg !10690
  br label %24, !dbg !10691

23:                                               ; preds = %15
  store i32 0, i32* %2, align 4, !dbg !10692
  br label %32, !dbg !10692

24:                                               ; preds = %21, %18, %17
  %25 = load i32, i32* %5, align 4, !dbg !10693
  %26 = load i32, i32* %6, align 4, !dbg !10694
  %27 = add i32 %26, 1, !dbg !10695
  %28 = udiv i32 %25, %27, !dbg !10696
  %29 = load i32, i32* %7, align 4, !dbg !10697
  %30 = add i32 %29, 1, !dbg !10698
  %31 = udiv i32 %28, %30, !dbg !10699
  store i32 %31, i32* %2, align 4, !dbg !10700
  br label %32, !dbg !10700

32:                                               ; preds = %24, %23, %14
  %33 = load i32, i32* %2, align 4, !dbg !10701
  ret i32 %33, !dbg !10701
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @get_i2c_clock_freq(%struct.I2C_Type* noundef %0) #1 !dbg !10702 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.I2C_Type*, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  store %struct.I2C_Type* %0, %struct.I2C_Type** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.I2C_Type** %3, metadata !10719, metadata !DIExpression()), !dbg !10720
  call void @llvm.dbg.declare(metadata i32* %4, metadata !10721, metadata !DIExpression()), !dbg !10722
  call void @llvm.dbg.declare(metadata i32* %5, metadata !10723, metadata !DIExpression()), !dbg !10724
  call void @llvm.dbg.declare(metadata i32* %6, metadata !10725, metadata !DIExpression()), !dbg !10726
  call void @llvm.dbg.declare(metadata i32* %7, metadata !10727, metadata !DIExpression()), !dbg !10728
  %8 = load %struct.I2C_Type*, %struct.I2C_Type** %3, align 4, !dbg !10729
  %9 = ptrtoint %struct.I2C_Type* %8 to i32, !dbg !10730
  switch i32 %9, label %18 [
    i32 815923200, label %10
    i32 815988736, label %12
    i32 816054272, label %14
    i32 816119808, label %16
  ], !dbg !10731

10:                                               ; preds = %1
  %11 = call i32 @CCM_GetRootMux(%struct.CCM_Type* noundef inttoptr (i32 808976384 to %struct.CCM_Type*), i32 noundef 809020800) #10, !dbg !10732
  store i32 %11, i32* %4, align 4, !dbg !10734
  call void @CCM_GetRootDivider(%struct.CCM_Type* noundef inttoptr (i32 808976384 to %struct.CCM_Type*), i32 noundef 809020800, i32* noundef %6, i32* noundef %7) #10, !dbg !10735
  br label %19, !dbg !10736

12:                                               ; preds = %1
  %13 = call i32 @CCM_GetRootMux(%struct.CCM_Type* noundef inttoptr (i32 808976384 to %struct.CCM_Type*), i32 noundef 809020928) #10, !dbg !10737
  store i32 %13, i32* %4, align 4, !dbg !10738
  call void @CCM_GetRootDivider(%struct.CCM_Type* noundef inttoptr (i32 808976384 to %struct.CCM_Type*), i32 noundef 809020928, i32* noundef %6, i32* noundef %7) #10, !dbg !10739
  br label %19, !dbg !10740

14:                                               ; preds = %1
  %15 = call i32 @CCM_GetRootMux(%struct.CCM_Type* noundef inttoptr (i32 808976384 to %struct.CCM_Type*), i32 noundef 809021056) #10, !dbg !10741
  store i32 %15, i32* %4, align 4, !dbg !10742
  call void @CCM_GetRootDivider(%struct.CCM_Type* noundef inttoptr (i32 808976384 to %struct.CCM_Type*), i32 noundef 809021056, i32* noundef %6, i32* noundef %7) #10, !dbg !10743
  br label %19, !dbg !10744

16:                                               ; preds = %1
  %17 = call i32 @CCM_GetRootMux(%struct.CCM_Type* noundef inttoptr (i32 808976384 to %struct.CCM_Type*), i32 noundef 809021184) #10, !dbg !10745
  store i32 %17, i32* %4, align 4, !dbg !10746
  call void @CCM_GetRootDivider(%struct.CCM_Type* noundef inttoptr (i32 808976384 to %struct.CCM_Type*), i32 noundef 809021184, i32* noundef %6, i32* noundef %7) #10, !dbg !10747
  br label %19, !dbg !10748

18:                                               ; preds = %1
  store i32 0, i32* %2, align 4, !dbg !10749
  br label %34, !dbg !10749

19:                                               ; preds = %16, %14, %12, %10
  %20 = load i32, i32* %4, align 4, !dbg !10750
  switch i32 %20, label %25 [
    i32 0, label %21
    i32 1, label %22
  ], !dbg !10751

21:                                               ; preds = %19
  store i32 24000000, i32* %5, align 4, !dbg !10752
  br label %26, !dbg !10754

22:                                               ; preds = %19
  %23 = call i32 @CCM_ANALOG_GetSysPllFreq(%struct.CCM_ANALOG_Type* noundef inttoptr (i32 808845312 to %struct.CCM_ANALOG_Type*)) #10, !dbg !10755
  %24 = lshr i32 %23, 2, !dbg !10756
  store i32 %24, i32* %5, align 4, !dbg !10757
  br label %26, !dbg !10758

25:                                               ; preds = %19
  store i32 0, i32* %2, align 4, !dbg !10759
  br label %34, !dbg !10759

26:                                               ; preds = %22, %21
  %27 = load i32, i32* %5, align 4, !dbg !10760
  %28 = load i32, i32* %6, align 4, !dbg !10761
  %29 = add i32 %28, 1, !dbg !10762
  %30 = udiv i32 %27, %29, !dbg !10763
  %31 = load i32, i32* %7, align 4, !dbg !10764
  %32 = add i32 %31, 1, !dbg !10765
  %33 = udiv i32 %30, %32, !dbg !10766
  store i32 %33, i32* %2, align 4, !dbg !10767
  br label %34, !dbg !10767

34:                                               ; preds = %26, %25, %18
  %35 = load i32, i32* %2, align 4, !dbg !10768
  ret i32 %35, !dbg !10768
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @get_uart_clock_freq(%struct.UART_Type* noundef %0) #1 !dbg !10769 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.UART_Type*, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  store %struct.UART_Type* %0, %struct.UART_Type** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.UART_Type** %3, metadata !10795, metadata !DIExpression()), !dbg !10796
  call void @llvm.dbg.declare(metadata i32* %4, metadata !10797, metadata !DIExpression()), !dbg !10798
  call void @llvm.dbg.declare(metadata i32* %5, metadata !10799, metadata !DIExpression()), !dbg !10800
  call void @llvm.dbg.declare(metadata i32* %6, metadata !10801, metadata !DIExpression()), !dbg !10802
  call void @llvm.dbg.declare(metadata i32* %7, metadata !10803, metadata !DIExpression()), !dbg !10804
  %8 = load %struct.UART_Type*, %struct.UART_Type** %3, align 4, !dbg !10805
  %9 = ptrtoint %struct.UART_Type* %8 to i32, !dbg !10806
  switch i32 %9, label %24 [
    i32 814088192, label %10
    i32 814284800, label %12
    i32 814219264, label %14
    i32 816185344, label %16
    i32 816250880, label %18
    i32 816316416, label %20
    i32 816381952, label %22
  ], !dbg !10807

10:                                               ; preds = %1
  %11 = call i32 @CCM_GetRootMux(%struct.CCM_Type* noundef inttoptr (i32 808976384 to %struct.CCM_Type*), i32 noundef 809021312) #10, !dbg !10808
  store i32 %11, i32* %4, align 4, !dbg !10810
  call void @CCM_GetRootDivider(%struct.CCM_Type* noundef inttoptr (i32 808976384 to %struct.CCM_Type*), i32 noundef 809021312, i32* noundef %6, i32* noundef %7) #10, !dbg !10811
  br label %25, !dbg !10812

12:                                               ; preds = %1
  %13 = call i32 @CCM_GetRootMux(%struct.CCM_Type* noundef inttoptr (i32 808976384 to %struct.CCM_Type*), i32 noundef 809021440) #10, !dbg !10813
  store i32 %13, i32* %4, align 4, !dbg !10814
  call void @CCM_GetRootDivider(%struct.CCM_Type* noundef inttoptr (i32 808976384 to %struct.CCM_Type*), i32 noundef 809021440, i32* noundef %6, i32* noundef %7) #10, !dbg !10815
  br label %25, !dbg !10816

14:                                               ; preds = %1
  %15 = call i32 @CCM_GetRootMux(%struct.CCM_Type* noundef inttoptr (i32 808976384 to %struct.CCM_Type*), i32 noundef 809021568) #10, !dbg !10817
  store i32 %15, i32* %4, align 4, !dbg !10818
  call void @CCM_GetRootDivider(%struct.CCM_Type* noundef inttoptr (i32 808976384 to %struct.CCM_Type*), i32 noundef 809021568, i32* noundef %6, i32* noundef %7) #10, !dbg !10819
  br label %25, !dbg !10820

16:                                               ; preds = %1
  %17 = call i32 @CCM_GetRootMux(%struct.CCM_Type* noundef inttoptr (i32 808976384 to %struct.CCM_Type*), i32 noundef 809021696) #10, !dbg !10821
  store i32 %17, i32* %4, align 4, !dbg !10822
  call void @CCM_GetRootDivider(%struct.CCM_Type* noundef inttoptr (i32 808976384 to %struct.CCM_Type*), i32 noundef 809021696, i32* noundef %6, i32* noundef %7) #10, !dbg !10823
  br label %25, !dbg !10824

18:                                               ; preds = %1
  %19 = call i32 @CCM_GetRootMux(%struct.CCM_Type* noundef inttoptr (i32 808976384 to %struct.CCM_Type*), i32 noundef 809021824) #10, !dbg !10825
  store i32 %19, i32* %4, align 4, !dbg !10826
  call void @CCM_GetRootDivider(%struct.CCM_Type* noundef inttoptr (i32 808976384 to %struct.CCM_Type*), i32 noundef 809021824, i32* noundef %6, i32* noundef %7) #10, !dbg !10827
  br label %25, !dbg !10828

20:                                               ; preds = %1
  %21 = call i32 @CCM_GetRootMux(%struct.CCM_Type* noundef inttoptr (i32 808976384 to %struct.CCM_Type*), i32 noundef 809021952) #10, !dbg !10829
  store i32 %21, i32* %4, align 4, !dbg !10830
  call void @CCM_GetRootDivider(%struct.CCM_Type* noundef inttoptr (i32 808976384 to %struct.CCM_Type*), i32 noundef 809021952, i32* noundef %6, i32* noundef %7) #10, !dbg !10831
  br label %25, !dbg !10832

22:                                               ; preds = %1
  %23 = call i32 @CCM_GetRootMux(%struct.CCM_Type* noundef inttoptr (i32 808976384 to %struct.CCM_Type*), i32 noundef 809022080) #10, !dbg !10833
  store i32 %23, i32* %4, align 4, !dbg !10834
  call void @CCM_GetRootDivider(%struct.CCM_Type* noundef inttoptr (i32 808976384 to %struct.CCM_Type*), i32 noundef 809022080, i32* noundef %6, i32* noundef %7) #10, !dbg !10835
  br label %25, !dbg !10836

24:                                               ; preds = %1
  store i32 0, i32* %2, align 4, !dbg !10837
  br label %42, !dbg !10837

25:                                               ; preds = %22, %20, %18, %16, %14, %12, %10
  %26 = load i32, i32* %4, align 4, !dbg !10838
  switch i32 %26, label %33 [
    i32 0, label %27
    i32 1, label %28
    i32 4, label %31
  ], !dbg !10839

27:                                               ; preds = %25
  store i32 24000000, i32* %5, align 4, !dbg !10840
  br label %34, !dbg !10842

28:                                               ; preds = %25
  %29 = call i32 @CCM_ANALOG_GetSysPllFreq(%struct.CCM_ANALOG_Type* noundef inttoptr (i32 808845312 to %struct.CCM_ANALOG_Type*)) #10, !dbg !10843
  %30 = lshr i32 %29, 1, !dbg !10844
  store i32 %30, i32* %5, align 4, !dbg !10845
  br label %34, !dbg !10846

31:                                               ; preds = %25
  %32 = call i32 @CCM_ANALOG_GetSysPllFreq(%struct.CCM_ANALOG_Type* noundef inttoptr (i32 808845312 to %struct.CCM_ANALOG_Type*)) #10, !dbg !10847
  store i32 %32, i32* %5, align 4, !dbg !10848
  br label %34, !dbg !10849

33:                                               ; preds = %25
  store i32 0, i32* %2, align 4, !dbg !10850
  br label %42, !dbg !10850

34:                                               ; preds = %31, %28, %27
  %35 = load i32, i32* %5, align 4, !dbg !10851
  %36 = load i32, i32* %6, align 4, !dbg !10852
  %37 = add i32 %36, 1, !dbg !10853
  %38 = udiv i32 %35, %37, !dbg !10854
  %39 = load i32, i32* %7, align 4, !dbg !10855
  %40 = add i32 %39, 1, !dbg !10856
  %41 = udiv i32 %38, %40, !dbg !10857
  store i32 %41, i32* %2, align 4, !dbg !10858
  br label %42, !dbg !10858

42:                                               ; preds = %34, %33, %24
  %43 = load i32, i32* %2, align 4, !dbg !10859
  ret i32 %43, !dbg !10859
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_device_state_init() #1 !dbg !10860 {
  %1 = alloca %struct.device.71*, align 4
  call void @llvm.dbg.declare(metadata %struct.device.71** %1, metadata !10862, metadata !DIExpression()), !dbg !10878
  store %struct.device.71* getelementptr inbounds ([0 x %struct.device.71], [0 x %struct.device.71]* @__device_start, i32 0, i32 0), %struct.device.71** %1, align 4, !dbg !10878
  br label %2, !dbg !10879

2:                                                ; preds = %5, %0
  %3 = load %struct.device.71*, %struct.device.71** %1, align 4, !dbg !10880
  %4 = icmp ult %struct.device.71* %3, getelementptr inbounds ([0 x %struct.device.71], [0 x %struct.device.71]* @__device_end, i32 0, i32 0), !dbg !10881
  br i1 %4, label %5, label %10, !dbg !10879

5:                                                ; preds = %2
  %6 = load %struct.device.71*, %struct.device.71** %1, align 4, !dbg !10882
  %7 = bitcast %struct.device.71* %6 to i8*, !dbg !10882
  call void @z_object_init(i8* noundef %7) #10, !dbg !10884
  %8 = load %struct.device.71*, %struct.device.71** %1, align 4, !dbg !10885
  %9 = getelementptr inbounds %struct.device.71, %struct.device.71* %8, i32 1, !dbg !10885
  store %struct.device.71* %9, %struct.device.71** %1, align 4, !dbg !10885
  br label %2, !dbg !10879, !llvm.loop !10886

10:                                               ; preds = %2
  ret void, !dbg !10888
}

; Function Attrs: noinline nounwind optnone
define internal void @z_object_init(i8* noundef %0) #1 !dbg !10889 {
  %2 = alloca i8*, align 4
  store i8* %0, i8** %2, align 4
  call void @llvm.dbg.declare(metadata i8** %2, metadata !10890, metadata !DIExpression()), !dbg !10891
  %3 = load i8*, i8** %2, align 4, !dbg !10892
  ret void, !dbg !10893
}

; Function Attrs: noinline nounwind optnone
define dso_local %struct.device.71* @z_impl_device_get_binding(i8* noundef %0) #1 !dbg !10894 {
  %2 = alloca %struct.device.71*, align 4
  %3 = alloca i8*, align 4
  %4 = alloca %struct.device.71*, align 4
  store i8* %0, i8** %3, align 4
  call void @llvm.dbg.declare(metadata i8** %3, metadata !10897, metadata !DIExpression()), !dbg !10898
  call void @llvm.dbg.declare(metadata %struct.device.71** %4, metadata !10899, metadata !DIExpression()), !dbg !10900
  %5 = load i8*, i8** %3, align 4, !dbg !10901
  %6 = icmp eq i8* %5, null, !dbg !10903
  br i1 %6, label %13, label %7, !dbg !10904

7:                                                ; preds = %1
  %8 = load i8*, i8** %3, align 4, !dbg !10905
  %9 = getelementptr inbounds i8, i8* %8, i32 0, !dbg !10905
  %10 = load i8, i8* %9, align 1, !dbg !10905
  %11 = zext i8 %10 to i32, !dbg !10905
  %12 = icmp eq i32 %11, 0, !dbg !10906
  br i1 %12, label %13, label %14, !dbg !10907

13:                                               ; preds = %7, %1
  store %struct.device.71* null, %struct.device.71** %2, align 4, !dbg !10908
  br label %54, !dbg !10908

14:                                               ; preds = %7
  store %struct.device.71* getelementptr inbounds ([0 x %struct.device.71], [0 x %struct.device.71]* @__device_start, i32 0, i32 0), %struct.device.71** %4, align 4, !dbg !10910
  br label %15, !dbg !10912

15:                                               ; preds = %30, %14
  %16 = load %struct.device.71*, %struct.device.71** %4, align 4, !dbg !10913
  %17 = icmp ne %struct.device.71* %16, getelementptr inbounds ([0 x %struct.device.71], [0 x %struct.device.71]* @__device_end, i32 0, i32 0), !dbg !10915
  br i1 %17, label %18, label %33, !dbg !10916

18:                                               ; preds = %15
  %19 = load %struct.device.71*, %struct.device.71** %4, align 4, !dbg !10917
  %20 = call zeroext i1 @z_device_is_ready(%struct.device.71* noundef %19) #10, !dbg !10920
  br i1 %20, label %21, label %29, !dbg !10921

21:                                               ; preds = %18
  %22 = load %struct.device.71*, %struct.device.71** %4, align 4, !dbg !10922
  %23 = getelementptr inbounds %struct.device.71, %struct.device.71* %22, i32 0, i32 0, !dbg !10923
  %24 = load i8*, i8** %23, align 4, !dbg !10923
  %25 = load i8*, i8** %3, align 4, !dbg !10924
  %26 = icmp eq i8* %24, %25, !dbg !10925
  br i1 %26, label %27, label %29, !dbg !10926

27:                                               ; preds = %21
  %28 = load %struct.device.71*, %struct.device.71** %4, align 4, !dbg !10927
  store %struct.device.71* %28, %struct.device.71** %2, align 4, !dbg !10929
  br label %54, !dbg !10929

29:                                               ; preds = %21, %18
  br label %30, !dbg !10930

30:                                               ; preds = %29
  %31 = load %struct.device.71*, %struct.device.71** %4, align 4, !dbg !10931
  %32 = getelementptr inbounds %struct.device.71, %struct.device.71* %31, i32 1, !dbg !10931
  store %struct.device.71* %32, %struct.device.71** %4, align 4, !dbg !10931
  br label %15, !dbg !10932, !llvm.loop !10933

33:                                               ; preds = %15
  store %struct.device.71* getelementptr inbounds ([0 x %struct.device.71], [0 x %struct.device.71]* @__device_start, i32 0, i32 0), %struct.device.71** %4, align 4, !dbg !10935
  br label %34, !dbg !10937

34:                                               ; preds = %50, %33
  %35 = load %struct.device.71*, %struct.device.71** %4, align 4, !dbg !10938
  %36 = icmp ne %struct.device.71* %35, getelementptr inbounds ([0 x %struct.device.71], [0 x %struct.device.71]* @__device_end, i32 0, i32 0), !dbg !10940
  br i1 %36, label %37, label %53, !dbg !10941

37:                                               ; preds = %34
  %38 = load %struct.device.71*, %struct.device.71** %4, align 4, !dbg !10942
  %39 = call zeroext i1 @z_device_is_ready(%struct.device.71* noundef %38) #10, !dbg !10945
  br i1 %39, label %40, label %49, !dbg !10946

40:                                               ; preds = %37
  %41 = load i8*, i8** %3, align 4, !dbg !10947
  %42 = load %struct.device.71*, %struct.device.71** %4, align 4, !dbg !10948
  %43 = getelementptr inbounds %struct.device.71, %struct.device.71* %42, i32 0, i32 0, !dbg !10949
  %44 = load i8*, i8** %43, align 4, !dbg !10949
  %45 = call i32 @strcmp(i8* noundef %41, i8* noundef %44) #10, !dbg !10950
  %46 = icmp eq i32 %45, 0, !dbg !10951
  br i1 %46, label %47, label %49, !dbg !10952

47:                                               ; preds = %40
  %48 = load %struct.device.71*, %struct.device.71** %4, align 4, !dbg !10953
  store %struct.device.71* %48, %struct.device.71** %2, align 4, !dbg !10955
  br label %54, !dbg !10955

49:                                               ; preds = %40, %37
  br label %50, !dbg !10956

50:                                               ; preds = %49
  %51 = load %struct.device.71*, %struct.device.71** %4, align 4, !dbg !10957
  %52 = getelementptr inbounds %struct.device.71, %struct.device.71* %51, i32 1, !dbg !10957
  store %struct.device.71* %52, %struct.device.71** %4, align 4, !dbg !10957
  br label %34, !dbg !10958, !llvm.loop !10959

53:                                               ; preds = %34
  store %struct.device.71* null, %struct.device.71** %2, align 4, !dbg !10961
  br label %54, !dbg !10961

54:                                               ; preds = %53, %47, %27, %13
  %55 = load %struct.device.71*, %struct.device.71** %2, align 4, !dbg !10962
  ret %struct.device.71* %55, !dbg !10962
}

; Function Attrs: noinline nounwind optnone
define dso_local zeroext i1 @z_device_is_ready(%struct.device.71* noundef %0) #1 !dbg !10963 {
  %2 = alloca i1, align 1
  %3 = alloca %struct.device.71*, align 4
  store %struct.device.71* %0, %struct.device.71** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.device.71** %3, metadata !10966, metadata !DIExpression()), !dbg !10967
  %4 = load %struct.device.71*, %struct.device.71** %3, align 4, !dbg !10968
  %5 = icmp eq %struct.device.71* %4, null, !dbg !10970
  br i1 %5, label %6, label %7, !dbg !10971

6:                                                ; preds = %1
  store i1 false, i1* %2, align 1, !dbg !10972
  br label %25, !dbg !10972

7:                                                ; preds = %1
  %8 = load %struct.device.71*, %struct.device.71** %3, align 4, !dbg !10974
  %9 = getelementptr inbounds %struct.device.71, %struct.device.71* %8, i32 0, i32 3, !dbg !10975
  %10 = load %struct.device_state.293*, %struct.device_state.293** %9, align 4, !dbg !10975
  %11 = getelementptr inbounds %struct.device_state.293, %struct.device_state.293* %10, i32 0, i32 1, !dbg !10976
  %12 = load i8, i8* %11, align 1, !dbg !10976
  %13 = and i8 %12, 1, !dbg !10976
  %14 = trunc i8 %13 to i1, !dbg !10976
  br i1 %14, label %15, label %23, !dbg !10977

15:                                               ; preds = %7
  %16 = load %struct.device.71*, %struct.device.71** %3, align 4, !dbg !10978
  %17 = getelementptr inbounds %struct.device.71, %struct.device.71* %16, i32 0, i32 3, !dbg !10979
  %18 = load %struct.device_state.293*, %struct.device_state.293** %17, align 4, !dbg !10979
  %19 = getelementptr inbounds %struct.device_state.293, %struct.device_state.293* %18, i32 0, i32 0, !dbg !10980
  %20 = load i8, i8* %19, align 1, !dbg !10980
  %21 = zext i8 %20 to i32, !dbg !10978
  %22 = icmp eq i32 %21, 0, !dbg !10981
  br label %23

23:                                               ; preds = %15, %7
  %24 = phi i1 [ false, %7 ], [ %22, %15 ], !dbg !10982
  store i1 %24, i1* %2, align 1, !dbg !10983
  br label %25, !dbg !10983

25:                                               ; preds = %23, %6
  %26 = load i1, i1* %2, align 1, !dbg !10984
  ret i1 %26, !dbg !10984
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @z_device_get_all_static(%struct.device.71** noundef %0) #1 !dbg !10985 {
  %2 = alloca %struct.device.71**, align 4
  store %struct.device.71** %0, %struct.device.71*** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.device.71*** %2, metadata !10989, metadata !DIExpression()), !dbg !10990
  %3 = load %struct.device.71**, %struct.device.71*** %2, align 4, !dbg !10991
  store %struct.device.71* getelementptr inbounds ([0 x %struct.device.71], [0 x %struct.device.71]* @__device_start, i32 0, i32 0), %struct.device.71** %3, align 4, !dbg !10992
  ret i32 sdiv exact (i32 sub (i32 ptrtoint ([0 x %struct.device.71]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device.71]* @__device_start to i32)), i32 24), !dbg !10993
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @device_required_foreach(%struct.device.71* noundef %0, i32 (%struct.device.71*, i8*)* noundef %1, i8* noundef %2) #1 !dbg !10994 {
  %4 = alloca %struct.device.71*, align 4
  %5 = alloca i32 (%struct.device.71*, i8*)*, align 4
  %6 = alloca i8*, align 4
  %7 = alloca i32, align 4
  %8 = alloca i16*, align 4
  store %struct.device.71* %0, %struct.device.71** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.device.71** %4, metadata !11001, metadata !DIExpression()), !dbg !11002
  store i32 (%struct.device.71*, i8*)* %1, i32 (%struct.device.71*, i8*)** %5, align 4
  call void @llvm.dbg.declare(metadata i32 (%struct.device.71*, i8*)** %5, metadata !11003, metadata !DIExpression()), !dbg !11004
  store i8* %2, i8** %6, align 4
  call void @llvm.dbg.declare(metadata i8** %6, metadata !11005, metadata !DIExpression()), !dbg !11006
  call void @llvm.dbg.declare(metadata i32* %7, metadata !11007, metadata !DIExpression()), !dbg !11008
  store i32 0, i32* %7, align 4, !dbg !11008
  call void @llvm.dbg.declare(metadata i16** %8, metadata !11009, metadata !DIExpression()), !dbg !11010
  %9 = load %struct.device.71*, %struct.device.71** %4, align 4, !dbg !11011
  %10 = call i16* @device_required_handles_get(%struct.device.71* noundef %9, i32* noundef %7) #10, !dbg !11012
  store i16* %10, i16** %8, align 4, !dbg !11010
  %11 = load i16*, i16** %8, align 4, !dbg !11013
  %12 = load i32, i32* %7, align 4, !dbg !11014
  %13 = load i32 (%struct.device.71*, i8*)*, i32 (%struct.device.71*, i8*)** %5, align 4, !dbg !11015
  %14 = load i8*, i8** %6, align 4, !dbg !11016
  %15 = call i32 @device_visitor(i16* noundef %11, i32 noundef %12, i32 (%struct.device.71*, i8*)* noundef %13, i8* noundef %14) #10, !dbg !11017
  ret i32 %15, !dbg !11018
}

; Function Attrs: noinline nounwind optnone
define internal i16* @device_required_handles_get(%struct.device.71* noundef %0, i32* noundef %1) #1 !dbg !11019 {
  %3 = alloca %struct.device.71*, align 4
  %4 = alloca i32*, align 4
  %5 = alloca i16*, align 4
  %6 = alloca i32, align 4
  store %struct.device.71* %0, %struct.device.71** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.device.71** %3, metadata !11022, metadata !DIExpression()), !dbg !11023
  store i32* %1, i32** %4, align 4
  call void @llvm.dbg.declare(metadata i32** %4, metadata !11024, metadata !DIExpression()), !dbg !11025
  call void @llvm.dbg.declare(metadata i16** %5, metadata !11026, metadata !DIExpression()), !dbg !11027
  %7 = load %struct.device.71*, %struct.device.71** %3, align 4, !dbg !11028
  %8 = getelementptr inbounds %struct.device.71, %struct.device.71* %7, i32 0, i32 5, !dbg !11029
  %9 = load i16*, i16** %8, align 4, !dbg !11029
  store i16* %9, i16** %5, align 4, !dbg !11027
  %10 = load i16*, i16** %5, align 4, !dbg !11030
  %11 = icmp ne i16* %10, null, !dbg !11032
  br i1 %11, label %12, label %35, !dbg !11033

12:                                               ; preds = %2
  call void @llvm.dbg.declare(metadata i32* %6, metadata !11034, metadata !DIExpression()), !dbg !11036
  store i32 0, i32* %6, align 4, !dbg !11036
  br label %13, !dbg !11037

13:                                               ; preds = %29, %12
  %14 = load i16*, i16** %5, align 4, !dbg !11038
  %15 = load i32, i32* %6, align 4, !dbg !11039
  %16 = getelementptr inbounds i16, i16* %14, i32 %15, !dbg !11038
  %17 = load i16, i16* %16, align 2, !dbg !11038
  %18 = sext i16 %17 to i32, !dbg !11038
  %19 = icmp ne i32 %18, 32767, !dbg !11040
  br i1 %19, label %20, label %27, !dbg !11041

20:                                               ; preds = %13
  %21 = load i16*, i16** %5, align 4, !dbg !11042
  %22 = load i32, i32* %6, align 4, !dbg !11043
  %23 = getelementptr inbounds i16, i16* %21, i32 %22, !dbg !11042
  %24 = load i16, i16* %23, align 2, !dbg !11042
  %25 = sext i16 %24 to i32, !dbg !11042
  %26 = icmp ne i32 %25, -32768, !dbg !11044
  br label %27

27:                                               ; preds = %20, %13
  %28 = phi i1 [ false, %13 ], [ %26, %20 ], !dbg !11045
  br i1 %28, label %29, label %32, !dbg !11037

29:                                               ; preds = %27
  %30 = load i32, i32* %6, align 4, !dbg !11046
  %31 = add i32 %30, 1, !dbg !11046
  store i32 %31, i32* %6, align 4, !dbg !11046
  br label %13, !dbg !11037, !llvm.loop !11048

32:                                               ; preds = %27
  %33 = load i32, i32* %6, align 4, !dbg !11050
  %34 = load i32*, i32** %4, align 4, !dbg !11051
  store i32 %33, i32* %34, align 4, !dbg !11052
  br label %35, !dbg !11053

35:                                               ; preds = %32, %2
  %36 = load i16*, i16** %5, align 4, !dbg !11054
  ret i16* %36, !dbg !11055
}

; Function Attrs: noinline nounwind optnone
define internal i32 @device_visitor(i16* noundef %0, i32 noundef %1, i32 (%struct.device.71*, i8*)* noundef %2, i8* noundef %3) #1 !dbg !11056 {
  %5 = alloca i32, align 4
  %6 = alloca i16*, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32 (%struct.device.71*, i8*)*, align 4
  %9 = alloca i8*, align 4
  %10 = alloca i32, align 4
  %11 = alloca i16, align 2
  %12 = alloca %struct.device.71*, align 4
  %13 = alloca i32, align 4
  store i16* %0, i16** %6, align 4
  call void @llvm.dbg.declare(metadata i16** %6, metadata !11059, metadata !DIExpression()), !dbg !11060
  store i32 %1, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !11061, metadata !DIExpression()), !dbg !11062
  store i32 (%struct.device.71*, i8*)* %2, i32 (%struct.device.71*, i8*)** %8, align 4
  call void @llvm.dbg.declare(metadata i32 (%struct.device.71*, i8*)** %8, metadata !11063, metadata !DIExpression()), !dbg !11064
  store i8* %3, i8** %9, align 4
  call void @llvm.dbg.declare(metadata i8** %9, metadata !11065, metadata !DIExpression()), !dbg !11066
  call void @llvm.dbg.declare(metadata i32* %10, metadata !11067, metadata !DIExpression()), !dbg !11069
  store i32 0, i32* %10, align 4, !dbg !11069
  br label %14, !dbg !11070

14:                                               ; preds = %34, %4
  %15 = load i32, i32* %10, align 4, !dbg !11071
  %16 = load i32, i32* %7, align 4, !dbg !11073
  %17 = icmp ult i32 %15, %16, !dbg !11074
  br i1 %17, label %18, label %37, !dbg !11075

18:                                               ; preds = %14
  call void @llvm.dbg.declare(metadata i16* %11, metadata !11076, metadata !DIExpression()), !dbg !11078
  %19 = load i16*, i16** %6, align 4, !dbg !11079
  %20 = load i32, i32* %10, align 4, !dbg !11080
  %21 = getelementptr inbounds i16, i16* %19, i32 %20, !dbg !11079
  %22 = load i16, i16* %21, align 2, !dbg !11079
  store i16 %22, i16* %11, align 2, !dbg !11078
  call void @llvm.dbg.declare(metadata %struct.device.71** %12, metadata !11081, metadata !DIExpression()), !dbg !11082
  %23 = load i16, i16* %11, align 2, !dbg !11083
  %24 = call %struct.device.71* @device_from_handle(i16 noundef signext %23) #10, !dbg !11084
  store %struct.device.71* %24, %struct.device.71** %12, align 4, !dbg !11082
  call void @llvm.dbg.declare(metadata i32* %13, metadata !11085, metadata !DIExpression()), !dbg !11086
  %25 = load i32 (%struct.device.71*, i8*)*, i32 (%struct.device.71*, i8*)** %8, align 4, !dbg !11087
  %26 = load %struct.device.71*, %struct.device.71** %12, align 4, !dbg !11088
  %27 = load i8*, i8** %9, align 4, !dbg !11089
  %28 = call i32 %25(%struct.device.71* noundef %26, i8* noundef %27) #10, !dbg !11087
  store i32 %28, i32* %13, align 4, !dbg !11086
  %29 = load i32, i32* %13, align 4, !dbg !11090
  %30 = icmp slt i32 %29, 0, !dbg !11092
  br i1 %30, label %31, label %33, !dbg !11093

31:                                               ; preds = %18
  %32 = load i32, i32* %13, align 4, !dbg !11094
  store i32 %32, i32* %5, align 4, !dbg !11096
  br label %39, !dbg !11096

33:                                               ; preds = %18
  br label %34, !dbg !11097

34:                                               ; preds = %33
  %35 = load i32, i32* %10, align 4, !dbg !11098
  %36 = add i32 %35, 1, !dbg !11098
  store i32 %36, i32* %10, align 4, !dbg !11098
  br label %14, !dbg !11099, !llvm.loop !11100

37:                                               ; preds = %14
  %38 = load i32, i32* %7, align 4, !dbg !11102
  store i32 %38, i32* %5, align 4, !dbg !11103
  br label %39, !dbg !11103

39:                                               ; preds = %37, %31
  %40 = load i32, i32* %5, align 4, !dbg !11104
  ret i32 %40, !dbg !11104
}

; Function Attrs: noinline nounwind optnone
define internal %struct.device.71* @device_from_handle(i16 noundef signext %0) #1 !dbg !11105 {
  %2 = alloca i16, align 2
  %3 = alloca %struct.device.71*, align 4
  %4 = alloca i32, align 4
  store i16 %0, i16* %2, align 2
  call void @llvm.dbg.declare(metadata i16* %2, metadata !11108, metadata !DIExpression()), !dbg !11109
  call void @llvm.dbg.declare(metadata %struct.device.71** %3, metadata !11110, metadata !DIExpression()), !dbg !11111
  store %struct.device.71* null, %struct.device.71** %3, align 4, !dbg !11111
  call void @llvm.dbg.declare(metadata i32* %4, metadata !11112, metadata !DIExpression()), !dbg !11113
  store i32 sdiv exact (i32 sub (i32 ptrtoint ([0 x %struct.device.71]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device.71]* @__device_start to i32)), i32 24), i32* %4, align 4, !dbg !11113
  %5 = load i16, i16* %2, align 2, !dbg !11114
  %6 = sext i16 %5 to i32, !dbg !11114
  %7 = icmp sgt i32 %6, 0, !dbg !11116
  br i1 %7, label %8, label %18, !dbg !11117

8:                                                ; preds = %1
  %9 = load i16, i16* %2, align 2, !dbg !11118
  %10 = sext i16 %9 to i32, !dbg !11119
  %11 = load i32, i32* %4, align 4, !dbg !11120
  %12 = icmp ule i32 %10, %11, !dbg !11121
  br i1 %12, label %13, label %18, !dbg !11122

13:                                               ; preds = %8
  %14 = load i16, i16* %2, align 2, !dbg !11123
  %15 = sext i16 %14 to i32, !dbg !11123
  %16 = sub nsw i32 %15, 1, !dbg !11125
  %17 = getelementptr inbounds [0 x %struct.device.71], [0 x %struct.device.71]* @__device_start, i32 0, i32 %16, !dbg !11126
  store %struct.device.71* %17, %struct.device.71** %3, align 4, !dbg !11127
  br label %18, !dbg !11128

18:                                               ; preds = %13, %8, %1
  %19 = load %struct.device.71*, %struct.device.71** %3, align 4, !dbg !11129
  ret %struct.device.71* %19, !dbg !11130
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @device_supported_foreach(%struct.device.71* noundef %0, i32 (%struct.device.71*, i8*)* noundef %1, i8* noundef %2) #1 !dbg !11131 {
  %4 = alloca %struct.device.71*, align 4
  %5 = alloca i32 (%struct.device.71*, i8*)*, align 4
  %6 = alloca i8*, align 4
  %7 = alloca i32, align 4
  %8 = alloca i16*, align 4
  store %struct.device.71* %0, %struct.device.71** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.device.71** %4, metadata !11132, metadata !DIExpression()), !dbg !11133
  store i32 (%struct.device.71*, i8*)* %1, i32 (%struct.device.71*, i8*)** %5, align 4
  call void @llvm.dbg.declare(metadata i32 (%struct.device.71*, i8*)** %5, metadata !11134, metadata !DIExpression()), !dbg !11135
  store i8* %2, i8** %6, align 4
  call void @llvm.dbg.declare(metadata i8** %6, metadata !11136, metadata !DIExpression()), !dbg !11137
  call void @llvm.dbg.declare(metadata i32* %7, metadata !11138, metadata !DIExpression()), !dbg !11139
  store i32 0, i32* %7, align 4, !dbg !11139
  call void @llvm.dbg.declare(metadata i16** %8, metadata !11140, metadata !DIExpression()), !dbg !11141
  %9 = load %struct.device.71*, %struct.device.71** %4, align 4, !dbg !11142
  %10 = call i16* @device_supported_handles_get(%struct.device.71* noundef %9, i32* noundef %7) #10, !dbg !11143
  store i16* %10, i16** %8, align 4, !dbg !11141
  %11 = load i16*, i16** %8, align 4, !dbg !11144
  %12 = load i32, i32* %7, align 4, !dbg !11145
  %13 = load i32 (%struct.device.71*, i8*)*, i32 (%struct.device.71*, i8*)** %5, align 4, !dbg !11146
  %14 = load i8*, i8** %6, align 4, !dbg !11147
  %15 = call i32 @device_visitor(i16* noundef %11, i32 noundef %12, i32 (%struct.device.71*, i8*)* noundef %13, i8* noundef %14) #10, !dbg !11148
  ret i32 %15, !dbg !11149
}

; Function Attrs: noinline nounwind optnone
define internal i16* @device_supported_handles_get(%struct.device.71* noundef %0, i32* noundef %1) #1 !dbg !11150 {
  %3 = alloca %struct.device.71*, align 4
  %4 = alloca i32*, align 4
  %5 = alloca i16*, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  store %struct.device.71* %0, %struct.device.71** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.device.71** %3, metadata !11151, metadata !DIExpression()), !dbg !11152
  store i32* %1, i32** %4, align 4
  call void @llvm.dbg.declare(metadata i32** %4, metadata !11153, metadata !DIExpression()), !dbg !11154
  call void @llvm.dbg.declare(metadata i16** %5, metadata !11155, metadata !DIExpression()), !dbg !11156
  %8 = load %struct.device.71*, %struct.device.71** %3, align 4, !dbg !11157
  %9 = getelementptr inbounds %struct.device.71, %struct.device.71* %8, i32 0, i32 5, !dbg !11158
  %10 = load i16*, i16** %9, align 4, !dbg !11158
  store i16* %10, i16** %5, align 4, !dbg !11156
  call void @llvm.dbg.declare(metadata i32* %6, metadata !11159, metadata !DIExpression()), !dbg !11160
  store i32 0, i32* %6, align 4, !dbg !11160
  call void @llvm.dbg.declare(metadata i32* %7, metadata !11161, metadata !DIExpression()), !dbg !11162
  store i32 0, i32* %7, align 4, !dbg !11162
  %11 = load i16*, i16** %5, align 4, !dbg !11163
  %12 = icmp ne i16* %11, null, !dbg !11165
  br i1 %12, label %13, label %42, !dbg !11166

13:                                               ; preds = %2
  br label %14, !dbg !11167

14:                                               ; preds = %25, %13
  %15 = load i32, i32* %6, align 4, !dbg !11169
  %16 = icmp ne i32 %15, 2, !dbg !11170
  br i1 %16, label %17, label %28, !dbg !11167

17:                                               ; preds = %14
  %18 = load i16*, i16** %5, align 4, !dbg !11171
  %19 = load i16, i16* %18, align 2, !dbg !11174
  %20 = sext i16 %19 to i32, !dbg !11174
  %21 = icmp eq i32 %20, -32768, !dbg !11175
  br i1 %21, label %22, label %25, !dbg !11176

22:                                               ; preds = %17
  %23 = load i32, i32* %6, align 4, !dbg !11177
  %24 = add i32 %23, 1, !dbg !11177
  store i32 %24, i32* %6, align 4, !dbg !11177
  br label %25, !dbg !11179

25:                                               ; preds = %22, %17
  %26 = load i16*, i16** %5, align 4, !dbg !11180
  %27 = getelementptr inbounds i16, i16* %26, i32 1, !dbg !11180
  store i16* %27, i16** %5, align 4, !dbg !11180
  br label %14, !dbg !11167, !llvm.loop !11181

28:                                               ; preds = %14
  br label %29, !dbg !11183

29:                                               ; preds = %36, %28
  %30 = load i16*, i16** %5, align 4, !dbg !11184
  %31 = load i32, i32* %7, align 4, !dbg !11185
  %32 = getelementptr inbounds i16, i16* %30, i32 %31, !dbg !11184
  %33 = load i16, i16* %32, align 2, !dbg !11184
  %34 = sext i16 %33 to i32, !dbg !11184
  %35 = icmp ne i32 %34, 32767, !dbg !11186
  br i1 %35, label %36, label %39, !dbg !11183

36:                                               ; preds = %29
  %37 = load i32, i32* %7, align 4, !dbg !11187
  %38 = add i32 %37, 1, !dbg !11187
  store i32 %38, i32* %7, align 4, !dbg !11187
  br label %29, !dbg !11183, !llvm.loop !11189

39:                                               ; preds = %29
  %40 = load i32, i32* %7, align 4, !dbg !11191
  %41 = load i32*, i32** %4, align 4, !dbg !11192
  store i32 %40, i32* %41, align 4, !dbg !11193
  br label %42, !dbg !11194

42:                                               ; preds = %39, %2
  %43 = load i16*, i16** %5, align 4, !dbg !11195
  ret i16* %43, !dbg !11196
}

; Function Attrs: noinline nounwind optnone
define dso_local i32* @z_impl_z_errno() #1 !dbg !11197 {
  %1 = load %struct.k_thread.180*, %struct.k_thread.180** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11200
  %2 = getelementptr inbounds %struct.k_thread.180, %struct.k_thread.180* %1, i32 0, i32 4, !dbg !11201
  ret i32* %2, !dbg !11202
}

; Function Attrs: noinline nounwind optnone
define dso_local void @coredump(i32 noundef %0, %struct.__esf* noundef %1, %struct.k_thread.60* noundef %2) #1 !dbg !11203 {
  %4 = alloca i32, align 4
  %5 = alloca %struct.__esf*, align 4
  %6 = alloca %struct.k_thread.60*, align 4
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !11344, metadata !DIExpression()), !dbg !11345
  store %struct.__esf* %1, %struct.__esf** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.__esf** %5, metadata !11346, metadata !DIExpression()), !dbg !11347
  store %struct.k_thread.60* %2, %struct.k_thread.60** %6, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.60** %6, metadata !11348, metadata !DIExpression()), !dbg !11349
  ret void, !dbg !11350
}

; Function Attrs: noinline nounwind optnone
define dso_local void @coredump_memory_dump(i32 noundef %0, i32 noundef %1) #1 !dbg !11351 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !11354, metadata !DIExpression()), !dbg !11355
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !11356, metadata !DIExpression()), !dbg !11357
  ret void, !dbg !11358
}

; Function Attrs: noinline nounwind optnone
define dso_local void @coredump_buffer_output(i8* noundef %0, i32 noundef %1) #1 !dbg !11359 {
  %3 = alloca i8*, align 4
  %4 = alloca i32, align 4
  store i8* %0, i8** %3, align 4
  call void @llvm.dbg.declare(metadata i8** %3, metadata !11362, metadata !DIExpression()), !dbg !11363
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !11364, metadata !DIExpression()), !dbg !11365
  ret void, !dbg !11366
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @coredump_query(i32 noundef %0, i8* noundef %1) #1 !dbg !11367 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !11370, metadata !DIExpression()), !dbg !11371
  store i8* %1, i8** %4, align 4
  call void @llvm.dbg.declare(metadata i8** %4, metadata !11372, metadata !DIExpression()), !dbg !11373
  ret i32 -134, !dbg !11374
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @coredump_cmd(i32 noundef %0, i8* noundef %1) #1 !dbg !11375 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !11378, metadata !DIExpression()), !dbg !11379
  store i8* %1, i8** %4, align 4
  call void @llvm.dbg.declare(metadata i8** %4, metadata !11380, metadata !DIExpression()), !dbg !11381
  ret i32 -134, !dbg !11382
}

; Function Attrs: noinline noreturn nounwind optnone
define weak dso_local void @arch_system_halt(i32 noundef %0) #5 !dbg !11383 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !11385, metadata !DIExpression()), !dbg !11386
  %5 = load i32, i32* %4, align 4, !dbg !11387
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11388, metadata !DIExpression()) #9, !dbg !11390
  call void @llvm.dbg.declare(metadata i32* %3, metadata !11392, metadata !DIExpression()) #9, !dbg !11393
  %6 = call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #9, !dbg !11394, !srcloc !11395
  %7 = extractvalue { i32, i32 } %6, 0, !dbg !11394
  %8 = extractvalue { i32, i32 } %6, 1, !dbg !11394
  store i32 %7, i32* %2, align 4, !dbg !11394
  store i32 %8, i32* %3, align 4, !dbg !11394
  %9 = load i32, i32* %2, align 4, !dbg !11396
  br label %10, !dbg !11397

10:                                               ; preds = %10, %1
  br label %10, !dbg !11398, !llvm.loop !11401
}

; Function Attrs: noinline nounwind optnone
define weak dso_local void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) #1 !dbg !11404 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.__esf*, align 4
  %5 = alloca i8, align 1
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i8*, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !11407, metadata !DIExpression()), !dbg !11408
  store %struct.__esf* %1, %struct.__esf** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.__esf** %4, metadata !11409, metadata !DIExpression()), !dbg !11410
  %9 = load %struct.__esf*, %struct.__esf** %4, align 4, !dbg !11411
  br label %10, !dbg !11412

10:                                               ; preds = %2
  br label %11, !dbg !11413

11:                                               ; preds = %10
  %12 = load i32, i32* %3, align 4, !dbg !11417
  call void @arch_system_halt(i32 noundef %12) #12, !dbg !11418
  unreachable, !dbg !11418
}

; Function Attrs: noinline noreturn nounwind optnone
define dso_local void @k_fatal_halt(i32 noundef %0) #5 !dbg !11419 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11420, metadata !DIExpression()), !dbg !11421
  %3 = load i32, i32* %2, align 4, !dbg !11422
  call void @arch_system_halt(i32 noundef %3) #12, !dbg !11423
  unreachable, !dbg !11423
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) #1 !dbg !11424 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.__esf*, align 4
  %5 = alloca %struct.__esf*, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca %struct.__esf*, align 4
  %10 = alloca i32, align 4
  %11 = alloca %struct.k_thread.60*, align 4
  %12 = alloca i8, align 1
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i8*, align 4
  %16 = alloca i8, align 1
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i8*, align 4
  %20 = alloca i8, align 1
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i8*, align 4
  store i32 %0, i32* %8, align 4
  call void @llvm.dbg.declare(metadata i32* %8, metadata !11425, metadata !DIExpression()), !dbg !11426
  store %struct.__esf* %1, %struct.__esf** %9, align 4
  call void @llvm.dbg.declare(metadata %struct.__esf** %9, metadata !11427, metadata !DIExpression()), !dbg !11428
  call void @llvm.dbg.declare(metadata i32* %10, metadata !11429, metadata !DIExpression()), !dbg !11430
  call void @llvm.dbg.declare(metadata i32* %6, metadata !11388, metadata !DIExpression()) #9, !dbg !11431
  call void @llvm.dbg.declare(metadata i32* %7, metadata !11392, metadata !DIExpression()) #9, !dbg !11433
  %24 = call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #9, !dbg !11434, !srcloc !11395
  %25 = extractvalue { i32, i32 } %24, 0, !dbg !11434
  %26 = extractvalue { i32, i32 } %24, 1, !dbg !11434
  store i32 %25, i32* %6, align 4, !dbg !11434
  store i32 %26, i32* %7, align 4, !dbg !11434
  %27 = load i32, i32* %6, align 4, !dbg !11435
  store i32 %27, i32* %10, align 4, !dbg !11430
  call void @llvm.dbg.declare(metadata %struct.k_thread.60** %11, metadata !11436, metadata !DIExpression()), !dbg !11437
  %28 = call %struct.k_thread.60* @k_current_get.58() #11, !dbg !11438
  store %struct.k_thread.60* %28, %struct.k_thread.60** %11, align 4, !dbg !11437
  br label %29, !dbg !11439

29:                                               ; preds = %2
  br label %30, !dbg !11440

30:                                               ; preds = %29
  %31 = load %struct.__esf*, %struct.__esf** %9, align 4, !dbg !11444
  %32 = icmp ne %struct.__esf* %31, null, !dbg !11446
  br i1 %32, label %33, label %46, !dbg !11447

33:                                               ; preds = %30
  %34 = load %struct.__esf*, %struct.__esf** %9, align 4, !dbg !11448
  store %struct.__esf* %34, %struct.__esf** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.__esf** %4, metadata !11449, metadata !DIExpression()), !dbg !11453
  %35 = load %struct.__esf*, %struct.__esf** %4, align 4, !dbg !11455
  %36 = getelementptr inbounds %struct.__esf, %struct.__esf* %35, i32 0, i32 0, !dbg !11456
  %37 = getelementptr inbounds %struct.__basic_sf, %struct.__basic_sf* %36, i32 0, i32 7, !dbg !11457
  %38 = load i32, i32* %37, align 4, !dbg !11457
  %39 = and i32 %38, 511, !dbg !11458
  %40 = icmp ne i32 %39, 0, !dbg !11459
  %41 = zext i1 %40 to i64, !dbg !11459
  %42 = select i1 %40, i32 1, i32 0, !dbg !11459
  br i1 %40, label %43, label %46, !dbg !11460

43:                                               ; preds = %33
  br label %44, !dbg !11461

44:                                               ; preds = %43
  br label %45, !dbg !11463

45:                                               ; preds = %44
  br label %46, !dbg !11467

46:                                               ; preds = %45, %33, %30
  br label %47, !dbg !11468

47:                                               ; preds = %46
  br label %48, !dbg !11469

48:                                               ; preds = %47
  %49 = load i32, i32* %8, align 4, !dbg !11473
  %50 = load %struct.__esf*, %struct.__esf** %9, align 4, !dbg !11474
  %51 = load %struct.k_thread.60*, %struct.k_thread.60** %11, align 4, !dbg !11475
  call void @coredump(i32 noundef %49, %struct.__esf* noundef %50, %struct.k_thread.60* noundef %51) #10, !dbg !11476
  %52 = load i32, i32* %8, align 4, !dbg !11477
  %53 = load %struct.__esf*, %struct.__esf** %9, align 4, !dbg !11478
  call void @k_sys_fatal_error_handler(i32 noundef %52, %struct.__esf* noundef %53) #10, !dbg !11479
  %54 = load %struct.__esf*, %struct.__esf** %9, align 4, !dbg !11480
  %55 = icmp ne %struct.__esf* %54, null, !dbg !11484
  br i1 %55, label %56, label %67, !dbg !11485

56:                                               ; preds = %48
  %57 = load %struct.__esf*, %struct.__esf** %9, align 4, !dbg !11486
  store %struct.__esf* %57, %struct.__esf** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.__esf** %5, metadata !11449, metadata !DIExpression()), !dbg !11487
  %58 = load %struct.__esf*, %struct.__esf** %5, align 4, !dbg !11489
  %59 = getelementptr inbounds %struct.__esf, %struct.__esf* %58, i32 0, i32 0, !dbg !11490
  %60 = getelementptr inbounds %struct.__basic_sf, %struct.__basic_sf* %59, i32 0, i32 7, !dbg !11491
  %61 = load i32, i32* %60, align 4, !dbg !11491
  %62 = and i32 %61, 511, !dbg !11492
  %63 = icmp ne i32 %62, 0, !dbg !11493
  %64 = zext i1 %63 to i64, !dbg !11493
  %65 = select i1 %63, i32 1, i32 0, !dbg !11493
  br i1 %63, label %66, label %67, !dbg !11494

66:                                               ; preds = %56
  br label %67, !dbg !11495

67:                                               ; preds = %66, %56, %48
  %68 = load i32, i32* %10, align 4, !dbg !11497
  store i32 %68, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !11498, metadata !DIExpression()) #9, !dbg !11500
  %69 = load i32, i32* %3, align 4, !dbg !11502
  call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %69) #9, !dbg !11503, !srcloc !11504
  %70 = load %struct.k_thread.60*, %struct.k_thread.60** %11, align 4, !dbg !11505
  call void @k_thread_abort.59(%struct.k_thread.60* noundef %70) #10, !dbg !11508
  ret void, !dbg !11509
}

; Function Attrs: noinline nounwind optnone readnone willreturn
define internal %struct.k_thread.60* @k_current_get.58() #6 !dbg !11510 {
  %1 = call %struct.k_thread.60* @z_current_get.60() #11, !dbg !11514
  ret %struct.k_thread.60* %1, !dbg !11515
}

; Function Attrs: noinline nounwind optnone
define internal void @k_thread_abort.59(%struct.k_thread.60* noundef %0) #1 !dbg !11516 {
  %2 = alloca %struct.k_thread.60*, align 4
  store %struct.k_thread.60* %0, %struct.k_thread.60** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.60** %2, metadata !11519, metadata !DIExpression()), !dbg !11520
  br label %3, !dbg !11521

3:                                                ; preds = %1
  call void asm sideeffect "", "~{memory}"() #9, !dbg !11522, !srcloc !11524
  br label %4, !dbg !11522

4:                                                ; preds = %3
  %5 = load %struct.k_thread.60*, %struct.k_thread.60** %2, align 4, !dbg !11525
  call void bitcast (void (%struct.k_thread.180*)* @z_impl_k_thread_abort to void (%struct.k_thread.60*)*)(%struct.k_thread.60* noundef %5) #10, !dbg !11526
  ret void, !dbg !11527
}

; Function Attrs: noinline nounwind optnone readnone willreturn
define internal %struct.k_thread.60* @z_current_get.60() #6 !dbg !11528 {
  br label %1, !dbg !11529

1:                                                ; preds = %0
  call void asm sideeffect "", "~{memory}"() #9, !dbg !11530, !srcloc !11532
  br label %2, !dbg !11530

2:                                                ; preds = %1
  %3 = call %struct.k_thread.60* bitcast (%struct.k_thread.180* ()* @z_impl_z_current_get to %struct.k_thread.60* ()*)() #10, !dbg !11533
  ret %struct.k_thread.60* %3, !dbg !11534
}

; Function Attrs: noinline nounwind optnone
define weak dso_local void @z_early_memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) #1 !dbg !11535 {
  %4 = alloca i8*, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store i8* %0, i8** %4, align 4
  call void @llvm.dbg.declare(metadata i8** %4, metadata !11538, metadata !DIExpression()), !dbg !11539
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !11540, metadata !DIExpression()), !dbg !11541
  store i32 %2, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !11542, metadata !DIExpression()), !dbg !11543
  %7 = load i8*, i8** %4, align 4, !dbg !11544
  %8 = load i32, i32* %5, align 4, !dbg !11545
  %9 = load i32, i32* %6, align 4, !dbg !11546
  %10 = call i8* @memset(i8* noundef %7, i32 noundef %8, i32 noundef %9) #10, !dbg !11547
  ret void, !dbg !11548
}

; Function Attrs: noinline nounwind optnone
define weak dso_local void @z_early_memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) #1 !dbg !11549 {
  %4 = alloca i8*, align 4
  %5 = alloca i8*, align 4
  %6 = alloca i32, align 4
  store i8* %0, i8** %4, align 4
  call void @llvm.dbg.declare(metadata i8** %4, metadata !11552, metadata !DIExpression()), !dbg !11553
  store i8* %1, i8** %5, align 4
  call void @llvm.dbg.declare(metadata i8** %5, metadata !11554, metadata !DIExpression()), !dbg !11555
  store i32 %2, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !11556, metadata !DIExpression()), !dbg !11557
  %7 = load i8*, i8** %4, align 4, !dbg !11558
  %8 = load i8*, i8** %5, align 4, !dbg !11559
  %9 = load i32, i32* %6, align 4, !dbg !11560
  %10 = call i8* @memcpy(i8* noundef %7, i8* noundef %8, i32 noundef %9) #10, !dbg !11561
  ret void, !dbg !11562
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_bss_zero() #1 !dbg !11563 {
  call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__bss_end to i32), i32 ptrtoint ([0 x i8]* @__bss_start to i32))) #10, !dbg !11564
  ret void, !dbg !11565
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_init_cpu(i32 noundef %0) #1 !dbg !11566 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11569, metadata !DIExpression()), !dbg !11570
  %3 = load i32, i32* %2, align 4, !dbg !11571
  call void @init_idle_thread(i32 noundef %3) #10, !dbg !11572
  %4 = load i32, i32* %2, align 4, !dbg !11573
  %5 = getelementptr inbounds [1 x %struct.k_thread.180], [1 x %struct.k_thread.180]* @z_idle_threads, i32 0, i32 %4, !dbg !11574
  %6 = load i32, i32* %2, align 4, !dbg !11575
  %7 = getelementptr inbounds [1 x %struct._cpu], [1 x %struct._cpu]* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0), i32 0, i32 %6, !dbg !11576
  %8 = getelementptr inbounds %struct._cpu, %struct._cpu* %7, i32 0, i32 3, !dbg !11577
  store %struct.k_thread.180* %5, %struct.k_thread.180** %8, align 4, !dbg !11578
  %9 = load i32, i32* %2, align 4, !dbg !11579
  %10 = trunc i32 %9 to i8, !dbg !11579
  %11 = load i32, i32* %2, align 4, !dbg !11580
  %12 = getelementptr inbounds [1 x %struct._cpu], [1 x %struct._cpu]* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0), i32 0, i32 %11, !dbg !11581
  %13 = getelementptr inbounds %struct._cpu, %struct._cpu* %12, i32 0, i32 5, !dbg !11582
  store i8 %10, i8* %13, align 4, !dbg !11583
  %14 = load i32, i32* %2, align 4, !dbg !11584
  %15 = getelementptr inbounds [1 x [2048 x %struct.z_thread_stack_element]], [1 x [2048 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 %14, !dbg !11585
  %16 = getelementptr inbounds [2048 x %struct.z_thread_stack_element], [2048 x %struct.z_thread_stack_element]* %15, i32 0, i32 0, !dbg !11585
  %17 = call i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef %16) #10, !dbg !11586
  %18 = getelementptr inbounds i8, i8* %17, i32 2048, !dbg !11587
  %19 = load i32, i32* %2, align 4, !dbg !11588
  %20 = getelementptr inbounds [1 x %struct._cpu], [1 x %struct._cpu]* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0), i32 0, i32 %19, !dbg !11589
  %21 = getelementptr inbounds %struct._cpu, %struct._cpu* %20, i32 0, i32 1, !dbg !11590
  store i8* %18, i8** %21, align 4, !dbg !11591
  ret void, !dbg !11592
}

; Function Attrs: noinline nounwind optnone
define internal void @init_idle_thread(i32 noundef %0) #1 !dbg !11593 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.k_thread.180*, align 4
  %4 = alloca %struct.z_thread_stack_element*, align 4
  %5 = alloca i8*, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11594, metadata !DIExpression()), !dbg !11595
  call void @llvm.dbg.declare(metadata %struct.k_thread.180** %3, metadata !11596, metadata !DIExpression()), !dbg !11597
  %6 = load i32, i32* %2, align 4, !dbg !11598
  %7 = getelementptr inbounds [1 x %struct.k_thread.180], [1 x %struct.k_thread.180]* @z_idle_threads, i32 0, i32 %6, !dbg !11599
  store %struct.k_thread.180* %7, %struct.k_thread.180** %3, align 4, !dbg !11597
  call void @llvm.dbg.declare(metadata %struct.z_thread_stack_element** %4, metadata !11600, metadata !DIExpression()), !dbg !11603
  %8 = load i32, i32* %2, align 4, !dbg !11604
  %9 = getelementptr inbounds [1 x [320 x %struct.z_thread_stack_element]], [1 x [320 x %struct.z_thread_stack_element]]* @z_idle_stacks, i32 0, i32 %8, !dbg !11605
  %10 = getelementptr inbounds [320 x %struct.z_thread_stack_element], [320 x %struct.z_thread_stack_element]* %9, i32 0, i32 0, !dbg !11605
  store %struct.z_thread_stack_element* %10, %struct.z_thread_stack_element** %4, align 4, !dbg !11603
  call void @llvm.dbg.declare(metadata i8** %5, metadata !11606, metadata !DIExpression()), !dbg !11607
  store i8* null, i8** %5, align 4, !dbg !11607
  %11 = load %struct.k_thread.180*, %struct.k_thread.180** %3, align 4, !dbg !11608
  %12 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %4, align 4, !dbg !11609
  %13 = load i32, i32* %2, align 4, !dbg !11610
  %14 = getelementptr inbounds [1 x %struct._cpu], [1 x %struct._cpu]* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0), i32 0, i32 %13, !dbg !11611
  %15 = bitcast %struct._cpu* %14 to i8*, !dbg !11612
  %16 = load i8*, i8** %5, align 4, !dbg !11613
  %17 = call i8* @z_setup_new_thread(%struct.k_thread.180* noundef %11, %struct.z_thread_stack_element* noundef %12, i32 noundef 320, void (i8*, i8*, i8*)* noundef @idle, i8* noundef %15, i8* noundef null, i8* noundef null, i32 noundef 15, i32 noundef 1, i8* noundef %16) #10, !dbg !11614
  %18 = load %struct.k_thread.180*, %struct.k_thread.180** %3, align 4, !dbg !11615
  call void @z_mark_thread_as_started(%struct.k_thread.180* noundef %18) #10, !dbg !11616
  ret void, !dbg !11617
}

; Function Attrs: noinline nounwind optnone
define internal i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef %0) #1 !dbg !11618 {
  %2 = alloca %struct.z_thread_stack_element*, align 4
  store %struct.z_thread_stack_element* %0, %struct.z_thread_stack_element** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.z_thread_stack_element** %2, metadata !11621, metadata !DIExpression()), !dbg !11622
  %3 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %2, align 4, !dbg !11623
  %4 = bitcast %struct.z_thread_stack_element* %3 to i8*, !dbg !11624
  %5 = getelementptr inbounds i8, i8* %4, i32 0, !dbg !11625
  ret i8* %5, !dbg !11626
}

; Function Attrs: noinline nounwind optnone
define internal void @z_mark_thread_as_started(%struct.k_thread.180* noundef %0) #1 !dbg !11627 {
  %2 = alloca %struct.k_thread.180*, align 4
  store %struct.k_thread.180* %0, %struct.k_thread.180** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.180** %2, metadata !11631, metadata !DIExpression()), !dbg !11632
  %3 = load %struct.k_thread.180*, %struct.k_thread.180** %2, align 4, !dbg !11633
  %4 = getelementptr inbounds %struct.k_thread.180, %struct.k_thread.180* %3, i32 0, i32 0, !dbg !11634
  %5 = getelementptr inbounds %struct._thread_base.173, %struct._thread_base.173* %4, i32 0, i32 3, !dbg !11635
  %6 = load i8, i8* %5, align 1, !dbg !11636
  %7 = zext i8 %6 to i32, !dbg !11636
  %8 = and i32 %7, -5, !dbg !11636
  %9 = trunc i32 %8 to i8, !dbg !11636
  store i8 %9, i8* %5, align 1, !dbg !11636
  ret void, !dbg !11637
}

; Function Attrs: noinline noreturn nounwind optnone
define dso_local void @z_cstart() #5 !dbg !11638 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca %struct.k_thread.180, align 8
  call void @gcov_static_init() #10, !dbg !11639
  call void @z_sys_init_run_level(i32 noundef 0) #10, !dbg !11640
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11641, metadata !DIExpression()) #9, !dbg !11644
  %4 = call i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef getelementptr inbounds ([1 x [2048 x %struct.z_thread_stack_element]], [1 x [2048 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 0, i32 0)) #13, !dbg !11649
  %5 = ptrtoint i8* %4 to i32, !dbg !11650
  %6 = add i32 %5, 2048, !dbg !11651
  store i32 %6, i32* %2, align 4, !dbg !11644
  %7 = load i32, i32* %2, align 4, !dbg !11652
  store i32 %7, i32* %1, align 4
  call void @llvm.dbg.declare(metadata i32* %1, metadata !11653, metadata !DIExpression()) #9, !dbg !11655
  %8 = load i32, i32* %1, align 4, !dbg !11657
  call void asm sideeffect "MSR msp, $0", "r"(i32 %8) #9, !dbg !11658, !srcloc !11659
  %9 = load volatile i32, i32* getelementptr inbounds (%struct.SCB_Type, %struct.SCB_Type* inttoptr (i32 -536810240 to %struct.SCB_Type*), i32 0, i32 5), align 4, !dbg !11660
  %10 = or i32 %9, 512, !dbg !11660
  store volatile i32 %10, i32* getelementptr inbounds (%struct.SCB_Type, %struct.SCB_Type* inttoptr (i32 -536810240 to %struct.SCB_Type*), i32 0, i32 5), align 4, !dbg !11660
  call void @__NVIC_SetPriority.67(i32 noundef -2, i32 noundef 255) #13, !dbg !11661
  call void @__NVIC_SetPriority.67(i32 noundef -5, i32 noundef 0) #13, !dbg !11664
  call void @__NVIC_SetPriority.67(i32 noundef -12, i32 noundef 0) #13, !dbg !11665
  call void @__NVIC_SetPriority.67(i32 noundef -11, i32 noundef 0) #13, !dbg !11666
  call void @__NVIC_SetPriority.67(i32 noundef -10, i32 noundef 0) #13, !dbg !11667
  call void @__NVIC_SetPriority.67(i32 noundef -4, i32 noundef 0) #13, !dbg !11668
  %11 = load volatile i32, i32* getelementptr inbounds (%struct.SCB_Type, %struct.SCB_Type* inttoptr (i32 -536810240 to %struct.SCB_Type*), i32 0, i32 7), align 4, !dbg !11669
  %12 = or i32 %11, 458752, !dbg !11669
  store volatile i32 %12, i32* getelementptr inbounds (%struct.SCB_Type, %struct.SCB_Type* inttoptr (i32 -536810240 to %struct.SCB_Type*), i32 0, i32 7), align 4, !dbg !11669
  call void @z_arm_fault_init() #13, !dbg !11670
  call void @z_arm_cpu_idle_init() #13, !dbg !11671
  store volatile i32 -1, i32* getelementptr inbounds (%struct.SCB_Type, %struct.SCB_Type* inttoptr (i32 -536810240 to %struct.SCB_Type*), i32 0, i32 8), align 4, !dbg !11672
  store volatile i32 -1, i32* getelementptr inbounds (%struct.SCB_Type, %struct.SCB_Type* inttoptr (i32 -536810240 to %struct.SCB_Type*), i32 0, i32 9), align 4, !dbg !11675
  br label %13, !dbg !11676

13:                                               ; preds = %0
  br label %14, !dbg !11677

14:                                               ; preds = %13
  call void @llvm.dbg.declare(metadata %struct.k_thread.180* %3, metadata !11679, metadata !DIExpression()), !dbg !11680
  call void @z_dummy_thread_init(%struct.k_thread.180* noundef %3) #10, !dbg !11681
  call void @z_device_state_init() #10, !dbg !11682
  call void @z_sys_init_run_level(i32 noundef 1) #10, !dbg !11683
  call void @z_sys_init_run_level(i32 noundef 2) #10, !dbg !11684
  %15 = call i8* @prepare_multithreading() #10, !dbg !11685
  call void @switch_to_main_thread(i8* noundef %15) #12, !dbg !11686
  unreachable, !dbg !11686
}

; Function Attrs: noinline nounwind optnone
define internal void @gcov_static_init() #1 !dbg !11687 {
  ret void, !dbg !11689
}

; Function Attrs: noinline nounwind optnone
define internal void @z_sys_init_run_level(i32 noundef %0) #1 !dbg !1819 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.init_entry*, align 4
  %4 = alloca %struct.device.71*, align 4
  %5 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11690, metadata !DIExpression()), !dbg !11691
  call void @llvm.dbg.declare(metadata %struct.init_entry** %3, metadata !11692, metadata !DIExpression()), !dbg !11693
  %6 = load i32, i32* %2, align 4, !dbg !11694
  %7 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %6, !dbg !11696
  %8 = load %struct.init_entry*, %struct.init_entry** %7, align 4, !dbg !11696
  store %struct.init_entry* %8, %struct.init_entry** %3, align 4, !dbg !11697
  br label %9, !dbg !11698

9:                                                ; preds = %56, %1
  %10 = load %struct.init_entry*, %struct.init_entry** %3, align 4, !dbg !11699
  %11 = load i32, i32* %2, align 4, !dbg !11701
  %12 = add i32 %11, 1, !dbg !11702
  %13 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %12, !dbg !11703
  %14 = load %struct.init_entry*, %struct.init_entry** %13, align 4, !dbg !11703
  %15 = icmp ult %struct.init_entry* %10, %14, !dbg !11704
  br i1 %15, label %16, label %59, !dbg !11705

16:                                               ; preds = %9
  call void @llvm.dbg.declare(metadata %struct.device.71** %4, metadata !11706, metadata !DIExpression()), !dbg !11708
  %17 = load %struct.init_entry*, %struct.init_entry** %3, align 4, !dbg !11709
  %18 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %17, i32 0, i32 1, !dbg !11710
  %19 = load %struct.device.71*, %struct.device.71** %18, align 4, !dbg !11710
  store %struct.device.71* %19, %struct.device.71** %4, align 4, !dbg !11708
  call void @llvm.dbg.declare(metadata i32* %5, metadata !11711, metadata !DIExpression()), !dbg !11712
  %20 = load %struct.init_entry*, %struct.init_entry** %3, align 4, !dbg !11713
  %21 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %20, i32 0, i32 0, !dbg !11714
  %22 = load i32 (%struct.device.71*)*, i32 (%struct.device.71*)** %21, align 4, !dbg !11714
  %23 = load %struct.device.71*, %struct.device.71** %4, align 4, !dbg !11715
  %24 = call i32 %22(%struct.device.71* noundef %23) #10, !dbg !11713
  store i32 %24, i32* %5, align 4, !dbg !11712
  %25 = load %struct.device.71*, %struct.device.71** %4, align 4, !dbg !11716
  %26 = icmp ne %struct.device.71* %25, null, !dbg !11718
  br i1 %26, label %27, label %55, !dbg !11719

27:                                               ; preds = %16
  %28 = load i32, i32* %5, align 4, !dbg !11720
  %29 = icmp ne i32 %28, 0, !dbg !11723
  br i1 %29, label %30, label %47, !dbg !11724

30:                                               ; preds = %27
  %31 = load i32, i32* %5, align 4, !dbg !11725
  %32 = icmp slt i32 %31, 0, !dbg !11728
  br i1 %32, label %33, label %36, !dbg !11729

33:                                               ; preds = %30
  %34 = load i32, i32* %5, align 4, !dbg !11730
  %35 = sub nsw i32 0, %34, !dbg !11732
  store i32 %35, i32* %5, align 4, !dbg !11733
  br label %36, !dbg !11734

36:                                               ; preds = %33, %30
  %37 = load i32, i32* %5, align 4, !dbg !11735
  %38 = icmp sgt i32 %37, 255, !dbg !11737
  br i1 %38, label %39, label %40, !dbg !11738

39:                                               ; preds = %36
  store i32 255, i32* %5, align 4, !dbg !11739
  br label %40, !dbg !11741

40:                                               ; preds = %39, %36
  %41 = load i32, i32* %5, align 4, !dbg !11742
  %42 = trunc i32 %41 to i8, !dbg !11742
  %43 = load %struct.device.71*, %struct.device.71** %4, align 4, !dbg !11743
  %44 = getelementptr inbounds %struct.device.71, %struct.device.71* %43, i32 0, i32 3, !dbg !11744
  %45 = load %struct.device_state.293*, %struct.device_state.293** %44, align 4, !dbg !11744
  %46 = getelementptr inbounds %struct.device_state.293, %struct.device_state.293* %45, i32 0, i32 0, !dbg !11745
  store i8 %42, i8* %46, align 1, !dbg !11746
  br label %47, !dbg !11747

47:                                               ; preds = %40, %27
  %48 = load %struct.device.71*, %struct.device.71** %4, align 4, !dbg !11748
  %49 = getelementptr inbounds %struct.device.71, %struct.device.71* %48, i32 0, i32 3, !dbg !11749
  %50 = load %struct.device_state.293*, %struct.device_state.293** %49, align 4, !dbg !11749
  %51 = getelementptr inbounds %struct.device_state.293, %struct.device_state.293* %50, i32 0, i32 1, !dbg !11750
  %52 = load i8, i8* %51, align 1, !dbg !11751
  %53 = and i8 %52, -2, !dbg !11751
  %54 = or i8 %53, 1, !dbg !11751
  store i8 %54, i8* %51, align 1, !dbg !11751
  br label %55, !dbg !11752

55:                                               ; preds = %47, %16
  br label %56, !dbg !11753

56:                                               ; preds = %55
  %57 = load %struct.init_entry*, %struct.init_entry** %3, align 4, !dbg !11754
  %58 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %57, i32 1, !dbg !11754
  store %struct.init_entry* %58, %struct.init_entry** %3, align 4, !dbg !11754
  br label %9, !dbg !11755, !llvm.loop !11756

59:                                               ; preds = %9
  ret void, !dbg !11758
}

; Function Attrs: noinline nounwind optnone
define internal void @__NVIC_SetPriority.67(i32 noundef %0, i32 noundef %1) #1 !dbg !11759 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !11760, metadata !DIExpression()), !dbg !11761
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !11762, metadata !DIExpression()), !dbg !11763
  %5 = load i32, i32* %3, align 4, !dbg !11764
  %6 = icmp sge i32 %5, 0, !dbg !11766
  br i1 %6, label %7, label %14, !dbg !11767

7:                                                ; preds = %2
  %8 = load i32, i32* %4, align 4, !dbg !11768
  %9 = shl i32 %8, 4, !dbg !11770
  %10 = and i32 %9, 255, !dbg !11771
  %11 = trunc i32 %10 to i8, !dbg !11772
  %12 = load i32, i32* %3, align 4, !dbg !11773
  %13 = getelementptr inbounds [240 x i8], [240 x i8]* getelementptr inbounds (%struct.NVIC_Type, %struct.NVIC_Type* inttoptr (i32 -536813312 to %struct.NVIC_Type*), i32 0, i32 10), i32 0, i32 %12, !dbg !11774
  store volatile i8 %11, i8* %13, align 1, !dbg !11775
  br label %23, !dbg !11776

14:                                               ; preds = %2
  %15 = load i32, i32* %4, align 4, !dbg !11777
  %16 = shl i32 %15, 4, !dbg !11779
  %17 = and i32 %16, 255, !dbg !11780
  %18 = trunc i32 %17 to i8, !dbg !11781
  %19 = load i32, i32* %3, align 4, !dbg !11782
  %20 = and i32 %19, 15, !dbg !11783
  %21 = sub i32 %20, 4, !dbg !11784
  %22 = getelementptr inbounds [12 x i8], [12 x i8]* getelementptr inbounds (%struct.SCB_Type, %struct.SCB_Type* inttoptr (i32 -536810240 to %struct.SCB_Type*), i32 0, i32 6), i32 0, i32 %21, !dbg !11785
  store volatile i8 %18, i8* %22, align 1, !dbg !11786
  br label %23

23:                                               ; preds = %14, %7
  ret void, !dbg !11787
}

declare dso_local void @z_arm_cpu_idle_init() #0

; Function Attrs: noinline nounwind optnone
define internal void @z_dummy_thread_init(%struct.k_thread.180* noundef %0) #1 !dbg !11788 {
  %2 = alloca %struct.k_thread.180*, align 4
  store %struct.k_thread.180* %0, %struct.k_thread.180** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.180** %2, metadata !11790, metadata !DIExpression()), !dbg !11791
  %3 = load %struct.k_thread.180*, %struct.k_thread.180** %2, align 4, !dbg !11792
  %4 = getelementptr inbounds %struct.k_thread.180, %struct.k_thread.180* %3, i32 0, i32 0, !dbg !11793
  %5 = getelementptr inbounds %struct._thread_base.173, %struct._thread_base.173* %4, i32 0, i32 3, !dbg !11794
  store i8 1, i8* %5, align 1, !dbg !11795
  %6 = load %struct.k_thread.180*, %struct.k_thread.180** %2, align 4, !dbg !11796
  %7 = getelementptr inbounds %struct.k_thread.180, %struct.k_thread.180* %6, i32 0, i32 0, !dbg !11797
  %8 = getelementptr inbounds %struct._thread_base.173, %struct._thread_base.173* %7, i32 0, i32 2, !dbg !11798
  store i8 1, i8* %8, align 4, !dbg !11799
  %9 = load %struct.k_thread.180*, %struct.k_thread.180** %2, align 4, !dbg !11800
  %10 = getelementptr inbounds %struct.k_thread.180, %struct.k_thread.180* %9, i32 0, i32 5, !dbg !11801
  store %struct.k_heap.178* null, %struct.k_heap.178** %10, align 4, !dbg !11802
  %11 = load %struct.k_thread.180*, %struct.k_thread.180** %2, align 4, !dbg !11803
  store %struct.k_thread.180* %11, %struct.k_thread.180** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11804
  ret void, !dbg !11805
}

; Function Attrs: noinline nounwind optnone
define internal i8* @prepare_multithreading() #1 !dbg !11806 {
  %1 = alloca i8*, align 4
  call void @llvm.dbg.declare(metadata i8** %1, metadata !11809, metadata !DIExpression()), !dbg !11810
  call void @z_sched_init() #10, !dbg !11811
  store %struct.k_thread.180* @z_main_thread, %struct.k_thread.180** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !11812
  %2 = call i8* @z_setup_new_thread(%struct.k_thread.180* noundef @z_main_thread, %struct.z_thread_stack_element* noundef getelementptr inbounds ([1024 x %struct.z_thread_stack_element], [1024 x %struct.z_thread_stack_element]* @z_main_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef @bg_thread_main, i8* noundef null, i8* noundef null, i8* noundef null, i32 noundef 0, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.68, i32 0, i32 0)) #10, !dbg !11813
  store i8* %2, i8** %1, align 4, !dbg !11814
  call void @z_mark_thread_as_started(%struct.k_thread.180* noundef @z_main_thread) #10, !dbg !11815
  call void @z_ready_thread(%struct.k_thread.180* noundef @z_main_thread) #10, !dbg !11816
  call void @z_init_cpu(i32 noundef 0) #10, !dbg !11817
  %3 = load i8*, i8** %1, align 4, !dbg !11818
  ret i8* %3, !dbg !11819
}

; Function Attrs: noinline noreturn nounwind optnone
define internal void @switch_to_main_thread(i8* noundef %0) #5 !dbg !11820 {
  %2 = alloca i8*, align 4
  store i8* %0, i8** %2, align 4
  call void @llvm.dbg.declare(metadata i8** %2, metadata !11823, metadata !DIExpression()), !dbg !11824
  %3 = load i8*, i8** %2, align 4, !dbg !11825
  call void @arch_switch_to_main_thread(%struct.k_thread.180* noundef @z_main_thread, i8* noundef %3, void (i8*, i8*, i8*)* noundef @bg_thread_main) #10, !dbg !11826
  unreachable, !dbg !11827
}

; Function Attrs: noinline nounwind optnone
define internal void @bg_thread_main(i8* noundef %0, i8* noundef %1, i8* noundef %2) #1 !dbg !11828 {
  %4 = alloca i8*, align 4
  %5 = alloca i8*, align 4
  %6 = alloca i8*, align 4
  store i8* %0, i8** %4, align 4
  call void @llvm.dbg.declare(metadata i8** %4, metadata !11829, metadata !DIExpression()), !dbg !11830
  store i8* %1, i8** %5, align 4
  call void @llvm.dbg.declare(metadata i8** %5, metadata !11831, metadata !DIExpression()), !dbg !11832
  store i8* %2, i8** %6, align 4
  call void @llvm.dbg.declare(metadata i8** %6, metadata !11833, metadata !DIExpression()), !dbg !11834
  %7 = load i8*, i8** %4, align 4, !dbg !11835
  %8 = load i8*, i8** %5, align 4, !dbg !11836
  %9 = load i8*, i8** %6, align 4, !dbg !11837
  store i8 1, i8* @z_sys_post_kernel, align 1, !dbg !11838
  call void @z_sys_init_run_level(i32 noundef 3) #10, !dbg !11839
  call void @boot_banner() #10, !dbg !11840
  call void @z_sys_init_run_level(i32 noundef 4) #10, !dbg !11841
  call void @z_init_static_threads() #10, !dbg !11842
  call void @main() #10, !dbg !11843
  %10 = load i8, i8* getelementptr inbounds (%struct.k_thread.180, %struct.k_thread.180* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !11844
  %11 = zext i8 %10 to i32, !dbg !11844
  %12 = and i32 %11, -2, !dbg !11844
  %13 = trunc i32 %12 to i8, !dbg !11844
  store i8 %13, i8* getelementptr inbounds (%struct.k_thread.180, %struct.k_thread.180* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !11844
  ret void, !dbg !11845
}

; Function Attrs: noinline nounwind optnone
define dso_local void @k_thread_foreach(void (%struct.k_thread.180*, i8*)* noundef %0, i8* noundef %1) #1 !dbg !11846 {
  %3 = alloca void (%struct.k_thread.180*, i8*)*, align 4
  %4 = alloca i8*, align 4
  store void (%struct.k_thread.180*, i8*)* %0, void (%struct.k_thread.180*, i8*)** %3, align 4
  call void @llvm.dbg.declare(metadata void (%struct.k_thread.180*, i8*)** %3, metadata !11855, metadata !DIExpression()), !dbg !11856
  store i8* %1, i8** %4, align 4
  call void @llvm.dbg.declare(metadata i8** %4, metadata !11857, metadata !DIExpression()), !dbg !11858
  ret void, !dbg !11859
}

; Function Attrs: noinline nounwind optnone
define dso_local void @k_thread_foreach_unlocked(void (%struct.k_thread.180*, i8*)* noundef %0, i8* noundef %1) #1 !dbg !11860 {
  %3 = alloca void (%struct.k_thread.180*, i8*)*, align 4
  %4 = alloca i8*, align 4
  store void (%struct.k_thread.180*, i8*)* %0, void (%struct.k_thread.180*, i8*)** %3, align 4
  call void @llvm.dbg.declare(metadata void (%struct.k_thread.180*, i8*)** %3, metadata !11861, metadata !DIExpression()), !dbg !11862
  store i8* %1, i8** %4, align 4
  call void @llvm.dbg.declare(metadata i8** %4, metadata !11863, metadata !DIExpression()), !dbg !11864
  ret void, !dbg !11865
}

; Function Attrs: noinline nounwind optnone
define dso_local zeroext i1 @k_is_in_isr() #1 !dbg !11866 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %1, metadata !11867, metadata !DIExpression()) #9, !dbg !11869
  %2 = call i32 asm sideeffect "MRS $0, ipsr", "=r"() #9, !dbg !11873, !srcloc !11874
  store i32 %2, i32* %1, align 4, !dbg !11873
  %3 = load i32, i32* %1, align 4, !dbg !11875
  %4 = icmp ne i32 %3, 0, !dbg !11876
  %5 = zext i1 %4 to i64, !dbg !11876
  %6 = select i1 %4, i32 1, i32 0, !dbg !11876
  ret i1 %4, !dbg !11877
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_thread_essential_set() #1 !dbg !11878 {
  %1 = load %struct.k_thread.180*, %struct.k_thread.180** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11879
  %2 = getelementptr inbounds %struct.k_thread.180, %struct.k_thread.180* %1, i32 0, i32 0, !dbg !11880
  %3 = getelementptr inbounds %struct._thread_base.173, %struct._thread_base.173* %2, i32 0, i32 2, !dbg !11881
  %4 = load i8, i8* %3, align 4, !dbg !11882
  %5 = zext i8 %4 to i32, !dbg !11882
  %6 = or i32 %5, 1, !dbg !11882
  %7 = trunc i32 %6 to i8, !dbg !11882
  store i8 %7, i8* %3, align 4, !dbg !11882
  ret void, !dbg !11883
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_thread_essential_clear() #1 !dbg !11884 {
  %1 = load %struct.k_thread.180*, %struct.k_thread.180** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11885
  %2 = getelementptr inbounds %struct.k_thread.180, %struct.k_thread.180* %1, i32 0, i32 0, !dbg !11886
  %3 = getelementptr inbounds %struct._thread_base.173, %struct._thread_base.173* %2, i32 0, i32 2, !dbg !11887
  %4 = load i8, i8* %3, align 4, !dbg !11888
  %5 = zext i8 %4 to i32, !dbg !11888
  %6 = and i32 %5, -2, !dbg !11888
  %7 = trunc i32 %6 to i8, !dbg !11888
  store i8 %7, i8* %3, align 4, !dbg !11888
  ret void, !dbg !11889
}

; Function Attrs: noinline nounwind optnone
define dso_local zeroext i1 @z_is_thread_essential() #1 !dbg !11890 {
  %1 = load %struct.k_thread.180*, %struct.k_thread.180** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11891
  %2 = getelementptr inbounds %struct.k_thread.180, %struct.k_thread.180* %1, i32 0, i32 0, !dbg !11892
  %3 = getelementptr inbounds %struct._thread_base.173, %struct._thread_base.173* %2, i32 0, i32 2, !dbg !11893
  %4 = load i8, i8* %3, align 4, !dbg !11893
  %5 = zext i8 %4 to i32, !dbg !11891
  %6 = and i32 %5, 1, !dbg !11894
  %7 = icmp eq i32 %6, 1, !dbg !11895
  ret i1 %7, !dbg !11896
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @z_impl_k_thread_name_set(%struct.k_thread.180* noundef %0, i8* noundef %1) #1 !dbg !11897 {
  %3 = alloca %struct.k_thread.180*, align 4
  %4 = alloca i8*, align 4
  store %struct.k_thread.180* %0, %struct.k_thread.180** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.180** %3, metadata !11900, metadata !DIExpression()), !dbg !11901
  store i8* %1, i8** %4, align 4
  call void @llvm.dbg.declare(metadata i8** %4, metadata !11902, metadata !DIExpression()), !dbg !11903
  %5 = load %struct.k_thread.180*, %struct.k_thread.180** %3, align 4, !dbg !11904
  %6 = load i8*, i8** %4, align 4, !dbg !11905
  br label %7, !dbg !11906

7:                                                ; preds = %2
  br label %8, !dbg !11907

8:                                                ; preds = %7
  ret i32 -88, !dbg !11909
}

; Function Attrs: noinline nounwind optnone
define dso_local i8* @k_thread_name_get(%struct.k_thread.180* noundef %0) #1 !dbg !11910 {
  %2 = alloca %struct.k_thread.180*, align 4
  store %struct.k_thread.180* %0, %struct.k_thread.180** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.180** %2, metadata !11913, metadata !DIExpression()), !dbg !11914
  %3 = load %struct.k_thread.180*, %struct.k_thread.180** %2, align 4, !dbg !11915
  ret i8* null, !dbg !11916
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @z_impl_k_thread_name_copy(%struct.k_thread.180* noundef %0, i8* noundef %1, i32 noundef %2) #1 !dbg !11917 {
  %4 = alloca %struct.k_thread.180*, align 4
  %5 = alloca i8*, align 4
  %6 = alloca i32, align 4
  store %struct.k_thread.180* %0, %struct.k_thread.180** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.180** %4, metadata !11920, metadata !DIExpression()), !dbg !11921
  store i8* %1, i8** %5, align 4
  call void @llvm.dbg.declare(metadata i8** %5, metadata !11922, metadata !DIExpression()), !dbg !11923
  store i32 %2, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !11924, metadata !DIExpression()), !dbg !11925
  %7 = load %struct.k_thread.180*, %struct.k_thread.180** %4, align 4, !dbg !11926
  %8 = load i8*, i8** %5, align 4, !dbg !11927
  %9 = load i32, i32* %6, align 4, !dbg !11928
  ret i32 -88, !dbg !11929
}

; Function Attrs: noinline nounwind optnone
define dso_local i8* @k_thread_state_str(%struct.k_thread.180* noundef %0, i8* noundef %1, i32 noundef %2) #1 !dbg !1837 {
  %4 = alloca i8*, align 4
  %5 = alloca %struct.k_thread.180*, align 4
  %6 = alloca i8*, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i8, align 1
  %10 = alloca i8, align 1
  %11 = alloca i8, align 1
  store %struct.k_thread.180* %0, %struct.k_thread.180** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.180** %5, metadata !11930, metadata !DIExpression()), !dbg !11931
  store i8* %1, i8** %6, align 4
  call void @llvm.dbg.declare(metadata i8** %6, metadata !11932, metadata !DIExpression()), !dbg !11933
  store i32 %2, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !11934, metadata !DIExpression()), !dbg !11935
  call void @llvm.dbg.declare(metadata i32* %8, metadata !11936, metadata !DIExpression()), !dbg !11937
  store i32 0, i32* %8, align 4, !dbg !11937
  call void @llvm.dbg.declare(metadata i8* %9, metadata !11938, metadata !DIExpression()), !dbg !11939
  call void @llvm.dbg.declare(metadata i8* %10, metadata !11940, metadata !DIExpression()), !dbg !11941
  %12 = load %struct.k_thread.180*, %struct.k_thread.180** %5, align 4, !dbg !11942
  %13 = getelementptr inbounds %struct.k_thread.180, %struct.k_thread.180* %12, i32 0, i32 0, !dbg !11943
  %14 = getelementptr inbounds %struct._thread_base.173, %struct._thread_base.173* %13, i32 0, i32 3, !dbg !11944
  %15 = load i8, i8* %14, align 1, !dbg !11944
  store i8 %15, i8* %10, align 1, !dbg !11941
  %16 = load i8*, i8** %6, align 4, !dbg !11945
  %17 = icmp eq i8* %16, null, !dbg !11947
  br i1 %17, label %21, label %18, !dbg !11948

18:                                               ; preds = %3
  %19 = load i32, i32* %7, align 4, !dbg !11949
  %20 = icmp eq i32 %19, 0, !dbg !11950
  br i1 %20, label %21, label %22, !dbg !11951

21:                                               ; preds = %18, %3
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i32 0, i32 0), i8** %4, align 4, !dbg !11952
  br label %88, !dbg !11952

22:                                               ; preds = %18
  %23 = load i32, i32* %7, align 4, !dbg !11954
  %24 = add i32 %23, -1, !dbg !11954
  store i32 %24, i32* %7, align 4, !dbg !11954
  call void @llvm.dbg.declare(metadata i8* %11, metadata !11955, metadata !DIExpression()), !dbg !11957
  store i8 0, i8* %11, align 1, !dbg !11957
  br label %25, !dbg !11958

25:                                               ; preds = %80, %22
  %26 = load i8, i8* %10, align 1, !dbg !11959
  %27 = zext i8 %26 to i32, !dbg !11959
  %28 = icmp ne i32 %27, 0, !dbg !11961
  br i1 %28, label %29, label %83, !dbg !11962

29:                                               ; preds = %25
  %30 = load i8, i8* %11, align 1, !dbg !11963
  %31 = zext i8 %30 to i32, !dbg !11963
  %32 = shl i32 1, %31, !dbg !11963
  %33 = trunc i32 %32 to i8, !dbg !11963
  store i8 %33, i8* %9, align 1, !dbg !11965
  %34 = load i8, i8* %10, align 1, !dbg !11966
  %35 = zext i8 %34 to i32, !dbg !11966
  %36 = load i8, i8* %9, align 1, !dbg !11968
  %37 = zext i8 %36 to i32, !dbg !11968
  %38 = and i32 %35, %37, !dbg !11969
  %39 = icmp eq i32 %38, 0, !dbg !11970
  br i1 %39, label %40, label %41, !dbg !11971

40:                                               ; preds = %29
  br label %80, !dbg !11972

41:                                               ; preds = %29
  %42 = load i8*, i8** %6, align 4, !dbg !11974
  %43 = load i32, i32* %8, align 4, !dbg !11975
  %44 = getelementptr inbounds i8, i8* %42, i32 %43, !dbg !11976
  %45 = load i32, i32* %7, align 4, !dbg !11977
  %46 = load i32, i32* %8, align 4, !dbg !11978
  %47 = sub i32 %45, %46, !dbg !11979
  %48 = load i8, i8* %11, align 1, !dbg !11980
  %49 = zext i8 %48 to i32, !dbg !11981
  %50 = getelementptr inbounds [8 x i8*], [8 x i8*]* @k_thread_state_str.states_str, i32 0, i32 %49, !dbg !11981
  %51 = load i8*, i8** %50, align 4, !dbg !11981
  %52 = load i8, i8* %11, align 1, !dbg !11982
  %53 = zext i8 %52 to i32, !dbg !11983
  %54 = getelementptr inbounds [8 x i32], [8 x i32]* @k_thread_state_str.states_sz, i32 0, i32 %53, !dbg !11983
  %55 = load i32, i32* %54, align 4, !dbg !11983
  %56 = call i32 @copy_bytes(i8* noundef %44, i32 noundef %47, i8* noundef %51, i32 noundef %55) #10, !dbg !11984
  %57 = load i32, i32* %8, align 4, !dbg !11985
  %58 = add i32 %57, %56, !dbg !11985
  store i32 %58, i32* %8, align 4, !dbg !11985
  %59 = load i8, i8* %9, align 1, !dbg !11986
  %60 = zext i8 %59 to i32, !dbg !11986
  %61 = xor i32 %60, -1, !dbg !11987
  %62 = load i8, i8* %10, align 1, !dbg !11988
  %63 = zext i8 %62 to i32, !dbg !11988
  %64 = and i32 %63, %61, !dbg !11988
  %65 = trunc i32 %64 to i8, !dbg !11988
  store i8 %65, i8* %10, align 1, !dbg !11988
  %66 = load i8, i8* %10, align 1, !dbg !11989
  %67 = zext i8 %66 to i32, !dbg !11989
  %68 = icmp ne i32 %67, 0, !dbg !11991
  br i1 %68, label %69, label %79, !dbg !11992

69:                                               ; preds = %41
  %70 = load i8*, i8** %6, align 4, !dbg !11993
  %71 = load i32, i32* %8, align 4, !dbg !11995
  %72 = getelementptr inbounds i8, i8* %70, i32 %71, !dbg !11996
  %73 = load i32, i32* %7, align 4, !dbg !11997
  %74 = load i32, i32* %8, align 4, !dbg !11998
  %75 = sub i32 %73, %74, !dbg !11999
  %76 = call i32 @copy_bytes(i8* noundef %72, i32 noundef %75, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i32 0, i32 0), i32 noundef 1) #10, !dbg !12000
  %77 = load i32, i32* %8, align 4, !dbg !12001
  %78 = add i32 %77, %76, !dbg !12001
  store i32 %78, i32* %8, align 4, !dbg !12001
  br label %79, !dbg !12002

79:                                               ; preds = %69, %41
  br label %80, !dbg !12003

80:                                               ; preds = %79, %40
  %81 = load i8, i8* %11, align 1, !dbg !12004
  %82 = add i8 %81, 1, !dbg !12004
  store i8 %82, i8* %11, align 1, !dbg !12004
  br label %25, !dbg !12005, !llvm.loop !12006

83:                                               ; preds = %25
  %84 = load i8*, i8** %6, align 4, !dbg !12008
  %85 = load i32, i32* %8, align 4, !dbg !12009
  %86 = getelementptr inbounds i8, i8* %84, i32 %85, !dbg !12008
  store i8 0, i8* %86, align 1, !dbg !12010
  %87 = load i8*, i8** %6, align 4, !dbg !12011
  store i8* %87, i8** %4, align 4, !dbg !12012
  br label %88, !dbg !12012

88:                                               ; preds = %83, %21
  %89 = load i8*, i8** %4, align 4, !dbg !12013
  ret i8* %89, !dbg !12013
}

; Function Attrs: noinline nounwind optnone
define internal i32 @copy_bytes(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) #1 !dbg !12014 {
  %5 = alloca i8*, align 4
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  store i8* %0, i8** %5, align 4
  call void @llvm.dbg.declare(metadata i8** %5, metadata !12017, metadata !DIExpression()), !dbg !12018
  store i32 %1, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !12019, metadata !DIExpression()), !dbg !12020
  store i8* %2, i8** %7, align 4
  call void @llvm.dbg.declare(metadata i8** %7, metadata !12021, metadata !DIExpression()), !dbg !12022
  store i32 %3, i32* %8, align 4
  call void @llvm.dbg.declare(metadata i32* %8, metadata !12023, metadata !DIExpression()), !dbg !12024
  call void @llvm.dbg.declare(metadata i32* %9, metadata !12025, metadata !DIExpression()), !dbg !12026
  %10 = load i32, i32* %6, align 4, !dbg !12027
  %11 = load i32, i32* %8, align 4, !dbg !12027
  %12 = icmp ult i32 %10, %11, !dbg !12027
  br i1 %12, label %13, label %15, !dbg !12027

13:                                               ; preds = %4
  %14 = load i32, i32* %6, align 4, !dbg !12027
  br label %17, !dbg !12027

15:                                               ; preds = %4
  %16 = load i32, i32* %8, align 4, !dbg !12027
  br label %17, !dbg !12027

17:                                               ; preds = %15, %13
  %18 = phi i32 [ %14, %13 ], [ %16, %15 ], !dbg !12027
  store i32 %18, i32* %9, align 4, !dbg !12028
  %19 = load i8*, i8** %5, align 4, !dbg !12029
  %20 = load i8*, i8** %7, align 4, !dbg !12030
  %21 = load i32, i32* %9, align 4, !dbg !12031
  %22 = call i8* @memcpy(i8* noundef %19, i8* noundef %20, i32 noundef %21) #10, !dbg !12032
  %23 = load i32, i32* %9, align 4, !dbg !12033
  ret i32 %23, !dbg !12034
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_impl_k_thread_start(%struct.k_thread.180* noundef %0) #1 !dbg !12035 {
  %2 = alloca %struct.k_thread.180*, align 4
  store %struct.k_thread.180* %0, %struct.k_thread.180** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.180** %2, metadata !12038, metadata !DIExpression()), !dbg !12039
  br label %3, !dbg !12040

3:                                                ; preds = %1
  br label %4, !dbg !12041

4:                                                ; preds = %3
  %5 = load %struct.k_thread.180*, %struct.k_thread.180** %2, align 4, !dbg !12043
  call void @z_sched_start(%struct.k_thread.180* noundef %5) #10, !dbg !12044
  ret void, !dbg !12045
}

; Function Attrs: noinline nounwind optnone
define dso_local i8* @z_setup_new_thread(%struct.k_thread.180* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* noundef %9) #1 !dbg !12046 {
  %11 = alloca i8*, align 4
  %12 = alloca %struct.k_thread.180*, align 4
  %13 = alloca %struct.z_thread_stack_element*, align 4
  %14 = alloca i32, align 4
  %15 = alloca void (i8*, i8*, i8*)*, align 4
  %16 = alloca i8*, align 4
  %17 = alloca i8*, align 4
  %18 = alloca i8*, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i8*, align 4
  %22 = alloca i8*, align 4
  store %struct.k_thread.180* %0, %struct.k_thread.180** %12, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.180** %12, metadata !12054, metadata !DIExpression()), !dbg !12055
  store %struct.z_thread_stack_element* %1, %struct.z_thread_stack_element** %13, align 4
  call void @llvm.dbg.declare(metadata %struct.z_thread_stack_element** %13, metadata !12056, metadata !DIExpression()), !dbg !12057
  store i32 %2, i32* %14, align 4
  call void @llvm.dbg.declare(metadata i32* %14, metadata !12058, metadata !DIExpression()), !dbg !12059
  store void (i8*, i8*, i8*)* %3, void (i8*, i8*, i8*)** %15, align 4
  call void @llvm.dbg.declare(metadata void (i8*, i8*, i8*)** %15, metadata !12060, metadata !DIExpression()), !dbg !12061
  store i8* %4, i8** %16, align 4
  call void @llvm.dbg.declare(metadata i8** %16, metadata !12062, metadata !DIExpression()), !dbg !12063
  store i8* %5, i8** %17, align 4
  call void @llvm.dbg.declare(metadata i8** %17, metadata !12064, metadata !DIExpression()), !dbg !12065
  store i8* %6, i8** %18, align 4
  call void @llvm.dbg.declare(metadata i8** %18, metadata !12066, metadata !DIExpression()), !dbg !12067
  store i32 %7, i32* %19, align 4
  call void @llvm.dbg.declare(metadata i32* %19, metadata !12068, metadata !DIExpression()), !dbg !12069
  store i32 %8, i32* %20, align 4
  call void @llvm.dbg.declare(metadata i32* %20, metadata !12070, metadata !DIExpression()), !dbg !12071
  store i8* %9, i8** %21, align 4
  call void @llvm.dbg.declare(metadata i8** %21, metadata !12072, metadata !DIExpression()), !dbg !12073
  call void @llvm.dbg.declare(metadata i8** %22, metadata !12074, metadata !DIExpression()), !dbg !12075
  br label %23, !dbg !12076

23:                                               ; preds = %10
  br label %24, !dbg !12077

24:                                               ; preds = %23
  %25 = load %struct.k_thread.180*, %struct.k_thread.180** %12, align 4, !dbg !12079
  %26 = getelementptr inbounds %struct.k_thread.180, %struct.k_thread.180* %25, i32 0, i32 3, !dbg !12080
  call void @z_waitq_init(%union.anon.169* noundef %26) #10, !dbg !12081
  %27 = load %struct.k_thread.180*, %struct.k_thread.180** %12, align 4, !dbg !12082
  %28 = getelementptr inbounds %struct.k_thread.180, %struct.k_thread.180* %27, i32 0, i32 0, !dbg !12083
  %29 = load i32, i32* %19, align 4, !dbg !12084
  %30 = load i32, i32* %20, align 4, !dbg !12085
  call void @z_init_thread_base(%struct._thread_base.173* noundef %28, i32 noundef %29, i32 noundef 4, i32 noundef %30) #10, !dbg !12086
  %31 = load %struct.k_thread.180*, %struct.k_thread.180** %12, align 4, !dbg !12087
  %32 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %13, align 4, !dbg !12088
  %33 = load i32, i32* %14, align 4, !dbg !12089
  %34 = call i8* @setup_thread_stack(%struct.k_thread.180* noundef %31, %struct.z_thread_stack_element* noundef %32, i32 noundef %33) #10, !dbg !12090
  store i8* %34, i8** %22, align 4, !dbg !12091
  %35 = load %struct.k_thread.180*, %struct.k_thread.180** %12, align 4, !dbg !12092
  %36 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %13, align 4, !dbg !12093
  %37 = load i8*, i8** %22, align 4, !dbg !12094
  %38 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %15, align 4, !dbg !12095
  %39 = load i8*, i8** %16, align 4, !dbg !12096
  %40 = load i8*, i8** %17, align 4, !dbg !12097
  %41 = load i8*, i8** %18, align 4, !dbg !12098
  call void @arch_new_thread(%struct.k_thread.180* noundef %35, %struct.z_thread_stack_element* noundef %36, i8* noundef %37, void (i8*, i8*, i8*)* noundef %38, i8* noundef %39, i8* noundef %40, i8* noundef %41) #10, !dbg !12099
  %42 = load %struct.k_thread.180*, %struct.k_thread.180** %12, align 4, !dbg !12100
  %43 = getelementptr inbounds %struct.k_thread.180, %struct.k_thread.180* %42, i32 0, i32 2, !dbg !12101
  store i8* null, i8** %43, align 4, !dbg !12102
  %44 = load %struct.k_thread.180*, %struct.k_thread.180** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12103
  %45 = icmp ne %struct.k_thread.180* %44, null, !dbg !12103
  br i1 %45, label %50, label %46, !dbg !12105

46:                                               ; preds = %24
  %47 = load %struct.k_thread.180*, %struct.k_thread.180** %12, align 4, !dbg !12106
  %48 = getelementptr inbounds %struct.k_thread.180, %struct.k_thread.180* %47, i32 0, i32 5, !dbg !12108
  store %struct.k_heap.178* null, %struct.k_heap.178** %48, align 4, !dbg !12109
  %49 = load i8*, i8** %22, align 4, !dbg !12110
  store i8* %49, i8** %11, align 4, !dbg !12111
  br label %59, !dbg !12111

50:                                               ; preds = %24
  %51 = load %struct.k_thread.180*, %struct.k_thread.180** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12112
  %52 = getelementptr inbounds %struct.k_thread.180, %struct.k_thread.180* %51, i32 0, i32 5, !dbg !12113
  %53 = load %struct.k_heap.178*, %struct.k_heap.178** %52, align 4, !dbg !12113
  %54 = load %struct.k_thread.180*, %struct.k_thread.180** %12, align 4, !dbg !12114
  %55 = getelementptr inbounds %struct.k_thread.180, %struct.k_thread.180* %54, i32 0, i32 5, !dbg !12115
  store %struct.k_heap.178* %53, %struct.k_heap.178** %55, align 4, !dbg !12116
  br label %56, !dbg !12117

56:                                               ; preds = %50
  br label %57, !dbg !12118

57:                                               ; preds = %56
  %58 = load i8*, i8** %22, align 4, !dbg !12120
  store i8* %58, i8** %11, align 4, !dbg !12121
  br label %59, !dbg !12121

59:                                               ; preds = %57, %46
  %60 = load i8*, i8** %11, align 4, !dbg !12122
  ret i8* %60, !dbg !12122
}

; Function Attrs: noinline nounwind optnone
define internal void @z_waitq_init(%union.anon.169* noundef %0) #1 !dbg !12123 {
  %2 = alloca %union.anon.169*, align 4
  store %union.anon.169* %0, %union.anon.169** %2, align 4
  call void @llvm.dbg.declare(metadata %union.anon.169** %2, metadata !12127, metadata !DIExpression()), !dbg !12128
  %3 = load %union.anon.169*, %union.anon.169** %2, align 4, !dbg !12129
  %4 = getelementptr inbounds %union.anon.169, %union.anon.169* %3, i32 0, i32 0, !dbg !12130
  call void @sys_dlist_init(%struct._dnode.168* noundef %4) #10, !dbg !12131
  ret void, !dbg !12132
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_init_thread_base(%struct._thread_base.173* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #1 !dbg !12133 {
  %5 = alloca %struct._thread_base.173*, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store %struct._thread_base.173* %0, %struct._thread_base.173** %5, align 4
  call void @llvm.dbg.declare(metadata %struct._thread_base.173** %5, metadata !12137, metadata !DIExpression()), !dbg !12138
  store i32 %1, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !12139, metadata !DIExpression()), !dbg !12140
  store i32 %2, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !12141, metadata !DIExpression()), !dbg !12142
  store i32 %3, i32* %8, align 4
  call void @llvm.dbg.declare(metadata i32* %8, metadata !12143, metadata !DIExpression()), !dbg !12144
  %9 = load %struct._thread_base.173*, %struct._thread_base.173** %5, align 4, !dbg !12145
  %10 = getelementptr inbounds %struct._thread_base.173, %struct._thread_base.173* %9, i32 0, i32 1, !dbg !12146
  store %union.anon.169* null, %union.anon.169** %10, align 8, !dbg !12147
  %11 = load i32, i32* %8, align 4, !dbg !12148
  %12 = trunc i32 %11 to i8, !dbg !12149
  %13 = load %struct._thread_base.173*, %struct._thread_base.173** %5, align 4, !dbg !12150
  %14 = getelementptr inbounds %struct._thread_base.173, %struct._thread_base.173* %13, i32 0, i32 2, !dbg !12151
  store i8 %12, i8* %14, align 4, !dbg !12152
  %15 = load i32, i32* %7, align 4, !dbg !12153
  %16 = trunc i32 %15 to i8, !dbg !12154
  %17 = load %struct._thread_base.173*, %struct._thread_base.173** %5, align 4, !dbg !12155
  %18 = getelementptr inbounds %struct._thread_base.173, %struct._thread_base.173* %17, i32 0, i32 3, !dbg !12156
  store i8 %16, i8* %18, align 1, !dbg !12157
  %19 = load i32, i32* %6, align 4, !dbg !12158
  %20 = trunc i32 %19 to i8, !dbg !12158
  %21 = load %struct._thread_base.173*, %struct._thread_base.173** %5, align 4, !dbg !12159
  %22 = getelementptr inbounds %struct._thread_base.173, %struct._thread_base.173* %21, i32 0, i32 4, !dbg !12160
  %23 = bitcast %union.anon.2.7* %22 to %struct.device_state.293*, !dbg !12160
  %24 = getelementptr inbounds %struct.device_state.293, %struct.device_state.293* %23, i32 0, i32 0, !dbg !12160
  store i8 %20, i8* %24, align 2, !dbg !12161
  %25 = load %struct._thread_base.173*, %struct._thread_base.173** %5, align 4, !dbg !12162
  %26 = getelementptr inbounds %struct._thread_base.173, %struct._thread_base.173* %25, i32 0, i32 4, !dbg !12163
  %27 = bitcast %union.anon.2.7* %26 to %struct.device_state.293*, !dbg !12163
  %28 = getelementptr inbounds %struct.device_state.293, %struct.device_state.293* %27, i32 0, i32 1, !dbg !12163
  store i8 0, i8* %28, align 1, !dbg !12164
  %29 = load %struct._thread_base.173*, %struct._thread_base.173** %5, align 4, !dbg !12165
  call void @z_init_thread_timeout(%struct._thread_base.173* noundef %29) #10, !dbg !12166
  ret void, !dbg !12167
}

; Function Attrs: noinline nounwind optnone
define internal i8* @setup_thread_stack(%struct.k_thread.180* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) #1 !dbg !12168 {
  %4 = alloca %struct.k_thread.180*, align 4
  %5 = alloca %struct.z_thread_stack_element*, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i8*, align 4
  %10 = alloca i8*, align 4
  %11 = alloca i32, align 4
  %12 = alloca i8, align 1
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i8*, align 4
  store %struct.k_thread.180* %0, %struct.k_thread.180** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.180** %4, metadata !12171, metadata !DIExpression()), !dbg !12172
  store %struct.z_thread_stack_element* %1, %struct.z_thread_stack_element** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.z_thread_stack_element** %5, metadata !12173, metadata !DIExpression()), !dbg !12174
  store i32 %2, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !12175, metadata !DIExpression()), !dbg !12176
  call void @llvm.dbg.declare(metadata i32* %7, metadata !12177, metadata !DIExpression()), !dbg !12178
  call void @llvm.dbg.declare(metadata i32* %8, metadata !12179, metadata !DIExpression()), !dbg !12180
  call void @llvm.dbg.declare(metadata i8** %9, metadata !12181, metadata !DIExpression()), !dbg !12182
  call void @llvm.dbg.declare(metadata i8** %10, metadata !12183, metadata !DIExpression()), !dbg !12184
  call void @llvm.dbg.declare(metadata i32* %11, metadata !12185, metadata !DIExpression()), !dbg !12186
  store i32 0, i32* %11, align 4, !dbg !12186
  %16 = load i32, i32* %6, align 4, !dbg !12187
  %17 = add i32 %16, 7, !dbg !12187
  %18 = and i32 %17, -8, !dbg !12187
  %19 = add i32 %18, 0, !dbg !12187
  store i32 %19, i32* %7, align 4, !dbg !12189
  %20 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %5, align 4, !dbg !12190
  %21 = call i8* @Z_KERNEL_STACK_BUFFER.75(%struct.z_thread_stack_element* noundef %20) #10, !dbg !12191
  store i8* %21, i8** %10, align 4, !dbg !12192
  %22 = load i32, i32* %7, align 4, !dbg !12193
  %23 = sub i32 %22, 0, !dbg !12194
  store i32 %23, i32* %8, align 4, !dbg !12195
  %24 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %5, align 4, !dbg !12196
  %25 = bitcast %struct.z_thread_stack_element* %24 to i8*, !dbg !12197
  %26 = load i32, i32* %7, align 4, !dbg !12198
  %27 = getelementptr inbounds i8, i8* %25, i32 %26, !dbg !12199
  store i8* %27, i8** %9, align 4, !dbg !12200
  br label %28, !dbg !12201

28:                                               ; preds = %3
  br label %29, !dbg !12202

29:                                               ; preds = %28
  %30 = load i32, i32* %11, align 4, !dbg !12206
  %31 = add i32 %30, 7, !dbg !12206
  %32 = and i32 %31, -8, !dbg !12206
  store i32 %32, i32* %11, align 4, !dbg !12207
  %33 = load i32, i32* %11, align 4, !dbg !12208
  %34 = load i8*, i8** %9, align 4, !dbg !12209
  %35 = sub i32 0, %33, !dbg !12209
  %36 = getelementptr inbounds i8, i8* %34, i32 %35, !dbg !12209
  store i8* %36, i8** %9, align 4, !dbg !12209
  %37 = load i8*, i8** %9, align 4, !dbg !12210
  ret i8* %37, !dbg !12211
}

; Function Attrs: noinline nounwind optnone
define internal i8* @Z_KERNEL_STACK_BUFFER.75(%struct.z_thread_stack_element* noundef %0) #1 !dbg !12212 {
  %2 = alloca %struct.z_thread_stack_element*, align 4
  store %struct.z_thread_stack_element* %0, %struct.z_thread_stack_element** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.z_thread_stack_element** %2, metadata !12215, metadata !DIExpression()), !dbg !12216
  %3 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %2, align 4, !dbg !12217
  %4 = bitcast %struct.z_thread_stack_element* %3 to i8*, !dbg !12218
  %5 = getelementptr inbounds i8, i8* %4, i32 0, !dbg !12219
  ret i8* %5, !dbg !12220
}

; Function Attrs: noinline nounwind optnone
define internal void @z_init_thread_timeout(%struct._thread_base.173* noundef %0) #1 !dbg !12221 {
  %2 = alloca %struct._thread_base.173*, align 4
  store %struct._thread_base.173* %0, %struct._thread_base.173** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._thread_base.173** %2, metadata !12225, metadata !DIExpression()), !dbg !12226
  %3 = load %struct._thread_base.173*, %struct._thread_base.173** %2, align 4, !dbg !12227
  %4 = getelementptr inbounds %struct._thread_base.173, %struct._thread_base.173* %3, i32 0, i32 7, !dbg !12228
  call void @z_init_timeout(%struct._timeout.172* noundef %4) #10, !dbg !12229
  ret void, !dbg !12230
}

; Function Attrs: noinline nounwind optnone
define internal void @z_init_timeout(%struct._timeout.172* noundef %0) #1 !dbg !12231 {
  %2 = alloca %struct._timeout.172*, align 4
  store %struct._timeout.172* %0, %struct._timeout.172** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._timeout.172** %2, metadata !12232, metadata !DIExpression()), !dbg !12233
  %3 = load %struct._timeout.172*, %struct._timeout.172** %2, align 4, !dbg !12234
  %4 = getelementptr inbounds %struct._timeout.172, %struct._timeout.172* %3, i32 0, i32 0, !dbg !12235
  call void @sys_dnode_init(%struct._dnode.168* noundef %4) #10, !dbg !12236
  ret void, !dbg !12237
}

; Function Attrs: noinline nounwind optnone
define internal void @sys_dnode_init(%struct._dnode.168* noundef %0) #1 !dbg !12238 {
  %2 = alloca %struct._dnode.168*, align 4
  store %struct._dnode.168* %0, %struct._dnode.168** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.168** %2, metadata !12241, metadata !DIExpression()), !dbg !12242
  %3 = load %struct._dnode.168*, %struct._dnode.168** %2, align 4, !dbg !12243
  %4 = getelementptr inbounds %struct._dnode.168, %struct._dnode.168* %3, i32 0, i32 0, !dbg !12244
  %5 = bitcast %union.anon.0.166* %4 to %struct._dnode.168**, !dbg !12244
  store %struct._dnode.168* null, %struct._dnode.168** %5, align 4, !dbg !12245
  %6 = load %struct._dnode.168*, %struct._dnode.168** %2, align 4, !dbg !12246
  %7 = getelementptr inbounds %struct._dnode.168, %struct._dnode.168* %6, i32 0, i32 1, !dbg !12247
  %8 = bitcast %union.anon.0.166* %7 to %struct._dnode.168**, !dbg !12247
  store %struct._dnode.168* null, %struct._dnode.168** %8, align 4, !dbg !12248
  ret void, !dbg !12249
}

; Function Attrs: noinline nounwind optnone
define internal void @sys_dlist_init(%struct._dnode.168* noundef %0) #1 !dbg !12250 {
  %2 = alloca %struct._dnode.168*, align 4
  store %struct._dnode.168* %0, %struct._dnode.168** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.168** %2, metadata !12254, metadata !DIExpression()), !dbg !12255
  %3 = load %struct._dnode.168*, %struct._dnode.168** %2, align 4, !dbg !12256
  %4 = load %struct._dnode.168*, %struct._dnode.168** %2, align 4, !dbg !12257
  %5 = getelementptr inbounds %struct._dnode.168, %struct._dnode.168* %4, i32 0, i32 0, !dbg !12258
  %6 = bitcast %union.anon.0.166* %5 to %struct._dnode.168**, !dbg !12258
  store %struct._dnode.168* %3, %struct._dnode.168** %6, align 4, !dbg !12259
  %7 = load %struct._dnode.168*, %struct._dnode.168** %2, align 4, !dbg !12260
  %8 = load %struct._dnode.168*, %struct._dnode.168** %2, align 4, !dbg !12261
  %9 = getelementptr inbounds %struct._dnode.168, %struct._dnode.168* %8, i32 0, i32 1, !dbg !12262
  %10 = bitcast %union.anon.0.166* %9 to %struct._dnode.168**, !dbg !12262
  store %struct._dnode.168* %7, %struct._dnode.168** %10, align 4, !dbg !12263
  ret void, !dbg !12264
}

; Function Attrs: noinline nounwind optnone
define dso_local %struct.k_thread.180* @z_impl_k_thread_create(%struct.k_thread.180* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, [1 x i64] %9) #1 !dbg !12265 {
  %11 = alloca %union.argument_value, align 8
  %12 = alloca %struct.k_thread.180*, align 4
  %13 = alloca %struct.z_thread_stack_element*, align 4
  %14 = alloca i32, align 4
  %15 = alloca void (i8*, i8*, i8*)*, align 4
  %16 = alloca i8*, align 4
  %17 = alloca i8*, align 4
  %18 = alloca i8*, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca %union.argument_value, align 8
  %22 = getelementptr inbounds %union.argument_value, %union.argument_value* %11, i32 0, i32 0
  %23 = bitcast i64* %22 to [1 x i64]*
  store [1 x i64] %9, [1 x i64]* %23, align 8
  store %struct.k_thread.180* %0, %struct.k_thread.180** %12, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.180** %12, metadata !12272, metadata !DIExpression()), !dbg !12273
  store %struct.z_thread_stack_element* %1, %struct.z_thread_stack_element** %13, align 4
  call void @llvm.dbg.declare(metadata %struct.z_thread_stack_element** %13, metadata !12274, metadata !DIExpression()), !dbg !12275
  store i32 %2, i32* %14, align 4
  call void @llvm.dbg.declare(metadata i32* %14, metadata !12276, metadata !DIExpression()), !dbg !12277
  store void (i8*, i8*, i8*)* %3, void (i8*, i8*, i8*)** %15, align 4
  call void @llvm.dbg.declare(metadata void (i8*, i8*, i8*)** %15, metadata !12278, metadata !DIExpression()), !dbg !12279
  store i8* %4, i8** %16, align 4
  call void @llvm.dbg.declare(metadata i8** %16, metadata !12280, metadata !DIExpression()), !dbg !12281
  store i8* %5, i8** %17, align 4
  call void @llvm.dbg.declare(metadata i8** %17, metadata !12282, metadata !DIExpression()), !dbg !12283
  store i8* %6, i8** %18, align 4
  call void @llvm.dbg.declare(metadata i8** %18, metadata !12284, metadata !DIExpression()), !dbg !12285
  store i32 %7, i32* %19, align 4
  call void @llvm.dbg.declare(metadata i32* %19, metadata !12286, metadata !DIExpression()), !dbg !12287
  store i32 %8, i32* %20, align 4
  call void @llvm.dbg.declare(metadata i32* %20, metadata !12288, metadata !DIExpression()), !dbg !12289
  call void @llvm.dbg.declare(metadata %union.argument_value* %11, metadata !12290, metadata !DIExpression()), !dbg !12291
  %24 = load %struct.k_thread.180*, %struct.k_thread.180** %12, align 4, !dbg !12292
  %25 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %13, align 4, !dbg !12293
  %26 = load i32, i32* %14, align 4, !dbg !12294
  %27 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %15, align 4, !dbg !12295
  %28 = load i8*, i8** %16, align 4, !dbg !12296
  %29 = load i8*, i8** %17, align 4, !dbg !12297
  %30 = load i8*, i8** %18, align 4, !dbg !12298
  %31 = load i32, i32* %19, align 4, !dbg !12299
  %32 = load i32, i32* %20, align 4, !dbg !12300
  %33 = call i8* @z_setup_new_thread(%struct.k_thread.180* noundef %24, %struct.z_thread_stack_element* noundef %25, i32 noundef %26, void (i8*, i8*, i8*)* noundef %27, i8* noundef %28, i8* noundef %29, i8* noundef %30, i32 noundef %31, i32 noundef %32, i8* noundef null) #10, !dbg !12301
  %34 = getelementptr inbounds %union.argument_value, %union.argument_value* %11, i32 0, i32 0, !dbg !12302
  %35 = load i64, i64* %34, align 8, !dbg !12302
  %36 = getelementptr inbounds %union.argument_value, %union.argument_value* %21, i32 0, i32 0, !dbg !12302
  store i64 -1, i64* %36, align 8, !dbg !12302
  %37 = icmp eq i64 %35, -1, !dbg !12302
  br i1 %37, label %43, label %38, !dbg !12304

38:                                               ; preds = %10
  %39 = load %struct.k_thread.180*, %struct.k_thread.180** %12, align 4, !dbg !12305
  %40 = getelementptr inbounds %union.argument_value, %union.argument_value* %11, i32 0, i32 0, !dbg !12307
  %41 = bitcast i64* %40 to [1 x i64]*, !dbg !12307
  %42 = load [1 x i64], [1 x i64]* %41, align 8, !dbg !12307
  call void @schedule_new_thread(%struct.k_thread.180* noundef %39, [1 x i64] %42) #10, !dbg !12307
  br label %43, !dbg !12308

43:                                               ; preds = %38, %10
  %44 = load %struct.k_thread.180*, %struct.k_thread.180** %12, align 4, !dbg !12309
  ret %struct.k_thread.180* %44, !dbg !12310
}

; Function Attrs: noinline nounwind optnone
define internal void @schedule_new_thread(%struct.k_thread.180* noundef %0, [1 x i64] %1) #1 !dbg !12311 {
  %3 = alloca %union.argument_value, align 8
  %4 = alloca %struct.k_thread.180*, align 4
  %5 = alloca %union.argument_value, align 8
  %6 = getelementptr inbounds %union.argument_value, %union.argument_value* %3, i32 0, i32 0
  %7 = bitcast i64* %6 to [1 x i64]*
  store [1 x i64] %1, [1 x i64]* %7, align 8
  store %struct.k_thread.180* %0, %struct.k_thread.180** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.180** %4, metadata !12314, metadata !DIExpression()), !dbg !12315
  call void @llvm.dbg.declare(metadata %union.argument_value* %3, metadata !12316, metadata !DIExpression()), !dbg !12317
  %8 = getelementptr inbounds %union.argument_value, %union.argument_value* %3, i32 0, i32 0, !dbg !12318
  %9 = load i64, i64* %8, align 8, !dbg !12318
  %10 = getelementptr inbounds %union.argument_value, %union.argument_value* %5, i32 0, i32 0, !dbg !12318
  store i64 0, i64* %10, align 8, !dbg !12318
  %11 = icmp eq i64 %9, 0, !dbg !12318
  br i1 %11, label %12, label %14, !dbg !12320

12:                                               ; preds = %2
  %13 = load %struct.k_thread.180*, %struct.k_thread.180** %4, align 4, !dbg !12321
  call void @k_thread_start(%struct.k_thread.180* noundef %13) #10, !dbg !12323
  br label %19, !dbg !12324

14:                                               ; preds = %2
  %15 = load %struct.k_thread.180*, %struct.k_thread.180** %4, align 4, !dbg !12325
  %16 = getelementptr inbounds %union.argument_value, %union.argument_value* %3, i32 0, i32 0, !dbg !12327
  %17 = bitcast i64* %16 to [1 x i64]*, !dbg !12327
  %18 = load [1 x i64], [1 x i64]* %17, align 8, !dbg !12327
  call void @z_add_thread_timeout(%struct.k_thread.180* noundef %15, [1 x i64] %18) #10, !dbg !12327
  br label %19

19:                                               ; preds = %14, %12
  ret void, !dbg !12328
}

; Function Attrs: noinline nounwind optnone
define internal void @k_thread_start(%struct.k_thread.180* noundef %0) #1 !dbg !12329 {
  %2 = alloca %struct.k_thread.180*, align 4
  store %struct.k_thread.180* %0, %struct.k_thread.180** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.180** %2, metadata !12332, metadata !DIExpression()), !dbg !12333
  br label %3, !dbg !12334

3:                                                ; preds = %1
  call void asm sideeffect "", "~{memory}"() #9, !dbg !12335, !srcloc !12337
  br label %4, !dbg !12335

4:                                                ; preds = %3
  %5 = load %struct.k_thread.180*, %struct.k_thread.180** %2, align 4, !dbg !12338
  call void @z_impl_k_thread_start(%struct.k_thread.180* noundef %5) #10, !dbg !12339
  ret void, !dbg !12340
}

; Function Attrs: noinline nounwind optnone
define internal void @z_add_thread_timeout(%struct.k_thread.180* noundef %0, [1 x i64] %1) #1 !dbg !12341 {
  %3 = alloca %union.argument_value, align 8
  %4 = alloca %struct.k_thread.180*, align 4
  %5 = getelementptr inbounds %union.argument_value, %union.argument_value* %3, i32 0, i32 0
  %6 = bitcast i64* %5 to [1 x i64]*
  store [1 x i64] %1, [1 x i64]* %6, align 8
  store %struct.k_thread.180* %0, %struct.k_thread.180** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.180** %4, metadata !12342, metadata !DIExpression()), !dbg !12343
  call void @llvm.dbg.declare(metadata %union.argument_value* %3, metadata !12344, metadata !DIExpression()), !dbg !12345
  %7 = load %struct.k_thread.180*, %struct.k_thread.180** %4, align 4, !dbg !12346
  %8 = getelementptr inbounds %struct.k_thread.180, %struct.k_thread.180* %7, i32 0, i32 0, !dbg !12347
  %9 = getelementptr inbounds %struct._thread_base.173, %struct._thread_base.173* %8, i32 0, i32 7, !dbg !12348
  %10 = getelementptr inbounds %union.argument_value, %union.argument_value* %3, i32 0, i32 0, !dbg !12349
  %11 = bitcast i64* %10 to [1 x i64]*, !dbg !12349
  %12 = load [1 x i64], [1 x i64]* %11, align 8, !dbg !12349
  call void @z_add_timeout(%struct._timeout.172* noundef %9, void (%struct._timeout.172*)* noundef @z_thread_timeout, [1 x i64] %12) #10, !dbg !12349
  ret void, !dbg !12350
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_init_static_threads() #1 !dbg !12351 {
  %1 = alloca %struct._static_thread_data.483*, align 4
  %2 = alloca i32, align 4
  %3 = alloca %struct._static_thread_data.483*, align 4
  %4 = alloca i32, align 4
  %5 = alloca %union.argument_value, align 8
  call void @llvm.dbg.declare(metadata %struct._static_thread_data.483** %1, metadata !12352, metadata !DIExpression()), !dbg !12369
  store %struct._static_thread_data.483* getelementptr inbounds ([0 x %struct._static_thread_data.483], [0 x %struct._static_thread_data.483]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data.483** %1, align 4, !dbg !12369
  br label %6, !dbg !12369

6:                                                ; preds = %50, %0
  %7 = load %struct._static_thread_data.483*, %struct._static_thread_data.483** %1, align 4, !dbg !12370
  %8 = icmp ult %struct._static_thread_data.483* %7, getelementptr inbounds ([0 x %struct._static_thread_data.483], [0 x %struct._static_thread_data.483]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !12370
  %9 = zext i1 %8 to i32, !dbg !12370
  store i32 %9, i32* %2, align 4, !dbg !12373
  %10 = load i32, i32* %2, align 4, !dbg !12370
  %11 = icmp ne i32 %10, 0, !dbg !12369
  br i1 %11, label %12, label %53, !dbg !12369

12:                                               ; preds = %6
  %13 = load %struct._static_thread_data.483*, %struct._static_thread_data.483** %1, align 4, !dbg !12375
  %14 = getelementptr inbounds %struct._static_thread_data.483, %struct._static_thread_data.483* %13, i32 0, i32 0, !dbg !12377
  %15 = load %struct.k_thread.180*, %struct.k_thread.180** %14, align 4, !dbg !12377
  %16 = load %struct._static_thread_data.483*, %struct._static_thread_data.483** %1, align 4, !dbg !12378
  %17 = getelementptr inbounds %struct._static_thread_data.483, %struct._static_thread_data.483* %16, i32 0, i32 1, !dbg !12379
  %18 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %17, align 4, !dbg !12379
  %19 = load %struct._static_thread_data.483*, %struct._static_thread_data.483** %1, align 4, !dbg !12380
  %20 = getelementptr inbounds %struct._static_thread_data.483, %struct._static_thread_data.483* %19, i32 0, i32 2, !dbg !12381
  %21 = load i32, i32* %20, align 4, !dbg !12381
  %22 = load %struct._static_thread_data.483*, %struct._static_thread_data.483** %1, align 4, !dbg !12382
  %23 = getelementptr inbounds %struct._static_thread_data.483, %struct._static_thread_data.483* %22, i32 0, i32 3, !dbg !12383
  %24 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %23, align 4, !dbg !12383
  %25 = load %struct._static_thread_data.483*, %struct._static_thread_data.483** %1, align 4, !dbg !12384
  %26 = getelementptr inbounds %struct._static_thread_data.483, %struct._static_thread_data.483* %25, i32 0, i32 4, !dbg !12385
  %27 = load i8*, i8** %26, align 4, !dbg !12385
  %28 = load %struct._static_thread_data.483*, %struct._static_thread_data.483** %1, align 4, !dbg !12386
  %29 = getelementptr inbounds %struct._static_thread_data.483, %struct._static_thread_data.483* %28, i32 0, i32 5, !dbg !12387
  %30 = load i8*, i8** %29, align 4, !dbg !12387
  %31 = load %struct._static_thread_data.483*, %struct._static_thread_data.483** %1, align 4, !dbg !12388
  %32 = getelementptr inbounds %struct._static_thread_data.483, %struct._static_thread_data.483* %31, i32 0, i32 6, !dbg !12389
  %33 = load i8*, i8** %32, align 4, !dbg !12389
  %34 = load %struct._static_thread_data.483*, %struct._static_thread_data.483** %1, align 4, !dbg !12390
  %35 = getelementptr inbounds %struct._static_thread_data.483, %struct._static_thread_data.483* %34, i32 0, i32 7, !dbg !12391
  %36 = load i32, i32* %35, align 4, !dbg !12391
  %37 = load %struct._static_thread_data.483*, %struct._static_thread_data.483** %1, align 4, !dbg !12392
  %38 = getelementptr inbounds %struct._static_thread_data.483, %struct._static_thread_data.483* %37, i32 0, i32 8, !dbg !12393
  %39 = load i32, i32* %38, align 4, !dbg !12393
  %40 = load %struct._static_thread_data.483*, %struct._static_thread_data.483** %1, align 4, !dbg !12394
  %41 = getelementptr inbounds %struct._static_thread_data.483, %struct._static_thread_data.483* %40, i32 0, i32 11, !dbg !12395
  %42 = load i8*, i8** %41, align 4, !dbg !12395
  %43 = call i8* @z_setup_new_thread(%struct.k_thread.180* noundef %15, %struct.z_thread_stack_element* noundef %18, i32 noundef %21, void (i8*, i8*, i8*)* noundef %24, i8* noundef %27, i8* noundef %30, i8* noundef %33, i32 noundef %36, i32 noundef %39, i8* noundef %42) #10, !dbg !12396
  %44 = load %struct._static_thread_data.483*, %struct._static_thread_data.483** %1, align 4, !dbg !12397
  %45 = bitcast %struct._static_thread_data.483* %44 to i8*, !dbg !12397
  %46 = load %struct._static_thread_data.483*, %struct._static_thread_data.483** %1, align 4, !dbg !12398
  %47 = getelementptr inbounds %struct._static_thread_data.483, %struct._static_thread_data.483* %46, i32 0, i32 0, !dbg !12399
  %48 = load %struct.k_thread.180*, %struct.k_thread.180** %47, align 4, !dbg !12399
  %49 = getelementptr inbounds %struct.k_thread.180, %struct.k_thread.180* %48, i32 0, i32 2, !dbg !12400
  store i8* %45, i8** %49, align 4, !dbg !12401
  br label %50, !dbg !12402

50:                                               ; preds = %12
  %51 = load %struct._static_thread_data.483*, %struct._static_thread_data.483** %1, align 4, !dbg !12403
  %52 = getelementptr inbounds %struct._static_thread_data.483, %struct._static_thread_data.483* %51, i32 1, !dbg !12403
  store %struct._static_thread_data.483* %52, %struct._static_thread_data.483** %1, align 4, !dbg !12403
  br label %6, !dbg !12403, !llvm.loop !12404

53:                                               ; preds = %6
  call void @k_sched_lock() #10, !dbg !12406
  call void @llvm.dbg.declare(metadata %struct._static_thread_data.483** %3, metadata !12407, metadata !DIExpression()), !dbg !12409
  store %struct._static_thread_data.483* getelementptr inbounds ([0 x %struct._static_thread_data.483], [0 x %struct._static_thread_data.483]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data.483** %3, align 4, !dbg !12409
  br label %54, !dbg !12409

54:                                               ; preds = %88, %53
  %55 = load %struct._static_thread_data.483*, %struct._static_thread_data.483** %3, align 4, !dbg !12410
  %56 = icmp ult %struct._static_thread_data.483* %55, getelementptr inbounds ([0 x %struct._static_thread_data.483], [0 x %struct._static_thread_data.483]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !12410
  %57 = zext i1 %56 to i32, !dbg !12410
  store i32 %57, i32* %4, align 4, !dbg !12413
  %58 = load i32, i32* %4, align 4, !dbg !12410
  %59 = icmp ne i32 %58, 0, !dbg !12409
  br i1 %59, label %60, label %91, !dbg !12409

60:                                               ; preds = %54
  %61 = load %struct._static_thread_data.483*, %struct._static_thread_data.483** %3, align 4, !dbg !12415
  %62 = getelementptr inbounds %struct._static_thread_data.483, %struct._static_thread_data.483* %61, i32 0, i32 9, !dbg !12418
  %63 = load i32, i32* %62, align 4, !dbg !12418
  %64 = sext i32 %63 to i64, !dbg !12415
  %65 = icmp ne i64 %64, -1, !dbg !12419
  br i1 %65, label %66, label %87, !dbg !12420

66:                                               ; preds = %60
  %67 = load %struct._static_thread_data.483*, %struct._static_thread_data.483** %3, align 4, !dbg !12421
  %68 = getelementptr inbounds %struct._static_thread_data.483, %struct._static_thread_data.483* %67, i32 0, i32 0, !dbg !12423
  %69 = load %struct.k_thread.180*, %struct.k_thread.180** %68, align 4, !dbg !12423
  %70 = getelementptr inbounds %union.argument_value, %union.argument_value* %5, i32 0, i32 0, !dbg !12424
  %71 = load %struct._static_thread_data.483*, %struct._static_thread_data.483** %3, align 4, !dbg !12424
  %72 = getelementptr inbounds %struct._static_thread_data.483, %struct._static_thread_data.483* %71, i32 0, i32 9, !dbg !12424
  %73 = load i32, i32* %72, align 4, !dbg !12424
  %74 = icmp sgt i32 %73, 0, !dbg !12424
  br i1 %74, label %75, label %79, !dbg !12424

75:                                               ; preds = %66
  %76 = load %struct._static_thread_data.483*, %struct._static_thread_data.483** %3, align 4, !dbg !12424
  %77 = getelementptr inbounds %struct._static_thread_data.483, %struct._static_thread_data.483* %76, i32 0, i32 9, !dbg !12424
  %78 = load i32, i32* %77, align 4, !dbg !12424
  br label %80, !dbg !12424

79:                                               ; preds = %66
  br label %80, !dbg !12424

80:                                               ; preds = %79, %75
  %81 = phi i32 [ %78, %75 ], [ 0, %79 ], !dbg !12424
  %82 = sext i32 %81 to i64, !dbg !12424
  %83 = call i64 @k_ms_to_ticks_ceil64(i64 noundef %82) #10, !dbg !12424
  store i64 %83, i64* %70, align 8, !dbg !12424
  %84 = getelementptr inbounds %union.argument_value, %union.argument_value* %5, i32 0, i32 0, !dbg !12425
  %85 = bitcast i64* %84 to [1 x i64]*, !dbg !12425
  %86 = load [1 x i64], [1 x i64]* %85, align 8, !dbg !12425
  call void @schedule_new_thread(%struct.k_thread.180* noundef %69, [1 x i64] %86) #10, !dbg !12425
  br label %87, !dbg !12426

87:                                               ; preds = %80, %60
  br label %88, !dbg !12427

88:                                               ; preds = %87
  %89 = load %struct._static_thread_data.483*, %struct._static_thread_data.483** %3, align 4, !dbg !12428
  %90 = getelementptr inbounds %struct._static_thread_data.483, %struct._static_thread_data.483* %89, i32 1, !dbg !12428
  store %struct._static_thread_data.483* %90, %struct._static_thread_data.483** %3, align 4, !dbg !12428
  br label %54, !dbg !12428, !llvm.loop !12429

91:                                               ; preds = %54
  call void @k_sched_unlock() #10, !dbg !12431
  ret void, !dbg !12432
}

; Function Attrs: noinline nounwind optnone
define internal i64 @k_ms_to_ticks_ceil64(i64 noundef %0) #1 !dbg !12433 {
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i8, align 1
  %7 = alloca i8, align 1
  %8 = alloca i8, align 1
  %9 = alloca i8, align 1
  %10 = alloca i8, align 1
  %11 = alloca i8, align 1
  %12 = alloca i64, align 8
  %13 = alloca i32, align 4
  %14 = alloca i64, align 8
  store i64 %0, i64* %14, align 8
  call void @llvm.dbg.declare(metadata i64* %14, metadata !12436, metadata !DIExpression()), !dbg !12437
  %15 = load i64, i64* %14, align 8, !dbg !12438
  store i64 %15, i64* %3, align 8
  call void @llvm.dbg.declare(metadata i64* %3, metadata !12439, metadata !DIExpression()), !dbg !12443
  store i32 1000, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !12445, metadata !DIExpression()), !dbg !12446
  store i32 10000, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !12447, metadata !DIExpression()), !dbg !12448
  store i8 1, i8* %6, align 1
  call void @llvm.dbg.declare(metadata i8* %6, metadata !12449, metadata !DIExpression()), !dbg !12450
  store i8 0, i8* %7, align 1
  call void @llvm.dbg.declare(metadata i8* %7, metadata !12451, metadata !DIExpression()), !dbg !12452
  store i8 1, i8* %8, align 1
  call void @llvm.dbg.declare(metadata i8* %8, metadata !12453, metadata !DIExpression()), !dbg !12454
  store i8 0, i8* %9, align 1
  call void @llvm.dbg.declare(metadata i8* %9, metadata !12455, metadata !DIExpression()), !dbg !12456
  call void @llvm.dbg.declare(metadata i8* %10, metadata !12457, metadata !DIExpression()), !dbg !12458
  %16 = load i8, i8* %6, align 1, !dbg !12459
  %17 = trunc i8 %16 to i1, !dbg !12459
  br i1 %17, label %18, label %27, !dbg !12460

18:                                               ; preds = %1
  %19 = load i32, i32* %5, align 4, !dbg !12461
  %20 = load i32, i32* %4, align 4, !dbg !12462
  %21 = icmp ugt i32 %19, %20, !dbg !12463
  br i1 %21, label %22, label %27, !dbg !12464

22:                                               ; preds = %18
  %23 = load i32, i32* %5, align 4, !dbg !12465
  %24 = load i32, i32* %4, align 4, !dbg !12466
  %25 = urem i32 %23, %24, !dbg !12467
  %26 = icmp eq i32 %25, 0, !dbg !12468
  br label %27

27:                                               ; preds = %22, %18, %1
  %28 = phi i1 [ false, %18 ], [ false, %1 ], [ %26, %22 ], !dbg !12469
  %29 = zext i1 %28 to i8, !dbg !12458
  store i8 %29, i8* %10, align 1, !dbg !12458
  call void @llvm.dbg.declare(metadata i8* %11, metadata !12470, metadata !DIExpression()), !dbg !12471
  %30 = load i8, i8* %6, align 1, !dbg !12472
  %31 = trunc i8 %30 to i1, !dbg !12472
  br i1 %31, label %32, label %41, !dbg !12473

32:                                               ; preds = %27
  %33 = load i32, i32* %4, align 4, !dbg !12474
  %34 = load i32, i32* %5, align 4, !dbg !12475
  %35 = icmp ugt i32 %33, %34, !dbg !12476
  br i1 %35, label %36, label %41, !dbg !12477

36:                                               ; preds = %32
  %37 = load i32, i32* %4, align 4, !dbg !12478
  %38 = load i32, i32* %5, align 4, !dbg !12479
  %39 = urem i32 %37, %38, !dbg !12480
  %40 = icmp eq i32 %39, 0, !dbg !12481
  br label %41

41:                                               ; preds = %36, %32, %27
  %42 = phi i1 [ false, %32 ], [ false, %27 ], [ %40, %36 ], !dbg !12469
  %43 = zext i1 %42 to i8, !dbg !12471
  store i8 %43, i8* %11, align 1, !dbg !12471
  %44 = load i32, i32* %4, align 4, !dbg !12482
  %45 = load i32, i32* %5, align 4, !dbg !12484
  %46 = icmp eq i32 %44, %45, !dbg !12485
  br i1 %46, label %47, label %58, !dbg !12486

47:                                               ; preds = %41
  %48 = load i8, i8* %7, align 1, !dbg !12487
  %49 = trunc i8 %48 to i1, !dbg !12487
  br i1 %49, label %50, label %54, !dbg !12487

50:                                               ; preds = %47
  %51 = load i64, i64* %3, align 8, !dbg !12489
  %52 = trunc i64 %51 to i32, !dbg !12490
  %53 = zext i32 %52 to i64, !dbg !12491
  br label %56, !dbg !12487

54:                                               ; preds = %47
  %55 = load i64, i64* %3, align 8, !dbg !12492
  br label %56, !dbg !12487

56:                                               ; preds = %54, %50
  %57 = phi i64 [ %53, %50 ], [ %55, %54 ], !dbg !12487
  store i64 %57, i64* %2, align 8, !dbg !12493
  br label %195, !dbg !12493

58:                                               ; preds = %41
  call void @llvm.dbg.declare(metadata i64* %12, metadata !12494, metadata !DIExpression()), !dbg !12495
  store i64 0, i64* %12, align 8, !dbg !12495
  %59 = load i8, i8* %10, align 1, !dbg !12496
  %60 = trunc i8 %59 to i1, !dbg !12496
  br i1 %60, label %86, label %61, !dbg !12498

61:                                               ; preds = %58
  call void @llvm.dbg.declare(metadata i32* %13, metadata !12499, metadata !DIExpression()), !dbg !12501
  %62 = load i8, i8* %11, align 1, !dbg !12502
  %63 = trunc i8 %62 to i1, !dbg !12502
  br i1 %63, label %64, label %68, !dbg !12502

64:                                               ; preds = %61
  %65 = load i32, i32* %4, align 4, !dbg !12503
  %66 = load i32, i32* %5, align 4, !dbg !12504
  %67 = udiv i32 %65, %66, !dbg !12505
  br label %70, !dbg !12502

68:                                               ; preds = %61
  %69 = load i32, i32* %4, align 4, !dbg !12506
  br label %70, !dbg !12502

70:                                               ; preds = %68, %64
  %71 = phi i32 [ %67, %64 ], [ %69, %68 ], !dbg !12502
  store i32 %71, i32* %13, align 4, !dbg !12501
  %72 = load i8, i8* %8, align 1, !dbg !12507
  %73 = trunc i8 %72 to i1, !dbg !12507
  br i1 %73, label %74, label %78, !dbg !12509

74:                                               ; preds = %70
  %75 = load i32, i32* %13, align 4, !dbg !12510
  %76 = sub i32 %75, 1, !dbg !12512
  %77 = zext i32 %76 to i64, !dbg !12510
  store i64 %77, i64* %12, align 8, !dbg !12513
  br label %78, !dbg !12514

78:                                               ; preds = %74, %70
  %79 = load i8, i8* %9, align 1, !dbg !12515
  %80 = trunc i8 %79 to i1, !dbg !12515
  br i1 %80, label %81, label %85, !dbg !12517

81:                                               ; preds = %78
  %82 = load i32, i32* %13, align 4, !dbg !12518
  %83 = udiv i32 %82, 2, !dbg !12520
  %84 = zext i32 %83 to i64, !dbg !12518
  store i64 %84, i64* %12, align 8, !dbg !12521
  br label %85, !dbg !12522

85:                                               ; preds = %81, %78
  br label %86, !dbg !12523

86:                                               ; preds = %85, %58
  %87 = load i8, i8* %11, align 1, !dbg !12524
  %88 = trunc i8 %87 to i1, !dbg !12524
  br i1 %88, label %89, label %114, !dbg !12526

89:                                               ; preds = %86
  %90 = load i64, i64* %12, align 8, !dbg !12527
  %91 = load i64, i64* %3, align 8, !dbg !12529
  %92 = add i64 %91, %90, !dbg !12529
  store i64 %92, i64* %3, align 8, !dbg !12529
  %93 = load i8, i8* %7, align 1, !dbg !12530
  %94 = trunc i8 %93 to i1, !dbg !12530
  br i1 %94, label %95, label %106, !dbg !12532

95:                                               ; preds = %89
  %96 = load i64, i64* %3, align 8, !dbg !12533
  %97 = icmp ult i64 %96, 4294967296, !dbg !12534
  br i1 %97, label %98, label %106, !dbg !12535

98:                                               ; preds = %95
  %99 = load i64, i64* %3, align 8, !dbg !12536
  %100 = trunc i64 %99 to i32, !dbg !12538
  %101 = load i32, i32* %4, align 4, !dbg !12539
  %102 = load i32, i32* %5, align 4, !dbg !12540
  %103 = udiv i32 %101, %102, !dbg !12541
  %104 = udiv i32 %100, %103, !dbg !12542
  %105 = zext i32 %104 to i64, !dbg !12543
  store i64 %105, i64* %2, align 8, !dbg !12544
  br label %195, !dbg !12544

106:                                              ; preds = %95, %89
  %107 = load i64, i64* %3, align 8, !dbg !12545
  %108 = load i32, i32* %4, align 4, !dbg !12547
  %109 = zext i32 %108 to i64, !dbg !12548
  %110 = load i32, i32* %5, align 4, !dbg !12549
  %111 = zext i32 %110 to i64, !dbg !12549
  %112 = udiv i64 %109, %111, !dbg !12550
  %113 = udiv i64 %107, %112, !dbg !12551
  store i64 %113, i64* %2, align 8, !dbg !12552
  br label %195, !dbg !12552

114:                                              ; preds = %86
  %115 = load i8, i8* %10, align 1, !dbg !12553
  %116 = trunc i8 %115 to i1, !dbg !12553
  br i1 %116, label %117, label %136, !dbg !12555

117:                                              ; preds = %114
  %118 = load i8, i8* %7, align 1, !dbg !12556
  %119 = trunc i8 %118 to i1, !dbg !12556
  br i1 %119, label %120, label %128, !dbg !12559

120:                                              ; preds = %117
  %121 = load i64, i64* %3, align 8, !dbg !12560
  %122 = trunc i64 %121 to i32, !dbg !12562
  %123 = load i32, i32* %5, align 4, !dbg !12563
  %124 = load i32, i32* %4, align 4, !dbg !12564
  %125 = udiv i32 %123, %124, !dbg !12565
  %126 = mul i32 %122, %125, !dbg !12566
  %127 = zext i32 %126 to i64, !dbg !12567
  store i64 %127, i64* %2, align 8, !dbg !12568
  br label %195, !dbg !12568

128:                                              ; preds = %117
  %129 = load i64, i64* %3, align 8, !dbg !12569
  %130 = load i32, i32* %5, align 4, !dbg !12571
  %131 = zext i32 %130 to i64, !dbg !12572
  %132 = load i32, i32* %4, align 4, !dbg !12573
  %133 = zext i32 %132 to i64, !dbg !12573
  %134 = udiv i64 %131, %133, !dbg !12574
  %135 = mul i64 %129, %134, !dbg !12575
  store i64 %135, i64* %2, align 8, !dbg !12576
  br label %195, !dbg !12576

136:                                              ; preds = %114
  %137 = load i8, i8* %7, align 1, !dbg !12577
  %138 = trunc i8 %137 to i1, !dbg !12577
  br i1 %138, label %139, label %151, !dbg !12580

139:                                              ; preds = %136
  %140 = load i64, i64* %3, align 8, !dbg !12581
  %141 = load i32, i32* %5, align 4, !dbg !12583
  %142 = zext i32 %141 to i64, !dbg !12583
  %143 = mul i64 %140, %142, !dbg !12584
  %144 = load i64, i64* %12, align 8, !dbg !12585
  %145 = add i64 %143, %144, !dbg !12586
  %146 = load i32, i32* %4, align 4, !dbg !12587
  %147 = zext i32 %146 to i64, !dbg !12587
  %148 = udiv i64 %145, %147, !dbg !12588
  %149 = trunc i64 %148 to i32, !dbg !12589
  %150 = zext i32 %149 to i64, !dbg !12589
  store i64 %150, i64* %2, align 8, !dbg !12590
  br label %195, !dbg !12590

151:                                              ; preds = %136
  %152 = load i8, i8* %6, align 1, !dbg !12591
  %153 = trunc i8 %152 to i1, !dbg !12591
  br i1 %153, label %154, label %174, !dbg !12593

154:                                              ; preds = %151
  %155 = load i32, i32* %4, align 4, !dbg !12594
  %156 = zext i32 %155 to i64, !dbg !12594
  %157 = mul i64 31536000, %156, !dbg !12594
  %158 = add i64 %157, 4294967294, !dbg !12594
  %159 = udiv i64 %158, 4294967295, !dbg !12594
  %160 = load i32, i32* %5, align 4, !dbg !12594
  %161 = zext i32 %160 to i64, !dbg !12594
  %162 = mul i64 %159, %161, !dbg !12594
  %163 = icmp ule i64 %162, 4294967295, !dbg !12594
  br i1 %163, label %164, label %174, !dbg !12595

164:                                              ; preds = %154
  %165 = load i64, i64* %3, align 8, !dbg !12596
  %166 = load i32, i32* %5, align 4, !dbg !12598
  %167 = zext i32 %166 to i64, !dbg !12598
  %168 = mul i64 %165, %167, !dbg !12599
  %169 = load i64, i64* %12, align 8, !dbg !12600
  %170 = add i64 %168, %169, !dbg !12601
  %171 = load i32, i32* %4, align 4, !dbg !12602
  %172 = zext i32 %171 to i64, !dbg !12602
  %173 = udiv i64 %170, %172, !dbg !12603
  store i64 %173, i64* %2, align 8, !dbg !12604
  br label %195, !dbg !12604

174:                                              ; preds = %154, %151
  %175 = load i64, i64* %3, align 8, !dbg !12605
  %176 = load i32, i32* %4, align 4, !dbg !12607
  %177 = zext i32 %176 to i64, !dbg !12607
  %178 = udiv i64 %175, %177, !dbg !12608
  %179 = load i32, i32* %5, align 4, !dbg !12609
  %180 = zext i32 %179 to i64, !dbg !12609
  %181 = mul i64 %178, %180, !dbg !12610
  %182 = load i64, i64* %3, align 8, !dbg !12611
  %183 = load i32, i32* %4, align 4, !dbg !12612
  %184 = zext i32 %183 to i64, !dbg !12612
  %185 = urem i64 %182, %184, !dbg !12613
  %186 = load i32, i32* %5, align 4, !dbg !12614
  %187 = zext i32 %186 to i64, !dbg !12614
  %188 = mul i64 %185, %187, !dbg !12615
  %189 = load i64, i64* %12, align 8, !dbg !12616
  %190 = add i64 %188, %189, !dbg !12617
  %191 = load i32, i32* %4, align 4, !dbg !12618
  %192 = zext i32 %191 to i64, !dbg !12618
  %193 = udiv i64 %190, %192, !dbg !12619
  %194 = add i64 %181, %193, !dbg !12620
  store i64 %194, i64* %2, align 8, !dbg !12621
  br label %195, !dbg !12621

195:                                              ; preds = %56, %98, %106, %120, %128, %139, %164, %174
  %196 = load i64, i64* %2, align 8, !dbg !12622
  ret i64 %196, !dbg !12623
}

; Function Attrs: noinline noreturn nounwind optnone
define dso_local void @k_thread_user_mode_enter(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #5 !dbg !12624 {
  %5 = alloca void (i8*, i8*, i8*)*, align 4
  %6 = alloca i8*, align 4
  %7 = alloca i8*, align 4
  %8 = alloca i8*, align 4
  store void (i8*, i8*, i8*)* %0, void (i8*, i8*, i8*)** %5, align 4
  call void @llvm.dbg.declare(metadata void (i8*, i8*, i8*)** %5, metadata !12625, metadata !DIExpression()), !dbg !12626
  store i8* %1, i8** %6, align 4
  call void @llvm.dbg.declare(metadata i8** %6, metadata !12627, metadata !DIExpression()), !dbg !12628
  store i8* %2, i8** %7, align 4
  call void @llvm.dbg.declare(metadata i8** %7, metadata !12629, metadata !DIExpression()), !dbg !12630
  store i8* %3, i8** %8, align 4
  call void @llvm.dbg.declare(metadata i8** %8, metadata !12631, metadata !DIExpression()), !dbg !12632
  br label %9, !dbg !12633

9:                                                ; preds = %4
  br label %10, !dbg !12634

10:                                               ; preds = %9
  %11 = load %struct.k_thread.180*, %struct.k_thread.180** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12636
  %12 = getelementptr inbounds %struct.k_thread.180, %struct.k_thread.180* %11, i32 0, i32 0, !dbg !12637
  %13 = getelementptr inbounds %struct._thread_base.173, %struct._thread_base.173* %12, i32 0, i32 2, !dbg !12638
  %14 = load i8, i8* %13, align 4, !dbg !12639
  %15 = zext i8 %14 to i32, !dbg !12639
  %16 = or i32 %15, 4, !dbg !12639
  %17 = trunc i32 %16 to i8, !dbg !12639
  store i8 %17, i8* %13, align 4, !dbg !12639
  call void @z_thread_essential_clear() #10, !dbg !12640
  %18 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %5, align 4, !dbg !12641
  %19 = load i8*, i8** %6, align 4, !dbg !12642
  %20 = load i8*, i8** %7, align 4, !dbg !12643
  %21 = load i8*, i8** %8, align 4, !dbg !12644
  call void @z_thread_entry(void (i8*, i8*, i8*)* noundef %18, i8* noundef %19, i8* noundef %20, i8* noundef %21) #12, !dbg !12645
  unreachable, !dbg !12645
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @z_impl_k_float_disable(%struct.k_thread.180* noundef %0) #1 !dbg !12646 {
  %2 = alloca %struct.k_thread.180*, align 4
  store %struct.k_thread.180* %0, %struct.k_thread.180** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.180** %2, metadata !12649, metadata !DIExpression()), !dbg !12650
  ret i32 -134, !dbg !12651
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @z_impl_k_float_enable(%struct.k_thread.180* noundef %0, i32 noundef %1) #1 !dbg !12652 {
  %3 = alloca %struct.k_thread.180*, align 4
  %4 = alloca i32, align 4
  store %struct.k_thread.180* %0, %struct.k_thread.180** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.180** %3, metadata !12655, metadata !DIExpression()), !dbg !12656
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !12657, metadata !DIExpression()), !dbg !12658
  ret i32 -134, !dbg !12659
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @k_thread_runtime_stats_get(%struct.k_thread.180* noundef %0, %struct.k_spinlock.13* noundef %1) #1 !dbg !12660 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.k_thread.180*, align 4
  %5 = alloca %struct.k_spinlock.13*, align 4
  %6 = alloca %struct.k_spinlock.13, align 1
  store %struct.k_thread.180* %0, %struct.k_thread.180** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.180** %4, metadata !12666, metadata !DIExpression()), !dbg !12667
  store %struct.k_spinlock.13* %1, %struct.k_spinlock.13** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %5, metadata !12668, metadata !DIExpression()), !dbg !12669
  %7 = load %struct.k_thread.180*, %struct.k_thread.180** %4, align 4, !dbg !12670
  %8 = icmp eq %struct.k_thread.180* %7, null, !dbg !12672
  br i1 %8, label %12, label %9, !dbg !12673

9:                                                ; preds = %2
  %10 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %5, align 4, !dbg !12674
  %11 = icmp eq %struct.k_spinlock.13* %10, null, !dbg !12675
  br i1 %11, label %12, label %13, !dbg !12676

12:                                               ; preds = %9, %2
  store i32 -22, i32* %3, align 4, !dbg !12677
  br label %17, !dbg !12677

13:                                               ; preds = %9
  %14 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %5, align 4, !dbg !12679
  %15 = bitcast %struct.k_spinlock.13* %14 to i8*, !dbg !12680
  %16 = bitcast %struct.k_spinlock.13* %6 to i8*, !dbg !12680
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 1 %15, i8* align 1 %16, i32 0, i1 false), !dbg !12680
  store i32 0, i32* %3, align 4, !dbg !12681
  br label %17, !dbg !12681

17:                                               ; preds = %13, %12
  %18 = load i32, i32* %3, align 4, !dbg !12682
  ret i32 %18, !dbg !12682
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @k_thread_runtime_stats_all_get(%struct.k_spinlock.13* noundef %0) #1 !dbg !12683 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.k_spinlock.13*, align 4
  %4 = alloca %struct.k_spinlock.13, align 1
  store %struct.k_spinlock.13* %0, %struct.k_spinlock.13** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %3, metadata !12686, metadata !DIExpression()), !dbg !12687
  %5 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %3, align 4, !dbg !12688
  %6 = icmp eq %struct.k_spinlock.13* %5, null, !dbg !12690
  br i1 %6, label %7, label %8, !dbg !12691

7:                                                ; preds = %1
  store i32 -22, i32* %2, align 4, !dbg !12692
  br label %12, !dbg !12692

8:                                                ; preds = %1
  %9 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %3, align 4, !dbg !12694
  %10 = bitcast %struct.k_spinlock.13* %9 to i8*, !dbg !12695
  %11 = bitcast %struct.k_spinlock.13* %4 to i8*, !dbg !12695
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 1 %10, i8* align 1 %11, i32 0, i1 false), !dbg !12695
  store i32 0, i32* %2, align 4, !dbg !12696
  br label %12, !dbg !12696

12:                                               ; preds = %8, %7
  %13 = load i32, i32* %2, align 4, !dbg !12697
  ret i32 %13, !dbg !12697
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_pm_save_idle_exit() #1 !dbg !12698 {
  call void @sys_clock_idle_exit() #10, !dbg !12700
  ret void, !dbg !12701
}

; Function Attrs: noinline nounwind optnone
define dso_local void @idle(i8* noundef %0, i8* noundef %1, i8* noundef %2) #1 !dbg !12702 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 4
  %7 = alloca i8*, align 4
  %8 = alloca i8*, align 4
  store i8* %0, i8** %6, align 4
  call void @llvm.dbg.declare(metadata i8** %6, metadata !12703, metadata !DIExpression()), !dbg !12704
  store i8* %1, i8** %7, align 4
  call void @llvm.dbg.declare(metadata i8** %7, metadata !12705, metadata !DIExpression()), !dbg !12706
  store i8* %2, i8** %8, align 4
  call void @llvm.dbg.declare(metadata i8** %8, metadata !12707, metadata !DIExpression()), !dbg !12708
  %9 = load i8*, i8** %6, align 4, !dbg !12709
  %10 = load i8*, i8** %7, align 4, !dbg !12710
  %11 = load i8*, i8** %8, align 4, !dbg !12711
  br label %12, !dbg !12712

12:                                               ; preds = %3, %12
  call void @llvm.dbg.declare(metadata i32* %4, metadata !12713, metadata !DIExpression()) #9, !dbg !12715
  call void @llvm.dbg.declare(metadata i32* %5, metadata !12718, metadata !DIExpression()) #9, !dbg !12719
  %13 = call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #9, !dbg !12720, !srcloc !12721
  %14 = extractvalue { i32, i32 } %13, 0, !dbg !12720
  %15 = extractvalue { i32, i32 } %13, 1, !dbg !12720
  store i32 %14, i32* %4, align 4, !dbg !12720
  store i32 %15, i32* %5, align 4, !dbg !12720
  %16 = load i32, i32* %4, align 4, !dbg !12722
  call void @k_cpu_idle() #10, !dbg !12723
  br label %12, !dbg !12712, !llvm.loop !12724
}

; Function Attrs: noinline nounwind optnone
define internal void @k_cpu_idle() #1 !dbg !12726 {
  call void @arch_cpu_idle() #10, !dbg !12727
  ret void, !dbg !12728
}

declare dso_local void @arch_cpu_idle() #0

; Function Attrs: noinline nounwind optnone
define dso_local i32 @z_sched_prio_cmp(%struct.k_thread.180* noundef %0, %struct.k_thread.180* noundef %1) #1 !dbg !12729 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.k_thread.180*, align 4
  %5 = alloca %struct.k_thread.180*, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  store %struct.k_thread.180* %0, %struct.k_thread.180** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.180** %4, metadata !12732, metadata !DIExpression()), !dbg !12733
  store %struct.k_thread.180* %1, %struct.k_thread.180** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.180** %5, metadata !12734, metadata !DIExpression()), !dbg !12735
  call void @llvm.dbg.declare(metadata i32* %6, metadata !12736, metadata !DIExpression()), !dbg !12737
  %8 = load %struct.k_thread.180*, %struct.k_thread.180** %4, align 4, !dbg !12738
  %9 = getelementptr inbounds %struct.k_thread.180, %struct.k_thread.180* %8, i32 0, i32 0, !dbg !12739
  %10 = getelementptr inbounds %struct._thread_base.173, %struct._thread_base.173* %9, i32 0, i32 4, !dbg !12740
  %11 = bitcast %union.anon.2.7* %10 to %struct.device_state.293*, !dbg !12740
  %12 = getelementptr inbounds %struct.device_state.293, %struct.device_state.293* %11, i32 0, i32 0, !dbg !12740
  %13 = load i8, i8* %12, align 2, !dbg !12740
  %14 = sext i8 %13 to i32, !dbg !12738
  store i32 %14, i32* %6, align 4, !dbg !12737
  call void @llvm.dbg.declare(metadata i32* %7, metadata !12741, metadata !DIExpression()), !dbg !12742
  %15 = load %struct.k_thread.180*, %struct.k_thread.180** %5, align 4, !dbg !12743
  %16 = getelementptr inbounds %struct.k_thread.180, %struct.k_thread.180* %15, i32 0, i32 0, !dbg !12744
  %17 = getelementptr inbounds %struct._thread_base.173, %struct._thread_base.173* %16, i32 0, i32 4, !dbg !12745
  %18 = bitcast %union.anon.2.7* %17 to %struct.device_state.293*, !dbg !12745
  %19 = getelementptr inbounds %struct.device_state.293, %struct.device_state.293* %18, i32 0, i32 0, !dbg !12745
  %20 = load i8, i8* %19, align 2, !dbg !12745
  %21 = sext i8 %20 to i32, !dbg !12743
  store i32 %21, i32* %7, align 4, !dbg !12742
  %22 = load i32, i32* %6, align 4, !dbg !12746
  %23 = load i32, i32* %7, align 4, !dbg !12748
  %24 = icmp ne i32 %22, %23, !dbg !12749
  br i1 %24, label %25, label %29, !dbg !12750

25:                                               ; preds = %2
  %26 = load i32, i32* %7, align 4, !dbg !12751
  %27 = load i32, i32* %6, align 4, !dbg !12753
  %28 = sub nsw i32 %26, %27, !dbg !12754
  store i32 %28, i32* %3, align 4, !dbg !12755
  br label %30, !dbg !12755

29:                                               ; preds = %2
  store i32 0, i32* %3, align 4, !dbg !12756
  br label %30, !dbg !12756

30:                                               ; preds = %29, %25
  %31 = load i32, i32* %3, align 4, !dbg !12757
  ret i32 %31, !dbg !12757
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_reset_time_slice(%struct.k_thread.180* noundef %0) #1 !dbg !12758 {
  %2 = alloca %struct.k_thread.180*, align 4
  store %struct.k_thread.180* %0, %struct.k_thread.180** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.180** %2, metadata !12761, metadata !DIExpression()), !dbg !12762
  %3 = load %struct.k_thread.180*, %struct.k_thread.180** %2, align 4, !dbg !12763
  %4 = call i32 @slice_time(%struct.k_thread.180* noundef %3) #10, !dbg !12765
  %5 = icmp ne i32 %4, 0, !dbg !12766
  br i1 %5, label %6, label %13, !dbg !12767

6:                                                ; preds = %1
  %7 = load %struct.k_thread.180*, %struct.k_thread.180** %2, align 4, !dbg !12768
  %8 = call i32 @slice_time(%struct.k_thread.180* noundef %7) #10, !dbg !12770
  %9 = call i32 @sys_clock_elapsed() #10, !dbg !12771
  %10 = add i32 %8, %9, !dbg !12772
  store i32 %10, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !12773
  %11 = load %struct.k_thread.180*, %struct.k_thread.180** %2, align 4, !dbg !12774
  %12 = call i32 @slice_time(%struct.k_thread.180* noundef %11) #10, !dbg !12775
  call void @z_set_timeout_expiry(i32 noundef %12, i1 noundef zeroext false) #10, !dbg !12776
  br label %13, !dbg !12777

13:                                               ; preds = %6, %1
  ret void, !dbg !12778
}

; Function Attrs: noinline nounwind optnone
define internal i32 @slice_time(%struct.k_thread.180* noundef %0) #1 !dbg !12779 {
  %2 = alloca %struct.k_thread.180*, align 4
  %3 = alloca i32, align 4
  store %struct.k_thread.180* %0, %struct.k_thread.180** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.180** %2, metadata !12782, metadata !DIExpression()), !dbg !12783
  call void @llvm.dbg.declare(metadata i32* %3, metadata !12784, metadata !DIExpression()), !dbg !12785
  %4 = load i32, i32* @slice_ticks, align 4, !dbg !12786
  store i32 %4, i32* %3, align 4, !dbg !12785
  %5 = load i32, i32* %3, align 4, !dbg !12787
  ret i32 %5, !dbg !12788
}

; Function Attrs: noinline nounwind optnone
define dso_local void @k_sched_time_slice_set(i32 noundef %0, i32 noundef %1) #1 !dbg !12789 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca %union.anon.68, align 4
  %7 = alloca %struct.k_spinlock.13*, align 4
  %8 = alloca %union.anon.68, align 4
  %9 = alloca %struct.k_spinlock.13*, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca %union.anon.68, align 4
  %13 = alloca %union.anon.68, align 4
  store i32 %0, i32* %10, align 4
  call void @llvm.dbg.declare(metadata i32* %10, metadata !12792, metadata !DIExpression()), !dbg !12793
  store i32 %1, i32* %11, align 4
  call void @llvm.dbg.declare(metadata i32* %11, metadata !12794, metadata !DIExpression()), !dbg !12795
  call void @llvm.dbg.declare(metadata %union.anon.68* %12, metadata !12796, metadata !DIExpression()), !dbg !12802
  %14 = bitcast %union.anon.68* %12 to i8*, !dbg !12802
  call void @llvm.memset.p0i8.i32(i8* align 4 %14, i8 0, i32 4, i1 false), !dbg !12802
  call void @llvm.dbg.declare(metadata %union.anon.68* %13, metadata !12803, metadata !DIExpression()), !dbg !12802
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %9, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %9, metadata !12804, metadata !DIExpression()) #9, !dbg !12809
  %15 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %9, align 4, !dbg !12811
  call void @llvm.dbg.declare(metadata %union.anon.68* %8, metadata !12812, metadata !DIExpression()) #9, !dbg !12813
  call void @llvm.dbg.declare(metadata i32* %3, metadata !12814, metadata !DIExpression()) #9, !dbg !12816
  call void @llvm.dbg.declare(metadata i32* %4, metadata !12818, metadata !DIExpression()) #9, !dbg !12819
  %16 = call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #9, !dbg !12820, !srcloc !12821
  %17 = extractvalue { i32, i32 } %16, 0, !dbg !12820
  %18 = extractvalue { i32, i32 } %16, 1, !dbg !12820
  store i32 %17, i32* %3, align 4, !dbg !12820
  store i32 %18, i32* %4, align 4, !dbg !12820
  %19 = load i32, i32* %3, align 4, !dbg !12822
  %20 = getelementptr inbounds %union.anon.68, %union.anon.68* %8, i32 0, i32 0, !dbg !12823
  store i32 %19, i32* %20, align 4, !dbg !12824
  %21 = getelementptr inbounds %union.anon.68, %union.anon.68* %8, i32 0, i32 0, !dbg !12825
  %22 = load i32, i32* %21, align 4, !dbg !12825
  %23 = getelementptr inbounds %union.anon.68, %union.anon.68* %13, i32 0, i32 0, !dbg !12802
  store i32 %22, i32* %23, align 4, !dbg !12802
  br label %24, !dbg !12802

24:                                               ; preds = %45, %2
  %25 = getelementptr inbounds %union.anon.68, %union.anon.68* %12, i32 0, i32 0, !dbg !12826
  %26 = load i32, i32* %25, align 4, !dbg !12826
  %27 = icmp ne i32 %26, 0, !dbg !12826
  %28 = xor i1 %27, true, !dbg !12826
  br i1 %28, label %29, label %56, !dbg !12802

29:                                               ; preds = %24
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !12828
  %30 = load i32, i32* %10, align 4, !dbg !12830
  %31 = call i32 @k_ms_to_ticks_ceil32(i32 noundef %30) #10, !dbg !12831
  store i32 %31, i32* @slice_ticks, align 4, !dbg !12832
  %32 = load i32, i32* %10, align 4, !dbg !12833
  %33 = icmp sgt i32 %32, 0, !dbg !12835
  br i1 %33, label %34, label %42, !dbg !12836

34:                                               ; preds = %29
  %35 = load i32, i32* @slice_ticks, align 4, !dbg !12837
  %36 = icmp sgt i32 2, %35, !dbg !12837
  br i1 %36, label %37, label %38, !dbg !12837

37:                                               ; preds = %34
  br label %40, !dbg !12837

38:                                               ; preds = %34
  %39 = load i32, i32* @slice_ticks, align 4, !dbg !12837
  br label %40, !dbg !12837

40:                                               ; preds = %38, %37
  %41 = phi i32 [ 2, %37 ], [ %39, %38 ], !dbg !12837
  store i32 %41, i32* @slice_ticks, align 4, !dbg !12839
  br label %42, !dbg !12840

42:                                               ; preds = %40, %29
  %43 = load i32, i32* %11, align 4, !dbg !12841
  store i32 %43, i32* @slice_max_prio, align 4, !dbg !12842
  %44 = load %struct.k_thread.180*, %struct.k_thread.180** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12843
  call void @z_reset_time_slice(%struct.k_thread.180* noundef %44) #10, !dbg !12844
  br label %45, !dbg !12845

45:                                               ; preds = %42
  %46 = getelementptr inbounds %union.anon.68, %union.anon.68* %13, i32 0, i32 0, !dbg !12826
  %47 = bitcast i32* %46 to [1 x i32]*, !dbg !12826
  %48 = load [1 x i32], [1 x i32]* %47, align 4, !dbg !12826
  %49 = getelementptr inbounds %union.anon.68, %union.anon.68* %6, i32 0, i32 0
  %50 = bitcast i32* %49 to [1 x i32]*
  store [1 x i32] %48, [1 x i32]* %50, align 4
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %7, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %7, metadata !12846, metadata !DIExpression()) #9, !dbg !12850
  call void @llvm.dbg.declare(metadata %union.anon.68* %6, metadata !12852, metadata !DIExpression()) #9, !dbg !12853
  %51 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %7, align 4, !dbg !12854
  %52 = getelementptr inbounds %union.anon.68, %union.anon.68* %6, i32 0, i32 0, !dbg !12855
  %53 = load i32, i32* %52, align 4, !dbg !12855
  store i32 %53, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !12856, metadata !DIExpression()) #9, !dbg !12858
  %54 = load i32, i32* %5, align 4, !dbg !12860
  call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %54) #9, !dbg !12861, !srcloc !12862
  %55 = getelementptr inbounds %union.anon.68, %union.anon.68* %12, i32 0, i32 0, !dbg !12826
  store i32 1, i32* %55, align 4, !dbg !12826
  br label %24, !dbg !12826, !llvm.loop !12863

56:                                               ; preds = %24
  ret void, !dbg !12865
}

; Function Attrs: noinline nounwind optnone
define internal i32 @k_ms_to_ticks_ceil32(i32 noundef %0) #1 !dbg !12866 {
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i8, align 1
  %7 = alloca i8, align 1
  %8 = alloca i8, align 1
  %9 = alloca i8, align 1
  %10 = alloca i8, align 1
  %11 = alloca i8, align 1
  %12 = alloca i64, align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  store i32 %0, i32* %14, align 4
  call void @llvm.dbg.declare(metadata i32* %14, metadata !12869, metadata !DIExpression()), !dbg !12870
  %15 = load i32, i32* %14, align 4, !dbg !12871
  %16 = zext i32 %15 to i64, !dbg !12871
  store i64 %16, i64* %3, align 8
  call void @llvm.dbg.declare(metadata i64* %3, metadata !12872, metadata !DIExpression()), !dbg !12874
  store i32 1000, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !12876, metadata !DIExpression()), !dbg !12877
  store i32 10000, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !12878, metadata !DIExpression()), !dbg !12879
  store i8 1, i8* %6, align 1
  call void @llvm.dbg.declare(metadata i8* %6, metadata !12880, metadata !DIExpression()), !dbg !12881
  store i8 1, i8* %7, align 1
  call void @llvm.dbg.declare(metadata i8* %7, metadata !12882, metadata !DIExpression()), !dbg !12883
  store i8 1, i8* %8, align 1
  call void @llvm.dbg.declare(metadata i8* %8, metadata !12884, metadata !DIExpression()), !dbg !12885
  store i8 0, i8* %9, align 1
  call void @llvm.dbg.declare(metadata i8* %9, metadata !12886, metadata !DIExpression()), !dbg !12887
  call void @llvm.dbg.declare(metadata i8* %10, metadata !12888, metadata !DIExpression()), !dbg !12889
  %17 = load i8, i8* %6, align 1, !dbg !12890
  %18 = trunc i8 %17 to i1, !dbg !12890
  br i1 %18, label %19, label %28, !dbg !12891

19:                                               ; preds = %1
  %20 = load i32, i32* %5, align 4, !dbg !12892
  %21 = load i32, i32* %4, align 4, !dbg !12893
  %22 = icmp ugt i32 %20, %21, !dbg !12894
  br i1 %22, label %23, label %28, !dbg !12895

23:                                               ; preds = %19
  %24 = load i32, i32* %5, align 4, !dbg !12896
  %25 = load i32, i32* %4, align 4, !dbg !12897
  %26 = urem i32 %24, %25, !dbg !12898
  %27 = icmp eq i32 %26, 0, !dbg !12899
  br label %28

28:                                               ; preds = %23, %19, %1
  %29 = phi i1 [ false, %19 ], [ false, %1 ], [ %27, %23 ], !dbg !12900
  %30 = zext i1 %29 to i8, !dbg !12889
  store i8 %30, i8* %10, align 1, !dbg !12889
  call void @llvm.dbg.declare(metadata i8* %11, metadata !12901, metadata !DIExpression()), !dbg !12902
  %31 = load i8, i8* %6, align 1, !dbg !12903
  %32 = trunc i8 %31 to i1, !dbg !12903
  br i1 %32, label %33, label %42, !dbg !12904

33:                                               ; preds = %28
  %34 = load i32, i32* %4, align 4, !dbg !12905
  %35 = load i32, i32* %5, align 4, !dbg !12906
  %36 = icmp ugt i32 %34, %35, !dbg !12907
  br i1 %36, label %37, label %42, !dbg !12908

37:                                               ; preds = %33
  %38 = load i32, i32* %4, align 4, !dbg !12909
  %39 = load i32, i32* %5, align 4, !dbg !12910
  %40 = urem i32 %38, %39, !dbg !12911
  %41 = icmp eq i32 %40, 0, !dbg !12912
  br label %42

42:                                               ; preds = %37, %33, %28
  %43 = phi i1 [ false, %33 ], [ false, %28 ], [ %41, %37 ], !dbg !12900
  %44 = zext i1 %43 to i8, !dbg !12902
  store i8 %44, i8* %11, align 1, !dbg !12902
  %45 = load i32, i32* %4, align 4, !dbg !12913
  %46 = load i32, i32* %5, align 4, !dbg !12915
  %47 = icmp eq i32 %45, %46, !dbg !12916
  br i1 %47, label %48, label %59, !dbg !12917

48:                                               ; preds = %42
  %49 = load i8, i8* %7, align 1, !dbg !12918
  %50 = trunc i8 %49 to i1, !dbg !12918
  br i1 %50, label %51, label %55, !dbg !12918

51:                                               ; preds = %48
  %52 = load i64, i64* %3, align 8, !dbg !12920
  %53 = trunc i64 %52 to i32, !dbg !12921
  %54 = zext i32 %53 to i64, !dbg !12922
  br label %57, !dbg !12918

55:                                               ; preds = %48
  %56 = load i64, i64* %3, align 8, !dbg !12923
  br label %57, !dbg !12918

57:                                               ; preds = %55, %51
  %58 = phi i64 [ %54, %51 ], [ %56, %55 ], !dbg !12918
  store i64 %58, i64* %2, align 8, !dbg !12924
  br label %196, !dbg !12924

59:                                               ; preds = %42
  call void @llvm.dbg.declare(metadata i64* %12, metadata !12925, metadata !DIExpression()), !dbg !12926
  store i64 0, i64* %12, align 8, !dbg !12926
  %60 = load i8, i8* %10, align 1, !dbg !12927
  %61 = trunc i8 %60 to i1, !dbg !12927
  br i1 %61, label %87, label %62, !dbg !12929

62:                                               ; preds = %59
  call void @llvm.dbg.declare(metadata i32* %13, metadata !12930, metadata !DIExpression()), !dbg !12932
  %63 = load i8, i8* %11, align 1, !dbg !12933
  %64 = trunc i8 %63 to i1, !dbg !12933
  br i1 %64, label %65, label %69, !dbg !12933

65:                                               ; preds = %62
  %66 = load i32, i32* %4, align 4, !dbg !12934
  %67 = load i32, i32* %5, align 4, !dbg !12935
  %68 = udiv i32 %66, %67, !dbg !12936
  br label %71, !dbg !12933

69:                                               ; preds = %62
  %70 = load i32, i32* %4, align 4, !dbg !12937
  br label %71, !dbg !12933

71:                                               ; preds = %69, %65
  %72 = phi i32 [ %68, %65 ], [ %70, %69 ], !dbg !12933
  store i32 %72, i32* %13, align 4, !dbg !12932
  %73 = load i8, i8* %8, align 1, !dbg !12938
  %74 = trunc i8 %73 to i1, !dbg !12938
  br i1 %74, label %75, label %79, !dbg !12940

75:                                               ; preds = %71
  %76 = load i32, i32* %13, align 4, !dbg !12941
  %77 = sub i32 %76, 1, !dbg !12943
  %78 = zext i32 %77 to i64, !dbg !12941
  store i64 %78, i64* %12, align 8, !dbg !12944
  br label %79, !dbg !12945

79:                                               ; preds = %75, %71
  %80 = load i8, i8* %9, align 1, !dbg !12946
  %81 = trunc i8 %80 to i1, !dbg !12946
  br i1 %81, label %82, label %86, !dbg !12948

82:                                               ; preds = %79
  %83 = load i32, i32* %13, align 4, !dbg !12949
  %84 = udiv i32 %83, 2, !dbg !12951
  %85 = zext i32 %84 to i64, !dbg !12949
  store i64 %85, i64* %12, align 8, !dbg !12952
  br label %86, !dbg !12953

86:                                               ; preds = %82, %79
  br label %87, !dbg !12954

87:                                               ; preds = %86, %59
  %88 = load i8, i8* %11, align 1, !dbg !12955
  %89 = trunc i8 %88 to i1, !dbg !12955
  br i1 %89, label %90, label %115, !dbg !12957

90:                                               ; preds = %87
  %91 = load i64, i64* %12, align 8, !dbg !12958
  %92 = load i64, i64* %3, align 8, !dbg !12960
  %93 = add i64 %92, %91, !dbg !12960
  store i64 %93, i64* %3, align 8, !dbg !12960
  %94 = load i8, i8* %7, align 1, !dbg !12961
  %95 = trunc i8 %94 to i1, !dbg !12961
  br i1 %95, label %96, label %107, !dbg !12963

96:                                               ; preds = %90
  %97 = load i64, i64* %3, align 8, !dbg !12964
  %98 = icmp ult i64 %97, 4294967296, !dbg !12965
  br i1 %98, label %99, label %107, !dbg !12966

99:                                               ; preds = %96
  %100 = load i64, i64* %3, align 8, !dbg !12967
  %101 = trunc i64 %100 to i32, !dbg !12969
  %102 = load i32, i32* %4, align 4, !dbg !12970
  %103 = load i32, i32* %5, align 4, !dbg !12971
  %104 = udiv i32 %102, %103, !dbg !12972
  %105 = udiv i32 %101, %104, !dbg !12973
  %106 = zext i32 %105 to i64, !dbg !12974
  store i64 %106, i64* %2, align 8, !dbg !12975
  br label %196, !dbg !12975

107:                                              ; preds = %96, %90
  %108 = load i64, i64* %3, align 8, !dbg !12976
  %109 = load i32, i32* %4, align 4, !dbg !12978
  %110 = zext i32 %109 to i64, !dbg !12979
  %111 = load i32, i32* %5, align 4, !dbg !12980
  %112 = zext i32 %111 to i64, !dbg !12980
  %113 = udiv i64 %110, %112, !dbg !12981
  %114 = udiv i64 %108, %113, !dbg !12982
  store i64 %114, i64* %2, align 8, !dbg !12983
  br label %196, !dbg !12983

115:                                              ; preds = %87
  %116 = load i8, i8* %10, align 1, !dbg !12984
  %117 = trunc i8 %116 to i1, !dbg !12984
  br i1 %117, label %118, label %137, !dbg !12986

118:                                              ; preds = %115
  %119 = load i8, i8* %7, align 1, !dbg !12987
  %120 = trunc i8 %119 to i1, !dbg !12987
  br i1 %120, label %121, label %129, !dbg !12990

121:                                              ; preds = %118
  %122 = load i64, i64* %3, align 8, !dbg !12991
  %123 = trunc i64 %122 to i32, !dbg !12993
  %124 = load i32, i32* %5, align 4, !dbg !12994
  %125 = load i32, i32* %4, align 4, !dbg !12995
  %126 = udiv i32 %124, %125, !dbg !12996
  %127 = mul i32 %123, %126, !dbg !12997
  %128 = zext i32 %127 to i64, !dbg !12998
  store i64 %128, i64* %2, align 8, !dbg !12999
  br label %196, !dbg !12999

129:                                              ; preds = %118
  %130 = load i64, i64* %3, align 8, !dbg !13000
  %131 = load i32, i32* %5, align 4, !dbg !13002
  %132 = zext i32 %131 to i64, !dbg !13003
  %133 = load i32, i32* %4, align 4, !dbg !13004
  %134 = zext i32 %133 to i64, !dbg !13004
  %135 = udiv i64 %132, %134, !dbg !13005
  %136 = mul i64 %130, %135, !dbg !13006
  store i64 %136, i64* %2, align 8, !dbg !13007
  br label %196, !dbg !13007

137:                                              ; preds = %115
  %138 = load i8, i8* %7, align 1, !dbg !13008
  %139 = trunc i8 %138 to i1, !dbg !13008
  br i1 %139, label %140, label %152, !dbg !13011

140:                                              ; preds = %137
  %141 = load i64, i64* %3, align 8, !dbg !13012
  %142 = load i32, i32* %5, align 4, !dbg !13014
  %143 = zext i32 %142 to i64, !dbg !13014
  %144 = mul i64 %141, %143, !dbg !13015
  %145 = load i64, i64* %12, align 8, !dbg !13016
  %146 = add i64 %144, %145, !dbg !13017
  %147 = load i32, i32* %4, align 4, !dbg !13018
  %148 = zext i32 %147 to i64, !dbg !13018
  %149 = udiv i64 %146, %148, !dbg !13019
  %150 = trunc i64 %149 to i32, !dbg !13020
  %151 = zext i32 %150 to i64, !dbg !13020
  store i64 %151, i64* %2, align 8, !dbg !13021
  br label %196, !dbg !13021

152:                                              ; preds = %137
  %153 = load i8, i8* %6, align 1, !dbg !13022
  %154 = trunc i8 %153 to i1, !dbg !13022
  br i1 %154, label %155, label %175, !dbg !13024

155:                                              ; preds = %152
  %156 = load i32, i32* %4, align 4, !dbg !13025
  %157 = zext i32 %156 to i64, !dbg !13025
  %158 = mul i64 31536000, %157, !dbg !13025
  %159 = add i64 %158, 4294967294, !dbg !13025
  %160 = udiv i64 %159, 4294967295, !dbg !13025
  %161 = load i32, i32* %5, align 4, !dbg !13025
  %162 = zext i32 %161 to i64, !dbg !13025
  %163 = mul i64 %160, %162, !dbg !13025
  %164 = icmp ule i64 %163, 4294967295, !dbg !13025
  br i1 %164, label %165, label %175, !dbg !13026

165:                                              ; preds = %155
  %166 = load i64, i64* %3, align 8, !dbg !13027
  %167 = load i32, i32* %5, align 4, !dbg !13029
  %168 = zext i32 %167 to i64, !dbg !13029
  %169 = mul i64 %166, %168, !dbg !13030
  %170 = load i64, i64* %12, align 8, !dbg !13031
  %171 = add i64 %169, %170, !dbg !13032
  %172 = load i32, i32* %4, align 4, !dbg !13033
  %173 = zext i32 %172 to i64, !dbg !13033
  %174 = udiv i64 %171, %173, !dbg !13034
  store i64 %174, i64* %2, align 8, !dbg !13035
  br label %196, !dbg !13035

175:                                              ; preds = %155, %152
  %176 = load i64, i64* %3, align 8, !dbg !13036
  %177 = load i32, i32* %4, align 4, !dbg !13038
  %178 = zext i32 %177 to i64, !dbg !13038
  %179 = udiv i64 %176, %178, !dbg !13039
  %180 = load i32, i32* %5, align 4, !dbg !13040
  %181 = zext i32 %180 to i64, !dbg !13040
  %182 = mul i64 %179, %181, !dbg !13041
  %183 = load i64, i64* %3, align 8, !dbg !13042
  %184 = load i32, i32* %4, align 4, !dbg !13043
  %185 = zext i32 %184 to i64, !dbg !13043
  %186 = urem i64 %183, %185, !dbg !13044
  %187 = load i32, i32* %5, align 4, !dbg !13045
  %188 = zext i32 %187 to i64, !dbg !13045
  %189 = mul i64 %186, %188, !dbg !13046
  %190 = load i64, i64* %12, align 8, !dbg !13047
  %191 = add i64 %189, %190, !dbg !13048
  %192 = load i32, i32* %4, align 4, !dbg !13049
  %193 = zext i32 %192 to i64, !dbg !13049
  %194 = udiv i64 %191, %193, !dbg !13050
  %195 = add i64 %182, %194, !dbg !13051
  store i64 %195, i64* %2, align 8, !dbg !13052
  br label %196, !dbg !13052

196:                                              ; preds = %57, %99, %107, %121, %129, %140, %165, %175
  %197 = load i64, i64* %2, align 8, !dbg !13053
  %198 = trunc i64 %197 to i32, !dbg !13054
  ret i32 %198, !dbg !13055
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_time_slice(i32 noundef %0) #1 !dbg !13056 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca %union.anon.68, align 4
  %7 = alloca %struct.k_spinlock.13*, align 4
  %8 = alloca %union.anon.68, align 4
  %9 = alloca %struct.k_spinlock.13*, align 4
  %10 = alloca %union.anon.68, align 4
  %11 = alloca %struct.k_spinlock.13*, align 4
  %12 = alloca i32, align 4
  %13 = alloca %union.anon.68, align 4
  %14 = alloca %union.anon.68, align 4
  store i32 %0, i32* %12, align 4
  call void @llvm.dbg.declare(metadata i32* %12, metadata !13057, metadata !DIExpression()), !dbg !13058
  call void @llvm.dbg.declare(metadata %union.anon.68* %13, metadata !13059, metadata !DIExpression()), !dbg !13060
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %11, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %11, metadata !12804, metadata !DIExpression()) #9, !dbg !13061
  %15 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %11, align 4, !dbg !13063
  call void @llvm.dbg.declare(metadata %union.anon.68* %10, metadata !12812, metadata !DIExpression()) #9, !dbg !13064
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12814, metadata !DIExpression()) #9, !dbg !13065
  call void @llvm.dbg.declare(metadata i32* %3, metadata !12818, metadata !DIExpression()) #9, !dbg !13067
  %16 = call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #9, !dbg !13068, !srcloc !12821
  %17 = extractvalue { i32, i32 } %16, 0, !dbg !13068
  %18 = extractvalue { i32, i32 } %16, 1, !dbg !13068
  store i32 %17, i32* %2, align 4, !dbg !13068
  store i32 %18, i32* %3, align 4, !dbg !13068
  %19 = load i32, i32* %2, align 4, !dbg !13069
  %20 = getelementptr inbounds %union.anon.68, %union.anon.68* %10, i32 0, i32 0, !dbg !13070
  store i32 %19, i32* %20, align 4, !dbg !13071
  %21 = getelementptr inbounds %union.anon.68, %union.anon.68* %10, i32 0, i32 0, !dbg !13072
  %22 = load i32, i32* %21, align 4, !dbg !13072
  %23 = getelementptr inbounds %union.anon.68, %union.anon.68* %13, i32 0, i32 0, !dbg !13073
  store i32 %22, i32* %23, align 4, !dbg !13073
  %24 = load %struct.k_thread.180*, %struct.k_thread.180** @pending_current, align 4, !dbg !13074
  %25 = load %struct.k_thread.180*, %struct.k_thread.180** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13076
  %26 = icmp eq %struct.k_thread.180* %24, %25, !dbg !13077
  br i1 %26, label %27, label %38, !dbg !13078

27:                                               ; preds = %1
  %28 = load %struct.k_thread.180*, %struct.k_thread.180** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13079
  call void @z_reset_time_slice(%struct.k_thread.180* noundef %28) #10, !dbg !13081
  %29 = getelementptr inbounds %union.anon.68, %union.anon.68* %13, i32 0, i32 0, !dbg !13082
  %30 = bitcast i32* %29 to [1 x i32]*, !dbg !13082
  %31 = load [1 x i32], [1 x i32]* %30, align 4, !dbg !13082
  %32 = getelementptr inbounds %union.anon.68, %union.anon.68* %6, i32 0, i32 0
  %33 = bitcast i32* %32 to [1 x i32]*
  store [1 x i32] %31, [1 x i32]* %33, align 4
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %7, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %7, metadata !12846, metadata !DIExpression()) #9, !dbg !13083
  call void @llvm.dbg.declare(metadata %union.anon.68* %6, metadata !12852, metadata !DIExpression()) #9, !dbg !13085
  %34 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %7, align 4, !dbg !13086
  %35 = getelementptr inbounds %union.anon.68, %union.anon.68* %6, i32 0, i32 0, !dbg !13087
  %36 = load i32, i32* %35, align 4, !dbg !13087
  store i32 %36, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !12856, metadata !DIExpression()) #9, !dbg !13088
  %37 = load i32, i32* %5, align 4, !dbg !13090
  call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %37) #9, !dbg !13091, !srcloc !12862
  br label %73, !dbg !13092

38:                                               ; preds = %1
  store %struct.k_thread.180* null, %struct.k_thread.180** @pending_current, align 4, !dbg !13093
  %39 = load %struct.k_thread.180*, %struct.k_thread.180** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13094
  %40 = call i32 @slice_time(%struct.k_thread.180* noundef %39) #10, !dbg !13096
  %41 = icmp ne i32 %40, 0, !dbg !13096
  br i1 %41, label %42, label %62, !dbg !13097

42:                                               ; preds = %38
  %43 = load %struct.k_thread.180*, %struct.k_thread.180** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13098
  %44 = call zeroext i1 @sliceable(%struct.k_thread.180* noundef %43) #10, !dbg !13099
  br i1 %44, label %45, label %62, !dbg !13100

45:                                               ; preds = %42
  %46 = load i32, i32* %12, align 4, !dbg !13101
  %47 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !13104
  %48 = icmp sge i32 %46, %47, !dbg !13105
  br i1 %48, label %49, label %57, !dbg !13106

49:                                               ; preds = %45
  %50 = getelementptr inbounds %union.anon.68, %union.anon.68* %13, i32 0, i32 0, !dbg !13107
  %51 = bitcast i32* %50 to [1 x i32]*, !dbg !13107
  %52 = load [1 x i32], [1 x i32]* %51, align 4, !dbg !13107
  %53 = call i32 @slice_expired_locked([1 x i32] %52) #10, !dbg !13107
  %54 = getelementptr inbounds %union.anon.68, %union.anon.68* %14, i32 0, i32 0, !dbg !13107
  store i32 %53, i32* %54, align 4, !dbg !13107
  %55 = bitcast %union.anon.68* %13 to i8*, !dbg !13107
  %56 = bitcast %union.anon.68* %14 to i8*, !dbg !13107
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %55, i8* align 4 %56, i32 4, i1 false), !dbg !13107
  br label %61, !dbg !13109

57:                                               ; preds = %45
  %58 = load i32, i32* %12, align 4, !dbg !13110
  %59 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !13112
  %60 = sub nsw i32 %59, %58, !dbg !13112
  store i32 %60, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !13112
  br label %61

61:                                               ; preds = %57, %49
  br label %63, !dbg !13113

62:                                               ; preds = %42, %38
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !13114
  br label %63

63:                                               ; preds = %62, %61
  %64 = getelementptr inbounds %union.anon.68, %union.anon.68* %13, i32 0, i32 0, !dbg !13116
  %65 = bitcast i32* %64 to [1 x i32]*, !dbg !13116
  %66 = load [1 x i32], [1 x i32]* %65, align 4, !dbg !13116
  %67 = getelementptr inbounds %union.anon.68, %union.anon.68* %8, i32 0, i32 0
  %68 = bitcast i32* %67 to [1 x i32]*
  store [1 x i32] %66, [1 x i32]* %68, align 4
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %9, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %9, metadata !12846, metadata !DIExpression()) #9, !dbg !13117
  call void @llvm.dbg.declare(metadata %union.anon.68* %8, metadata !12852, metadata !DIExpression()) #9, !dbg !13119
  %69 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %9, align 4, !dbg !13120
  %70 = getelementptr inbounds %union.anon.68, %union.anon.68* %8, i32 0, i32 0, !dbg !13121
  %71 = load i32, i32* %70, align 4, !dbg !13121
  store i32 %71, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !12856, metadata !DIExpression()) #9, !dbg !13122
  %72 = load i32, i32* %4, align 4, !dbg !13124
  call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %72) #9, !dbg !13125, !srcloc !12862
  br label %73, !dbg !13126

73:                                               ; preds = %63, %27
  ret void, !dbg !13126
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @sliceable(%struct.k_thread.180* noundef %0) #1 !dbg !13127 {
  %2 = alloca %struct.k_thread.180*, align 4
  %3 = alloca i8, align 1
  store %struct.k_thread.180* %0, %struct.k_thread.180** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.180** %2, metadata !13130, metadata !DIExpression()), !dbg !13131
  call void @llvm.dbg.declare(metadata i8* %3, metadata !13132, metadata !DIExpression()), !dbg !13133
  %4 = load %struct.k_thread.180*, %struct.k_thread.180** %2, align 4, !dbg !13134
  %5 = call i32 @is_preempt(%struct.k_thread.180* noundef %4) #10, !dbg !13135
  %6 = icmp ne i32 %5, 0, !dbg !13135
  br i1 %6, label %7, label %24, !dbg !13136

7:                                                ; preds = %1
  %8 = load %struct.k_thread.180*, %struct.k_thread.180** %2, align 4, !dbg !13137
  %9 = call zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread.180* noundef %8) #10, !dbg !13138
  br i1 %9, label %24, label %10, !dbg !13139

10:                                               ; preds = %7
  %11 = load %struct.k_thread.180*, %struct.k_thread.180** %2, align 4, !dbg !13140
  %12 = getelementptr inbounds %struct.k_thread.180, %struct.k_thread.180* %11, i32 0, i32 0, !dbg !13141
  %13 = getelementptr inbounds %struct._thread_base.173, %struct._thread_base.173* %12, i32 0, i32 4, !dbg !13142
  %14 = bitcast %union.anon.2.7* %13 to %struct.device_state.293*, !dbg !13142
  %15 = getelementptr inbounds %struct.device_state.293, %struct.device_state.293* %14, i32 0, i32 0, !dbg !13142
  %16 = load i8, i8* %15, align 2, !dbg !13142
  %17 = sext i8 %16 to i32, !dbg !13140
  %18 = load i32, i32* @slice_max_prio, align 4, !dbg !13143
  %19 = call zeroext i1 @z_is_prio_higher(i32 noundef %17, i32 noundef %18) #10, !dbg !13144
  br i1 %19, label %24, label %20, !dbg !13145

20:                                               ; preds = %10
  %21 = load %struct.k_thread.180*, %struct.k_thread.180** %2, align 4, !dbg !13146
  %22 = call zeroext i1 @z_is_idle_thread_object(%struct.k_thread.180* noundef %21) #10, !dbg !13147
  %23 = xor i1 %22, true, !dbg !13148
  br label %24

24:                                               ; preds = %20, %10, %7, %1
  %25 = phi i1 [ false, %10 ], [ false, %7 ], [ false, %1 ], [ %23, %20 ], !dbg !13149
  %26 = zext i1 %25 to i8, !dbg !13133
  store i8 %26, i8* %3, align 1, !dbg !13133
  %27 = load i8, i8* %3, align 1, !dbg !13150
  %28 = trunc i8 %27 to i1, !dbg !13150
  ret i1 %28, !dbg !13151
}

; Function Attrs: noinline nounwind optnone
define internal i32 @slice_expired_locked([1 x i32] %0) #1 !dbg !13152 {
  %2 = alloca %union.anon.68, align 4
  %3 = alloca %union.anon.68, align 4
  %4 = alloca %struct.k_thread.180*, align 4
  %5 = getelementptr inbounds %union.anon.68, %union.anon.68* %3, i32 0, i32 0
  %6 = bitcast i32* %5 to [1 x i32]*
  store [1 x i32] %0, [1 x i32]* %6, align 4
  call void @llvm.dbg.declare(metadata %union.anon.68* %3, metadata !13155, metadata !DIExpression()), !dbg !13156
  call void @llvm.dbg.declare(metadata %struct.k_thread.180** %4, metadata !13157, metadata !DIExpression()), !dbg !13158
  %7 = load %struct.k_thread.180*, %struct.k_thread.180** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13159
  store %struct.k_thread.180* %7, %struct.k_thread.180** %4, align 4, !dbg !13158
  %8 = load %struct.k_thread.180*, %struct.k_thread.180** %4, align 4, !dbg !13160
  %9 = call zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread.180* noundef %8) #10, !dbg !13162
  br i1 %9, label %12, label %10, !dbg !13163

10:                                               ; preds = %1
  %11 = load %struct.k_thread.180*, %struct.k_thread.180** %4, align 4, !dbg !13164
  call void @move_thread_to_end_of_prio_q(%struct.k_thread.180* noundef %11) #10, !dbg !13166
  br label %12, !dbg !13167

12:                                               ; preds = %10, %1
  %13 = load %struct.k_thread.180*, %struct.k_thread.180** %4, align 4, !dbg !13168
  call void @z_reset_time_slice(%struct.k_thread.180* noundef %13) #10, !dbg !13169
  %14 = bitcast %union.anon.68* %2 to i8*, !dbg !13170
  %15 = bitcast %union.anon.68* %3 to i8*, !dbg !13170
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %14, i8* align 4 %15, i32 4, i1 false), !dbg !13170
  %16 = getelementptr inbounds %union.anon.68, %union.anon.68* %2, i32 0, i32 0, !dbg !13171
  %17 = load i32, i32* %16, align 4, !dbg !13171
  ret i32 %17, !dbg !13171
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread.180* noundef %0) #1 !dbg !13172 {
  %2 = alloca %struct.k_thread.180*, align 4
  %3 = alloca i8, align 1
  store %struct.k_thread.180* %0, %struct.k_thread.180** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.180** %2, metadata !13173, metadata !DIExpression()), !dbg !13174
  call void @llvm.dbg.declare(metadata i8* %3, metadata !13175, metadata !DIExpression()), !dbg !13176
  %4 = load %struct.k_thread.180*, %struct.k_thread.180** %2, align 4, !dbg !13177
  %5 = getelementptr inbounds %struct.k_thread.180, %struct.k_thread.180* %4, i32 0, i32 0, !dbg !13178
  %6 = getelementptr inbounds %struct._thread_base.173, %struct._thread_base.173* %5, i32 0, i32 3, !dbg !13179
  %7 = load i8, i8* %6, align 1, !dbg !13179
  store i8 %7, i8* %3, align 1, !dbg !13176
  %8 = load i8, i8* %3, align 1, !dbg !13180
  %9 = zext i8 %8 to i32, !dbg !13180
  %10 = and i32 %9, 31, !dbg !13181
  %11 = icmp ne i32 %10, 0, !dbg !13182
  ret i1 %11, !dbg !13183
}

; Function Attrs: noinline nounwind optnone
define internal void @move_thread_to_end_of_prio_q(%struct.k_thread.180* noundef %0) #1 !dbg !13184 {
  %2 = alloca %struct._dnode.168*, align 4
  %3 = alloca %struct.k_thread.180*, align 4
  %4 = alloca %struct.k_thread.180*, align 4
  %5 = alloca %struct.k_thread.180*, align 4
  %6 = alloca %struct.k_thread.180*, align 4
  %7 = alloca %struct.k_thread.180*, align 4
  %8 = alloca %struct.k_thread.180*, align 4
  %9 = alloca %struct.k_thread.180*, align 4
  %10 = alloca %struct.k_thread.180*, align 4
  %11 = alloca %struct.k_thread.180*, align 4
  store %struct.k_thread.180* %0, %struct.k_thread.180** %11, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.180** %11, metadata !13185, metadata !DIExpression()), !dbg !13186
  %12 = load %struct.k_thread.180*, %struct.k_thread.180** %11, align 4, !dbg !13187
  %13 = call zeroext i1 @z_is_thread_queued(%struct.k_thread.180* noundef %12) #10, !dbg !13189
  br i1 %13, label %14, label %31, !dbg !13190

14:                                               ; preds = %1
  %15 = load %struct.k_thread.180*, %struct.k_thread.180** %11, align 4, !dbg !13191
  store %struct.k_thread.180* %15, %struct.k_thread.180** %10, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.180** %10, metadata !13193, metadata !DIExpression()) #9, !dbg !13195
  %16 = load %struct.k_thread.180*, %struct.k_thread.180** %10, align 4, !dbg !13197
  %17 = getelementptr inbounds %struct.k_thread.180, %struct.k_thread.180* %16, i32 0, i32 0, !dbg !13198
  %18 = getelementptr inbounds %struct._thread_base.173, %struct._thread_base.173* %17, i32 0, i32 3, !dbg !13199
  %19 = load i8, i8* %18, align 1, !dbg !13200
  %20 = zext i8 %19 to i32, !dbg !13200
  %21 = and i32 %20, -129, !dbg !13200
  %22 = trunc i32 %21 to i8, !dbg !13200
  store i8 %22, i8* %18, align 1, !dbg !13200
  %23 = load %struct.k_thread.180*, %struct.k_thread.180** %10, align 4, !dbg !13201
  %24 = call zeroext i1 @should_queue_thread(%struct.k_thread.180* noundef %23) #13, !dbg !13203
  br i1 %24, label %25, label %30, !dbg !13204

25:                                               ; preds = %14
  %26 = load %struct.k_thread.180*, %struct.k_thread.180** %10, align 4, !dbg !13205
  store %struct.k_thread.180* %26, %struct.k_thread.180** %8, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.180** %8, metadata !13207, metadata !DIExpression()) #9, !dbg !13209
  %27 = load %struct.k_thread.180*, %struct.k_thread.180** %8, align 4, !dbg !13211
  store %struct.k_thread.180* %27, %struct.k_thread.180** %7, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.180** %7, metadata !13212, metadata !DIExpression()), !dbg !13216
  %28 = bitcast i8* bitcast (%struct._dnode.168* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1) to i8*) to %struct._dnode.168*, !dbg !13218
  %29 = load %struct.k_thread.180*, %struct.k_thread.180** %8, align 4, !dbg !13219
  call void @z_priq_dumb_remove(%struct._dnode.168* noundef %28, %struct.k_thread.180* noundef %29) #13, !dbg !13220
  br label %30, !dbg !13221

30:                                               ; preds = %14, %25
  br label %31, !dbg !13222

31:                                               ; preds = %30, %1
  %32 = load %struct.k_thread.180*, %struct.k_thread.180** %11, align 4, !dbg !13223
  store %struct.k_thread.180* %32, %struct.k_thread.180** %9, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.180** %9, metadata !13224, metadata !DIExpression()) #9, !dbg !13226
  %33 = load %struct.k_thread.180*, %struct.k_thread.180** %9, align 4, !dbg !13228
  %34 = getelementptr inbounds %struct.k_thread.180, %struct.k_thread.180* %33, i32 0, i32 0, !dbg !13229
  %35 = getelementptr inbounds %struct._thread_base.173, %struct._thread_base.173* %34, i32 0, i32 3, !dbg !13230
  %36 = load i8, i8* %35, align 1, !dbg !13231
  %37 = zext i8 %36 to i32, !dbg !13231
  %38 = or i32 %37, 128, !dbg !13231
  %39 = trunc i32 %38 to i8, !dbg !13231
  store i8 %39, i8* %35, align 1, !dbg !13231
  %40 = load %struct.k_thread.180*, %struct.k_thread.180** %9, align 4, !dbg !13232
  %41 = call zeroext i1 @should_queue_thread(%struct.k_thread.180* noundef %40) #13, !dbg !13234
  br i1 %41, label %42, label %107, !dbg !13235

42:                                               ; preds = %31
  %43 = load %struct.k_thread.180*, %struct.k_thread.180** %9, align 4, !dbg !13236
  store %struct.k_thread.180* %43, %struct.k_thread.180** %6, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.180** %6, metadata !13238, metadata !DIExpression()) #9, !dbg !13240
  %44 = load %struct.k_thread.180*, %struct.k_thread.180** %6, align 4, !dbg !13242
  store %struct.k_thread.180* %44, %struct.k_thread.180** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.180** %5, metadata !13212, metadata !DIExpression()) #9, !dbg !13243
  %45 = load %struct.k_thread.180*, %struct.k_thread.180** %6, align 4, !dbg !13245
  store %struct._dnode.168* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode.168** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.168** %2, metadata !13246, metadata !DIExpression()) #9, !dbg !13251
  store %struct.k_thread.180* %45, %struct.k_thread.180** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.180** %3, metadata !13253, metadata !DIExpression()) #9, !dbg !13254
  call void @llvm.dbg.declare(metadata %struct.k_thread.180** %4, metadata !13255, metadata !DIExpression()) #9, !dbg !13256
  %46 = load %struct._dnode.168*, %struct._dnode.168** %2, align 4, !dbg !13257
  %47 = call %struct._dnode.168* @sys_dlist_peek_head(%struct._dnode.168* noundef %46) #13, !dbg !13257
  %48 = icmp ne %struct._dnode.168* %47, null, !dbg !13257
  br i1 %48, label %49, label %54, !dbg !13257

49:                                               ; preds = %42
  %50 = load %struct._dnode.168*, %struct._dnode.168** %2, align 4, !dbg !13257
  %51 = call %struct._dnode.168* @sys_dlist_peek_head(%struct._dnode.168* noundef %50) #13, !dbg !13257
  %52 = bitcast %struct._dnode.168* %51 to i8*, !dbg !13257
  %53 = bitcast i8* %52 to %struct.k_thread.180*, !dbg !13257
  br label %55, !dbg !13257

54:                                               ; preds = %42
  br label %55, !dbg !13257

55:                                               ; preds = %54, %49
  %56 = phi %struct.k_thread.180* [ %53, %49 ], [ null, %54 ], !dbg !13257
  store %struct.k_thread.180* %56, %struct.k_thread.180** %4, align 4, !dbg !13257
  br label %57, !dbg !13257

57:                                               ; preds = %98, %55
  %58 = load %struct.k_thread.180*, %struct.k_thread.180** %4, align 4, !dbg !13259
  %59 = icmp ne %struct.k_thread.180* %58, null, !dbg !13259
  br i1 %59, label %60, label %100, !dbg !13257

60:                                               ; preds = %57
  %61 = load %struct.k_thread.180*, %struct.k_thread.180** %3, align 4, !dbg !13261
  %62 = load %struct.k_thread.180*, %struct.k_thread.180** %4, align 4, !dbg !13264
  %63 = call i32 @z_sched_prio_cmp(%struct.k_thread.180* noundef %61, %struct.k_thread.180* noundef %62) #13, !dbg !13265
  %64 = icmp sgt i32 %63, 0, !dbg !13266
  br i1 %64, label %65, label %74, !dbg !13267

65:                                               ; preds = %60
  %66 = load %struct.k_thread.180*, %struct.k_thread.180** %4, align 4, !dbg !13268
  %67 = getelementptr inbounds %struct.k_thread.180, %struct.k_thread.180* %66, i32 0, i32 0, !dbg !13270
  %68 = getelementptr inbounds %struct._thread_base.173, %struct._thread_base.173* %67, i32 0, i32 0, !dbg !13271
  %69 = bitcast %union.anon.169* %68 to %struct._dnode.168*, !dbg !13271
  %70 = load %struct.k_thread.180*, %struct.k_thread.180** %3, align 4, !dbg !13272
  %71 = getelementptr inbounds %struct.k_thread.180, %struct.k_thread.180* %70, i32 0, i32 0, !dbg !13273
  %72 = getelementptr inbounds %struct._thread_base.173, %struct._thread_base.173* %71, i32 0, i32 0, !dbg !13274
  %73 = bitcast %union.anon.169* %72 to %struct._dnode.168*, !dbg !13274
  call void @sys_dlist_insert(%struct._dnode.168* noundef %69, %struct._dnode.168* noundef %73) #13, !dbg !13275
  br label %106, !dbg !13276

74:                                               ; preds = %60
  %75 = load %struct.k_thread.180*, %struct.k_thread.180** %4, align 4, !dbg !13259
  %76 = icmp ne %struct.k_thread.180* %75, null, !dbg !13259
  br i1 %76, label %77, label %97, !dbg !13259

77:                                               ; preds = %74
  %78 = load %struct._dnode.168*, %struct._dnode.168** %2, align 4, !dbg !13259
  %79 = load %struct.k_thread.180*, %struct.k_thread.180** %4, align 4, !dbg !13259
  %80 = getelementptr inbounds %struct.k_thread.180, %struct.k_thread.180* %79, i32 0, i32 0, !dbg !13259
  %81 = getelementptr inbounds %struct._thread_base.173, %struct._thread_base.173* %80, i32 0, i32 0, !dbg !13259
  %82 = bitcast %union.anon.169* %81 to %struct._dnode.168*, !dbg !13259
  %83 = call %struct._dnode.168* @sys_dlist_peek_next(%struct._dnode.168* noundef %78, %struct._dnode.168* noundef %82) #13, !dbg !13259
  %84 = icmp ne %struct._dnode.168* %83, null, !dbg !13259
  br i1 %84, label %85, label %94, !dbg !13259

85:                                               ; preds = %77
  %86 = load %struct._dnode.168*, %struct._dnode.168** %2, align 4, !dbg !13259
  %87 = load %struct.k_thread.180*, %struct.k_thread.180** %4, align 4, !dbg !13259
  %88 = getelementptr inbounds %struct.k_thread.180, %struct.k_thread.180* %87, i32 0, i32 0, !dbg !13259
  %89 = getelementptr inbounds %struct._thread_base.173, %struct._thread_base.173* %88, i32 0, i32 0, !dbg !13259
  %90 = bitcast %union.anon.169* %89 to %struct._dnode.168*, !dbg !13259
  %91 = call %struct._dnode.168* @sys_dlist_peek_next(%struct._dnode.168* noundef %86, %struct._dnode.168* noundef %90) #13, !dbg !13259
  %92 = bitcast %struct._dnode.168* %91 to i8*, !dbg !13259
  %93 = bitcast i8* %92 to %struct.k_thread.180*, !dbg !13259
  br label %95, !dbg !13259

94:                                               ; preds = %77
  br label %95, !dbg !13259

95:                                               ; preds = %94, %85
  %96 = phi %struct.k_thread.180* [ %93, %85 ], [ null, %94 ], !dbg !13259
  br label %98, !dbg !13259

97:                                               ; preds = %74
  br label %98, !dbg !13259

98:                                               ; preds = %97, %95
  %99 = phi %struct.k_thread.180* [ %96, %95 ], [ null, %97 ], !dbg !13259
  store %struct.k_thread.180* %99, %struct.k_thread.180** %4, align 4, !dbg !13259
  br label %57, !dbg !13259, !llvm.loop !13277

100:                                              ; preds = %57
  %101 = load %struct._dnode.168*, %struct._dnode.168** %2, align 4, !dbg !13279
  %102 = load %struct.k_thread.180*, %struct.k_thread.180** %3, align 4, !dbg !13280
  %103 = getelementptr inbounds %struct.k_thread.180, %struct.k_thread.180* %102, i32 0, i32 0, !dbg !13281
  %104 = getelementptr inbounds %struct._thread_base.173, %struct._thread_base.173* %103, i32 0, i32 0, !dbg !13282
  %105 = bitcast %union.anon.169* %104 to %struct._dnode.168*, !dbg !13282
  call void @sys_dlist_append(%struct._dnode.168* noundef %101, %struct._dnode.168* noundef %105) #13, !dbg !13283
  br label %106, !dbg !13284

106:                                              ; preds = %65, %100
  br label %107, !dbg !13285

107:                                              ; preds = %31, %106
  %108 = load %struct.k_thread.180*, %struct.k_thread.180** %11, align 4, !dbg !13286
  %109 = load %struct.k_thread.180*, %struct.k_thread.180** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13287
  %110 = icmp eq %struct.k_thread.180* %108, %109, !dbg !13288
  %111 = zext i1 %110 to i32, !dbg !13288
  call void @update_cache(i32 noundef %111) #10, !dbg !13289
  ret void, !dbg !13290
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @z_is_thread_queued(%struct.k_thread.180* noundef %0) #1 !dbg !13291 {
  %2 = alloca %struct.k_thread.180*, align 4
  store %struct.k_thread.180* %0, %struct.k_thread.180** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.180** %2, metadata !13292, metadata !DIExpression()), !dbg !13293
  %3 = load %struct.k_thread.180*, %struct.k_thread.180** %2, align 4, !dbg !13294
  %4 = call zeroext i1 @z_is_thread_state_set(%struct.k_thread.180* noundef %3, i32 noundef 128) #10, !dbg !13295
  ret i1 %4, !dbg !13296
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @should_queue_thread(%struct.k_thread.180* noundef %0) #1 !dbg !13297 {
  %2 = alloca %struct.k_thread.180*, align 4
  store %struct.k_thread.180* %0, %struct.k_thread.180** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.180** %2, metadata !13298, metadata !DIExpression()), !dbg !13299
  ret i1 true, !dbg !13300
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_priq_dumb_remove(%struct._dnode.168* noundef %0, %struct.k_thread.180* noundef %1) #1 !dbg !13301 {
  %3 = alloca %struct._dnode.168*, align 4
  %4 = alloca %struct.k_thread.180*, align 4
  store %struct._dnode.168* %0, %struct._dnode.168** %3, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.168** %3, metadata !13302, metadata !DIExpression()), !dbg !13303
  store %struct.k_thread.180* %1, %struct.k_thread.180** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.180** %4, metadata !13304, metadata !DIExpression()), !dbg !13305
  %5 = load %struct.k_thread.180*, %struct.k_thread.180** %4, align 4, !dbg !13306
  %6 = getelementptr inbounds %struct.k_thread.180, %struct.k_thread.180* %5, i32 0, i32 0, !dbg !13307
  %7 = getelementptr inbounds %struct._thread_base.173, %struct._thread_base.173* %6, i32 0, i32 0, !dbg !13308
  %8 = bitcast %union.anon.169* %7 to %struct._dnode.168*, !dbg !13308
  call void @sys_dlist_remove(%struct._dnode.168* noundef %8) #10, !dbg !13309
  ret void, !dbg !13310
}

; Function Attrs: noinline nounwind optnone
define internal %struct._dnode.168* @sys_dlist_peek_head(%struct._dnode.168* noundef %0) #1 !dbg !13311 {
  %2 = alloca %struct._dnode.168*, align 4
  store %struct._dnode.168* %0, %struct._dnode.168** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.168** %2, metadata !13314, metadata !DIExpression()), !dbg !13315
  %3 = load %struct._dnode.168*, %struct._dnode.168** %2, align 4, !dbg !13316
  %4 = call zeroext i1 @sys_dlist_is_empty(%struct._dnode.168* noundef %3) #10, !dbg !13317
  br i1 %4, label %5, label %6, !dbg !13317

5:                                                ; preds = %1
  br label %11, !dbg !13317

6:                                                ; preds = %1
  %7 = load %struct._dnode.168*, %struct._dnode.168** %2, align 4, !dbg !13318
  %8 = getelementptr inbounds %struct._dnode.168, %struct._dnode.168* %7, i32 0, i32 0, !dbg !13319
  %9 = bitcast %union.anon.0.166* %8 to %struct._dnode.168**, !dbg !13319
  %10 = load %struct._dnode.168*, %struct._dnode.168** %9, align 4, !dbg !13319
  br label %11, !dbg !13317

11:                                               ; preds = %6, %5
  %12 = phi %struct._dnode.168* [ null, %5 ], [ %10, %6 ], !dbg !13317
  ret %struct._dnode.168* %12, !dbg !13320
}

; Function Attrs: noinline nounwind optnone
define internal void @sys_dlist_insert(%struct._dnode.168* noundef %0, %struct._dnode.168* noundef %1) #1 !dbg !13321 {
  %3 = alloca %struct._dnode.168*, align 4
  %4 = alloca %struct._dnode.168*, align 4
  %5 = alloca %struct._dnode.168*, align 4
  store %struct._dnode.168* %0, %struct._dnode.168** %3, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.168** %3, metadata !13324, metadata !DIExpression()), !dbg !13325
  store %struct._dnode.168* %1, %struct._dnode.168** %4, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.168** %4, metadata !13326, metadata !DIExpression()), !dbg !13327
  call void @llvm.dbg.declare(metadata %struct._dnode.168** %5, metadata !13328, metadata !DIExpression()), !dbg !13330
  %6 = load %struct._dnode.168*, %struct._dnode.168** %3, align 4, !dbg !13331
  %7 = getelementptr inbounds %struct._dnode.168, %struct._dnode.168* %6, i32 0, i32 1, !dbg !13332
  %8 = bitcast %union.anon.0.166* %7 to %struct._dnode.168**, !dbg !13332
  %9 = load %struct._dnode.168*, %struct._dnode.168** %8, align 4, !dbg !13332
  store %struct._dnode.168* %9, %struct._dnode.168** %5, align 4, !dbg !13330
  %10 = load %struct._dnode.168*, %struct._dnode.168** %5, align 4, !dbg !13333
  %11 = load %struct._dnode.168*, %struct._dnode.168** %4, align 4, !dbg !13334
  %12 = getelementptr inbounds %struct._dnode.168, %struct._dnode.168* %11, i32 0, i32 1, !dbg !13335
  %13 = bitcast %union.anon.0.166* %12 to %struct._dnode.168**, !dbg !13335
  store %struct._dnode.168* %10, %struct._dnode.168** %13, align 4, !dbg !13336
  %14 = load %struct._dnode.168*, %struct._dnode.168** %3, align 4, !dbg !13337
  %15 = load %struct._dnode.168*, %struct._dnode.168** %4, align 4, !dbg !13338
  %16 = getelementptr inbounds %struct._dnode.168, %struct._dnode.168* %15, i32 0, i32 0, !dbg !13339
  %17 = bitcast %union.anon.0.166* %16 to %struct._dnode.168**, !dbg !13339
  store %struct._dnode.168* %14, %struct._dnode.168** %17, align 4, !dbg !13340
  %18 = load %struct._dnode.168*, %struct._dnode.168** %4, align 4, !dbg !13341
  %19 = load %struct._dnode.168*, %struct._dnode.168** %5, align 4, !dbg !13342
  %20 = getelementptr inbounds %struct._dnode.168, %struct._dnode.168* %19, i32 0, i32 0, !dbg !13343
  %21 = bitcast %union.anon.0.166* %20 to %struct._dnode.168**, !dbg !13343
  store %struct._dnode.168* %18, %struct._dnode.168** %21, align 4, !dbg !13344
  %22 = load %struct._dnode.168*, %struct._dnode.168** %4, align 4, !dbg !13345
  %23 = load %struct._dnode.168*, %struct._dnode.168** %3, align 4, !dbg !13346
  %24 = getelementptr inbounds %struct._dnode.168, %struct._dnode.168* %23, i32 0, i32 1, !dbg !13347
  %25 = bitcast %union.anon.0.166* %24 to %struct._dnode.168**, !dbg !13347
  store %struct._dnode.168* %22, %struct._dnode.168** %25, align 4, !dbg !13348
  ret void, !dbg !13349
}

; Function Attrs: noinline nounwind optnone
define internal %struct._dnode.168* @sys_dlist_peek_next(%struct._dnode.168* noundef %0, %struct._dnode.168* noundef %1) #1 !dbg !13350 {
  %3 = alloca %struct._dnode.168*, align 4
  %4 = alloca %struct._dnode.168*, align 4
  store %struct._dnode.168* %0, %struct._dnode.168** %3, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.168** %3, metadata !13353, metadata !DIExpression()), !dbg !13354
  store %struct._dnode.168* %1, %struct._dnode.168** %4, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.168** %4, metadata !13355, metadata !DIExpression()), !dbg !13356
  %5 = load %struct._dnode.168*, %struct._dnode.168** %4, align 4, !dbg !13357
  %6 = icmp ne %struct._dnode.168* %5, null, !dbg !13358
  br i1 %6, label %7, label %11, !dbg !13359

7:                                                ; preds = %2
  %8 = load %struct._dnode.168*, %struct._dnode.168** %3, align 4, !dbg !13360
  %9 = load %struct._dnode.168*, %struct._dnode.168** %4, align 4, !dbg !13361
  %10 = call %struct._dnode.168* @sys_dlist_peek_next_no_check(%struct._dnode.168* noundef %8, %struct._dnode.168* noundef %9) #10, !dbg !13362
  br label %12, !dbg !13359

11:                                               ; preds = %2
  br label %12, !dbg !13359

12:                                               ; preds = %11, %7
  %13 = phi %struct._dnode.168* [ %10, %7 ], [ null, %11 ], !dbg !13359
  ret %struct._dnode.168* %13, !dbg !13363
}

; Function Attrs: noinline nounwind optnone
define internal void @sys_dlist_append(%struct._dnode.168* noundef %0, %struct._dnode.168* noundef %1) #1 !dbg !13364 {
  %3 = alloca %struct._dnode.168*, align 4
  %4 = alloca %struct._dnode.168*, align 4
  %5 = alloca %struct._dnode.168*, align 4
  store %struct._dnode.168* %0, %struct._dnode.168** %3, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.168** %3, metadata !13367, metadata !DIExpression()), !dbg !13368
  store %struct._dnode.168* %1, %struct._dnode.168** %4, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.168** %4, metadata !13369, metadata !DIExpression()), !dbg !13370
  call void @llvm.dbg.declare(metadata %struct._dnode.168** %5, metadata !13371, metadata !DIExpression()), !dbg !13372
  %6 = load %struct._dnode.168*, %struct._dnode.168** %3, align 4, !dbg !13373
  %7 = getelementptr inbounds %struct._dnode.168, %struct._dnode.168* %6, i32 0, i32 1, !dbg !13374
  %8 = bitcast %union.anon.0.166* %7 to %struct._dnode.168**, !dbg !13374
  %9 = load %struct._dnode.168*, %struct._dnode.168** %8, align 4, !dbg !13374
  store %struct._dnode.168* %9, %struct._dnode.168** %5, align 4, !dbg !13372
  %10 = load %struct._dnode.168*, %struct._dnode.168** %3, align 4, !dbg !13375
  %11 = load %struct._dnode.168*, %struct._dnode.168** %4, align 4, !dbg !13376
  %12 = getelementptr inbounds %struct._dnode.168, %struct._dnode.168* %11, i32 0, i32 0, !dbg !13377
  %13 = bitcast %union.anon.0.166* %12 to %struct._dnode.168**, !dbg !13377
  store %struct._dnode.168* %10, %struct._dnode.168** %13, align 4, !dbg !13378
  %14 = load %struct._dnode.168*, %struct._dnode.168** %5, align 4, !dbg !13379
  %15 = load %struct._dnode.168*, %struct._dnode.168** %4, align 4, !dbg !13380
  %16 = getelementptr inbounds %struct._dnode.168, %struct._dnode.168* %15, i32 0, i32 1, !dbg !13381
  %17 = bitcast %union.anon.0.166* %16 to %struct._dnode.168**, !dbg !13381
  store %struct._dnode.168* %14, %struct._dnode.168** %17, align 4, !dbg !13382
  %18 = load %struct._dnode.168*, %struct._dnode.168** %4, align 4, !dbg !13383
  %19 = load %struct._dnode.168*, %struct._dnode.168** %5, align 4, !dbg !13384
  %20 = getelementptr inbounds %struct._dnode.168, %struct._dnode.168* %19, i32 0, i32 0, !dbg !13385
  %21 = bitcast %union.anon.0.166* %20 to %struct._dnode.168**, !dbg !13385
  store %struct._dnode.168* %18, %struct._dnode.168** %21, align 4, !dbg !13386
  %22 = load %struct._dnode.168*, %struct._dnode.168** %4, align 4, !dbg !13387
  %23 = load %struct._dnode.168*, %struct._dnode.168** %3, align 4, !dbg !13388
  %24 = getelementptr inbounds %struct._dnode.168, %struct._dnode.168* %23, i32 0, i32 1, !dbg !13389
  %25 = bitcast %union.anon.0.166* %24 to %struct._dnode.168**, !dbg !13389
  store %struct._dnode.168* %22, %struct._dnode.168** %25, align 4, !dbg !13390
  ret void, !dbg !13391
}

; Function Attrs: noinline nounwind optnone
define internal void @update_cache(i32 noundef %0) #1 !dbg !13392 {
  %2 = alloca i1, align 1
  %3 = alloca %struct.k_thread.180*, align 4
  %4 = alloca i32, align 4
  %5 = alloca %struct.k_thread.180*, align 4
  %6 = alloca i32, align 4
  %7 = alloca %struct.k_thread.180*, align 4
  store i32 %0, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !13393, metadata !DIExpression()), !dbg !13394
  call void @llvm.dbg.declare(metadata %struct.k_thread.180** %7, metadata !13395, metadata !DIExpression()), !dbg !13396
  call void @llvm.dbg.declare(metadata %struct.k_thread.180** %5, metadata !13397, metadata !DIExpression()) #9, !dbg !13401
  %8 = bitcast i8* bitcast (%struct._dnode.168* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1) to i8*) to %struct._dnode.168*, !dbg !13403
  %9 = call %struct.k_thread.180* @z_priq_dumb_best(%struct._dnode.168* noundef %8) #13, !dbg !13406
  store %struct.k_thread.180* %9, %struct.k_thread.180** %5, align 4, !dbg !13401
  %10 = load %struct.k_thread.180*, %struct.k_thread.180** %5, align 4, !dbg !13407
  %11 = icmp ne %struct.k_thread.180* %10, null, !dbg !13408
  br i1 %11, label %12, label %14, !dbg !13409

12:                                               ; preds = %1
  %13 = load %struct.k_thread.180*, %struct.k_thread.180** %5, align 4, !dbg !13410
  br label %16, !dbg !13409

14:                                               ; preds = %1
  %15 = load %struct.k_thread.180*, %struct.k_thread.180** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 3), align 4, !dbg !13411
  br label %16, !dbg !13409

16:                                               ; preds = %12, %14
  %17 = phi %struct.k_thread.180* [ %13, %12 ], [ %15, %14 ], !dbg !13409
  store %struct.k_thread.180* %17, %struct.k_thread.180** %7, align 4, !dbg !13396
  %18 = load %struct.k_thread.180*, %struct.k_thread.180** %7, align 4, !dbg !13412
  %19 = load i32, i32* %6, align 4, !dbg !13414
  store %struct.k_thread.180* %18, %struct.k_thread.180** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.180** %3, metadata !13415, metadata !DIExpression()) #9, !dbg !13419
  store i32 %19, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !13421, metadata !DIExpression()) #9, !dbg !13422
  %20 = load i32, i32* %4, align 4, !dbg !13423
  %21 = icmp ne i32 %20, 0, !dbg !13425
  br i1 %21, label %22, label %23, !dbg !13426

22:                                               ; preds = %16
  store i1 true, i1* %2, align 1, !dbg !13427
  br label %41, !dbg !13427

23:                                               ; preds = %16
  %24 = load %struct.k_thread.180*, %struct.k_thread.180** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13429
  %25 = call zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread.180* noundef %24) #13, !dbg !13431
  br i1 %25, label %26, label %27, !dbg !13432

26:                                               ; preds = %23
  store i1 true, i1* %2, align 1, !dbg !13433
  br label %41, !dbg !13433

27:                                               ; preds = %23
  %28 = load %struct.k_thread.180*, %struct.k_thread.180** %3, align 4, !dbg !13435
  %29 = call zeroext i1 @z_is_thread_timeout_active(%struct.k_thread.180* noundef %28) #13, !dbg !13437
  br i1 %29, label %30, label %31, !dbg !13438

30:                                               ; preds = %27
  store i1 true, i1* %2, align 1, !dbg !13439
  br label %41, !dbg !13439

31:                                               ; preds = %27
  %32 = load %struct.k_thread.180*, %struct.k_thread.180** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13441
  %33 = call i32 @is_preempt(%struct.k_thread.180* noundef %32) #13, !dbg !13443
  %34 = icmp ne i32 %33, 0, !dbg !13443
  br i1 %34, label %39, label %35, !dbg !13444

35:                                               ; preds = %31
  %36 = load %struct.k_thread.180*, %struct.k_thread.180** %3, align 4, !dbg !13445
  %37 = call i32 @is_metairq(%struct.k_thread.180* noundef %36) #13, !dbg !13446
  %38 = icmp ne i32 %37, 0, !dbg !13446
  br i1 %38, label %39, label %40, !dbg !13447

39:                                               ; preds = %35, %31
  store i1 true, i1* %2, align 1, !dbg !13448
  br label %41, !dbg !13448

40:                                               ; preds = %35
  store i1 false, i1* %2, align 1, !dbg !13450
  br label %41, !dbg !13450

41:                                               ; preds = %22, %26, %30, %39, %40
  %42 = load i1, i1* %2, align 1, !dbg !13451
  br i1 %42, label %43, label %52, !dbg !13452

43:                                               ; preds = %41
  %44 = load %struct.k_thread.180*, %struct.k_thread.180** %7, align 4, !dbg !13453
  %45 = load %struct.k_thread.180*, %struct.k_thread.180** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13456
  %46 = icmp ne %struct.k_thread.180* %44, %45, !dbg !13457
  br i1 %46, label %47, label %49, !dbg !13458

47:                                               ; preds = %43
  %48 = load %struct.k_thread.180*, %struct.k_thread.180** %7, align 4, !dbg !13459
  call void @z_reset_time_slice(%struct.k_thread.180* noundef %48) #10, !dbg !13461
  br label %49, !dbg !13462

49:                                               ; preds = %47, %43
  %50 = load %struct.k_thread.180*, %struct.k_thread.180** %7, align 4, !dbg !13463
  call void @update_metairq_preempt(%struct.k_thread.180* noundef %50) #10, !dbg !13464
  %51 = load %struct.k_thread.180*, %struct.k_thread.180** %7, align 4, !dbg !13465
  store %struct.k_thread.180* %51, %struct.k_thread.180** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !13466
  br label %54, !dbg !13467

52:                                               ; preds = %41
  %53 = load %struct.k_thread.180*, %struct.k_thread.180** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13468
  store %struct.k_thread.180* %53, %struct.k_thread.180** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !13470
  br label %54

54:                                               ; preds = %52, %49
  ret void, !dbg !13471
}

; Function Attrs: noinline nounwind optnone
define dso_local %struct.k_thread.180* @z_priq_dumb_best(%struct._dnode.168* noundef %0) #1 !dbg !13472 {
  %2 = alloca %struct._dnode.168*, align 4
  %3 = alloca %struct.k_thread.180*, align 4
  %4 = alloca %struct._dnode.168*, align 4
  store %struct._dnode.168* %0, %struct._dnode.168** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.168** %2, metadata !13475, metadata !DIExpression()), !dbg !13476
  call void @llvm.dbg.declare(metadata %struct.k_thread.180** %3, metadata !13477, metadata !DIExpression()), !dbg !13478
  store %struct.k_thread.180* null, %struct.k_thread.180** %3, align 4, !dbg !13478
  call void @llvm.dbg.declare(metadata %struct._dnode.168** %4, metadata !13479, metadata !DIExpression()), !dbg !13480
  %5 = load %struct._dnode.168*, %struct._dnode.168** %2, align 4, !dbg !13481
  %6 = call %struct._dnode.168* @sys_dlist_peek_head(%struct._dnode.168* noundef %5) #10, !dbg !13482
  store %struct._dnode.168* %6, %struct._dnode.168** %4, align 4, !dbg !13480
  %7 = load %struct._dnode.168*, %struct._dnode.168** %4, align 4, !dbg !13483
  %8 = icmp ne %struct._dnode.168* %7, null, !dbg !13485
  br i1 %8, label %9, label %14, !dbg !13486

9:                                                ; preds = %1
  %10 = load %struct._dnode.168*, %struct._dnode.168** %4, align 4, !dbg !13487
  %11 = bitcast %struct._dnode.168* %10 to i8*, !dbg !13487
  %12 = getelementptr inbounds i8, i8* %11, i32 0, !dbg !13487
  %13 = bitcast i8* %12 to %struct.k_thread.180*, !dbg !13487
  store %struct.k_thread.180* %13, %struct.k_thread.180** %3, align 4, !dbg !13489
  br label %14, !dbg !13490

14:                                               ; preds = %9, %1
  %15 = load %struct.k_thread.180*, %struct.k_thread.180** %3, align 4, !dbg !13491
  ret %struct.k_thread.180* %15, !dbg !13492
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @z_is_thread_timeout_active(%struct.k_thread.180* noundef %0) #1 !dbg !13493 {
  %2 = alloca %struct.k_thread.180*, align 4
  store %struct.k_thread.180* %0, %struct.k_thread.180** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.180** %2, metadata !13494, metadata !DIExpression()), !dbg !13495
  %3 = load %struct.k_thread.180*, %struct.k_thread.180** %2, align 4, !dbg !13496
  %4 = getelementptr inbounds %struct.k_thread.180, %struct.k_thread.180* %3, i32 0, i32 0, !dbg !13497
  %5 = getelementptr inbounds %struct._thread_base.173, %struct._thread_base.173* %4, i32 0, i32 7, !dbg !13498
  %6 = call zeroext i1 @z_is_inactive_timeout(%struct._timeout.172* noundef %5) #10, !dbg !13499
  %7 = xor i1 %6, true, !dbg !13500
  ret i1 %7, !dbg !13501
}

; Function Attrs: noinline nounwind optnone
define internal i32 @is_preempt(%struct.k_thread.180* noundef %0) #1 !dbg !13502 {
  %2 = alloca %struct.k_thread.180*, align 4
  store %struct.k_thread.180* %0, %struct.k_thread.180** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.180** %2, metadata !13503, metadata !DIExpression()), !dbg !13504
  %3 = load %struct.k_thread.180*, %struct.k_thread.180** %2, align 4, !dbg !13505
  %4 = getelementptr inbounds %struct.k_thread.180, %struct.k_thread.180* %3, i32 0, i32 0, !dbg !13506
  %5 = getelementptr inbounds %struct._thread_base.173, %struct._thread_base.173* %4, i32 0, i32 4, !dbg !13507
  %6 = bitcast %union.anon.2.7* %5 to i16*, !dbg !13507
  %7 = load i16, i16* %6, align 2, !dbg !13507
  %8 = zext i16 %7 to i32, !dbg !13505
  %9 = icmp ule i32 %8, 127, !dbg !13508
  %10 = zext i1 %9 to i32, !dbg !13508
  ret i32 %10, !dbg !13509
}

; Function Attrs: noinline nounwind optnone
define internal i32 @is_metairq(%struct.k_thread.180* noundef %0) #1 !dbg !13510 {
  %2 = alloca %struct.k_thread.180*, align 4
  store %struct.k_thread.180* %0, %struct.k_thread.180** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.180** %2, metadata !13511, metadata !DIExpression()), !dbg !13512
  ret i32 0, !dbg !13513
}

; Function Attrs: noinline nounwind optnone
define internal void @update_metairq_preempt(%struct.k_thread.180* noundef %0) #1 !dbg !13514 {
  %2 = alloca %struct.k_thread.180*, align 4
  store %struct.k_thread.180* %0, %struct.k_thread.180** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.180** %2, metadata !13515, metadata !DIExpression()), !dbg !13516
  ret void, !dbg !13517
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @z_is_inactive_timeout(%struct._timeout.172* noundef %0) #1 !dbg !13518 {
  %2 = alloca %struct._timeout.172*, align 4
  store %struct._timeout.172* %0, %struct._timeout.172** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._timeout.172** %2, metadata !13523, metadata !DIExpression()), !dbg !13524
  %3 = load %struct._timeout.172*, %struct._timeout.172** %2, align 4, !dbg !13525
  %4 = getelementptr inbounds %struct._timeout.172, %struct._timeout.172* %3, i32 0, i32 0, !dbg !13526
  %5 = call zeroext i1 @sys_dnode_is_linked(%struct._dnode.168* noundef %4) #10, !dbg !13527
  %6 = xor i1 %5, true, !dbg !13528
  ret i1 %6, !dbg !13529
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @sys_dnode_is_linked(%struct._dnode.168* noundef %0) #1 !dbg !13530 {
  %2 = alloca %struct._dnode.168*, align 4
  store %struct._dnode.168* %0, %struct._dnode.168** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.168** %2, metadata !13535, metadata !DIExpression()), !dbg !13536
  %3 = load %struct._dnode.168*, %struct._dnode.168** %2, align 4, !dbg !13537
  %4 = getelementptr inbounds %struct._dnode.168, %struct._dnode.168* %3, i32 0, i32 0, !dbg !13538
  %5 = bitcast %union.anon.0.166* %4 to %struct._dnode.168**, !dbg !13538
  %6 = load %struct._dnode.168*, %struct._dnode.168** %5, align 4, !dbg !13538
  %7 = icmp ne %struct._dnode.168* %6, null, !dbg !13539
  ret i1 %7, !dbg !13540
}

; Function Attrs: noinline nounwind optnone
define internal %struct._dnode.168* @sys_dlist_peek_next_no_check(%struct._dnode.168* noundef %0, %struct._dnode.168* noundef %1) #1 !dbg !13541 {
  %3 = alloca %struct._dnode.168*, align 4
  %4 = alloca %struct._dnode.168*, align 4
  store %struct._dnode.168* %0, %struct._dnode.168** %3, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.168** %3, metadata !13542, metadata !DIExpression()), !dbg !13543
  store %struct._dnode.168* %1, %struct._dnode.168** %4, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.168** %4, metadata !13544, metadata !DIExpression()), !dbg !13545
  %5 = load %struct._dnode.168*, %struct._dnode.168** %4, align 4, !dbg !13546
  %6 = load %struct._dnode.168*, %struct._dnode.168** %3, align 4, !dbg !13547
  %7 = getelementptr inbounds %struct._dnode.168, %struct._dnode.168* %6, i32 0, i32 1, !dbg !13548
  %8 = bitcast %union.anon.0.166* %7 to %struct._dnode.168**, !dbg !13548
  %9 = load %struct._dnode.168*, %struct._dnode.168** %8, align 4, !dbg !13548
  %10 = icmp eq %struct._dnode.168* %5, %9, !dbg !13549
  br i1 %10, label %11, label %12, !dbg !13550

11:                                               ; preds = %2
  br label %17, !dbg !13550

12:                                               ; preds = %2
  %13 = load %struct._dnode.168*, %struct._dnode.168** %4, align 4, !dbg !13551
  %14 = getelementptr inbounds %struct._dnode.168, %struct._dnode.168* %13, i32 0, i32 0, !dbg !13552
  %15 = bitcast %union.anon.0.166* %14 to %struct._dnode.168**, !dbg !13552
  %16 = load %struct._dnode.168*, %struct._dnode.168** %15, align 4, !dbg !13552
  br label %17, !dbg !13550

17:                                               ; preds = %12, %11
  %18 = phi %struct._dnode.168* [ null, %11 ], [ %16, %12 ], !dbg !13550
  ret %struct._dnode.168* %18, !dbg !13553
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @sys_dlist_is_empty(%struct._dnode.168* noundef %0) #1 !dbg !13554 {
  %2 = alloca %struct._dnode.168*, align 4
  store %struct._dnode.168* %0, %struct._dnode.168** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.168** %2, metadata !13557, metadata !DIExpression()), !dbg !13558
  %3 = load %struct._dnode.168*, %struct._dnode.168** %2, align 4, !dbg !13559
  %4 = getelementptr inbounds %struct._dnode.168, %struct._dnode.168* %3, i32 0, i32 0, !dbg !13560
  %5 = bitcast %union.anon.0.166* %4 to %struct._dnode.168**, !dbg !13560
  %6 = load %struct._dnode.168*, %struct._dnode.168** %5, align 4, !dbg !13560
  %7 = load %struct._dnode.168*, %struct._dnode.168** %2, align 4, !dbg !13561
  %8 = icmp eq %struct._dnode.168* %6, %7, !dbg !13562
  ret i1 %8, !dbg !13563
}

; Function Attrs: noinline nounwind optnone
define internal void @sys_dlist_remove(%struct._dnode.168* noundef %0) #1 !dbg !13564 {
  %2 = alloca %struct._dnode.168*, align 4
  %3 = alloca %struct._dnode.168*, align 4
  %4 = alloca %struct._dnode.168*, align 4
  store %struct._dnode.168* %0, %struct._dnode.168** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.168** %2, metadata !13567, metadata !DIExpression()), !dbg !13568
  call void @llvm.dbg.declare(metadata %struct._dnode.168** %3, metadata !13569, metadata !DIExpression()), !dbg !13570
  %5 = load %struct._dnode.168*, %struct._dnode.168** %2, align 4, !dbg !13571
  %6 = getelementptr inbounds %struct._dnode.168, %struct._dnode.168* %5, i32 0, i32 1, !dbg !13572
  %7 = bitcast %union.anon.0.166* %6 to %struct._dnode.168**, !dbg !13572
  %8 = load %struct._dnode.168*, %struct._dnode.168** %7, align 4, !dbg !13572
  store %struct._dnode.168* %8, %struct._dnode.168** %3, align 4, !dbg !13570
  call void @llvm.dbg.declare(metadata %struct._dnode.168** %4, metadata !13573, metadata !DIExpression()), !dbg !13574
  %9 = load %struct._dnode.168*, %struct._dnode.168** %2, align 4, !dbg !13575
  %10 = getelementptr inbounds %struct._dnode.168, %struct._dnode.168* %9, i32 0, i32 0, !dbg !13576
  %11 = bitcast %union.anon.0.166* %10 to %struct._dnode.168**, !dbg !13576
  %12 = load %struct._dnode.168*, %struct._dnode.168** %11, align 4, !dbg !13576
  store %struct._dnode.168* %12, %struct._dnode.168** %4, align 4, !dbg !13574
  %13 = load %struct._dnode.168*, %struct._dnode.168** %4, align 4, !dbg !13577
  %14 = load %struct._dnode.168*, %struct._dnode.168** %3, align 4, !dbg !13578
  %15 = getelementptr inbounds %struct._dnode.168, %struct._dnode.168* %14, i32 0, i32 0, !dbg !13579
  %16 = bitcast %union.anon.0.166* %15 to %struct._dnode.168**, !dbg !13579
  store %struct._dnode.168* %13, %struct._dnode.168** %16, align 4, !dbg !13580
  %17 = load %struct._dnode.168*, %struct._dnode.168** %3, align 4, !dbg !13581
  %18 = load %struct._dnode.168*, %struct._dnode.168** %4, align 4, !dbg !13582
  %19 = getelementptr inbounds %struct._dnode.168, %struct._dnode.168* %18, i32 0, i32 1, !dbg !13583
  %20 = bitcast %union.anon.0.166* %19 to %struct._dnode.168**, !dbg !13583
  store %struct._dnode.168* %17, %struct._dnode.168** %20, align 4, !dbg !13584
  %21 = load %struct._dnode.168*, %struct._dnode.168** %2, align 4, !dbg !13585
  call void @sys_dnode_init.80(%struct._dnode.168* noundef %21) #10, !dbg !13586
  ret void, !dbg !13587
}

; Function Attrs: noinline nounwind optnone
define internal void @sys_dnode_init.80(%struct._dnode.168* noundef %0) #1 !dbg !13588 {
  %2 = alloca %struct._dnode.168*, align 4
  store %struct._dnode.168* %0, %struct._dnode.168** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.168** %2, metadata !13589, metadata !DIExpression()), !dbg !13590
  %3 = load %struct._dnode.168*, %struct._dnode.168** %2, align 4, !dbg !13591
  %4 = getelementptr inbounds %struct._dnode.168, %struct._dnode.168* %3, i32 0, i32 0, !dbg !13592
  %5 = bitcast %union.anon.0.166* %4 to %struct._dnode.168**, !dbg !13592
  store %struct._dnode.168* null, %struct._dnode.168** %5, align 4, !dbg !13593
  %6 = load %struct._dnode.168*, %struct._dnode.168** %2, align 4, !dbg !13594
  %7 = getelementptr inbounds %struct._dnode.168, %struct._dnode.168* %6, i32 0, i32 1, !dbg !13595
  %8 = bitcast %union.anon.0.166* %7 to %struct._dnode.168**, !dbg !13595
  store %struct._dnode.168* null, %struct._dnode.168** %8, align 4, !dbg !13596
  ret void, !dbg !13597
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @z_is_thread_state_set(%struct.k_thread.180* noundef %0, i32 noundef %1) #1 !dbg !13598 {
  %3 = alloca %struct.k_thread.180*, align 4
  %4 = alloca i32, align 4
  store %struct.k_thread.180* %0, %struct.k_thread.180** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.180** %3, metadata !13601, metadata !DIExpression()), !dbg !13602
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !13603, metadata !DIExpression()), !dbg !13604
  %5 = load %struct.k_thread.180*, %struct.k_thread.180** %3, align 4, !dbg !13605
  %6 = getelementptr inbounds %struct.k_thread.180, %struct.k_thread.180* %5, i32 0, i32 0, !dbg !13606
  %7 = getelementptr inbounds %struct._thread_base.173, %struct._thread_base.173* %6, i32 0, i32 3, !dbg !13607
  %8 = load i8, i8* %7, align 1, !dbg !13607
  %9 = zext i8 %8 to i32, !dbg !13605
  %10 = load i32, i32* %4, align 4, !dbg !13608
  %11 = and i32 %9, %10, !dbg !13609
  %12 = icmp ne i32 %11, 0, !dbg !13610
  ret i1 %12, !dbg !13611
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) #1 !dbg !13612 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !13615, metadata !DIExpression()), !dbg !13616
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !13617, metadata !DIExpression()), !dbg !13618
  %5 = load i32, i32* %3, align 4, !dbg !13619
  %6 = load i32, i32* %4, align 4, !dbg !13620
  %7 = call zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %5, i32 noundef %6) #10, !dbg !13621
  ret i1 %7, !dbg !13622
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @z_is_idle_thread_object(%struct.k_thread.180* noundef %0) #1 !dbg !13623 {
  %2 = alloca %struct.k_thread.180*, align 4
  store %struct.k_thread.180* %0, %struct.k_thread.180** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.180** %2, metadata !13624, metadata !DIExpression()), !dbg !13625
  %3 = load %struct.k_thread.180*, %struct.k_thread.180** %2, align 4, !dbg !13626
  %4 = icmp eq %struct.k_thread.180* %3, getelementptr inbounds ([1 x %struct.k_thread.180], [1 x %struct.k_thread.180]* @z_idle_threads, i32 0, i32 0), !dbg !13627
  ret i1 %4, !dbg !13628
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) #1 !dbg !13629 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !13630, metadata !DIExpression()), !dbg !13631
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !13632, metadata !DIExpression()), !dbg !13633
  %5 = load i32, i32* %3, align 4, !dbg !13634
  %6 = load i32, i32* %4, align 4, !dbg !13635
  %7 = icmp slt i32 %5, %6, !dbg !13636
  ret i1 %7, !dbg !13637
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_ready_thread(%struct.k_thread.180* noundef %0) #1 !dbg !13638 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca %union.anon.68, align 4
  %6 = alloca %struct.k_spinlock.13*, align 4
  %7 = alloca %union.anon.68, align 4
  %8 = alloca %struct.k_spinlock.13*, align 4
  %9 = alloca %struct.k_thread.180*, align 4
  %10 = alloca %union.anon.68, align 4
  %11 = alloca %union.anon.68, align 4
  store %struct.k_thread.180* %0, %struct.k_thread.180** %9, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.180** %9, metadata !13639, metadata !DIExpression()), !dbg !13640
  call void @llvm.dbg.declare(metadata %union.anon.68* %10, metadata !13641, metadata !DIExpression()), !dbg !13643
  %12 = bitcast %union.anon.68* %10 to i8*, !dbg !13643
  call void @llvm.memset.p0i8.i32(i8* align 4 %12, i8 0, i32 4, i1 false), !dbg !13643
  call void @llvm.dbg.declare(metadata %union.anon.68* %11, metadata !13644, metadata !DIExpression()), !dbg !13643
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %8, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %8, metadata !12804, metadata !DIExpression()) #9, !dbg !13645
  %13 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %8, align 4, !dbg !13647
  call void @llvm.dbg.declare(metadata %union.anon.68* %7, metadata !12812, metadata !DIExpression()) #9, !dbg !13648
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12814, metadata !DIExpression()) #9, !dbg !13649
  call void @llvm.dbg.declare(metadata i32* %3, metadata !12818, metadata !DIExpression()) #9, !dbg !13651
  %14 = call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #9, !dbg !13652, !srcloc !12821
  %15 = extractvalue { i32, i32 } %14, 0, !dbg !13652
  %16 = extractvalue { i32, i32 } %14, 1, !dbg !13652
  store i32 %15, i32* %2, align 4, !dbg !13652
  store i32 %16, i32* %3, align 4, !dbg !13652
  %17 = load i32, i32* %2, align 4, !dbg !13653
  %18 = getelementptr inbounds %union.anon.68, %union.anon.68* %7, i32 0, i32 0, !dbg !13654
  store i32 %17, i32* %18, align 4, !dbg !13655
  %19 = getelementptr inbounds %union.anon.68, %union.anon.68* %7, i32 0, i32 0, !dbg !13656
  %20 = load i32, i32* %19, align 4, !dbg !13656
  %21 = getelementptr inbounds %union.anon.68, %union.anon.68* %11, i32 0, i32 0, !dbg !13643
  store i32 %20, i32* %21, align 4, !dbg !13643
  br label %22, !dbg !13643

22:                                               ; preds = %33, %1
  %23 = getelementptr inbounds %union.anon.68, %union.anon.68* %10, i32 0, i32 0, !dbg !13657
  %24 = load i32, i32* %23, align 4, !dbg !13657
  %25 = icmp ne i32 %24, 0, !dbg !13657
  %26 = xor i1 %25, true, !dbg !13657
  br i1 %26, label %27, label %44, !dbg !13643

27:                                               ; preds = %22
  %28 = load %struct.k_thread.180*, %struct.k_thread.180** %9, align 4, !dbg !13659
  %29 = call zeroext i1 @thread_active_elsewhere(%struct.k_thread.180* noundef %28) #10, !dbg !13662
  br i1 %29, label %32, label %30, !dbg !13663

30:                                               ; preds = %27
  %31 = load %struct.k_thread.180*, %struct.k_thread.180** %9, align 4, !dbg !13664
  call void @ready_thread(%struct.k_thread.180* noundef %31) #10, !dbg !13666
  br label %32, !dbg !13667

32:                                               ; preds = %30, %27
  br label %33, !dbg !13668

33:                                               ; preds = %32
  %34 = getelementptr inbounds %union.anon.68, %union.anon.68* %11, i32 0, i32 0, !dbg !13657
  %35 = bitcast i32* %34 to [1 x i32]*, !dbg !13657
  %36 = load [1 x i32], [1 x i32]* %35, align 4, !dbg !13657
  %37 = getelementptr inbounds %union.anon.68, %union.anon.68* %5, i32 0, i32 0
  %38 = bitcast i32* %37 to [1 x i32]*
  store [1 x i32] %36, [1 x i32]* %38, align 4
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %6, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %6, metadata !12846, metadata !DIExpression()) #9, !dbg !13669
  call void @llvm.dbg.declare(metadata %union.anon.68* %5, metadata !12852, metadata !DIExpression()) #9, !dbg !13671
  %39 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %6, align 4, !dbg !13672
  %40 = getelementptr inbounds %union.anon.68, %union.anon.68* %5, i32 0, i32 0, !dbg !13673
  %41 = load i32, i32* %40, align 4, !dbg !13673
  store i32 %41, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !12856, metadata !DIExpression()) #9, !dbg !13674
  %42 = load i32, i32* %4, align 4, !dbg !13676
  call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %42) #9, !dbg !13677, !srcloc !12862
  %43 = getelementptr inbounds %union.anon.68, %union.anon.68* %10, i32 0, i32 0, !dbg !13657
  store i32 1, i32* %43, align 4, !dbg !13657
  br label %22, !dbg !13657, !llvm.loop !13678

44:                                               ; preds = %22
  ret void, !dbg !13680
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @thread_active_elsewhere(%struct.k_thread.180* noundef %0) #1 !dbg !13681 {
  %2 = alloca %struct.k_thread.180*, align 4
  store %struct.k_thread.180* %0, %struct.k_thread.180** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.180** %2, metadata !13682, metadata !DIExpression()), !dbg !13683
  ret i1 false, !dbg !13684
}

; Function Attrs: noinline nounwind optnone
define internal void @ready_thread(%struct.k_thread.180* noundef %0) #1 !dbg !13685 {
  %2 = alloca %struct._dnode.168*, align 4
  %3 = alloca %struct.k_thread.180*, align 4
  %4 = alloca %struct.k_thread.180*, align 4
  %5 = alloca %struct.k_thread.180*, align 4
  %6 = alloca %struct.k_thread.180*, align 4
  %7 = alloca %struct.k_thread.180*, align 4
  %8 = alloca %struct.k_thread.180*, align 4
  store %struct.k_thread.180* %0, %struct.k_thread.180** %8, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.180** %8, metadata !13686, metadata !DIExpression()), !dbg !13687
  %9 = load %struct.k_thread.180*, %struct.k_thread.180** %8, align 4, !dbg !13688
  %10 = call zeroext i1 @z_is_thread_queued(%struct.k_thread.180* noundef %9) #10, !dbg !13690
  br i1 %10, label %93, label %11, !dbg !13691

11:                                               ; preds = %1
  %12 = load %struct.k_thread.180*, %struct.k_thread.180** %8, align 4, !dbg !13692
  %13 = call zeroext i1 @z_is_thread_ready(%struct.k_thread.180* noundef %12) #10, !dbg !13693
  br i1 %13, label %14, label %93, !dbg !13694

14:                                               ; preds = %11
  br label %15, !dbg !13695

15:                                               ; preds = %14
  br label %16, !dbg !13697

16:                                               ; preds = %15
  %17 = load %struct.k_thread.180*, %struct.k_thread.180** %8, align 4, !dbg !13699
  store %struct.k_thread.180* %17, %struct.k_thread.180** %7, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.180** %7, metadata !13224, metadata !DIExpression()) #9, !dbg !13700
  %18 = load %struct.k_thread.180*, %struct.k_thread.180** %7, align 4, !dbg !13702
  %19 = getelementptr inbounds %struct.k_thread.180, %struct.k_thread.180* %18, i32 0, i32 0, !dbg !13703
  %20 = getelementptr inbounds %struct._thread_base.173, %struct._thread_base.173* %19, i32 0, i32 3, !dbg !13704
  %21 = load i8, i8* %20, align 1, !dbg !13705
  %22 = zext i8 %21 to i32, !dbg !13705
  %23 = or i32 %22, 128, !dbg !13705
  %24 = trunc i32 %23 to i8, !dbg !13705
  store i8 %24, i8* %20, align 1, !dbg !13705
  %25 = load %struct.k_thread.180*, %struct.k_thread.180** %7, align 4, !dbg !13706
  %26 = call zeroext i1 @should_queue_thread(%struct.k_thread.180* noundef %25) #13, !dbg !13707
  br i1 %26, label %27, label %92, !dbg !13708

27:                                               ; preds = %16
  %28 = load %struct.k_thread.180*, %struct.k_thread.180** %7, align 4, !dbg !13709
  store %struct.k_thread.180* %28, %struct.k_thread.180** %6, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.180** %6, metadata !13238, metadata !DIExpression()) #9, !dbg !13710
  %29 = load %struct.k_thread.180*, %struct.k_thread.180** %6, align 4, !dbg !13712
  store %struct.k_thread.180* %29, %struct.k_thread.180** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.180** %5, metadata !13212, metadata !DIExpression()) #9, !dbg !13713
  %30 = load %struct.k_thread.180*, %struct.k_thread.180** %6, align 4, !dbg !13715
  store %struct._dnode.168* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode.168** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.168** %2, metadata !13246, metadata !DIExpression()) #9, !dbg !13716
  store %struct.k_thread.180* %30, %struct.k_thread.180** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.180** %3, metadata !13253, metadata !DIExpression()) #9, !dbg !13718
  call void @llvm.dbg.declare(metadata %struct.k_thread.180** %4, metadata !13255, metadata !DIExpression()) #9, !dbg !13719
  %31 = load %struct._dnode.168*, %struct._dnode.168** %2, align 4, !dbg !13720
  %32 = call %struct._dnode.168* @sys_dlist_peek_head(%struct._dnode.168* noundef %31) #13, !dbg !13720
  %33 = icmp ne %struct._dnode.168* %32, null, !dbg !13720
  br i1 %33, label %34, label %39, !dbg !13720

34:                                               ; preds = %27
  %35 = load %struct._dnode.168*, %struct._dnode.168** %2, align 4, !dbg !13720
  %36 = call %struct._dnode.168* @sys_dlist_peek_head(%struct._dnode.168* noundef %35) #13, !dbg !13720
  %37 = bitcast %struct._dnode.168* %36 to i8*, !dbg !13720
  %38 = bitcast i8* %37 to %struct.k_thread.180*, !dbg !13720
  br label %40, !dbg !13720

39:                                               ; preds = %27
  br label %40, !dbg !13720

40:                                               ; preds = %39, %34
  %41 = phi %struct.k_thread.180* [ %38, %34 ], [ null, %39 ], !dbg !13720
  store %struct.k_thread.180* %41, %struct.k_thread.180** %4, align 4, !dbg !13720
  br label %42, !dbg !13720

42:                                               ; preds = %83, %40
  %43 = load %struct.k_thread.180*, %struct.k_thread.180** %4, align 4, !dbg !13721
  %44 = icmp ne %struct.k_thread.180* %43, null, !dbg !13721
  br i1 %44, label %45, label %85, !dbg !13720

45:                                               ; preds = %42
  %46 = load %struct.k_thread.180*, %struct.k_thread.180** %3, align 4, !dbg !13722
  %47 = load %struct.k_thread.180*, %struct.k_thread.180** %4, align 4, !dbg !13723
  %48 = call i32 @z_sched_prio_cmp(%struct.k_thread.180* noundef %46, %struct.k_thread.180* noundef %47) #13, !dbg !13724
  %49 = icmp sgt i32 %48, 0, !dbg !13725
  br i1 %49, label %50, label %59, !dbg !13726

50:                                               ; preds = %45
  %51 = load %struct.k_thread.180*, %struct.k_thread.180** %4, align 4, !dbg !13727
  %52 = getelementptr inbounds %struct.k_thread.180, %struct.k_thread.180* %51, i32 0, i32 0, !dbg !13728
  %53 = getelementptr inbounds %struct._thread_base.173, %struct._thread_base.173* %52, i32 0, i32 0, !dbg !13729
  %54 = bitcast %union.anon.169* %53 to %struct._dnode.168*, !dbg !13729
  %55 = load %struct.k_thread.180*, %struct.k_thread.180** %3, align 4, !dbg !13730
  %56 = getelementptr inbounds %struct.k_thread.180, %struct.k_thread.180* %55, i32 0, i32 0, !dbg !13731
  %57 = getelementptr inbounds %struct._thread_base.173, %struct._thread_base.173* %56, i32 0, i32 0, !dbg !13732
  %58 = bitcast %union.anon.169* %57 to %struct._dnode.168*, !dbg !13732
  call void @sys_dlist_insert(%struct._dnode.168* noundef %54, %struct._dnode.168* noundef %58) #13, !dbg !13733
  br label %91, !dbg !13734

59:                                               ; preds = %45
  %60 = load %struct.k_thread.180*, %struct.k_thread.180** %4, align 4, !dbg !13721
  %61 = icmp ne %struct.k_thread.180* %60, null, !dbg !13721
  br i1 %61, label %62, label %82, !dbg !13721

62:                                               ; preds = %59
  %63 = load %struct._dnode.168*, %struct._dnode.168** %2, align 4, !dbg !13721
  %64 = load %struct.k_thread.180*, %struct.k_thread.180** %4, align 4, !dbg !13721
  %65 = getelementptr inbounds %struct.k_thread.180, %struct.k_thread.180* %64, i32 0, i32 0, !dbg !13721
  %66 = getelementptr inbounds %struct._thread_base.173, %struct._thread_base.173* %65, i32 0, i32 0, !dbg !13721
  %67 = bitcast %union.anon.169* %66 to %struct._dnode.168*, !dbg !13721
  %68 = call %struct._dnode.168* @sys_dlist_peek_next(%struct._dnode.168* noundef %63, %struct._dnode.168* noundef %67) #13, !dbg !13721
  %69 = icmp ne %struct._dnode.168* %68, null, !dbg !13721
  br i1 %69, label %70, label %79, !dbg !13721

70:                                               ; preds = %62
  %71 = load %struct._dnode.168*, %struct._dnode.168** %2, align 4, !dbg !13721
  %72 = load %struct.k_thread.180*, %struct.k_thread.180** %4, align 4, !dbg !13721
  %73 = getelementptr inbounds %struct.k_thread.180, %struct.k_thread.180* %72, i32 0, i32 0, !dbg !13721
  %74 = getelementptr inbounds %struct._thread_base.173, %struct._thread_base.173* %73, i32 0, i32 0, !dbg !13721
  %75 = bitcast %union.anon.169* %74 to %struct._dnode.168*, !dbg !13721
  %76 = call %struct._dnode.168* @sys_dlist_peek_next(%struct._dnode.168* noundef %71, %struct._dnode.168* noundef %75) #13, !dbg !13721
  %77 = bitcast %struct._dnode.168* %76 to i8*, !dbg !13721
  %78 = bitcast i8* %77 to %struct.k_thread.180*, !dbg !13721
  br label %80, !dbg !13721

79:                                               ; preds = %62
  br label %80, !dbg !13721

80:                                               ; preds = %79, %70
  %81 = phi %struct.k_thread.180* [ %78, %70 ], [ null, %79 ], !dbg !13721
  br label %83, !dbg !13721

82:                                               ; preds = %59
  br label %83, !dbg !13721

83:                                               ; preds = %82, %80
  %84 = phi %struct.k_thread.180* [ %81, %80 ], [ null, %82 ], !dbg !13721
  store %struct.k_thread.180* %84, %struct.k_thread.180** %4, align 4, !dbg !13721
  br label %42, !dbg !13721, !llvm.loop !13735

85:                                               ; preds = %42
  %86 = load %struct._dnode.168*, %struct._dnode.168** %2, align 4, !dbg !13737
  %87 = load %struct.k_thread.180*, %struct.k_thread.180** %3, align 4, !dbg !13738
  %88 = getelementptr inbounds %struct.k_thread.180, %struct.k_thread.180* %87, i32 0, i32 0, !dbg !13739
  %89 = getelementptr inbounds %struct._thread_base.173, %struct._thread_base.173* %88, i32 0, i32 0, !dbg !13740
  %90 = bitcast %union.anon.169* %89 to %struct._dnode.168*, !dbg !13740
  call void @sys_dlist_append(%struct._dnode.168* noundef %86, %struct._dnode.168* noundef %90) #13, !dbg !13741
  br label %91, !dbg !13742

91:                                               ; preds = %50, %85
  br label %92, !dbg !13743

92:                                               ; preds = %16, %91
  call void @update_cache(i32 noundef 0) #10, !dbg !13744
  call void @flag_ipi() #10, !dbg !13745
  br label %93, !dbg !13746

93:                                               ; preds = %92, %11, %1
  ret void, !dbg !13747
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @z_is_thread_ready(%struct.k_thread.180* noundef %0) #1 !dbg !13748 {
  %2 = alloca %struct.k_thread.180*, align 4
  store %struct.k_thread.180* %0, %struct.k_thread.180** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.180** %2, metadata !13749, metadata !DIExpression()), !dbg !13750
  %3 = load %struct.k_thread.180*, %struct.k_thread.180** %2, align 4, !dbg !13751
  %4 = call zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread.180* noundef %3) #10, !dbg !13752
  %5 = zext i1 %4 to i32, !dbg !13753
  %6 = icmp ne i32 %5, 0, !dbg !13754
  br i1 %6, label %10, label %7, !dbg !13755

7:                                                ; preds = %1
  %8 = load %struct.k_thread.180*, %struct.k_thread.180** %2, align 4, !dbg !13756
  %9 = call zeroext i1 @z_is_thread_timeout_active(%struct.k_thread.180* noundef %8) #10, !dbg !13757
  br label %10, !dbg !13755

10:                                               ; preds = %7, %1
  %11 = phi i1 [ true, %1 ], [ %9, %7 ]
  %12 = xor i1 %11, true, !dbg !13758
  ret i1 %12, !dbg !13759
}

; Function Attrs: noinline nounwind optnone
define internal void @flag_ipi() #1 !dbg !13760 {
  ret void, !dbg !13761
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_move_thread_to_end_of_prio_q(%struct.k_thread.180* noundef %0) #1 !dbg !13762 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca %union.anon.68, align 4
  %6 = alloca %struct.k_spinlock.13*, align 4
  %7 = alloca %union.anon.68, align 4
  %8 = alloca %struct.k_spinlock.13*, align 4
  %9 = alloca %struct.k_thread.180*, align 4
  %10 = alloca %union.anon.68, align 4
  %11 = alloca %union.anon.68, align 4
  store %struct.k_thread.180* %0, %struct.k_thread.180** %9, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.180** %9, metadata !13763, metadata !DIExpression()), !dbg !13764
  call void @llvm.dbg.declare(metadata %union.anon.68* %10, metadata !13765, metadata !DIExpression()), !dbg !13767
  %12 = bitcast %union.anon.68* %10 to i8*, !dbg !13767
  call void @llvm.memset.p0i8.i32(i8* align 4 %12, i8 0, i32 4, i1 false), !dbg !13767
  call void @llvm.dbg.declare(metadata %union.anon.68* %11, metadata !13768, metadata !DIExpression()), !dbg !13767
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %8, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %8, metadata !12804, metadata !DIExpression()) #9, !dbg !13769
  %13 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %8, align 4, !dbg !13771
  call void @llvm.dbg.declare(metadata %union.anon.68* %7, metadata !12812, metadata !DIExpression()) #9, !dbg !13772
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12814, metadata !DIExpression()) #9, !dbg !13773
  call void @llvm.dbg.declare(metadata i32* %3, metadata !12818, metadata !DIExpression()) #9, !dbg !13775
  %14 = call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #9, !dbg !13776, !srcloc !12821
  %15 = extractvalue { i32, i32 } %14, 0, !dbg !13776
  %16 = extractvalue { i32, i32 } %14, 1, !dbg !13776
  store i32 %15, i32* %2, align 4, !dbg !13776
  store i32 %16, i32* %3, align 4, !dbg !13776
  %17 = load i32, i32* %2, align 4, !dbg !13777
  %18 = getelementptr inbounds %union.anon.68, %union.anon.68* %7, i32 0, i32 0, !dbg !13778
  store i32 %17, i32* %18, align 4, !dbg !13779
  %19 = getelementptr inbounds %union.anon.68, %union.anon.68* %7, i32 0, i32 0, !dbg !13780
  %20 = load i32, i32* %19, align 4, !dbg !13780
  %21 = getelementptr inbounds %union.anon.68, %union.anon.68* %11, i32 0, i32 0, !dbg !13767
  store i32 %20, i32* %21, align 4, !dbg !13767
  br label %22, !dbg !13767

22:                                               ; preds = %29, %1
  %23 = getelementptr inbounds %union.anon.68, %union.anon.68* %10, i32 0, i32 0, !dbg !13781
  %24 = load i32, i32* %23, align 4, !dbg !13781
  %25 = icmp ne i32 %24, 0, !dbg !13781
  %26 = xor i1 %25, true, !dbg !13781
  br i1 %26, label %27, label %40, !dbg !13767

27:                                               ; preds = %22
  %28 = load %struct.k_thread.180*, %struct.k_thread.180** %9, align 4, !dbg !13783
  call void @move_thread_to_end_of_prio_q(%struct.k_thread.180* noundef %28) #10, !dbg !13785
  br label %29, !dbg !13786

29:                                               ; preds = %27
  %30 = getelementptr inbounds %union.anon.68, %union.anon.68* %11, i32 0, i32 0, !dbg !13781
  %31 = bitcast i32* %30 to [1 x i32]*, !dbg !13781
  %32 = load [1 x i32], [1 x i32]* %31, align 4, !dbg !13781
  %33 = getelementptr inbounds %union.anon.68, %union.anon.68* %5, i32 0, i32 0
  %34 = bitcast i32* %33 to [1 x i32]*
  store [1 x i32] %32, [1 x i32]* %34, align 4
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %6, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %6, metadata !12846, metadata !DIExpression()) #9, !dbg !13787
  call void @llvm.dbg.declare(metadata %union.anon.68* %5, metadata !12852, metadata !DIExpression()) #9, !dbg !13789
  %35 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %6, align 4, !dbg !13790
  %36 = getelementptr inbounds %union.anon.68, %union.anon.68* %5, i32 0, i32 0, !dbg !13791
  %37 = load i32, i32* %36, align 4, !dbg !13791
  store i32 %37, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !12856, metadata !DIExpression()) #9, !dbg !13792
  %38 = load i32, i32* %4, align 4, !dbg !13794
  call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %38) #9, !dbg !13795, !srcloc !12862
  %39 = getelementptr inbounds %union.anon.68, %union.anon.68* %10, i32 0, i32 0, !dbg !13781
  store i32 1, i32* %39, align 4, !dbg !13781
  br label %22, !dbg !13781, !llvm.loop !13796

40:                                               ; preds = %22
  ret void, !dbg !13798
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_sched_start(%struct.k_thread.180* noundef %0) #1 !dbg !13799 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca %union.anon.68, align 4
  %6 = alloca %struct.k_spinlock.13*, align 4
  %7 = alloca %union.anon.68, align 4
  %8 = alloca %struct.k_spinlock.13*, align 4
  %9 = alloca %struct.k_thread.180*, align 4
  %10 = alloca %union.anon.68, align 4
  store %struct.k_thread.180* %0, %struct.k_thread.180** %9, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.180** %9, metadata !13800, metadata !DIExpression()), !dbg !13801
  call void @llvm.dbg.declare(metadata %union.anon.68* %10, metadata !13802, metadata !DIExpression()), !dbg !13803
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %8, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %8, metadata !12804, metadata !DIExpression()) #9, !dbg !13804
  %11 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %8, align 4, !dbg !13806
  call void @llvm.dbg.declare(metadata %union.anon.68* %7, metadata !12812, metadata !DIExpression()) #9, !dbg !13807
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12814, metadata !DIExpression()) #9, !dbg !13808
  call void @llvm.dbg.declare(metadata i32* %3, metadata !12818, metadata !DIExpression()) #9, !dbg !13810
  %12 = call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #9, !dbg !13811, !srcloc !12821
  %13 = extractvalue { i32, i32 } %12, 0, !dbg !13811
  %14 = extractvalue { i32, i32 } %12, 1, !dbg !13811
  store i32 %13, i32* %2, align 4, !dbg !13811
  store i32 %14, i32* %3, align 4, !dbg !13811
  %15 = load i32, i32* %2, align 4, !dbg !13812
  %16 = getelementptr inbounds %union.anon.68, %union.anon.68* %7, i32 0, i32 0, !dbg !13813
  store i32 %15, i32* %16, align 4, !dbg !13814
  %17 = getelementptr inbounds %union.anon.68, %union.anon.68* %7, i32 0, i32 0, !dbg !13815
  %18 = load i32, i32* %17, align 4, !dbg !13815
  %19 = getelementptr inbounds %union.anon.68, %union.anon.68* %10, i32 0, i32 0, !dbg !13816
  store i32 %18, i32* %19, align 4, !dbg !13816
  %20 = load %struct.k_thread.180*, %struct.k_thread.180** %9, align 4, !dbg !13817
  %21 = call zeroext i1 @z_has_thread_started(%struct.k_thread.180* noundef %20) #10, !dbg !13819
  br i1 %21, label %22, label %32, !dbg !13820

22:                                               ; preds = %1
  %23 = getelementptr inbounds %union.anon.68, %union.anon.68* %10, i32 0, i32 0, !dbg !13821
  %24 = bitcast i32* %23 to [1 x i32]*, !dbg !13821
  %25 = load [1 x i32], [1 x i32]* %24, align 4, !dbg !13821
  %26 = getelementptr inbounds %union.anon.68, %union.anon.68* %5, i32 0, i32 0
  %27 = bitcast i32* %26 to [1 x i32]*
  store [1 x i32] %25, [1 x i32]* %27, align 4
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %6, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %6, metadata !12846, metadata !DIExpression()) #9, !dbg !13823
  call void @llvm.dbg.declare(metadata %union.anon.68* %5, metadata !12852, metadata !DIExpression()) #9, !dbg !13825
  %28 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %6, align 4, !dbg !13826
  %29 = getelementptr inbounds %union.anon.68, %union.anon.68* %5, i32 0, i32 0, !dbg !13827
  %30 = load i32, i32* %29, align 4, !dbg !13827
  store i32 %30, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !12856, metadata !DIExpression()) #9, !dbg !13828
  %31 = load i32, i32* %4, align 4, !dbg !13830
  call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %31) #9, !dbg !13831, !srcloc !12862
  br label %38, !dbg !13832

32:                                               ; preds = %1
  %33 = load %struct.k_thread.180*, %struct.k_thread.180** %9, align 4, !dbg !13833
  call void @z_mark_thread_as_started.85(%struct.k_thread.180* noundef %33) #10, !dbg !13834
  %34 = load %struct.k_thread.180*, %struct.k_thread.180** %9, align 4, !dbg !13835
  call void @ready_thread(%struct.k_thread.180* noundef %34) #10, !dbg !13836
  %35 = getelementptr inbounds %union.anon.68, %union.anon.68* %10, i32 0, i32 0, !dbg !13837
  %36 = bitcast i32* %35 to [1 x i32]*, !dbg !13837
  %37 = load [1 x i32], [1 x i32]* %36, align 4, !dbg !13837
  call void @z_reschedule(%struct.k_spinlock.13* noundef @sched_spinlock, [1 x i32] %37) #10, !dbg !13837
  br label %38, !dbg !13838

38:                                               ; preds = %32, %22
  ret void, !dbg !13838
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @z_has_thread_started(%struct.k_thread.180* noundef %0) #1 !dbg !13839 {
  %2 = alloca %struct.k_thread.180*, align 4
  store %struct.k_thread.180* %0, %struct.k_thread.180** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.180** %2, metadata !13840, metadata !DIExpression()), !dbg !13841
  %3 = load %struct.k_thread.180*, %struct.k_thread.180** %2, align 4, !dbg !13842
  %4 = getelementptr inbounds %struct.k_thread.180, %struct.k_thread.180* %3, i32 0, i32 0, !dbg !13843
  %5 = getelementptr inbounds %struct._thread_base.173, %struct._thread_base.173* %4, i32 0, i32 3, !dbg !13844
  %6 = load i8, i8* %5, align 1, !dbg !13844
  %7 = zext i8 %6 to i32, !dbg !13842
  %8 = and i32 %7, 4, !dbg !13845
  %9 = icmp eq i32 %8, 0, !dbg !13846
  ret i1 %9, !dbg !13847
}

; Function Attrs: noinline nounwind optnone
define internal void @z_mark_thread_as_started.85(%struct.k_thread.180* noundef %0) #1 !dbg !13848 {
  %2 = alloca %struct.k_thread.180*, align 4
  store %struct.k_thread.180* %0, %struct.k_thread.180** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.180** %2, metadata !13849, metadata !DIExpression()), !dbg !13850
  %3 = load %struct.k_thread.180*, %struct.k_thread.180** %2, align 4, !dbg !13851
  %4 = getelementptr inbounds %struct.k_thread.180, %struct.k_thread.180* %3, i32 0, i32 0, !dbg !13852
  %5 = getelementptr inbounds %struct._thread_base.173, %struct._thread_base.173* %4, i32 0, i32 3, !dbg !13853
  %6 = load i8, i8* %5, align 1, !dbg !13854
  %7 = zext i8 %6 to i32, !dbg !13854
  %8 = and i32 %7, -5, !dbg !13854
  %9 = trunc i32 %8 to i8, !dbg !13854
  store i8 %9, i8* %5, align 1, !dbg !13854
  ret void, !dbg !13855
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_reschedule(%struct.k_spinlock.13* noundef %0, [1 x i32] %1) #1 !dbg !13856 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.k_spinlock.13*, align 4
  %5 = alloca %union.anon.68, align 4
  %6 = alloca %struct.k_spinlock.13*, align 4
  %7 = alloca %union.anon.68, align 4
  %8 = alloca %struct.k_spinlock.13*, align 4
  %9 = alloca %union.anon.68, align 4
  %10 = alloca %struct.k_spinlock.13*, align 4
  %11 = getelementptr inbounds %union.anon.68, %union.anon.68* %9, i32 0, i32 0
  %12 = bitcast i32* %11 to [1 x i32]*
  store [1 x i32] %1, [1 x i32]* %12, align 4
  store %struct.k_spinlock.13* %0, %struct.k_spinlock.13** %10, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %10, metadata !13857, metadata !DIExpression()), !dbg !13858
  call void @llvm.dbg.declare(metadata %union.anon.68* %9, metadata !13859, metadata !DIExpression()), !dbg !13860
  %13 = getelementptr inbounds %union.anon.68, %union.anon.68* %9, i32 0, i32 0, !dbg !13861
  %14 = load i32, i32* %13, align 4, !dbg !13861
  %15 = call zeroext i1 @resched(i32 noundef %14) #10, !dbg !13863
  br i1 %15, label %16, label %30, !dbg !13864

16:                                               ; preds = %2
  %17 = call zeroext i1 @need_swap() #10, !dbg !13865
  br i1 %17, label %18, label %30, !dbg !13866

18:                                               ; preds = %16
  %19 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %10, align 4, !dbg !13867
  %20 = getelementptr inbounds %union.anon.68, %union.anon.68* %9, i32 0, i32 0, !dbg !13869
  %21 = bitcast i32* %20 to [1 x i32]*, !dbg !13869
  %22 = load [1 x i32], [1 x i32]* %21, align 4, !dbg !13869
  %23 = getelementptr inbounds %union.anon.68, %union.anon.68* %5, i32 0, i32 0
  %24 = bitcast i32* %23 to [1 x i32]*
  store [1 x i32] %22, [1 x i32]* %24, align 4
  store %struct.k_spinlock.13* %19, %struct.k_spinlock.13** %6, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %6, metadata !13870, metadata !DIExpression()) #9, !dbg !13874
  call void @llvm.dbg.declare(metadata %union.anon.68* %5, metadata !13876, metadata !DIExpression()) #9, !dbg !13877
  %25 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %6, align 4, !dbg !13878
  store %struct.k_spinlock.13* %25, %struct.k_spinlock.13** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %4, metadata !13879, metadata !DIExpression()) #9, !dbg !13883
  %26 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %4, align 4, !dbg !13885
  %27 = getelementptr inbounds %union.anon.68, %union.anon.68* %5, i32 0, i32 0, !dbg !13886
  %28 = load i32, i32* %27, align 4, !dbg !13886
  %29 = call i32 @z_swap_irqlock(i32 noundef %28) #13, !dbg !13887
  br label %41, !dbg !13888

30:                                               ; preds = %16, %2
  %31 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %10, align 4, !dbg !13889
  %32 = getelementptr inbounds %union.anon.68, %union.anon.68* %9, i32 0, i32 0, !dbg !13891
  %33 = bitcast i32* %32 to [1 x i32]*, !dbg !13891
  %34 = load [1 x i32], [1 x i32]* %33, align 4, !dbg !13891
  %35 = getelementptr inbounds %union.anon.68, %union.anon.68* %7, i32 0, i32 0
  %36 = bitcast i32* %35 to [1 x i32]*
  store [1 x i32] %34, [1 x i32]* %36, align 4
  store %struct.k_spinlock.13* %31, %struct.k_spinlock.13** %8, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %8, metadata !12846, metadata !DIExpression()) #9, !dbg !13892
  call void @llvm.dbg.declare(metadata %union.anon.68* %7, metadata !12852, metadata !DIExpression()) #9, !dbg !13894
  %37 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %8, align 4, !dbg !13895
  %38 = getelementptr inbounds %union.anon.68, %union.anon.68* %7, i32 0, i32 0, !dbg !13896
  %39 = load i32, i32* %38, align 4, !dbg !13896
  store i32 %39, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !12856, metadata !DIExpression()) #9, !dbg !13897
  %40 = load i32, i32* %3, align 4, !dbg !13899
  call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %40) #9, !dbg !13900, !srcloc !12862
  call void @signal_pending_ipi() #10, !dbg !13901
  br label %41

41:                                               ; preds = %30, %18
  ret void, !dbg !13902
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @resched(i32 noundef %0) #1 !dbg !13903 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !13906, metadata !DIExpression()), !dbg !13907
  %5 = load i32, i32* %4, align 4, !dbg !13908
  store i32 %5, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !13909, metadata !DIExpression()), !dbg !13913
  %6 = load i32, i32* %3, align 4, !dbg !13915
  %7 = icmp eq i32 %6, 0, !dbg !13916
  br i1 %7, label %8, label %15, !dbg !13917

8:                                                ; preds = %1
  call void @llvm.dbg.declare(metadata i32* %2, metadata !13918, metadata !DIExpression()) #9, !dbg !13920
  %9 = call i32 asm sideeffect "MRS $0, ipsr", "=r"() #9, !dbg !13924, !srcloc !13925
  store i32 %9, i32* %2, align 4, !dbg !13924
  %10 = load i32, i32* %2, align 4, !dbg !13926
  %11 = icmp ne i32 %10, 0, !dbg !13927
  %12 = zext i1 %11 to i64, !dbg !13927
  %13 = select i1 %11, i32 1, i32 0, !dbg !13927
  %14 = xor i1 %11, true, !dbg !13928
  br label %15

15:                                               ; preds = %8, %1
  %16 = phi i1 [ false, %1 ], [ %14, %8 ], !dbg !13929
  ret i1 %16, !dbg !13930
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @need_swap() #1 !dbg !13931 {
  %1 = alloca %struct.k_thread.180*, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.180** %1, metadata !13932, metadata !DIExpression()), !dbg !13933
  %2 = load %struct.k_thread.180*, %struct.k_thread.180** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !13934
  store %struct.k_thread.180* %2, %struct.k_thread.180** %1, align 4, !dbg !13935
  %3 = load %struct.k_thread.180*, %struct.k_thread.180** %1, align 4, !dbg !13936
  %4 = load %struct.k_thread.180*, %struct.k_thread.180** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13937
  %5 = icmp ne %struct.k_thread.180* %3, %4, !dbg !13938
  ret i1 %5, !dbg !13939
}

; Function Attrs: noinline nounwind optnone
define internal i32 @z_swap_irqlock(i32 noundef %0) #1 !dbg !13940 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !13941, metadata !DIExpression()), !dbg !13942
  call void @llvm.dbg.declare(metadata i32* %3, metadata !13943, metadata !DIExpression()), !dbg !13944
  %4 = load i32, i32* %2, align 4, !dbg !13945
  %5 = call i32 @arch_swap(i32 noundef %4) #10, !dbg !13946
  store i32 %5, i32* %3, align 4, !dbg !13947
  %6 = load i32, i32* %3, align 4, !dbg !13948
  ret i32 %6, !dbg !13949
}

; Function Attrs: noinline nounwind optnone
define internal void @signal_pending_ipi() #1 !dbg !13950 {
  ret void, !dbg !13951
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_impl_k_thread_suspend(%struct.k_thread.180* noundef %0) #1 !dbg !13952 {
  %2 = alloca %struct.k_thread.180*, align 4
  %3 = alloca %struct.k_thread.180*, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca %struct.k_thread.180*, align 4
  %8 = alloca %union.anon.68, align 4
  %9 = alloca %struct.k_spinlock.13*, align 4
  %10 = alloca %union.anon.68, align 4
  %11 = alloca %struct.k_spinlock.13*, align 4
  %12 = alloca %struct.k_thread.180*, align 4
  %13 = alloca %union.anon.68, align 4
  %14 = alloca %union.anon.68, align 4
  store %struct.k_thread.180* %0, %struct.k_thread.180** %12, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.180** %12, metadata !13953, metadata !DIExpression()), !dbg !13954
  br label %15, !dbg !13955

15:                                               ; preds = %1
  br label %16, !dbg !13956

16:                                               ; preds = %15
  %17 = load %struct.k_thread.180*, %struct.k_thread.180** %12, align 4, !dbg !13958
  %18 = call i32 @z_abort_thread_timeout(%struct.k_thread.180* noundef %17) #10, !dbg !13959
  call void @llvm.dbg.declare(metadata %union.anon.68* %13, metadata !13960, metadata !DIExpression()), !dbg !13962
  %19 = bitcast %union.anon.68* %13 to i8*, !dbg !13962
  call void @llvm.memset.p0i8.i32(i8* align 4 %19, i8 0, i32 4, i1 false), !dbg !13962
  call void @llvm.dbg.declare(metadata %union.anon.68* %14, metadata !13963, metadata !DIExpression()), !dbg !13962
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %11, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %11, metadata !12804, metadata !DIExpression()) #9, !dbg !13964
  %20 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %11, align 4, !dbg !13966
  call void @llvm.dbg.declare(metadata %union.anon.68* %10, metadata !12812, metadata !DIExpression()) #9, !dbg !13967
  call void @llvm.dbg.declare(metadata i32* %4, metadata !12814, metadata !DIExpression()) #9, !dbg !13968
  call void @llvm.dbg.declare(metadata i32* %5, metadata !12818, metadata !DIExpression()) #9, !dbg !13970
  %21 = call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #9, !dbg !13971, !srcloc !12821
  %22 = extractvalue { i32, i32 } %21, 0, !dbg !13971
  %23 = extractvalue { i32, i32 } %21, 1, !dbg !13971
  store i32 %22, i32* %4, align 4, !dbg !13971
  store i32 %23, i32* %5, align 4, !dbg !13971
  %24 = load i32, i32* %4, align 4, !dbg !13972
  %25 = getelementptr inbounds %union.anon.68, %union.anon.68* %10, i32 0, i32 0, !dbg !13973
  store i32 %24, i32* %25, align 4, !dbg !13974
  %26 = getelementptr inbounds %union.anon.68, %union.anon.68* %10, i32 0, i32 0, !dbg !13975
  %27 = load i32, i32* %26, align 4, !dbg !13975
  %28 = getelementptr inbounds %union.anon.68, %union.anon.68* %14, i32 0, i32 0, !dbg !13962
  store i32 %27, i32* %28, align 4, !dbg !13962
  br label %29, !dbg !13962

29:                                               ; preds = %60, %16
  %30 = getelementptr inbounds %union.anon.68, %union.anon.68* %13, i32 0, i32 0, !dbg !13976
  %31 = load i32, i32* %30, align 4, !dbg !13976
  %32 = icmp ne i32 %31, 0, !dbg !13976
  %33 = xor i1 %32, true, !dbg !13976
  br i1 %33, label %34, label %71, !dbg !13962

34:                                               ; preds = %29
  %35 = load %struct.k_thread.180*, %struct.k_thread.180** %12, align 4, !dbg !13978
  %36 = call zeroext i1 @z_is_thread_queued(%struct.k_thread.180* noundef %35) #10, !dbg !13981
  br i1 %36, label %37, label %54, !dbg !13982

37:                                               ; preds = %34
  %38 = load %struct.k_thread.180*, %struct.k_thread.180** %12, align 4, !dbg !13983
  store %struct.k_thread.180* %38, %struct.k_thread.180** %7, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.180** %7, metadata !13193, metadata !DIExpression()) #9, !dbg !13985
  %39 = load %struct.k_thread.180*, %struct.k_thread.180** %7, align 4, !dbg !13987
  %40 = getelementptr inbounds %struct.k_thread.180, %struct.k_thread.180* %39, i32 0, i32 0, !dbg !13988
  %41 = getelementptr inbounds %struct._thread_base.173, %struct._thread_base.173* %40, i32 0, i32 3, !dbg !13989
  %42 = load i8, i8* %41, align 1, !dbg !13990
  %43 = zext i8 %42 to i32, !dbg !13990
  %44 = and i32 %43, -129, !dbg !13990
  %45 = trunc i32 %44 to i8, !dbg !13990
  store i8 %45, i8* %41, align 1, !dbg !13990
  %46 = load %struct.k_thread.180*, %struct.k_thread.180** %7, align 4, !dbg !13991
  %47 = call zeroext i1 @should_queue_thread(%struct.k_thread.180* noundef %46) #13, !dbg !13992
  br i1 %47, label %48, label %53, !dbg !13993

48:                                               ; preds = %37
  %49 = load %struct.k_thread.180*, %struct.k_thread.180** %7, align 4, !dbg !13994
  store %struct.k_thread.180* %49, %struct.k_thread.180** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.180** %3, metadata !13207, metadata !DIExpression()) #9, !dbg !13995
  %50 = load %struct.k_thread.180*, %struct.k_thread.180** %3, align 4, !dbg !13997
  store %struct.k_thread.180* %50, %struct.k_thread.180** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.180** %2, metadata !13212, metadata !DIExpression()), !dbg !13998
  %51 = bitcast i8* bitcast (%struct._dnode.168* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1) to i8*) to %struct._dnode.168*, !dbg !14000
  %52 = load %struct.k_thread.180*, %struct.k_thread.180** %3, align 4, !dbg !14001
  call void @z_priq_dumb_remove(%struct._dnode.168* noundef %51, %struct.k_thread.180* noundef %52) #13, !dbg !14002
  br label %53, !dbg !14003

53:                                               ; preds = %37, %48
  br label %54, !dbg !14004

54:                                               ; preds = %53, %34
  %55 = load %struct.k_thread.180*, %struct.k_thread.180** %12, align 4, !dbg !14005
  call void @z_mark_thread_as_suspended(%struct.k_thread.180* noundef %55) #10, !dbg !14006
  %56 = load %struct.k_thread.180*, %struct.k_thread.180** %12, align 4, !dbg !14007
  %57 = load %struct.k_thread.180*, %struct.k_thread.180** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14008
  %58 = icmp eq %struct.k_thread.180* %56, %57, !dbg !14009
  %59 = zext i1 %58 to i32, !dbg !14009
  call void @update_cache(i32 noundef %59) #10, !dbg !14010
  br label %60, !dbg !14011

60:                                               ; preds = %54
  %61 = getelementptr inbounds %union.anon.68, %union.anon.68* %14, i32 0, i32 0, !dbg !13976
  %62 = bitcast i32* %61 to [1 x i32]*, !dbg !13976
  %63 = load [1 x i32], [1 x i32]* %62, align 4, !dbg !13976
  %64 = getelementptr inbounds %union.anon.68, %union.anon.68* %8, i32 0, i32 0
  %65 = bitcast i32* %64 to [1 x i32]*
  store [1 x i32] %63, [1 x i32]* %65, align 4
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %9, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %9, metadata !12846, metadata !DIExpression()) #9, !dbg !14012
  call void @llvm.dbg.declare(metadata %union.anon.68* %8, metadata !12852, metadata !DIExpression()) #9, !dbg !14014
  %66 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %9, align 4, !dbg !14015
  %67 = getelementptr inbounds %union.anon.68, %union.anon.68* %8, i32 0, i32 0, !dbg !14016
  %68 = load i32, i32* %67, align 4, !dbg !14016
  store i32 %68, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !12856, metadata !DIExpression()) #9, !dbg !14017
  %69 = load i32, i32* %6, align 4, !dbg !14019
  call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %69) #9, !dbg !14020, !srcloc !12862
  %70 = getelementptr inbounds %union.anon.68, %union.anon.68* %13, i32 0, i32 0, !dbg !13976
  store i32 1, i32* %70, align 4, !dbg !13976
  br label %29, !dbg !13976, !llvm.loop !14021

71:                                               ; preds = %29
  %72 = load %struct.k_thread.180*, %struct.k_thread.180** %12, align 4, !dbg !14023
  %73 = load %struct.k_thread.180*, %struct.k_thread.180** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14025
  %74 = icmp eq %struct.k_thread.180* %72, %73, !dbg !14026
  br i1 %74, label %75, label %76, !dbg !14027

75:                                               ; preds = %71
  call void @z_reschedule_unlocked() #10, !dbg !14028
  br label %76, !dbg !14030

76:                                               ; preds = %75, %71
  br label %77, !dbg !14031

77:                                               ; preds = %76
  br label %78, !dbg !14032

78:                                               ; preds = %77
  ret void, !dbg !14034
}

; Function Attrs: noinline nounwind optnone
define internal i32 @z_abort_thread_timeout(%struct.k_thread.180* noundef %0) #1 !dbg !14035 {
  %2 = alloca %struct.k_thread.180*, align 4
  store %struct.k_thread.180* %0, %struct.k_thread.180** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.180** %2, metadata !14036, metadata !DIExpression()), !dbg !14037
  %3 = load %struct.k_thread.180*, %struct.k_thread.180** %2, align 4, !dbg !14038
  %4 = getelementptr inbounds %struct.k_thread.180, %struct.k_thread.180* %3, i32 0, i32 0, !dbg !14039
  %5 = getelementptr inbounds %struct._thread_base.173, %struct._thread_base.173* %4, i32 0, i32 7, !dbg !14040
  %6 = call i32 @z_abort_timeout(%struct._timeout.172* noundef %5) #10, !dbg !14041
  ret i32 %6, !dbg !14042
}

; Function Attrs: noinline nounwind optnone
define internal void @z_mark_thread_as_suspended(%struct.k_thread.180* noundef %0) #1 !dbg !14043 {
  %2 = alloca %struct.k_thread.180*, align 4
  store %struct.k_thread.180* %0, %struct.k_thread.180** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.180** %2, metadata !14044, metadata !DIExpression()), !dbg !14045
  %3 = load %struct.k_thread.180*, %struct.k_thread.180** %2, align 4, !dbg !14046
  %4 = getelementptr inbounds %struct.k_thread.180, %struct.k_thread.180* %3, i32 0, i32 0, !dbg !14047
  %5 = getelementptr inbounds %struct._thread_base.173, %struct._thread_base.173* %4, i32 0, i32 3, !dbg !14048
  %6 = load i8, i8* %5, align 1, !dbg !14049
  %7 = zext i8 %6 to i32, !dbg !14049
  %8 = or i32 %7, 16, !dbg !14049
  %9 = trunc i32 %8 to i8, !dbg !14049
  store i8 %9, i8* %5, align 1, !dbg !14049
  br label %10, !dbg !14050

10:                                               ; preds = %1
  br label %11, !dbg !14051

11:                                               ; preds = %10
  ret void, !dbg !14053
}

; Function Attrs: noinline nounwind optnone
define internal void @z_reschedule_unlocked() #1 !dbg !14054 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %1, metadata !12814, metadata !DIExpression()) #9, !dbg !14055
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12818, metadata !DIExpression()) #9, !dbg !14057
  %3 = call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #9, !dbg !14058, !srcloc !12821
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !14058
  %5 = extractvalue { i32, i32 } %3, 1, !dbg !14058
  store i32 %4, i32* %1, align 4, !dbg !14058
  store i32 %5, i32* %2, align 4, !dbg !14058
  %6 = load i32, i32* %1, align 4, !dbg !14059
  call void @z_reschedule_irqlock(i32 noundef %6) #10, !dbg !14060
  ret void, !dbg !14061
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_reschedule_irqlock(i32 noundef %0) #1 !dbg !14062 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !14063, metadata !DIExpression()), !dbg !14064
  %4 = load i32, i32* %3, align 4, !dbg !14065
  %5 = call zeroext i1 @resched(i32 noundef %4) #10, !dbg !14067
  br i1 %5, label %6, label %9, !dbg !14068

6:                                                ; preds = %1
  %7 = load i32, i32* %3, align 4, !dbg !14069
  %8 = call i32 @z_swap_irqlock(i32 noundef %7) #10, !dbg !14071
  br label %12, !dbg !14072

9:                                                ; preds = %1
  %10 = load i32, i32* %3, align 4, !dbg !14073
  store i32 %10, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12856, metadata !DIExpression()) #9, !dbg !14075
  %11 = load i32, i32* %2, align 4, !dbg !14077
  call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %11) #9, !dbg !14078, !srcloc !12862
  call void @signal_pending_ipi() #10, !dbg !14079
  br label %12

12:                                               ; preds = %9, %6
  ret void, !dbg !14080
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_impl_k_thread_resume(%struct.k_thread.180* noundef %0) #1 !dbg !14081 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca %union.anon.68, align 4
  %6 = alloca %struct.k_spinlock.13*, align 4
  %7 = alloca %union.anon.68, align 4
  %8 = alloca %struct.k_spinlock.13*, align 4
  %9 = alloca %struct.k_thread.180*, align 4
  %10 = alloca %union.anon.68, align 4
  store %struct.k_thread.180* %0, %struct.k_thread.180** %9, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.180** %9, metadata !14082, metadata !DIExpression()), !dbg !14083
  br label %11, !dbg !14084

11:                                               ; preds = %1
  br label %12, !dbg !14085

12:                                               ; preds = %11
  call void @llvm.dbg.declare(metadata %union.anon.68* %10, metadata !14087, metadata !DIExpression()), !dbg !14088
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %8, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %8, metadata !12804, metadata !DIExpression()) #9, !dbg !14089
  %13 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %8, align 4, !dbg !14091
  call void @llvm.dbg.declare(metadata %union.anon.68* %7, metadata !12812, metadata !DIExpression()) #9, !dbg !14092
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12814, metadata !DIExpression()) #9, !dbg !14093
  call void @llvm.dbg.declare(metadata i32* %3, metadata !12818, metadata !DIExpression()) #9, !dbg !14095
  %14 = call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #9, !dbg !14096, !srcloc !12821
  %15 = extractvalue { i32, i32 } %14, 0, !dbg !14096
  %16 = extractvalue { i32, i32 } %14, 1, !dbg !14096
  store i32 %15, i32* %2, align 4, !dbg !14096
  store i32 %16, i32* %3, align 4, !dbg !14096
  %17 = load i32, i32* %2, align 4, !dbg !14097
  %18 = getelementptr inbounds %union.anon.68, %union.anon.68* %7, i32 0, i32 0, !dbg !14098
  store i32 %17, i32* %18, align 4, !dbg !14099
  %19 = getelementptr inbounds %union.anon.68, %union.anon.68* %7, i32 0, i32 0, !dbg !14100
  %20 = load i32, i32* %19, align 4, !dbg !14100
  %21 = getelementptr inbounds %union.anon.68, %union.anon.68* %10, i32 0, i32 0, !dbg !14101
  store i32 %20, i32* %21, align 4, !dbg !14101
  %22 = load %struct.k_thread.180*, %struct.k_thread.180** %9, align 4, !dbg !14102
  %23 = call zeroext i1 @z_is_thread_suspended(%struct.k_thread.180* noundef %22) #10, !dbg !14104
  br i1 %23, label %34, label %24, !dbg !14105

24:                                               ; preds = %12
  %25 = getelementptr inbounds %union.anon.68, %union.anon.68* %10, i32 0, i32 0, !dbg !14106
  %26 = bitcast i32* %25 to [1 x i32]*, !dbg !14106
  %27 = load [1 x i32], [1 x i32]* %26, align 4, !dbg !14106
  %28 = getelementptr inbounds %union.anon.68, %union.anon.68* %5, i32 0, i32 0
  %29 = bitcast i32* %28 to [1 x i32]*
  store [1 x i32] %27, [1 x i32]* %29, align 4
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %6, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %6, metadata !12846, metadata !DIExpression()) #9, !dbg !14108
  call void @llvm.dbg.declare(metadata %union.anon.68* %5, metadata !12852, metadata !DIExpression()) #9, !dbg !14110
  %30 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %6, align 4, !dbg !14111
  %31 = getelementptr inbounds %union.anon.68, %union.anon.68* %5, i32 0, i32 0, !dbg !14112
  %32 = load i32, i32* %31, align 4, !dbg !14112
  store i32 %32, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !12856, metadata !DIExpression()) #9, !dbg !14113
  %33 = load i32, i32* %4, align 4, !dbg !14115
  call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %33) #9, !dbg !14116, !srcloc !12862
  br label %41, !dbg !14117

34:                                               ; preds = %12
  %35 = load %struct.k_thread.180*, %struct.k_thread.180** %9, align 4, !dbg !14118
  call void @z_mark_thread_as_not_suspended(%struct.k_thread.180* noundef %35) #10, !dbg !14119
  %36 = load %struct.k_thread.180*, %struct.k_thread.180** %9, align 4, !dbg !14120
  call void @ready_thread(%struct.k_thread.180* noundef %36) #10, !dbg !14121
  %37 = getelementptr inbounds %union.anon.68, %union.anon.68* %10, i32 0, i32 0, !dbg !14122
  %38 = bitcast i32* %37 to [1 x i32]*, !dbg !14122
  %39 = load [1 x i32], [1 x i32]* %38, align 4, !dbg !14122
  call void @z_reschedule(%struct.k_spinlock.13* noundef @sched_spinlock, [1 x i32] %39) #10, !dbg !14122
  br label %40, !dbg !14123

40:                                               ; preds = %34
  br label %41, !dbg !14124

41:                                               ; preds = %24, %40
  ret void, !dbg !14126
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @z_is_thread_suspended(%struct.k_thread.180* noundef %0) #1 !dbg !14127 {
  %2 = alloca %struct.k_thread.180*, align 4
  store %struct.k_thread.180* %0, %struct.k_thread.180** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.180** %2, metadata !14128, metadata !DIExpression()), !dbg !14129
  %3 = load %struct.k_thread.180*, %struct.k_thread.180** %2, align 4, !dbg !14130
  %4 = getelementptr inbounds %struct.k_thread.180, %struct.k_thread.180* %3, i32 0, i32 0, !dbg !14131
  %5 = getelementptr inbounds %struct._thread_base.173, %struct._thread_base.173* %4, i32 0, i32 3, !dbg !14132
  %6 = load i8, i8* %5, align 1, !dbg !14132
  %7 = zext i8 %6 to i32, !dbg !14130
  %8 = and i32 %7, 16, !dbg !14133
  %9 = icmp ne i32 %8, 0, !dbg !14134
  ret i1 %9, !dbg !14135
}

; Function Attrs: noinline nounwind optnone
define internal void @z_mark_thread_as_not_suspended(%struct.k_thread.180* noundef %0) #1 !dbg !14136 {
  %2 = alloca %struct.k_thread.180*, align 4
  store %struct.k_thread.180* %0, %struct.k_thread.180** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.180** %2, metadata !14137, metadata !DIExpression()), !dbg !14138
  %3 = load %struct.k_thread.180*, %struct.k_thread.180** %2, align 4, !dbg !14139
  %4 = getelementptr inbounds %struct.k_thread.180, %struct.k_thread.180* %3, i32 0, i32 0, !dbg !14140
  %5 = getelementptr inbounds %struct._thread_base.173, %struct._thread_base.173* %4, i32 0, i32 3, !dbg !14141
  %6 = load i8, i8* %5, align 1, !dbg !14142
  %7 = zext i8 %6 to i32, !dbg !14142
  %8 = and i32 %7, -17, !dbg !14142
  %9 = trunc i32 %8 to i8, !dbg !14142
  store i8 %9, i8* %5, align 1, !dbg !14142
  br label %10, !dbg !14143

10:                                               ; preds = %1
  br label %11, !dbg !14144

11:                                               ; preds = %10
  ret void, !dbg !14146
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_pend_thread(%struct.k_thread.180* noundef %0, %union.anon.169* noundef %1, [1 x i64] %2) #1 !dbg !14147 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca %union.anon.68, align 4
  %8 = alloca %struct.k_spinlock.13*, align 4
  %9 = alloca %union.anon.68, align 4
  %10 = alloca %struct.k_spinlock.13*, align 4
  %11 = alloca %union.argument_value, align 8
  %12 = alloca %struct.k_thread.180*, align 4
  %13 = alloca %union.anon.169*, align 4
  %14 = alloca %union.anon.68, align 4
  %15 = alloca %union.anon.68, align 4
  %16 = getelementptr inbounds %union.argument_value, %union.argument_value* %11, i32 0, i32 0
  %17 = bitcast i64* %16 to [1 x i64]*
  store [1 x i64] %2, [1 x i64]* %17, align 8
  store %struct.k_thread.180* %0, %struct.k_thread.180** %12, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.180** %12, metadata !14154, metadata !DIExpression()), !dbg !14155
  store %union.anon.169* %1, %union.anon.169** %13, align 4
  call void @llvm.dbg.declare(metadata %union.anon.169** %13, metadata !14156, metadata !DIExpression()), !dbg !14157
  call void @llvm.dbg.declare(metadata %union.argument_value* %11, metadata !14158, metadata !DIExpression()), !dbg !14159
  call void @llvm.dbg.declare(metadata %union.anon.68* %14, metadata !14160, metadata !DIExpression()), !dbg !14162
  %18 = bitcast %union.anon.68* %14 to i8*, !dbg !14162
  call void @llvm.memset.p0i8.i32(i8* align 4 %18, i8 0, i32 4, i1 false), !dbg !14162
  call void @llvm.dbg.declare(metadata %union.anon.68* %15, metadata !14163, metadata !DIExpression()), !dbg !14162
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %10, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %10, metadata !12804, metadata !DIExpression()) #9, !dbg !14164
  %19 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %10, align 4, !dbg !14166
  call void @llvm.dbg.declare(metadata %union.anon.68* %9, metadata !12812, metadata !DIExpression()) #9, !dbg !14167
  call void @llvm.dbg.declare(metadata i32* %4, metadata !12814, metadata !DIExpression()) #9, !dbg !14168
  call void @llvm.dbg.declare(metadata i32* %5, metadata !12818, metadata !DIExpression()) #9, !dbg !14170
  %20 = call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #9, !dbg !14171, !srcloc !12821
  %21 = extractvalue { i32, i32 } %20, 0, !dbg !14171
  %22 = extractvalue { i32, i32 } %20, 1, !dbg !14171
  store i32 %21, i32* %4, align 4, !dbg !14171
  store i32 %22, i32* %5, align 4, !dbg !14171
  %23 = load i32, i32* %4, align 4, !dbg !14172
  %24 = getelementptr inbounds %union.anon.68, %union.anon.68* %9, i32 0, i32 0, !dbg !14173
  store i32 %23, i32* %24, align 4, !dbg !14174
  %25 = getelementptr inbounds %union.anon.68, %union.anon.68* %9, i32 0, i32 0, !dbg !14175
  %26 = load i32, i32* %25, align 4, !dbg !14175
  %27 = getelementptr inbounds %union.anon.68, %union.anon.68* %15, i32 0, i32 0, !dbg !14162
  store i32 %26, i32* %27, align 4, !dbg !14162
  br label %28, !dbg !14162

28:                                               ; preds = %39, %3
  %29 = getelementptr inbounds %union.anon.68, %union.anon.68* %14, i32 0, i32 0, !dbg !14176
  %30 = load i32, i32* %29, align 4, !dbg !14176
  %31 = icmp ne i32 %30, 0, !dbg !14176
  %32 = xor i1 %31, true, !dbg !14176
  br i1 %32, label %33, label %50, !dbg !14162

33:                                               ; preds = %28
  %34 = load %struct.k_thread.180*, %struct.k_thread.180** %12, align 4, !dbg !14178
  %35 = load %union.anon.169*, %union.anon.169** %13, align 4, !dbg !14180
  %36 = getelementptr inbounds %union.argument_value, %union.argument_value* %11, i32 0, i32 0, !dbg !14181
  %37 = bitcast i64* %36 to [1 x i64]*, !dbg !14181
  %38 = load [1 x i64], [1 x i64]* %37, align 8, !dbg !14181
  call void @pend_locked(%struct.k_thread.180* noundef %34, %union.anon.169* noundef %35, [1 x i64] %38) #10, !dbg !14181
  br label %39, !dbg !14182

39:                                               ; preds = %33
  %40 = getelementptr inbounds %union.anon.68, %union.anon.68* %15, i32 0, i32 0, !dbg !14176
  %41 = bitcast i32* %40 to [1 x i32]*, !dbg !14176
  %42 = load [1 x i32], [1 x i32]* %41, align 4, !dbg !14176
  %43 = getelementptr inbounds %union.anon.68, %union.anon.68* %7, i32 0, i32 0
  %44 = bitcast i32* %43 to [1 x i32]*
  store [1 x i32] %42, [1 x i32]* %44, align 4
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %8, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %8, metadata !12846, metadata !DIExpression()) #9, !dbg !14183
  call void @llvm.dbg.declare(metadata %union.anon.68* %7, metadata !12852, metadata !DIExpression()) #9, !dbg !14185
  %45 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %8, align 4, !dbg !14186
  %46 = getelementptr inbounds %union.anon.68, %union.anon.68* %7, i32 0, i32 0, !dbg !14187
  %47 = load i32, i32* %46, align 4, !dbg !14187
  store i32 %47, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !12856, metadata !DIExpression()) #9, !dbg !14188
  %48 = load i32, i32* %6, align 4, !dbg !14190
  call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %48) #9, !dbg !14191, !srcloc !12862
  %49 = getelementptr inbounds %union.anon.68, %union.anon.68* %14, i32 0, i32 0, !dbg !14176
  store i32 1, i32* %49, align 4, !dbg !14176
  br label %28, !dbg !14176, !llvm.loop !14192

50:                                               ; preds = %28
  ret void, !dbg !14194
}

; Function Attrs: noinline nounwind optnone
define internal void @pend_locked(%struct.k_thread.180* noundef %0, %union.anon.169* noundef %1, [1 x i64] %2) #1 !dbg !14195 {
  %4 = alloca %union.argument_value, align 8
  %5 = alloca %struct.k_thread.180*, align 4
  %6 = alloca %union.anon.169*, align 4
  %7 = getelementptr inbounds %union.argument_value, %union.argument_value* %4, i32 0, i32 0
  %8 = bitcast i64* %7 to [1 x i64]*
  store [1 x i64] %2, [1 x i64]* %8, align 8
  store %struct.k_thread.180* %0, %struct.k_thread.180** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.180** %5, metadata !14196, metadata !DIExpression()), !dbg !14197
  store %union.anon.169* %1, %union.anon.169** %6, align 4
  call void @llvm.dbg.declare(metadata %union.anon.169** %6, metadata !14198, metadata !DIExpression()), !dbg !14199
  call void @llvm.dbg.declare(metadata %union.argument_value* %4, metadata !14200, metadata !DIExpression()), !dbg !14201
  %9 = load %struct.k_thread.180*, %struct.k_thread.180** %5, align 4, !dbg !14202
  %10 = load %union.anon.169*, %union.anon.169** %6, align 4, !dbg !14203
  call void @add_to_waitq_locked(%struct.k_thread.180* noundef %9, %union.anon.169* noundef %10) #10, !dbg !14204
  %11 = load %struct.k_thread.180*, %struct.k_thread.180** %5, align 4, !dbg !14205
  %12 = getelementptr inbounds %union.argument_value, %union.argument_value* %4, i32 0, i32 0, !dbg !14206
  %13 = bitcast i64* %12 to [1 x i64]*, !dbg !14206
  %14 = load [1 x i64], [1 x i64]* %13, align 8, !dbg !14206
  call void @add_thread_timeout(%struct.k_thread.180* noundef %11, [1 x i64] %14) #10, !dbg !14206
  ret void, !dbg !14207
}

; Function Attrs: noinline nounwind optnone
define internal void @add_to_waitq_locked(%struct.k_thread.180* noundef %0, %union.anon.169* noundef %1) #1 !dbg !14208 {
  %3 = alloca %struct._dnode.168*, align 4
  %4 = alloca %struct.k_thread.180*, align 4
  %5 = alloca %struct.k_thread.180*, align 4
  %6 = alloca %struct.k_thread.180*, align 4
  %7 = alloca %union.anon.169*, align 4
  store %struct.k_thread.180* %0, %struct.k_thread.180** %6, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.180** %6, metadata !14211, metadata !DIExpression()), !dbg !14212
  store %union.anon.169* %1, %union.anon.169** %7, align 4
  call void @llvm.dbg.declare(metadata %union.anon.169** %7, metadata !14213, metadata !DIExpression()), !dbg !14214
  %8 = load %struct.k_thread.180*, %struct.k_thread.180** %6, align 4, !dbg !14215
  call void @unready_thread(%struct.k_thread.180* noundef %8) #10, !dbg !14216
  %9 = load %struct.k_thread.180*, %struct.k_thread.180** %6, align 4, !dbg !14217
  call void @z_mark_thread_as_pending(%struct.k_thread.180* noundef %9) #10, !dbg !14218
  br label %10, !dbg !14219

10:                                               ; preds = %2
  br label %11, !dbg !14220

11:                                               ; preds = %10
  %12 = load %union.anon.169*, %union.anon.169** %7, align 4, !dbg !14222
  %13 = icmp ne %union.anon.169* %12, null, !dbg !14224
  br i1 %13, label %14, label %83, !dbg !14225

14:                                               ; preds = %11
  %15 = load %union.anon.169*, %union.anon.169** %7, align 4, !dbg !14226
  %16 = load %struct.k_thread.180*, %struct.k_thread.180** %6, align 4, !dbg !14228
  %17 = getelementptr inbounds %struct.k_thread.180, %struct.k_thread.180* %16, i32 0, i32 0, !dbg !14229
  %18 = getelementptr inbounds %struct._thread_base.173, %struct._thread_base.173* %17, i32 0, i32 1, !dbg !14230
  store %union.anon.169* %15, %union.anon.169** %18, align 8, !dbg !14231
  %19 = load %union.anon.169*, %union.anon.169** %7, align 4, !dbg !14232
  %20 = getelementptr inbounds %union.anon.169, %union.anon.169* %19, i32 0, i32 0, !dbg !14233
  %21 = load %struct.k_thread.180*, %struct.k_thread.180** %6, align 4, !dbg !14234
  store %struct._dnode.168* %20, %struct._dnode.168** %3, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.168** %3, metadata !13246, metadata !DIExpression()) #9, !dbg !14235
  store %struct.k_thread.180* %21, %struct.k_thread.180** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.180** %4, metadata !13253, metadata !DIExpression()) #9, !dbg !14237
  call void @llvm.dbg.declare(metadata %struct.k_thread.180** %5, metadata !13255, metadata !DIExpression()) #9, !dbg !14238
  %22 = load %struct._dnode.168*, %struct._dnode.168** %3, align 4, !dbg !14239
  %23 = call %struct._dnode.168* @sys_dlist_peek_head(%struct._dnode.168* noundef %22) #13, !dbg !14239
  %24 = icmp ne %struct._dnode.168* %23, null, !dbg !14239
  br i1 %24, label %25, label %30, !dbg !14239

25:                                               ; preds = %14
  %26 = load %struct._dnode.168*, %struct._dnode.168** %3, align 4, !dbg !14239
  %27 = call %struct._dnode.168* @sys_dlist_peek_head(%struct._dnode.168* noundef %26) #13, !dbg !14239
  %28 = bitcast %struct._dnode.168* %27 to i8*, !dbg !14239
  %29 = bitcast i8* %28 to %struct.k_thread.180*, !dbg !14239
  br label %31, !dbg !14239

30:                                               ; preds = %14
  br label %31, !dbg !14239

31:                                               ; preds = %30, %25
  %32 = phi %struct.k_thread.180* [ %29, %25 ], [ null, %30 ], !dbg !14239
  store %struct.k_thread.180* %32, %struct.k_thread.180** %5, align 4, !dbg !14239
  br label %33, !dbg !14239

33:                                               ; preds = %74, %31
  %34 = load %struct.k_thread.180*, %struct.k_thread.180** %5, align 4, !dbg !14240
  %35 = icmp ne %struct.k_thread.180* %34, null, !dbg !14240
  br i1 %35, label %36, label %76, !dbg !14239

36:                                               ; preds = %33
  %37 = load %struct.k_thread.180*, %struct.k_thread.180** %4, align 4, !dbg !14241
  %38 = load %struct.k_thread.180*, %struct.k_thread.180** %5, align 4, !dbg !14242
  %39 = call i32 @z_sched_prio_cmp(%struct.k_thread.180* noundef %37, %struct.k_thread.180* noundef %38) #13, !dbg !14243
  %40 = icmp sgt i32 %39, 0, !dbg !14244
  br i1 %40, label %41, label %50, !dbg !14245

41:                                               ; preds = %36
  %42 = load %struct.k_thread.180*, %struct.k_thread.180** %5, align 4, !dbg !14246
  %43 = getelementptr inbounds %struct.k_thread.180, %struct.k_thread.180* %42, i32 0, i32 0, !dbg !14247
  %44 = getelementptr inbounds %struct._thread_base.173, %struct._thread_base.173* %43, i32 0, i32 0, !dbg !14248
  %45 = bitcast %union.anon.169* %44 to %struct._dnode.168*, !dbg !14248
  %46 = load %struct.k_thread.180*, %struct.k_thread.180** %4, align 4, !dbg !14249
  %47 = getelementptr inbounds %struct.k_thread.180, %struct.k_thread.180* %46, i32 0, i32 0, !dbg !14250
  %48 = getelementptr inbounds %struct._thread_base.173, %struct._thread_base.173* %47, i32 0, i32 0, !dbg !14251
  %49 = bitcast %union.anon.169* %48 to %struct._dnode.168*, !dbg !14251
  call void @sys_dlist_insert(%struct._dnode.168* noundef %45, %struct._dnode.168* noundef %49) #13, !dbg !14252
  br label %82, !dbg !14253

50:                                               ; preds = %36
  %51 = load %struct.k_thread.180*, %struct.k_thread.180** %5, align 4, !dbg !14240
  %52 = icmp ne %struct.k_thread.180* %51, null, !dbg !14240
  br i1 %52, label %53, label %73, !dbg !14240

53:                                               ; preds = %50
  %54 = load %struct._dnode.168*, %struct._dnode.168** %3, align 4, !dbg !14240
  %55 = load %struct.k_thread.180*, %struct.k_thread.180** %5, align 4, !dbg !14240
  %56 = getelementptr inbounds %struct.k_thread.180, %struct.k_thread.180* %55, i32 0, i32 0, !dbg !14240
  %57 = getelementptr inbounds %struct._thread_base.173, %struct._thread_base.173* %56, i32 0, i32 0, !dbg !14240
  %58 = bitcast %union.anon.169* %57 to %struct._dnode.168*, !dbg !14240
  %59 = call %struct._dnode.168* @sys_dlist_peek_next(%struct._dnode.168* noundef %54, %struct._dnode.168* noundef %58) #13, !dbg !14240
  %60 = icmp ne %struct._dnode.168* %59, null, !dbg !14240
  br i1 %60, label %61, label %70, !dbg !14240

61:                                               ; preds = %53
  %62 = load %struct._dnode.168*, %struct._dnode.168** %3, align 4, !dbg !14240
  %63 = load %struct.k_thread.180*, %struct.k_thread.180** %5, align 4, !dbg !14240
  %64 = getelementptr inbounds %struct.k_thread.180, %struct.k_thread.180* %63, i32 0, i32 0, !dbg !14240
  %65 = getelementptr inbounds %struct._thread_base.173, %struct._thread_base.173* %64, i32 0, i32 0, !dbg !14240
  %66 = bitcast %union.anon.169* %65 to %struct._dnode.168*, !dbg !14240
  %67 = call %struct._dnode.168* @sys_dlist_peek_next(%struct._dnode.168* noundef %62, %struct._dnode.168* noundef %66) #13, !dbg !14240
  %68 = bitcast %struct._dnode.168* %67 to i8*, !dbg !14240
  %69 = bitcast i8* %68 to %struct.k_thread.180*, !dbg !14240
  br label %71, !dbg !14240

70:                                               ; preds = %53
  br label %71, !dbg !14240

71:                                               ; preds = %70, %61
  %72 = phi %struct.k_thread.180* [ %69, %61 ], [ null, %70 ], !dbg !14240
  br label %74, !dbg !14240

73:                                               ; preds = %50
  br label %74, !dbg !14240

74:                                               ; preds = %73, %71
  %75 = phi %struct.k_thread.180* [ %72, %71 ], [ null, %73 ], !dbg !14240
  store %struct.k_thread.180* %75, %struct.k_thread.180** %5, align 4, !dbg !14240
  br label %33, !dbg !14240, !llvm.loop !14254

76:                                               ; preds = %33
  %77 = load %struct._dnode.168*, %struct._dnode.168** %3, align 4, !dbg !14256
  %78 = load %struct.k_thread.180*, %struct.k_thread.180** %4, align 4, !dbg !14257
  %79 = getelementptr inbounds %struct.k_thread.180, %struct.k_thread.180* %78, i32 0, i32 0, !dbg !14258
  %80 = getelementptr inbounds %struct._thread_base.173, %struct._thread_base.173* %79, i32 0, i32 0, !dbg !14259
  %81 = bitcast %union.anon.169* %80 to %struct._dnode.168*, !dbg !14259
  call void @sys_dlist_append(%struct._dnode.168* noundef %77, %struct._dnode.168* noundef %81) #13, !dbg !14260
  br label %82, !dbg !14261

82:                                               ; preds = %41, %76
  br label %83, !dbg !14262

83:                                               ; preds = %82, %11
  ret void, !dbg !14263
}

; Function Attrs: noinline nounwind optnone
define internal void @add_thread_timeout(%struct.k_thread.180* noundef %0, [1 x i64] %1) #1 !dbg !14264 {
  %3 = alloca %union.argument_value, align 8
  %4 = alloca %struct.k_thread.180*, align 4
  %5 = alloca %union.argument_value, align 8
  %6 = getelementptr inbounds %union.argument_value, %union.argument_value* %3, i32 0, i32 0
  %7 = bitcast i64* %6 to [1 x i64]*
  store [1 x i64] %1, [1 x i64]* %7, align 8
  store %struct.k_thread.180* %0, %struct.k_thread.180** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.180** %4, metadata !14267, metadata !DIExpression()), !dbg !14268
  call void @llvm.dbg.declare(metadata %union.argument_value* %3, metadata !14269, metadata !DIExpression()), !dbg !14270
  %8 = getelementptr inbounds %union.argument_value, %union.argument_value* %3, i32 0, i32 0, !dbg !14271
  %9 = load i64, i64* %8, align 8, !dbg !14271
  %10 = getelementptr inbounds %union.argument_value, %union.argument_value* %5, i32 0, i32 0, !dbg !14271
  store i64 -1, i64* %10, align 8, !dbg !14271
  %11 = icmp eq i64 %9, -1, !dbg !14271
  br i1 %11, label %17, label %12, !dbg !14273

12:                                               ; preds = %2
  %13 = load %struct.k_thread.180*, %struct.k_thread.180** %4, align 4, !dbg !14274
  %14 = getelementptr inbounds %union.argument_value, %union.argument_value* %3, i32 0, i32 0, !dbg !14276
  %15 = bitcast i64* %14 to [1 x i64]*, !dbg !14276
  %16 = load [1 x i64], [1 x i64]* %15, align 8, !dbg !14276
  call void @z_add_thread_timeout.86(%struct.k_thread.180* noundef %13, [1 x i64] %16) #10, !dbg !14276
  br label %17, !dbg !14277

17:                                               ; preds = %12, %2
  ret void, !dbg !14278
}

; Function Attrs: noinline nounwind optnone
define internal void @z_add_thread_timeout.86(%struct.k_thread.180* noundef %0, [1 x i64] %1) #1 !dbg !14279 {
  %3 = alloca %union.argument_value, align 8
  %4 = alloca %struct.k_thread.180*, align 4
  %5 = getelementptr inbounds %union.argument_value, %union.argument_value* %3, i32 0, i32 0
  %6 = bitcast i64* %5 to [1 x i64]*
  store [1 x i64] %1, [1 x i64]* %6, align 8
  store %struct.k_thread.180* %0, %struct.k_thread.180** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.180** %4, metadata !14280, metadata !DIExpression()), !dbg !14281
  call void @llvm.dbg.declare(metadata %union.argument_value* %3, metadata !14282, metadata !DIExpression()), !dbg !14283
  %7 = load %struct.k_thread.180*, %struct.k_thread.180** %4, align 4, !dbg !14284
  %8 = getelementptr inbounds %struct.k_thread.180, %struct.k_thread.180* %7, i32 0, i32 0, !dbg !14285
  %9 = getelementptr inbounds %struct._thread_base.173, %struct._thread_base.173* %8, i32 0, i32 7, !dbg !14286
  %10 = getelementptr inbounds %union.argument_value, %union.argument_value* %3, i32 0, i32 0, !dbg !14287
  %11 = bitcast i64* %10 to [1 x i64]*, !dbg !14287
  %12 = load [1 x i64], [1 x i64]* %11, align 8, !dbg !14287
  call void @z_add_timeout(%struct._timeout.172* noundef %9, void (%struct._timeout.172*)* noundef @z_thread_timeout, [1 x i64] %12) #10, !dbg !14287
  ret void, !dbg !14288
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_thread_timeout(%struct._timeout.172* noundef %0) #1 !dbg !14289 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca %union.anon.68, align 4
  %6 = alloca %struct.k_spinlock.13*, align 4
  %7 = alloca %union.anon.68, align 4
  %8 = alloca %struct.k_spinlock.13*, align 4
  %9 = alloca %struct._timeout.172*, align 4
  %10 = alloca %struct.k_thread.180*, align 4
  %11 = alloca %union.anon.68, align 4
  %12 = alloca %union.anon.68, align 4
  %13 = alloca i8, align 1
  store %struct._timeout.172* %0, %struct._timeout.172** %9, align 4
  call void @llvm.dbg.declare(metadata %struct._timeout.172** %9, metadata !14290, metadata !DIExpression()), !dbg !14291
  call void @llvm.dbg.declare(metadata %struct.k_thread.180** %10, metadata !14292, metadata !DIExpression()), !dbg !14293
  %14 = load %struct._timeout.172*, %struct._timeout.172** %9, align 4, !dbg !14294
  %15 = bitcast %struct._timeout.172* %14 to i8*, !dbg !14294
  %16 = getelementptr inbounds i8, i8* %15, i32 -24, !dbg !14294
  %17 = bitcast i8* %16 to %struct.k_thread.180*, !dbg !14294
  store %struct.k_thread.180* %17, %struct.k_thread.180** %10, align 4, !dbg !14293
  call void @llvm.dbg.declare(metadata %union.anon.68* %11, metadata !14295, metadata !DIExpression()), !dbg !14297
  %18 = bitcast %union.anon.68* %11 to i8*, !dbg !14297
  call void @llvm.memset.p0i8.i32(i8* align 4 %18, i8 0, i32 4, i1 false), !dbg !14297
  call void @llvm.dbg.declare(metadata %union.anon.68* %12, metadata !14298, metadata !DIExpression()), !dbg !14297
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %8, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %8, metadata !12804, metadata !DIExpression()) #9, !dbg !14299
  %19 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %8, align 4, !dbg !14301
  call void @llvm.dbg.declare(metadata %union.anon.68* %7, metadata !12812, metadata !DIExpression()) #9, !dbg !14302
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12814, metadata !DIExpression()) #9, !dbg !14303
  call void @llvm.dbg.declare(metadata i32* %3, metadata !12818, metadata !DIExpression()) #9, !dbg !14305
  %20 = call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #9, !dbg !14306, !srcloc !12821
  %21 = extractvalue { i32, i32 } %20, 0, !dbg !14306
  %22 = extractvalue { i32, i32 } %20, 1, !dbg !14306
  store i32 %21, i32* %2, align 4, !dbg !14306
  store i32 %22, i32* %3, align 4, !dbg !14306
  %23 = load i32, i32* %2, align 4, !dbg !14307
  %24 = getelementptr inbounds %union.anon.68, %union.anon.68* %7, i32 0, i32 0, !dbg !14308
  store i32 %23, i32* %24, align 4, !dbg !14309
  %25 = getelementptr inbounds %union.anon.68, %union.anon.68* %7, i32 0, i32 0, !dbg !14310
  %26 = load i32, i32* %25, align 4, !dbg !14310
  %27 = getelementptr inbounds %union.anon.68, %union.anon.68* %12, i32 0, i32 0, !dbg !14297
  store i32 %26, i32* %27, align 4, !dbg !14297
  br label %28, !dbg !14297

28:                                               ; preds = %67, %1
  %29 = getelementptr inbounds %union.anon.68, %union.anon.68* %11, i32 0, i32 0, !dbg !14311
  %30 = load i32, i32* %29, align 4, !dbg !14311
  %31 = icmp ne i32 %30, 0, !dbg !14311
  %32 = xor i1 %31, true, !dbg !14311
  br i1 %32, label %33, label %78, !dbg !14297

33:                                               ; preds = %28
  call void @llvm.dbg.declare(metadata i8* %13, metadata !14313, metadata !DIExpression()), !dbg !14315
  %34 = load %struct.k_thread.180*, %struct.k_thread.180** %10, align 4, !dbg !14316
  %35 = getelementptr inbounds %struct.k_thread.180, %struct.k_thread.180* %34, i32 0, i32 0, !dbg !14317
  %36 = getelementptr inbounds %struct._thread_base.173, %struct._thread_base.173* %35, i32 0, i32 3, !dbg !14318
  %37 = load i8, i8* %36, align 1, !dbg !14318
  %38 = zext i8 %37 to i32, !dbg !14316
  %39 = and i32 %38, 8, !dbg !14319
  %40 = icmp ne i32 %39, 0, !dbg !14319
  br i1 %40, label %49, label %41, !dbg !14320

41:                                               ; preds = %33
  %42 = load %struct.k_thread.180*, %struct.k_thread.180** %10, align 4, !dbg !14321
  %43 = getelementptr inbounds %struct.k_thread.180, %struct.k_thread.180* %42, i32 0, i32 0, !dbg !14322
  %44 = getelementptr inbounds %struct._thread_base.173, %struct._thread_base.173* %43, i32 0, i32 3, !dbg !14323
  %45 = load i8, i8* %44, align 1, !dbg !14323
  %46 = zext i8 %45 to i32, !dbg !14321
  %47 = and i32 %46, 32, !dbg !14324
  %48 = icmp ne i32 %47, 0, !dbg !14320
  br label %49, !dbg !14320

49:                                               ; preds = %41, %33
  %50 = phi i1 [ true, %33 ], [ %48, %41 ]
  %51 = zext i1 %50 to i8, !dbg !14315
  store i8 %51, i8* %13, align 1, !dbg !14315
  %52 = load i8, i8* %13, align 1, !dbg !14325
  %53 = trunc i8 %52 to i1, !dbg !14325
  br i1 %53, label %66, label %54, !dbg !14327

54:                                               ; preds = %49
  %55 = load %struct.k_thread.180*, %struct.k_thread.180** %10, align 4, !dbg !14328
  %56 = getelementptr inbounds %struct.k_thread.180, %struct.k_thread.180* %55, i32 0, i32 0, !dbg !14331
  %57 = getelementptr inbounds %struct._thread_base.173, %struct._thread_base.173* %56, i32 0, i32 1, !dbg !14332
  %58 = load %union.anon.169*, %union.anon.169** %57, align 8, !dbg !14332
  %59 = icmp ne %union.anon.169* %58, null, !dbg !14333
  br i1 %59, label %60, label %62, !dbg !14334

60:                                               ; preds = %54
  %61 = load %struct.k_thread.180*, %struct.k_thread.180** %10, align 4, !dbg !14335
  call void @unpend_thread_no_timeout(%struct.k_thread.180* noundef %61) #10, !dbg !14337
  br label %62, !dbg !14338

62:                                               ; preds = %60, %54
  %63 = load %struct.k_thread.180*, %struct.k_thread.180** %10, align 4, !dbg !14339
  call void @z_mark_thread_as_started.85(%struct.k_thread.180* noundef %63) #10, !dbg !14340
  %64 = load %struct.k_thread.180*, %struct.k_thread.180** %10, align 4, !dbg !14341
  call void @z_mark_thread_as_not_suspended(%struct.k_thread.180* noundef %64) #10, !dbg !14342
  %65 = load %struct.k_thread.180*, %struct.k_thread.180** %10, align 4, !dbg !14343
  call void @ready_thread(%struct.k_thread.180* noundef %65) #10, !dbg !14344
  br label %66, !dbg !14345

66:                                               ; preds = %62, %49
  br label %67, !dbg !14346

67:                                               ; preds = %66
  %68 = getelementptr inbounds %union.anon.68, %union.anon.68* %12, i32 0, i32 0, !dbg !14311
  %69 = bitcast i32* %68 to [1 x i32]*, !dbg !14311
  %70 = load [1 x i32], [1 x i32]* %69, align 4, !dbg !14311
  %71 = getelementptr inbounds %union.anon.68, %union.anon.68* %5, i32 0, i32 0
  %72 = bitcast i32* %71 to [1 x i32]*
  store [1 x i32] %70, [1 x i32]* %72, align 4
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %6, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %6, metadata !12846, metadata !DIExpression()) #9, !dbg !14347
  call void @llvm.dbg.declare(metadata %union.anon.68* %5, metadata !12852, metadata !DIExpression()) #9, !dbg !14349
  %73 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %6, align 4, !dbg !14350
  %74 = getelementptr inbounds %union.anon.68, %union.anon.68* %5, i32 0, i32 0, !dbg !14351
  %75 = load i32, i32* %74, align 4, !dbg !14351
  store i32 %75, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !12856, metadata !DIExpression()) #9, !dbg !14352
  %76 = load i32, i32* %4, align 4, !dbg !14354
  call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %76) #9, !dbg !14355, !srcloc !12862
  %77 = getelementptr inbounds %union.anon.68, %union.anon.68* %11, i32 0, i32 0, !dbg !14311
  store i32 1, i32* %77, align 4, !dbg !14311
  br label %28, !dbg !14311, !llvm.loop !14356

78:                                               ; preds = %28
  ret void, !dbg !14358
}

; Function Attrs: noinline nounwind optnone
define internal void @unpend_thread_no_timeout(%struct.k_thread.180* noundef %0) #1 !dbg !14359 {
  %2 = alloca %struct.k_thread.180*, align 4
  store %struct.k_thread.180* %0, %struct.k_thread.180** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.180** %2, metadata !14360, metadata !DIExpression()), !dbg !14361
  %3 = load %struct.k_thread.180*, %struct.k_thread.180** %2, align 4, !dbg !14362
  %4 = call %union.anon.169* @pended_on_thread(%struct.k_thread.180* noundef %3) #10, !dbg !14363
  %5 = getelementptr inbounds %union.anon.169, %union.anon.169* %4, i32 0, i32 0, !dbg !14364
  %6 = load %struct.k_thread.180*, %struct.k_thread.180** %2, align 4, !dbg !14365
  call void @z_priq_dumb_remove(%struct._dnode.168* noundef %5, %struct.k_thread.180* noundef %6) #10, !dbg !14366
  %7 = load %struct.k_thread.180*, %struct.k_thread.180** %2, align 4, !dbg !14367
  call void @z_mark_thread_as_not_pending(%struct.k_thread.180* noundef %7) #10, !dbg !14368
  %8 = load %struct.k_thread.180*, %struct.k_thread.180** %2, align 4, !dbg !14369
  %9 = getelementptr inbounds %struct.k_thread.180, %struct.k_thread.180* %8, i32 0, i32 0, !dbg !14370
  %10 = getelementptr inbounds %struct._thread_base.173, %struct._thread_base.173* %9, i32 0, i32 1, !dbg !14371
  store %union.anon.169* null, %union.anon.169** %10, align 8, !dbg !14372
  ret void, !dbg !14373
}

; Function Attrs: noinline nounwind optnone
define internal %union.anon.169* @pended_on_thread(%struct.k_thread.180* noundef %0) #1 !dbg !14374 {
  %2 = alloca %struct.k_thread.180*, align 4
  store %struct.k_thread.180* %0, %struct.k_thread.180** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.180** %2, metadata !14377, metadata !DIExpression()), !dbg !14378
  %3 = load %struct.k_thread.180*, %struct.k_thread.180** %2, align 4, !dbg !14379
  %4 = getelementptr inbounds %struct.k_thread.180, %struct.k_thread.180* %3, i32 0, i32 0, !dbg !14380
  %5 = getelementptr inbounds %struct._thread_base.173, %struct._thread_base.173* %4, i32 0, i32 1, !dbg !14381
  %6 = load %union.anon.169*, %union.anon.169** %5, align 8, !dbg !14381
  ret %union.anon.169* %6, !dbg !14382
}

; Function Attrs: noinline nounwind optnone
define internal void @z_mark_thread_as_not_pending(%struct.k_thread.180* noundef %0) #1 !dbg !14383 {
  %2 = alloca %struct.k_thread.180*, align 4
  store %struct.k_thread.180* %0, %struct.k_thread.180** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.180** %2, metadata !14384, metadata !DIExpression()), !dbg !14385
  %3 = load %struct.k_thread.180*, %struct.k_thread.180** %2, align 4, !dbg !14386
  %4 = getelementptr inbounds %struct.k_thread.180, %struct.k_thread.180* %3, i32 0, i32 0, !dbg !14387
  %5 = getelementptr inbounds %struct._thread_base.173, %struct._thread_base.173* %4, i32 0, i32 3, !dbg !14388
  %6 = load i8, i8* %5, align 1, !dbg !14389
  %7 = zext i8 %6 to i32, !dbg !14389
  %8 = and i32 %7, -3, !dbg !14389
  %9 = trunc i32 %8 to i8, !dbg !14389
  store i8 %9, i8* %5, align 1, !dbg !14389
  ret void, !dbg !14390
}

; Function Attrs: noinline nounwind optnone
define internal void @unready_thread(%struct.k_thread.180* noundef %0) #1 !dbg !14391 {
  %2 = alloca %struct.k_thread.180*, align 4
  %3 = alloca %struct.k_thread.180*, align 4
  %4 = alloca %struct.k_thread.180*, align 4
  %5 = alloca %struct.k_thread.180*, align 4
  store %struct.k_thread.180* %0, %struct.k_thread.180** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.180** %5, metadata !14392, metadata !DIExpression()), !dbg !14393
  %6 = load %struct.k_thread.180*, %struct.k_thread.180** %5, align 4, !dbg !14394
  %7 = call zeroext i1 @z_is_thread_queued(%struct.k_thread.180* noundef %6) #10, !dbg !14396
  br i1 %7, label %8, label %25, !dbg !14397

8:                                                ; preds = %1
  %9 = load %struct.k_thread.180*, %struct.k_thread.180** %5, align 4, !dbg !14398
  store %struct.k_thread.180* %9, %struct.k_thread.180** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.180** %4, metadata !13193, metadata !DIExpression()) #9, !dbg !14400
  %10 = load %struct.k_thread.180*, %struct.k_thread.180** %4, align 4, !dbg !14402
  %11 = getelementptr inbounds %struct.k_thread.180, %struct.k_thread.180* %10, i32 0, i32 0, !dbg !14403
  %12 = getelementptr inbounds %struct._thread_base.173, %struct._thread_base.173* %11, i32 0, i32 3, !dbg !14404
  %13 = load i8, i8* %12, align 1, !dbg !14405
  %14 = zext i8 %13 to i32, !dbg !14405
  %15 = and i32 %14, -129, !dbg !14405
  %16 = trunc i32 %15 to i8, !dbg !14405
  store i8 %16, i8* %12, align 1, !dbg !14405
  %17 = load %struct.k_thread.180*, %struct.k_thread.180** %4, align 4, !dbg !14406
  %18 = call zeroext i1 @should_queue_thread(%struct.k_thread.180* noundef %17) #13, !dbg !14407
  br i1 %18, label %19, label %24, !dbg !14408

19:                                               ; preds = %8
  %20 = load %struct.k_thread.180*, %struct.k_thread.180** %4, align 4, !dbg !14409
  store %struct.k_thread.180* %20, %struct.k_thread.180** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.180** %3, metadata !13207, metadata !DIExpression()) #9, !dbg !14410
  %21 = load %struct.k_thread.180*, %struct.k_thread.180** %3, align 4, !dbg !14412
  store %struct.k_thread.180* %21, %struct.k_thread.180** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.180** %2, metadata !13212, metadata !DIExpression()), !dbg !14413
  %22 = bitcast i8* bitcast (%struct._dnode.168* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1) to i8*) to %struct._dnode.168*, !dbg !14415
  %23 = load %struct.k_thread.180*, %struct.k_thread.180** %3, align 4, !dbg !14416
  call void @z_priq_dumb_remove(%struct._dnode.168* noundef %22, %struct.k_thread.180* noundef %23) #13, !dbg !14417
  br label %24, !dbg !14418

24:                                               ; preds = %8, %19
  br label %25, !dbg !14419

25:                                               ; preds = %24, %1
  %26 = load %struct.k_thread.180*, %struct.k_thread.180** %5, align 4, !dbg !14420
  %27 = load %struct.k_thread.180*, %struct.k_thread.180** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14421
  %28 = icmp eq %struct.k_thread.180* %26, %27, !dbg !14422
  %29 = zext i1 %28 to i32, !dbg !14422
  call void @update_cache(i32 noundef %29) #10, !dbg !14423
  ret void, !dbg !14424
}

; Function Attrs: noinline nounwind optnone
define internal void @z_mark_thread_as_pending(%struct.k_thread.180* noundef %0) #1 !dbg !14425 {
  %2 = alloca %struct.k_thread.180*, align 4
  store %struct.k_thread.180* %0, %struct.k_thread.180** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.180** %2, metadata !14426, metadata !DIExpression()), !dbg !14427
  %3 = load %struct.k_thread.180*, %struct.k_thread.180** %2, align 4, !dbg !14428
  %4 = getelementptr inbounds %struct.k_thread.180, %struct.k_thread.180* %3, i32 0, i32 0, !dbg !14429
  %5 = getelementptr inbounds %struct._thread_base.173, %struct._thread_base.173* %4, i32 0, i32 3, !dbg !14430
  %6 = load i8, i8* %5, align 1, !dbg !14431
  %7 = zext i8 %6 to i32, !dbg !14431
  %8 = or i32 %7, 2, !dbg !14431
  %9 = trunc i32 %8 to i8, !dbg !14431
  store i8 %9, i8* %5, align 1, !dbg !14431
  ret void, !dbg !14432
}

; Function Attrs: alwaysinline nounwind
define dso_local void @z_unpend_thread_no_timeout(%struct.k_thread.180* noundef %0) #8 !dbg !14433 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca %union.anon.68, align 4
  %6 = alloca %struct.k_spinlock.13*, align 4
  %7 = alloca %union.anon.68, align 4
  %8 = alloca %struct.k_spinlock.13*, align 4
  %9 = alloca %struct.k_thread.180*, align 4
  %10 = alloca %union.anon.68, align 4
  %11 = alloca %union.anon.68, align 4
  store %struct.k_thread.180* %0, %struct.k_thread.180** %9, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.180** %9, metadata !14434, metadata !DIExpression()), !dbg !14435
  call void @llvm.dbg.declare(metadata %union.anon.68* %10, metadata !14436, metadata !DIExpression()), !dbg !14438
  %12 = bitcast %union.anon.68* %10 to i8*, !dbg !14438
  call void @llvm.memset.p0i8.i32(i8* align 4 %12, i8 0, i32 4, i1 false), !dbg !14438
  call void @llvm.dbg.declare(metadata %union.anon.68* %11, metadata !14439, metadata !DIExpression()), !dbg !14438
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %8, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %8, metadata !12804, metadata !DIExpression()) #9, !dbg !14440
  %13 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %8, align 4, !dbg !14442
  call void @llvm.dbg.declare(metadata %union.anon.68* %7, metadata !12812, metadata !DIExpression()) #9, !dbg !14443
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12814, metadata !DIExpression()) #9, !dbg !14444
  call void @llvm.dbg.declare(metadata i32* %3, metadata !12818, metadata !DIExpression()) #9, !dbg !14446
  %14 = call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #9, !dbg !14447, !srcloc !12821
  %15 = extractvalue { i32, i32 } %14, 0, !dbg !14447
  %16 = extractvalue { i32, i32 } %14, 1, !dbg !14447
  store i32 %15, i32* %2, align 4, !dbg !14447
  store i32 %16, i32* %3, align 4, !dbg !14447
  %17 = load i32, i32* %2, align 4, !dbg !14448
  %18 = getelementptr inbounds %union.anon.68, %union.anon.68* %7, i32 0, i32 0, !dbg !14449
  store i32 %17, i32* %18, align 4, !dbg !14450
  %19 = getelementptr inbounds %union.anon.68, %union.anon.68* %7, i32 0, i32 0, !dbg !14451
  %20 = load i32, i32* %19, align 4, !dbg !14451
  %21 = getelementptr inbounds %union.anon.68, %union.anon.68* %11, i32 0, i32 0, !dbg !14438
  store i32 %20, i32* %21, align 4, !dbg !14438
  br label %22, !dbg !14438

22:                                               ; preds = %29, %1
  %23 = getelementptr inbounds %union.anon.68, %union.anon.68* %10, i32 0, i32 0, !dbg !14452
  %24 = load i32, i32* %23, align 4, !dbg !14452
  %25 = icmp ne i32 %24, 0, !dbg !14452
  %26 = xor i1 %25, true, !dbg !14452
  br i1 %26, label %27, label %40, !dbg !14438

27:                                               ; preds = %22
  %28 = load %struct.k_thread.180*, %struct.k_thread.180** %9, align 4, !dbg !14454
  call void @unpend_thread_no_timeout(%struct.k_thread.180* noundef %28) #10, !dbg !14456
  br label %29, !dbg !14457

29:                                               ; preds = %27
  %30 = getelementptr inbounds %union.anon.68, %union.anon.68* %11, i32 0, i32 0, !dbg !14452
  %31 = bitcast i32* %30 to [1 x i32]*, !dbg !14452
  %32 = load [1 x i32], [1 x i32]* %31, align 4, !dbg !14452
  %33 = getelementptr inbounds %union.anon.68, %union.anon.68* %5, i32 0, i32 0
  %34 = bitcast i32* %33 to [1 x i32]*
  store [1 x i32] %32, [1 x i32]* %34, align 4
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %6, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %6, metadata !12846, metadata !DIExpression()) #9, !dbg !14458
  call void @llvm.dbg.declare(metadata %union.anon.68* %5, metadata !12852, metadata !DIExpression()) #9, !dbg !14460
  %35 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %6, align 4, !dbg !14461
  %36 = getelementptr inbounds %union.anon.68, %union.anon.68* %5, i32 0, i32 0, !dbg !14462
  %37 = load i32, i32* %36, align 4, !dbg !14462
  store i32 %37, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !12856, metadata !DIExpression()) #9, !dbg !14463
  %38 = load i32, i32* %4, align 4, !dbg !14465
  call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %38) #9, !dbg !14466, !srcloc !12862
  %39 = getelementptr inbounds %union.anon.68, %union.anon.68* %10, i32 0, i32 0, !dbg !14452
  store i32 1, i32* %39, align 4, !dbg !14452
  br label %22, !dbg !14452, !llvm.loop !14467

40:                                               ; preds = %22
  ret void, !dbg !14469
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @z_pend_curr_irqlock(i32 noundef %0, %union.anon.169* noundef %1, [1 x i64] %2) #1 !dbg !14470 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca %union.anon.68, align 4
  %8 = alloca %struct.k_spinlock.13*, align 4
  %9 = alloca %union.anon.68, align 4
  %10 = alloca %struct.k_spinlock.13*, align 4
  %11 = alloca %union.argument_value, align 8
  %12 = alloca i32, align 4
  %13 = alloca %union.anon.169*, align 4
  %14 = alloca i32, align 4
  %15 = alloca %union.anon.68, align 4
  %16 = alloca %union.anon.68, align 4
  %17 = getelementptr inbounds %union.argument_value, %union.argument_value* %11, i32 0, i32 0
  %18 = bitcast i64* %17 to [1 x i64]*
  store [1 x i64] %2, [1 x i64]* %18, align 8
  store i32 %0, i32* %12, align 4
  call void @llvm.dbg.declare(metadata i32* %12, metadata !14473, metadata !DIExpression()), !dbg !14474
  store %union.anon.169* %1, %union.anon.169** %13, align 4
  call void @llvm.dbg.declare(metadata %union.anon.169** %13, metadata !14475, metadata !DIExpression()), !dbg !14476
  call void @llvm.dbg.declare(metadata %union.argument_value* %11, metadata !14477, metadata !DIExpression()), !dbg !14478
  %19 = load %struct.k_thread.180*, %struct.k_thread.180** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14479
  %20 = load %union.anon.169*, %union.anon.169** %13, align 4, !dbg !14480
  %21 = getelementptr inbounds %union.argument_value, %union.argument_value* %11, i32 0, i32 0, !dbg !14481
  %22 = bitcast i64* %21 to [1 x i64]*, !dbg !14481
  %23 = load [1 x i64], [1 x i64]* %22, align 8, !dbg !14481
  call void @pend_locked(%struct.k_thread.180* noundef %19, %union.anon.169* noundef %20, [1 x i64] %23) #10, !dbg !14481
  %24 = load %struct.k_thread.180*, %struct.k_thread.180** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14482
  store %struct.k_thread.180* %24, %struct.k_thread.180** @pending_current, align 4, !dbg !14483
  call void @llvm.dbg.declare(metadata i32* %14, metadata !14484, metadata !DIExpression()), !dbg !14485
  %25 = load i32, i32* %12, align 4, !dbg !14486
  %26 = call i32 @z_swap_irqlock(i32 noundef %25) #10, !dbg !14487
  store i32 %26, i32* %14, align 4, !dbg !14485
  call void @llvm.dbg.declare(metadata %union.anon.68* %15, metadata !14488, metadata !DIExpression()), !dbg !14490
  %27 = bitcast %union.anon.68* %15 to i8*, !dbg !14490
  call void @llvm.memset.p0i8.i32(i8* align 4 %27, i8 0, i32 4, i1 false), !dbg !14490
  call void @llvm.dbg.declare(metadata %union.anon.68* %16, metadata !14491, metadata !DIExpression()), !dbg !14490
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %10, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %10, metadata !12804, metadata !DIExpression()) #9, !dbg !14492
  %28 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %10, align 4, !dbg !14494
  call void @llvm.dbg.declare(metadata %union.anon.68* %9, metadata !12812, metadata !DIExpression()) #9, !dbg !14495
  call void @llvm.dbg.declare(metadata i32* %4, metadata !12814, metadata !DIExpression()) #9, !dbg !14496
  call void @llvm.dbg.declare(metadata i32* %5, metadata !12818, metadata !DIExpression()) #9, !dbg !14498
  %29 = call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #9, !dbg !14499, !srcloc !12821
  %30 = extractvalue { i32, i32 } %29, 0, !dbg !14499
  %31 = extractvalue { i32, i32 } %29, 1, !dbg !14499
  store i32 %30, i32* %4, align 4, !dbg !14499
  store i32 %31, i32* %5, align 4, !dbg !14499
  %32 = load i32, i32* %4, align 4, !dbg !14500
  %33 = getelementptr inbounds %union.anon.68, %union.anon.68* %9, i32 0, i32 0, !dbg !14501
  store i32 %32, i32* %33, align 4, !dbg !14502
  %34 = getelementptr inbounds %union.anon.68, %union.anon.68* %9, i32 0, i32 0, !dbg !14503
  %35 = load i32, i32* %34, align 4, !dbg !14503
  %36 = getelementptr inbounds %union.anon.68, %union.anon.68* %16, i32 0, i32 0, !dbg !14490
  store i32 %35, i32* %36, align 4, !dbg !14490
  br label %37, !dbg !14490

37:                                               ; preds = %48, %3
  %38 = getelementptr inbounds %union.anon.68, %union.anon.68* %15, i32 0, i32 0, !dbg !14504
  %39 = load i32, i32* %38, align 4, !dbg !14504
  %40 = icmp ne i32 %39, 0, !dbg !14504
  %41 = xor i1 %40, true, !dbg !14504
  br i1 %41, label %42, label %59, !dbg !14490

42:                                               ; preds = %37
  %43 = load %struct.k_thread.180*, %struct.k_thread.180** @pending_current, align 4, !dbg !14506
  %44 = load %struct.k_thread.180*, %struct.k_thread.180** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14509
  %45 = icmp eq %struct.k_thread.180* %43, %44, !dbg !14510
  br i1 %45, label %46, label %47, !dbg !14511

46:                                               ; preds = %42
  store %struct.k_thread.180* null, %struct.k_thread.180** @pending_current, align 4, !dbg !14512
  br label %47, !dbg !14514

47:                                               ; preds = %46, %42
  br label %48, !dbg !14515

48:                                               ; preds = %47
  %49 = getelementptr inbounds %union.anon.68, %union.anon.68* %16, i32 0, i32 0, !dbg !14504
  %50 = bitcast i32* %49 to [1 x i32]*, !dbg !14504
  %51 = load [1 x i32], [1 x i32]* %50, align 4, !dbg !14504
  %52 = getelementptr inbounds %union.anon.68, %union.anon.68* %7, i32 0, i32 0
  %53 = bitcast i32* %52 to [1 x i32]*
  store [1 x i32] %51, [1 x i32]* %53, align 4
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %8, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %8, metadata !12846, metadata !DIExpression()) #9, !dbg !14516
  call void @llvm.dbg.declare(metadata %union.anon.68* %7, metadata !12852, metadata !DIExpression()) #9, !dbg !14518
  %54 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %8, align 4, !dbg !14519
  %55 = getelementptr inbounds %union.anon.68, %union.anon.68* %7, i32 0, i32 0, !dbg !14520
  %56 = load i32, i32* %55, align 4, !dbg !14520
  store i32 %56, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !12856, metadata !DIExpression()) #9, !dbg !14521
  %57 = load i32, i32* %6, align 4, !dbg !14523
  call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %57) #9, !dbg !14524, !srcloc !12862
  %58 = getelementptr inbounds %union.anon.68, %union.anon.68* %15, i32 0, i32 0, !dbg !14504
  store i32 1, i32* %58, align 4, !dbg !14504
  br label %37, !dbg !14504, !llvm.loop !14525

59:                                               ; preds = %37
  %60 = load i32, i32* %14, align 4, !dbg !14527
  ret i32 %60, !dbg !14528
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @z_pend_curr(%struct.k_spinlock.13* noundef %0, [1 x i32] %1, %union.anon.169* noundef %2, [1 x i64] %3) #1 !dbg !14529 {
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca %struct.k_spinlock.13*, align 4
  %8 = alloca %union.anon.68, align 4
  %9 = alloca %struct.k_spinlock.13*, align 4
  %10 = alloca %struct.k_spinlock.13*, align 4
  %11 = alloca %union.anon.68, align 4
  %12 = alloca %struct.k_spinlock.13*, align 4
  %13 = alloca %union.anon.68, align 4
  %14 = alloca %union.argument_value, align 8
  %15 = alloca %struct.k_spinlock.13*, align 4
  %16 = alloca %union.anon.169*, align 4
  %17 = alloca %union.anon.68, align 4
  %18 = getelementptr inbounds %union.anon.68, %union.anon.68* %13, i32 0, i32 0
  %19 = bitcast i32* %18 to [1 x i32]*
  store [1 x i32] %1, [1 x i32]* %19, align 4
  %20 = getelementptr inbounds %union.argument_value, %union.argument_value* %14, i32 0, i32 0
  %21 = bitcast i64* %20 to [1 x i64]*
  store [1 x i64] %3, [1 x i64]* %21, align 8
  store %struct.k_spinlock.13* %0, %struct.k_spinlock.13** %15, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %15, metadata !14532, metadata !DIExpression()), !dbg !14533
  call void @llvm.dbg.declare(metadata %union.anon.68* %13, metadata !14534, metadata !DIExpression()), !dbg !14535
  store %union.anon.169* %2, %union.anon.169** %16, align 4
  call void @llvm.dbg.declare(metadata %union.anon.169** %16, metadata !14536, metadata !DIExpression()), !dbg !14537
  call void @llvm.dbg.declare(metadata %union.argument_value* %14, metadata !14538, metadata !DIExpression()), !dbg !14539
  %22 = load %struct.k_thread.180*, %struct.k_thread.180** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14540
  store %struct.k_thread.180* %22, %struct.k_thread.180** @pending_current, align 4, !dbg !14541
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %12, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %12, metadata !12804, metadata !DIExpression()) #9, !dbg !14542
  %23 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %12, align 4, !dbg !14544
  call void @llvm.dbg.declare(metadata %union.anon.68* %11, metadata !12812, metadata !DIExpression()) #9, !dbg !14545
  call void @llvm.dbg.declare(metadata i32* %5, metadata !12814, metadata !DIExpression()) #9, !dbg !14546
  call void @llvm.dbg.declare(metadata i32* %6, metadata !12818, metadata !DIExpression()) #9, !dbg !14548
  %24 = call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #9, !dbg !14549, !srcloc !12821
  %25 = extractvalue { i32, i32 } %24, 0, !dbg !14549
  %26 = extractvalue { i32, i32 } %24, 1, !dbg !14549
  store i32 %25, i32* %5, align 4, !dbg !14549
  store i32 %26, i32* %6, align 4, !dbg !14549
  %27 = load i32, i32* %5, align 4, !dbg !14550
  %28 = getelementptr inbounds %union.anon.68, %union.anon.68* %11, i32 0, i32 0, !dbg !14551
  store i32 %27, i32* %28, align 4, !dbg !14552
  %29 = getelementptr inbounds %union.anon.68, %union.anon.68* %11, i32 0, i32 0, !dbg !14553
  %30 = load i32, i32* %29, align 4, !dbg !14553
  %31 = getelementptr inbounds %union.anon.68, %union.anon.68* %17, i32 0, i32 0, !dbg !14554
  store i32 %30, i32* %31, align 4, !dbg !14554
  %32 = load %struct.k_thread.180*, %struct.k_thread.180** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14555
  %33 = load %union.anon.169*, %union.anon.169** %16, align 4, !dbg !14556
  %34 = getelementptr inbounds %union.argument_value, %union.argument_value* %14, i32 0, i32 0, !dbg !14557
  %35 = bitcast i64* %34 to [1 x i64]*, !dbg !14557
  %36 = load [1 x i64], [1 x i64]* %35, align 8, !dbg !14557
  call void @pend_locked(%struct.k_thread.180* noundef %32, %union.anon.169* noundef %33, [1 x i64] %36) #10, !dbg !14557
  %37 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %15, align 4, !dbg !14558
  store %struct.k_spinlock.13* %37, %struct.k_spinlock.13** %10, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %10, metadata !13879, metadata !DIExpression()), !dbg !14559
  %38 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %10, align 4, !dbg !14561
  %39 = getelementptr inbounds %union.anon.68, %union.anon.68* %13, i32 0, i32 0, !dbg !14562
  %40 = bitcast i32* %39 to [1 x i32]*, !dbg !14562
  %41 = load [1 x i32], [1 x i32]* %40, align 4, !dbg !14562
  %42 = getelementptr inbounds %union.anon.68, %union.anon.68* %8, i32 0, i32 0
  %43 = bitcast i32* %42 to [1 x i32]*
  store [1 x i32] %41, [1 x i32]* %43, align 4
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %9, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %9, metadata !13870, metadata !DIExpression()) #9, !dbg !14563
  call void @llvm.dbg.declare(metadata %union.anon.68* %8, metadata !13876, metadata !DIExpression()) #9, !dbg !14565
  %44 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %9, align 4, !dbg !14566
  store %struct.k_spinlock.13* %44, %struct.k_spinlock.13** %7, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %7, metadata !13879, metadata !DIExpression()) #9, !dbg !14567
  %45 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %7, align 4, !dbg !14569
  %46 = getelementptr inbounds %union.anon.68, %union.anon.68* %8, i32 0, i32 0, !dbg !14570
  %47 = load i32, i32* %46, align 4, !dbg !14570
  %48 = call i32 @z_swap_irqlock(i32 noundef %47) #13, !dbg !14571
  ret i32 %48, !dbg !14572
}

; Function Attrs: noinline nounwind optnone
define dso_local %struct.k_thread.180* @z_unpend1_no_timeout(%union.anon.169* noundef %0) #1 !dbg !14573 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca %union.anon.68, align 4
  %6 = alloca %struct.k_spinlock.13*, align 4
  %7 = alloca %union.anon.68, align 4
  %8 = alloca %struct.k_spinlock.13*, align 4
  %9 = alloca %union.anon.169*, align 4
  %10 = alloca %struct.k_thread.180*, align 4
  %11 = alloca %union.anon.68, align 4
  %12 = alloca %union.anon.68, align 4
  store %union.anon.169* %0, %union.anon.169** %9, align 4
  call void @llvm.dbg.declare(metadata %union.anon.169** %9, metadata !14576, metadata !DIExpression()), !dbg !14577
  call void @llvm.dbg.declare(metadata %struct.k_thread.180** %10, metadata !14578, metadata !DIExpression()), !dbg !14579
  store %struct.k_thread.180* null, %struct.k_thread.180** %10, align 4, !dbg !14579
  call void @llvm.dbg.declare(metadata %union.anon.68* %11, metadata !14580, metadata !DIExpression()), !dbg !14582
  %13 = bitcast %union.anon.68* %11 to i8*, !dbg !14582
  call void @llvm.memset.p0i8.i32(i8* align 4 %13, i8 0, i32 4, i1 false), !dbg !14582
  call void @llvm.dbg.declare(metadata %union.anon.68* %12, metadata !14583, metadata !DIExpression()), !dbg !14582
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %8, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %8, metadata !12804, metadata !DIExpression()) #9, !dbg !14584
  %14 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %8, align 4, !dbg !14586
  call void @llvm.dbg.declare(metadata %union.anon.68* %7, metadata !12812, metadata !DIExpression()) #9, !dbg !14587
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12814, metadata !DIExpression()) #9, !dbg !14588
  call void @llvm.dbg.declare(metadata i32* %3, metadata !12818, metadata !DIExpression()) #9, !dbg !14590
  %15 = call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #9, !dbg !14591, !srcloc !12821
  %16 = extractvalue { i32, i32 } %15, 0, !dbg !14591
  %17 = extractvalue { i32, i32 } %15, 1, !dbg !14591
  store i32 %16, i32* %2, align 4, !dbg !14591
  store i32 %17, i32* %3, align 4, !dbg !14591
  %18 = load i32, i32* %2, align 4, !dbg !14592
  %19 = getelementptr inbounds %union.anon.68, %union.anon.68* %7, i32 0, i32 0, !dbg !14593
  store i32 %18, i32* %19, align 4, !dbg !14594
  %20 = getelementptr inbounds %union.anon.68, %union.anon.68* %7, i32 0, i32 0, !dbg !14595
  %21 = load i32, i32* %20, align 4, !dbg !14595
  %22 = getelementptr inbounds %union.anon.68, %union.anon.68* %12, i32 0, i32 0, !dbg !14582
  store i32 %21, i32* %22, align 4, !dbg !14582
  br label %23, !dbg !14582

23:                                               ; preds = %37, %1
  %24 = getelementptr inbounds %union.anon.68, %union.anon.68* %11, i32 0, i32 0, !dbg !14596
  %25 = load i32, i32* %24, align 4, !dbg !14596
  %26 = icmp ne i32 %25, 0, !dbg !14596
  %27 = xor i1 %26, true, !dbg !14596
  br i1 %27, label %28, label %48, !dbg !14582

28:                                               ; preds = %23
  %29 = load %union.anon.169*, %union.anon.169** %9, align 4, !dbg !14598
  %30 = getelementptr inbounds %union.anon.169, %union.anon.169* %29, i32 0, i32 0, !dbg !14600
  %31 = call %struct.k_thread.180* @z_priq_dumb_best(%struct._dnode.168* noundef %30) #10, !dbg !14601
  store %struct.k_thread.180* %31, %struct.k_thread.180** %10, align 4, !dbg !14602
  %32 = load %struct.k_thread.180*, %struct.k_thread.180** %10, align 4, !dbg !14603
  %33 = icmp ne %struct.k_thread.180* %32, null, !dbg !14605
  br i1 %33, label %34, label %36, !dbg !14606

34:                                               ; preds = %28
  %35 = load %struct.k_thread.180*, %struct.k_thread.180** %10, align 4, !dbg !14607
  call void @unpend_thread_no_timeout(%struct.k_thread.180* noundef %35) #10, !dbg !14609
  br label %36, !dbg !14610

36:                                               ; preds = %34, %28
  br label %37, !dbg !14611

37:                                               ; preds = %36
  %38 = getelementptr inbounds %union.anon.68, %union.anon.68* %12, i32 0, i32 0, !dbg !14596
  %39 = bitcast i32* %38 to [1 x i32]*, !dbg !14596
  %40 = load [1 x i32], [1 x i32]* %39, align 4, !dbg !14596
  %41 = getelementptr inbounds %union.anon.68, %union.anon.68* %5, i32 0, i32 0
  %42 = bitcast i32* %41 to [1 x i32]*
  store [1 x i32] %40, [1 x i32]* %42, align 4
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %6, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %6, metadata !12846, metadata !DIExpression()) #9, !dbg !14612
  call void @llvm.dbg.declare(metadata %union.anon.68* %5, metadata !12852, metadata !DIExpression()) #9, !dbg !14614
  %43 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %6, align 4, !dbg !14615
  %44 = getelementptr inbounds %union.anon.68, %union.anon.68* %5, i32 0, i32 0, !dbg !14616
  %45 = load i32, i32* %44, align 4, !dbg !14616
  store i32 %45, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !12856, metadata !DIExpression()) #9, !dbg !14617
  %46 = load i32, i32* %4, align 4, !dbg !14619
  call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %46) #9, !dbg !14620, !srcloc !12862
  %47 = getelementptr inbounds %union.anon.68, %union.anon.68* %11, i32 0, i32 0, !dbg !14596
  store i32 1, i32* %47, align 4, !dbg !14596
  br label %23, !dbg !14596, !llvm.loop !14621

48:                                               ; preds = %23
  %49 = load %struct.k_thread.180*, %struct.k_thread.180** %10, align 4, !dbg !14623
  ret %struct.k_thread.180* %49, !dbg !14624
}

; Function Attrs: noinline nounwind optnone
define dso_local %struct.k_thread.180* @z_unpend_first_thread(%union.anon.169* noundef %0) #1 !dbg !14625 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca %union.anon.68, align 4
  %6 = alloca %struct.k_spinlock.13*, align 4
  %7 = alloca %union.anon.68, align 4
  %8 = alloca %struct.k_spinlock.13*, align 4
  %9 = alloca %union.anon.169*, align 4
  %10 = alloca %struct.k_thread.180*, align 4
  %11 = alloca %union.anon.68, align 4
  %12 = alloca %union.anon.68, align 4
  store %union.anon.169* %0, %union.anon.169** %9, align 4
  call void @llvm.dbg.declare(metadata %union.anon.169** %9, metadata !14626, metadata !DIExpression()), !dbg !14627
  call void @llvm.dbg.declare(metadata %struct.k_thread.180** %10, metadata !14628, metadata !DIExpression()), !dbg !14629
  store %struct.k_thread.180* null, %struct.k_thread.180** %10, align 4, !dbg !14629
  call void @llvm.dbg.declare(metadata %union.anon.68* %11, metadata !14630, metadata !DIExpression()), !dbg !14632
  %13 = bitcast %union.anon.68* %11 to i8*, !dbg !14632
  call void @llvm.memset.p0i8.i32(i8* align 4 %13, i8 0, i32 4, i1 false), !dbg !14632
  call void @llvm.dbg.declare(metadata %union.anon.68* %12, metadata !14633, metadata !DIExpression()), !dbg !14632
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %8, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %8, metadata !12804, metadata !DIExpression()) #9, !dbg !14634
  %14 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %8, align 4, !dbg !14636
  call void @llvm.dbg.declare(metadata %union.anon.68* %7, metadata !12812, metadata !DIExpression()) #9, !dbg !14637
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12814, metadata !DIExpression()) #9, !dbg !14638
  call void @llvm.dbg.declare(metadata i32* %3, metadata !12818, metadata !DIExpression()) #9, !dbg !14640
  %15 = call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #9, !dbg !14641, !srcloc !12821
  %16 = extractvalue { i32, i32 } %15, 0, !dbg !14641
  %17 = extractvalue { i32, i32 } %15, 1, !dbg !14641
  store i32 %16, i32* %2, align 4, !dbg !14641
  store i32 %17, i32* %3, align 4, !dbg !14641
  %18 = load i32, i32* %2, align 4, !dbg !14642
  %19 = getelementptr inbounds %union.anon.68, %union.anon.68* %7, i32 0, i32 0, !dbg !14643
  store i32 %18, i32* %19, align 4, !dbg !14644
  %20 = getelementptr inbounds %union.anon.68, %union.anon.68* %7, i32 0, i32 0, !dbg !14645
  %21 = load i32, i32* %20, align 4, !dbg !14645
  %22 = getelementptr inbounds %union.anon.68, %union.anon.68* %12, i32 0, i32 0, !dbg !14632
  store i32 %21, i32* %22, align 4, !dbg !14632
  br label %23, !dbg !14632

23:                                               ; preds = %39, %1
  %24 = getelementptr inbounds %union.anon.68, %union.anon.68* %11, i32 0, i32 0, !dbg !14646
  %25 = load i32, i32* %24, align 4, !dbg !14646
  %26 = icmp ne i32 %25, 0, !dbg !14646
  %27 = xor i1 %26, true, !dbg !14646
  br i1 %27, label %28, label %50, !dbg !14632

28:                                               ; preds = %23
  %29 = load %union.anon.169*, %union.anon.169** %9, align 4, !dbg !14648
  %30 = getelementptr inbounds %union.anon.169, %union.anon.169* %29, i32 0, i32 0, !dbg !14650
  %31 = call %struct.k_thread.180* @z_priq_dumb_best(%struct._dnode.168* noundef %30) #10, !dbg !14651
  store %struct.k_thread.180* %31, %struct.k_thread.180** %10, align 4, !dbg !14652
  %32 = load %struct.k_thread.180*, %struct.k_thread.180** %10, align 4, !dbg !14653
  %33 = icmp ne %struct.k_thread.180* %32, null, !dbg !14655
  br i1 %33, label %34, label %38, !dbg !14656

34:                                               ; preds = %28
  %35 = load %struct.k_thread.180*, %struct.k_thread.180** %10, align 4, !dbg !14657
  call void @unpend_thread_no_timeout(%struct.k_thread.180* noundef %35) #10, !dbg !14659
  %36 = load %struct.k_thread.180*, %struct.k_thread.180** %10, align 4, !dbg !14660
  %37 = call i32 @z_abort_thread_timeout(%struct.k_thread.180* noundef %36) #10, !dbg !14661
  br label %38, !dbg !14662

38:                                               ; preds = %34, %28
  br label %39, !dbg !14663

39:                                               ; preds = %38
  %40 = getelementptr inbounds %union.anon.68, %union.anon.68* %12, i32 0, i32 0, !dbg !14646
  %41 = bitcast i32* %40 to [1 x i32]*, !dbg !14646
  %42 = load [1 x i32], [1 x i32]* %41, align 4, !dbg !14646
  %43 = getelementptr inbounds %union.anon.68, %union.anon.68* %5, i32 0, i32 0
  %44 = bitcast i32* %43 to [1 x i32]*
  store [1 x i32] %42, [1 x i32]* %44, align 4
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %6, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %6, metadata !12846, metadata !DIExpression()) #9, !dbg !14664
  call void @llvm.dbg.declare(metadata %union.anon.68* %5, metadata !12852, metadata !DIExpression()) #9, !dbg !14666
  %45 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %6, align 4, !dbg !14667
  %46 = getelementptr inbounds %union.anon.68, %union.anon.68* %5, i32 0, i32 0, !dbg !14668
  %47 = load i32, i32* %46, align 4, !dbg !14668
  store i32 %47, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !12856, metadata !DIExpression()) #9, !dbg !14669
  %48 = load i32, i32* %4, align 4, !dbg !14671
  call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %48) #9, !dbg !14672, !srcloc !12862
  %49 = getelementptr inbounds %union.anon.68, %union.anon.68* %11, i32 0, i32 0, !dbg !14646
  store i32 1, i32* %49, align 4, !dbg !14646
  br label %23, !dbg !14646, !llvm.loop !14673

50:                                               ; preds = %23
  %51 = load %struct.k_thread.180*, %struct.k_thread.180** %10, align 4, !dbg !14675
  ret %struct.k_thread.180* %51, !dbg !14676
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_unpend_thread(%struct.k_thread.180* noundef %0) #1 !dbg !14677 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca %union.anon.68, align 4
  %6 = alloca %struct.k_spinlock.13*, align 4
  %7 = alloca %union.anon.68, align 4
  %8 = alloca %struct.k_spinlock.13*, align 4
  %9 = alloca %struct.k_thread.180*, align 4
  %10 = alloca %union.anon.68, align 4
  %11 = alloca %union.anon.68, align 4
  %12 = alloca %struct.k_thread.180*, align 4
  store %struct.k_thread.180* %0, %struct.k_thread.180** %12, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.180** %12, metadata !14678, metadata !DIExpression()), !dbg !14679
  %13 = load %struct.k_thread.180*, %struct.k_thread.180** %12, align 4, !dbg !14680
  store %struct.k_thread.180* %13, %struct.k_thread.180** %9, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.180** %9, metadata !14434, metadata !DIExpression()) #9, !dbg !14681
  call void @llvm.dbg.declare(metadata %union.anon.68* %10, metadata !14436, metadata !DIExpression()) #9, !dbg !14683
  %14 = bitcast %union.anon.68* %10 to i8*, !dbg !14683
  call void @llvm.memset.p0i8.i32(i8* align 4 %14, i8 0, i32 4, i1 false) #9, !dbg !14683
  call void @llvm.dbg.declare(metadata %union.anon.68* %11, metadata !14439, metadata !DIExpression()) #9, !dbg !14683
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %8, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %8, metadata !12804, metadata !DIExpression()) #9, !dbg !14684
  %15 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %8, align 4, !dbg !14686
  call void @llvm.dbg.declare(metadata %union.anon.68* %7, metadata !12812, metadata !DIExpression()) #9, !dbg !14687
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12814, metadata !DIExpression()) #9, !dbg !14688
  call void @llvm.dbg.declare(metadata i32* %3, metadata !12818, metadata !DIExpression()) #9, !dbg !14690
  %16 = call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #9, !dbg !14691, !srcloc !12821
  %17 = extractvalue { i32, i32 } %16, 0, !dbg !14691
  %18 = extractvalue { i32, i32 } %16, 1, !dbg !14691
  store i32 %17, i32* %2, align 4, !dbg !14691
  store i32 %18, i32* %3, align 4, !dbg !14691
  %19 = load i32, i32* %2, align 4, !dbg !14692
  %20 = getelementptr inbounds %union.anon.68, %union.anon.68* %7, i32 0, i32 0, !dbg !14693
  store i32 %19, i32* %20, align 4, !dbg !14694
  %21 = getelementptr inbounds %union.anon.68, %union.anon.68* %7, i32 0, i32 0, !dbg !14695
  %22 = load i32, i32* %21, align 4, !dbg !14695
  %23 = getelementptr inbounds %union.anon.68, %union.anon.68* %11, i32 0, i32 0, !dbg !14683
  store i32 %22, i32* %23, align 4, !dbg !14683
  br label %24, !dbg !14683

24:                                               ; preds = %29, %1
  %25 = getelementptr inbounds %union.anon.68, %union.anon.68* %10, i32 0, i32 0, !dbg !14696
  %26 = load i32, i32* %25, align 4, !dbg !14696
  %27 = icmp ne i32 %26, 0, !dbg !14696
  %28 = xor i1 %27, true, !dbg !14696
  br i1 %28, label %29, label %41, !dbg !14683

29:                                               ; preds = %24
  %30 = load %struct.k_thread.180*, %struct.k_thread.180** %9, align 4, !dbg !14697
  call void @unpend_thread_no_timeout(%struct.k_thread.180* noundef %30) #13, !dbg !14698
  %31 = getelementptr inbounds %union.anon.68, %union.anon.68* %11, i32 0, i32 0, !dbg !14696
  %32 = bitcast i32* %31 to [1 x i32]*, !dbg !14696
  %33 = load [1 x i32], [1 x i32]* %32, align 4, !dbg !14696
  %34 = getelementptr inbounds %union.anon.68, %union.anon.68* %5, i32 0, i32 0
  %35 = bitcast i32* %34 to [1 x i32]*
  store [1 x i32] %33, [1 x i32]* %35, align 4
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %6, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %6, metadata !12846, metadata !DIExpression()) #9, !dbg !14699
  call void @llvm.dbg.declare(metadata %union.anon.68* %5, metadata !12852, metadata !DIExpression()) #9, !dbg !14701
  %36 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %6, align 4, !dbg !14702
  %37 = getelementptr inbounds %union.anon.68, %union.anon.68* %5, i32 0, i32 0, !dbg !14703
  %38 = load i32, i32* %37, align 4, !dbg !14703
  store i32 %38, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !12856, metadata !DIExpression()) #9, !dbg !14704
  %39 = load i32, i32* %4, align 4, !dbg !14706
  call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %39) #9, !dbg !14707, !srcloc !12862
  %40 = getelementptr inbounds %union.anon.68, %union.anon.68* %10, i32 0, i32 0, !dbg !14696
  store i32 1, i32* %40, align 4, !dbg !14696
  br label %24, !dbg !14696, !llvm.loop !14708

41:                                               ; preds = %24
  %42 = load %struct.k_thread.180*, %struct.k_thread.180** %12, align 4, !dbg !14710
  %43 = call i32 @z_abort_thread_timeout(%struct.k_thread.180* noundef %42) #10, !dbg !14711
  ret void, !dbg !14712
}

; Function Attrs: noinline nounwind optnone
define dso_local zeroext i1 @z_set_prio(%struct.k_thread.180* noundef %0, i32 noundef %1) #1 !dbg !14713 {
  %3 = alloca %struct._dnode.168*, align 4
  %4 = alloca %struct.k_thread.180*, align 4
  %5 = alloca %struct.k_thread.180*, align 4
  %6 = alloca %struct.k_thread.180*, align 4
  %7 = alloca %struct.k_thread.180*, align 4
  %8 = alloca %struct.k_thread.180*, align 4
  %9 = alloca %struct.k_thread.180*, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca %struct.k_thread.180*, align 4
  %14 = alloca %struct.k_thread.180*, align 4
  %15 = alloca %union.anon.68, align 4
  %16 = alloca %struct.k_spinlock.13*, align 4
  %17 = alloca %union.anon.68, align 4
  %18 = alloca %struct.k_spinlock.13*, align 4
  %19 = alloca %struct.k_thread.180*, align 4
  %20 = alloca i32, align 4
  %21 = alloca i8, align 1
  %22 = alloca %union.anon.68, align 4
  %23 = alloca %union.anon.68, align 4
  store %struct.k_thread.180* %0, %struct.k_thread.180** %19, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.180** %19, metadata !14714, metadata !DIExpression()), !dbg !14715
  store i32 %1, i32* %20, align 4
  call void @llvm.dbg.declare(metadata i32* %20, metadata !14716, metadata !DIExpression()), !dbg !14717
  call void @llvm.dbg.declare(metadata i8* %21, metadata !14718, metadata !DIExpression()), !dbg !14719
  store i8 0, i8* %21, align 1, !dbg !14719
  call void @llvm.dbg.declare(metadata %union.anon.68* %22, metadata !14720, metadata !DIExpression()), !dbg !14722
  %24 = bitcast %union.anon.68* %22 to i8*, !dbg !14722
  call void @llvm.memset.p0i8.i32(i8* align 4 %24, i8 0, i32 4, i1 false), !dbg !14722
  call void @llvm.dbg.declare(metadata %union.anon.68* %23, metadata !14723, metadata !DIExpression()), !dbg !14722
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %18, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %18, metadata !12804, metadata !DIExpression()) #9, !dbg !14724
  %25 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %18, align 4, !dbg !14726
  call void @llvm.dbg.declare(metadata %union.anon.68* %17, metadata !12812, metadata !DIExpression()) #9, !dbg !14727
  call void @llvm.dbg.declare(metadata i32* %10, metadata !12814, metadata !DIExpression()) #9, !dbg !14728
  call void @llvm.dbg.declare(metadata i32* %11, metadata !12818, metadata !DIExpression()) #9, !dbg !14730
  %26 = call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #9, !dbg !14731, !srcloc !12821
  %27 = extractvalue { i32, i32 } %26, 0, !dbg !14731
  %28 = extractvalue { i32, i32 } %26, 1, !dbg !14731
  store i32 %27, i32* %10, align 4, !dbg !14731
  store i32 %28, i32* %11, align 4, !dbg !14731
  %29 = load i32, i32* %10, align 4, !dbg !14732
  %30 = getelementptr inbounds %union.anon.68, %union.anon.68* %17, i32 0, i32 0, !dbg !14733
  store i32 %29, i32* %30, align 4, !dbg !14734
  %31 = getelementptr inbounds %union.anon.68, %union.anon.68* %17, i32 0, i32 0, !dbg !14735
  %32 = load i32, i32* %31, align 4, !dbg !14735
  %33 = getelementptr inbounds %union.anon.68, %union.anon.68* %23, i32 0, i32 0, !dbg !14722
  store i32 %32, i32* %33, align 4, !dbg !14722
  br label %34, !dbg !14722

34:                                               ; preds = %154, %2
  %35 = getelementptr inbounds %union.anon.68, %union.anon.68* %22, i32 0, i32 0, !dbg !14736
  %36 = load i32, i32* %35, align 4, !dbg !14736
  %37 = icmp ne i32 %36, 0, !dbg !14736
  %38 = xor i1 %37, true, !dbg !14736
  br i1 %38, label %39, label %165, !dbg !14722

39:                                               ; preds = %34
  %40 = load %struct.k_thread.180*, %struct.k_thread.180** %19, align 4, !dbg !14738
  %41 = call zeroext i1 @z_is_thread_ready(%struct.k_thread.180* noundef %40) #10, !dbg !14740
  %42 = zext i1 %41 to i8, !dbg !14741
  store i8 %42, i8* %21, align 1, !dbg !14741
  %43 = load i8, i8* %21, align 1, !dbg !14742
  %44 = trunc i8 %43 to i1, !dbg !14742
  br i1 %44, label %45, label %145, !dbg !14744

45:                                               ; preds = %39
  %46 = load %struct.k_thread.180*, %struct.k_thread.180** %19, align 4, !dbg !14745
  store %struct.k_thread.180* %46, %struct.k_thread.180** %14, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.180** %14, metadata !13193, metadata !DIExpression()) #9, !dbg !14749
  %47 = load %struct.k_thread.180*, %struct.k_thread.180** %14, align 4, !dbg !14751
  %48 = getelementptr inbounds %struct.k_thread.180, %struct.k_thread.180* %47, i32 0, i32 0, !dbg !14752
  %49 = getelementptr inbounds %struct._thread_base.173, %struct._thread_base.173* %48, i32 0, i32 3, !dbg !14753
  %50 = load i8, i8* %49, align 1, !dbg !14754
  %51 = zext i8 %50 to i32, !dbg !14754
  %52 = and i32 %51, -129, !dbg !14754
  %53 = trunc i32 %52 to i8, !dbg !14754
  store i8 %53, i8* %49, align 1, !dbg !14754
  %54 = load %struct.k_thread.180*, %struct.k_thread.180** %14, align 4, !dbg !14755
  %55 = call zeroext i1 @should_queue_thread(%struct.k_thread.180* noundef %54) #13, !dbg !14756
  br i1 %55, label %56, label %61, !dbg !14757

56:                                               ; preds = %45
  %57 = load %struct.k_thread.180*, %struct.k_thread.180** %14, align 4, !dbg !14758
  store %struct.k_thread.180* %57, %struct.k_thread.180** %9, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.180** %9, metadata !13207, metadata !DIExpression()) #9, !dbg !14759
  %58 = load %struct.k_thread.180*, %struct.k_thread.180** %9, align 4, !dbg !14761
  store %struct.k_thread.180* %58, %struct.k_thread.180** %8, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.180** %8, metadata !13212, metadata !DIExpression()), !dbg !14762
  %59 = bitcast i8* bitcast (%struct._dnode.168* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1) to i8*) to %struct._dnode.168*, !dbg !14764
  %60 = load %struct.k_thread.180*, %struct.k_thread.180** %9, align 4, !dbg !14765
  call void @z_priq_dumb_remove(%struct._dnode.168* noundef %59, %struct.k_thread.180* noundef %60) #13, !dbg !14766
  br label %61, !dbg !14767

61:                                               ; preds = %45, %56
  %62 = load i32, i32* %20, align 4, !dbg !14768
  %63 = trunc i32 %62 to i8, !dbg !14768
  %64 = load %struct.k_thread.180*, %struct.k_thread.180** %19, align 4, !dbg !14769
  %65 = getelementptr inbounds %struct.k_thread.180, %struct.k_thread.180* %64, i32 0, i32 0, !dbg !14770
  %66 = getelementptr inbounds %struct._thread_base.173, %struct._thread_base.173* %65, i32 0, i32 4, !dbg !14771
  %67 = bitcast %union.anon.2.7* %66 to %struct.device_state.293*, !dbg !14771
  %68 = getelementptr inbounds %struct.device_state.293, %struct.device_state.293* %67, i32 0, i32 0, !dbg !14771
  store i8 %63, i8* %68, align 2, !dbg !14772
  %69 = load %struct.k_thread.180*, %struct.k_thread.180** %19, align 4, !dbg !14773
  store %struct.k_thread.180* %69, %struct.k_thread.180** %13, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.180** %13, metadata !13224, metadata !DIExpression()) #9, !dbg !14774
  %70 = load %struct.k_thread.180*, %struct.k_thread.180** %13, align 4, !dbg !14776
  %71 = getelementptr inbounds %struct.k_thread.180, %struct.k_thread.180* %70, i32 0, i32 0, !dbg !14777
  %72 = getelementptr inbounds %struct._thread_base.173, %struct._thread_base.173* %71, i32 0, i32 3, !dbg !14778
  %73 = load i8, i8* %72, align 1, !dbg !14779
  %74 = zext i8 %73 to i32, !dbg !14779
  %75 = or i32 %74, 128, !dbg !14779
  %76 = trunc i32 %75 to i8, !dbg !14779
  store i8 %76, i8* %72, align 1, !dbg !14779
  %77 = load %struct.k_thread.180*, %struct.k_thread.180** %13, align 4, !dbg !14780
  %78 = call zeroext i1 @should_queue_thread(%struct.k_thread.180* noundef %77) #13, !dbg !14781
  br i1 %78, label %79, label %144, !dbg !14782

79:                                               ; preds = %61
  %80 = load %struct.k_thread.180*, %struct.k_thread.180** %13, align 4, !dbg !14783
  store %struct.k_thread.180* %80, %struct.k_thread.180** %7, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.180** %7, metadata !13238, metadata !DIExpression()) #9, !dbg !14784
  %81 = load %struct.k_thread.180*, %struct.k_thread.180** %7, align 4, !dbg !14786
  store %struct.k_thread.180* %81, %struct.k_thread.180** %6, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.180** %6, metadata !13212, metadata !DIExpression()) #9, !dbg !14787
  %82 = load %struct.k_thread.180*, %struct.k_thread.180** %7, align 4, !dbg !14789
  store %struct._dnode.168* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode.168** %3, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.168** %3, metadata !13246, metadata !DIExpression()) #9, !dbg !14790
  store %struct.k_thread.180* %82, %struct.k_thread.180** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.180** %4, metadata !13253, metadata !DIExpression()) #9, !dbg !14792
  call void @llvm.dbg.declare(metadata %struct.k_thread.180** %5, metadata !13255, metadata !DIExpression()) #9, !dbg !14793
  %83 = load %struct._dnode.168*, %struct._dnode.168** %3, align 4, !dbg !14794
  %84 = call %struct._dnode.168* @sys_dlist_peek_head(%struct._dnode.168* noundef %83) #13, !dbg !14794
  %85 = icmp ne %struct._dnode.168* %84, null, !dbg !14794
  br i1 %85, label %86, label %91, !dbg !14794

86:                                               ; preds = %79
  %87 = load %struct._dnode.168*, %struct._dnode.168** %3, align 4, !dbg !14794
  %88 = call %struct._dnode.168* @sys_dlist_peek_head(%struct._dnode.168* noundef %87) #13, !dbg !14794
  %89 = bitcast %struct._dnode.168* %88 to i8*, !dbg !14794
  %90 = bitcast i8* %89 to %struct.k_thread.180*, !dbg !14794
  br label %92, !dbg !14794

91:                                               ; preds = %79
  br label %92, !dbg !14794

92:                                               ; preds = %91, %86
  %93 = phi %struct.k_thread.180* [ %90, %86 ], [ null, %91 ], !dbg !14794
  store %struct.k_thread.180* %93, %struct.k_thread.180** %5, align 4, !dbg !14794
  br label %94, !dbg !14794

94:                                               ; preds = %135, %92
  %95 = load %struct.k_thread.180*, %struct.k_thread.180** %5, align 4, !dbg !14795
  %96 = icmp ne %struct.k_thread.180* %95, null, !dbg !14795
  br i1 %96, label %97, label %137, !dbg !14794

97:                                               ; preds = %94
  %98 = load %struct.k_thread.180*, %struct.k_thread.180** %4, align 4, !dbg !14796
  %99 = load %struct.k_thread.180*, %struct.k_thread.180** %5, align 4, !dbg !14797
  %100 = call i32 @z_sched_prio_cmp(%struct.k_thread.180* noundef %98, %struct.k_thread.180* noundef %99) #13, !dbg !14798
  %101 = icmp sgt i32 %100, 0, !dbg !14799
  br i1 %101, label %102, label %111, !dbg !14800

102:                                              ; preds = %97
  %103 = load %struct.k_thread.180*, %struct.k_thread.180** %5, align 4, !dbg !14801
  %104 = getelementptr inbounds %struct.k_thread.180, %struct.k_thread.180* %103, i32 0, i32 0, !dbg !14802
  %105 = getelementptr inbounds %struct._thread_base.173, %struct._thread_base.173* %104, i32 0, i32 0, !dbg !14803
  %106 = bitcast %union.anon.169* %105 to %struct._dnode.168*, !dbg !14803
  %107 = load %struct.k_thread.180*, %struct.k_thread.180** %4, align 4, !dbg !14804
  %108 = getelementptr inbounds %struct.k_thread.180, %struct.k_thread.180* %107, i32 0, i32 0, !dbg !14805
  %109 = getelementptr inbounds %struct._thread_base.173, %struct._thread_base.173* %108, i32 0, i32 0, !dbg !14806
  %110 = bitcast %union.anon.169* %109 to %struct._dnode.168*, !dbg !14806
  call void @sys_dlist_insert(%struct._dnode.168* noundef %106, %struct._dnode.168* noundef %110) #13, !dbg !14807
  br label %143, !dbg !14808

111:                                              ; preds = %97
  %112 = load %struct.k_thread.180*, %struct.k_thread.180** %5, align 4, !dbg !14795
  %113 = icmp ne %struct.k_thread.180* %112, null, !dbg !14795
  br i1 %113, label %114, label %134, !dbg !14795

114:                                              ; preds = %111
  %115 = load %struct._dnode.168*, %struct._dnode.168** %3, align 4, !dbg !14795
  %116 = load %struct.k_thread.180*, %struct.k_thread.180** %5, align 4, !dbg !14795
  %117 = getelementptr inbounds %struct.k_thread.180, %struct.k_thread.180* %116, i32 0, i32 0, !dbg !14795
  %118 = getelementptr inbounds %struct._thread_base.173, %struct._thread_base.173* %117, i32 0, i32 0, !dbg !14795
  %119 = bitcast %union.anon.169* %118 to %struct._dnode.168*, !dbg !14795
  %120 = call %struct._dnode.168* @sys_dlist_peek_next(%struct._dnode.168* noundef %115, %struct._dnode.168* noundef %119) #13, !dbg !14795
  %121 = icmp ne %struct._dnode.168* %120, null, !dbg !14795
  br i1 %121, label %122, label %131, !dbg !14795

122:                                              ; preds = %114
  %123 = load %struct._dnode.168*, %struct._dnode.168** %3, align 4, !dbg !14795
  %124 = load %struct.k_thread.180*, %struct.k_thread.180** %5, align 4, !dbg !14795
  %125 = getelementptr inbounds %struct.k_thread.180, %struct.k_thread.180* %124, i32 0, i32 0, !dbg !14795
  %126 = getelementptr inbounds %struct._thread_base.173, %struct._thread_base.173* %125, i32 0, i32 0, !dbg !14795
  %127 = bitcast %union.anon.169* %126 to %struct._dnode.168*, !dbg !14795
  %128 = call %struct._dnode.168* @sys_dlist_peek_next(%struct._dnode.168* noundef %123, %struct._dnode.168* noundef %127) #13, !dbg !14795
  %129 = bitcast %struct._dnode.168* %128 to i8*, !dbg !14795
  %130 = bitcast i8* %129 to %struct.k_thread.180*, !dbg !14795
  br label %132, !dbg !14795

131:                                              ; preds = %114
  br label %132, !dbg !14795

132:                                              ; preds = %131, %122
  %133 = phi %struct.k_thread.180* [ %130, %122 ], [ null, %131 ], !dbg !14795
  br label %135, !dbg !14795

134:                                              ; preds = %111
  br label %135, !dbg !14795

135:                                              ; preds = %134, %132
  %136 = phi %struct.k_thread.180* [ %133, %132 ], [ null, %134 ], !dbg !14795
  store %struct.k_thread.180* %136, %struct.k_thread.180** %5, align 4, !dbg !14795
  br label %94, !dbg !14795, !llvm.loop !14809

137:                                              ; preds = %94
  %138 = load %struct._dnode.168*, %struct._dnode.168** %3, align 4, !dbg !14811
  %139 = load %struct.k_thread.180*, %struct.k_thread.180** %4, align 4, !dbg !14812
  %140 = getelementptr inbounds %struct.k_thread.180, %struct.k_thread.180* %139, i32 0, i32 0, !dbg !14813
  %141 = getelementptr inbounds %struct._thread_base.173, %struct._thread_base.173* %140, i32 0, i32 0, !dbg !14814
  %142 = bitcast %union.anon.169* %141 to %struct._dnode.168*, !dbg !14814
  call void @sys_dlist_append(%struct._dnode.168* noundef %138, %struct._dnode.168* noundef %142) #13, !dbg !14815
  br label %143, !dbg !14816

143:                                              ; preds = %102, %137
  br label %144, !dbg !14817

144:                                              ; preds = %61, %143
  call void @update_cache(i32 noundef 1) #10, !dbg !14818
  br label %153, !dbg !14819

145:                                              ; preds = %39
  %146 = load i32, i32* %20, align 4, !dbg !14820
  %147 = trunc i32 %146 to i8, !dbg !14820
  %148 = load %struct.k_thread.180*, %struct.k_thread.180** %19, align 4, !dbg !14822
  %149 = getelementptr inbounds %struct.k_thread.180, %struct.k_thread.180* %148, i32 0, i32 0, !dbg !14823
  %150 = getelementptr inbounds %struct._thread_base.173, %struct._thread_base.173* %149, i32 0, i32 4, !dbg !14824
  %151 = bitcast %union.anon.2.7* %150 to %struct.device_state.293*, !dbg !14824
  %152 = getelementptr inbounds %struct.device_state.293, %struct.device_state.293* %151, i32 0, i32 0, !dbg !14824
  store i8 %147, i8* %152, align 2, !dbg !14825
  br label %153

153:                                              ; preds = %145, %144
  br label %154, !dbg !14826

154:                                              ; preds = %153
  %155 = getelementptr inbounds %union.anon.68, %union.anon.68* %23, i32 0, i32 0, !dbg !14736
  %156 = bitcast i32* %155 to [1 x i32]*, !dbg !14736
  %157 = load [1 x i32], [1 x i32]* %156, align 4, !dbg !14736
  %158 = getelementptr inbounds %union.anon.68, %union.anon.68* %15, i32 0, i32 0
  %159 = bitcast i32* %158 to [1 x i32]*
  store [1 x i32] %157, [1 x i32]* %159, align 4
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %16, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %16, metadata !12846, metadata !DIExpression()) #9, !dbg !14827
  call void @llvm.dbg.declare(metadata %union.anon.68* %15, metadata !12852, metadata !DIExpression()) #9, !dbg !14829
  %160 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %16, align 4, !dbg !14830
  %161 = getelementptr inbounds %union.anon.68, %union.anon.68* %15, i32 0, i32 0, !dbg !14831
  %162 = load i32, i32* %161, align 4, !dbg !14831
  store i32 %162, i32* %12, align 4
  call void @llvm.dbg.declare(metadata i32* %12, metadata !12856, metadata !DIExpression()) #9, !dbg !14832
  %163 = load i32, i32* %12, align 4, !dbg !14834
  call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %163) #9, !dbg !14835, !srcloc !12862
  %164 = getelementptr inbounds %union.anon.68, %union.anon.68* %22, i32 0, i32 0, !dbg !14736
  store i32 1, i32* %164, align 4, !dbg !14736
  br label %34, !dbg !14736, !llvm.loop !14836

165:                                              ; preds = %34
  br label %166, !dbg !14838

166:                                              ; preds = %165
  br label %167, !dbg !14839

167:                                              ; preds = %166
  %168 = load i8, i8* %21, align 1, !dbg !14841
  %169 = trunc i8 %168 to i1, !dbg !14841
  ret i1 %169, !dbg !14842
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_thread_priority_set(%struct.k_thread.180* noundef %0, i32 noundef %1) #1 !dbg !14843 {
  %3 = alloca %struct.k_thread.180*, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8, align 1
  store %struct.k_thread.180* %0, %struct.k_thread.180** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.180** %3, metadata !14846, metadata !DIExpression()), !dbg !14847
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !14848, metadata !DIExpression()), !dbg !14849
  call void @llvm.dbg.declare(metadata i8* %5, metadata !14850, metadata !DIExpression()), !dbg !14851
  %6 = load %struct.k_thread.180*, %struct.k_thread.180** %3, align 4, !dbg !14852
  %7 = load i32, i32* %4, align 4, !dbg !14853
  %8 = call zeroext i1 @z_set_prio(%struct.k_thread.180* noundef %6, i32 noundef %7) #10, !dbg !14854
  %9 = zext i1 %8 to i8, !dbg !14851
  store i8 %9, i8* %5, align 1, !dbg !14851
  call void @flag_ipi() #10, !dbg !14855
  %10 = load i8, i8* %5, align 1, !dbg !14856
  %11 = trunc i8 %10 to i1, !dbg !14856
  br i1 %11, label %12, label %22, !dbg !14858

12:                                               ; preds = %2
  %13 = load %struct.k_thread.180*, %struct.k_thread.180** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14859
  %14 = getelementptr inbounds %struct.k_thread.180, %struct.k_thread.180* %13, i32 0, i32 0, !dbg !14860
  %15 = getelementptr inbounds %struct._thread_base.173, %struct._thread_base.173* %14, i32 0, i32 4, !dbg !14861
  %16 = bitcast %union.anon.2.7* %15 to %struct.device_state.293*, !dbg !14861
  %17 = getelementptr inbounds %struct.device_state.293, %struct.device_state.293* %16, i32 0, i32 1, !dbg !14861
  %18 = load i8, i8* %17, align 1, !dbg !14861
  %19 = zext i8 %18 to i32, !dbg !14859
  %20 = icmp eq i32 %19, 0, !dbg !14862
  br i1 %20, label %21, label %22, !dbg !14863

21:                                               ; preds = %12
  call void @z_reschedule_unlocked() #10, !dbg !14864
  br label %22, !dbg !14866

22:                                               ; preds = %21, %12, %2
  ret void, !dbg !14867
}

; Function Attrs: noinline nounwind optnone
define dso_local void @k_sched_lock() #1 !dbg !14868 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca %union.anon.68, align 4
  %5 = alloca %struct.k_spinlock.13*, align 4
  %6 = alloca %union.anon.68, align 4
  %7 = alloca %struct.k_spinlock.13*, align 4
  %8 = alloca %union.anon.68, align 4
  %9 = alloca %union.anon.68, align 4
  call void @llvm.dbg.declare(metadata %union.anon.68* %8, metadata !14869, metadata !DIExpression()), !dbg !14871
  %10 = bitcast %union.anon.68* %8 to i8*, !dbg !14871
  call void @llvm.memset.p0i8.i32(i8* align 4 %10, i8 0, i32 4, i1 false), !dbg !14871
  call void @llvm.dbg.declare(metadata %union.anon.68* %9, metadata !14872, metadata !DIExpression()), !dbg !14871
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %7, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %7, metadata !12804, metadata !DIExpression()) #9, !dbg !14873
  %11 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %7, align 4, !dbg !14875
  call void @llvm.dbg.declare(metadata %union.anon.68* %6, metadata !12812, metadata !DIExpression()) #9, !dbg !14876
  call void @llvm.dbg.declare(metadata i32* %1, metadata !12814, metadata !DIExpression()) #9, !dbg !14877
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12818, metadata !DIExpression()) #9, !dbg !14879
  %12 = call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #9, !dbg !14880, !srcloc !12821
  %13 = extractvalue { i32, i32 } %12, 0, !dbg !14880
  %14 = extractvalue { i32, i32 } %12, 1, !dbg !14880
  store i32 %13, i32* %1, align 4, !dbg !14880
  store i32 %14, i32* %2, align 4, !dbg !14880
  %15 = load i32, i32* %1, align 4, !dbg !14881
  %16 = getelementptr inbounds %union.anon.68, %union.anon.68* %6, i32 0, i32 0, !dbg !14882
  store i32 %15, i32* %16, align 4, !dbg !14883
  %17 = getelementptr inbounds %union.anon.68, %union.anon.68* %6, i32 0, i32 0, !dbg !14884
  %18 = load i32, i32* %17, align 4, !dbg !14884
  %19 = getelementptr inbounds %union.anon.68, %union.anon.68* %9, i32 0, i32 0, !dbg !14871
  store i32 %18, i32* %19, align 4, !dbg !14871
  br label %20, !dbg !14871

20:                                               ; preds = %28, %0
  %21 = getelementptr inbounds %union.anon.68, %union.anon.68* %8, i32 0, i32 0, !dbg !14885
  %22 = load i32, i32* %21, align 4, !dbg !14885
  %23 = icmp ne i32 %22, 0, !dbg !14885
  %24 = xor i1 %23, true, !dbg !14885
  br i1 %24, label %25, label %39, !dbg !14871

25:                                               ; preds = %20
  br label %26, !dbg !14887

26:                                               ; preds = %25
  br label %27, !dbg !14889

27:                                               ; preds = %26
  call void @z_sched_lock() #10, !dbg !14891
  br label %28, !dbg !14892

28:                                               ; preds = %27
  %29 = getelementptr inbounds %union.anon.68, %union.anon.68* %9, i32 0, i32 0, !dbg !14885
  %30 = bitcast i32* %29 to [1 x i32]*, !dbg !14885
  %31 = load [1 x i32], [1 x i32]* %30, align 4, !dbg !14885
  %32 = getelementptr inbounds %union.anon.68, %union.anon.68* %4, i32 0, i32 0
  %33 = bitcast i32* %32 to [1 x i32]*
  store [1 x i32] %31, [1 x i32]* %33, align 4
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %5, metadata !12846, metadata !DIExpression()) #9, !dbg !14893
  call void @llvm.dbg.declare(metadata %union.anon.68* %4, metadata !12852, metadata !DIExpression()) #9, !dbg !14895
  %34 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %5, align 4, !dbg !14896
  %35 = getelementptr inbounds %union.anon.68, %union.anon.68* %4, i32 0, i32 0, !dbg !14897
  %36 = load i32, i32* %35, align 4, !dbg !14897
  store i32 %36, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !12856, metadata !DIExpression()) #9, !dbg !14898
  %37 = load i32, i32* %3, align 4, !dbg !14900
  call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %37) #9, !dbg !14901, !srcloc !12862
  %38 = getelementptr inbounds %union.anon.68, %union.anon.68* %8, i32 0, i32 0, !dbg !14885
  store i32 1, i32* %38, align 4, !dbg !14885
  br label %20, !dbg !14885, !llvm.loop !14902

39:                                               ; preds = %20
  ret void, !dbg !14904
}

; Function Attrs: noinline nounwind optnone
define internal void @z_sched_lock() #1 !dbg !14905 {
  %1 = load %struct.k_thread.180*, %struct.k_thread.180** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14906
  %2 = getelementptr inbounds %struct.k_thread.180, %struct.k_thread.180* %1, i32 0, i32 0, !dbg !14907
  %3 = getelementptr inbounds %struct._thread_base.173, %struct._thread_base.173* %2, i32 0, i32 4, !dbg !14908
  %4 = bitcast %union.anon.2.7* %3 to %struct.device_state.293*, !dbg !14908
  %5 = getelementptr inbounds %struct.device_state.293, %struct.device_state.293* %4, i32 0, i32 1, !dbg !14908
  %6 = load i8, i8* %5, align 1, !dbg !14909
  %7 = add i8 %6, -1, !dbg !14909
  store i8 %7, i8* %5, align 1, !dbg !14909
  br label %8, !dbg !14910

8:                                                ; preds = %0
  call void asm sideeffect "", "~{memory}"() #9, !dbg !14911, !srcloc !14913
  br label %9, !dbg !14911

9:                                                ; preds = %8
  ret void, !dbg !14914
}

; Function Attrs: noinline nounwind optnone
define dso_local void @k_sched_unlock() #1 !dbg !14915 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca %union.anon.68, align 4
  %5 = alloca %struct.k_spinlock.13*, align 4
  %6 = alloca %union.anon.68, align 4
  %7 = alloca %struct.k_spinlock.13*, align 4
  %8 = alloca %union.anon.68, align 4
  %9 = alloca %union.anon.68, align 4
  %10 = alloca i8, align 1
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i8*, align 4
  call void @llvm.dbg.declare(metadata %union.anon.68* %8, metadata !14916, metadata !DIExpression()), !dbg !14918
  %14 = bitcast %union.anon.68* %8 to i8*, !dbg !14918
  call void @llvm.memset.p0i8.i32(i8* align 4 %14, i8 0, i32 4, i1 false), !dbg !14918
  call void @llvm.dbg.declare(metadata %union.anon.68* %9, metadata !14919, metadata !DIExpression()), !dbg !14918
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %7, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %7, metadata !12804, metadata !DIExpression()) #9, !dbg !14920
  %15 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %7, align 4, !dbg !14922
  call void @llvm.dbg.declare(metadata %union.anon.68* %6, metadata !12812, metadata !DIExpression()) #9, !dbg !14923
  call void @llvm.dbg.declare(metadata i32* %1, metadata !12814, metadata !DIExpression()) #9, !dbg !14924
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12818, metadata !DIExpression()) #9, !dbg !14926
  %16 = call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #9, !dbg !14927, !srcloc !12821
  %17 = extractvalue { i32, i32 } %16, 0, !dbg !14927
  %18 = extractvalue { i32, i32 } %16, 1, !dbg !14927
  store i32 %17, i32* %1, align 4, !dbg !14927
  store i32 %18, i32* %2, align 4, !dbg !14927
  %19 = load i32, i32* %1, align 4, !dbg !14928
  %20 = getelementptr inbounds %union.anon.68, %union.anon.68* %6, i32 0, i32 0, !dbg !14929
  store i32 %19, i32* %20, align 4, !dbg !14930
  %21 = getelementptr inbounds %union.anon.68, %union.anon.68* %6, i32 0, i32 0, !dbg !14931
  %22 = load i32, i32* %21, align 4, !dbg !14931
  %23 = getelementptr inbounds %union.anon.68, %union.anon.68* %9, i32 0, i32 0, !dbg !14918
  store i32 %22, i32* %23, align 4, !dbg !14918
  br label %24, !dbg !14918

24:                                               ; preds = %37, %0
  %25 = getelementptr inbounds %union.anon.68, %union.anon.68* %8, i32 0, i32 0, !dbg !14932
  %26 = load i32, i32* %25, align 4, !dbg !14932
  %27 = icmp ne i32 %26, 0, !dbg !14932
  %28 = xor i1 %27, true, !dbg !14932
  br i1 %28, label %29, label %48, !dbg !14918

29:                                               ; preds = %24
  %30 = load %struct.k_thread.180*, %struct.k_thread.180** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14934
  %31 = getelementptr inbounds %struct.k_thread.180, %struct.k_thread.180* %30, i32 0, i32 0, !dbg !14936
  %32 = getelementptr inbounds %struct._thread_base.173, %struct._thread_base.173* %31, i32 0, i32 4, !dbg !14937
  %33 = bitcast %union.anon.2.7* %32 to %struct.device_state.293*, !dbg !14937
  %34 = getelementptr inbounds %struct.device_state.293, %struct.device_state.293* %33, i32 0, i32 1, !dbg !14937
  %35 = load i8, i8* %34, align 1, !dbg !14938
  %36 = add i8 %35, 1, !dbg !14938
  store i8 %36, i8* %34, align 1, !dbg !14938
  call void @update_cache(i32 noundef 0) #10, !dbg !14939
  br label %37, !dbg !14940

37:                                               ; preds = %29
  %38 = getelementptr inbounds %union.anon.68, %union.anon.68* %9, i32 0, i32 0, !dbg !14932
  %39 = bitcast i32* %38 to [1 x i32]*, !dbg !14932
  %40 = load [1 x i32], [1 x i32]* %39, align 4, !dbg !14932
  %41 = getelementptr inbounds %union.anon.68, %union.anon.68* %4, i32 0, i32 0
  %42 = bitcast i32* %41 to [1 x i32]*
  store [1 x i32] %40, [1 x i32]* %42, align 4
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %5, metadata !12846, metadata !DIExpression()) #9, !dbg !14941
  call void @llvm.dbg.declare(metadata %union.anon.68* %4, metadata !12852, metadata !DIExpression()) #9, !dbg !14943
  %43 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %5, align 4, !dbg !14944
  %44 = getelementptr inbounds %union.anon.68, %union.anon.68* %4, i32 0, i32 0, !dbg !14945
  %45 = load i32, i32* %44, align 4, !dbg !14945
  store i32 %45, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !12856, metadata !DIExpression()) #9, !dbg !14946
  %46 = load i32, i32* %3, align 4, !dbg !14948
  call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %46) #9, !dbg !14949, !srcloc !12862
  %47 = getelementptr inbounds %union.anon.68, %union.anon.68* %8, i32 0, i32 0, !dbg !14932
  store i32 1, i32* %47, align 4, !dbg !14932
  br label %24, !dbg !14932, !llvm.loop !14950

48:                                               ; preds = %24
  br label %49, !dbg !14952

49:                                               ; preds = %48
  br label %50, !dbg !14953

50:                                               ; preds = %49
  br label %51, !dbg !14957

51:                                               ; preds = %50
  br label %52, !dbg !14958

52:                                               ; preds = %51
  call void @z_reschedule_unlocked() #10, !dbg !14960
  ret void, !dbg !14961
}

; Function Attrs: noinline nounwind optnone
define dso_local %struct.k_thread.180* @z_swap_next_thread() #1 !dbg !14962 {
  %1 = load %struct.k_thread.180*, %struct.k_thread.180** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !14963
  ret %struct.k_thread.180* %1, !dbg !14964
}

; Function Attrs: noinline nounwind optnone
define dso_local zeroext i1 @z_priq_rb_lessthan(%struct.rbnode* noundef %0, %struct.rbnode* noundef %1) #1 !dbg !14965 {
  %3 = alloca i1, align 1
  %4 = alloca %struct.rbnode*, align 4
  %5 = alloca %struct.rbnode*, align 4
  %6 = alloca %struct.k_thread.180*, align 4
  %7 = alloca %struct.k_thread.180*, align 4
  %8 = alloca i32, align 4
  store %struct.rbnode* %0, %struct.rbnode** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.rbnode** %4, metadata !14968, metadata !DIExpression()), !dbg !14969
  store %struct.rbnode* %1, %struct.rbnode** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.rbnode** %5, metadata !14970, metadata !DIExpression()), !dbg !14971
  call void @llvm.dbg.declare(metadata %struct.k_thread.180** %6, metadata !14972, metadata !DIExpression()), !dbg !14973
  call void @llvm.dbg.declare(metadata %struct.k_thread.180** %7, metadata !14974, metadata !DIExpression()), !dbg !14975
  call void @llvm.dbg.declare(metadata i32* %8, metadata !14976, metadata !DIExpression()), !dbg !14977
  %9 = load %struct.rbnode*, %struct.rbnode** %4, align 4, !dbg !14978
  %10 = bitcast %struct.rbnode* %9 to i8*, !dbg !14978
  %11 = getelementptr inbounds i8, i8* %10, i32 0, !dbg !14978
  %12 = bitcast i8* %11 to %struct.k_thread.180*, !dbg !14978
  store %struct.k_thread.180* %12, %struct.k_thread.180** %6, align 4, !dbg !14979
  %13 = load %struct.rbnode*, %struct.rbnode** %5, align 4, !dbg !14980
  %14 = bitcast %struct.rbnode* %13 to i8*, !dbg !14980
  %15 = getelementptr inbounds i8, i8* %14, i32 0, !dbg !14980
  %16 = bitcast i8* %15 to %struct.k_thread.180*, !dbg !14980
  store %struct.k_thread.180* %16, %struct.k_thread.180** %7, align 4, !dbg !14981
  %17 = load %struct.k_thread.180*, %struct.k_thread.180** %6, align 4, !dbg !14982
  %18 = load %struct.k_thread.180*, %struct.k_thread.180** %7, align 4, !dbg !14983
  %19 = call i32 @z_sched_prio_cmp(%struct.k_thread.180* noundef %17, %struct.k_thread.180* noundef %18) #10, !dbg !14984
  store i32 %19, i32* %8, align 4, !dbg !14985
  %20 = load i32, i32* %8, align 4, !dbg !14986
  %21 = icmp sgt i32 %20, 0, !dbg !14988
  br i1 %21, label %22, label %23, !dbg !14989

22:                                               ; preds = %2
  store i1 true, i1* %3, align 1, !dbg !14990
  br label %40, !dbg !14990

23:                                               ; preds = %2
  %24 = load i32, i32* %8, align 4, !dbg !14992
  %25 = icmp slt i32 %24, 0, !dbg !14994
  br i1 %25, label %26, label %27, !dbg !14995

26:                                               ; preds = %23
  store i1 false, i1* %3, align 1, !dbg !14996
  br label %40, !dbg !14996

27:                                               ; preds = %23
  %28 = load %struct.k_thread.180*, %struct.k_thread.180** %6, align 4, !dbg !14998
  %29 = getelementptr inbounds %struct.k_thread.180, %struct.k_thread.180* %28, i32 0, i32 0, !dbg !15000
  %30 = getelementptr inbounds %struct._thread_base.173, %struct._thread_base.173* %29, i32 0, i32 5, !dbg !15001
  %31 = load i32, i32* %30, align 8, !dbg !15001
  %32 = load %struct.k_thread.180*, %struct.k_thread.180** %7, align 4, !dbg !15002
  %33 = getelementptr inbounds %struct.k_thread.180, %struct.k_thread.180* %32, i32 0, i32 0, !dbg !15003
  %34 = getelementptr inbounds %struct._thread_base.173, %struct._thread_base.173* %33, i32 0, i32 5, !dbg !15004
  %35 = load i32, i32* %34, align 8, !dbg !15004
  %36 = icmp ult i32 %31, %35, !dbg !15005
  %37 = zext i1 %36 to i64, !dbg !14998
  %38 = select i1 %36, i32 1, i32 0, !dbg !14998
  %39 = icmp ne i32 %38, 0, !dbg !14998
  store i1 %39, i1* %3, align 1, !dbg !15006
  br label %40, !dbg !15006

40:                                               ; preds = %27, %26, %22
  %41 = load i1, i1* %3, align 1, !dbg !15007
  ret i1 %41, !dbg !15007
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_priq_rb_add(%struct._priq_rb* noundef %0, %struct.k_thread.180* noundef %1) #1 !dbg !15008 {
  %3 = alloca %struct._priq_rb*, align 4
  %4 = alloca %struct.k_thread.180*, align 4
  %5 = alloca %struct.k_thread.180*, align 4
  %6 = alloca %struct._rb_foreach, align 4
  %7 = alloca %struct.rbnode*, align 4
  %8 = alloca %struct.k_thread.180*, align 4
  store %struct._priq_rb* %0, %struct._priq_rb** %3, align 4
  call void @llvm.dbg.declare(metadata %struct._priq_rb** %3, metadata !15024, metadata !DIExpression()), !dbg !15025
  store %struct.k_thread.180* %1, %struct.k_thread.180** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.180** %4, metadata !15026, metadata !DIExpression()), !dbg !15027
  call void @llvm.dbg.declare(metadata %struct.k_thread.180** %5, metadata !15028, metadata !DIExpression()), !dbg !15029
  %9 = load %struct._priq_rb*, %struct._priq_rb** %3, align 4, !dbg !15030
  %10 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %9, i32 0, i32 1, !dbg !15031
  %11 = load i32, i32* %10, align 4, !dbg !15032
  %12 = add nsw i32 %11, 1, !dbg !15032
  store i32 %12, i32* %10, align 4, !dbg !15032
  %13 = load %struct.k_thread.180*, %struct.k_thread.180** %4, align 4, !dbg !15033
  %14 = getelementptr inbounds %struct.k_thread.180, %struct.k_thread.180* %13, i32 0, i32 0, !dbg !15034
  %15 = getelementptr inbounds %struct._thread_base.173, %struct._thread_base.173* %14, i32 0, i32 5, !dbg !15035
  store i32 %11, i32* %15, align 8, !dbg !15036
  %16 = load %struct._priq_rb*, %struct._priq_rb** %3, align 4, !dbg !15037
  %17 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %16, i32 0, i32 1, !dbg !15039
  %18 = load i32, i32* %17, align 4, !dbg !15039
  %19 = icmp ne i32 %18, 0, !dbg !15037
  br i1 %19, label %62, label %20, !dbg !15040

20:                                               ; preds = %2
  call void @llvm.dbg.declare(metadata %struct._rb_foreach* %6, metadata !15041, metadata !DIExpression()), !dbg !15049
  %21 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %6, i32 0, i32 0, !dbg !15049
  %22 = load %struct._priq_rb*, %struct._priq_rb** %3, align 4, !dbg !15049
  %23 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %22, i32 0, i32 0, !dbg !15049
  %24 = getelementptr inbounds %struct.rbtree, %struct.rbtree* %23, i32 0, i32 2, !dbg !15049
  %25 = load i32, i32* %24, align 4, !dbg !15049
  %26 = mul i32 %25, 4, !dbg !15049
  %27 = alloca i8, i32 %26, align 8, !dbg !15049
  %28 = bitcast i8* %27 to %struct.rbnode**, !dbg !15049
  store %struct.rbnode** %28, %struct.rbnode*** %21, align 4, !dbg !15049
  %29 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %6, i32 0, i32 1, !dbg !15049
  %30 = load %struct._priq_rb*, %struct._priq_rb** %3, align 4, !dbg !15049
  %31 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %30, i32 0, i32 0, !dbg !15049
  %32 = getelementptr inbounds %struct.rbtree, %struct.rbtree* %31, i32 0, i32 2, !dbg !15049
  %33 = load i32, i32* %32, align 4, !dbg !15049
  %34 = mul i32 %33, 1, !dbg !15049
  %35 = alloca i8, i32 %34, align 8, !dbg !15049
  store i8* %35, i8** %29, align 4, !dbg !15049
  %36 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %6, i32 0, i32 2, !dbg !15049
  store i32 -1, i32* %36, align 4, !dbg !15049
  br label %37, !dbg !15049

37:                                               ; preds = %53, %20
  call void @llvm.dbg.declare(metadata %struct.rbnode** %7, metadata !15050, metadata !DIExpression()), !dbg !15053
  %38 = load %struct._priq_rb*, %struct._priq_rb** %3, align 4, !dbg !15053
  %39 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %38, i32 0, i32 0, !dbg !15053
  %40 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef %39, %struct._rb_foreach* noundef %6) #10, !dbg !15053
  store %struct.rbnode* %40, %struct.rbnode** %7, align 4, !dbg !15053
  %41 = load %struct.rbnode*, %struct.rbnode** %7, align 4, !dbg !15053
  %42 = icmp ne %struct.rbnode* %41, null, !dbg !15053
  br i1 %42, label %43, label %48, !dbg !15053

43:                                               ; preds = %37
  %44 = load %struct.rbnode*, %struct.rbnode** %7, align 4, !dbg !15053
  %45 = bitcast %struct.rbnode* %44 to i8*, !dbg !15053
  %46 = getelementptr inbounds i8, i8* %45, i32 0, !dbg !15053
  %47 = bitcast i8* %46 to %struct.k_thread.180*, !dbg !15053
  br label %49, !dbg !15053

48:                                               ; preds = %37
  br label %49, !dbg !15053

49:                                               ; preds = %48, %43
  %50 = phi %struct.k_thread.180* [ %47, %43 ], [ null, %48 ], !dbg !15053
  store %struct.k_thread.180* %50, %struct.k_thread.180** %5, align 4, !dbg !15053
  store %struct.k_thread.180* %50, %struct.k_thread.180** %8, align 4, !dbg !15053
  %51 = load %struct.k_thread.180*, %struct.k_thread.180** %8, align 4, !dbg !15053
  %52 = icmp ne %struct.k_thread.180* %51, null, !dbg !15054
  br i1 %52, label %53, label %61, !dbg !15049

53:                                               ; preds = %49
  %54 = load %struct._priq_rb*, %struct._priq_rb** %3, align 4, !dbg !15055
  %55 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %54, i32 0, i32 1, !dbg !15057
  %56 = load i32, i32* %55, align 4, !dbg !15058
  %57 = add nsw i32 %56, 1, !dbg !15058
  store i32 %57, i32* %55, align 4, !dbg !15058
  %58 = load %struct.k_thread.180*, %struct.k_thread.180** %5, align 4, !dbg !15059
  %59 = getelementptr inbounds %struct.k_thread.180, %struct.k_thread.180* %58, i32 0, i32 0, !dbg !15060
  %60 = getelementptr inbounds %struct._thread_base.173, %struct._thread_base.173* %59, i32 0, i32 5, !dbg !15061
  store i32 %56, i32* %60, align 8, !dbg !15062
  br label %37, !dbg !15054, !llvm.loop !15063

61:                                               ; preds = %49
  br label %62, !dbg !15065

62:                                               ; preds = %61, %2
  %63 = load %struct._priq_rb*, %struct._priq_rb** %3, align 4, !dbg !15066
  %64 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %63, i32 0, i32 0, !dbg !15067
  %65 = load %struct.k_thread.180*, %struct.k_thread.180** %4, align 4, !dbg !15068
  %66 = getelementptr inbounds %struct.k_thread.180, %struct.k_thread.180* %65, i32 0, i32 0, !dbg !15069
  %67 = getelementptr inbounds %struct._thread_base.173, %struct._thread_base.173* %66, i32 0, i32 0, !dbg !15070
  %68 = bitcast %union.anon.169* %67 to %struct.rbnode*, !dbg !15070
  call void @rb_insert(%struct.rbtree* noundef %64, %struct.rbnode* noundef %68) #10, !dbg !15071
  ret void, !dbg !15072
}

declare dso_local %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef, %struct._rb_foreach* noundef) #0

declare dso_local void @rb_insert(%struct.rbtree* noundef, %struct.rbnode* noundef) #0

; Function Attrs: noinline nounwind optnone
define dso_local void @z_priq_rb_remove(%struct._priq_rb* noundef %0, %struct.k_thread.180* noundef %1) #1 !dbg !15073 {
  %3 = alloca %struct._priq_rb*, align 4
  %4 = alloca %struct.k_thread.180*, align 4
  store %struct._priq_rb* %0, %struct._priq_rb** %3, align 4
  call void @llvm.dbg.declare(metadata %struct._priq_rb** %3, metadata !15074, metadata !DIExpression()), !dbg !15075
  store %struct.k_thread.180* %1, %struct.k_thread.180** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.180** %4, metadata !15076, metadata !DIExpression()), !dbg !15077
  %5 = load %struct._priq_rb*, %struct._priq_rb** %3, align 4, !dbg !15078
  %6 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %5, i32 0, i32 0, !dbg !15079
  %7 = load %struct.k_thread.180*, %struct.k_thread.180** %4, align 4, !dbg !15080
  %8 = getelementptr inbounds %struct.k_thread.180, %struct.k_thread.180* %7, i32 0, i32 0, !dbg !15081
  %9 = getelementptr inbounds %struct._thread_base.173, %struct._thread_base.173* %8, i32 0, i32 0, !dbg !15082
  %10 = bitcast %union.anon.169* %9 to %struct.rbnode*, !dbg !15082
  call void @rb_remove(%struct.rbtree* noundef %6, %struct.rbnode* noundef %10) #10, !dbg !15083
  %11 = load %struct._priq_rb*, %struct._priq_rb** %3, align 4, !dbg !15084
  %12 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %11, i32 0, i32 0, !dbg !15086
  %13 = getelementptr inbounds %struct.rbtree, %struct.rbtree* %12, i32 0, i32 0, !dbg !15087
  %14 = load %struct.rbnode*, %struct.rbnode** %13, align 4, !dbg !15087
  %15 = icmp ne %struct.rbnode* %14, null, !dbg !15084
  br i1 %15, label %19, label %16, !dbg !15088

16:                                               ; preds = %2
  %17 = load %struct._priq_rb*, %struct._priq_rb** %3, align 4, !dbg !15089
  %18 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %17, i32 0, i32 1, !dbg !15091
  store i32 0, i32* %18, align 4, !dbg !15092
  br label %19, !dbg !15093

19:                                               ; preds = %16, %2
  ret void, !dbg !15094
}

declare dso_local void @rb_remove(%struct.rbtree* noundef, %struct.rbnode* noundef) #0

; Function Attrs: noinline nounwind optnone
define dso_local %struct.k_thread.180* @z_priq_rb_best(%struct._priq_rb* noundef %0) #1 !dbg !15095 {
  %2 = alloca %struct._priq_rb*, align 4
  %3 = alloca %struct.k_thread.180*, align 4
  %4 = alloca %struct.rbnode*, align 4
  store %struct._priq_rb* %0, %struct._priq_rb** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._priq_rb** %2, metadata !15098, metadata !DIExpression()), !dbg !15099
  call void @llvm.dbg.declare(metadata %struct.k_thread.180** %3, metadata !15100, metadata !DIExpression()), !dbg !15101
  store %struct.k_thread.180* null, %struct.k_thread.180** %3, align 4, !dbg !15101
  call void @llvm.dbg.declare(metadata %struct.rbnode** %4, metadata !15102, metadata !DIExpression()), !dbg !15103
  %5 = load %struct._priq_rb*, %struct._priq_rb** %2, align 4, !dbg !15104
  %6 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %5, i32 0, i32 0, !dbg !15105
  %7 = call %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %6) #10, !dbg !15106
  store %struct.rbnode* %7, %struct.rbnode** %4, align 4, !dbg !15103
  %8 = load %struct.rbnode*, %struct.rbnode** %4, align 4, !dbg !15107
  %9 = icmp ne %struct.rbnode* %8, null, !dbg !15109
  br i1 %9, label %10, label %15, !dbg !15110

10:                                               ; preds = %1
  %11 = load %struct.rbnode*, %struct.rbnode** %4, align 4, !dbg !15111
  %12 = bitcast %struct.rbnode* %11 to i8*, !dbg !15111
  %13 = getelementptr inbounds i8, i8* %12, i32 0, !dbg !15111
  %14 = bitcast i8* %13 to %struct.k_thread.180*, !dbg !15111
  store %struct.k_thread.180* %14, %struct.k_thread.180** %3, align 4, !dbg !15113
  br label %15, !dbg !15114

15:                                               ; preds = %10, %1
  %16 = load %struct.k_thread.180*, %struct.k_thread.180** %3, align 4, !dbg !15115
  ret %struct.k_thread.180* %16, !dbg !15116
}

; Function Attrs: noinline nounwind optnone
define internal %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %0) #1 !dbg !15117 {
  %2 = alloca %struct.rbtree*, align 4
  store %struct.rbtree* %0, %struct.rbtree** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.rbtree** %2, metadata !15121, metadata !DIExpression()), !dbg !15122
  %3 = load %struct.rbtree*, %struct.rbtree** %2, align 4, !dbg !15123
  %4 = call %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef %3, i8 noundef zeroext 0) #10, !dbg !15124
  ret %struct.rbnode* %4, !dbg !15125
}

declare dso_local %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef, i8 noundef zeroext) #0

; Function Attrs: noinline nounwind optnone
define dso_local %struct.k_thread.180* @z_priq_mq_best(%struct._priq_mq* noundef %0) #1 !dbg !15126 {
  %2 = alloca %struct.k_thread.180*, align 4
  %3 = alloca %struct._priq_mq*, align 4
  %4 = alloca %struct.k_thread.180*, align 4
  %5 = alloca %struct._dnode.168*, align 4
  %6 = alloca %struct._dnode.168*, align 4
  store %struct._priq_mq* %0, %struct._priq_mq** %3, align 4
  call void @llvm.dbg.declare(metadata %struct._priq_mq** %3, metadata !15135, metadata !DIExpression()), !dbg !15136
  %7 = load %struct._priq_mq*, %struct._priq_mq** %3, align 4, !dbg !15137
  %8 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %7, i32 0, i32 1, !dbg !15139
  %9 = load i32, i32* %8, align 4, !dbg !15139
  %10 = icmp ne i32 %9, 0, !dbg !15137
  br i1 %10, label %12, label %11, !dbg !15140

11:                                               ; preds = %1
  store %struct.k_thread.180* null, %struct.k_thread.180** %2, align 4, !dbg !15141
  br label %31, !dbg !15141

12:                                               ; preds = %1
  call void @llvm.dbg.declare(metadata %struct.k_thread.180** %4, metadata !15143, metadata !DIExpression()), !dbg !15144
  store %struct.k_thread.180* null, %struct.k_thread.180** %4, align 4, !dbg !15144
  call void @llvm.dbg.declare(metadata %struct._dnode.168** %5, metadata !15145, metadata !DIExpression()), !dbg !15146
  %13 = load %struct._priq_mq*, %struct._priq_mq** %3, align 4, !dbg !15147
  %14 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %13, i32 0, i32 0, !dbg !15148
  %15 = load %struct._priq_mq*, %struct._priq_mq** %3, align 4, !dbg !15149
  %16 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %15, i32 0, i32 1, !dbg !15150
  %17 = load i32, i32* %16, align 4, !dbg !15150
  %18 = call i32 @llvm.cttz.i32(i32 %17, i1 false), !dbg !15151
  %19 = getelementptr inbounds [32 x %struct._dnode.168], [32 x %struct._dnode.168]* %14, i32 0, i32 %18, !dbg !15147
  store %struct._dnode.168* %19, %struct._dnode.168** %5, align 4, !dbg !15146
  call void @llvm.dbg.declare(metadata %struct._dnode.168** %6, metadata !15152, metadata !DIExpression()), !dbg !15153
  %20 = load %struct._dnode.168*, %struct._dnode.168** %5, align 4, !dbg !15154
  %21 = call %struct._dnode.168* @sys_dlist_peek_head(%struct._dnode.168* noundef %20) #10, !dbg !15155
  store %struct._dnode.168* %21, %struct._dnode.168** %6, align 4, !dbg !15153
  %22 = load %struct._dnode.168*, %struct._dnode.168** %6, align 4, !dbg !15156
  %23 = icmp ne %struct._dnode.168* %22, null, !dbg !15158
  br i1 %23, label %24, label %29, !dbg !15159

24:                                               ; preds = %12
  %25 = load %struct._dnode.168*, %struct._dnode.168** %6, align 4, !dbg !15160
  %26 = bitcast %struct._dnode.168* %25 to i8*, !dbg !15160
  %27 = getelementptr inbounds i8, i8* %26, i32 0, !dbg !15160
  %28 = bitcast i8* %27 to %struct.k_thread.180*, !dbg !15160
  store %struct.k_thread.180* %28, %struct.k_thread.180** %4, align 4, !dbg !15162
  br label %29, !dbg !15163

29:                                               ; preds = %24, %12
  %30 = load %struct.k_thread.180*, %struct.k_thread.180** %4, align 4, !dbg !15164
  store %struct.k_thread.180* %30, %struct.k_thread.180** %2, align 4, !dbg !15165
  br label %31, !dbg !15165

31:                                               ; preds = %29, %11
  %32 = load %struct.k_thread.180*, %struct.k_thread.180** %2, align 4, !dbg !15166
  ret %struct.k_thread.180* %32, !dbg !15166
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.cttz.i32(i32, i1 immarg) #2

; Function Attrs: noinline nounwind optnone
define dso_local i32 @z_unpend_all(%union.anon.169* noundef %0) #1 !dbg !15167 {
  %2 = alloca %union.anon.169*, align 4
  %3 = alloca i32, align 4
  %4 = alloca %struct.k_thread.180*, align 4
  store %union.anon.169* %0, %union.anon.169** %2, align 4
  call void @llvm.dbg.declare(metadata %union.anon.169** %2, metadata !15170, metadata !DIExpression()), !dbg !15171
  call void @llvm.dbg.declare(metadata i32* %3, metadata !15172, metadata !DIExpression()), !dbg !15173
  store i32 0, i32* %3, align 4, !dbg !15173
  call void @llvm.dbg.declare(metadata %struct.k_thread.180** %4, metadata !15174, metadata !DIExpression()), !dbg !15175
  br label %5, !dbg !15176

5:                                                ; preds = %9, %1
  %6 = load %union.anon.169*, %union.anon.169** %2, align 4, !dbg !15177
  %7 = call %struct.k_thread.180* @z_waitq_head(%union.anon.169* noundef %6) #10, !dbg !15178
  store %struct.k_thread.180* %7, %struct.k_thread.180** %4, align 4, !dbg !15179
  %8 = icmp ne %struct.k_thread.180* %7, null, !dbg !15180
  br i1 %8, label %9, label %12, !dbg !15176

9:                                                ; preds = %5
  %10 = load %struct.k_thread.180*, %struct.k_thread.180** %4, align 4, !dbg !15181
  call void @z_unpend_thread(%struct.k_thread.180* noundef %10) #10, !dbg !15183
  %11 = load %struct.k_thread.180*, %struct.k_thread.180** %4, align 4, !dbg !15184
  call void @z_ready_thread(%struct.k_thread.180* noundef %11) #10, !dbg !15185
  store i32 1, i32* %3, align 4, !dbg !15186
  br label %5, !dbg !15176, !llvm.loop !15187

12:                                               ; preds = %5
  %13 = load i32, i32* %3, align 4, !dbg !15189
  ret i32 %13, !dbg !15190
}

; Function Attrs: noinline nounwind optnone
define internal %struct.k_thread.180* @z_waitq_head(%union.anon.169* noundef %0) #1 !dbg !15191 {
  %2 = alloca %union.anon.169*, align 4
  store %union.anon.169* %0, %union.anon.169** %2, align 4
  call void @llvm.dbg.declare(metadata %union.anon.169** %2, metadata !15192, metadata !DIExpression()), !dbg !15193
  %3 = load %union.anon.169*, %union.anon.169** %2, align 4, !dbg !15194
  %4 = getelementptr inbounds %union.anon.169, %union.anon.169* %3, i32 0, i32 0, !dbg !15195
  %5 = call %struct._dnode.168* @sys_dlist_peek_head(%struct._dnode.168* noundef %4) #10, !dbg !15196
  %6 = bitcast %struct._dnode.168* %5 to %struct.k_thread.180*, !dbg !15197
  ret %struct.k_thread.180* %6, !dbg !15198
}

; Function Attrs: noinline nounwind optnone
define dso_local void @init_ready_q(%struct._ready_q* noundef %0) #1 !dbg !15199 {
  %2 = alloca %struct._ready_q*, align 4
  store %struct._ready_q* %0, %struct._ready_q** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._ready_q** %2, metadata !15207, metadata !DIExpression()), !dbg !15208
  %3 = load %struct._ready_q*, %struct._ready_q** %2, align 4, !dbg !15209
  %4 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %3, i32 0, i32 1, !dbg !15210
  call void @sys_dlist_init.93(%struct._dnode.168* noundef %4) #10, !dbg !15211
  ret void, !dbg !15212
}

; Function Attrs: noinline nounwind optnone
define internal void @sys_dlist_init.93(%struct._dnode.168* noundef %0) #1 !dbg !15213 {
  %2 = alloca %struct._dnode.168*, align 4
  store %struct._dnode.168* %0, %struct._dnode.168** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.168** %2, metadata !15216, metadata !DIExpression()), !dbg !15217
  %3 = load %struct._dnode.168*, %struct._dnode.168** %2, align 4, !dbg !15218
  %4 = load %struct._dnode.168*, %struct._dnode.168** %2, align 4, !dbg !15219
  %5 = getelementptr inbounds %struct._dnode.168, %struct._dnode.168* %4, i32 0, i32 0, !dbg !15220
  %6 = bitcast %union.anon.0.166* %5 to %struct._dnode.168**, !dbg !15220
  store %struct._dnode.168* %3, %struct._dnode.168** %6, align 4, !dbg !15221
  %7 = load %struct._dnode.168*, %struct._dnode.168** %2, align 4, !dbg !15222
  %8 = load %struct._dnode.168*, %struct._dnode.168** %2, align 4, !dbg !15223
  %9 = getelementptr inbounds %struct._dnode.168, %struct._dnode.168* %8, i32 0, i32 1, !dbg !15224
  %10 = bitcast %union.anon.0.166* %9 to %struct._dnode.168**, !dbg !15224
  store %struct._dnode.168* %7, %struct._dnode.168** %10, align 4, !dbg !15225
  ret void, !dbg !15226
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_sched_init() #1 !dbg !15227 {
  call void @init_ready_q(%struct._ready_q* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1)) #10, !dbg !15228
  call void @k_sched_time_slice_set(i32 noundef 0, i32 noundef 0) #10, !dbg !15229
  ret void, !dbg !15230
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @z_impl_k_thread_priority_get(%struct.k_thread.180* noundef %0) #1 !dbg !15231 {
  %2 = alloca %struct.k_thread.180*, align 4
  store %struct.k_thread.180* %0, %struct.k_thread.180** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.180** %2, metadata !15235, metadata !DIExpression()), !dbg !15236
  %3 = load %struct.k_thread.180*, %struct.k_thread.180** %2, align 4, !dbg !15237
  %4 = getelementptr inbounds %struct.k_thread.180, %struct.k_thread.180* %3, i32 0, i32 0, !dbg !15238
  %5 = getelementptr inbounds %struct._thread_base.173, %struct._thread_base.173* %4, i32 0, i32 4, !dbg !15239
  %6 = bitcast %union.anon.2.7* %5 to %struct.device_state.293*, !dbg !15239
  %7 = getelementptr inbounds %struct.device_state.293, %struct.device_state.293* %6, i32 0, i32 0, !dbg !15239
  %8 = load i8, i8* %7, align 2, !dbg !15239
  %9 = sext i8 %8 to i32, !dbg !15237
  ret i32 %9, !dbg !15240
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_impl_k_thread_priority_set(%struct.k_thread.180* noundef %0, i32 noundef %1) #1 !dbg !15241 {
  %3 = alloca %struct.k_thread.180*, align 4
  %4 = alloca i32, align 4
  %5 = alloca %struct.k_thread.180*, align 4
  store %struct.k_thread.180* %0, %struct.k_thread.180** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.180** %3, metadata !15244, metadata !DIExpression()), !dbg !15245
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !15246, metadata !DIExpression()), !dbg !15247
  br label %6, !dbg !15248

6:                                                ; preds = %2
  br label %7, !dbg !15249

7:                                                ; preds = %6
  call void @llvm.dbg.declare(metadata %struct.k_thread.180** %5, metadata !15251, metadata !DIExpression()), !dbg !15252
  %8 = load %struct.k_thread.180*, %struct.k_thread.180** %3, align 4, !dbg !15253
  store %struct.k_thread.180* %8, %struct.k_thread.180** %5, align 4, !dbg !15252
  %9 = load %struct.k_thread.180*, %struct.k_thread.180** %5, align 4, !dbg !15254
  %10 = load i32, i32* %4, align 4, !dbg !15255
  call void @z_thread_priority_set(%struct.k_thread.180* noundef %9, i32 noundef %10) #10, !dbg !15256
  ret void, !dbg !15257
}

; Function Attrs: noinline nounwind optnone
define dso_local zeroext i1 @k_can_yield() #1 !dbg !15258 {
  %1 = call zeroext i1 @k_is_pre_kernel() #10, !dbg !15259
  br i1 %1, label %7, label %2, !dbg !15260

2:                                                ; preds = %0
  %3 = call zeroext i1 @k_is_in_isr() #10, !dbg !15261
  br i1 %3, label %7, label %4, !dbg !15262

4:                                                ; preds = %2
  %5 = load %struct.k_thread.180*, %struct.k_thread.180** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15263
  %6 = call zeroext i1 @z_is_idle_thread_object(%struct.k_thread.180* noundef %5) #10, !dbg !15264
  br label %7, !dbg !15262

7:                                                ; preds = %4, %2, %0
  %8 = phi i1 [ true, %2 ], [ true, %0 ], [ %6, %4 ]
  %9 = xor i1 %8, true, !dbg !15265
  ret i1 %9, !dbg !15266
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @k_is_pre_kernel() #1 !dbg !15267 {
  %1 = load i8, i8* @z_sys_post_kernel, align 1, !dbg !15268
  %2 = trunc i8 %1 to i1, !dbg !15268
  %3 = xor i1 %2, true, !dbg !15269
  ret i1 %3, !dbg !15270
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_impl_k_yield() #1 !dbg !15271 {
  %1 = alloca %struct._dnode.168*, align 4
  %2 = alloca %struct.k_thread.180*, align 4
  %3 = alloca %struct.k_thread.180*, align 4
  %4 = alloca %struct.k_thread.180*, align 4
  %5 = alloca %struct.k_thread.180*, align 4
  %6 = alloca %struct.k_thread.180*, align 4
  %7 = alloca %struct.k_thread.180*, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca %struct.k_thread.180*, align 4
  %11 = alloca %struct.k_spinlock.13*, align 4
  %12 = alloca %union.anon.68, align 4
  %13 = alloca %struct.k_spinlock.13*, align 4
  %14 = alloca %struct.k_thread.180*, align 4
  %15 = alloca %union.anon.68, align 4
  %16 = alloca %struct.k_spinlock.13*, align 4
  %17 = alloca %union.anon.68, align 4
  br label %18, !dbg !15272

18:                                               ; preds = %0
  br label %19, !dbg !15273

19:                                               ; preds = %18
  call void @llvm.dbg.declare(metadata %union.anon.68* %17, metadata !15275, metadata !DIExpression()), !dbg !15276
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %16, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %16, metadata !12804, metadata !DIExpression()) #9, !dbg !15277
  %20 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %16, align 4, !dbg !15279
  call void @llvm.dbg.declare(metadata %union.anon.68* %15, metadata !12812, metadata !DIExpression()) #9, !dbg !15280
  call void @llvm.dbg.declare(metadata i32* %8, metadata !12814, metadata !DIExpression()) #9, !dbg !15281
  call void @llvm.dbg.declare(metadata i32* %9, metadata !12818, metadata !DIExpression()) #9, !dbg !15283
  %21 = call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #9, !dbg !15284, !srcloc !12821
  %22 = extractvalue { i32, i32 } %21, 0, !dbg !15284
  %23 = extractvalue { i32, i32 } %21, 1, !dbg !15284
  store i32 %22, i32* %8, align 4, !dbg !15284
  store i32 %23, i32* %9, align 4, !dbg !15284
  %24 = load i32, i32* %8, align 4, !dbg !15285
  %25 = getelementptr inbounds %union.anon.68, %union.anon.68* %15, i32 0, i32 0, !dbg !15286
  store i32 %24, i32* %25, align 4, !dbg !15287
  %26 = getelementptr inbounds %union.anon.68, %union.anon.68* %15, i32 0, i32 0, !dbg !15288
  %27 = load i32, i32* %26, align 4, !dbg !15288
  %28 = getelementptr inbounds %union.anon.68, %union.anon.68* %17, i32 0, i32 0, !dbg !15289
  store i32 %27, i32* %28, align 4, !dbg !15289
  %29 = load %struct.k_thread.180*, %struct.k_thread.180** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15290
  store %struct.k_thread.180* %29, %struct.k_thread.180** %14, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.180** %14, metadata !13193, metadata !DIExpression()) #9, !dbg !15293
  %30 = load %struct.k_thread.180*, %struct.k_thread.180** %14, align 4, !dbg !15295
  %31 = getelementptr inbounds %struct.k_thread.180, %struct.k_thread.180* %30, i32 0, i32 0, !dbg !15296
  %32 = getelementptr inbounds %struct._thread_base.173, %struct._thread_base.173* %31, i32 0, i32 3, !dbg !15297
  %33 = load i8, i8* %32, align 1, !dbg !15298
  %34 = zext i8 %33 to i32, !dbg !15298
  %35 = and i32 %34, -129, !dbg !15298
  %36 = trunc i32 %35 to i8, !dbg !15298
  store i8 %36, i8* %32, align 1, !dbg !15298
  %37 = load %struct.k_thread.180*, %struct.k_thread.180** %14, align 4, !dbg !15299
  %38 = call zeroext i1 @should_queue_thread(%struct.k_thread.180* noundef %37) #13, !dbg !15300
  br i1 %38, label %39, label %44, !dbg !15301

39:                                               ; preds = %19
  %40 = load %struct.k_thread.180*, %struct.k_thread.180** %14, align 4, !dbg !15302
  store %struct.k_thread.180* %40, %struct.k_thread.180** %7, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.180** %7, metadata !13207, metadata !DIExpression()) #9, !dbg !15303
  %41 = load %struct.k_thread.180*, %struct.k_thread.180** %7, align 4, !dbg !15305
  store %struct.k_thread.180* %41, %struct.k_thread.180** %6, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.180** %6, metadata !13212, metadata !DIExpression()), !dbg !15306
  %42 = bitcast i8* bitcast (%struct._dnode.168* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1) to i8*) to %struct._dnode.168*, !dbg !15308
  %43 = load %struct.k_thread.180*, %struct.k_thread.180** %7, align 4, !dbg !15309
  call void @z_priq_dumb_remove(%struct._dnode.168* noundef %42, %struct.k_thread.180* noundef %43) #13, !dbg !15310
  br label %44, !dbg !15311

44:                                               ; preds = %19, %39
  %45 = load %struct.k_thread.180*, %struct.k_thread.180** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15312
  store %struct.k_thread.180* %45, %struct.k_thread.180** %10, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.180** %10, metadata !13224, metadata !DIExpression()) #9, !dbg !15313
  %46 = load %struct.k_thread.180*, %struct.k_thread.180** %10, align 4, !dbg !15315
  %47 = getelementptr inbounds %struct.k_thread.180, %struct.k_thread.180* %46, i32 0, i32 0, !dbg !15316
  %48 = getelementptr inbounds %struct._thread_base.173, %struct._thread_base.173* %47, i32 0, i32 3, !dbg !15317
  %49 = load i8, i8* %48, align 1, !dbg !15318
  %50 = zext i8 %49 to i32, !dbg !15318
  %51 = or i32 %50, 128, !dbg !15318
  %52 = trunc i32 %51 to i8, !dbg !15318
  store i8 %52, i8* %48, align 1, !dbg !15318
  %53 = load %struct.k_thread.180*, %struct.k_thread.180** %10, align 4, !dbg !15319
  %54 = call zeroext i1 @should_queue_thread(%struct.k_thread.180* noundef %53) #13, !dbg !15320
  br i1 %54, label %55, label %120, !dbg !15321

55:                                               ; preds = %44
  %56 = load %struct.k_thread.180*, %struct.k_thread.180** %10, align 4, !dbg !15322
  store %struct.k_thread.180* %56, %struct.k_thread.180** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.180** %5, metadata !13238, metadata !DIExpression()) #9, !dbg !15323
  %57 = load %struct.k_thread.180*, %struct.k_thread.180** %5, align 4, !dbg !15325
  store %struct.k_thread.180* %57, %struct.k_thread.180** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.180** %4, metadata !13212, metadata !DIExpression()) #9, !dbg !15326
  %58 = load %struct.k_thread.180*, %struct.k_thread.180** %5, align 4, !dbg !15328
  store %struct._dnode.168* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode.168** %1, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.168** %1, metadata !13246, metadata !DIExpression()) #9, !dbg !15329
  store %struct.k_thread.180* %58, %struct.k_thread.180** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.180** %2, metadata !13253, metadata !DIExpression()) #9, !dbg !15331
  call void @llvm.dbg.declare(metadata %struct.k_thread.180** %3, metadata !13255, metadata !DIExpression()) #9, !dbg !15332
  %59 = load %struct._dnode.168*, %struct._dnode.168** %1, align 4, !dbg !15333
  %60 = call %struct._dnode.168* @sys_dlist_peek_head(%struct._dnode.168* noundef %59) #13, !dbg !15333
  %61 = icmp ne %struct._dnode.168* %60, null, !dbg !15333
  br i1 %61, label %62, label %67, !dbg !15333

62:                                               ; preds = %55
  %63 = load %struct._dnode.168*, %struct._dnode.168** %1, align 4, !dbg !15333
  %64 = call %struct._dnode.168* @sys_dlist_peek_head(%struct._dnode.168* noundef %63) #13, !dbg !15333
  %65 = bitcast %struct._dnode.168* %64 to i8*, !dbg !15333
  %66 = bitcast i8* %65 to %struct.k_thread.180*, !dbg !15333
  br label %68, !dbg !15333

67:                                               ; preds = %55
  br label %68, !dbg !15333

68:                                               ; preds = %67, %62
  %69 = phi %struct.k_thread.180* [ %66, %62 ], [ null, %67 ], !dbg !15333
  store %struct.k_thread.180* %69, %struct.k_thread.180** %3, align 4, !dbg !15333
  br label %70, !dbg !15333

70:                                               ; preds = %111, %68
  %71 = load %struct.k_thread.180*, %struct.k_thread.180** %3, align 4, !dbg !15334
  %72 = icmp ne %struct.k_thread.180* %71, null, !dbg !15334
  br i1 %72, label %73, label %113, !dbg !15333

73:                                               ; preds = %70
  %74 = load %struct.k_thread.180*, %struct.k_thread.180** %2, align 4, !dbg !15335
  %75 = load %struct.k_thread.180*, %struct.k_thread.180** %3, align 4, !dbg !15336
  %76 = call i32 @z_sched_prio_cmp(%struct.k_thread.180* noundef %74, %struct.k_thread.180* noundef %75) #13, !dbg !15337
  %77 = icmp sgt i32 %76, 0, !dbg !15338
  br i1 %77, label %78, label %87, !dbg !15339

78:                                               ; preds = %73
  %79 = load %struct.k_thread.180*, %struct.k_thread.180** %3, align 4, !dbg !15340
  %80 = getelementptr inbounds %struct.k_thread.180, %struct.k_thread.180* %79, i32 0, i32 0, !dbg !15341
  %81 = getelementptr inbounds %struct._thread_base.173, %struct._thread_base.173* %80, i32 0, i32 0, !dbg !15342
  %82 = bitcast %union.anon.169* %81 to %struct._dnode.168*, !dbg !15342
  %83 = load %struct.k_thread.180*, %struct.k_thread.180** %2, align 4, !dbg !15343
  %84 = getelementptr inbounds %struct.k_thread.180, %struct.k_thread.180* %83, i32 0, i32 0, !dbg !15344
  %85 = getelementptr inbounds %struct._thread_base.173, %struct._thread_base.173* %84, i32 0, i32 0, !dbg !15345
  %86 = bitcast %union.anon.169* %85 to %struct._dnode.168*, !dbg !15345
  call void @sys_dlist_insert(%struct._dnode.168* noundef %82, %struct._dnode.168* noundef %86) #13, !dbg !15346
  br label %119, !dbg !15347

87:                                               ; preds = %73
  %88 = load %struct.k_thread.180*, %struct.k_thread.180** %3, align 4, !dbg !15334
  %89 = icmp ne %struct.k_thread.180* %88, null, !dbg !15334
  br i1 %89, label %90, label %110, !dbg !15334

90:                                               ; preds = %87
  %91 = load %struct._dnode.168*, %struct._dnode.168** %1, align 4, !dbg !15334
  %92 = load %struct.k_thread.180*, %struct.k_thread.180** %3, align 4, !dbg !15334
  %93 = getelementptr inbounds %struct.k_thread.180, %struct.k_thread.180* %92, i32 0, i32 0, !dbg !15334
  %94 = getelementptr inbounds %struct._thread_base.173, %struct._thread_base.173* %93, i32 0, i32 0, !dbg !15334
  %95 = bitcast %union.anon.169* %94 to %struct._dnode.168*, !dbg !15334
  %96 = call %struct._dnode.168* @sys_dlist_peek_next(%struct._dnode.168* noundef %91, %struct._dnode.168* noundef %95) #13, !dbg !15334
  %97 = icmp ne %struct._dnode.168* %96, null, !dbg !15334
  br i1 %97, label %98, label %107, !dbg !15334

98:                                               ; preds = %90
  %99 = load %struct._dnode.168*, %struct._dnode.168** %1, align 4, !dbg !15334
  %100 = load %struct.k_thread.180*, %struct.k_thread.180** %3, align 4, !dbg !15334
  %101 = getelementptr inbounds %struct.k_thread.180, %struct.k_thread.180* %100, i32 0, i32 0, !dbg !15334
  %102 = getelementptr inbounds %struct._thread_base.173, %struct._thread_base.173* %101, i32 0, i32 0, !dbg !15334
  %103 = bitcast %union.anon.169* %102 to %struct._dnode.168*, !dbg !15334
  %104 = call %struct._dnode.168* @sys_dlist_peek_next(%struct._dnode.168* noundef %99, %struct._dnode.168* noundef %103) #13, !dbg !15334
  %105 = bitcast %struct._dnode.168* %104 to i8*, !dbg !15334
  %106 = bitcast i8* %105 to %struct.k_thread.180*, !dbg !15334
  br label %108, !dbg !15334

107:                                              ; preds = %90
  br label %108, !dbg !15334

108:                                              ; preds = %107, %98
  %109 = phi %struct.k_thread.180* [ %106, %98 ], [ null, %107 ], !dbg !15334
  br label %111, !dbg !15334

110:                                              ; preds = %87
  br label %111, !dbg !15334

111:                                              ; preds = %110, %108
  %112 = phi %struct.k_thread.180* [ %109, %108 ], [ null, %110 ], !dbg !15334
  store %struct.k_thread.180* %112, %struct.k_thread.180** %3, align 4, !dbg !15334
  br label %70, !dbg !15334, !llvm.loop !15348

113:                                              ; preds = %70
  %114 = load %struct._dnode.168*, %struct._dnode.168** %1, align 4, !dbg !15350
  %115 = load %struct.k_thread.180*, %struct.k_thread.180** %2, align 4, !dbg !15351
  %116 = getelementptr inbounds %struct.k_thread.180, %struct.k_thread.180* %115, i32 0, i32 0, !dbg !15352
  %117 = getelementptr inbounds %struct._thread_base.173, %struct._thread_base.173* %116, i32 0, i32 0, !dbg !15353
  %118 = bitcast %union.anon.169* %117 to %struct._dnode.168*, !dbg !15353
  call void @sys_dlist_append(%struct._dnode.168* noundef %114, %struct._dnode.168* noundef %118) #13, !dbg !15354
  br label %119, !dbg !15355

119:                                              ; preds = %78, %113
  br label %120, !dbg !15356

120:                                              ; preds = %44, %119
  call void @update_cache(i32 noundef 1) #10, !dbg !15357
  %121 = getelementptr inbounds %union.anon.68, %union.anon.68* %17, i32 0, i32 0, !dbg !15358
  %122 = bitcast i32* %121 to [1 x i32]*, !dbg !15358
  %123 = load [1 x i32], [1 x i32]* %122, align 4, !dbg !15358
  %124 = getelementptr inbounds %union.anon.68, %union.anon.68* %12, i32 0, i32 0
  %125 = bitcast i32* %124 to [1 x i32]*
  store [1 x i32] %123, [1 x i32]* %125, align 4
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %13, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %13, metadata !13870, metadata !DIExpression()) #9, !dbg !15359
  call void @llvm.dbg.declare(metadata %union.anon.68* %12, metadata !13876, metadata !DIExpression()) #9, !dbg !15361
  %126 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %13, align 4, !dbg !15362
  store %struct.k_spinlock.13* %126, %struct.k_spinlock.13** %11, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %11, metadata !13879, metadata !DIExpression()) #9, !dbg !15363
  %127 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %11, align 4, !dbg !15365
  %128 = getelementptr inbounds %union.anon.68, %union.anon.68* %12, i32 0, i32 0, !dbg !15366
  %129 = load i32, i32* %128, align 4, !dbg !15366
  %130 = call i32 @z_swap_irqlock(i32 noundef %129) #13, !dbg !15367
  ret void, !dbg !15368
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @z_impl_k_sleep([1 x i64] %0) #1 !dbg !15369 {
  %2 = alloca i32, align 4
  %3 = alloca %union.argument_value, align 8
  %4 = alloca i64, align 8
  %5 = alloca %union.argument_value, align 8
  %6 = alloca i32, align 4
  %7 = getelementptr inbounds %union.argument_value, %union.argument_value* %3, i32 0, i32 0
  %8 = bitcast i64* %7 to [1 x i64]*
  store [1 x i64] %0, [1 x i64]* %8, align 8
  call void @llvm.dbg.declare(metadata %union.argument_value* %3, metadata !15372, metadata !DIExpression()), !dbg !15373
  call void @llvm.dbg.declare(metadata i64* %4, metadata !15374, metadata !DIExpression()), !dbg !15375
  br label %9, !dbg !15376

9:                                                ; preds = %1
  br label %10, !dbg !15377

10:                                               ; preds = %9
  %11 = getelementptr inbounds %union.argument_value, %union.argument_value* %3, i32 0, i32 0, !dbg !15379
  %12 = load i64, i64* %11, align 8, !dbg !15379
  %13 = getelementptr inbounds %union.argument_value, %union.argument_value* %5, i32 0, i32 0, !dbg !15379
  store i64 -1, i64* %13, align 8, !dbg !15379
  %14 = icmp eq i64 %12, -1, !dbg !15379
  br i1 %14, label %15, label %19, !dbg !15381

15:                                               ; preds = %10
  %16 = load %struct.k_thread.180*, %struct.k_thread.180** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15382
  call void @k_thread_suspend(%struct.k_thread.180* noundef %16) #10, !dbg !15384
  br label %17, !dbg !15385

17:                                               ; preds = %15
  br label %18, !dbg !15386

18:                                               ; preds = %17
  store i32 -1, i32* %2, align 4, !dbg !15388
  br label %31, !dbg !15388

19:                                               ; preds = %10
  %20 = getelementptr inbounds %union.argument_value, %union.argument_value* %3, i32 0, i32 0, !dbg !15389
  %21 = load i64, i64* %20, align 8, !dbg !15389
  store i64 %21, i64* %4, align 8, !dbg !15390
  %22 = load i64, i64* %4, align 8, !dbg !15391
  %23 = call i32 @z_tick_sleep(i64 noundef %22) #10, !dbg !15392
  %24 = sext i32 %23 to i64, !dbg !15392
  store i64 %24, i64* %4, align 8, !dbg !15393
  call void @llvm.dbg.declare(metadata i32* %6, metadata !15394, metadata !DIExpression()), !dbg !15395
  %25 = load i64, i64* %4, align 8, !dbg !15396
  %26 = call i64 @k_ticks_to_ms_floor64(i64 noundef %25) #10, !dbg !15397
  %27 = trunc i64 %26 to i32, !dbg !15397
  store i32 %27, i32* %6, align 4, !dbg !15395
  br label %28, !dbg !15398

28:                                               ; preds = %19
  br label %29, !dbg !15399

29:                                               ; preds = %28
  %30 = load i32, i32* %6, align 4, !dbg !15401
  store i32 %30, i32* %2, align 4, !dbg !15402
  br label %31, !dbg !15402

31:                                               ; preds = %29, %18
  %32 = load i32, i32* %2, align 4, !dbg !15403
  ret i32 %32, !dbg !15403
}

; Function Attrs: noinline nounwind optnone
define internal void @k_thread_suspend(%struct.k_thread.180* noundef %0) #1 !dbg !15404 {
  %2 = alloca %struct.k_thread.180*, align 4
  store %struct.k_thread.180* %0, %struct.k_thread.180** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.180** %2, metadata !15407, metadata !DIExpression()), !dbg !15408
  br label %3, !dbg !15409

3:                                                ; preds = %1
  call void asm sideeffect "", "~{memory}"() #9, !dbg !15410, !srcloc !15412
  br label %4, !dbg !15410

4:                                                ; preds = %3
  %5 = load %struct.k_thread.180*, %struct.k_thread.180** %2, align 4, !dbg !15413
  call void @z_impl_k_thread_suspend(%struct.k_thread.180* noundef %5) #10, !dbg !15414
  ret void, !dbg !15415
}

; Function Attrs: noinline nounwind optnone
define internal i32 @z_tick_sleep(i64 noundef %0) #1 !dbg !15416 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca %struct.k_spinlock.13*, align 4
  %5 = alloca %union.anon.68, align 4
  %6 = alloca %struct.k_spinlock.13*, align 4
  %7 = alloca %union.anon.68, align 4
  %8 = alloca %struct.k_spinlock.13*, align 4
  %9 = alloca i32, align 4
  %10 = alloca i64, align 8
  %11 = alloca i32, align 4
  %12 = alloca i8, align 1
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i8*, align 4
  %16 = alloca %union.argument_value, align 8
  %17 = alloca %union.anon.68, align 4
  store i64 %0, i64* %10, align 8
  call void @llvm.dbg.declare(metadata i64* %10, metadata !15419, metadata !DIExpression()), !dbg !15420
  call void @llvm.dbg.declare(metadata i32* %11, metadata !15421, metadata !DIExpression()), !dbg !15422
  br label %18, !dbg !15423

18:                                               ; preds = %1
  br label %19, !dbg !15424

19:                                               ; preds = %18
  %20 = load i64, i64* %10, align 8, !dbg !15428
  %21 = icmp eq i64 %20, 0, !dbg !15430
  br i1 %21, label %22, label %23, !dbg !15431

22:                                               ; preds = %19
  call void @k_yield() #10, !dbg !15432
  store i32 0, i32* %9, align 4, !dbg !15434
  br label %77, !dbg !15434

23:                                               ; preds = %19
  call void @llvm.dbg.declare(metadata %union.argument_value* %16, metadata !15435, metadata !DIExpression()), !dbg !15436
  %24 = getelementptr inbounds %union.argument_value, %union.argument_value* %16, i32 0, i32 0, !dbg !15437
  %25 = load i64, i64* %10, align 8, !dbg !15437
  store i64 %25, i64* %24, align 8, !dbg !15437
  %26 = load i64, i64* %10, align 8, !dbg !15438
  %27 = sub nsw i64 -2, %26, !dbg !15438
  %28 = icmp sle i64 %27, 0, !dbg !15440
  br i1 %28, label %29, label %35, !dbg !15441

29:                                               ; preds = %23
  %30 = load i64, i64* %10, align 8, !dbg !15442
  %31 = call i32 @sys_clock_tick_get_32() #10, !dbg !15444
  %32 = zext i32 %31 to i64, !dbg !15444
  %33 = add nsw i64 %30, %32, !dbg !15445
  %34 = trunc i64 %33 to i32, !dbg !15442
  store i32 %34, i32* %11, align 4, !dbg !15446
  br label %39, !dbg !15447

35:                                               ; preds = %23
  %36 = load i64, i64* %10, align 8, !dbg !15448
  %37 = sub nsw i64 -2, %36, !dbg !15448
  %38 = trunc i64 %37 to i32, !dbg !15448
  store i32 %38, i32* %11, align 4, !dbg !15450
  br label %39

39:                                               ; preds = %35, %29
  call void @llvm.dbg.declare(metadata %union.anon.68* %17, metadata !15451, metadata !DIExpression()), !dbg !15452
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %8, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %8, metadata !12804, metadata !DIExpression()) #9, !dbg !15453
  %40 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %8, align 4, !dbg !15455
  call void @llvm.dbg.declare(metadata %union.anon.68* %7, metadata !12812, metadata !DIExpression()) #9, !dbg !15456
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12814, metadata !DIExpression()) #9, !dbg !15457
  call void @llvm.dbg.declare(metadata i32* %3, metadata !12818, metadata !DIExpression()) #9, !dbg !15459
  %41 = call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #9, !dbg !15460, !srcloc !12821
  %42 = extractvalue { i32, i32 } %41, 0, !dbg !15460
  %43 = extractvalue { i32, i32 } %41, 1, !dbg !15460
  store i32 %42, i32* %2, align 4, !dbg !15460
  store i32 %43, i32* %3, align 4, !dbg !15460
  %44 = load i32, i32* %2, align 4, !dbg !15461
  %45 = getelementptr inbounds %union.anon.68, %union.anon.68* %7, i32 0, i32 0, !dbg !15462
  store i32 %44, i32* %45, align 4, !dbg !15463
  %46 = getelementptr inbounds %union.anon.68, %union.anon.68* %7, i32 0, i32 0, !dbg !15464
  %47 = load i32, i32* %46, align 4, !dbg !15464
  %48 = getelementptr inbounds %union.anon.68, %union.anon.68* %17, i32 0, i32 0, !dbg !15465
  store i32 %47, i32* %48, align 4, !dbg !15465
  %49 = load %struct.k_thread.180*, %struct.k_thread.180** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15466
  store %struct.k_thread.180* %49, %struct.k_thread.180** @pending_current, align 4, !dbg !15467
  %50 = load %struct.k_thread.180*, %struct.k_thread.180** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15468
  call void @unready_thread(%struct.k_thread.180* noundef %50) #10, !dbg !15469
  %51 = load %struct.k_thread.180*, %struct.k_thread.180** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15470
  %52 = getelementptr inbounds %union.argument_value, %union.argument_value* %16, i32 0, i32 0, !dbg !15471
  %53 = bitcast i64* %52 to [1 x i64]*, !dbg !15471
  %54 = load [1 x i64], [1 x i64]* %53, align 8, !dbg !15471
  call void @z_add_thread_timeout.86(%struct.k_thread.180* noundef %51, [1 x i64] %54) #10, !dbg !15471
  %55 = load %struct.k_thread.180*, %struct.k_thread.180** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15472
  call void @z_mark_thread_as_suspended(%struct.k_thread.180* noundef %55) #10, !dbg !15473
  %56 = getelementptr inbounds %union.anon.68, %union.anon.68* %17, i32 0, i32 0, !dbg !15474
  %57 = bitcast i32* %56 to [1 x i32]*, !dbg !15474
  %58 = load [1 x i32], [1 x i32]* %57, align 4, !dbg !15474
  %59 = getelementptr inbounds %union.anon.68, %union.anon.68* %5, i32 0, i32 0
  %60 = bitcast i32* %59 to [1 x i32]*
  store [1 x i32] %58, [1 x i32]* %60, align 4
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %6, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %6, metadata !13870, metadata !DIExpression()) #9, !dbg !15475
  call void @llvm.dbg.declare(metadata %union.anon.68* %5, metadata !13876, metadata !DIExpression()) #9, !dbg !15477
  %61 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %6, align 4, !dbg !15478
  store %struct.k_spinlock.13* %61, %struct.k_spinlock.13** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %4, metadata !13879, metadata !DIExpression()) #9, !dbg !15479
  %62 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %4, align 4, !dbg !15481
  %63 = getelementptr inbounds %union.anon.68, %union.anon.68* %5, i32 0, i32 0, !dbg !15482
  %64 = load i32, i32* %63, align 4, !dbg !15482
  %65 = call i32 @z_swap_irqlock(i32 noundef %64) #13, !dbg !15483
  %66 = load i32, i32* %11, align 4, !dbg !15484
  %67 = zext i32 %66 to i64, !dbg !15485
  %68 = call i32 @sys_clock_tick_get_32() #10, !dbg !15486
  %69 = zext i32 %68 to i64, !dbg !15486
  %70 = sub nsw i64 %67, %69, !dbg !15487
  store i64 %70, i64* %10, align 8, !dbg !15488
  %71 = load i64, i64* %10, align 8, !dbg !15489
  %72 = icmp sgt i64 %71, 0, !dbg !15491
  br i1 %72, label %73, label %76, !dbg !15492

73:                                               ; preds = %39
  %74 = load i64, i64* %10, align 8, !dbg !15493
  %75 = trunc i64 %74 to i32, !dbg !15493
  store i32 %75, i32* %9, align 4, !dbg !15495
  br label %77, !dbg !15495

76:                                               ; preds = %39
  store i32 0, i32* %9, align 4, !dbg !15496
  br label %77, !dbg !15496

77:                                               ; preds = %76, %73, %22
  %78 = load i32, i32* %9, align 4, !dbg !15497
  ret i32 %78, !dbg !15497
}

; Function Attrs: noinline nounwind optnone
define internal i64 @k_ticks_to_ms_floor64(i64 noundef %0) #1 !dbg !15498 {
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i8, align 1
  %7 = alloca i8, align 1
  %8 = alloca i8, align 1
  %9 = alloca i8, align 1
  %10 = alloca i8, align 1
  %11 = alloca i8, align 1
  %12 = alloca i64, align 8
  %13 = alloca i32, align 4
  %14 = alloca i64, align 8
  store i64 %0, i64* %14, align 8
  call void @llvm.dbg.declare(metadata i64* %14, metadata !15499, metadata !DIExpression()), !dbg !15500
  %15 = load i64, i64* %14, align 8, !dbg !15501
  store i64 %15, i64* %3, align 8
  call void @llvm.dbg.declare(metadata i64* %3, metadata !12872, metadata !DIExpression()), !dbg !15502
  store i32 10000, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !12876, metadata !DIExpression()), !dbg !15504
  store i32 1000, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !12878, metadata !DIExpression()), !dbg !15505
  store i8 1, i8* %6, align 1
  call void @llvm.dbg.declare(metadata i8* %6, metadata !12880, metadata !DIExpression()), !dbg !15506
  store i8 0, i8* %7, align 1
  call void @llvm.dbg.declare(metadata i8* %7, metadata !12882, metadata !DIExpression()), !dbg !15507
  store i8 0, i8* %8, align 1
  call void @llvm.dbg.declare(metadata i8* %8, metadata !12884, metadata !DIExpression()), !dbg !15508
  store i8 0, i8* %9, align 1
  call void @llvm.dbg.declare(metadata i8* %9, metadata !12886, metadata !DIExpression()), !dbg !15509
  call void @llvm.dbg.declare(metadata i8* %10, metadata !12888, metadata !DIExpression()), !dbg !15510
  %16 = load i8, i8* %6, align 1, !dbg !15511
  %17 = trunc i8 %16 to i1, !dbg !15511
  br i1 %17, label %18, label %27, !dbg !15512

18:                                               ; preds = %1
  %19 = load i32, i32* %5, align 4, !dbg !15513
  %20 = load i32, i32* %4, align 4, !dbg !15514
  %21 = icmp ugt i32 %19, %20, !dbg !15515
  br i1 %21, label %22, label %27, !dbg !15516

22:                                               ; preds = %18
  %23 = load i32, i32* %5, align 4, !dbg !15517
  %24 = load i32, i32* %4, align 4, !dbg !15518
  %25 = urem i32 %23, %24, !dbg !15519
  %26 = icmp eq i32 %25, 0, !dbg !15520
  br label %27

27:                                               ; preds = %22, %18, %1
  %28 = phi i1 [ false, %18 ], [ false, %1 ], [ %26, %22 ], !dbg !15521
  %29 = zext i1 %28 to i8, !dbg !15510
  store i8 %29, i8* %10, align 1, !dbg !15510
  call void @llvm.dbg.declare(metadata i8* %11, metadata !12901, metadata !DIExpression()), !dbg !15522
  %30 = load i8, i8* %6, align 1, !dbg !15523
  %31 = trunc i8 %30 to i1, !dbg !15523
  br i1 %31, label %32, label %41, !dbg !15524

32:                                               ; preds = %27
  %33 = load i32, i32* %4, align 4, !dbg !15525
  %34 = load i32, i32* %5, align 4, !dbg !15526
  %35 = icmp ugt i32 %33, %34, !dbg !15527
  br i1 %35, label %36, label %41, !dbg !15528

36:                                               ; preds = %32
  %37 = load i32, i32* %4, align 4, !dbg !15529
  %38 = load i32, i32* %5, align 4, !dbg !15530
  %39 = urem i32 %37, %38, !dbg !15531
  %40 = icmp eq i32 %39, 0, !dbg !15532
  br label %41

41:                                               ; preds = %36, %32, %27
  %42 = phi i1 [ false, %32 ], [ false, %27 ], [ %40, %36 ], !dbg !15521
  %43 = zext i1 %42 to i8, !dbg !15522
  store i8 %43, i8* %11, align 1, !dbg !15522
  %44 = load i32, i32* %4, align 4, !dbg !15533
  %45 = load i32, i32* %5, align 4, !dbg !15534
  %46 = icmp eq i32 %44, %45, !dbg !15535
  br i1 %46, label %47, label %58, !dbg !15536

47:                                               ; preds = %41
  %48 = load i8, i8* %7, align 1, !dbg !15537
  %49 = trunc i8 %48 to i1, !dbg !15537
  br i1 %49, label %50, label %54, !dbg !15537

50:                                               ; preds = %47
  %51 = load i64, i64* %3, align 8, !dbg !15538
  %52 = trunc i64 %51 to i32, !dbg !15539
  %53 = zext i32 %52 to i64, !dbg !15540
  br label %56, !dbg !15537

54:                                               ; preds = %47
  %55 = load i64, i64* %3, align 8, !dbg !15541
  br label %56, !dbg !15537

56:                                               ; preds = %54, %50
  %57 = phi i64 [ %53, %50 ], [ %55, %54 ], !dbg !15537
  store i64 %57, i64* %2, align 8, !dbg !15542
  br label %195, !dbg !15542

58:                                               ; preds = %41
  call void @llvm.dbg.declare(metadata i64* %12, metadata !12925, metadata !DIExpression()), !dbg !15543
  store i64 0, i64* %12, align 8, !dbg !15543
  %59 = load i8, i8* %10, align 1, !dbg !15544
  %60 = trunc i8 %59 to i1, !dbg !15544
  br i1 %60, label %86, label %61, !dbg !15545

61:                                               ; preds = %58
  call void @llvm.dbg.declare(metadata i32* %13, metadata !12930, metadata !DIExpression()), !dbg !15546
  %62 = load i8, i8* %11, align 1, !dbg !15547
  %63 = trunc i8 %62 to i1, !dbg !15547
  br i1 %63, label %64, label %68, !dbg !15547

64:                                               ; preds = %61
  %65 = load i32, i32* %4, align 4, !dbg !15548
  %66 = load i32, i32* %5, align 4, !dbg !15549
  %67 = udiv i32 %65, %66, !dbg !15550
  br label %70, !dbg !15547

68:                                               ; preds = %61
  %69 = load i32, i32* %4, align 4, !dbg !15551
  br label %70, !dbg !15547

70:                                               ; preds = %68, %64
  %71 = phi i32 [ %67, %64 ], [ %69, %68 ], !dbg !15547
  store i32 %71, i32* %13, align 4, !dbg !15546
  %72 = load i8, i8* %8, align 1, !dbg !15552
  %73 = trunc i8 %72 to i1, !dbg !15552
  br i1 %73, label %74, label %78, !dbg !15553

74:                                               ; preds = %70
  %75 = load i32, i32* %13, align 4, !dbg !15554
  %76 = sub i32 %75, 1, !dbg !15555
  %77 = zext i32 %76 to i64, !dbg !15554
  store i64 %77, i64* %12, align 8, !dbg !15556
  br label %78, !dbg !15557

78:                                               ; preds = %74, %70
  %79 = load i8, i8* %9, align 1, !dbg !15558
  %80 = trunc i8 %79 to i1, !dbg !15558
  br i1 %80, label %81, label %85, !dbg !15559

81:                                               ; preds = %78
  %82 = load i32, i32* %13, align 4, !dbg !15560
  %83 = udiv i32 %82, 2, !dbg !15561
  %84 = zext i32 %83 to i64, !dbg !15560
  store i64 %84, i64* %12, align 8, !dbg !15562
  br label %85, !dbg !15563

85:                                               ; preds = %81, %78
  br label %86, !dbg !15564

86:                                               ; preds = %85, %58
  %87 = load i8, i8* %11, align 1, !dbg !15565
  %88 = trunc i8 %87 to i1, !dbg !15565
  br i1 %88, label %89, label %114, !dbg !15566

89:                                               ; preds = %86
  %90 = load i64, i64* %12, align 8, !dbg !15567
  %91 = load i64, i64* %3, align 8, !dbg !15568
  %92 = add i64 %91, %90, !dbg !15568
  store i64 %92, i64* %3, align 8, !dbg !15568
  %93 = load i8, i8* %7, align 1, !dbg !15569
  %94 = trunc i8 %93 to i1, !dbg !15569
  br i1 %94, label %95, label %106, !dbg !15570

95:                                               ; preds = %89
  %96 = load i64, i64* %3, align 8, !dbg !15571
  %97 = icmp ult i64 %96, 4294967296, !dbg !15572
  br i1 %97, label %98, label %106, !dbg !15573

98:                                               ; preds = %95
  %99 = load i64, i64* %3, align 8, !dbg !15574
  %100 = trunc i64 %99 to i32, !dbg !15575
  %101 = load i32, i32* %4, align 4, !dbg !15576
  %102 = load i32, i32* %5, align 4, !dbg !15577
  %103 = udiv i32 %101, %102, !dbg !15578
  %104 = udiv i32 %100, %103, !dbg !15579
  %105 = zext i32 %104 to i64, !dbg !15580
  store i64 %105, i64* %2, align 8, !dbg !15581
  br label %195, !dbg !15581

106:                                              ; preds = %95, %89
  %107 = load i64, i64* %3, align 8, !dbg !15582
  %108 = load i32, i32* %4, align 4, !dbg !15583
  %109 = zext i32 %108 to i64, !dbg !15584
  %110 = load i32, i32* %5, align 4, !dbg !15585
  %111 = zext i32 %110 to i64, !dbg !15585
  %112 = udiv i64 %109, %111, !dbg !15586
  %113 = udiv i64 %107, %112, !dbg !15587
  store i64 %113, i64* %2, align 8, !dbg !15588
  br label %195, !dbg !15588

114:                                              ; preds = %86
  %115 = load i8, i8* %10, align 1, !dbg !15589
  %116 = trunc i8 %115 to i1, !dbg !15589
  br i1 %116, label %117, label %136, !dbg !15590

117:                                              ; preds = %114
  %118 = load i8, i8* %7, align 1, !dbg !15591
  %119 = trunc i8 %118 to i1, !dbg !15591
  br i1 %119, label %120, label %128, !dbg !15592

120:                                              ; preds = %117
  %121 = load i64, i64* %3, align 8, !dbg !15593
  %122 = trunc i64 %121 to i32, !dbg !15594
  %123 = load i32, i32* %5, align 4, !dbg !15595
  %124 = load i32, i32* %4, align 4, !dbg !15596
  %125 = udiv i32 %123, %124, !dbg !15597
  %126 = mul i32 %122, %125, !dbg !15598
  %127 = zext i32 %126 to i64, !dbg !15599
  store i64 %127, i64* %2, align 8, !dbg !15600
  br label %195, !dbg !15600

128:                                              ; preds = %117
  %129 = load i64, i64* %3, align 8, !dbg !15601
  %130 = load i32, i32* %5, align 4, !dbg !15602
  %131 = zext i32 %130 to i64, !dbg !15603
  %132 = load i32, i32* %4, align 4, !dbg !15604
  %133 = zext i32 %132 to i64, !dbg !15604
  %134 = udiv i64 %131, %133, !dbg !15605
  %135 = mul i64 %129, %134, !dbg !15606
  store i64 %135, i64* %2, align 8, !dbg !15607
  br label %195, !dbg !15607

136:                                              ; preds = %114
  %137 = load i8, i8* %7, align 1, !dbg !15608
  %138 = trunc i8 %137 to i1, !dbg !15608
  br i1 %138, label %139, label %151, !dbg !15609

139:                                              ; preds = %136
  %140 = load i64, i64* %3, align 8, !dbg !15610
  %141 = load i32, i32* %5, align 4, !dbg !15611
  %142 = zext i32 %141 to i64, !dbg !15611
  %143 = mul i64 %140, %142, !dbg !15612
  %144 = load i64, i64* %12, align 8, !dbg !15613
  %145 = add i64 %143, %144, !dbg !15614
  %146 = load i32, i32* %4, align 4, !dbg !15615
  %147 = zext i32 %146 to i64, !dbg !15615
  %148 = udiv i64 %145, %147, !dbg !15616
  %149 = trunc i64 %148 to i32, !dbg !15617
  %150 = zext i32 %149 to i64, !dbg !15617
  store i64 %150, i64* %2, align 8, !dbg !15618
  br label %195, !dbg !15618

151:                                              ; preds = %136
  %152 = load i8, i8* %6, align 1, !dbg !15619
  %153 = trunc i8 %152 to i1, !dbg !15619
  br i1 %153, label %154, label %174, !dbg !15620

154:                                              ; preds = %151
  %155 = load i32, i32* %4, align 4, !dbg !15621
  %156 = zext i32 %155 to i64, !dbg !15621
  %157 = mul i64 31536000, %156, !dbg !15621
  %158 = add i64 %157, 4294967294, !dbg !15621
  %159 = udiv i64 %158, 4294967295, !dbg !15621
  %160 = load i32, i32* %5, align 4, !dbg !15621
  %161 = zext i32 %160 to i64, !dbg !15621
  %162 = mul i64 %159, %161, !dbg !15621
  %163 = icmp ule i64 %162, 4294967295, !dbg !15621
  br i1 %163, label %164, label %174, !dbg !15622

164:                                              ; preds = %154
  %165 = load i64, i64* %3, align 8, !dbg !15623
  %166 = load i32, i32* %5, align 4, !dbg !15624
  %167 = zext i32 %166 to i64, !dbg !15624
  %168 = mul i64 %165, %167, !dbg !15625
  %169 = load i64, i64* %12, align 8, !dbg !15626
  %170 = add i64 %168, %169, !dbg !15627
  %171 = load i32, i32* %4, align 4, !dbg !15628
  %172 = zext i32 %171 to i64, !dbg !15628
  %173 = udiv i64 %170, %172, !dbg !15629
  store i64 %173, i64* %2, align 8, !dbg !15630
  br label %195, !dbg !15630

174:                                              ; preds = %154, %151
  %175 = load i64, i64* %3, align 8, !dbg !15631
  %176 = load i32, i32* %4, align 4, !dbg !15632
  %177 = zext i32 %176 to i64, !dbg !15632
  %178 = udiv i64 %175, %177, !dbg !15633
  %179 = load i32, i32* %5, align 4, !dbg !15634
  %180 = zext i32 %179 to i64, !dbg !15634
  %181 = mul i64 %178, %180, !dbg !15635
  %182 = load i64, i64* %3, align 8, !dbg !15636
  %183 = load i32, i32* %4, align 4, !dbg !15637
  %184 = zext i32 %183 to i64, !dbg !15637
  %185 = urem i64 %182, %184, !dbg !15638
  %186 = load i32, i32* %5, align 4, !dbg !15639
  %187 = zext i32 %186 to i64, !dbg !15639
  %188 = mul i64 %185, %187, !dbg !15640
  %189 = load i64, i64* %12, align 8, !dbg !15641
  %190 = add i64 %188, %189, !dbg !15642
  %191 = load i32, i32* %4, align 4, !dbg !15643
  %192 = zext i32 %191 to i64, !dbg !15643
  %193 = udiv i64 %190, %192, !dbg !15644
  %194 = add i64 %181, %193, !dbg !15645
  store i64 %194, i64* %2, align 8, !dbg !15646
  br label %195, !dbg !15646

195:                                              ; preds = %56, %98, %106, %120, %128, %139, %164, %174
  %196 = load i64, i64* %2, align 8, !dbg !15647
  ret i64 %196, !dbg !15648
}

; Function Attrs: noinline nounwind optnone
define internal void @k_yield() #1 !dbg !15649 {
  br label %1, !dbg !15650

1:                                                ; preds = %0
  call void asm sideeffect "", "~{memory}"() #9, !dbg !15651, !srcloc !15653
  br label %2, !dbg !15651

2:                                                ; preds = %1
  call void @z_impl_k_yield() #10, !dbg !15654
  ret void, !dbg !15655
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @z_impl_k_usleep(i32 noundef %0) #1 !dbg !15656 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !15659, metadata !DIExpression()), !dbg !15660
  call void @llvm.dbg.declare(metadata i32* %3, metadata !15661, metadata !DIExpression()), !dbg !15662
  br label %4, !dbg !15663

4:                                                ; preds = %1
  br label %5, !dbg !15664

5:                                                ; preds = %4
  %6 = load i32, i32* %2, align 4, !dbg !15666
  %7 = sext i32 %6 to i64, !dbg !15666
  %8 = call i64 @k_us_to_ticks_ceil64(i64 noundef %7) #10, !dbg !15667
  %9 = trunc i64 %8 to i32, !dbg !15667
  store i32 %9, i32* %3, align 4, !dbg !15668
  %10 = load i32, i32* %3, align 4, !dbg !15669
  %11 = sext i32 %10 to i64, !dbg !15669
  %12 = call i32 @z_tick_sleep(i64 noundef %11) #10, !dbg !15670
  store i32 %12, i32* %3, align 4, !dbg !15671
  br label %13, !dbg !15672

13:                                               ; preds = %5
  br label %14, !dbg !15673

14:                                               ; preds = %13
  %15 = load i32, i32* %3, align 4, !dbg !15675
  %16 = sext i32 %15 to i64, !dbg !15675
  %17 = call i64 @k_ticks_to_us_floor64(i64 noundef %16) #10, !dbg !15676
  %18 = trunc i64 %17 to i32, !dbg !15676
  ret i32 %18, !dbg !15677
}

; Function Attrs: noinline nounwind optnone
define internal i64 @k_us_to_ticks_ceil64(i64 noundef %0) #1 !dbg !15678 {
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i8, align 1
  %7 = alloca i8, align 1
  %8 = alloca i8, align 1
  %9 = alloca i8, align 1
  %10 = alloca i8, align 1
  %11 = alloca i8, align 1
  %12 = alloca i64, align 8
  %13 = alloca i32, align 4
  %14 = alloca i64, align 8
  store i64 %0, i64* %14, align 8
  call void @llvm.dbg.declare(metadata i64* %14, metadata !15679, metadata !DIExpression()), !dbg !15680
  %15 = load i64, i64* %14, align 8, !dbg !15681
  store i64 %15, i64* %3, align 8
  call void @llvm.dbg.declare(metadata i64* %3, metadata !12872, metadata !DIExpression()), !dbg !15682
  store i32 1000000, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !12876, metadata !DIExpression()), !dbg !15684
  store i32 10000, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !12878, metadata !DIExpression()), !dbg !15685
  store i8 1, i8* %6, align 1
  call void @llvm.dbg.declare(metadata i8* %6, metadata !12880, metadata !DIExpression()), !dbg !15686
  store i8 0, i8* %7, align 1
  call void @llvm.dbg.declare(metadata i8* %7, metadata !12882, metadata !DIExpression()), !dbg !15687
  store i8 1, i8* %8, align 1
  call void @llvm.dbg.declare(metadata i8* %8, metadata !12884, metadata !DIExpression()), !dbg !15688
  store i8 0, i8* %9, align 1
  call void @llvm.dbg.declare(metadata i8* %9, metadata !12886, metadata !DIExpression()), !dbg !15689
  call void @llvm.dbg.declare(metadata i8* %10, metadata !12888, metadata !DIExpression()), !dbg !15690
  %16 = load i8, i8* %6, align 1, !dbg !15691
  %17 = trunc i8 %16 to i1, !dbg !15691
  br i1 %17, label %18, label %27, !dbg !15692

18:                                               ; preds = %1
  %19 = load i32, i32* %5, align 4, !dbg !15693
  %20 = load i32, i32* %4, align 4, !dbg !15694
  %21 = icmp ugt i32 %19, %20, !dbg !15695
  br i1 %21, label %22, label %27, !dbg !15696

22:                                               ; preds = %18
  %23 = load i32, i32* %5, align 4, !dbg !15697
  %24 = load i32, i32* %4, align 4, !dbg !15698
  %25 = urem i32 %23, %24, !dbg !15699
  %26 = icmp eq i32 %25, 0, !dbg !15700
  br label %27

27:                                               ; preds = %22, %18, %1
  %28 = phi i1 [ false, %18 ], [ false, %1 ], [ %26, %22 ], !dbg !15701
  %29 = zext i1 %28 to i8, !dbg !15690
  store i8 %29, i8* %10, align 1, !dbg !15690
  call void @llvm.dbg.declare(metadata i8* %11, metadata !12901, metadata !DIExpression()), !dbg !15702
  %30 = load i8, i8* %6, align 1, !dbg !15703
  %31 = trunc i8 %30 to i1, !dbg !15703
  br i1 %31, label %32, label %41, !dbg !15704

32:                                               ; preds = %27
  %33 = load i32, i32* %4, align 4, !dbg !15705
  %34 = load i32, i32* %5, align 4, !dbg !15706
  %35 = icmp ugt i32 %33, %34, !dbg !15707
  br i1 %35, label %36, label %41, !dbg !15708

36:                                               ; preds = %32
  %37 = load i32, i32* %4, align 4, !dbg !15709
  %38 = load i32, i32* %5, align 4, !dbg !15710
  %39 = urem i32 %37, %38, !dbg !15711
  %40 = icmp eq i32 %39, 0, !dbg !15712
  br label %41

41:                                               ; preds = %36, %32, %27
  %42 = phi i1 [ false, %32 ], [ false, %27 ], [ %40, %36 ], !dbg !15701
  %43 = zext i1 %42 to i8, !dbg !15702
  store i8 %43, i8* %11, align 1, !dbg !15702
  %44 = load i32, i32* %4, align 4, !dbg !15713
  %45 = load i32, i32* %5, align 4, !dbg !15714
  %46 = icmp eq i32 %44, %45, !dbg !15715
  br i1 %46, label %47, label %58, !dbg !15716

47:                                               ; preds = %41
  %48 = load i8, i8* %7, align 1, !dbg !15717
  %49 = trunc i8 %48 to i1, !dbg !15717
  br i1 %49, label %50, label %54, !dbg !15717

50:                                               ; preds = %47
  %51 = load i64, i64* %3, align 8, !dbg !15718
  %52 = trunc i64 %51 to i32, !dbg !15719
  %53 = zext i32 %52 to i64, !dbg !15720
  br label %56, !dbg !15717

54:                                               ; preds = %47
  %55 = load i64, i64* %3, align 8, !dbg !15721
  br label %56, !dbg !15717

56:                                               ; preds = %54, %50
  %57 = phi i64 [ %53, %50 ], [ %55, %54 ], !dbg !15717
  store i64 %57, i64* %2, align 8, !dbg !15722
  br label %195, !dbg !15722

58:                                               ; preds = %41
  call void @llvm.dbg.declare(metadata i64* %12, metadata !12925, metadata !DIExpression()), !dbg !15723
  store i64 0, i64* %12, align 8, !dbg !15723
  %59 = load i8, i8* %10, align 1, !dbg !15724
  %60 = trunc i8 %59 to i1, !dbg !15724
  br i1 %60, label %86, label %61, !dbg !15725

61:                                               ; preds = %58
  call void @llvm.dbg.declare(metadata i32* %13, metadata !12930, metadata !DIExpression()), !dbg !15726
  %62 = load i8, i8* %11, align 1, !dbg !15727
  %63 = trunc i8 %62 to i1, !dbg !15727
  br i1 %63, label %64, label %68, !dbg !15727

64:                                               ; preds = %61
  %65 = load i32, i32* %4, align 4, !dbg !15728
  %66 = load i32, i32* %5, align 4, !dbg !15729
  %67 = udiv i32 %65, %66, !dbg !15730
  br label %70, !dbg !15727

68:                                               ; preds = %61
  %69 = load i32, i32* %4, align 4, !dbg !15731
  br label %70, !dbg !15727

70:                                               ; preds = %68, %64
  %71 = phi i32 [ %67, %64 ], [ %69, %68 ], !dbg !15727
  store i32 %71, i32* %13, align 4, !dbg !15726
  %72 = load i8, i8* %8, align 1, !dbg !15732
  %73 = trunc i8 %72 to i1, !dbg !15732
  br i1 %73, label %74, label %78, !dbg !15733

74:                                               ; preds = %70
  %75 = load i32, i32* %13, align 4, !dbg !15734
  %76 = sub i32 %75, 1, !dbg !15735
  %77 = zext i32 %76 to i64, !dbg !15734
  store i64 %77, i64* %12, align 8, !dbg !15736
  br label %78, !dbg !15737

78:                                               ; preds = %74, %70
  %79 = load i8, i8* %9, align 1, !dbg !15738
  %80 = trunc i8 %79 to i1, !dbg !15738
  br i1 %80, label %81, label %85, !dbg !15739

81:                                               ; preds = %78
  %82 = load i32, i32* %13, align 4, !dbg !15740
  %83 = udiv i32 %82, 2, !dbg !15741
  %84 = zext i32 %83 to i64, !dbg !15740
  store i64 %84, i64* %12, align 8, !dbg !15742
  br label %85, !dbg !15743

85:                                               ; preds = %81, %78
  br label %86, !dbg !15744

86:                                               ; preds = %85, %58
  %87 = load i8, i8* %11, align 1, !dbg !15745
  %88 = trunc i8 %87 to i1, !dbg !15745
  br i1 %88, label %89, label %114, !dbg !15746

89:                                               ; preds = %86
  %90 = load i64, i64* %12, align 8, !dbg !15747
  %91 = load i64, i64* %3, align 8, !dbg !15748
  %92 = add i64 %91, %90, !dbg !15748
  store i64 %92, i64* %3, align 8, !dbg !15748
  %93 = load i8, i8* %7, align 1, !dbg !15749
  %94 = trunc i8 %93 to i1, !dbg !15749
  br i1 %94, label %95, label %106, !dbg !15750

95:                                               ; preds = %89
  %96 = load i64, i64* %3, align 8, !dbg !15751
  %97 = icmp ult i64 %96, 4294967296, !dbg !15752
  br i1 %97, label %98, label %106, !dbg !15753

98:                                               ; preds = %95
  %99 = load i64, i64* %3, align 8, !dbg !15754
  %100 = trunc i64 %99 to i32, !dbg !15755
  %101 = load i32, i32* %4, align 4, !dbg !15756
  %102 = load i32, i32* %5, align 4, !dbg !15757
  %103 = udiv i32 %101, %102, !dbg !15758
  %104 = udiv i32 %100, %103, !dbg !15759
  %105 = zext i32 %104 to i64, !dbg !15760
  store i64 %105, i64* %2, align 8, !dbg !15761
  br label %195, !dbg !15761

106:                                              ; preds = %95, %89
  %107 = load i64, i64* %3, align 8, !dbg !15762
  %108 = load i32, i32* %4, align 4, !dbg !15763
  %109 = zext i32 %108 to i64, !dbg !15764
  %110 = load i32, i32* %5, align 4, !dbg !15765
  %111 = zext i32 %110 to i64, !dbg !15765
  %112 = udiv i64 %109, %111, !dbg !15766
  %113 = udiv i64 %107, %112, !dbg !15767
  store i64 %113, i64* %2, align 8, !dbg !15768
  br label %195, !dbg !15768

114:                                              ; preds = %86
  %115 = load i8, i8* %10, align 1, !dbg !15769
  %116 = trunc i8 %115 to i1, !dbg !15769
  br i1 %116, label %117, label %136, !dbg !15770

117:                                              ; preds = %114
  %118 = load i8, i8* %7, align 1, !dbg !15771
  %119 = trunc i8 %118 to i1, !dbg !15771
  br i1 %119, label %120, label %128, !dbg !15772

120:                                              ; preds = %117
  %121 = load i64, i64* %3, align 8, !dbg !15773
  %122 = trunc i64 %121 to i32, !dbg !15774
  %123 = load i32, i32* %5, align 4, !dbg !15775
  %124 = load i32, i32* %4, align 4, !dbg !15776
  %125 = udiv i32 %123, %124, !dbg !15777
  %126 = mul i32 %122, %125, !dbg !15778
  %127 = zext i32 %126 to i64, !dbg !15779
  store i64 %127, i64* %2, align 8, !dbg !15780
  br label %195, !dbg !15780

128:                                              ; preds = %117
  %129 = load i64, i64* %3, align 8, !dbg !15781
  %130 = load i32, i32* %5, align 4, !dbg !15782
  %131 = zext i32 %130 to i64, !dbg !15783
  %132 = load i32, i32* %4, align 4, !dbg !15784
  %133 = zext i32 %132 to i64, !dbg !15784
  %134 = udiv i64 %131, %133, !dbg !15785
  %135 = mul i64 %129, %134, !dbg !15786
  store i64 %135, i64* %2, align 8, !dbg !15787
  br label %195, !dbg !15787

136:                                              ; preds = %114
  %137 = load i8, i8* %7, align 1, !dbg !15788
  %138 = trunc i8 %137 to i1, !dbg !15788
  br i1 %138, label %139, label %151, !dbg !15789

139:                                              ; preds = %136
  %140 = load i64, i64* %3, align 8, !dbg !15790
  %141 = load i32, i32* %5, align 4, !dbg !15791
  %142 = zext i32 %141 to i64, !dbg !15791
  %143 = mul i64 %140, %142, !dbg !15792
  %144 = load i64, i64* %12, align 8, !dbg !15793
  %145 = add i64 %143, %144, !dbg !15794
  %146 = load i32, i32* %4, align 4, !dbg !15795
  %147 = zext i32 %146 to i64, !dbg !15795
  %148 = udiv i64 %145, %147, !dbg !15796
  %149 = trunc i64 %148 to i32, !dbg !15797
  %150 = zext i32 %149 to i64, !dbg !15797
  store i64 %150, i64* %2, align 8, !dbg !15798
  br label %195, !dbg !15798

151:                                              ; preds = %136
  %152 = load i8, i8* %6, align 1, !dbg !15799
  %153 = trunc i8 %152 to i1, !dbg !15799
  br i1 %153, label %154, label %174, !dbg !15800

154:                                              ; preds = %151
  %155 = load i32, i32* %4, align 4, !dbg !15801
  %156 = zext i32 %155 to i64, !dbg !15801
  %157 = mul i64 31536000, %156, !dbg !15801
  %158 = add i64 %157, 4294967294, !dbg !15801
  %159 = udiv i64 %158, 4294967295, !dbg !15801
  %160 = load i32, i32* %5, align 4, !dbg !15801
  %161 = zext i32 %160 to i64, !dbg !15801
  %162 = mul i64 %159, %161, !dbg !15801
  %163 = icmp ule i64 %162, 4294967295, !dbg !15801
  br i1 %163, label %164, label %174, !dbg !15802

164:                                              ; preds = %154
  %165 = load i64, i64* %3, align 8, !dbg !15803
  %166 = load i32, i32* %5, align 4, !dbg !15804
  %167 = zext i32 %166 to i64, !dbg !15804
  %168 = mul i64 %165, %167, !dbg !15805
  %169 = load i64, i64* %12, align 8, !dbg !15806
  %170 = add i64 %168, %169, !dbg !15807
  %171 = load i32, i32* %4, align 4, !dbg !15808
  %172 = zext i32 %171 to i64, !dbg !15808
  %173 = udiv i64 %170, %172, !dbg !15809
  store i64 %173, i64* %2, align 8, !dbg !15810
  br label %195, !dbg !15810

174:                                              ; preds = %154, %151
  %175 = load i64, i64* %3, align 8, !dbg !15811
  %176 = load i32, i32* %4, align 4, !dbg !15812
  %177 = zext i32 %176 to i64, !dbg !15812
  %178 = udiv i64 %175, %177, !dbg !15813
  %179 = load i32, i32* %5, align 4, !dbg !15814
  %180 = zext i32 %179 to i64, !dbg !15814
  %181 = mul i64 %178, %180, !dbg !15815
  %182 = load i64, i64* %3, align 8, !dbg !15816
  %183 = load i32, i32* %4, align 4, !dbg !15817
  %184 = zext i32 %183 to i64, !dbg !15817
  %185 = urem i64 %182, %184, !dbg !15818
  %186 = load i32, i32* %5, align 4, !dbg !15819
  %187 = zext i32 %186 to i64, !dbg !15819
  %188 = mul i64 %185, %187, !dbg !15820
  %189 = load i64, i64* %12, align 8, !dbg !15821
  %190 = add i64 %188, %189, !dbg !15822
  %191 = load i32, i32* %4, align 4, !dbg !15823
  %192 = zext i32 %191 to i64, !dbg !15823
  %193 = udiv i64 %190, %192, !dbg !15824
  %194 = add i64 %181, %193, !dbg !15825
  store i64 %194, i64* %2, align 8, !dbg !15826
  br label %195, !dbg !15826

195:                                              ; preds = %56, %98, %106, %120, %128, %139, %164, %174
  %196 = load i64, i64* %2, align 8, !dbg !15827
  ret i64 %196, !dbg !15828
}

; Function Attrs: noinline nounwind optnone
define internal i64 @k_ticks_to_us_floor64(i64 noundef %0) #1 !dbg !15829 {
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i8, align 1
  %7 = alloca i8, align 1
  %8 = alloca i8, align 1
  %9 = alloca i8, align 1
  %10 = alloca i8, align 1
  %11 = alloca i8, align 1
  %12 = alloca i64, align 8
  %13 = alloca i32, align 4
  %14 = alloca i64, align 8
  store i64 %0, i64* %14, align 8
  call void @llvm.dbg.declare(metadata i64* %14, metadata !15830, metadata !DIExpression()), !dbg !15831
  %15 = load i64, i64* %14, align 8, !dbg !15832
  store i64 %15, i64* %3, align 8
  call void @llvm.dbg.declare(metadata i64* %3, metadata !12872, metadata !DIExpression()), !dbg !15833
  store i32 10000, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !12876, metadata !DIExpression()), !dbg !15835
  store i32 1000000, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !12878, metadata !DIExpression()), !dbg !15836
  store i8 1, i8* %6, align 1
  call void @llvm.dbg.declare(metadata i8* %6, metadata !12880, metadata !DIExpression()), !dbg !15837
  store i8 0, i8* %7, align 1
  call void @llvm.dbg.declare(metadata i8* %7, metadata !12882, metadata !DIExpression()), !dbg !15838
  store i8 0, i8* %8, align 1
  call void @llvm.dbg.declare(metadata i8* %8, metadata !12884, metadata !DIExpression()), !dbg !15839
  store i8 0, i8* %9, align 1
  call void @llvm.dbg.declare(metadata i8* %9, metadata !12886, metadata !DIExpression()), !dbg !15840
  call void @llvm.dbg.declare(metadata i8* %10, metadata !12888, metadata !DIExpression()), !dbg !15841
  %16 = load i8, i8* %6, align 1, !dbg !15842
  %17 = trunc i8 %16 to i1, !dbg !15842
  br i1 %17, label %18, label %27, !dbg !15843

18:                                               ; preds = %1
  %19 = load i32, i32* %5, align 4, !dbg !15844
  %20 = load i32, i32* %4, align 4, !dbg !15845
  %21 = icmp ugt i32 %19, %20, !dbg !15846
  br i1 %21, label %22, label %27, !dbg !15847

22:                                               ; preds = %18
  %23 = load i32, i32* %5, align 4, !dbg !15848
  %24 = load i32, i32* %4, align 4, !dbg !15849
  %25 = urem i32 %23, %24, !dbg !15850
  %26 = icmp eq i32 %25, 0, !dbg !15851
  br label %27

27:                                               ; preds = %22, %18, %1
  %28 = phi i1 [ false, %18 ], [ false, %1 ], [ %26, %22 ], !dbg !15852
  %29 = zext i1 %28 to i8, !dbg !15841
  store i8 %29, i8* %10, align 1, !dbg !15841
  call void @llvm.dbg.declare(metadata i8* %11, metadata !12901, metadata !DIExpression()), !dbg !15853
  %30 = load i8, i8* %6, align 1, !dbg !15854
  %31 = trunc i8 %30 to i1, !dbg !15854
  br i1 %31, label %32, label %41, !dbg !15855

32:                                               ; preds = %27
  %33 = load i32, i32* %4, align 4, !dbg !15856
  %34 = load i32, i32* %5, align 4, !dbg !15857
  %35 = icmp ugt i32 %33, %34, !dbg !15858
  br i1 %35, label %36, label %41, !dbg !15859

36:                                               ; preds = %32
  %37 = load i32, i32* %4, align 4, !dbg !15860
  %38 = load i32, i32* %5, align 4, !dbg !15861
  %39 = urem i32 %37, %38, !dbg !15862
  %40 = icmp eq i32 %39, 0, !dbg !15863
  br label %41

41:                                               ; preds = %36, %32, %27
  %42 = phi i1 [ false, %32 ], [ false, %27 ], [ %40, %36 ], !dbg !15852
  %43 = zext i1 %42 to i8, !dbg !15853
  store i8 %43, i8* %11, align 1, !dbg !15853
  %44 = load i32, i32* %4, align 4, !dbg !15864
  %45 = load i32, i32* %5, align 4, !dbg !15865
  %46 = icmp eq i32 %44, %45, !dbg !15866
  br i1 %46, label %47, label %58, !dbg !15867

47:                                               ; preds = %41
  %48 = load i8, i8* %7, align 1, !dbg !15868
  %49 = trunc i8 %48 to i1, !dbg !15868
  br i1 %49, label %50, label %54, !dbg !15868

50:                                               ; preds = %47
  %51 = load i64, i64* %3, align 8, !dbg !15869
  %52 = trunc i64 %51 to i32, !dbg !15870
  %53 = zext i32 %52 to i64, !dbg !15871
  br label %56, !dbg !15868

54:                                               ; preds = %47
  %55 = load i64, i64* %3, align 8, !dbg !15872
  br label %56, !dbg !15868

56:                                               ; preds = %54, %50
  %57 = phi i64 [ %53, %50 ], [ %55, %54 ], !dbg !15868
  store i64 %57, i64* %2, align 8, !dbg !15873
  br label %195, !dbg !15873

58:                                               ; preds = %41
  call void @llvm.dbg.declare(metadata i64* %12, metadata !12925, metadata !DIExpression()), !dbg !15874
  store i64 0, i64* %12, align 8, !dbg !15874
  %59 = load i8, i8* %10, align 1, !dbg !15875
  %60 = trunc i8 %59 to i1, !dbg !15875
  br i1 %60, label %86, label %61, !dbg !15876

61:                                               ; preds = %58
  call void @llvm.dbg.declare(metadata i32* %13, metadata !12930, metadata !DIExpression()), !dbg !15877
  %62 = load i8, i8* %11, align 1, !dbg !15878
  %63 = trunc i8 %62 to i1, !dbg !15878
  br i1 %63, label %64, label %68, !dbg !15878

64:                                               ; preds = %61
  %65 = load i32, i32* %4, align 4, !dbg !15879
  %66 = load i32, i32* %5, align 4, !dbg !15880
  %67 = udiv i32 %65, %66, !dbg !15881
  br label %70, !dbg !15878

68:                                               ; preds = %61
  %69 = load i32, i32* %4, align 4, !dbg !15882
  br label %70, !dbg !15878

70:                                               ; preds = %68, %64
  %71 = phi i32 [ %67, %64 ], [ %69, %68 ], !dbg !15878
  store i32 %71, i32* %13, align 4, !dbg !15877
  %72 = load i8, i8* %8, align 1, !dbg !15883
  %73 = trunc i8 %72 to i1, !dbg !15883
  br i1 %73, label %74, label %78, !dbg !15884

74:                                               ; preds = %70
  %75 = load i32, i32* %13, align 4, !dbg !15885
  %76 = sub i32 %75, 1, !dbg !15886
  %77 = zext i32 %76 to i64, !dbg !15885
  store i64 %77, i64* %12, align 8, !dbg !15887
  br label %78, !dbg !15888

78:                                               ; preds = %74, %70
  %79 = load i8, i8* %9, align 1, !dbg !15889
  %80 = trunc i8 %79 to i1, !dbg !15889
  br i1 %80, label %81, label %85, !dbg !15890

81:                                               ; preds = %78
  %82 = load i32, i32* %13, align 4, !dbg !15891
  %83 = udiv i32 %82, 2, !dbg !15892
  %84 = zext i32 %83 to i64, !dbg !15891
  store i64 %84, i64* %12, align 8, !dbg !15893
  br label %85, !dbg !15894

85:                                               ; preds = %81, %78
  br label %86, !dbg !15895

86:                                               ; preds = %85, %58
  %87 = load i8, i8* %11, align 1, !dbg !15896
  %88 = trunc i8 %87 to i1, !dbg !15896
  br i1 %88, label %89, label %114, !dbg !15897

89:                                               ; preds = %86
  %90 = load i64, i64* %12, align 8, !dbg !15898
  %91 = load i64, i64* %3, align 8, !dbg !15899
  %92 = add i64 %91, %90, !dbg !15899
  store i64 %92, i64* %3, align 8, !dbg !15899
  %93 = load i8, i8* %7, align 1, !dbg !15900
  %94 = trunc i8 %93 to i1, !dbg !15900
  br i1 %94, label %95, label %106, !dbg !15901

95:                                               ; preds = %89
  %96 = load i64, i64* %3, align 8, !dbg !15902
  %97 = icmp ult i64 %96, 4294967296, !dbg !15903
  br i1 %97, label %98, label %106, !dbg !15904

98:                                               ; preds = %95
  %99 = load i64, i64* %3, align 8, !dbg !15905
  %100 = trunc i64 %99 to i32, !dbg !15906
  %101 = load i32, i32* %4, align 4, !dbg !15907
  %102 = load i32, i32* %5, align 4, !dbg !15908
  %103 = udiv i32 %101, %102, !dbg !15909
  %104 = udiv i32 %100, %103, !dbg !15910
  %105 = zext i32 %104 to i64, !dbg !15911
  store i64 %105, i64* %2, align 8, !dbg !15912
  br label %195, !dbg !15912

106:                                              ; preds = %95, %89
  %107 = load i64, i64* %3, align 8, !dbg !15913
  %108 = load i32, i32* %4, align 4, !dbg !15914
  %109 = zext i32 %108 to i64, !dbg !15915
  %110 = load i32, i32* %5, align 4, !dbg !15916
  %111 = zext i32 %110 to i64, !dbg !15916
  %112 = udiv i64 %109, %111, !dbg !15917
  %113 = udiv i64 %107, %112, !dbg !15918
  store i64 %113, i64* %2, align 8, !dbg !15919
  br label %195, !dbg !15919

114:                                              ; preds = %86
  %115 = load i8, i8* %10, align 1, !dbg !15920
  %116 = trunc i8 %115 to i1, !dbg !15920
  br i1 %116, label %117, label %136, !dbg !15921

117:                                              ; preds = %114
  %118 = load i8, i8* %7, align 1, !dbg !15922
  %119 = trunc i8 %118 to i1, !dbg !15922
  br i1 %119, label %120, label %128, !dbg !15923

120:                                              ; preds = %117
  %121 = load i64, i64* %3, align 8, !dbg !15924
  %122 = trunc i64 %121 to i32, !dbg !15925
  %123 = load i32, i32* %5, align 4, !dbg !15926
  %124 = load i32, i32* %4, align 4, !dbg !15927
  %125 = udiv i32 %123, %124, !dbg !15928
  %126 = mul i32 %122, %125, !dbg !15929
  %127 = zext i32 %126 to i64, !dbg !15930
  store i64 %127, i64* %2, align 8, !dbg !15931
  br label %195, !dbg !15931

128:                                              ; preds = %117
  %129 = load i64, i64* %3, align 8, !dbg !15932
  %130 = load i32, i32* %5, align 4, !dbg !15933
  %131 = zext i32 %130 to i64, !dbg !15934
  %132 = load i32, i32* %4, align 4, !dbg !15935
  %133 = zext i32 %132 to i64, !dbg !15935
  %134 = udiv i64 %131, %133, !dbg !15936
  %135 = mul i64 %129, %134, !dbg !15937
  store i64 %135, i64* %2, align 8, !dbg !15938
  br label %195, !dbg !15938

136:                                              ; preds = %114
  %137 = load i8, i8* %7, align 1, !dbg !15939
  %138 = trunc i8 %137 to i1, !dbg !15939
  br i1 %138, label %139, label %151, !dbg !15940

139:                                              ; preds = %136
  %140 = load i64, i64* %3, align 8, !dbg !15941
  %141 = load i32, i32* %5, align 4, !dbg !15942
  %142 = zext i32 %141 to i64, !dbg !15942
  %143 = mul i64 %140, %142, !dbg !15943
  %144 = load i64, i64* %12, align 8, !dbg !15944
  %145 = add i64 %143, %144, !dbg !15945
  %146 = load i32, i32* %4, align 4, !dbg !15946
  %147 = zext i32 %146 to i64, !dbg !15946
  %148 = udiv i64 %145, %147, !dbg !15947
  %149 = trunc i64 %148 to i32, !dbg !15948
  %150 = zext i32 %149 to i64, !dbg !15948
  store i64 %150, i64* %2, align 8, !dbg !15949
  br label %195, !dbg !15949

151:                                              ; preds = %136
  %152 = load i8, i8* %6, align 1, !dbg !15950
  %153 = trunc i8 %152 to i1, !dbg !15950
  br i1 %153, label %154, label %174, !dbg !15951

154:                                              ; preds = %151
  %155 = load i32, i32* %4, align 4, !dbg !15952
  %156 = zext i32 %155 to i64, !dbg !15952
  %157 = mul i64 31536000, %156, !dbg !15952
  %158 = add i64 %157, 4294967294, !dbg !15952
  %159 = udiv i64 %158, 4294967295, !dbg !15952
  %160 = load i32, i32* %5, align 4, !dbg !15952
  %161 = zext i32 %160 to i64, !dbg !15952
  %162 = mul i64 %159, %161, !dbg !15952
  %163 = icmp ule i64 %162, 4294967295, !dbg !15952
  br i1 %163, label %164, label %174, !dbg !15953

164:                                              ; preds = %154
  %165 = load i64, i64* %3, align 8, !dbg !15954
  %166 = load i32, i32* %5, align 4, !dbg !15955
  %167 = zext i32 %166 to i64, !dbg !15955
  %168 = mul i64 %165, %167, !dbg !15956
  %169 = load i64, i64* %12, align 8, !dbg !15957
  %170 = add i64 %168, %169, !dbg !15958
  %171 = load i32, i32* %4, align 4, !dbg !15959
  %172 = zext i32 %171 to i64, !dbg !15959
  %173 = udiv i64 %170, %172, !dbg !15960
  store i64 %173, i64* %2, align 8, !dbg !15961
  br label %195, !dbg !15961

174:                                              ; preds = %154, %151
  %175 = load i64, i64* %3, align 8, !dbg !15962
  %176 = load i32, i32* %4, align 4, !dbg !15963
  %177 = zext i32 %176 to i64, !dbg !15963
  %178 = udiv i64 %175, %177, !dbg !15964
  %179 = load i32, i32* %5, align 4, !dbg !15965
  %180 = zext i32 %179 to i64, !dbg !15965
  %181 = mul i64 %178, %180, !dbg !15966
  %182 = load i64, i64* %3, align 8, !dbg !15967
  %183 = load i32, i32* %4, align 4, !dbg !15968
  %184 = zext i32 %183 to i64, !dbg !15968
  %185 = urem i64 %182, %184, !dbg !15969
  %186 = load i32, i32* %5, align 4, !dbg !15970
  %187 = zext i32 %186 to i64, !dbg !15970
  %188 = mul i64 %185, %187, !dbg !15971
  %189 = load i64, i64* %12, align 8, !dbg !15972
  %190 = add i64 %188, %189, !dbg !15973
  %191 = load i32, i32* %4, align 4, !dbg !15974
  %192 = zext i32 %191 to i64, !dbg !15974
  %193 = udiv i64 %190, %192, !dbg !15975
  %194 = add i64 %181, %193, !dbg !15976
  store i64 %194, i64* %2, align 8, !dbg !15977
  br label %195, !dbg !15977

195:                                              ; preds = %56, %98, %106, %120, %128, %139, %164, %174
  %196 = load i64, i64* %2, align 8, !dbg !15978
  ret i64 %196, !dbg !15979
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_impl_k_wakeup(%struct.k_thread.180* noundef %0) #1 !dbg !15980 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.k_thread.180*, align 4
  store %struct.k_thread.180* %0, %struct.k_thread.180** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.180** %3, metadata !15981, metadata !DIExpression()), !dbg !15982
  br label %4, !dbg !15983

4:                                                ; preds = %1
  br label %5, !dbg !15984

5:                                                ; preds = %4
  %6 = load %struct.k_thread.180*, %struct.k_thread.180** %3, align 4, !dbg !15986
  %7 = call zeroext i1 @z_is_thread_pending(%struct.k_thread.180* noundef %6) #10, !dbg !15988
  br i1 %7, label %8, label %9, !dbg !15989

8:                                                ; preds = %5
  br label %31, !dbg !15990

9:                                                ; preds = %5
  %10 = load %struct.k_thread.180*, %struct.k_thread.180** %3, align 4, !dbg !15992
  %11 = call i32 @z_abort_thread_timeout(%struct.k_thread.180* noundef %10) #10, !dbg !15994
  %12 = icmp slt i32 %11, 0, !dbg !15995
  br i1 %12, label %13, label %22, !dbg !15996

13:                                               ; preds = %9
  %14 = load %struct.k_thread.180*, %struct.k_thread.180** %3, align 4, !dbg !15997
  %15 = getelementptr inbounds %struct.k_thread.180, %struct.k_thread.180* %14, i32 0, i32 0, !dbg !16000
  %16 = getelementptr inbounds %struct._thread_base.173, %struct._thread_base.173* %15, i32 0, i32 3, !dbg !16001
  %17 = load i8, i8* %16, align 1, !dbg !16001
  %18 = zext i8 %17 to i32, !dbg !15997
  %19 = icmp ne i32 %18, 16, !dbg !16002
  br i1 %19, label %20, label %21, !dbg !16003

20:                                               ; preds = %13
  br label %31, !dbg !16004

21:                                               ; preds = %13
  br label %22, !dbg !16006

22:                                               ; preds = %21, %9
  %23 = load %struct.k_thread.180*, %struct.k_thread.180** %3, align 4, !dbg !16007
  call void @z_mark_thread_as_not_suspended(%struct.k_thread.180* noundef %23) #10, !dbg !16008
  %24 = load %struct.k_thread.180*, %struct.k_thread.180** %3, align 4, !dbg !16009
  call void @z_ready_thread(%struct.k_thread.180* noundef %24) #10, !dbg !16010
  call void @flag_ipi() #10, !dbg !16011
  call void @llvm.dbg.declare(metadata i32* %2, metadata !13918, metadata !DIExpression()) #9, !dbg !16012
  %25 = call i32 asm sideeffect "MRS $0, ipsr", "=r"() #9, !dbg !16016, !srcloc !13925
  store i32 %25, i32* %2, align 4, !dbg !16016
  %26 = load i32, i32* %2, align 4, !dbg !16017
  %27 = icmp ne i32 %26, 0, !dbg !16018
  %28 = zext i1 %27 to i64, !dbg !16018
  %29 = select i1 %27, i32 1, i32 0, !dbg !16018
  br i1 %27, label %31, label %30, !dbg !16019

30:                                               ; preds = %22
  call void @z_reschedule_unlocked() #10, !dbg !16020
  br label %31, !dbg !16022

31:                                               ; preds = %8, %20, %30, %22
  ret void, !dbg !16023
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @z_is_thread_pending(%struct.k_thread.180* noundef %0) #1 !dbg !16024 {
  %2 = alloca %struct.k_thread.180*, align 4
  store %struct.k_thread.180* %0, %struct.k_thread.180** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.180** %2, metadata !16025, metadata !DIExpression()), !dbg !16026
  %3 = load %struct.k_thread.180*, %struct.k_thread.180** %2, align 4, !dbg !16027
  %4 = getelementptr inbounds %struct.k_thread.180, %struct.k_thread.180* %3, i32 0, i32 0, !dbg !16028
  %5 = getelementptr inbounds %struct._thread_base.173, %struct._thread_base.173* %4, i32 0, i32 3, !dbg !16029
  %6 = load i8, i8* %5, align 1, !dbg !16029
  %7 = zext i8 %6 to i32, !dbg !16027
  %8 = and i32 %7, 2, !dbg !16030
  %9 = icmp ne i32 %8, 0, !dbg !16031
  ret i1 %9, !dbg !16032
}

; Function Attrs: noinline nounwind optnone
define dso_local %struct.k_thread.180* @z_impl_z_current_get() #1 !dbg !16033 {
  %1 = alloca %struct.k_thread.180*, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.180** %1, metadata !16036, metadata !DIExpression()), !dbg !16037
  %2 = load %struct.k_thread.180*, %struct.k_thread.180** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16038
  store %struct.k_thread.180* %2, %struct.k_thread.180** %1, align 4, !dbg !16037
  %3 = load %struct.k_thread.180*, %struct.k_thread.180** %1, align 4, !dbg !16039
  ret %struct.k_thread.180* %3, !dbg !16040
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @z_impl_k_is_preempt_thread() #1 !dbg !16041 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %1, metadata !13918, metadata !DIExpression()) #9, !dbg !16042
  %2 = call i32 asm sideeffect "MRS $0, ipsr", "=r"() #9, !dbg !16045, !srcloc !13925
  store i32 %2, i32* %1, align 4, !dbg !16045
  %3 = load i32, i32* %1, align 4, !dbg !16046
  %4 = icmp ne i32 %3, 0, !dbg !16047
  %5 = zext i1 %4 to i64, !dbg !16047
  %6 = select i1 %4, i32 1, i32 0, !dbg !16047
  br i1 %4, label %11, label %7, !dbg !16048

7:                                                ; preds = %0
  %8 = load %struct.k_thread.180*, %struct.k_thread.180** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16049
  %9 = call i32 @is_preempt(%struct.k_thread.180* noundef %8) #10, !dbg !16050
  %10 = icmp ne i32 %9, 0, !dbg !16048
  br label %11

11:                                               ; preds = %7, %0
  %12 = phi i1 [ false, %0 ], [ %10, %7 ], !dbg !16051
  %13 = zext i1 %12 to i32, !dbg !16048
  ret i32 %13, !dbg !16052
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_thread_abort(%struct.k_thread.180* noundef %0) #1 !dbg !16053 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca %struct.k_spinlock.13*, align 4
  %9 = alloca %union.anon.68, align 4
  %10 = alloca %struct.k_spinlock.13*, align 4
  %11 = alloca %union.anon.68, align 4
  %12 = alloca %struct.k_spinlock.13*, align 4
  %13 = alloca %union.anon.68, align 4
  %14 = alloca %struct.k_spinlock.13*, align 4
  %15 = alloca %union.anon.68, align 4
  %16 = alloca %struct.k_spinlock.13*, align 4
  %17 = alloca %union.anon.68, align 4
  %18 = alloca %struct.k_spinlock.13*, align 4
  %19 = alloca %struct.k_thread.180*, align 4
  %20 = alloca %union.anon.68, align 4
  store %struct.k_thread.180* %0, %struct.k_thread.180** %19, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.180** %19, metadata !16054, metadata !DIExpression()), !dbg !16055
  call void @llvm.dbg.declare(metadata %union.anon.68* %20, metadata !16056, metadata !DIExpression()), !dbg !16057
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %18, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %18, metadata !12804, metadata !DIExpression()) #9, !dbg !16058
  %21 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %18, align 4, !dbg !16060
  call void @llvm.dbg.declare(metadata %union.anon.68* %17, metadata !12812, metadata !DIExpression()) #9, !dbg !16061
  call void @llvm.dbg.declare(metadata i32* %3, metadata !12814, metadata !DIExpression()) #9, !dbg !16062
  call void @llvm.dbg.declare(metadata i32* %4, metadata !12818, metadata !DIExpression()) #9, !dbg !16064
  %22 = call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #9, !dbg !16065, !srcloc !12821
  %23 = extractvalue { i32, i32 } %22, 0, !dbg !16065
  %24 = extractvalue { i32, i32 } %22, 1, !dbg !16065
  store i32 %23, i32* %3, align 4, !dbg !16065
  store i32 %24, i32* %4, align 4, !dbg !16065
  %25 = load i32, i32* %3, align 4, !dbg !16066
  %26 = getelementptr inbounds %union.anon.68, %union.anon.68* %17, i32 0, i32 0, !dbg !16067
  store i32 %25, i32* %26, align 4, !dbg !16068
  %27 = getelementptr inbounds %union.anon.68, %union.anon.68* %17, i32 0, i32 0, !dbg !16069
  %28 = load i32, i32* %27, align 4, !dbg !16069
  %29 = getelementptr inbounds %union.anon.68, %union.anon.68* %20, i32 0, i32 0, !dbg !16070
  store i32 %28, i32* %29, align 4, !dbg !16070
  %30 = load %struct.k_thread.180*, %struct.k_thread.180** %19, align 4, !dbg !16071
  %31 = getelementptr inbounds %struct.k_thread.180, %struct.k_thread.180* %30, i32 0, i32 0, !dbg !16073
  %32 = getelementptr inbounds %struct._thread_base.173, %struct._thread_base.173* %31, i32 0, i32 2, !dbg !16074
  %33 = load i8, i8* %32, align 4, !dbg !16074
  %34 = zext i8 %33 to i32, !dbg !16071
  %35 = and i32 %34, 1, !dbg !16075
  %36 = icmp ne i32 %35, 0, !dbg !16076
  br i1 %36, label %37, label %49, !dbg !16077

37:                                               ; preds = %1
  %38 = getelementptr inbounds %union.anon.68, %union.anon.68* %20, i32 0, i32 0, !dbg !16078
  %39 = bitcast i32* %38 to [1 x i32]*, !dbg !16078
  %40 = load [1 x i32], [1 x i32]* %39, align 4, !dbg !16078
  %41 = getelementptr inbounds %union.anon.68, %union.anon.68* %11, i32 0, i32 0
  %42 = bitcast i32* %41 to [1 x i32]*
  store [1 x i32] %40, [1 x i32]* %42, align 4
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %12, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %12, metadata !12846, metadata !DIExpression()) #9, !dbg !16080
  call void @llvm.dbg.declare(metadata %union.anon.68* %11, metadata !12852, metadata !DIExpression()) #9, !dbg !16082
  %43 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %12, align 4, !dbg !16083
  %44 = getelementptr inbounds %union.anon.68, %union.anon.68* %11, i32 0, i32 0, !dbg !16084
  %45 = load i32, i32* %44, align 4, !dbg !16084
  store i32 %45, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !12856, metadata !DIExpression()) #9, !dbg !16085
  %46 = load i32, i32* %7, align 4, !dbg !16087
  call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %46) #9, !dbg !16088, !srcloc !12862
  br label %47, !dbg !16089

47:                                               ; preds = %37
  call void asm sideeffect "eors.n r0, r0\0A\09msr BASEPRI, r0\0A\09mov r0, $0\0A\09svc $1\0A\09", "i,i,~{memory}"(i32 4, i32 2) #9, !dbg !16090, !srcloc !16092
  br label %48, !dbg !16090

48:                                               ; preds = %47
  br label %99, !dbg !16093

49:                                               ; preds = %1
  %50 = load %struct.k_thread.180*, %struct.k_thread.180** %19, align 4, !dbg !16094
  %51 = getelementptr inbounds %struct.k_thread.180, %struct.k_thread.180* %50, i32 0, i32 0, !dbg !16096
  %52 = getelementptr inbounds %struct._thread_base.173, %struct._thread_base.173* %51, i32 0, i32 3, !dbg !16097
  %53 = load i8, i8* %52, align 1, !dbg !16097
  %54 = zext i8 %53 to i32, !dbg !16094
  %55 = and i32 %54, 8, !dbg !16098
  %56 = icmp ne i32 %55, 0, !dbg !16099
  br i1 %56, label %57, label %67, !dbg !16100

57:                                               ; preds = %49
  %58 = getelementptr inbounds %union.anon.68, %union.anon.68* %20, i32 0, i32 0, !dbg !16101
  %59 = bitcast i32* %58 to [1 x i32]*, !dbg !16101
  %60 = load [1 x i32], [1 x i32]* %59, align 4, !dbg !16101
  %61 = getelementptr inbounds %union.anon.68, %union.anon.68* %13, i32 0, i32 0
  %62 = bitcast i32* %61 to [1 x i32]*
  store [1 x i32] %60, [1 x i32]* %62, align 4
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %14, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %14, metadata !12846, metadata !DIExpression()) #9, !dbg !16103
  call void @llvm.dbg.declare(metadata %union.anon.68* %13, metadata !12852, metadata !DIExpression()) #9, !dbg !16105
  %63 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %14, align 4, !dbg !16106
  %64 = getelementptr inbounds %union.anon.68, %union.anon.68* %13, i32 0, i32 0, !dbg !16107
  %65 = load i32, i32* %64, align 4, !dbg !16107
  store i32 %65, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !12856, metadata !DIExpression()) #9, !dbg !16108
  %66 = load i32, i32* %6, align 4, !dbg !16110
  call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %66) #9, !dbg !16111, !srcloc !12862
  br label %99, !dbg !16112

67:                                               ; preds = %49
  %68 = load %struct.k_thread.180*, %struct.k_thread.180** %19, align 4, !dbg !16113
  call void @end_thread(%struct.k_thread.180* noundef %68) #10, !dbg !16114
  %69 = load %struct.k_thread.180*, %struct.k_thread.180** %19, align 4, !dbg !16115
  %70 = load %struct.k_thread.180*, %struct.k_thread.180** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16117
  %71 = icmp eq %struct.k_thread.180* %69, %70, !dbg !16118
  br i1 %71, label %72, label %89, !dbg !16119

72:                                               ; preds = %67
  call void @llvm.dbg.declare(metadata i32* %2, metadata !13918, metadata !DIExpression()) #9, !dbg !16120
  %73 = call i32 asm sideeffect "MRS $0, ipsr", "=r"() #9, !dbg !16123, !srcloc !13925
  store i32 %73, i32* %2, align 4, !dbg !16123
  %74 = load i32, i32* %2, align 4, !dbg !16124
  %75 = icmp ne i32 %74, 0, !dbg !16125
  %76 = zext i1 %75 to i64, !dbg !16125
  %77 = select i1 %75, i32 1, i32 0, !dbg !16125
  br i1 %75, label %89, label %78, !dbg !16126

78:                                               ; preds = %72
  %79 = getelementptr inbounds %union.anon.68, %union.anon.68* %20, i32 0, i32 0, !dbg !16127
  %80 = bitcast i32* %79 to [1 x i32]*, !dbg !16127
  %81 = load [1 x i32], [1 x i32]* %80, align 4, !dbg !16127
  %82 = getelementptr inbounds %union.anon.68, %union.anon.68* %9, i32 0, i32 0
  %83 = bitcast i32* %82 to [1 x i32]*
  store [1 x i32] %81, [1 x i32]* %83, align 4
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %10, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %10, metadata !13870, metadata !DIExpression()) #9, !dbg !16129
  call void @llvm.dbg.declare(metadata %union.anon.68* %9, metadata !13876, metadata !DIExpression()) #9, !dbg !16131
  %84 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %10, align 4, !dbg !16132
  store %struct.k_spinlock.13* %84, %struct.k_spinlock.13** %8, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %8, metadata !13879, metadata !DIExpression()) #9, !dbg !16133
  %85 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %8, align 4, !dbg !16135
  %86 = getelementptr inbounds %union.anon.68, %union.anon.68* %9, i32 0, i32 0, !dbg !16136
  %87 = load i32, i32* %86, align 4, !dbg !16136
  %88 = call i32 @z_swap_irqlock(i32 noundef %87) #13, !dbg !16137
  br label %89, !dbg !16138

89:                                               ; preds = %78, %72, %67
  %90 = getelementptr inbounds %union.anon.68, %union.anon.68* %20, i32 0, i32 0, !dbg !16139
  %91 = bitcast i32* %90 to [1 x i32]*, !dbg !16139
  %92 = load [1 x i32], [1 x i32]* %91, align 4, !dbg !16139
  %93 = getelementptr inbounds %union.anon.68, %union.anon.68* %15, i32 0, i32 0
  %94 = bitcast i32* %93 to [1 x i32]*
  store [1 x i32] %92, [1 x i32]* %94, align 4
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %16, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %16, metadata !12846, metadata !DIExpression()) #9, !dbg !16140
  call void @llvm.dbg.declare(metadata %union.anon.68* %15, metadata !12852, metadata !DIExpression()) #9, !dbg !16142
  %95 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %16, align 4, !dbg !16143
  %96 = getelementptr inbounds %union.anon.68, %union.anon.68* %15, i32 0, i32 0, !dbg !16144
  %97 = load i32, i32* %96, align 4, !dbg !16144
  store i32 %97, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !12856, metadata !DIExpression()) #9, !dbg !16145
  %98 = load i32, i32* %5, align 4, !dbg !16147
  call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %98) #9, !dbg !16148, !srcloc !12862
  br label %99, !dbg !16149

99:                                               ; preds = %89, %57, %48
  ret void, !dbg !16149
}

; Function Attrs: noinline nounwind optnone
define internal void @end_thread(%struct.k_thread.180* noundef %0) #1 !dbg !16150 {
  %2 = alloca %struct.k_thread.180*, align 4
  %3 = alloca %struct.k_thread.180*, align 4
  %4 = alloca %struct.k_thread.180*, align 4
  %5 = alloca %struct.k_thread.180*, align 4
  store %struct.k_thread.180* %0, %struct.k_thread.180** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.180** %5, metadata !16151, metadata !DIExpression()), !dbg !16152
  %6 = load %struct.k_thread.180*, %struct.k_thread.180** %5, align 4, !dbg !16153
  %7 = getelementptr inbounds %struct.k_thread.180, %struct.k_thread.180* %6, i32 0, i32 0, !dbg !16155
  %8 = getelementptr inbounds %struct._thread_base.173, %struct._thread_base.173* %7, i32 0, i32 3, !dbg !16156
  %9 = load i8, i8* %8, align 1, !dbg !16156
  %10 = zext i8 %9 to i32, !dbg !16153
  %11 = and i32 %10, 8, !dbg !16157
  %12 = icmp eq i32 %11, 0, !dbg !16158
  br i1 %12, label %13, label %64, !dbg !16159

13:                                               ; preds = %1
  %14 = load %struct.k_thread.180*, %struct.k_thread.180** %5, align 4, !dbg !16160
  %15 = getelementptr inbounds %struct.k_thread.180, %struct.k_thread.180* %14, i32 0, i32 0, !dbg !16162
  %16 = getelementptr inbounds %struct._thread_base.173, %struct._thread_base.173* %15, i32 0, i32 3, !dbg !16163
  %17 = load i8, i8* %16, align 1, !dbg !16164
  %18 = zext i8 %17 to i32, !dbg !16164
  %19 = or i32 %18, 8, !dbg !16164
  %20 = trunc i32 %19 to i8, !dbg !16164
  store i8 %20, i8* %16, align 1, !dbg !16164
  %21 = load %struct.k_thread.180*, %struct.k_thread.180** %5, align 4, !dbg !16165
  %22 = getelementptr inbounds %struct.k_thread.180, %struct.k_thread.180* %21, i32 0, i32 0, !dbg !16166
  %23 = getelementptr inbounds %struct._thread_base.173, %struct._thread_base.173* %22, i32 0, i32 3, !dbg !16167
  %24 = load i8, i8* %23, align 1, !dbg !16168
  %25 = zext i8 %24 to i32, !dbg !16168
  %26 = and i32 %25, -33, !dbg !16168
  %27 = trunc i32 %26 to i8, !dbg !16168
  store i8 %27, i8* %23, align 1, !dbg !16168
  %28 = load %struct.k_thread.180*, %struct.k_thread.180** %5, align 4, !dbg !16169
  %29 = call zeroext i1 @z_is_thread_queued(%struct.k_thread.180* noundef %28) #10, !dbg !16171
  br i1 %29, label %30, label %47, !dbg !16172

30:                                               ; preds = %13
  %31 = load %struct.k_thread.180*, %struct.k_thread.180** %5, align 4, !dbg !16173
  store %struct.k_thread.180* %31, %struct.k_thread.180** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.180** %4, metadata !13193, metadata !DIExpression()) #9, !dbg !16175
  %32 = load %struct.k_thread.180*, %struct.k_thread.180** %4, align 4, !dbg !16177
  %33 = getelementptr inbounds %struct.k_thread.180, %struct.k_thread.180* %32, i32 0, i32 0, !dbg !16178
  %34 = getelementptr inbounds %struct._thread_base.173, %struct._thread_base.173* %33, i32 0, i32 3, !dbg !16179
  %35 = load i8, i8* %34, align 1, !dbg !16180
  %36 = zext i8 %35 to i32, !dbg !16180
  %37 = and i32 %36, -129, !dbg !16180
  %38 = trunc i32 %37 to i8, !dbg !16180
  store i8 %38, i8* %34, align 1, !dbg !16180
  %39 = load %struct.k_thread.180*, %struct.k_thread.180** %4, align 4, !dbg !16181
  %40 = call zeroext i1 @should_queue_thread(%struct.k_thread.180* noundef %39) #13, !dbg !16182
  br i1 %40, label %41, label %46, !dbg !16183

41:                                               ; preds = %30
  %42 = load %struct.k_thread.180*, %struct.k_thread.180** %4, align 4, !dbg !16184
  store %struct.k_thread.180* %42, %struct.k_thread.180** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.180** %3, metadata !13207, metadata !DIExpression()) #9, !dbg !16185
  %43 = load %struct.k_thread.180*, %struct.k_thread.180** %3, align 4, !dbg !16187
  store %struct.k_thread.180* %43, %struct.k_thread.180** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.180** %2, metadata !13212, metadata !DIExpression()), !dbg !16188
  %44 = bitcast i8* bitcast (%struct._dnode.168* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1) to i8*) to %struct._dnode.168*, !dbg !16190
  %45 = load %struct.k_thread.180*, %struct.k_thread.180** %3, align 4, !dbg !16191
  call void @z_priq_dumb_remove(%struct._dnode.168* noundef %44, %struct.k_thread.180* noundef %45) #13, !dbg !16192
  br label %46, !dbg !16193

46:                                               ; preds = %30, %41
  br label %47, !dbg !16194

47:                                               ; preds = %46, %13
  %48 = load %struct.k_thread.180*, %struct.k_thread.180** %5, align 4, !dbg !16195
  %49 = getelementptr inbounds %struct.k_thread.180, %struct.k_thread.180* %48, i32 0, i32 0, !dbg !16197
  %50 = getelementptr inbounds %struct._thread_base.173, %struct._thread_base.173* %49, i32 0, i32 1, !dbg !16198
  %51 = load %union.anon.169*, %union.anon.169** %50, align 8, !dbg !16198
  %52 = icmp ne %union.anon.169* %51, null, !dbg !16199
  br i1 %52, label %53, label %55, !dbg !16200

53:                                               ; preds = %47
  %54 = load %struct.k_thread.180*, %struct.k_thread.180** %5, align 4, !dbg !16201
  call void @unpend_thread_no_timeout(%struct.k_thread.180* noundef %54) #10, !dbg !16203
  br label %55, !dbg !16204

55:                                               ; preds = %53, %47
  %56 = load %struct.k_thread.180*, %struct.k_thread.180** %5, align 4, !dbg !16205
  %57 = call i32 @z_abort_thread_timeout(%struct.k_thread.180* noundef %56) #10, !dbg !16206
  %58 = load %struct.k_thread.180*, %struct.k_thread.180** %5, align 4, !dbg !16207
  %59 = getelementptr inbounds %struct.k_thread.180, %struct.k_thread.180* %58, i32 0, i32 3, !dbg !16208
  call void @unpend_all(%union.anon.169* noundef %59) #10, !dbg !16209
  call void @update_cache(i32 noundef 1) #10, !dbg !16210
  br label %60, !dbg !16211

60:                                               ; preds = %55
  br label %61, !dbg !16212

61:                                               ; preds = %60
  br label %62, !dbg !16214

62:                                               ; preds = %61
  br label %63, !dbg !16215

63:                                               ; preds = %62
  br label %64, !dbg !16217

64:                                               ; preds = %63, %1
  ret void, !dbg !16218
}

; Function Attrs: noinline nounwind optnone
define internal void @unpend_all(%union.anon.169* noundef %0) #1 !dbg !16219 {
  %2 = alloca %struct.k_thread.180*, align 4
  %3 = alloca i32, align 4
  %4 = alloca %union.anon.169*, align 4
  %5 = alloca %struct.k_thread.180*, align 4
  store %union.anon.169* %0, %union.anon.169** %4, align 4
  call void @llvm.dbg.declare(metadata %union.anon.169** %4, metadata !16222, metadata !DIExpression()), !dbg !16223
  call void @llvm.dbg.declare(metadata %struct.k_thread.180** %5, metadata !16224, metadata !DIExpression()), !dbg !16225
  br label %6, !dbg !16226

6:                                                ; preds = %10, %1
  %7 = load %union.anon.169*, %union.anon.169** %4, align 4, !dbg !16227
  %8 = call %struct.k_thread.180* @z_waitq_head(%union.anon.169* noundef %7) #10, !dbg !16228
  store %struct.k_thread.180* %8, %struct.k_thread.180** %5, align 4, !dbg !16229
  %9 = icmp ne %struct.k_thread.180* %8, null, !dbg !16230
  br i1 %9, label %10, label %20, !dbg !16226

10:                                               ; preds = %6
  %11 = load %struct.k_thread.180*, %struct.k_thread.180** %5, align 4, !dbg !16231
  call void @unpend_thread_no_timeout(%struct.k_thread.180* noundef %11) #10, !dbg !16233
  %12 = load %struct.k_thread.180*, %struct.k_thread.180** %5, align 4, !dbg !16234
  %13 = call i32 @z_abort_thread_timeout(%struct.k_thread.180* noundef %12) #10, !dbg !16235
  %14 = load %struct.k_thread.180*, %struct.k_thread.180** %5, align 4, !dbg !16236
  store %struct.k_thread.180* %14, %struct.k_thread.180** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.180** %2, metadata !16237, metadata !DIExpression()), !dbg !16241
  store i32 0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !16243, metadata !DIExpression()), !dbg !16244
  %15 = load i32, i32* %3, align 4, !dbg !16245
  %16 = load %struct.k_thread.180*, %struct.k_thread.180** %2, align 4, !dbg !16246
  %17 = getelementptr inbounds %struct.k_thread.180, %struct.k_thread.180* %16, i32 0, i32 6, !dbg !16247
  %18 = getelementptr inbounds %struct._thread_arch.15, %struct._thread_arch.15* %17, i32 0, i32 1, !dbg !16248
  store i32 %15, i32* %18, align 4, !dbg !16249
  %19 = load %struct.k_thread.180*, %struct.k_thread.180** %5, align 4, !dbg !16250
  call void @ready_thread(%struct.k_thread.180* noundef %19) #10, !dbg !16251
  br label %6, !dbg !16226, !llvm.loop !16252

20:                                               ; preds = %6
  ret void, !dbg !16254
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @z_impl_k_thread_join(%struct.k_thread.180* noundef %0, [1 x i64] %1) #1 !dbg !16255 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca %struct.k_spinlock.13*, align 4
  %7 = alloca %union.anon.68, align 4
  %8 = alloca %struct.k_spinlock.13*, align 4
  %9 = alloca %union.anon.68, align 4
  %10 = alloca %struct.k_spinlock.13*, align 4
  %11 = alloca %union.anon.68, align 4
  %12 = alloca %struct.k_spinlock.13*, align 4
  %13 = alloca i32, align 4
  %14 = alloca %union.argument_value, align 8
  %15 = alloca %struct.k_thread.180*, align 4
  %16 = alloca %union.anon.68, align 4
  %17 = alloca i32, align 4
  %18 = alloca %union.argument_value, align 8
  %19 = getelementptr inbounds %union.argument_value, %union.argument_value* %14, i32 0, i32 0
  %20 = bitcast i64* %19 to [1 x i64]*
  store [1 x i64] %1, [1 x i64]* %20, align 8
  store %struct.k_thread.180* %0, %struct.k_thread.180** %15, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.180** %15, metadata !16258, metadata !DIExpression()), !dbg !16259
  call void @llvm.dbg.declare(metadata %union.argument_value* %14, metadata !16260, metadata !DIExpression()), !dbg !16261
  call void @llvm.dbg.declare(metadata %union.anon.68* %16, metadata !16262, metadata !DIExpression()), !dbg !16263
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %12, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %12, metadata !12804, metadata !DIExpression()) #9, !dbg !16264
  %21 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %12, align 4, !dbg !16266
  call void @llvm.dbg.declare(metadata %union.anon.68* %11, metadata !12812, metadata !DIExpression()) #9, !dbg !16267
  call void @llvm.dbg.declare(metadata i32* %3, metadata !12814, metadata !DIExpression()) #9, !dbg !16268
  call void @llvm.dbg.declare(metadata i32* %4, metadata !12818, metadata !DIExpression()) #9, !dbg !16270
  %22 = call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #9, !dbg !16271, !srcloc !12821
  %23 = extractvalue { i32, i32 } %22, 0, !dbg !16271
  %24 = extractvalue { i32, i32 } %22, 1, !dbg !16271
  store i32 %23, i32* %3, align 4, !dbg !16271
  store i32 %24, i32* %4, align 4, !dbg !16271
  %25 = load i32, i32* %3, align 4, !dbg !16272
  %26 = getelementptr inbounds %union.anon.68, %union.anon.68* %11, i32 0, i32 0, !dbg !16273
  store i32 %25, i32* %26, align 4, !dbg !16274
  %27 = getelementptr inbounds %union.anon.68, %union.anon.68* %11, i32 0, i32 0, !dbg !16275
  %28 = load i32, i32* %27, align 4, !dbg !16275
  %29 = getelementptr inbounds %union.anon.68, %union.anon.68* %16, i32 0, i32 0, !dbg !16276
  store i32 %28, i32* %29, align 4, !dbg !16276
  call void @llvm.dbg.declare(metadata i32* %17, metadata !16277, metadata !DIExpression()), !dbg !16278
  store i32 0, i32* %17, align 4, !dbg !16278
  br label %30, !dbg !16279

30:                                               ; preds = %2
  br label %31, !dbg !16280

31:                                               ; preds = %30
  %32 = load %struct.k_thread.180*, %struct.k_thread.180** %15, align 4, !dbg !16282
  %33 = getelementptr inbounds %struct.k_thread.180, %struct.k_thread.180* %32, i32 0, i32 0, !dbg !16284
  %34 = getelementptr inbounds %struct._thread_base.173, %struct._thread_base.173* %33, i32 0, i32 3, !dbg !16285
  %35 = load i8, i8* %34, align 1, !dbg !16285
  %36 = zext i8 %35 to i32, !dbg !16282
  %37 = and i32 %36, 8, !dbg !16286
  %38 = icmp ne i32 %37, 0, !dbg !16287
  br i1 %38, label %39, label %40, !dbg !16288

39:                                               ; preds = %31
  store i32 0, i32* %17, align 4, !dbg !16289
  br label %84, !dbg !16291

40:                                               ; preds = %31
  %41 = getelementptr inbounds %union.argument_value, %union.argument_value* %14, i32 0, i32 0, !dbg !16292
  %42 = load i64, i64* %41, align 8, !dbg !16292
  %43 = getelementptr inbounds %union.argument_value, %union.argument_value* %18, i32 0, i32 0, !dbg !16292
  store i64 0, i64* %43, align 8, !dbg !16292
  %44 = icmp eq i64 %42, 0, !dbg !16292
  br i1 %44, label %45, label %46, !dbg !16294

45:                                               ; preds = %40
  store i32 -16, i32* %17, align 4, !dbg !16295
  br label %83, !dbg !16297

46:                                               ; preds = %40
  %47 = load %struct.k_thread.180*, %struct.k_thread.180** %15, align 4, !dbg !16298
  %48 = load %struct.k_thread.180*, %struct.k_thread.180** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16300
  %49 = icmp eq %struct.k_thread.180* %47, %48, !dbg !16301
  br i1 %49, label %58, label %50, !dbg !16302

50:                                               ; preds = %46
  %51 = load %struct.k_thread.180*, %struct.k_thread.180** %15, align 4, !dbg !16303
  %52 = getelementptr inbounds %struct.k_thread.180, %struct.k_thread.180* %51, i32 0, i32 0, !dbg !16304
  %53 = getelementptr inbounds %struct._thread_base.173, %struct._thread_base.173* %52, i32 0, i32 1, !dbg !16305
  %54 = load %union.anon.169*, %union.anon.169** %53, align 8, !dbg !16305
  %55 = load %struct.k_thread.180*, %struct.k_thread.180** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16306
  %56 = getelementptr inbounds %struct.k_thread.180, %struct.k_thread.180* %55, i32 0, i32 3, !dbg !16307
  %57 = icmp eq %union.anon.169* %54, %56, !dbg !16308
  br i1 %57, label %58, label %59, !dbg !16309

58:                                               ; preds = %50, %46
  store i32 -45, i32* %17, align 4, !dbg !16310
  br label %82, !dbg !16312

59:                                               ; preds = %50
  %60 = load %struct.k_thread.180*, %struct.k_thread.180** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16313
  %61 = load %struct.k_thread.180*, %struct.k_thread.180** %15, align 4, !dbg !16315
  %62 = getelementptr inbounds %struct.k_thread.180, %struct.k_thread.180* %61, i32 0, i32 3, !dbg !16316
  call void @add_to_waitq_locked(%struct.k_thread.180* noundef %60, %union.anon.169* noundef %62) #10, !dbg !16317
  %63 = load %struct.k_thread.180*, %struct.k_thread.180** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16318
  %64 = getelementptr inbounds %union.argument_value, %union.argument_value* %14, i32 0, i32 0, !dbg !16319
  %65 = bitcast i64* %64 to [1 x i64]*, !dbg !16319
  %66 = load [1 x i64], [1 x i64]* %65, align 8, !dbg !16319
  call void @add_thread_timeout(%struct.k_thread.180* noundef %63, [1 x i64] %66) #10, !dbg !16319
  br label %67, !dbg !16320

67:                                               ; preds = %59
  br label %68, !dbg !16321

68:                                               ; preds = %67
  %69 = getelementptr inbounds %union.anon.68, %union.anon.68* %16, i32 0, i32 0, !dbg !16323
  %70 = bitcast i32* %69 to [1 x i32]*, !dbg !16323
  %71 = load [1 x i32], [1 x i32]* %70, align 4, !dbg !16323
  %72 = getelementptr inbounds %union.anon.68, %union.anon.68* %7, i32 0, i32 0
  %73 = bitcast i32* %72 to [1 x i32]*
  store [1 x i32] %71, [1 x i32]* %73, align 4
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %8, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %8, metadata !13870, metadata !DIExpression()) #9, !dbg !16324
  call void @llvm.dbg.declare(metadata %union.anon.68* %7, metadata !13876, metadata !DIExpression()) #9, !dbg !16326
  %74 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %8, align 4, !dbg !16327
  store %struct.k_spinlock.13* %74, %struct.k_spinlock.13** %6, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %6, metadata !13879, metadata !DIExpression()) #9, !dbg !16328
  %75 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %6, align 4, !dbg !16330
  %76 = getelementptr inbounds %union.anon.68, %union.anon.68* %7, i32 0, i32 0, !dbg !16331
  %77 = load i32, i32* %76, align 4, !dbg !16331
  %78 = call i32 @z_swap_irqlock(i32 noundef %77) #13, !dbg !16332
  store i32 %78, i32* %17, align 4, !dbg !16333
  br label %79, !dbg !16334

79:                                               ; preds = %68
  br label %80, !dbg !16335

80:                                               ; preds = %79
  %81 = load i32, i32* %17, align 4, !dbg !16337
  store i32 %81, i32* %13, align 4, !dbg !16338
  br label %97, !dbg !16338

82:                                               ; preds = %58
  br label %83

83:                                               ; preds = %82, %45
  br label %84

84:                                               ; preds = %83, %39
  br label %85, !dbg !16339

85:                                               ; preds = %84
  br label %86, !dbg !16340

86:                                               ; preds = %85
  %87 = getelementptr inbounds %union.anon.68, %union.anon.68* %16, i32 0, i32 0, !dbg !16342
  %88 = bitcast i32* %87 to [1 x i32]*, !dbg !16342
  %89 = load [1 x i32], [1 x i32]* %88, align 4, !dbg !16342
  %90 = getelementptr inbounds %union.anon.68, %union.anon.68* %9, i32 0, i32 0
  %91 = bitcast i32* %90 to [1 x i32]*
  store [1 x i32] %89, [1 x i32]* %91, align 4
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %10, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %10, metadata !12846, metadata !DIExpression()) #9, !dbg !16343
  call void @llvm.dbg.declare(metadata %union.anon.68* %9, metadata !12852, metadata !DIExpression()) #9, !dbg !16345
  %92 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %10, align 4, !dbg !16346
  %93 = getelementptr inbounds %union.anon.68, %union.anon.68* %9, i32 0, i32 0, !dbg !16347
  %94 = load i32, i32* %93, align 4, !dbg !16347
  store i32 %94, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !12856, metadata !DIExpression()) #9, !dbg !16348
  %95 = load i32, i32* %5, align 4, !dbg !16350
  call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %95) #9, !dbg !16351, !srcloc !12862
  %96 = load i32, i32* %17, align 4, !dbg !16352
  store i32 %96, i32* %13, align 4, !dbg !16353
  br label %97, !dbg !16353

97:                                               ; preds = %86, %80
  %98 = load i32, i32* %13, align 4, !dbg !16354
  ret i32 %98, !dbg !16354
}

; Function Attrs: noinline nounwind optnone
define dso_local zeroext i1 @z_sched_wake(%union.anon.169* noundef %0, i32 noundef %1, i8* noundef %2) #1 !dbg !16355 {
  %4 = alloca %struct.k_thread.180*, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca %struct.k_thread.180*, align 4
  %9 = alloca i32, align 4
  %10 = alloca i8*, align 4
  %11 = alloca i32, align 4
  %12 = alloca %union.anon.68, align 4
  %13 = alloca %struct.k_spinlock.13*, align 4
  %14 = alloca %union.anon.68, align 4
  %15 = alloca %struct.k_spinlock.13*, align 4
  %16 = alloca %union.anon.169*, align 4
  %17 = alloca i32, align 4
  %18 = alloca i8*, align 4
  %19 = alloca %struct.k_thread.180*, align 4
  %20 = alloca i8, align 1
  %21 = alloca %union.anon.68, align 4
  %22 = alloca %union.anon.68, align 4
  store %union.anon.169* %0, %union.anon.169** %16, align 4
  call void @llvm.dbg.declare(metadata %union.anon.169** %16, metadata !16358, metadata !DIExpression()), !dbg !16359
  store i32 %1, i32* %17, align 4
  call void @llvm.dbg.declare(metadata i32* %17, metadata !16360, metadata !DIExpression()), !dbg !16361
  store i8* %2, i8** %18, align 4
  call void @llvm.dbg.declare(metadata i8** %18, metadata !16362, metadata !DIExpression()), !dbg !16363
  call void @llvm.dbg.declare(metadata %struct.k_thread.180** %19, metadata !16364, metadata !DIExpression()), !dbg !16365
  call void @llvm.dbg.declare(metadata i8* %20, metadata !16366, metadata !DIExpression()), !dbg !16367
  store i8 0, i8* %20, align 1, !dbg !16367
  call void @llvm.dbg.declare(metadata %union.anon.68* %21, metadata !16368, metadata !DIExpression()), !dbg !16370
  %23 = bitcast %union.anon.68* %21 to i8*, !dbg !16370
  call void @llvm.memset.p0i8.i32(i8* align 4 %23, i8 0, i32 4, i1 false), !dbg !16370
  call void @llvm.dbg.declare(metadata %union.anon.68* %22, metadata !16371, metadata !DIExpression()), !dbg !16370
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %15, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %15, metadata !12804, metadata !DIExpression()) #9, !dbg !16372
  %24 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %15, align 4, !dbg !16374
  call void @llvm.dbg.declare(metadata %union.anon.68* %14, metadata !12812, metadata !DIExpression()) #9, !dbg !16375
  call void @llvm.dbg.declare(metadata i32* %6, metadata !12814, metadata !DIExpression()) #9, !dbg !16376
  call void @llvm.dbg.declare(metadata i32* %7, metadata !12818, metadata !DIExpression()) #9, !dbg !16378
  %25 = call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #9, !dbg !16379, !srcloc !12821
  %26 = extractvalue { i32, i32 } %25, 0, !dbg !16379
  %27 = extractvalue { i32, i32 } %25, 1, !dbg !16379
  store i32 %26, i32* %6, align 4, !dbg !16379
  store i32 %27, i32* %7, align 4, !dbg !16379
  %28 = load i32, i32* %6, align 4, !dbg !16380
  %29 = getelementptr inbounds %union.anon.68, %union.anon.68* %14, i32 0, i32 0, !dbg !16381
  store i32 %28, i32* %29, align 4, !dbg !16382
  %30 = getelementptr inbounds %union.anon.68, %union.anon.68* %14, i32 0, i32 0, !dbg !16383
  %31 = load i32, i32* %30, align 4, !dbg !16383
  %32 = getelementptr inbounds %union.anon.68, %union.anon.68* %22, i32 0, i32 0, !dbg !16370
  store i32 %31, i32* %32, align 4, !dbg !16370
  br label %33, !dbg !16370

33:                                               ; preds = %63, %3
  %34 = getelementptr inbounds %union.anon.68, %union.anon.68* %21, i32 0, i32 0, !dbg !16384
  %35 = load i32, i32* %34, align 4, !dbg !16384
  %36 = icmp ne i32 %35, 0, !dbg !16384
  %37 = xor i1 %36, true, !dbg !16384
  br i1 %37, label %38, label %74, !dbg !16370

38:                                               ; preds = %33
  %39 = load %union.anon.169*, %union.anon.169** %16, align 4, !dbg !16386
  %40 = getelementptr inbounds %union.anon.169, %union.anon.169* %39, i32 0, i32 0, !dbg !16388
  %41 = call %struct.k_thread.180* @z_priq_dumb_best(%struct._dnode.168* noundef %40) #10, !dbg !16389
  store %struct.k_thread.180* %41, %struct.k_thread.180** %19, align 4, !dbg !16390
  %42 = load %struct.k_thread.180*, %struct.k_thread.180** %19, align 4, !dbg !16391
  %43 = icmp ne %struct.k_thread.180* %42, null, !dbg !16393
  br i1 %43, label %44, label %62, !dbg !16394

44:                                               ; preds = %38
  %45 = load %struct.k_thread.180*, %struct.k_thread.180** %19, align 4, !dbg !16395
  %46 = load i32, i32* %17, align 4, !dbg !16397
  %47 = load i8*, i8** %18, align 4, !dbg !16398
  store %struct.k_thread.180* %45, %struct.k_thread.180** %8, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.180** %8, metadata !16399, metadata !DIExpression()) #9, !dbg !16404
  store i32 %46, i32* %9, align 4
  call void @llvm.dbg.declare(metadata i32* %9, metadata !16406, metadata !DIExpression()) #9, !dbg !16407
  store i8* %47, i8** %10, align 4
  call void @llvm.dbg.declare(metadata i8** %10, metadata !16408, metadata !DIExpression()) #9, !dbg !16409
  %48 = load %struct.k_thread.180*, %struct.k_thread.180** %8, align 4, !dbg !16410
  %49 = load i32, i32* %9, align 4, !dbg !16411
  store %struct.k_thread.180* %48, %struct.k_thread.180** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.180** %4, metadata !16237, metadata !DIExpression()), !dbg !16412
  store i32 %49, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !16243, metadata !DIExpression()), !dbg !16414
  %50 = load i32, i32* %5, align 4, !dbg !16415
  %51 = load %struct.k_thread.180*, %struct.k_thread.180** %4, align 4, !dbg !16416
  %52 = getelementptr inbounds %struct.k_thread.180, %struct.k_thread.180* %51, i32 0, i32 6, !dbg !16417
  %53 = getelementptr inbounds %struct._thread_arch.15, %struct._thread_arch.15* %52, i32 0, i32 1, !dbg !16418
  store i32 %50, i32* %53, align 4, !dbg !16419
  %54 = load i8*, i8** %10, align 4, !dbg !16420
  %55 = load %struct.k_thread.180*, %struct.k_thread.180** %8, align 4, !dbg !16421
  %56 = getelementptr inbounds %struct.k_thread.180, %struct.k_thread.180* %55, i32 0, i32 0, !dbg !16422
  %57 = getelementptr inbounds %struct._thread_base.173, %struct._thread_base.173* %56, i32 0, i32 6, !dbg !16423
  store i8* %54, i8** %57, align 4, !dbg !16424
  %58 = load %struct.k_thread.180*, %struct.k_thread.180** %19, align 4, !dbg !16425
  call void @unpend_thread_no_timeout(%struct.k_thread.180* noundef %58) #10, !dbg !16426
  %59 = load %struct.k_thread.180*, %struct.k_thread.180** %19, align 4, !dbg !16427
  %60 = call i32 @z_abort_thread_timeout(%struct.k_thread.180* noundef %59) #10, !dbg !16428
  %61 = load %struct.k_thread.180*, %struct.k_thread.180** %19, align 4, !dbg !16429
  call void @ready_thread(%struct.k_thread.180* noundef %61) #10, !dbg !16430
  store i8 1, i8* %20, align 1, !dbg !16431
  br label %62, !dbg !16432

62:                                               ; preds = %44, %38
  br label %63, !dbg !16433

63:                                               ; preds = %62
  %64 = getelementptr inbounds %union.anon.68, %union.anon.68* %22, i32 0, i32 0, !dbg !16384
  %65 = bitcast i32* %64 to [1 x i32]*, !dbg !16384
  %66 = load [1 x i32], [1 x i32]* %65, align 4, !dbg !16384
  %67 = getelementptr inbounds %union.anon.68, %union.anon.68* %12, i32 0, i32 0
  %68 = bitcast i32* %67 to [1 x i32]*
  store [1 x i32] %66, [1 x i32]* %68, align 4
  store %struct.k_spinlock.13* @sched_spinlock, %struct.k_spinlock.13** %13, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %13, metadata !12846, metadata !DIExpression()) #9, !dbg !16434
  call void @llvm.dbg.declare(metadata %union.anon.68* %12, metadata !12852, metadata !DIExpression()) #9, !dbg !16436
  %69 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %13, align 4, !dbg !16437
  %70 = getelementptr inbounds %union.anon.68, %union.anon.68* %12, i32 0, i32 0, !dbg !16438
  %71 = load i32, i32* %70, align 4, !dbg !16438
  store i32 %71, i32* %11, align 4
  call void @llvm.dbg.declare(metadata i32* %11, metadata !12856, metadata !DIExpression()) #9, !dbg !16439
  %72 = load i32, i32* %11, align 4, !dbg !16441
  call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %72) #9, !dbg !16442, !srcloc !12862
  %73 = getelementptr inbounds %union.anon.68, %union.anon.68* %21, i32 0, i32 0, !dbg !16384
  store i32 1, i32* %73, align 4, !dbg !16384
  br label %33, !dbg !16384, !llvm.loop !16443

74:                                               ; preds = %33
  %75 = load i8, i8* %20, align 1, !dbg !16445
  %76 = trunc i8 %75 to i1, !dbg !16445
  ret i1 %76, !dbg !16446
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @z_sched_wait(%struct.k_spinlock.13* noundef %0, [1 x i32] %1, %union.anon.169* noundef %2, [1 x i64] %3, i8** noundef %4) #1 !dbg !16447 {
  %6 = alloca %union.anon.68, align 4
  %7 = alloca %union.argument_value, align 8
  %8 = alloca %struct.k_spinlock.13*, align 4
  %9 = alloca %union.anon.169*, align 4
  %10 = alloca i8**, align 4
  %11 = alloca i32, align 4
  %12 = getelementptr inbounds %union.anon.68, %union.anon.68* %6, i32 0, i32 0
  %13 = bitcast i32* %12 to [1 x i32]*
  store [1 x i32] %1, [1 x i32]* %13, align 4
  %14 = getelementptr inbounds %union.argument_value, %union.argument_value* %7, i32 0, i32 0
  %15 = bitcast i64* %14 to [1 x i64]*
  store [1 x i64] %3, [1 x i64]* %15, align 8
  store %struct.k_spinlock.13* %0, %struct.k_spinlock.13** %8, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %8, metadata !16451, metadata !DIExpression()), !dbg !16452
  call void @llvm.dbg.declare(metadata %union.anon.68* %6, metadata !16453, metadata !DIExpression()), !dbg !16454
  store %union.anon.169* %2, %union.anon.169** %9, align 4
  call void @llvm.dbg.declare(metadata %union.anon.169** %9, metadata !16455, metadata !DIExpression()), !dbg !16456
  call void @llvm.dbg.declare(metadata %union.argument_value* %7, metadata !16457, metadata !DIExpression()), !dbg !16458
  store i8** %4, i8*** %10, align 4
  call void @llvm.dbg.declare(metadata i8*** %10, metadata !16459, metadata !DIExpression()), !dbg !16460
  call void @llvm.dbg.declare(metadata i32* %11, metadata !16461, metadata !DIExpression()), !dbg !16462
  %16 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %8, align 4, !dbg !16463
  %17 = load %union.anon.169*, %union.anon.169** %9, align 4, !dbg !16464
  %18 = getelementptr inbounds %union.anon.68, %union.anon.68* %6, i32 0, i32 0, !dbg !16465
  %19 = bitcast i32* %18 to [1 x i32]*, !dbg !16465
  %20 = load [1 x i32], [1 x i32]* %19, align 4, !dbg !16465
  %21 = getelementptr inbounds %union.argument_value, %union.argument_value* %7, i32 0, i32 0, !dbg !16465
  %22 = bitcast i64* %21 to [1 x i64]*, !dbg !16465
  %23 = load [1 x i64], [1 x i64]* %22, align 8, !dbg !16465
  %24 = call i32 @z_pend_curr(%struct.k_spinlock.13* noundef %16, [1 x i32] %20, %union.anon.169* noundef %17, [1 x i64] %23) #10, !dbg !16465
  store i32 %24, i32* %11, align 4, !dbg !16462
  %25 = load i8**, i8*** %10, align 4, !dbg !16466
  %26 = icmp ne i8** %25, null, !dbg !16468
  br i1 %26, label %27, label %33, !dbg !16469

27:                                               ; preds = %5
  %28 = load %struct.k_thread.180*, %struct.k_thread.180** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16470
  %29 = getelementptr inbounds %struct.k_thread.180, %struct.k_thread.180* %28, i32 0, i32 0, !dbg !16472
  %30 = getelementptr inbounds %struct._thread_base.173, %struct._thread_base.173* %29, i32 0, i32 6, !dbg !16473
  %31 = load i8*, i8** %30, align 4, !dbg !16473
  %32 = load i8**, i8*** %10, align 4, !dbg !16474
  store i8* %31, i8** %32, align 4, !dbg !16475
  br label %33, !dbg !16476

33:                                               ; preds = %27, %5
  %34 = load i32, i32* %11, align 4, !dbg !16477
  ret i32 %34, !dbg !16478
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_data_copy() #1 !dbg !16479 {
  call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_load_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__data_region_end to i32), i32 ptrtoint ([0 x i8]* @__data_region_start to i32))) #10, !dbg !16481
  call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_load_start, i32 0, i32 0), i32 noundef ptrtoint ([0 x i8]* @__ramfunc_size to i32)) #10, !dbg !16482
  ret void, !dbg !16483
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_add_timeout(%struct._timeout.172* noundef %0, void (%struct._timeout.172*)* noundef %1, [1 x i64] %2) #1 !dbg !16484 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca %union.anon.68, align 4
  %8 = alloca %struct.k_spinlock.13*, align 4
  %9 = alloca %union.anon.68, align 4
  %10 = alloca %struct.k_spinlock.13*, align 4
  %11 = alloca %union.argument_value, align 8
  %12 = alloca %struct._timeout.172*, align 4
  %13 = alloca void (%struct._timeout.172*)*, align 4
  %14 = alloca %union.argument_value, align 8
  %15 = alloca %union.anon.68, align 4
  %16 = alloca %union.anon.68, align 4
  %17 = alloca %struct._timeout.172*, align 4
  %18 = alloca i64, align 8
  %19 = alloca i32, align 4
  %20 = getelementptr inbounds %union.argument_value, %union.argument_value* %11, i32 0, i32 0
  %21 = bitcast i64* %20 to [1 x i64]*
  store [1 x i64] %2, [1 x i64]* %21, align 8
  store %struct._timeout.172* %0, %struct._timeout.172** %12, align 4
  call void @llvm.dbg.declare(metadata %struct._timeout.172** %12, metadata !16491, metadata !DIExpression()), !dbg !16492
  store void (%struct._timeout.172*)* %1, void (%struct._timeout.172*)** %13, align 4
  call void @llvm.dbg.declare(metadata void (%struct._timeout.172*)** %13, metadata !16493, metadata !DIExpression()), !dbg !16494
  call void @llvm.dbg.declare(metadata %union.argument_value* %11, metadata !16495, metadata !DIExpression()), !dbg !16496
  %22 = getelementptr inbounds %union.argument_value, %union.argument_value* %11, i32 0, i32 0, !dbg !16497
  %23 = load i64, i64* %22, align 8, !dbg !16497
  %24 = getelementptr inbounds %union.argument_value, %union.argument_value* %14, i32 0, i32 0, !dbg !16497
  store i64 -1, i64* %24, align 8, !dbg !16497
  %25 = icmp eq i64 %23, -1, !dbg !16497
  br i1 %25, label %26, label %27, !dbg !16499

26:                                               ; preds = %3
  br label %144, !dbg !16500

27:                                               ; preds = %3
  %28 = load void (%struct._timeout.172*)*, void (%struct._timeout.172*)** %13, align 4, !dbg !16502
  %29 = load %struct._timeout.172*, %struct._timeout.172** %12, align 4, !dbg !16503
  %30 = getelementptr inbounds %struct._timeout.172, %struct._timeout.172* %29, i32 0, i32 1, !dbg !16504
  store void (%struct._timeout.172*)* %28, void (%struct._timeout.172*)** %30, align 8, !dbg !16505
  call void @llvm.dbg.declare(metadata %union.anon.68* %15, metadata !16506, metadata !DIExpression()), !dbg !16512
  %31 = bitcast %union.anon.68* %15 to i8*, !dbg !16512
  call void @llvm.memset.p0i8.i32(i8* align 4 %31, i8 0, i32 4, i1 false), !dbg !16512
  call void @llvm.dbg.declare(metadata %union.anon.68* %16, metadata !16513, metadata !DIExpression()), !dbg !16512
  store %struct.k_spinlock.13* @timeout_lock, %struct.k_spinlock.13** %10, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %10, metadata !16514, metadata !DIExpression()) #9, !dbg !16519
  %32 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %10, align 4, !dbg !16521
  call void @llvm.dbg.declare(metadata %union.anon.68* %9, metadata !16522, metadata !DIExpression()) #9, !dbg !16523
  call void @llvm.dbg.declare(metadata i32* %5, metadata !16524, metadata !DIExpression()) #9, !dbg !16526
  call void @llvm.dbg.declare(metadata i32* %6, metadata !16528, metadata !DIExpression()) #9, !dbg !16529
  %33 = call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #9, !dbg !16530, !srcloc !16531
  %34 = extractvalue { i32, i32 } %33, 0, !dbg !16530
  %35 = extractvalue { i32, i32 } %33, 1, !dbg !16530
  store i32 %34, i32* %5, align 4, !dbg !16530
  store i32 %35, i32* %6, align 4, !dbg !16530
  %36 = load i32, i32* %5, align 4, !dbg !16532
  %37 = getelementptr inbounds %union.anon.68, %union.anon.68* %9, i32 0, i32 0, !dbg !16533
  store i32 %36, i32* %37, align 4, !dbg !16534
  %38 = getelementptr inbounds %union.anon.68, %union.anon.68* %9, i32 0, i32 0, !dbg !16535
  %39 = load i32, i32* %38, align 4, !dbg !16535
  %40 = getelementptr inbounds %union.anon.68, %union.anon.68* %16, i32 0, i32 0, !dbg !16512
  store i32 %39, i32* %40, align 4, !dbg !16512
  br label %41, !dbg !16512

41:                                               ; preds = %133, %27
  %42 = getelementptr inbounds %union.anon.68, %union.anon.68* %15, i32 0, i32 0, !dbg !16536
  %43 = load i32, i32* %42, align 4, !dbg !16536
  %44 = icmp ne i32 %43, 0, !dbg !16536
  %45 = xor i1 %44, true, !dbg !16536
  br i1 %45, label %46, label %144, !dbg !16512

46:                                               ; preds = %41
  call void @llvm.dbg.declare(metadata %struct._timeout.172** %17, metadata !16538, metadata !DIExpression()), !dbg !16540
  %47 = getelementptr inbounds %union.argument_value, %union.argument_value* %11, i32 0, i32 0, !dbg !16541
  %48 = load i64, i64* %47, align 8, !dbg !16541
  %49 = sub nsw i64 -2, %48, !dbg !16541
  %50 = icmp sge i64 %49, 0, !dbg !16543
  br i1 %50, label %51, label %66, !dbg !16544

51:                                               ; preds = %46
  call void @llvm.dbg.declare(metadata i64* %18, metadata !16545, metadata !DIExpression()), !dbg !16547
  %52 = getelementptr inbounds %union.argument_value, %union.argument_value* %11, i32 0, i32 0, !dbg !16548
  %53 = load i64, i64* %52, align 8, !dbg !16548
  %54 = sub nsw i64 -2, %53, !dbg !16548
  %55 = load i64, i64* @curr_tick, align 8, !dbg !16549
  %56 = sub i64 %54, %55, !dbg !16550
  store i64 %56, i64* %18, align 8, !dbg !16547
  %57 = load i64, i64* %18, align 8, !dbg !16551
  %58 = icmp sgt i64 1, %57, !dbg !16551
  br i1 %58, label %59, label %60, !dbg !16551

59:                                               ; preds = %51
  br label %62, !dbg !16551

60:                                               ; preds = %51
  %61 = load i64, i64* %18, align 8, !dbg !16551
  br label %62, !dbg !16551

62:                                               ; preds = %60, %59
  %63 = phi i64 [ 1, %59 ], [ %61, %60 ], !dbg !16551
  %64 = load %struct._timeout.172*, %struct._timeout.172** %12, align 4, !dbg !16552
  %65 = getelementptr inbounds %struct._timeout.172, %struct._timeout.172* %64, i32 0, i32 2, !dbg !16553
  store i64 %63, i64* %65, align 8, !dbg !16554
  br label %75, !dbg !16555

66:                                               ; preds = %46
  %67 = getelementptr inbounds %union.argument_value, %union.argument_value* %11, i32 0, i32 0, !dbg !16556
  %68 = load i64, i64* %67, align 8, !dbg !16556
  %69 = add nsw i64 %68, 1, !dbg !16558
  %70 = call i32 @elapsed.104() #10, !dbg !16559
  %71 = sext i32 %70 to i64, !dbg !16559
  %72 = add nsw i64 %69, %71, !dbg !16560
  %73 = load %struct._timeout.172*, %struct._timeout.172** %12, align 4, !dbg !16561
  %74 = getelementptr inbounds %struct._timeout.172, %struct._timeout.172* %73, i32 0, i32 2, !dbg !16562
  store i64 %72, i64* %74, align 8, !dbg !16563
  br label %75

75:                                               ; preds = %66, %62
  %76 = call %struct._timeout.172* @first() #10, !dbg !16564
  store %struct._timeout.172* %76, %struct._timeout.172** %17, align 4, !dbg !16566
  br label %77, !dbg !16567

77:                                               ; preds = %108, %75
  %78 = load %struct._timeout.172*, %struct._timeout.172** %17, align 4, !dbg !16568
  %79 = icmp ne %struct._timeout.172* %78, null, !dbg !16570
  br i1 %79, label %80, label %111, !dbg !16571

80:                                               ; preds = %77
  %81 = load %struct._timeout.172*, %struct._timeout.172** %17, align 4, !dbg !16572
  %82 = getelementptr inbounds %struct._timeout.172, %struct._timeout.172* %81, i32 0, i32 2, !dbg !16575
  %83 = load i64, i64* %82, align 8, !dbg !16575
  %84 = load %struct._timeout.172*, %struct._timeout.172** %12, align 4, !dbg !16576
  %85 = getelementptr inbounds %struct._timeout.172, %struct._timeout.172* %84, i32 0, i32 2, !dbg !16577
  %86 = load i64, i64* %85, align 8, !dbg !16577
  %87 = icmp sgt i64 %83, %86, !dbg !16578
  br i1 %87, label %88, label %100, !dbg !16579

88:                                               ; preds = %80
  %89 = load %struct._timeout.172*, %struct._timeout.172** %12, align 4, !dbg !16580
  %90 = getelementptr inbounds %struct._timeout.172, %struct._timeout.172* %89, i32 0, i32 2, !dbg !16582
  %91 = load i64, i64* %90, align 8, !dbg !16582
  %92 = load %struct._timeout.172*, %struct._timeout.172** %17, align 4, !dbg !16583
  %93 = getelementptr inbounds %struct._timeout.172, %struct._timeout.172* %92, i32 0, i32 2, !dbg !16584
  %94 = load i64, i64* %93, align 8, !dbg !16585
  %95 = sub nsw i64 %94, %91, !dbg !16585
  store i64 %95, i64* %93, align 8, !dbg !16585
  %96 = load %struct._timeout.172*, %struct._timeout.172** %17, align 4, !dbg !16586
  %97 = getelementptr inbounds %struct._timeout.172, %struct._timeout.172* %96, i32 0, i32 0, !dbg !16587
  %98 = load %struct._timeout.172*, %struct._timeout.172** %12, align 4, !dbg !16588
  %99 = getelementptr inbounds %struct._timeout.172, %struct._timeout.172* %98, i32 0, i32 0, !dbg !16589
  call void @sys_dlist_insert.105(%struct._dnode.168* noundef %97, %struct._dnode.168* noundef %99) #10, !dbg !16590
  br label %111, !dbg !16591

100:                                              ; preds = %80
  %101 = load %struct._timeout.172*, %struct._timeout.172** %17, align 4, !dbg !16592
  %102 = getelementptr inbounds %struct._timeout.172, %struct._timeout.172* %101, i32 0, i32 2, !dbg !16593
  %103 = load i64, i64* %102, align 8, !dbg !16593
  %104 = load %struct._timeout.172*, %struct._timeout.172** %12, align 4, !dbg !16594
  %105 = getelementptr inbounds %struct._timeout.172, %struct._timeout.172* %104, i32 0, i32 2, !dbg !16595
  %106 = load i64, i64* %105, align 8, !dbg !16596
  %107 = sub nsw i64 %106, %103, !dbg !16596
  store i64 %107, i64* %105, align 8, !dbg !16596
  br label %108, !dbg !16597

108:                                              ; preds = %100
  %109 = load %struct._timeout.172*, %struct._timeout.172** %17, align 4, !dbg !16598
  %110 = call %struct._timeout.172* @next(%struct._timeout.172* noundef %109) #10, !dbg !16599
  store %struct._timeout.172* %110, %struct._timeout.172** %17, align 4, !dbg !16600
  br label %77, !dbg !16601, !llvm.loop !16602

111:                                              ; preds = %88, %77
  %112 = load %struct._timeout.172*, %struct._timeout.172** %17, align 4, !dbg !16604
  %113 = icmp eq %struct._timeout.172* %112, null, !dbg !16606
  br i1 %113, label %114, label %117, !dbg !16607

114:                                              ; preds = %111
  %115 = load %struct._timeout.172*, %struct._timeout.172** %12, align 4, !dbg !16608
  %116 = getelementptr inbounds %struct._timeout.172, %struct._timeout.172* %115, i32 0, i32 0, !dbg !16610
  call void @sys_dlist_append.106(%struct._dnode.168* noundef @timeout_list, %struct._dnode.168* noundef %116) #10, !dbg !16611
  br label %117, !dbg !16612

117:                                              ; preds = %114, %111
  %118 = load %struct._timeout.172*, %struct._timeout.172** %12, align 4, !dbg !16613
  %119 = call %struct._timeout.172* @first() #10, !dbg !16615
  %120 = icmp eq %struct._timeout.172* %118, %119, !dbg !16616
  br i1 %120, label %121, label %132, !dbg !16617

121:                                              ; preds = %117
  call void @llvm.dbg.declare(metadata i32* %19, metadata !16618, metadata !DIExpression()), !dbg !16620
  %122 = call i32 @next_timeout() #10, !dbg !16621
  store i32 %122, i32* %19, align 4, !dbg !16620
  %123 = load i32, i32* %19, align 4, !dbg !16622
  %124 = icmp eq i32 %123, 0, !dbg !16624
  br i1 %124, label %129, label %125, !dbg !16625

125:                                              ; preds = %121
  %126 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !16626
  %127 = load i32, i32* %19, align 4, !dbg !16627
  %128 = icmp ne i32 %126, %127, !dbg !16628
  br i1 %128, label %129, label %131, !dbg !16629

129:                                              ; preds = %125, %121
  %130 = load i32, i32* %19, align 4, !dbg !16630
  call void @sys_clock_set_timeout(i32 noundef %130, i1 noundef zeroext false) #10, !dbg !16632
  br label %131, !dbg !16633

131:                                              ; preds = %129, %125
  br label %132, !dbg !16634

132:                                              ; preds = %131, %117
  br label %133, !dbg !16635

133:                                              ; preds = %132
  %134 = getelementptr inbounds %union.anon.68, %union.anon.68* %16, i32 0, i32 0, !dbg !16536
  %135 = bitcast i32* %134 to [1 x i32]*, !dbg !16536
  %136 = load [1 x i32], [1 x i32]* %135, align 4, !dbg !16536
  %137 = getelementptr inbounds %union.anon.68, %union.anon.68* %7, i32 0, i32 0
  %138 = bitcast i32* %137 to [1 x i32]*
  store [1 x i32] %136, [1 x i32]* %138, align 4
  store %struct.k_spinlock.13* @timeout_lock, %struct.k_spinlock.13** %8, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %8, metadata !16636, metadata !DIExpression()) #9, !dbg !16640
  call void @llvm.dbg.declare(metadata %union.anon.68* %7, metadata !16642, metadata !DIExpression()) #9, !dbg !16643
  %139 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %8, align 4, !dbg !16644
  %140 = getelementptr inbounds %union.anon.68, %union.anon.68* %7, i32 0, i32 0, !dbg !16645
  %141 = load i32, i32* %140, align 4, !dbg !16645
  store i32 %141, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !16646, metadata !DIExpression()) #9, !dbg !16648
  %142 = load i32, i32* %4, align 4, !dbg !16650
  call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %142) #9, !dbg !16651, !srcloc !16652
  %143 = getelementptr inbounds %union.anon.68, %union.anon.68* %15, i32 0, i32 0, !dbg !16536
  store i32 1, i32* %143, align 4, !dbg !16536
  br label %41, !dbg !16536, !llvm.loop !16653

144:                                              ; preds = %26, %41
  ret void, !dbg !16655
}

; Function Attrs: noinline nounwind optnone
define internal i32 @elapsed.104() #1 !dbg !16656 {
  %1 = load i32, i32* @announce_remaining, align 4, !dbg !16659
  %2 = icmp eq i32 %1, 0, !dbg !16660
  br i1 %2, label %3, label %5, !dbg !16659

3:                                                ; preds = %0
  %4 = call i32 @sys_clock_elapsed() #10, !dbg !16661
  br label %6, !dbg !16659

5:                                                ; preds = %0
  br label %6, !dbg !16659

6:                                                ; preds = %5, %3
  %7 = phi i32 [ %4, %3 ], [ 0, %5 ], !dbg !16659
  ret i32 %7, !dbg !16662
}

; Function Attrs: noinline nounwind optnone
define internal %struct._timeout.172* @first() #1 !dbg !16663 {
  %1 = alloca %struct._dnode.168*, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.168** %1, metadata !16666, metadata !DIExpression()), !dbg !16668
  %2 = call %struct._dnode.168* @sys_dlist_peek_head.109(%struct._dnode.168* noundef @timeout_list) #10, !dbg !16669
  store %struct._dnode.168* %2, %struct._dnode.168** %1, align 4, !dbg !16668
  %3 = load %struct._dnode.168*, %struct._dnode.168** %1, align 4, !dbg !16670
  %4 = icmp eq %struct._dnode.168* %3, null, !dbg !16671
  br i1 %4, label %5, label %6, !dbg !16670

5:                                                ; preds = %0
  br label %11, !dbg !16670

6:                                                ; preds = %0
  %7 = load %struct._dnode.168*, %struct._dnode.168** %1, align 4, !dbg !16672
  %8 = bitcast %struct._dnode.168* %7 to i8*, !dbg !16672
  %9 = getelementptr inbounds i8, i8* %8, i32 0, !dbg !16672
  %10 = bitcast i8* %9 to %struct._timeout.172*, !dbg !16672
  br label %11, !dbg !16670

11:                                               ; preds = %6, %5
  %12 = phi %struct._timeout.172* [ null, %5 ], [ %10, %6 ], !dbg !16670
  ret %struct._timeout.172* %12, !dbg !16673
}

; Function Attrs: noinline nounwind optnone
define internal void @sys_dlist_insert.105(%struct._dnode.168* noundef %0, %struct._dnode.168* noundef %1) #1 !dbg !16674 {
  %3 = alloca %struct._dnode.168*, align 4
  %4 = alloca %struct._dnode.168*, align 4
  %5 = alloca %struct._dnode.168*, align 4
  store %struct._dnode.168* %0, %struct._dnode.168** %3, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.168** %3, metadata !16677, metadata !DIExpression()), !dbg !16678
  store %struct._dnode.168* %1, %struct._dnode.168** %4, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.168** %4, metadata !16679, metadata !DIExpression()), !dbg !16680
  call void @llvm.dbg.declare(metadata %struct._dnode.168** %5, metadata !16681, metadata !DIExpression()), !dbg !16683
  %6 = load %struct._dnode.168*, %struct._dnode.168** %3, align 4, !dbg !16684
  %7 = getelementptr inbounds %struct._dnode.168, %struct._dnode.168* %6, i32 0, i32 1, !dbg !16685
  %8 = bitcast %union.anon.0.166* %7 to %struct._dnode.168**, !dbg !16685
  %9 = load %struct._dnode.168*, %struct._dnode.168** %8, align 4, !dbg !16685
  store %struct._dnode.168* %9, %struct._dnode.168** %5, align 4, !dbg !16683
  %10 = load %struct._dnode.168*, %struct._dnode.168** %5, align 4, !dbg !16686
  %11 = load %struct._dnode.168*, %struct._dnode.168** %4, align 4, !dbg !16687
  %12 = getelementptr inbounds %struct._dnode.168, %struct._dnode.168* %11, i32 0, i32 1, !dbg !16688
  %13 = bitcast %union.anon.0.166* %12 to %struct._dnode.168**, !dbg !16688
  store %struct._dnode.168* %10, %struct._dnode.168** %13, align 4, !dbg !16689
  %14 = load %struct._dnode.168*, %struct._dnode.168** %3, align 4, !dbg !16690
  %15 = load %struct._dnode.168*, %struct._dnode.168** %4, align 4, !dbg !16691
  %16 = getelementptr inbounds %struct._dnode.168, %struct._dnode.168* %15, i32 0, i32 0, !dbg !16692
  %17 = bitcast %union.anon.0.166* %16 to %struct._dnode.168**, !dbg !16692
  store %struct._dnode.168* %14, %struct._dnode.168** %17, align 4, !dbg !16693
  %18 = load %struct._dnode.168*, %struct._dnode.168** %4, align 4, !dbg !16694
  %19 = load %struct._dnode.168*, %struct._dnode.168** %5, align 4, !dbg !16695
  %20 = getelementptr inbounds %struct._dnode.168, %struct._dnode.168* %19, i32 0, i32 0, !dbg !16696
  %21 = bitcast %union.anon.0.166* %20 to %struct._dnode.168**, !dbg !16696
  store %struct._dnode.168* %18, %struct._dnode.168** %21, align 4, !dbg !16697
  %22 = load %struct._dnode.168*, %struct._dnode.168** %4, align 4, !dbg !16698
  %23 = load %struct._dnode.168*, %struct._dnode.168** %3, align 4, !dbg !16699
  %24 = getelementptr inbounds %struct._dnode.168, %struct._dnode.168* %23, i32 0, i32 1, !dbg !16700
  %25 = bitcast %union.anon.0.166* %24 to %struct._dnode.168**, !dbg !16700
  store %struct._dnode.168* %22, %struct._dnode.168** %25, align 4, !dbg !16701
  ret void, !dbg !16702
}

; Function Attrs: noinline nounwind optnone
define internal %struct._timeout.172* @next(%struct._timeout.172* noundef %0) #1 !dbg !16703 {
  %2 = alloca %struct._timeout.172*, align 4
  %3 = alloca %struct._dnode.168*, align 4
  store %struct._timeout.172* %0, %struct._timeout.172** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._timeout.172** %2, metadata !16706, metadata !DIExpression()), !dbg !16707
  call void @llvm.dbg.declare(metadata %struct._dnode.168** %3, metadata !16708, metadata !DIExpression()), !dbg !16709
  %4 = load %struct._timeout.172*, %struct._timeout.172** %2, align 4, !dbg !16710
  %5 = getelementptr inbounds %struct._timeout.172, %struct._timeout.172* %4, i32 0, i32 0, !dbg !16711
  %6 = call %struct._dnode.168* @sys_dlist_peek_next.107(%struct._dnode.168* noundef @timeout_list, %struct._dnode.168* noundef %5) #10, !dbg !16712
  store %struct._dnode.168* %6, %struct._dnode.168** %3, align 4, !dbg !16709
  %7 = load %struct._dnode.168*, %struct._dnode.168** %3, align 4, !dbg !16713
  %8 = icmp eq %struct._dnode.168* %7, null, !dbg !16714
  br i1 %8, label %9, label %10, !dbg !16713

9:                                                ; preds = %1
  br label %15, !dbg !16713

10:                                               ; preds = %1
  %11 = load %struct._dnode.168*, %struct._dnode.168** %3, align 4, !dbg !16715
  %12 = bitcast %struct._dnode.168* %11 to i8*, !dbg !16715
  %13 = getelementptr inbounds i8, i8* %12, i32 0, !dbg !16715
  %14 = bitcast i8* %13 to %struct._timeout.172*, !dbg !16715
  br label %15, !dbg !16713

15:                                               ; preds = %10, %9
  %16 = phi %struct._timeout.172* [ null, %9 ], [ %14, %10 ], !dbg !16713
  ret %struct._timeout.172* %16, !dbg !16716
}

; Function Attrs: noinline nounwind optnone
define internal void @sys_dlist_append.106(%struct._dnode.168* noundef %0, %struct._dnode.168* noundef %1) #1 !dbg !16717 {
  %3 = alloca %struct._dnode.168*, align 4
  %4 = alloca %struct._dnode.168*, align 4
  %5 = alloca %struct._dnode.168*, align 4
  store %struct._dnode.168* %0, %struct._dnode.168** %3, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.168** %3, metadata !16721, metadata !DIExpression()), !dbg !16722
  store %struct._dnode.168* %1, %struct._dnode.168** %4, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.168** %4, metadata !16723, metadata !DIExpression()), !dbg !16724
  call void @llvm.dbg.declare(metadata %struct._dnode.168** %5, metadata !16725, metadata !DIExpression()), !dbg !16726
  %6 = load %struct._dnode.168*, %struct._dnode.168** %3, align 4, !dbg !16727
  %7 = getelementptr inbounds %struct._dnode.168, %struct._dnode.168* %6, i32 0, i32 1, !dbg !16728
  %8 = bitcast %union.anon.0.166* %7 to %struct._dnode.168**, !dbg !16728
  %9 = load %struct._dnode.168*, %struct._dnode.168** %8, align 4, !dbg !16728
  store %struct._dnode.168* %9, %struct._dnode.168** %5, align 4, !dbg !16726
  %10 = load %struct._dnode.168*, %struct._dnode.168** %3, align 4, !dbg !16729
  %11 = load %struct._dnode.168*, %struct._dnode.168** %4, align 4, !dbg !16730
  %12 = getelementptr inbounds %struct._dnode.168, %struct._dnode.168* %11, i32 0, i32 0, !dbg !16731
  %13 = bitcast %union.anon.0.166* %12 to %struct._dnode.168**, !dbg !16731
  store %struct._dnode.168* %10, %struct._dnode.168** %13, align 4, !dbg !16732
  %14 = load %struct._dnode.168*, %struct._dnode.168** %5, align 4, !dbg !16733
  %15 = load %struct._dnode.168*, %struct._dnode.168** %4, align 4, !dbg !16734
  %16 = getelementptr inbounds %struct._dnode.168, %struct._dnode.168* %15, i32 0, i32 1, !dbg !16735
  %17 = bitcast %union.anon.0.166* %16 to %struct._dnode.168**, !dbg !16735
  store %struct._dnode.168* %14, %struct._dnode.168** %17, align 4, !dbg !16736
  %18 = load %struct._dnode.168*, %struct._dnode.168** %4, align 4, !dbg !16737
  %19 = load %struct._dnode.168*, %struct._dnode.168** %5, align 4, !dbg !16738
  %20 = getelementptr inbounds %struct._dnode.168, %struct._dnode.168* %19, i32 0, i32 0, !dbg !16739
  %21 = bitcast %union.anon.0.166* %20 to %struct._dnode.168**, !dbg !16739
  store %struct._dnode.168* %18, %struct._dnode.168** %21, align 4, !dbg !16740
  %22 = load %struct._dnode.168*, %struct._dnode.168** %4, align 4, !dbg !16741
  %23 = load %struct._dnode.168*, %struct._dnode.168** %3, align 4, !dbg !16742
  %24 = getelementptr inbounds %struct._dnode.168, %struct._dnode.168* %23, i32 0, i32 1, !dbg !16743
  %25 = bitcast %union.anon.0.166* %24 to %struct._dnode.168**, !dbg !16743
  store %struct._dnode.168* %22, %struct._dnode.168** %25, align 4, !dbg !16744
  ret void, !dbg !16745
}

; Function Attrs: noinline nounwind optnone
define internal i32 @next_timeout() #1 !dbg !16746 {
  %1 = alloca %struct._timeout.172*, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata %struct._timeout.172** %1, metadata !16747, metadata !DIExpression()), !dbg !16748
  %4 = call %struct._timeout.172* @first() #10, !dbg !16749
  store %struct._timeout.172* %4, %struct._timeout.172** %1, align 4, !dbg !16748
  call void @llvm.dbg.declare(metadata i32* %2, metadata !16750, metadata !DIExpression()), !dbg !16751
  %5 = call i32 @elapsed.104() #10, !dbg !16752
  store i32 %5, i32* %2, align 4, !dbg !16751
  call void @llvm.dbg.declare(metadata i32* %3, metadata !16753, metadata !DIExpression()), !dbg !16754
  %6 = load %struct._timeout.172*, %struct._timeout.172** %1, align 4, !dbg !16755
  %7 = icmp eq %struct._timeout.172* %6, null, !dbg !16757
  br i1 %7, label %16, label %8, !dbg !16758

8:                                                ; preds = %0
  %9 = load %struct._timeout.172*, %struct._timeout.172** %1, align 4, !dbg !16759
  %10 = getelementptr inbounds %struct._timeout.172, %struct._timeout.172* %9, i32 0, i32 2, !dbg !16760
  %11 = load i64, i64* %10, align 8, !dbg !16760
  %12 = load i32, i32* %2, align 4, !dbg !16761
  %13 = sext i32 %12 to i64, !dbg !16761
  %14 = sub nsw i64 %11, %13, !dbg !16762
  %15 = icmp sgt i64 %14, 2147483647, !dbg !16763
  br i1 %15, label %16, label %17, !dbg !16764

16:                                               ; preds = %8, %0
  store i32 2147483647, i32* %3, align 4, !dbg !16765
  br label %36, !dbg !16767

17:                                               ; preds = %8
  %18 = load %struct._timeout.172*, %struct._timeout.172** %1, align 4, !dbg !16768
  %19 = getelementptr inbounds %struct._timeout.172, %struct._timeout.172* %18, i32 0, i32 2, !dbg !16768
  %20 = load i64, i64* %19, align 8, !dbg !16768
  %21 = load i32, i32* %2, align 4, !dbg !16768
  %22 = sext i32 %21 to i64, !dbg !16768
  %23 = sub nsw i64 %20, %22, !dbg !16768
  %24 = icmp sgt i64 0, %23, !dbg !16768
  br i1 %24, label %25, label %26, !dbg !16768

25:                                               ; preds = %17
  br label %33, !dbg !16768

26:                                               ; preds = %17
  %27 = load %struct._timeout.172*, %struct._timeout.172** %1, align 4, !dbg !16768
  %28 = getelementptr inbounds %struct._timeout.172, %struct._timeout.172* %27, i32 0, i32 2, !dbg !16768
  %29 = load i64, i64* %28, align 8, !dbg !16768
  %30 = load i32, i32* %2, align 4, !dbg !16768
  %31 = sext i32 %30 to i64, !dbg !16768
  %32 = sub nsw i64 %29, %31, !dbg !16768
  br label %33, !dbg !16768

33:                                               ; preds = %26, %25
  %34 = phi i64 [ 0, %25 ], [ %32, %26 ], !dbg !16768
  %35 = trunc i64 %34 to i32, !dbg !16768
  store i32 %35, i32* %3, align 4, !dbg !16770
  br label %36

36:                                               ; preds = %33, %16
  %37 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !16771
  %38 = icmp ne i32 %37, 0, !dbg !16773
  br i1 %38, label %39, label %45, !dbg !16774

39:                                               ; preds = %36
  %40 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !16775
  %41 = load i32, i32* %3, align 4, !dbg !16776
  %42 = icmp slt i32 %40, %41, !dbg !16777
  br i1 %42, label %43, label %45, !dbg !16778

43:                                               ; preds = %39
  %44 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !16779
  store i32 %44, i32* %3, align 4, !dbg !16781
  br label %45, !dbg !16782

45:                                               ; preds = %43, %39, %36
  %46 = load i32, i32* %3, align 4, !dbg !16783
  ret i32 %46, !dbg !16784
}

; Function Attrs: noinline nounwind optnone
define internal %struct._dnode.168* @sys_dlist_peek_next.107(%struct._dnode.168* noundef %0, %struct._dnode.168* noundef %1) #1 !dbg !16785 {
  %3 = alloca %struct._dnode.168*, align 4
  %4 = alloca %struct._dnode.168*, align 4
  store %struct._dnode.168* %0, %struct._dnode.168** %3, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.168** %3, metadata !16788, metadata !DIExpression()), !dbg !16789
  store %struct._dnode.168* %1, %struct._dnode.168** %4, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.168** %4, metadata !16790, metadata !DIExpression()), !dbg !16791
  %5 = load %struct._dnode.168*, %struct._dnode.168** %4, align 4, !dbg !16792
  %6 = icmp ne %struct._dnode.168* %5, null, !dbg !16793
  br i1 %6, label %7, label %11, !dbg !16794

7:                                                ; preds = %2
  %8 = load %struct._dnode.168*, %struct._dnode.168** %3, align 4, !dbg !16795
  %9 = load %struct._dnode.168*, %struct._dnode.168** %4, align 4, !dbg !16796
  %10 = call %struct._dnode.168* @sys_dlist_peek_next_no_check.108(%struct._dnode.168* noundef %8, %struct._dnode.168* noundef %9) #10, !dbg !16797
  br label %12, !dbg !16794

11:                                               ; preds = %2
  br label %12, !dbg !16794

12:                                               ; preds = %11, %7
  %13 = phi %struct._dnode.168* [ %10, %7 ], [ null, %11 ], !dbg !16794
  ret %struct._dnode.168* %13, !dbg !16798
}

; Function Attrs: noinline nounwind optnone
define internal %struct._dnode.168* @sys_dlist_peek_next_no_check.108(%struct._dnode.168* noundef %0, %struct._dnode.168* noundef %1) #1 !dbg !16799 {
  %3 = alloca %struct._dnode.168*, align 4
  %4 = alloca %struct._dnode.168*, align 4
  store %struct._dnode.168* %0, %struct._dnode.168** %3, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.168** %3, metadata !16800, metadata !DIExpression()), !dbg !16801
  store %struct._dnode.168* %1, %struct._dnode.168** %4, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.168** %4, metadata !16802, metadata !DIExpression()), !dbg !16803
  %5 = load %struct._dnode.168*, %struct._dnode.168** %4, align 4, !dbg !16804
  %6 = load %struct._dnode.168*, %struct._dnode.168** %3, align 4, !dbg !16805
  %7 = getelementptr inbounds %struct._dnode.168, %struct._dnode.168* %6, i32 0, i32 1, !dbg !16806
  %8 = bitcast %union.anon.0.166* %7 to %struct._dnode.168**, !dbg !16806
  %9 = load %struct._dnode.168*, %struct._dnode.168** %8, align 4, !dbg !16806
  %10 = icmp eq %struct._dnode.168* %5, %9, !dbg !16807
  br i1 %10, label %11, label %12, !dbg !16808

11:                                               ; preds = %2
  br label %17, !dbg !16808

12:                                               ; preds = %2
  %13 = load %struct._dnode.168*, %struct._dnode.168** %4, align 4, !dbg !16809
  %14 = getelementptr inbounds %struct._dnode.168, %struct._dnode.168* %13, i32 0, i32 0, !dbg !16810
  %15 = bitcast %union.anon.0.166* %14 to %struct._dnode.168**, !dbg !16810
  %16 = load %struct._dnode.168*, %struct._dnode.168** %15, align 4, !dbg !16810
  br label %17, !dbg !16808

17:                                               ; preds = %12, %11
  %18 = phi %struct._dnode.168* [ null, %11 ], [ %16, %12 ], !dbg !16808
  ret %struct._dnode.168* %18, !dbg !16811
}

; Function Attrs: noinline nounwind optnone
define internal %struct._dnode.168* @sys_dlist_peek_head.109(%struct._dnode.168* noundef %0) #1 !dbg !16812 {
  %2 = alloca %struct._dnode.168*, align 4
  store %struct._dnode.168* %0, %struct._dnode.168** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.168** %2, metadata !16815, metadata !DIExpression()), !dbg !16816
  %3 = load %struct._dnode.168*, %struct._dnode.168** %2, align 4, !dbg !16817
  %4 = call zeroext i1 @sys_dlist_is_empty.110(%struct._dnode.168* noundef %3) #10, !dbg !16818
  br i1 %4, label %5, label %6, !dbg !16818

5:                                                ; preds = %1
  br label %11, !dbg !16818

6:                                                ; preds = %1
  %7 = load %struct._dnode.168*, %struct._dnode.168** %2, align 4, !dbg !16819
  %8 = getelementptr inbounds %struct._dnode.168, %struct._dnode.168* %7, i32 0, i32 0, !dbg !16820
  %9 = bitcast %union.anon.0.166* %8 to %struct._dnode.168**, !dbg !16820
  %10 = load %struct._dnode.168*, %struct._dnode.168** %9, align 4, !dbg !16820
  br label %11, !dbg !16818

11:                                               ; preds = %6, %5
  %12 = phi %struct._dnode.168* [ null, %5 ], [ %10, %6 ], !dbg !16818
  ret %struct._dnode.168* %12, !dbg !16821
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @sys_dlist_is_empty.110(%struct._dnode.168* noundef %0) #1 !dbg !16822 {
  %2 = alloca %struct._dnode.168*, align 4
  store %struct._dnode.168* %0, %struct._dnode.168** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.168** %2, metadata !16825, metadata !DIExpression()), !dbg !16826
  %3 = load %struct._dnode.168*, %struct._dnode.168** %2, align 4, !dbg !16827
  %4 = getelementptr inbounds %struct._dnode.168, %struct._dnode.168* %3, i32 0, i32 0, !dbg !16828
  %5 = bitcast %union.anon.0.166* %4 to %struct._dnode.168**, !dbg !16828
  %6 = load %struct._dnode.168*, %struct._dnode.168** %5, align 4, !dbg !16828
  %7 = load %struct._dnode.168*, %struct._dnode.168** %2, align 4, !dbg !16829
  %8 = icmp eq %struct._dnode.168* %6, %7, !dbg !16830
  ret i1 %8, !dbg !16831
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @z_abort_timeout(%struct._timeout.172* noundef %0) #1 !dbg !16832 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca %union.anon.68, align 4
  %6 = alloca %struct.k_spinlock.13*, align 4
  %7 = alloca %union.anon.68, align 4
  %8 = alloca %struct.k_spinlock.13*, align 4
  %9 = alloca %struct._timeout.172*, align 4
  %10 = alloca i32, align 4
  %11 = alloca %union.anon.68, align 4
  %12 = alloca %union.anon.68, align 4
  store %struct._timeout.172* %0, %struct._timeout.172** %9, align 4
  call void @llvm.dbg.declare(metadata %struct._timeout.172** %9, metadata !16835, metadata !DIExpression()), !dbg !16836
  call void @llvm.dbg.declare(metadata i32* %10, metadata !16837, metadata !DIExpression()), !dbg !16838
  store i32 -22, i32* %10, align 4, !dbg !16838
  call void @llvm.dbg.declare(metadata %union.anon.68* %11, metadata !16839, metadata !DIExpression()), !dbg !16841
  %13 = bitcast %union.anon.68* %11 to i8*, !dbg !16841
  call void @llvm.memset.p0i8.i32(i8* align 4 %13, i8 0, i32 4, i1 false), !dbg !16841
  call void @llvm.dbg.declare(metadata %union.anon.68* %12, metadata !16842, metadata !DIExpression()), !dbg !16841
  store %struct.k_spinlock.13* @timeout_lock, %struct.k_spinlock.13** %8, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %8, metadata !16514, metadata !DIExpression()) #9, !dbg !16843
  %14 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %8, align 4, !dbg !16845
  call void @llvm.dbg.declare(metadata %union.anon.68* %7, metadata !16522, metadata !DIExpression()) #9, !dbg !16846
  call void @llvm.dbg.declare(metadata i32* %3, metadata !16524, metadata !DIExpression()) #9, !dbg !16847
  call void @llvm.dbg.declare(metadata i32* %4, metadata !16528, metadata !DIExpression()) #9, !dbg !16849
  %15 = call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #9, !dbg !16850, !srcloc !16531
  %16 = extractvalue { i32, i32 } %15, 0, !dbg !16850
  %17 = extractvalue { i32, i32 } %15, 1, !dbg !16850
  store i32 %16, i32* %3, align 4, !dbg !16850
  store i32 %17, i32* %4, align 4, !dbg !16850
  %18 = load i32, i32* %3, align 4, !dbg !16851
  %19 = getelementptr inbounds %union.anon.68, %union.anon.68* %7, i32 0, i32 0, !dbg !16852
  store i32 %18, i32* %19, align 4, !dbg !16853
  %20 = getelementptr inbounds %union.anon.68, %union.anon.68* %7, i32 0, i32 0, !dbg !16854
  %21 = load i32, i32* %20, align 4, !dbg !16854
  %22 = getelementptr inbounds %union.anon.68, %union.anon.68* %12, i32 0, i32 0, !dbg !16841
  store i32 %21, i32* %22, align 4, !dbg !16841
  br label %23, !dbg !16841

23:                                               ; preds = %35, %1
  %24 = getelementptr inbounds %union.anon.68, %union.anon.68* %11, i32 0, i32 0, !dbg !16855
  %25 = load i32, i32* %24, align 4, !dbg !16855
  %26 = icmp ne i32 %25, 0, !dbg !16855
  %27 = xor i1 %26, true, !dbg !16855
  br i1 %27, label %28, label %46, !dbg !16841

28:                                               ; preds = %23
  %29 = load %struct._timeout.172*, %struct._timeout.172** %9, align 4, !dbg !16857
  %30 = getelementptr inbounds %struct._timeout.172, %struct._timeout.172* %29, i32 0, i32 0, !dbg !16860
  %31 = call zeroext i1 @sys_dnode_is_linked.113(%struct._dnode.168* noundef %30) #10, !dbg !16861
  br i1 %31, label %32, label %34, !dbg !16862

32:                                               ; preds = %28
  %33 = load %struct._timeout.172*, %struct._timeout.172** %9, align 4, !dbg !16863
  call void @remove_timeout(%struct._timeout.172* noundef %33) #10, !dbg !16865
  store i32 0, i32* %10, align 4, !dbg !16866
  br label %34, !dbg !16867

34:                                               ; preds = %32, %28
  br label %35, !dbg !16868

35:                                               ; preds = %34
  %36 = getelementptr inbounds %union.anon.68, %union.anon.68* %12, i32 0, i32 0, !dbg !16855
  %37 = bitcast i32* %36 to [1 x i32]*, !dbg !16855
  %38 = load [1 x i32], [1 x i32]* %37, align 4, !dbg !16855
  %39 = getelementptr inbounds %union.anon.68, %union.anon.68* %5, i32 0, i32 0
  %40 = bitcast i32* %39 to [1 x i32]*
  store [1 x i32] %38, [1 x i32]* %40, align 4
  store %struct.k_spinlock.13* @timeout_lock, %struct.k_spinlock.13** %6, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %6, metadata !16636, metadata !DIExpression()) #9, !dbg !16869
  call void @llvm.dbg.declare(metadata %union.anon.68* %5, metadata !16642, metadata !DIExpression()) #9, !dbg !16871
  %41 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %6, align 4, !dbg !16872
  %42 = getelementptr inbounds %union.anon.68, %union.anon.68* %5, i32 0, i32 0, !dbg !16873
  %43 = load i32, i32* %42, align 4, !dbg !16873
  store i32 %43, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !16646, metadata !DIExpression()) #9, !dbg !16874
  %44 = load i32, i32* %2, align 4, !dbg !16876
  call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %44) #9, !dbg !16877, !srcloc !16652
  %45 = getelementptr inbounds %union.anon.68, %union.anon.68* %11, i32 0, i32 0, !dbg !16855
  store i32 1, i32* %45, align 4, !dbg !16855
  br label %23, !dbg !16855, !llvm.loop !16878

46:                                               ; preds = %23
  %47 = load i32, i32* %10, align 4, !dbg !16880
  ret i32 %47, !dbg !16881
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @sys_dnode_is_linked.113(%struct._dnode.168* noundef %0) #1 !dbg !16882 {
  %2 = alloca %struct._dnode.168*, align 4
  store %struct._dnode.168* %0, %struct._dnode.168** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.168** %2, metadata !16887, metadata !DIExpression()), !dbg !16888
  %3 = load %struct._dnode.168*, %struct._dnode.168** %2, align 4, !dbg !16889
  %4 = getelementptr inbounds %struct._dnode.168, %struct._dnode.168* %3, i32 0, i32 0, !dbg !16890
  %5 = bitcast %union.anon.0.166* %4 to %struct._dnode.168**, !dbg !16890
  %6 = load %struct._dnode.168*, %struct._dnode.168** %5, align 4, !dbg !16890
  %7 = icmp ne %struct._dnode.168* %6, null, !dbg !16891
  ret i1 %7, !dbg !16892
}

; Function Attrs: noinline nounwind optnone
define internal void @remove_timeout(%struct._timeout.172* noundef %0) #1 !dbg !16893 {
  %2 = alloca %struct._timeout.172*, align 4
  store %struct._timeout.172* %0, %struct._timeout.172** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._timeout.172** %2, metadata !16894, metadata !DIExpression()), !dbg !16895
  %3 = load %struct._timeout.172*, %struct._timeout.172** %2, align 4, !dbg !16896
  %4 = call %struct._timeout.172* @next(%struct._timeout.172* noundef %3) #10, !dbg !16898
  %5 = icmp ne %struct._timeout.172* %4, null, !dbg !16899
  br i1 %5, label %6, label %15, !dbg !16900

6:                                                ; preds = %1
  %7 = load %struct._timeout.172*, %struct._timeout.172** %2, align 4, !dbg !16901
  %8 = getelementptr inbounds %struct._timeout.172, %struct._timeout.172* %7, i32 0, i32 2, !dbg !16903
  %9 = load i64, i64* %8, align 8, !dbg !16903
  %10 = load %struct._timeout.172*, %struct._timeout.172** %2, align 4, !dbg !16904
  %11 = call %struct._timeout.172* @next(%struct._timeout.172* noundef %10) #10, !dbg !16905
  %12 = getelementptr inbounds %struct._timeout.172, %struct._timeout.172* %11, i32 0, i32 2, !dbg !16906
  %13 = load i64, i64* %12, align 8, !dbg !16907
  %14 = add nsw i64 %13, %9, !dbg !16907
  store i64 %14, i64* %12, align 8, !dbg !16907
  br label %15, !dbg !16908

15:                                               ; preds = %6, %1
  %16 = load %struct._timeout.172*, %struct._timeout.172** %2, align 4, !dbg !16909
  %17 = getelementptr inbounds %struct._timeout.172, %struct._timeout.172* %16, i32 0, i32 0, !dbg !16910
  call void @sys_dlist_remove.114(%struct._dnode.168* noundef %17) #10, !dbg !16911
  ret void, !dbg !16912
}

; Function Attrs: noinline nounwind optnone
define internal void @sys_dlist_remove.114(%struct._dnode.168* noundef %0) #1 !dbg !16913 {
  %2 = alloca %struct._dnode.168*, align 4
  %3 = alloca %struct._dnode.168*, align 4
  %4 = alloca %struct._dnode.168*, align 4
  store %struct._dnode.168* %0, %struct._dnode.168** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.168** %2, metadata !16916, metadata !DIExpression()), !dbg !16917
  call void @llvm.dbg.declare(metadata %struct._dnode.168** %3, metadata !16918, metadata !DIExpression()), !dbg !16919
  %5 = load %struct._dnode.168*, %struct._dnode.168** %2, align 4, !dbg !16920
  %6 = getelementptr inbounds %struct._dnode.168, %struct._dnode.168* %5, i32 0, i32 1, !dbg !16921
  %7 = bitcast %union.anon.0.166* %6 to %struct._dnode.168**, !dbg !16921
  %8 = load %struct._dnode.168*, %struct._dnode.168** %7, align 4, !dbg !16921
  store %struct._dnode.168* %8, %struct._dnode.168** %3, align 4, !dbg !16919
  call void @llvm.dbg.declare(metadata %struct._dnode.168** %4, metadata !16922, metadata !DIExpression()), !dbg !16923
  %9 = load %struct._dnode.168*, %struct._dnode.168** %2, align 4, !dbg !16924
  %10 = getelementptr inbounds %struct._dnode.168, %struct._dnode.168* %9, i32 0, i32 0, !dbg !16925
  %11 = bitcast %union.anon.0.166* %10 to %struct._dnode.168**, !dbg !16925
  %12 = load %struct._dnode.168*, %struct._dnode.168** %11, align 4, !dbg !16925
  store %struct._dnode.168* %12, %struct._dnode.168** %4, align 4, !dbg !16923
  %13 = load %struct._dnode.168*, %struct._dnode.168** %4, align 4, !dbg !16926
  %14 = load %struct._dnode.168*, %struct._dnode.168** %3, align 4, !dbg !16927
  %15 = getelementptr inbounds %struct._dnode.168, %struct._dnode.168* %14, i32 0, i32 0, !dbg !16928
  %16 = bitcast %union.anon.0.166* %15 to %struct._dnode.168**, !dbg !16928
  store %struct._dnode.168* %13, %struct._dnode.168** %16, align 4, !dbg !16929
  %17 = load %struct._dnode.168*, %struct._dnode.168** %3, align 4, !dbg !16930
  %18 = load %struct._dnode.168*, %struct._dnode.168** %4, align 4, !dbg !16931
  %19 = getelementptr inbounds %struct._dnode.168, %struct._dnode.168* %18, i32 0, i32 1, !dbg !16932
  %20 = bitcast %union.anon.0.166* %19 to %struct._dnode.168**, !dbg !16932
  store %struct._dnode.168* %17, %struct._dnode.168** %20, align 4, !dbg !16933
  %21 = load %struct._dnode.168*, %struct._dnode.168** %2, align 4, !dbg !16934
  call void @sys_dnode_init.115(%struct._dnode.168* noundef %21) #10, !dbg !16935
  ret void, !dbg !16936
}

; Function Attrs: noinline nounwind optnone
define internal void @sys_dnode_init.115(%struct._dnode.168* noundef %0) #1 !dbg !16937 {
  %2 = alloca %struct._dnode.168*, align 4
  store %struct._dnode.168* %0, %struct._dnode.168** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._dnode.168** %2, metadata !16938, metadata !DIExpression()), !dbg !16939
  %3 = load %struct._dnode.168*, %struct._dnode.168** %2, align 4, !dbg !16940
  %4 = getelementptr inbounds %struct._dnode.168, %struct._dnode.168* %3, i32 0, i32 0, !dbg !16941
  %5 = bitcast %union.anon.0.166* %4 to %struct._dnode.168**, !dbg !16941
  store %struct._dnode.168* null, %struct._dnode.168** %5, align 4, !dbg !16942
  %6 = load %struct._dnode.168*, %struct._dnode.168** %2, align 4, !dbg !16943
  %7 = getelementptr inbounds %struct._dnode.168, %struct._dnode.168* %6, i32 0, i32 1, !dbg !16944
  %8 = bitcast %union.anon.0.166* %7 to %struct._dnode.168**, !dbg !16944
  store %struct._dnode.168* null, %struct._dnode.168** %8, align 4, !dbg !16945
  ret void, !dbg !16946
}

; Function Attrs: noinline nounwind optnone
define dso_local i64 @z_timeout_remaining(%struct._timeout.172* noundef %0) #1 !dbg !16947 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca %union.anon.68, align 4
  %6 = alloca %struct.k_spinlock.13*, align 4
  %7 = alloca %union.anon.68, align 4
  %8 = alloca %struct.k_spinlock.13*, align 4
  %9 = alloca %struct._timeout.172*, align 4
  %10 = alloca i64, align 8
  %11 = alloca %union.anon.68, align 4
  %12 = alloca %union.anon.68, align 4
  store %struct._timeout.172* %0, %struct._timeout.172** %9, align 4
  call void @llvm.dbg.declare(metadata %struct._timeout.172** %9, metadata !16952, metadata !DIExpression()), !dbg !16953
  call void @llvm.dbg.declare(metadata i64* %10, metadata !16954, metadata !DIExpression()), !dbg !16955
  store i64 0, i64* %10, align 8, !dbg !16955
  call void @llvm.dbg.declare(metadata %union.anon.68* %11, metadata !16956, metadata !DIExpression()), !dbg !16958
  %13 = bitcast %union.anon.68* %11 to i8*, !dbg !16958
  call void @llvm.memset.p0i8.i32(i8* align 4 %13, i8 0, i32 4, i1 false), !dbg !16958
  call void @llvm.dbg.declare(metadata %union.anon.68* %12, metadata !16959, metadata !DIExpression()), !dbg !16958
  store %struct.k_spinlock.13* @timeout_lock, %struct.k_spinlock.13** %8, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %8, metadata !16514, metadata !DIExpression()) #9, !dbg !16960
  %14 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %8, align 4, !dbg !16962
  call void @llvm.dbg.declare(metadata %union.anon.68* %7, metadata !16522, metadata !DIExpression()) #9, !dbg !16963
  call void @llvm.dbg.declare(metadata i32* %3, metadata !16524, metadata !DIExpression()) #9, !dbg !16964
  call void @llvm.dbg.declare(metadata i32* %4, metadata !16528, metadata !DIExpression()) #9, !dbg !16966
  %15 = call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #9, !dbg !16967, !srcloc !16531
  %16 = extractvalue { i32, i32 } %15, 0, !dbg !16967
  %17 = extractvalue { i32, i32 } %15, 1, !dbg !16967
  store i32 %16, i32* %3, align 4, !dbg !16967
  store i32 %17, i32* %4, align 4, !dbg !16967
  %18 = load i32, i32* %3, align 4, !dbg !16968
  %19 = getelementptr inbounds %union.anon.68, %union.anon.68* %7, i32 0, i32 0, !dbg !16969
  store i32 %18, i32* %19, align 4, !dbg !16970
  %20 = getelementptr inbounds %union.anon.68, %union.anon.68* %7, i32 0, i32 0, !dbg !16971
  %21 = load i32, i32* %20, align 4, !dbg !16971
  %22 = getelementptr inbounds %union.anon.68, %union.anon.68* %12, i32 0, i32 0, !dbg !16958
  store i32 %21, i32* %22, align 4, !dbg !16958
  br label %23, !dbg !16958

23:                                               ; preds = %31, %1
  %24 = getelementptr inbounds %union.anon.68, %union.anon.68* %11, i32 0, i32 0, !dbg !16972
  %25 = load i32, i32* %24, align 4, !dbg !16972
  %26 = icmp ne i32 %25, 0, !dbg !16972
  %27 = xor i1 %26, true, !dbg !16972
  br i1 %27, label %28, label %42, !dbg !16958

28:                                               ; preds = %23
  %29 = load %struct._timeout.172*, %struct._timeout.172** %9, align 4, !dbg !16974
  %30 = call i64 @timeout_rem(%struct._timeout.172* noundef %29) #10, !dbg !16976
  store i64 %30, i64* %10, align 8, !dbg !16977
  br label %31, !dbg !16978

31:                                               ; preds = %28
  %32 = getelementptr inbounds %union.anon.68, %union.anon.68* %12, i32 0, i32 0, !dbg !16972
  %33 = bitcast i32* %32 to [1 x i32]*, !dbg !16972
  %34 = load [1 x i32], [1 x i32]* %33, align 4, !dbg !16972
  %35 = getelementptr inbounds %union.anon.68, %union.anon.68* %5, i32 0, i32 0
  %36 = bitcast i32* %35 to [1 x i32]*
  store [1 x i32] %34, [1 x i32]* %36, align 4
  store %struct.k_spinlock.13* @timeout_lock, %struct.k_spinlock.13** %6, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %6, metadata !16636, metadata !DIExpression()) #9, !dbg !16979
  call void @llvm.dbg.declare(metadata %union.anon.68* %5, metadata !16642, metadata !DIExpression()) #9, !dbg !16981
  %37 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %6, align 4, !dbg !16982
  %38 = getelementptr inbounds %union.anon.68, %union.anon.68* %5, i32 0, i32 0, !dbg !16983
  %39 = load i32, i32* %38, align 4, !dbg !16983
  store i32 %39, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !16646, metadata !DIExpression()) #9, !dbg !16984
  %40 = load i32, i32* %2, align 4, !dbg !16986
  call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %40) #9, !dbg !16987, !srcloc !16652
  %41 = getelementptr inbounds %union.anon.68, %union.anon.68* %11, i32 0, i32 0, !dbg !16972
  store i32 1, i32* %41, align 4, !dbg !16972
  br label %23, !dbg !16972, !llvm.loop !16988

42:                                               ; preds = %23
  %43 = load i64, i64* %10, align 8, !dbg !16990
  ret i64 %43, !dbg !16991
}

; Function Attrs: noinline nounwind optnone
define internal i64 @timeout_rem(%struct._timeout.172* noundef %0) #1 !dbg !16992 {
  %2 = alloca i64, align 8
  %3 = alloca %struct._timeout.172*, align 4
  %4 = alloca i64, align 8
  %5 = alloca %struct._timeout.172*, align 4
  store %struct._timeout.172* %0, %struct._timeout.172** %3, align 4
  call void @llvm.dbg.declare(metadata %struct._timeout.172** %3, metadata !16993, metadata !DIExpression()), !dbg !16994
  call void @llvm.dbg.declare(metadata i64* %4, metadata !16995, metadata !DIExpression()), !dbg !16996
  store i64 0, i64* %4, align 8, !dbg !16996
  %6 = load %struct._timeout.172*, %struct._timeout.172** %3, align 4, !dbg !16997
  %7 = call zeroext i1 @z_is_inactive_timeout.116(%struct._timeout.172* noundef %6) #10, !dbg !16999
  br i1 %7, label %8, label %9, !dbg !17000

8:                                                ; preds = %1
  store i64 0, i64* %2, align 8, !dbg !17001
  br label %33, !dbg !17001

9:                                                ; preds = %1
  call void @llvm.dbg.declare(metadata %struct._timeout.172** %5, metadata !17003, metadata !DIExpression()), !dbg !17005
  %10 = call %struct._timeout.172* @first() #10, !dbg !17006
  store %struct._timeout.172* %10, %struct._timeout.172** %5, align 4, !dbg !17005
  br label %11, !dbg !17007

11:                                               ; preds = %25, %9
  %12 = load %struct._timeout.172*, %struct._timeout.172** %5, align 4, !dbg !17008
  %13 = icmp ne %struct._timeout.172* %12, null, !dbg !17010
  br i1 %13, label %14, label %28, !dbg !17011

14:                                               ; preds = %11
  %15 = load %struct._timeout.172*, %struct._timeout.172** %5, align 4, !dbg !17012
  %16 = getelementptr inbounds %struct._timeout.172, %struct._timeout.172* %15, i32 0, i32 2, !dbg !17014
  %17 = load i64, i64* %16, align 8, !dbg !17014
  %18 = load i64, i64* %4, align 8, !dbg !17015
  %19 = add nsw i64 %18, %17, !dbg !17015
  store i64 %19, i64* %4, align 8, !dbg !17015
  %20 = load %struct._timeout.172*, %struct._timeout.172** %3, align 4, !dbg !17016
  %21 = load %struct._timeout.172*, %struct._timeout.172** %5, align 4, !dbg !17018
  %22 = icmp eq %struct._timeout.172* %20, %21, !dbg !17019
  br i1 %22, label %23, label %24, !dbg !17020

23:                                               ; preds = %14
  br label %28, !dbg !17021

24:                                               ; preds = %14
  br label %25, !dbg !17023

25:                                               ; preds = %24
  %26 = load %struct._timeout.172*, %struct._timeout.172** %5, align 4, !dbg !17024
  %27 = call %struct._timeout.172* @next(%struct._timeout.172* noundef %26) #10, !dbg !17025
  store %struct._timeout.172* %27, %struct._timeout.172** %5, align 4, !dbg !17026
  br label %11, !dbg !17027, !llvm.loop !17028

28:                                               ; preds = %23, %11
  %29 = load i64, i64* %4, align 8, !dbg !17030
  %30 = call i32 @elapsed.104() #10, !dbg !17031
  %31 = sext i32 %30 to i64, !dbg !17031
  %32 = sub nsw i64 %29, %31, !dbg !17032
  store i64 %32, i64* %2, align 8, !dbg !17033
  br label %33, !dbg !17033

33:                                               ; preds = %28, %8
  %34 = load i64, i64* %2, align 8, !dbg !17034
  ret i64 %34, !dbg !17034
}

; Function Attrs: noinline nounwind optnone
define internal zeroext i1 @z_is_inactive_timeout.116(%struct._timeout.172* noundef %0) #1 !dbg !17035 {
  %2 = alloca %struct._timeout.172*, align 4
  store %struct._timeout.172* %0, %struct._timeout.172** %2, align 4
  call void @llvm.dbg.declare(metadata %struct._timeout.172** %2, metadata !17038, metadata !DIExpression()), !dbg !17039
  %3 = load %struct._timeout.172*, %struct._timeout.172** %2, align 4, !dbg !17040
  %4 = getelementptr inbounds %struct._timeout.172, %struct._timeout.172* %3, i32 0, i32 0, !dbg !17041
  %5 = call zeroext i1 @sys_dnode_is_linked.113(%struct._dnode.168* noundef %4) #10, !dbg !17042
  %6 = xor i1 %5, true, !dbg !17043
  ret i1 %6, !dbg !17044
}

; Function Attrs: noinline nounwind optnone
define dso_local i64 @z_timeout_expires(%struct._timeout.172* noundef %0) #1 !dbg !17045 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca %union.anon.68, align 4
  %6 = alloca %struct.k_spinlock.13*, align 4
  %7 = alloca %union.anon.68, align 4
  %8 = alloca %struct.k_spinlock.13*, align 4
  %9 = alloca %struct._timeout.172*, align 4
  %10 = alloca i64, align 8
  %11 = alloca %union.anon.68, align 4
  %12 = alloca %union.anon.68, align 4
  store %struct._timeout.172* %0, %struct._timeout.172** %9, align 4
  call void @llvm.dbg.declare(metadata %struct._timeout.172** %9, metadata !17046, metadata !DIExpression()), !dbg !17047
  call void @llvm.dbg.declare(metadata i64* %10, metadata !17048, metadata !DIExpression()), !dbg !17049
  store i64 0, i64* %10, align 8, !dbg !17049
  call void @llvm.dbg.declare(metadata %union.anon.68* %11, metadata !17050, metadata !DIExpression()), !dbg !17052
  %13 = bitcast %union.anon.68* %11 to i8*, !dbg !17052
  call void @llvm.memset.p0i8.i32(i8* align 4 %13, i8 0, i32 4, i1 false), !dbg !17052
  call void @llvm.dbg.declare(metadata %union.anon.68* %12, metadata !17053, metadata !DIExpression()), !dbg !17052
  store %struct.k_spinlock.13* @timeout_lock, %struct.k_spinlock.13** %8, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %8, metadata !16514, metadata !DIExpression()) #9, !dbg !17054
  %14 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %8, align 4, !dbg !17056
  call void @llvm.dbg.declare(metadata %union.anon.68* %7, metadata !16522, metadata !DIExpression()) #9, !dbg !17057
  call void @llvm.dbg.declare(metadata i32* %3, metadata !16524, metadata !DIExpression()) #9, !dbg !17058
  call void @llvm.dbg.declare(metadata i32* %4, metadata !16528, metadata !DIExpression()) #9, !dbg !17060
  %15 = call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #9, !dbg !17061, !srcloc !16531
  %16 = extractvalue { i32, i32 } %15, 0, !dbg !17061
  %17 = extractvalue { i32, i32 } %15, 1, !dbg !17061
  store i32 %16, i32* %3, align 4, !dbg !17061
  store i32 %17, i32* %4, align 4, !dbg !17061
  %18 = load i32, i32* %3, align 4, !dbg !17062
  %19 = getelementptr inbounds %union.anon.68, %union.anon.68* %7, i32 0, i32 0, !dbg !17063
  store i32 %18, i32* %19, align 4, !dbg !17064
  %20 = getelementptr inbounds %union.anon.68, %union.anon.68* %7, i32 0, i32 0, !dbg !17065
  %21 = load i32, i32* %20, align 4, !dbg !17065
  %22 = getelementptr inbounds %union.anon.68, %union.anon.68* %12, i32 0, i32 0, !dbg !17052
  store i32 %21, i32* %22, align 4, !dbg !17052
  br label %23, !dbg !17052

23:                                               ; preds = %33, %1
  %24 = getelementptr inbounds %union.anon.68, %union.anon.68* %11, i32 0, i32 0, !dbg !17066
  %25 = load i32, i32* %24, align 4, !dbg !17066
  %26 = icmp ne i32 %25, 0, !dbg !17066
  %27 = xor i1 %26, true, !dbg !17066
  br i1 %27, label %28, label %44, !dbg !17052

28:                                               ; preds = %23
  %29 = load i64, i64* @curr_tick, align 8, !dbg !17068
  %30 = load %struct._timeout.172*, %struct._timeout.172** %9, align 4, !dbg !17070
  %31 = call i64 @timeout_rem(%struct._timeout.172* noundef %30) #10, !dbg !17071
  %32 = add i64 %29, %31, !dbg !17072
  store i64 %32, i64* %10, align 8, !dbg !17073
  br label %33, !dbg !17074

33:                                               ; preds = %28
  %34 = getelementptr inbounds %union.anon.68, %union.anon.68* %12, i32 0, i32 0, !dbg !17066
  %35 = bitcast i32* %34 to [1 x i32]*, !dbg !17066
  %36 = load [1 x i32], [1 x i32]* %35, align 4, !dbg !17066
  %37 = getelementptr inbounds %union.anon.68, %union.anon.68* %5, i32 0, i32 0
  %38 = bitcast i32* %37 to [1 x i32]*
  store [1 x i32] %36, [1 x i32]* %38, align 4
  store %struct.k_spinlock.13* @timeout_lock, %struct.k_spinlock.13** %6, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %6, metadata !16636, metadata !DIExpression()) #9, !dbg !17075
  call void @llvm.dbg.declare(metadata %union.anon.68* %5, metadata !16642, metadata !DIExpression()) #9, !dbg !17077
  %39 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %6, align 4, !dbg !17078
  %40 = getelementptr inbounds %union.anon.68, %union.anon.68* %5, i32 0, i32 0, !dbg !17079
  %41 = load i32, i32* %40, align 4, !dbg !17079
  store i32 %41, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !16646, metadata !DIExpression()) #9, !dbg !17080
  %42 = load i32, i32* %2, align 4, !dbg !17082
  call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %42) #9, !dbg !17083, !srcloc !16652
  %43 = getelementptr inbounds %union.anon.68, %union.anon.68* %11, i32 0, i32 0, !dbg !17066
  store i32 1, i32* %43, align 4, !dbg !17066
  br label %23, !dbg !17066, !llvm.loop !17084

44:                                               ; preds = %23
  %45 = load i64, i64* %10, align 8, !dbg !17086
  ret i64 %45, !dbg !17087
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @z_get_next_timeout_expiry() #1 !dbg !17088 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca %union.anon.68, align 4
  %5 = alloca %struct.k_spinlock.13*, align 4
  %6 = alloca %union.anon.68, align 4
  %7 = alloca %struct.k_spinlock.13*, align 4
  %8 = alloca i32, align 4
  %9 = alloca %union.anon.68, align 4
  %10 = alloca %union.anon.68, align 4
  call void @llvm.dbg.declare(metadata i32* %8, metadata !17089, metadata !DIExpression()), !dbg !17090
  store i32 -1, i32* %8, align 4, !dbg !17090
  call void @llvm.dbg.declare(metadata %union.anon.68* %9, metadata !17091, metadata !DIExpression()), !dbg !17093
  %11 = bitcast %union.anon.68* %9 to i8*, !dbg !17093
  call void @llvm.memset.p0i8.i32(i8* align 4 %11, i8 0, i32 4, i1 false), !dbg !17093
  call void @llvm.dbg.declare(metadata %union.anon.68* %10, metadata !17094, metadata !DIExpression()), !dbg !17093
  store %struct.k_spinlock.13* @timeout_lock, %struct.k_spinlock.13** %7, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %7, metadata !16514, metadata !DIExpression()) #9, !dbg !17095
  %12 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %7, align 4, !dbg !17097
  call void @llvm.dbg.declare(metadata %union.anon.68* %6, metadata !16522, metadata !DIExpression()) #9, !dbg !17098
  call void @llvm.dbg.declare(metadata i32* %2, metadata !16524, metadata !DIExpression()) #9, !dbg !17099
  call void @llvm.dbg.declare(metadata i32* %3, metadata !16528, metadata !DIExpression()) #9, !dbg !17101
  %13 = call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #9, !dbg !17102, !srcloc !16531
  %14 = extractvalue { i32, i32 } %13, 0, !dbg !17102
  %15 = extractvalue { i32, i32 } %13, 1, !dbg !17102
  store i32 %14, i32* %2, align 4, !dbg !17102
  store i32 %15, i32* %3, align 4, !dbg !17102
  %16 = load i32, i32* %2, align 4, !dbg !17103
  %17 = getelementptr inbounds %union.anon.68, %union.anon.68* %6, i32 0, i32 0, !dbg !17104
  store i32 %16, i32* %17, align 4, !dbg !17105
  %18 = getelementptr inbounds %union.anon.68, %union.anon.68* %6, i32 0, i32 0, !dbg !17106
  %19 = load i32, i32* %18, align 4, !dbg !17106
  %20 = getelementptr inbounds %union.anon.68, %union.anon.68* %10, i32 0, i32 0, !dbg !17093
  store i32 %19, i32* %20, align 4, !dbg !17093
  br label %21, !dbg !17093

21:                                               ; preds = %28, %0
  %22 = getelementptr inbounds %union.anon.68, %union.anon.68* %9, i32 0, i32 0, !dbg !17107
  %23 = load i32, i32* %22, align 4, !dbg !17107
  %24 = icmp ne i32 %23, 0, !dbg !17107
  %25 = xor i1 %24, true, !dbg !17107
  br i1 %25, label %26, label %39, !dbg !17093

26:                                               ; preds = %21
  %27 = call i32 @next_timeout() #10, !dbg !17109
  store i32 %27, i32* %8, align 4, !dbg !17111
  br label %28, !dbg !17112

28:                                               ; preds = %26
  %29 = getelementptr inbounds %union.anon.68, %union.anon.68* %10, i32 0, i32 0, !dbg !17107
  %30 = bitcast i32* %29 to [1 x i32]*, !dbg !17107
  %31 = load [1 x i32], [1 x i32]* %30, align 4, !dbg !17107
  %32 = getelementptr inbounds %union.anon.68, %union.anon.68* %4, i32 0, i32 0
  %33 = bitcast i32* %32 to [1 x i32]*
  store [1 x i32] %31, [1 x i32]* %33, align 4
  store %struct.k_spinlock.13* @timeout_lock, %struct.k_spinlock.13** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %5, metadata !16636, metadata !DIExpression()) #9, !dbg !17113
  call void @llvm.dbg.declare(metadata %union.anon.68* %4, metadata !16642, metadata !DIExpression()) #9, !dbg !17115
  %34 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %5, align 4, !dbg !17116
  %35 = getelementptr inbounds %union.anon.68, %union.anon.68* %4, i32 0, i32 0, !dbg !17117
  %36 = load i32, i32* %35, align 4, !dbg !17117
  store i32 %36, i32* %1, align 4
  call void @llvm.dbg.declare(metadata i32* %1, metadata !16646, metadata !DIExpression()) #9, !dbg !17118
  %37 = load i32, i32* %1, align 4, !dbg !17120
  call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %37) #9, !dbg !17121, !srcloc !16652
  %38 = getelementptr inbounds %union.anon.68, %union.anon.68* %9, i32 0, i32 0, !dbg !17107
  store i32 1, i32* %38, align 4, !dbg !17107
  br label %21, !dbg !17107, !llvm.loop !17122

39:                                               ; preds = %21
  %40 = load i32, i32* %8, align 4, !dbg !17124
  ret i32 %40, !dbg !17125
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_set_timeout_expiry(i32 noundef %0, i1 noundef zeroext %1) #1 !dbg !17126 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca %union.anon.68, align 4
  %7 = alloca %struct.k_spinlock.13*, align 4
  %8 = alloca %union.anon.68, align 4
  %9 = alloca %struct.k_spinlock.13*, align 4
  %10 = alloca i32, align 4
  %11 = alloca i8, align 1
  %12 = alloca %union.anon.68, align 4
  %13 = alloca %union.anon.68, align 4
  %14 = alloca i32, align 4
  %15 = alloca i8, align 1
  %16 = alloca i8, align 1
  store i32 %0, i32* %10, align 4
  call void @llvm.dbg.declare(metadata i32* %10, metadata !17127, metadata !DIExpression()), !dbg !17128
  %17 = zext i1 %1 to i8
  store i8 %17, i8* %11, align 1
  call void @llvm.dbg.declare(metadata i8* %11, metadata !17129, metadata !DIExpression()), !dbg !17130
  call void @llvm.dbg.declare(metadata %union.anon.68* %12, metadata !17131, metadata !DIExpression()), !dbg !17133
  %18 = bitcast %union.anon.68* %12 to i8*, !dbg !17133
  call void @llvm.memset.p0i8.i32(i8* align 4 %18, i8 0, i32 4, i1 false), !dbg !17133
  call void @llvm.dbg.declare(metadata %union.anon.68* %13, metadata !17134, metadata !DIExpression()), !dbg !17133
  store %struct.k_spinlock.13* @timeout_lock, %struct.k_spinlock.13** %9, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %9, metadata !16514, metadata !DIExpression()) #9, !dbg !17135
  %19 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %9, align 4, !dbg !17137
  call void @llvm.dbg.declare(metadata %union.anon.68* %8, metadata !16522, metadata !DIExpression()) #9, !dbg !17138
  call void @llvm.dbg.declare(metadata i32* %4, metadata !16524, metadata !DIExpression()) #9, !dbg !17139
  call void @llvm.dbg.declare(metadata i32* %5, metadata !16528, metadata !DIExpression()) #9, !dbg !17141
  %20 = call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #9, !dbg !17142, !srcloc !16531
  %21 = extractvalue { i32, i32 } %20, 0, !dbg !17142
  %22 = extractvalue { i32, i32 } %20, 1, !dbg !17142
  store i32 %21, i32* %4, align 4, !dbg !17142
  store i32 %22, i32* %5, align 4, !dbg !17142
  %23 = load i32, i32* %4, align 4, !dbg !17143
  %24 = getelementptr inbounds %union.anon.68, %union.anon.68* %8, i32 0, i32 0, !dbg !17144
  store i32 %23, i32* %24, align 4, !dbg !17145
  %25 = getelementptr inbounds %union.anon.68, %union.anon.68* %8, i32 0, i32 0, !dbg !17146
  %26 = load i32, i32* %25, align 4, !dbg !17146
  %27 = getelementptr inbounds %union.anon.68, %union.anon.68* %13, i32 0, i32 0, !dbg !17133
  store i32 %26, i32* %27, align 4, !dbg !17133
  br label %28, !dbg !17133

28:                                               ; preds = %66, %2
  %29 = getelementptr inbounds %union.anon.68, %union.anon.68* %12, i32 0, i32 0, !dbg !17147
  %30 = load i32, i32* %29, align 4, !dbg !17147
  %31 = icmp ne i32 %30, 0, !dbg !17147
  %32 = xor i1 %31, true, !dbg !17147
  br i1 %32, label %33, label %77, !dbg !17133

33:                                               ; preds = %28
  call void @llvm.dbg.declare(metadata i32* %14, metadata !17149, metadata !DIExpression()), !dbg !17151
  %34 = call i32 @next_timeout() #10, !dbg !17152
  store i32 %34, i32* %14, align 4, !dbg !17151
  call void @llvm.dbg.declare(metadata i8* %15, metadata !17153, metadata !DIExpression()), !dbg !17154
  %35 = load i32, i32* %14, align 4, !dbg !17155
  %36 = sext i32 %35 to i64, !dbg !17155
  %37 = icmp eq i64 %36, -1, !dbg !17156
  br i1 %37, label %42, label %38, !dbg !17157

38:                                               ; preds = %33
  %39 = load i32, i32* %10, align 4, !dbg !17158
  %40 = load i32, i32* %14, align 4, !dbg !17159
  %41 = icmp sle i32 %39, %40, !dbg !17160
  br label %42, !dbg !17157

42:                                               ; preds = %38, %33
  %43 = phi i1 [ true, %33 ], [ %41, %38 ]
  %44 = zext i1 %43 to i8, !dbg !17154
  store i8 %44, i8* %15, align 1, !dbg !17154
  call void @llvm.dbg.declare(metadata i8* %16, metadata !17161, metadata !DIExpression()), !dbg !17162
  %45 = load i32, i32* %14, align 4, !dbg !17163
  %46 = icmp sle i32 %45, 1, !dbg !17164
  %47 = zext i1 %46 to i8, !dbg !17162
  store i8 %47, i8* %16, align 1, !dbg !17162
  %48 = load i8, i8* %16, align 1, !dbg !17165
  %49 = trunc i8 %48 to i1, !dbg !17165
  br i1 %49, label %65, label %50, !dbg !17167

50:                                               ; preds = %42
  %51 = load i8, i8* %15, align 1, !dbg !17168
  %52 = trunc i8 %51 to i1, !dbg !17168
  br i1 %52, label %53, label %65, !dbg !17169

53:                                               ; preds = %50
  %54 = load i32, i32* %10, align 4, !dbg !17170
  %55 = load i32, i32* %14, align 4, !dbg !17170
  %56 = icmp slt i32 %54, %55, !dbg !17170
  br i1 %56, label %57, label %59, !dbg !17170

57:                                               ; preds = %53
  %58 = load i32, i32* %10, align 4, !dbg !17170
  br label %61, !dbg !17170

59:                                               ; preds = %53
  %60 = load i32, i32* %14, align 4, !dbg !17170
  br label %61, !dbg !17170

61:                                               ; preds = %59, %57
  %62 = phi i32 [ %58, %57 ], [ %60, %59 ], !dbg !17170
  %63 = load i8, i8* %11, align 1, !dbg !17172
  %64 = trunc i8 %63 to i1, !dbg !17172
  call void @sys_clock_set_timeout(i32 noundef %62, i1 noundef zeroext %64) #10, !dbg !17173
  br label %65, !dbg !17174

65:                                               ; preds = %61, %50, %42
  br label %66, !dbg !17175

66:                                               ; preds = %65
  %67 = getelementptr inbounds %union.anon.68, %union.anon.68* %13, i32 0, i32 0, !dbg !17147
  %68 = bitcast i32* %67 to [1 x i32]*, !dbg !17147
  %69 = load [1 x i32], [1 x i32]* %68, align 4, !dbg !17147
  %70 = getelementptr inbounds %union.anon.68, %union.anon.68* %6, i32 0, i32 0
  %71 = bitcast i32* %70 to [1 x i32]*
  store [1 x i32] %69, [1 x i32]* %71, align 4
  store %struct.k_spinlock.13* @timeout_lock, %struct.k_spinlock.13** %7, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %7, metadata !16636, metadata !DIExpression()) #9, !dbg !17176
  call void @llvm.dbg.declare(metadata %union.anon.68* %6, metadata !16642, metadata !DIExpression()) #9, !dbg !17178
  %72 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %7, align 4, !dbg !17179
  %73 = getelementptr inbounds %union.anon.68, %union.anon.68* %6, i32 0, i32 0, !dbg !17180
  %74 = load i32, i32* %73, align 4, !dbg !17180
  store i32 %74, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !16646, metadata !DIExpression()) #9, !dbg !17181
  %75 = load i32, i32* %3, align 4, !dbg !17183
  call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %75) #9, !dbg !17184, !srcloc !16652
  %76 = getelementptr inbounds %union.anon.68, %union.anon.68* %12, i32 0, i32 0, !dbg !17147
  store i32 1, i32* %76, align 4, !dbg !17147
  br label %28, !dbg !17147, !llvm.loop !17185

77:                                               ; preds = %28
  ret void, !dbg !17187
}

; Function Attrs: noinline nounwind optnone
define dso_local void @sys_clock_announce(i32 noundef %0) #1 !dbg !17188 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca %union.anon.68, align 4
  %9 = alloca %struct.k_spinlock.13*, align 4
  %10 = alloca %union.anon.68, align 4
  %11 = alloca %struct.k_spinlock.13*, align 4
  %12 = alloca %union.anon.68, align 4
  %13 = alloca %struct.k_spinlock.13*, align 4
  %14 = alloca %union.anon.68, align 4
  %15 = alloca %struct.k_spinlock.13*, align 4
  %16 = alloca i32, align 4
  %17 = alloca %union.anon.68, align 4
  %18 = alloca %struct._timeout.172*, align 4
  %19 = alloca i32, align 4
  %20 = alloca %union.anon.68, align 4
  store i32 %0, i32* %16, align 4
  call void @llvm.dbg.declare(metadata i32* %16, metadata !17191, metadata !DIExpression()), !dbg !17192
  %21 = load i32, i32* %16, align 4, !dbg !17193
  call void @z_time_slice(i32 noundef %21) #10, !dbg !17194
  call void @llvm.dbg.declare(metadata %union.anon.68* %17, metadata !17195, metadata !DIExpression()), !dbg !17196
  store %struct.k_spinlock.13* @timeout_lock, %struct.k_spinlock.13** %13, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %13, metadata !16514, metadata !DIExpression()) #9, !dbg !17197
  %22 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %13, align 4, !dbg !17199
  call void @llvm.dbg.declare(metadata %union.anon.68* %12, metadata !16522, metadata !DIExpression()) #9, !dbg !17200
  call void @llvm.dbg.declare(metadata i32* %6, metadata !16524, metadata !DIExpression()) #9, !dbg !17201
  call void @llvm.dbg.declare(metadata i32* %7, metadata !16528, metadata !DIExpression()) #9, !dbg !17203
  %23 = call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #9, !dbg !17204, !srcloc !16531
  %24 = extractvalue { i32, i32 } %23, 0, !dbg !17204
  %25 = extractvalue { i32, i32 } %23, 1, !dbg !17204
  store i32 %24, i32* %6, align 4, !dbg !17204
  store i32 %25, i32* %7, align 4, !dbg !17204
  %26 = load i32, i32* %6, align 4, !dbg !17205
  %27 = getelementptr inbounds %union.anon.68, %union.anon.68* %12, i32 0, i32 0, !dbg !17206
  store i32 %26, i32* %27, align 4, !dbg !17207
  %28 = getelementptr inbounds %union.anon.68, %union.anon.68* %12, i32 0, i32 0, !dbg !17208
  %29 = load i32, i32* %28, align 4, !dbg !17208
  %30 = getelementptr inbounds %union.anon.68, %union.anon.68* %17, i32 0, i32 0, !dbg !17209
  store i32 %29, i32* %30, align 4, !dbg !17209
  %31 = load i32, i32* %16, align 4, !dbg !17210
  store i32 %31, i32* @announce_remaining, align 4, !dbg !17211
  br label %32, !dbg !17212

32:                                               ; preds = %44, %1
  %33 = call %struct._timeout.172* @first() #10, !dbg !17213
  %34 = icmp ne %struct._timeout.172* %33, null, !dbg !17214
  br i1 %34, label %35, label %42, !dbg !17215

35:                                               ; preds = %32
  %36 = call %struct._timeout.172* @first() #10, !dbg !17216
  %37 = getelementptr inbounds %struct._timeout.172, %struct._timeout.172* %36, i32 0, i32 2, !dbg !17217
  %38 = load i64, i64* %37, align 8, !dbg !17217
  %39 = load i32, i32* @announce_remaining, align 4, !dbg !17218
  %40 = sext i32 %39 to i64, !dbg !17218
  %41 = icmp sle i64 %38, %40, !dbg !17219
  br label %42

42:                                               ; preds = %35, %32
  %43 = phi i1 [ false, %32 ], [ %41, %35 ], !dbg !17220
  br i1 %43, label %44, label %84, !dbg !17212

44:                                               ; preds = %42
  call void @llvm.dbg.declare(metadata %struct._timeout.172** %18, metadata !17221, metadata !DIExpression()), !dbg !17223
  %45 = call %struct._timeout.172* @first() #10, !dbg !17224
  store %struct._timeout.172* %45, %struct._timeout.172** %18, align 4, !dbg !17223
  call void @llvm.dbg.declare(metadata i32* %19, metadata !17225, metadata !DIExpression()), !dbg !17226
  %46 = load %struct._timeout.172*, %struct._timeout.172** %18, align 4, !dbg !17227
  %47 = getelementptr inbounds %struct._timeout.172, %struct._timeout.172* %46, i32 0, i32 2, !dbg !17228
  %48 = load i64, i64* %47, align 8, !dbg !17228
  %49 = trunc i64 %48 to i32, !dbg !17227
  store i32 %49, i32* %19, align 4, !dbg !17226
  %50 = load i32, i32* %19, align 4, !dbg !17229
  %51 = sext i32 %50 to i64, !dbg !17229
  %52 = load i64, i64* @curr_tick, align 8, !dbg !17230
  %53 = add i64 %52, %51, !dbg !17230
  store i64 %53, i64* @curr_tick, align 8, !dbg !17230
  %54 = load %struct._timeout.172*, %struct._timeout.172** %18, align 4, !dbg !17231
  %55 = getelementptr inbounds %struct._timeout.172, %struct._timeout.172* %54, i32 0, i32 2, !dbg !17232
  store i64 0, i64* %55, align 8, !dbg !17233
  %56 = load %struct._timeout.172*, %struct._timeout.172** %18, align 4, !dbg !17234
  call void @remove_timeout(%struct._timeout.172* noundef %56) #10, !dbg !17235
  %57 = getelementptr inbounds %union.anon.68, %union.anon.68* %17, i32 0, i32 0, !dbg !17236
  %58 = bitcast i32* %57 to [1 x i32]*, !dbg !17236
  %59 = load [1 x i32], [1 x i32]* %58, align 4, !dbg !17236
  %60 = getelementptr inbounds %union.anon.68, %union.anon.68* %8, i32 0, i32 0
  %61 = bitcast i32* %60 to [1 x i32]*
  store [1 x i32] %59, [1 x i32]* %61, align 4
  store %struct.k_spinlock.13* @timeout_lock, %struct.k_spinlock.13** %9, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %9, metadata !16636, metadata !DIExpression()) #9, !dbg !17237
  call void @llvm.dbg.declare(metadata %union.anon.68* %8, metadata !16642, metadata !DIExpression()) #9, !dbg !17239
  %62 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %9, align 4, !dbg !17240
  %63 = getelementptr inbounds %union.anon.68, %union.anon.68* %8, i32 0, i32 0, !dbg !17241
  %64 = load i32, i32* %63, align 4, !dbg !17241
  store i32 %64, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !16646, metadata !DIExpression()) #9, !dbg !17242
  %65 = load i32, i32* %3, align 4, !dbg !17244
  call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %65) #9, !dbg !17245, !srcloc !16652
  %66 = load %struct._timeout.172*, %struct._timeout.172** %18, align 4, !dbg !17246
  %67 = getelementptr inbounds %struct._timeout.172, %struct._timeout.172* %66, i32 0, i32 1, !dbg !17247
  %68 = load void (%struct._timeout.172*)*, void (%struct._timeout.172*)** %67, align 8, !dbg !17247
  %69 = load %struct._timeout.172*, %struct._timeout.172** %18, align 4, !dbg !17248
  call void %68(%struct._timeout.172* noundef %69) #10, !dbg !17246
  store %struct.k_spinlock.13* @timeout_lock, %struct.k_spinlock.13** %15, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %15, metadata !16514, metadata !DIExpression()) #9, !dbg !17249
  %70 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %15, align 4, !dbg !17251
  call void @llvm.dbg.declare(metadata %union.anon.68* %14, metadata !16522, metadata !DIExpression()) #9, !dbg !17252
  call void @llvm.dbg.declare(metadata i32* %4, metadata !16524, metadata !DIExpression()) #9, !dbg !17253
  call void @llvm.dbg.declare(metadata i32* %5, metadata !16528, metadata !DIExpression()) #9, !dbg !17255
  %71 = call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #9, !dbg !17256, !srcloc !16531
  %72 = extractvalue { i32, i32 } %71, 0, !dbg !17256
  %73 = extractvalue { i32, i32 } %71, 1, !dbg !17256
  store i32 %72, i32* %4, align 4, !dbg !17256
  store i32 %73, i32* %5, align 4, !dbg !17256
  %74 = load i32, i32* %4, align 4, !dbg !17257
  %75 = getelementptr inbounds %union.anon.68, %union.anon.68* %14, i32 0, i32 0, !dbg !17258
  store i32 %74, i32* %75, align 4, !dbg !17259
  %76 = getelementptr inbounds %union.anon.68, %union.anon.68* %14, i32 0, i32 0, !dbg !17260
  %77 = load i32, i32* %76, align 4, !dbg !17260
  %78 = getelementptr inbounds %union.anon.68, %union.anon.68* %20, i32 0, i32 0, !dbg !17261
  store i32 %77, i32* %78, align 4, !dbg !17261
  %79 = bitcast %union.anon.68* %17 to i8*, !dbg !17261
  %80 = bitcast %union.anon.68* %20 to i8*, !dbg !17261
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* align 4 %79, i8* align 4 %80, i32 4, i1 false), !dbg !17261
  %81 = load i32, i32* %19, align 4, !dbg !17262
  %82 = load i32, i32* @announce_remaining, align 4, !dbg !17263
  %83 = sub nsw i32 %82, %81, !dbg !17263
  store i32 %83, i32* @announce_remaining, align 4, !dbg !17263
  br label %32, !dbg !17212, !llvm.loop !17264

84:                                               ; preds = %42
  %85 = call %struct._timeout.172* @first() #10, !dbg !17266
  %86 = icmp ne %struct._timeout.172* %85, null, !dbg !17268
  br i1 %86, label %87, label %94, !dbg !17269

87:                                               ; preds = %84
  %88 = load i32, i32* @announce_remaining, align 4, !dbg !17270
  %89 = sext i32 %88 to i64, !dbg !17270
  %90 = call %struct._timeout.172* @first() #10, !dbg !17272
  %91 = getelementptr inbounds %struct._timeout.172, %struct._timeout.172* %90, i32 0, i32 2, !dbg !17273
  %92 = load i64, i64* %91, align 8, !dbg !17274
  %93 = sub nsw i64 %92, %89, !dbg !17274
  store i64 %93, i64* %91, align 8, !dbg !17274
  br label %94, !dbg !17275

94:                                               ; preds = %87, %84
  %95 = load i32, i32* @announce_remaining, align 4, !dbg !17276
  %96 = sext i32 %95 to i64, !dbg !17276
  %97 = load i64, i64* @curr_tick, align 8, !dbg !17277
  %98 = add i64 %97, %96, !dbg !17277
  store i64 %98, i64* @curr_tick, align 8, !dbg !17277
  store i32 0, i32* @announce_remaining, align 4, !dbg !17278
  %99 = call i32 @next_timeout() #10, !dbg !17279
  call void @sys_clock_set_timeout(i32 noundef %99, i1 noundef zeroext false) #10, !dbg !17280
  %100 = getelementptr inbounds %union.anon.68, %union.anon.68* %17, i32 0, i32 0, !dbg !17281
  %101 = bitcast i32* %100 to [1 x i32]*, !dbg !17281
  %102 = load [1 x i32], [1 x i32]* %101, align 4, !dbg !17281
  %103 = getelementptr inbounds %union.anon.68, %union.anon.68* %10, i32 0, i32 0
  %104 = bitcast i32* %103 to [1 x i32]*
  store [1 x i32] %102, [1 x i32]* %104, align 4
  store %struct.k_spinlock.13* @timeout_lock, %struct.k_spinlock.13** %11, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %11, metadata !16636, metadata !DIExpression()) #9, !dbg !17282
  call void @llvm.dbg.declare(metadata %union.anon.68* %10, metadata !16642, metadata !DIExpression()) #9, !dbg !17284
  %105 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %11, align 4, !dbg !17285
  %106 = getelementptr inbounds %union.anon.68, %union.anon.68* %10, i32 0, i32 0, !dbg !17286
  %107 = load i32, i32* %106, align 4, !dbg !17286
  store i32 %107, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !16646, metadata !DIExpression()) #9, !dbg !17287
  %108 = load i32, i32* %2, align 4, !dbg !17289
  call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %108) #9, !dbg !17290, !srcloc !16652
  ret void, !dbg !17291
}

; Function Attrs: noinline nounwind optnone
define dso_local i64 @sys_clock_tick_get() #1 !dbg !17292 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca %union.anon.68, align 4
  %5 = alloca %struct.k_spinlock.13*, align 4
  %6 = alloca %union.anon.68, align 4
  %7 = alloca %struct.k_spinlock.13*, align 4
  %8 = alloca i64, align 8
  %9 = alloca %union.anon.68, align 4
  %10 = alloca %union.anon.68, align 4
  call void @llvm.dbg.declare(metadata i64* %8, metadata !17295, metadata !DIExpression()), !dbg !17296
  store i64 0, i64* %8, align 8, !dbg !17296
  call void @llvm.dbg.declare(metadata %union.anon.68* %9, metadata !17297, metadata !DIExpression()), !dbg !17299
  %11 = bitcast %union.anon.68* %9 to i8*, !dbg !17299
  call void @llvm.memset.p0i8.i32(i8* align 4 %11, i8 0, i32 4, i1 false), !dbg !17299
  call void @llvm.dbg.declare(metadata %union.anon.68* %10, metadata !17300, metadata !DIExpression()), !dbg !17299
  store %struct.k_spinlock.13* @timeout_lock, %struct.k_spinlock.13** %7, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %7, metadata !16514, metadata !DIExpression()) #9, !dbg !17301
  %12 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %7, align 4, !dbg !17303
  call void @llvm.dbg.declare(metadata %union.anon.68* %6, metadata !16522, metadata !DIExpression()) #9, !dbg !17304
  call void @llvm.dbg.declare(metadata i32* %2, metadata !16524, metadata !DIExpression()) #9, !dbg !17305
  call void @llvm.dbg.declare(metadata i32* %3, metadata !16528, metadata !DIExpression()) #9, !dbg !17307
  %13 = call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #9, !dbg !17308, !srcloc !16531
  %14 = extractvalue { i32, i32 } %13, 0, !dbg !17308
  %15 = extractvalue { i32, i32 } %13, 1, !dbg !17308
  store i32 %14, i32* %2, align 4, !dbg !17308
  store i32 %15, i32* %3, align 4, !dbg !17308
  %16 = load i32, i32* %2, align 4, !dbg !17309
  %17 = getelementptr inbounds %union.anon.68, %union.anon.68* %6, i32 0, i32 0, !dbg !17310
  store i32 %16, i32* %17, align 4, !dbg !17311
  %18 = getelementptr inbounds %union.anon.68, %union.anon.68* %6, i32 0, i32 0, !dbg !17312
  %19 = load i32, i32* %18, align 4, !dbg !17312
  %20 = getelementptr inbounds %union.anon.68, %union.anon.68* %10, i32 0, i32 0, !dbg !17299
  store i32 %19, i32* %20, align 4, !dbg !17299
  br label %21, !dbg !17299

21:                                               ; preds = %31, %0
  %22 = getelementptr inbounds %union.anon.68, %union.anon.68* %9, i32 0, i32 0, !dbg !17313
  %23 = load i32, i32* %22, align 4, !dbg !17313
  %24 = icmp ne i32 %23, 0, !dbg !17313
  %25 = xor i1 %24, true, !dbg !17313
  br i1 %25, label %26, label %42, !dbg !17299

26:                                               ; preds = %21
  %27 = load i64, i64* @curr_tick, align 8, !dbg !17315
  %28 = call i32 @elapsed.104() #10, !dbg !17317
  %29 = sext i32 %28 to i64, !dbg !17317
  %30 = add i64 %27, %29, !dbg !17318
  store i64 %30, i64* %8, align 8, !dbg !17319
  br label %31, !dbg !17320

31:                                               ; preds = %26
  %32 = getelementptr inbounds %union.anon.68, %union.anon.68* %10, i32 0, i32 0, !dbg !17313
  %33 = bitcast i32* %32 to [1 x i32]*, !dbg !17313
  %34 = load [1 x i32], [1 x i32]* %33, align 4, !dbg !17313
  %35 = getelementptr inbounds %union.anon.68, %union.anon.68* %4, i32 0, i32 0
  %36 = bitcast i32* %35 to [1 x i32]*
  store [1 x i32] %34, [1 x i32]* %36, align 4
  store %struct.k_spinlock.13* @timeout_lock, %struct.k_spinlock.13** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.k_spinlock.13** %5, metadata !16636, metadata !DIExpression()) #9, !dbg !17321
  call void @llvm.dbg.declare(metadata %union.anon.68* %4, metadata !16642, metadata !DIExpression()) #9, !dbg !17323
  %37 = load %struct.k_spinlock.13*, %struct.k_spinlock.13** %5, align 4, !dbg !17324
  %38 = getelementptr inbounds %union.anon.68, %union.anon.68* %4, i32 0, i32 0, !dbg !17325
  %39 = load i32, i32* %38, align 4, !dbg !17325
  store i32 %39, i32* %1, align 4
  call void @llvm.dbg.declare(metadata i32* %1, metadata !16646, metadata !DIExpression()) #9, !dbg !17326
  %40 = load i32, i32* %1, align 4, !dbg !17328
  call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %40) #9, !dbg !17329, !srcloc !16652
  %41 = getelementptr inbounds %union.anon.68, %union.anon.68* %9, i32 0, i32 0, !dbg !17313
  store i32 1, i32* %41, align 4, !dbg !17313
  br label %21, !dbg !17313, !llvm.loop !17330

42:                                               ; preds = %21
  %43 = load i64, i64* %8, align 8, !dbg !17332
  ret i64 %43, !dbg !17333
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @sys_clock_tick_get_32() #1 !dbg !17334 {
  %1 = call i64 @sys_clock_tick_get() #10, !dbg !17335
  %2 = trunc i64 %1 to i32, !dbg !17336
  ret i32 %2, !dbg !17337
}

; Function Attrs: noinline nounwind optnone
define dso_local i64 @z_impl_k_uptime_ticks() #1 !dbg !17338 {
  %1 = call i64 @sys_clock_tick_get() #10, !dbg !17339
  ret i64 %1, !dbg !17340
}

; Function Attrs: noinline nounwind optnone
define dso_local void @z_impl_k_busy_wait(i32 noundef %0) #1 !dbg !17341 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !17342, metadata !DIExpression()), !dbg !17343
  br label %6, !dbg !17344

6:                                                ; preds = %1
  br label %7, !dbg !17345

7:                                                ; preds = %6
  %8 = load i32, i32* %2, align 4, !dbg !17347
  %9 = icmp eq i32 %8, 0, !dbg !17349
  br i1 %9, label %10, label %13, !dbg !17350

10:                                               ; preds = %7
  br label %11, !dbg !17351

11:                                               ; preds = %10
  br label %12, !dbg !17353

12:                                               ; preds = %11
  br label %33, !dbg !17355

13:                                               ; preds = %7
  call void @llvm.dbg.declare(metadata i32* %3, metadata !17356, metadata !DIExpression()), !dbg !17357
  %14 = call i32 @k_cycle_get_32() #10, !dbg !17358
  store i32 %14, i32* %3, align 4, !dbg !17357
  call void @llvm.dbg.declare(metadata i32* %4, metadata !17359, metadata !DIExpression()), !dbg !17360
  %15 = load i32, i32* %2, align 4, !dbg !17361
  %16 = zext i32 %15 to i64, !dbg !17362
  %17 = call i32 @sys_clock_hw_cycles_per_sec.123() #10, !dbg !17363
  %18 = sext i32 %17 to i64, !dbg !17364
  %19 = mul i64 %16, %18, !dbg !17365
  %20 = udiv i64 %19, 1000000, !dbg !17366
  %21 = trunc i64 %20 to i32, !dbg !17367
  store i32 %21, i32* %4, align 4, !dbg !17360
  br label %22, !dbg !17368

22:                                               ; preds = %30, %13
  call void @llvm.dbg.declare(metadata i32* %5, metadata !17369, metadata !DIExpression()), !dbg !17373
  %23 = call i32 @k_cycle_get_32() #10, !dbg !17374
  store i32 %23, i32* %5, align 4, !dbg !17373
  %24 = load i32, i32* %5, align 4, !dbg !17375
  %25 = load i32, i32* %3, align 4, !dbg !17377
  %26 = sub i32 %24, %25, !dbg !17378
  %27 = load i32, i32* %4, align 4, !dbg !17379
  %28 = icmp uge i32 %26, %27, !dbg !17380
  br i1 %28, label %29, label %30, !dbg !17381

29:                                               ; preds = %22
  br label %31, !dbg !17382

30:                                               ; preds = %22
  br label %22, !dbg !17384, !llvm.loop !17385

31:                                               ; preds = %29
  br label %32, !dbg !17388

32:                                               ; preds = %31
  br label %33, !dbg !17389

33:                                               ; preds = %12, %32
  ret void, !dbg !17391
}

; Function Attrs: noinline nounwind optnone
define internal i32 @k_cycle_get_32() #1 !dbg !17392 {
  %1 = call i32 @arch_k_cycle_get_32() #10, !dbg !17393
  ret i32 %1, !dbg !17394
}

; Function Attrs: noinline nounwind optnone
define internal i32 @sys_clock_hw_cycles_per_sec.123() #1 !dbg !17395 {
  ret i32 200000000, !dbg !17396
}

; Function Attrs: noinline nounwind optnone
define internal i32 @arch_k_cycle_get_32() #1 !dbg !17397 {
  %1 = call i32 @sys_clock_cycle_get_32() #10, !dbg !17399
  ret i32 %1, !dbg !17400
}

; Function Attrs: noinline nounwind optnone
define dso_local i64 @sys_clock_timeout_end_calc([1 x i64] %0) #1 !dbg !17401 {
  %2 = alloca i64, align 8
  %3 = alloca %union.argument_value, align 8
  %4 = alloca i64, align 8
  %5 = alloca %union.argument_value, align 8
  %6 = alloca %union.argument_value, align 8
  %7 = getelementptr inbounds %union.argument_value, %union.argument_value* %3, i32 0, i32 0
  %8 = bitcast i64* %7 to [1 x i64]*
  store [1 x i64] %0, [1 x i64]* %8, align 8
  call void @llvm.dbg.declare(metadata %union.argument_value* %3, metadata !17404, metadata !DIExpression()), !dbg !17405
  call void @llvm.dbg.declare(metadata i64* %4, metadata !17406, metadata !DIExpression()), !dbg !17407
  %9 = getelementptr inbounds %union.argument_value, %union.argument_value* %3, i32 0, i32 0, !dbg !17408
  %10 = load i64, i64* %9, align 8, !dbg !17408
  %11 = getelementptr inbounds %union.argument_value, %union.argument_value* %5, i32 0, i32 0, !dbg !17408
  store i64 -1, i64* %11, align 8, !dbg !17408
  %12 = icmp eq i64 %10, -1, !dbg !17408
  br i1 %12, label %13, label %14, !dbg !17410

13:                                               ; preds = %1
  store i64 -1, i64* %2, align 8, !dbg !17411
  br label %40, !dbg !17411

14:                                               ; preds = %1
  %15 = getelementptr inbounds %union.argument_value, %union.argument_value* %3, i32 0, i32 0, !dbg !17413
  %16 = load i64, i64* %15, align 8, !dbg !17413
  %17 = getelementptr inbounds %union.argument_value, %union.argument_value* %6, i32 0, i32 0, !dbg !17413
  store i64 0, i64* %17, align 8, !dbg !17413
  %18 = icmp eq i64 %16, 0, !dbg !17413
  br i1 %18, label %19, label %21, !dbg !17415

19:                                               ; preds = %14
  %20 = call i64 @sys_clock_tick_get() #10, !dbg !17416
  store i64 %20, i64* %2, align 8, !dbg !17418
  br label %40, !dbg !17418

21:                                               ; preds = %14
  %22 = getelementptr inbounds %union.argument_value, %union.argument_value* %3, i32 0, i32 0, !dbg !17419
  %23 = load i64, i64* %22, align 8, !dbg !17419
  store i64 %23, i64* %4, align 8, !dbg !17421
  %24 = load i64, i64* %4, align 8, !dbg !17422
  %25 = sub nsw i64 -2, %24, !dbg !17422
  %26 = icmp sge i64 %25, 0, !dbg !17424
  br i1 %26, label %27, label %30, !dbg !17425

27:                                               ; preds = %21
  %28 = load i64, i64* %4, align 8, !dbg !17426
  %29 = sub nsw i64 -2, %28, !dbg !17426
  store i64 %29, i64* %2, align 8, !dbg !17428
  br label %40, !dbg !17428

30:                                               ; preds = %21
  %31 = call i64 @sys_clock_tick_get() #10, !dbg !17429
  %32 = load i64, i64* %4, align 8, !dbg !17430
  %33 = icmp sgt i64 1, %32, !dbg !17430
  br i1 %33, label %34, label %35, !dbg !17430

34:                                               ; preds = %30
  br label %37, !dbg !17430

35:                                               ; preds = %30
  %36 = load i64, i64* %4, align 8, !dbg !17430
  br label %37, !dbg !17430

37:                                               ; preds = %35, %34
  %38 = phi i64 [ 1, %34 ], [ %36, %35 ], !dbg !17430
  %39 = add nsw i64 %31, %38, !dbg !17431
  store i64 %39, i64* %2, align 8, !dbg !17432
  br label %40, !dbg !17432

40:                                               ; preds = %37, %27, %19, %13
  %41 = load i64, i64* %2, align 8, !dbg !17433
  ret i64 %41, !dbg !17433
}

; Function Attrs: noinline nounwind optnone
define dso_local void @boot_banner() #1 !dbg !17434 {
  call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.126, i32 0, i32 0)) #10, !dbg !17436
  ret void, !dbg !17437
}

attributes #0 = { "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #1 = { noinline nounwind optnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #2 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #3 = { argmemonly nofree nounwind willreturn writeonly }
attributes #4 = { nofree nosync nounwind willreturn }
attributes #5 = { noinline noreturn nounwind optnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #6 = { noinline nounwind optnone readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #7 = { argmemonly nofree nounwind willreturn }
attributes #8 = { alwaysinline nounwind "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { nounwind }
attributes #10 = { nobuiltin "no-builtins" }
attributes #11 = { nobuiltin nounwind readnone willreturn "no-builtins" }
attributes #12 = { nobuiltin noreturn "no-builtins" }
attributes #13 = { nobuiltin nounwind "no-builtins" }

!llvm.dbg.cu = !{!1008, !2, !2096, !27, !269, !2098, !2100, !2138, !278, !2140, !2151, !2198, !2200, !2228, !2256, !2299, !2371, !2416, !2444, !707, !717, !824, !1019, !1298, !2454, !1560, !2456, !2459, !2536, !2550, !2562, !2687, !1590, !2690, !1596, !1936, !2708, !1950, !2710, !2059, !2713}
!llvm.ident = !{!2715, !2715, !2715, !2715, !2715, !2715, !2715, !2715, !2715, !2715, !2715, !2715, !2715, !2715, !2715, !2715, !2715, !2715, !2715, !2715, !2715, !2715, !2715, !2715, !2715, !2715, !2715, !2715, !2715, !2715, !2715, !2715, !2715, !2715, !2715, !2715, !2715, !2715, !2715, !2715, !2715}
!llvm.module.flags = !{!2716, !2717, !2718, !2719, !2720, !2721, !2722, !2723, !2724}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "_irq_vector_table", scope: !2, file: !7, line: 10, type: !21, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/gdbstub/zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/gdbstub")
!4 = !{!0, !5}
!5 = !DIGlobalVariableExpression(var: !6, expr: !DIExpression())
!6 = distinct !DIGlobalVariable(name: "_sw_isr_table", scope: !2, file: !7, line: 139, type: !8, isLocal: false, isDefinition: true)
!7 = !DIFile(filename: "zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/gdbstub")
!8 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 8128, elements: !19)
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_table_entry", file: !10, line: 36, size: 64, elements: !11)
!10 = !DIFile(filename: "zephyr/include/zephyr/sw_isr_table.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11 = !{!12, !15}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !9, file: !10, line: 37, baseType: !13, size: 32)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 32)
!14 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "isr", scope: !9, file: !10, line: 38, baseType: !16, size: 32, offset: 32)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 32)
!17 = !DISubroutineType(types: !18)
!18 = !{null, !13}
!19 = !{!20}
!20 = !DISubrange(count: 127)
!21 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 4064, elements: !19)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !23, line: 105, baseType: !24)
!23 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdint.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!24 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(name: "_k_thread_obj_thread", scope: !27, file: !107, line: 36, type: !113, isLocal: false, isDefinition: true)
!27 = distinct !DICompileUnit(language: DW_LANG_C99, file: !28, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !104, splitDebugInlining: false, nameTableKind: None)
!28 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/subsys/debug/gdbstub/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/gdbstub")
!29 = !{!30}
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_objects", file: !31, line: 27, baseType: !32, size: 32, elements: !33)
!31 = !DIFile(filename: "zephyr/include/zephyr/sys/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!32 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!33 = !{!34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100}
!34 = !DIEnumerator(name: "K_OBJ_ANY", value: 0)
!35 = !DIEnumerator(name: "K_OBJ_MEM_SLAB", value: 1)
!36 = !DIEnumerator(name: "K_OBJ_MSGQ", value: 2)
!37 = !DIEnumerator(name: "K_OBJ_MUTEX", value: 3)
!38 = !DIEnumerator(name: "K_OBJ_PIPE", value: 4)
!39 = !DIEnumerator(name: "K_OBJ_QUEUE", value: 5)
!40 = !DIEnumerator(name: "K_OBJ_POLL_SIGNAL", value: 6)
!41 = !DIEnumerator(name: "K_OBJ_SEM", value: 7)
!42 = !DIEnumerator(name: "K_OBJ_STACK", value: 8)
!43 = !DIEnumerator(name: "K_OBJ_THREAD", value: 9)
!44 = !DIEnumerator(name: "K_OBJ_TIMER", value: 10)
!45 = !DIEnumerator(name: "K_OBJ_THREAD_STACK_ELEMENT", value: 11)
!46 = !DIEnumerator(name: "K_OBJ_NET_SOCKET", value: 12)
!47 = !DIEnumerator(name: "K_OBJ_NET_IF", value: 13)
!48 = !DIEnumerator(name: "K_OBJ_SYS_MUTEX", value: 14)
!49 = !DIEnumerator(name: "K_OBJ_FUTEX", value: 15)
!50 = !DIEnumerator(name: "K_OBJ_CONDVAR", value: 16)
!51 = !DIEnumerator(name: "K_OBJ_DRIVER_CRYPTO", value: 17)
!52 = !DIEnumerator(name: "K_OBJ_DRIVER_ADC", value: 18)
!53 = !DIEnumerator(name: "K_OBJ_DRIVER_BBRAM", value: 19)
!54 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN", value: 20)
!55 = !DIEnumerator(name: "K_OBJ_DRIVER_COREDUMP", value: 21)
!56 = !DIEnumerator(name: "K_OBJ_DRIVER_COUNTER", value: 22)
!57 = !DIEnumerator(name: "K_OBJ_DRIVER_DAC", value: 23)
!58 = !DIEnumerator(name: "K_OBJ_DRIVER_DAI", value: 24)
!59 = !DIEnumerator(name: "K_OBJ_DRIVER_DMA", value: 25)
!60 = !DIEnumerator(name: "K_OBJ_DRIVER_EDAC", value: 26)
!61 = !DIEnumerator(name: "K_OBJ_DRIVER_EEPROM", value: 27)
!62 = !DIEnumerator(name: "K_OBJ_DRIVER_ENTROPY", value: 28)
!63 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI", value: 29)
!64 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI_SAF", value: 30)
!65 = !DIEnumerator(name: "K_OBJ_DRIVER_FLASH", value: 31)
!66 = !DIEnumerator(name: "K_OBJ_DRIVER_FPGA", value: 32)
!67 = !DIEnumerator(name: "K_OBJ_DRIVER_BATTERY", value: 33)
!68 = !DIEnumerator(name: "K_OBJ_DRIVER_GPIO", value: 34)
!69 = !DIEnumerator(name: "K_OBJ_DRIVER_I2C", value: 35)
!70 = !DIEnumerator(name: "K_OBJ_DRIVER_I2S", value: 36)
!71 = !DIEnumerator(name: "K_OBJ_DRIVER_I3C", value: 37)
!72 = !DIEnumerator(name: "K_OBJ_DRIVER_IPM", value: 38)
!73 = !DIEnumerator(name: "K_OBJ_DRIVER_KSCAN", value: 39)
!74 = !DIEnumerator(name: "K_OBJ_DRIVER_LED", value: 40)
!75 = !DIEnumerator(name: "K_OBJ_DRIVER_MBOX", value: 41)
!76 = !DIEnumerator(name: "K_OBJ_DRIVER_MDIO", value: 42)
!77 = !DIEnumerator(name: "K_OBJ_DRIVER_MIPI_DSI", value: 43)
!78 = !DIEnumerator(name: "K_OBJ_DRIVER_PECI", value: 44)
!79 = !DIEnumerator(name: "K_OBJ_DRIVER_PINMUX", value: 45)
!80 = !DIEnumerator(name: "K_OBJ_DRIVER_PS2", value: 46)
!81 = !DIEnumerator(name: "K_OBJ_DRIVER_PTP_CLOCK", value: 47)
!82 = !DIEnumerator(name: "K_OBJ_DRIVER_PWM", value: 48)
!83 = !DIEnumerator(name: "K_OBJ_DRIVER_REGULATOR", value: 49)
!84 = !DIEnumerator(name: "K_OBJ_DRIVER_RESET", value: 50)
!85 = !DIEnumerator(name: "K_OBJ_DRIVER_SDHC", value: 51)
!86 = !DIEnumerator(name: "K_OBJ_DRIVER_SENSOR", value: 52)
!87 = !DIEnumerator(name: "K_OBJ_DRIVER_SPI", value: 53)
!88 = !DIEnumerator(name: "K_OBJ_DRIVER_SYSCON", value: 54)
!89 = !DIEnumerator(name: "K_OBJ_DRIVER_UART", value: 55)
!90 = !DIEnumerator(name: "K_OBJ_DRIVER_W1", value: 56)
!91 = !DIEnumerator(name: "K_OBJ_DRIVER_WDT", value: 57)
!92 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN_TRANSCEIVER", value: 58)
!93 = !DIEnumerator(name: "K_OBJ_DRIVER_UART_MUX", value: 59)
!94 = !DIEnumerator(name: "K_OBJ_DRIVER_EC_HOST_CMD_PERIPH_API", value: 60)
!95 = !DIEnumerator(name: "K_OBJ_DRIVER_ITS", value: 61)
!96 = !DIEnumerator(name: "K_OBJ_DRIVER_PCIE_CTRL", value: 62)
!97 = !DIEnumerator(name: "K_OBJ_DRIVER_TCPC", value: 63)
!98 = !DIEnumerator(name: "K_OBJ_DRIVER_IVSHMEM", value: 64)
!99 = !DIEnumerator(name: "K_OBJ_DRIVER_ETHPHY", value: 65)
!100 = !DIEnumerator(name: "K_OBJ_LAST", value: 66)
!101 = !{!102, !103}
!102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!103 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!104 = !{!105, !258, !262, !25}
!105 = !DIGlobalVariableExpression(var: !106, expr: !DIExpression())
!106 = distinct !DIGlobalVariable(name: "_k_thread_data_thread", scope: !27, file: !107, line: 36, type: !108, isLocal: false, isDefinition: true, align: 32)
!107 = !DIFile(filename: "zephyr/samples/subsys/debug/gdbstub/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!108 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !109, line: 620, size: 384, elements: !110)
!109 = !DIFile(filename: "zephyr/include/zephyr/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!110 = !{!111, !229, !238, !239, !244, !245, !246, !247, !248, !249, !251, !255}
!111 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !108, file: !109, line: 621, baseType: !112, size: 32)
!112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !113, size: 32)
!113 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !114, line: 245, size: 896, elements: !115)
!114 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!115 = !{!116, !188, !201, !202, !203, !204, !224}
!116 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !113, file: !114, line: 247, baseType: !117, size: 384)
!117 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !114, line: 57, size: 384, elements: !118)
!118 = !{!119, !147, !155, !158, !159, !172, !174, !175}
!119 = !DIDerivedType(tag: DW_TAG_member, scope: !117, file: !114, line: 60, baseType: !120, size: 64)
!120 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !117, file: !114, line: 60, size: 64, elements: !121)
!121 = !{!122, !138}
!122 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !120, file: !114, line: 61, baseType: !123, size: 64)
!123 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !124, line: 49, baseType: !125)
!124 = !DIFile(filename: "zephyr/include/zephyr/sys/dlist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!125 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !124, line: 37, size: 64, elements: !126)
!126 = !{!127, !133}
!127 = !DIDerivedType(tag: DW_TAG_member, scope: !125, file: !124, line: 38, baseType: !128, size: 32)
!128 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !125, file: !124, line: 38, size: 32, elements: !129)
!129 = !{!130, !132}
!130 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !128, file: !124, line: 39, baseType: !131, size: 32)
!131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !125, size: 32)
!132 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !128, file: !124, line: 40, baseType: !131, size: 32)
!133 = !DIDerivedType(tag: DW_TAG_member, scope: !125, file: !124, line: 42, baseType: !134, size: 32, offset: 32)
!134 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !125, file: !124, line: 42, size: 32, elements: !135)
!135 = !{!136, !137}
!136 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !134, file: !124, line: 43, baseType: !131, size: 32)
!137 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !134, file: !124, line: 44, baseType: !131, size: 32)
!138 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !120, file: !114, line: 62, baseType: !139, size: 64)
!139 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !140, line: 49, size: 64, elements: !141)
!140 = !DIFile(filename: "zephyr/include/zephyr/sys/rb.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!141 = !{!142}
!142 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !139, file: !140, line: 50, baseType: !143, size: 64)
!143 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 64, elements: !145)
!144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !139, size: 32)
!145 = !{!146}
!146 = !DISubrange(count: 2)
!147 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !117, file: !114, line: 68, baseType: !148, size: 32, offset: 64)
!148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !149, size: 32)
!149 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !150, line: 233, baseType: !151)
!150 = !DIFile(filename: "zephyr/include/zephyr/kernel_structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!151 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !150, line: 231, size: 64, elements: !152)
!152 = !{!153}
!153 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !151, file: !150, line: 232, baseType: !154, size: 64)
!154 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !124, line: 48, baseType: !125)
!155 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !117, file: !114, line: 71, baseType: !156, size: 8, offset: 96)
!156 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !23, line: 88, baseType: !157)
!157 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!158 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !117, file: !114, line: 74, baseType: !156, size: 8, offset: 104)
!159 = !DIDerivedType(tag: DW_TAG_member, scope: !117, file: !114, line: 90, baseType: !160, size: 16, offset: 112)
!160 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !117, file: !114, line: 90, size: 16, elements: !161)
!161 = !{!162, !169}
!162 = !DIDerivedType(tag: DW_TAG_member, scope: !160, file: !114, line: 91, baseType: !163, size: 16)
!163 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !160, file: !114, line: 91, size: 16, elements: !164)
!164 = !{!165, !168}
!165 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !163, file: !114, line: 96, baseType: !166, size: 8)
!166 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !23, line: 72, baseType: !167)
!167 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!168 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !163, file: !114, line: 97, baseType: !156, size: 8, offset: 8)
!169 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !160, file: !114, line: 100, baseType: !170, size: 16)
!170 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !23, line: 89, baseType: !171)
!171 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!172 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !117, file: !114, line: 107, baseType: !173, size: 32, offset: 128)
!173 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !23, line: 90, baseType: !32)
!174 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !117, file: !114, line: 127, baseType: !102, size: 32, offset: 160)
!175 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !117, file: !114, line: 131, baseType: !176, size: 192, offset: 192)
!176 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !150, line: 244, size: 192, elements: !177)
!177 = !{!178, !179, !185}
!178 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !176, file: !150, line: 245, baseType: !123, size: 64)
!179 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !176, file: !150, line: 246, baseType: !180, size: 32, offset: 64)
!180 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !150, line: 242, baseType: !181)
!181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !182, size: 32)
!182 = !DISubroutineType(types: !183)
!183 = !{null, !184}
!184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !176, size: 32)
!185 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !176, file: !150, line: 249, baseType: !186, size: 64, offset: 128)
!186 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !23, line: 75, baseType: !187)
!187 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!188 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !113, file: !114, line: 250, baseType: !189, size: 288, offset: 384)
!189 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !190, line: 25, size: 288, elements: !191)
!190 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!191 = !{!192, !193, !194, !195, !196, !197, !198, !199, !200}
!192 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !189, file: !190, line: 26, baseType: !173, size: 32)
!193 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !189, file: !190, line: 27, baseType: !173, size: 32, offset: 32)
!194 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !189, file: !190, line: 28, baseType: !173, size: 32, offset: 64)
!195 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !189, file: !190, line: 29, baseType: !173, size: 32, offset: 96)
!196 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !189, file: !190, line: 30, baseType: !173, size: 32, offset: 128)
!197 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !189, file: !190, line: 31, baseType: !173, size: 32, offset: 160)
!198 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !189, file: !190, line: 32, baseType: !173, size: 32, offset: 192)
!199 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !189, file: !190, line: 33, baseType: !173, size: 32, offset: 224)
!200 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !189, file: !190, line: 34, baseType: !173, size: 32, offset: 256)
!201 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !113, file: !114, line: 253, baseType: !102, size: 32, offset: 672)
!202 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !113, file: !114, line: 256, baseType: !149, size: 64, offset: 704)
!203 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !113, file: !114, line: 294, baseType: !103, size: 32, offset: 768)
!204 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !113, file: !114, line: 325, baseType: !205, size: 32, offset: 800)
!205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !206, size: 32)
!206 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !109, line: 5073, size: 160, elements: !207)
!207 = !{!208, !219, !220}
!208 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !206, file: !109, line: 5074, baseType: !209, size: 96)
!209 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !210, line: 56, size: 96, elements: !211)
!210 = !DIFile(filename: "zephyr/include/zephyr/sys/sys_heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!211 = !{!212, !215, !216}
!212 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !209, file: !210, line: 57, baseType: !213, size: 32)
!213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !214, size: 32)
!214 = !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !210, line: 57, flags: DIFlagFwdDecl)
!215 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !209, file: !210, line: 58, baseType: !102, size: 32, offset: 32)
!216 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !209, file: !210, line: 59, baseType: !217, size: 32, offset: 64)
!217 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !218, line: 214, baseType: !32)
!218 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stddef.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!219 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !206, file: !109, line: 5075, baseType: !149, size: 64, offset: 96)
!220 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !206, file: !109, line: 5076, baseType: !221, offset: 160)
!221 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !222, line: 43, elements: !223)
!222 = !DIFile(filename: "zephyr/include/zephyr/spinlock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!223 = !{}
!224 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !113, file: !114, line: 343, baseType: !225, size: 64, offset: 832)
!225 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !190, line: 60, size: 64, elements: !226)
!226 = !{!227, !228}
!227 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !225, file: !190, line: 63, baseType: !173, size: 32)
!228 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !225, file: !190, line: 66, baseType: !173, size: 32, offset: 32)
!229 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !108, file: !109, line: 622, baseType: !230, size: 32, offset: 32)
!230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !231, size: 32)
!231 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !232, line: 44, baseType: !233)
!232 = !DIFile(filename: "zephyr/include/zephyr/sys/arch_interface.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!233 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !234, line: 47, size: 8, elements: !235)
!234 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread_stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!235 = !{!236}
!236 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !233, file: !234, line: 48, baseType: !237, size: 8)
!237 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!238 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !108, file: !109, line: 623, baseType: !32, size: 32, offset: 64)
!239 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !108, file: !109, line: 624, baseType: !240, size: 32, offset: 96)
!240 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_entry_t", file: !232, line: 46, baseType: !241)
!241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !242, size: 32)
!242 = !DISubroutineType(types: !243)
!243 = !{null, !102, !102, !102}
!244 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !108, file: !109, line: 625, baseType: !102, size: 32, offset: 128)
!245 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !108, file: !109, line: 626, baseType: !102, size: 32, offset: 160)
!246 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !108, file: !109, line: 627, baseType: !102, size: 32, offset: 192)
!247 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !108, file: !109, line: 628, baseType: !103, size: 32, offset: 224)
!248 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !108, file: !109, line: 629, baseType: !173, size: 32, offset: 256)
!249 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !108, file: !109, line: 630, baseType: !250, size: 32, offset: 288)
!250 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !23, line: 74, baseType: !103)
!251 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !108, file: !109, line: 631, baseType: !252, size: 32, offset: 320)
!252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !253, size: 32)
!253 = !DISubroutineType(types: !254)
!254 = !{null}
!255 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !108, file: !109, line: 632, baseType: !256, size: 32, offset: 352)
!256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !257, size: 32)
!257 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !237)
!258 = !DIGlobalVariableExpression(var: !259, expr: !DIExpression())
!259 = distinct !DIGlobalVariable(name: "thread", scope: !27, file: !107, line: 36, type: !260, isLocal: false, isDefinition: true)
!260 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !261)
!261 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !114, line: 347, baseType: !112)
!262 = !DIGlobalVariableExpression(var: !263, expr: !DIExpression())
!263 = distinct !DIGlobalVariable(name: "_k_thread_stack_thread", scope: !27, file: !107, line: 36, type: !264, isLocal: false, isDefinition: true, align: 64)
!264 = !DICompositeType(tag: DW_TAG_array_type, baseType: !233, size: 4096, elements: !265)
!265 = !{!266}
!266 = !DISubrange(count: 512)
!267 = !DIGlobalVariableExpression(var: !268, expr: !DIExpression())
!268 = distinct !DIGlobalVariable(name: "_char_out", scope: !269, file: !272, line: 54, type: !273, isLocal: false, isDefinition: true)
!269 = distinct !DICompileUnit(language: DW_LANG_C99, file: !270, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !271, splitDebugInlining: false, nameTableKind: None)
!270 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/gdbstub")
!271 = !{!267}
!272 = !DIFile(filename: "zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !274, size: 32)
!274 = !DISubroutineType(types: !275)
!275 = !{!103, !103}
!276 = !DIGlobalVariableExpression(var: !277, expr: !DIExpression())
!277 = distinct !DIGlobalVariable(name: "__init_nxp_mcimx7_init", scope: !278, file: !692, line: 258, type: !693, isLocal: true, isDefinition: true, align: 32)
!278 = distinct !DICompileUnit(language: DW_LANG_C99, file: !279, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !280, retainedTypes: !563, globals: !691, splitDebugInlining: false, nameTableKind: None)
!279 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/nxp_imx/mcimx7_m4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/gdbstub")
!280 = !{!281, !313, !323, !372, !378, !499, !534}
!281 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_ccm_root_control", file: !282, line: 54, baseType: !32, size: 32, elements: !283)
!282 = !DIFile(filename: "modules/hal/nxp/imx/drivers/./ccm_imx7d.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!283 = !{!284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312}
!284 = !DIEnumerator(name: "ccmRootM4", value: 809009280)
!285 = !DIEnumerator(name: "ccmRootAxi", value: 809011200)
!286 = !DIEnumerator(name: "ccmRootAhb", value: 809013248)
!287 = !DIEnumerator(name: "ccmRootIpg", value: 809013376)
!288 = !DIEnumerator(name: "ccmRootQspi", value: 809020032)
!289 = !DIEnumerator(name: "ccmRootCan1", value: 809020544)
!290 = !DIEnumerator(name: "ccmRootCan2", value: 809020672)
!291 = !DIEnumerator(name: "ccmRootI2c1", value: 809020800)
!292 = !DIEnumerator(name: "ccmRootI2c2", value: 809020928)
!293 = !DIEnumerator(name: "ccmRootI2c3", value: 809021056)
!294 = !DIEnumerator(name: "ccmRootI2c4", value: 809021184)
!295 = !DIEnumerator(name: "ccmRootUart1", value: 809021312)
!296 = !DIEnumerator(name: "ccmRootUart2", value: 809021440)
!297 = !DIEnumerator(name: "ccmRootUart3", value: 809021568)
!298 = !DIEnumerator(name: "ccmRootUart4", value: 809021696)
!299 = !DIEnumerator(name: "ccmRootUart5", value: 809021824)
!300 = !DIEnumerator(name: "ccmRootUart6", value: 809021952)
!301 = !DIEnumerator(name: "ccmRootUart7", value: 809022080)
!302 = !DIEnumerator(name: "ccmRootEcspi1", value: 809022208)
!303 = !DIEnumerator(name: "ccmRootEcspi2", value: 809022336)
!304 = !DIEnumerator(name: "ccmRootEcspi3", value: 809022464)
!305 = !DIEnumerator(name: "ccmRootEcspi4", value: 809022592)
!306 = !DIEnumerator(name: "ccmRootFtm1", value: 809023232)
!307 = !DIEnumerator(name: "ccmRootFtm2", value: 809023360)
!308 = !DIEnumerator(name: "ccmRootGpt1", value: 809023744)
!309 = !DIEnumerator(name: "ccmRootGpt2", value: 809023872)
!310 = !DIEnumerator(name: "ccmRootGpt3", value: 809024000)
!311 = !DIEnumerator(name: "ccmRootGpt4", value: 809024128)
!312 = !DIEnumerator(name: "ccmRootWdog", value: 809024384)
!313 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_ccm_rootmux_wdog", file: !282, line: 224, baseType: !32, size: 32, elements: !314)
!314 = !{!315, !316, !317, !318, !319, !320, !321, !322}
!315 = !DIEnumerator(name: "ccmRootmuxWdogOsc24m", value: 0)
!316 = !DIEnumerator(name: "ccmRootmuxWdogSysPllPfd2Div2", value: 1)
!317 = !DIEnumerator(name: "ccmRootmuxWdogSysPllDiv4", value: 2)
!318 = !DIEnumerator(name: "ccmRootmuxWdogDdrPllDiv2", value: 3)
!319 = !DIEnumerator(name: "ccmRootmuxWdogEnetPll125m", value: 4)
!320 = !DIEnumerator(name: "ccmRootmuxWdogUsbPll", value: 5)
!321 = !DIEnumerator(name: "ccmRootmuxWdogRef1m", value: 6)
!322 = !DIEnumerator(name: "ccmRootmuxWdogSysPllPfd1Div2", value: 7)
!323 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_ccm_ccgr_gate", file: !282, line: 275, baseType: !32, size: 32, elements: !324)
!324 = !{!325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371}
!325 = !DIEnumerator(name: "ccmCcgrGateSimWakeup", value: 808992912)
!326 = !DIEnumerator(name: "ccmCcgrGateIpmux1", value: 808992928)
!327 = !DIEnumerator(name: "ccmCcgrGateIpmux2", value: 808992944)
!328 = !DIEnumerator(name: "ccmCcgrGateIpmux3", value: 808992960)
!329 = !DIEnumerator(name: "ccmCcgrGateOcram", value: 808993040)
!330 = !DIEnumerator(name: "ccmCcgrGateOcramS", value: 808993056)
!331 = !DIEnumerator(name: "ccmCcgrGateQspi", value: 808993104)
!332 = !DIEnumerator(name: "ccmCcgrGateAdc", value: 808993280)
!333 = !DIEnumerator(name: "ccmCcgrGateRdc", value: 808993376)
!334 = !DIEnumerator(name: "ccmCcgrGateMu", value: 808993392)
!335 = !DIEnumerator(name: "ccmCcgrGateSemaHs", value: 808993408)
!336 = !DIEnumerator(name: "ccmCcgrGateSema1", value: 808993792)
!337 = !DIEnumerator(name: "ccmCcgrGateSema2", value: 808993808)
!338 = !DIEnumerator(name: "ccmCcgrGateCan1", value: 808994624)
!339 = !DIEnumerator(name: "ccmCcgrGateCan2", value: 808994640)
!340 = !DIEnumerator(name: "ccmCcgrGateEcspi1", value: 808994688)
!341 = !DIEnumerator(name: "ccmCcgrGateEcspi2", value: 808994704)
!342 = !DIEnumerator(name: "ccmCcgrGateEcspi3", value: 808994720)
!343 = !DIEnumerator(name: "ccmCcgrGateEcspi4", value: 808994736)
!344 = !DIEnumerator(name: "ccmCcgrGateGpt1", value: 808994752)
!345 = !DIEnumerator(name: "ccmCcgrGateGpt2", value: 808994768)
!346 = !DIEnumerator(name: "ccmCcgrGateGpt3", value: 808994784)
!347 = !DIEnumerator(name: "ccmCcgrGateGpt4", value: 808994800)
!348 = !DIEnumerator(name: "ccmCcgrGateI2c1", value: 808994944)
!349 = !DIEnumerator(name: "ccmCcgrGateI2c2", value: 808994960)
!350 = !DIEnumerator(name: "ccmCcgrGateI2c3", value: 808994976)
!351 = !DIEnumerator(name: "ccmCcgrGateI2c4", value: 808994992)
!352 = !DIEnumerator(name: "ccmCcgrGateUart1", value: 808995136)
!353 = !DIEnumerator(name: "ccmCcgrGateUart2", value: 808995152)
!354 = !DIEnumerator(name: "ccmCcgrGateUart3", value: 808995168)
!355 = !DIEnumerator(name: "ccmCcgrGateUart4", value: 808995184)
!356 = !DIEnumerator(name: "ccmCcgrGateUart5", value: 808995200)
!357 = !DIEnumerator(name: "ccmCcgrGateUart6", value: 808995216)
!358 = !DIEnumerator(name: "ccmCcgrGateUart7", value: 808995232)
!359 = !DIEnumerator(name: "ccmCcgrGateWdog1", value: 808995264)
!360 = !DIEnumerator(name: "ccmCcgrGateWdog2", value: 808995280)
!361 = !DIEnumerator(name: "ccmCcgrGateWdog3", value: 808995296)
!362 = !DIEnumerator(name: "ccmCcgrGateWdog4", value: 808995312)
!363 = !DIEnumerator(name: "ccmCcgrGateGpio1", value: 808995328)
!364 = !DIEnumerator(name: "ccmCcgrGateGpio2", value: 808995344)
!365 = !DIEnumerator(name: "ccmCcgrGateGpio3", value: 808995360)
!366 = !DIEnumerator(name: "ccmCcgrGateGpio4", value: 808995376)
!367 = !DIEnumerator(name: "ccmCcgrGateGpio5", value: 808995392)
!368 = !DIEnumerator(name: "ccmCcgrGateGpio6", value: 808995408)
!369 = !DIEnumerator(name: "ccmCcgrGateGpio7", value: 808995424)
!370 = !DIEnumerator(name: "ccmCcgrGateIomux", value: 808995456)
!371 = !DIEnumerator(name: "ccmCcgrGateIomuxLpsr", value: 808995472)
!372 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_ccm_gate_value", file: !282, line: 327, baseType: !32, size: 32, elements: !373)
!373 = !{!374, !375, !376, !377}
!374 = !DIEnumerator(name: "ccmClockNotNeeded", value: 0)
!375 = !DIEnumerator(name: "ccmClockNeededRun", value: 4369)
!376 = !DIEnumerator(name: "ccmClockNeededRunWait", value: 8738)
!377 = !DIEnumerator(name: "ccmClockNeededAll", value: 13107)
!378 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_rdc_pdap", file: !379, line: 76, baseType: !32, size: 32, elements: !380)
!379 = !DIFile(filename: "modules/hal/nxp/imx/drivers/./rdc_defs_imx7d.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!380 = !{!381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498}
!381 = !DIEnumerator(name: "rdcPdapGpio1", value: 0)
!382 = !DIEnumerator(name: "rdcPdapGpio2", value: 1)
!383 = !DIEnumerator(name: "rdcPdapGpio3", value: 2)
!384 = !DIEnumerator(name: "rdcPdapGpio4", value: 3)
!385 = !DIEnumerator(name: "rdcPdapGpio5", value: 4)
!386 = !DIEnumerator(name: "rdcPdapGpio6", value: 5)
!387 = !DIEnumerator(name: "rdcPdapGpio7", value: 6)
!388 = !DIEnumerator(name: "rdcPdapIomuxcLpsrGpr", value: 7)
!389 = !DIEnumerator(name: "rdcPdapWdog1", value: 8)
!390 = !DIEnumerator(name: "rdcPdapWdog2", value: 9)
!391 = !DIEnumerator(name: "rdcPdapWdog3", value: 10)
!392 = !DIEnumerator(name: "rdcPdapWdog4", value: 11)
!393 = !DIEnumerator(name: "rdcPdapIomuxcLpsr", value: 12)
!394 = !DIEnumerator(name: "rdcPdapGpt1", value: 13)
!395 = !DIEnumerator(name: "rdcPdapGpt2", value: 14)
!396 = !DIEnumerator(name: "rdcPdapGpt3", value: 15)
!397 = !DIEnumerator(name: "rdcPdapGpt4", value: 16)
!398 = !DIEnumerator(name: "rdcPdapRomcp", value: 17)
!399 = !DIEnumerator(name: "rdcPdapKpp", value: 18)
!400 = !DIEnumerator(name: "rdcPdapIomuxc", value: 19)
!401 = !DIEnumerator(name: "rdcPdapIomuxcGpr", value: 20)
!402 = !DIEnumerator(name: "rdcPdapOcotpCtrl", value: 21)
!403 = !DIEnumerator(name: "rdcPdapAnatopDig", value: 22)
!404 = !DIEnumerator(name: "rdcPdapSnvs", value: 23)
!405 = !DIEnumerator(name: "rdcPdapCcm", value: 24)
!406 = !DIEnumerator(name: "rdcPdapSrc", value: 25)
!407 = !DIEnumerator(name: "rdcPdapGpc", value: 26)
!408 = !DIEnumerator(name: "rdcPdapSemaphore1", value: 27)
!409 = !DIEnumerator(name: "rdcPdapSemaphore2", value: 28)
!410 = !DIEnumerator(name: "rdcPdapRdc", value: 29)
!411 = !DIEnumerator(name: "rdcPdapCsu", value: 30)
!412 = !DIEnumerator(name: "rdcPdapReserved1", value: 31)
!413 = !DIEnumerator(name: "rdcPdapReserved2", value: 32)
!414 = !DIEnumerator(name: "rdcPdapAdc1", value: 33)
!415 = !DIEnumerator(name: "rdcPdapAdc2", value: 34)
!416 = !DIEnumerator(name: "rdcPdapEcspi4", value: 35)
!417 = !DIEnumerator(name: "rdcPdapFlexTimer1", value: 36)
!418 = !DIEnumerator(name: "rdcPdapFlexTimer2", value: 37)
!419 = !DIEnumerator(name: "rdcPdapPwm1", value: 38)
!420 = !DIEnumerator(name: "rdcPdapPwm2", value: 39)
!421 = !DIEnumerator(name: "rdcPdapPwm3", value: 40)
!422 = !DIEnumerator(name: "rdcPdapPwm4", value: 41)
!423 = !DIEnumerator(name: "rdcPdapSystemCounterRead", value: 42)
!424 = !DIEnumerator(name: "rdcPdapSystemCounterCompare", value: 43)
!425 = !DIEnumerator(name: "rdcPdapSystemCounterControl", value: 44)
!426 = !DIEnumerator(name: "rdcPdapPcie", value: 45)
!427 = !DIEnumerator(name: "rdcPdapReserved3", value: 46)
!428 = !DIEnumerator(name: "rdcPdapEpdc", value: 47)
!429 = !DIEnumerator(name: "rdcPdapPxp", value: 48)
!430 = !DIEnumerator(name: "rdcPdapCsi", value: 49)
!431 = !DIEnumerator(name: "rdcPdapReserved4", value: 50)
!432 = !DIEnumerator(name: "rdcPdapLcdif", value: 51)
!433 = !DIEnumerator(name: "rdcPdapReserved5", value: 52)
!434 = !DIEnumerator(name: "rdcPdapMipiCsi", value: 53)
!435 = !DIEnumerator(name: "rdcPdapMipiDsi", value: 54)
!436 = !DIEnumerator(name: "rdcPdapReserved6", value: 55)
!437 = !DIEnumerator(name: "rdcPdapTzasc", value: 56)
!438 = !DIEnumerator(name: "rdcPdapDdrPhy", value: 57)
!439 = !DIEnumerator(name: "rdcPdapDdrc", value: 58)
!440 = !DIEnumerator(name: "rdcPdapReserved7", value: 59)
!441 = !DIEnumerator(name: "rdcPdapPerfMon1", value: 60)
!442 = !DIEnumerator(name: "rdcPdapPerfMon2", value: 61)
!443 = !DIEnumerator(name: "rdcPdapAxi", value: 62)
!444 = !DIEnumerator(name: "rdcPdapQosc", value: 63)
!445 = !DIEnumerator(name: "rdcPdapFlexCan1", value: 64)
!446 = !DIEnumerator(name: "rdcPdapFlexCan2", value: 65)
!447 = !DIEnumerator(name: "rdcPdapI2c1", value: 66)
!448 = !DIEnumerator(name: "rdcPdapI2c2", value: 67)
!449 = !DIEnumerator(name: "rdcPdapI2c3", value: 68)
!450 = !DIEnumerator(name: "rdcPdapI2c4", value: 69)
!451 = !DIEnumerator(name: "rdcPdapUart4", value: 70)
!452 = !DIEnumerator(name: "rdcPdapUart5", value: 71)
!453 = !DIEnumerator(name: "rdcPdapUart6", value: 72)
!454 = !DIEnumerator(name: "rdcPdapUart7", value: 73)
!455 = !DIEnumerator(name: "rdcPdapMuA", value: 74)
!456 = !DIEnumerator(name: "rdcPdapMuB", value: 75)
!457 = !DIEnumerator(name: "rdcPdapSemaphoreHs", value: 76)
!458 = !DIEnumerator(name: "rdcPdapUsbPl301", value: 77)
!459 = !DIEnumerator(name: "rdcPdapReserved8", value: 78)
!460 = !DIEnumerator(name: "rdcPdapReserved9", value: 79)
!461 = !DIEnumerator(name: "rdcPdapReserved10", value: 80)
!462 = !DIEnumerator(name: "rdcPdapUSB1Otg1", value: 81)
!463 = !DIEnumerator(name: "rdcPdapUSB2Otg2", value: 82)
!464 = !DIEnumerator(name: "rdcPdapUSB3Host", value: 83)
!465 = !DIEnumerator(name: "rdcPdapUsdhc1", value: 84)
!466 = !DIEnumerator(name: "rdcPdapUsdhc2", value: 85)
!467 = !DIEnumerator(name: "rdcPdapUsdhc3", value: 86)
!468 = !DIEnumerator(name: "rdcPdapReserved11", value: 87)
!469 = !DIEnumerator(name: "rdcPdapReserved12", value: 88)
!470 = !DIEnumerator(name: "rdcPdapSim1", value: 89)
!471 = !DIEnumerator(name: "rdcPdapSim2", value: 90)
!472 = !DIEnumerator(name: "rdcPdapQspi", value: 91)
!473 = !DIEnumerator(name: "rdcPdapWeim", value: 92)
!474 = !DIEnumerator(name: "rdcPdapSdma", value: 93)
!475 = !DIEnumerator(name: "rdcPdapEnet1", value: 94)
!476 = !DIEnumerator(name: "rdcPdapEnet2", value: 95)
!477 = !DIEnumerator(name: "rdcPdapReserved13", value: 96)
!478 = !DIEnumerator(name: "rdcPdapReserved14", value: 97)
!479 = !DIEnumerator(name: "rdcPdapEcspi1", value: 98)
!480 = !DIEnumerator(name: "rdcPdapEcspi2", value: 99)
!481 = !DIEnumerator(name: "rdcPdapEcspi3", value: 100)
!482 = !DIEnumerator(name: "rdcPdapReserved15", value: 101)
!483 = !DIEnumerator(name: "rdcPdapUart1", value: 102)
!484 = !DIEnumerator(name: "rdcPdapReserved16", value: 103)
!485 = !DIEnumerator(name: "rdcPdapUart3", value: 104)
!486 = !DIEnumerator(name: "rdcPdapUart2", value: 105)
!487 = !DIEnumerator(name: "rdcPdapSai1", value: 106)
!488 = !DIEnumerator(name: "rdcPdapSai2", value: 107)
!489 = !DIEnumerator(name: "rdcPdapSai3", value: 108)
!490 = !DIEnumerator(name: "rdcPdapReserved17", value: 109)
!491 = !DIEnumerator(name: "rdcPdapReserved18", value: 110)
!492 = !DIEnumerator(name: "rdcPdapSpba", value: 111)
!493 = !DIEnumerator(name: "rdcPdapDap", value: 112)
!494 = !DIEnumerator(name: "rdcPdapReserved19", value: 113)
!495 = !DIEnumerator(name: "rdcPdapReserved20", value: 114)
!496 = !DIEnumerator(name: "rdcPdapReserved21", value: 115)
!497 = !DIEnumerator(name: "rdcPdapCaam", value: 116)
!498 = !DIEnumerator(name: "rdcPdapReserved22", value: 117)
!499 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_ccm_pll_gate", file: !282, line: 237, baseType: !32, size: 32, elements: !500)
!500 = !{!501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533}
!501 = !DIEnumerator(name: "ccmPllGateCkil", value: 808978432)
!502 = !DIEnumerator(name: "ccmPllGateArm", value: 808978448)
!503 = !DIEnumerator(name: "ccmPllGateArmDiv1", value: 808978464)
!504 = !DIEnumerator(name: "ccmPllGateDdr", value: 808978480)
!505 = !DIEnumerator(name: "ccmPllGateDdrDiv1", value: 808978496)
!506 = !DIEnumerator(name: "ccmPllGateDdrDiv2", value: 808978512)
!507 = !DIEnumerator(name: "ccmPllGateSys", value: 808978528)
!508 = !DIEnumerator(name: "ccmPllGateSysDiv1", value: 808978544)
!509 = !DIEnumerator(name: "ccmPllGateSysDiv2", value: 808978560)
!510 = !DIEnumerator(name: "ccmPllGateSysDiv4", value: 808978576)
!511 = !DIEnumerator(name: "ccmPllGatePfd0", value: 808978592)
!512 = !DIEnumerator(name: "ccmPllGatePfd0Div2", value: 808978608)
!513 = !DIEnumerator(name: "ccmPllGatePfd1", value: 808978624)
!514 = !DIEnumerator(name: "ccmPllGatePfd1Div2", value: 808978640)
!515 = !DIEnumerator(name: "ccmPllGatePfd2", value: 808978656)
!516 = !DIEnumerator(name: "ccmPllGatePfd2Div2", value: 808978672)
!517 = !DIEnumerator(name: "ccmPllGatePfd3", value: 808978688)
!518 = !DIEnumerator(name: "ccmPllGatePfd4", value: 808978704)
!519 = !DIEnumerator(name: "ccmPllGatePfd5", value: 808978720)
!520 = !DIEnumerator(name: "ccmPllGatePfd6", value: 808978736)
!521 = !DIEnumerator(name: "ccmPllGatePfd7", value: 808978752)
!522 = !DIEnumerator(name: "ccmPllGateEnet", value: 808978768)
!523 = !DIEnumerator(name: "ccmPllGateEnet500m", value: 808978784)
!524 = !DIEnumerator(name: "ccmPllGateEnet250m", value: 808978800)
!525 = !DIEnumerator(name: "ccmPllGateEnet125m", value: 808978816)
!526 = !DIEnumerator(name: "ccmPllGateEnet100m", value: 808978832)
!527 = !DIEnumerator(name: "ccmPllGateEnet50m", value: 808978848)
!528 = !DIEnumerator(name: "ccmPllGateEnet40m", value: 808978864)
!529 = !DIEnumerator(name: "ccmPllGateEnet25m", value: 808978880)
!530 = !DIEnumerator(name: "ccmPllGateAudio", value: 808978896)
!531 = !DIEnumerator(name: "ccmPllGateAudioDiv1", value: 808978912)
!532 = !DIEnumerator(name: "ccmPllGateVideo", value: 808978928)
!533 = !DIEnumerator(name: "ccmPllGateVideoDiv1", value: 808978944)
!534 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_rdc_mda", file: !379, line: 44, baseType: !32, size: 32, elements: !535)
!535 = !{!536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562}
!536 = !DIEnumerator(name: "rdcMdaA7", value: 0)
!537 = !DIEnumerator(name: "rdcMdaM4", value: 1)
!538 = !DIEnumerator(name: "rdcMdaPcie", value: 2)
!539 = !DIEnumerator(name: "rdcMdaCsi", value: 3)
!540 = !DIEnumerator(name: "rdcMdaEpdc", value: 4)
!541 = !DIEnumerator(name: "rdcMdaLcdif", value: 5)
!542 = !DIEnumerator(name: "rdcMdaDisplayPort", value: 6)
!543 = !DIEnumerator(name: "rdcMdaPxp", value: 7)
!544 = !DIEnumerator(name: "rdcMdaCoresight", value: 8)
!545 = !DIEnumerator(name: "rdcMdaDap", value: 9)
!546 = !DIEnumerator(name: "rdcMdaCaam", value: 10)
!547 = !DIEnumerator(name: "rdcMdaSdmaPeriph", value: 11)
!548 = !DIEnumerator(name: "rdcMdaSdmaBurst", value: 12)
!549 = !DIEnumerator(name: "rdcMdaApbhdma", value: 13)
!550 = !DIEnumerator(name: "rdcMdaRawnand", value: 14)
!551 = !DIEnumerator(name: "rdcMdaUsdhc1", value: 15)
!552 = !DIEnumerator(name: "rdcMdaUsdhc2", value: 16)
!553 = !DIEnumerator(name: "rdcMdaUsdhc3", value: 17)
!554 = !DIEnumerator(name: "rdcMdaNc1", value: 18)
!555 = !DIEnumerator(name: "rdcMdaUsb", value: 19)
!556 = !DIEnumerator(name: "rdcMdaNc2", value: 20)
!557 = !DIEnumerator(name: "rdcMdaTest", value: 21)
!558 = !DIEnumerator(name: "rdcMdaEnet1Tx", value: 22)
!559 = !DIEnumerator(name: "rdcMdaEnet1Rx", value: 23)
!560 = !DIEnumerator(name: "rdcMdaEnet2Tx", value: 24)
!561 = !DIEnumerator(name: "rdcMdaEnet2Rx", value: 25)
!562 = !DIEnumerator(name: "rdcMdaSdmaPort", value: 26)
!563 = !{!564, !636, !679, !690, !173}
!564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !565, size: 32)
!565 = !DIDerivedType(tag: DW_TAG_typedef, name: "CCM_Type", file: !566, line: 4575, baseType: !567)
!566 = !DIFile(filename: "modules/hal/nxp/imx/devices/MCIMX7D/./MCIMX7D_M4.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!567 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !566, line: 4532, size: 390144, elements: !568)
!568 = !{!569, !571, !572, !573, !574, !578, !588, !592, !602, !606}
!569 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0", scope: !567, file: !566, line: 4533, baseType: !570, size: 32)
!570 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !173)
!571 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0_SET", scope: !567, file: !566, line: 4534, baseType: !570, size: 32, offset: 32)
!572 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0_CLR", scope: !567, file: !566, line: 4535, baseType: !570, size: 32, offset: 64)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0_TOG", scope: !567, file: !566, line: 4536, baseType: !570, size: 32, offset: 96)
!574 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !567, file: !566, line: 4537, baseType: !575, size: 16256, offset: 128)
!575 = !DICompositeType(tag: DW_TAG_array_type, baseType: !156, size: 16256, elements: !576)
!576 = !{!577}
!577 = !DISubrange(count: 2032)
!578 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL", scope: !567, file: !566, line: 4543, baseType: !579, size: 4224, offset: 16384)
!579 = !DICompositeType(tag: DW_TAG_array_type, baseType: !580, size: 4224, elements: !586)
!580 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !567, file: !566, line: 4538, size: 128, elements: !581)
!581 = !{!582, !583, !584, !585}
!582 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL", scope: !580, file: !566, line: 4539, baseType: !570, size: 32)
!583 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL_SET", scope: !580, file: !566, line: 4540, baseType: !570, size: 32, offset: 32)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL_CLR", scope: !580, file: !566, line: 4541, baseType: !570, size: 32, offset: 64)
!585 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL_TOG", scope: !580, file: !566, line: 4542, baseType: !570, size: 32, offset: 96)
!586 = !{!587}
!587 = !DISubrange(count: 33)
!588 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !567, file: !566, line: 4544, baseType: !589, size: 110464, offset: 20608)
!589 = !DICompositeType(tag: DW_TAG_array_type, baseType: !156, size: 110464, elements: !590)
!590 = !{!591}
!591 = !DISubrange(count: 13808)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR", scope: !567, file: !566, line: 4550, baseType: !593, size: 24448, offset: 131072)
!593 = !DICompositeType(tag: DW_TAG_array_type, baseType: !594, size: 24448, elements: !600)
!594 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !567, file: !566, line: 4545, size: 128, elements: !595)
!595 = !{!596, !597, !598, !599}
!596 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR", scope: !594, file: !566, line: 4546, baseType: !570, size: 32)
!597 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR_SET", scope: !594, file: !566, line: 4547, baseType: !570, size: 32, offset: 32)
!598 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR_CLR", scope: !594, file: !566, line: 4548, baseType: !570, size: 32, offset: 64)
!599 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR_TOG", scope: !594, file: !566, line: 4549, baseType: !570, size: 32, offset: 96)
!600 = !{!601}
!601 = !DISubrange(count: 191)
!602 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_2", scope: !567, file: !566, line: 4551, baseType: !603, size: 106624, offset: 155520)
!603 = !DICompositeType(tag: DW_TAG_array_type, baseType: !156, size: 106624, elements: !604)
!604 = !{!605}
!605 = !DISubrange(count: 13328)
!606 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_TOG", scope: !567, file: !566, line: 4574, baseType: !607, size: 128000, offset: 262144)
!607 = !DICompositeType(tag: DW_TAG_array_type, baseType: !608, size: 128000, elements: !634)
!608 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !567, file: !566, line: 4552, size: 1024, elements: !609)
!609 = !{!610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !630, !631, !632, !633}
!610 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT", scope: !608, file: !566, line: 4553, baseType: !570, size: 32)
!611 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT_SET", scope: !608, file: !566, line: 4554, baseType: !570, size: 32, offset: 32)
!612 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT_CLR", scope: !608, file: !566, line: 4555, baseType: !570, size: 32, offset: 64)
!613 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT_TOG", scope: !608, file: !566, line: 4556, baseType: !570, size: 32, offset: 96)
!614 = !DIDerivedType(tag: DW_TAG_member, name: "MISC", scope: !608, file: !566, line: 4557, baseType: !570, size: 32, offset: 128)
!615 = !DIDerivedType(tag: DW_TAG_member, name: "MISC_ROOT_SET", scope: !608, file: !566, line: 4558, baseType: !570, size: 32, offset: 160)
!616 = !DIDerivedType(tag: DW_TAG_member, name: "MISC_ROOT_CLR", scope: !608, file: !566, line: 4559, baseType: !570, size: 32, offset: 192)
!617 = !DIDerivedType(tag: DW_TAG_member, name: "MISC_ROOT_TOG", scope: !608, file: !566, line: 4560, baseType: !570, size: 32, offset: 224)
!618 = !DIDerivedType(tag: DW_TAG_member, name: "POST", scope: !608, file: !566, line: 4561, baseType: !570, size: 32, offset: 256)
!619 = !DIDerivedType(tag: DW_TAG_member, name: "POST_ROOT_SET", scope: !608, file: !566, line: 4562, baseType: !570, size: 32, offset: 288)
!620 = !DIDerivedType(tag: DW_TAG_member, name: "POST_ROOT_CLR", scope: !608, file: !566, line: 4563, baseType: !570, size: 32, offset: 320)
!621 = !DIDerivedType(tag: DW_TAG_member, name: "POST_ROOT_TOG", scope: !608, file: !566, line: 4564, baseType: !570, size: 32, offset: 352)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "PRE", scope: !608, file: !566, line: 4565, baseType: !570, size: 32, offset: 384)
!623 = !DIDerivedType(tag: DW_TAG_member, name: "PRE_ROOT_SET", scope: !608, file: !566, line: 4566, baseType: !570, size: 32, offset: 416)
!624 = !DIDerivedType(tag: DW_TAG_member, name: "PRE_ROOT_CLR", scope: !608, file: !566, line: 4567, baseType: !570, size: 32, offset: 448)
!625 = !DIDerivedType(tag: DW_TAG_member, name: "PRE_ROOT_TOG", scope: !608, file: !566, line: 4568, baseType: !570, size: 32, offset: 480)
!626 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !608, file: !566, line: 4569, baseType: !627, size: 384, offset: 512)
!627 = !DICompositeType(tag: DW_TAG_array_type, baseType: !156, size: 384, elements: !628)
!628 = !{!629}
!629 = !DISubrange(count: 48)
!630 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL", scope: !608, file: !566, line: 4570, baseType: !570, size: 32, offset: 896)
!631 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_SET", scope: !608, file: !566, line: 4571, baseType: !570, size: 32, offset: 928)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_CLR", scope: !608, file: !566, line: 4572, baseType: !570, size: 32, offset: 960)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_TOG", scope: !608, file: !566, line: 4573, baseType: !570, size: 32, offset: 992)
!634 = !{!635}
!635 = !DISubrange(count: 125)
!636 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !637, size: 32)
!637 = !DIDerivedType(tag: DW_TAG_typedef, name: "RDC_Type", file: !566, line: 38320, baseType: !638)
!638 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !566, line: 38303, size: 23040, elements: !639)
!639 = !{!640, !642, !646, !647, !648, !649, !653, !657, !661, !665, !669}
!640 = !DIDerivedType(tag: DW_TAG_member, name: "VIR", scope: !638, file: !566, line: 38304, baseType: !641, size: 32)
!641 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !570)
!642 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !638, file: !566, line: 38305, baseType: !643, size: 256, offset: 32)
!643 = !DICompositeType(tag: DW_TAG_array_type, baseType: !156, size: 256, elements: !644)
!644 = !{!645}
!645 = !DISubrange(count: 32)
!646 = !DIDerivedType(tag: DW_TAG_member, name: "STAT", scope: !638, file: !566, line: 38306, baseType: !570, size: 32, offset: 288)
!647 = !DIDerivedType(tag: DW_TAG_member, name: "INTCTRL", scope: !638, file: !566, line: 38307, baseType: !570, size: 32, offset: 320)
!648 = !DIDerivedType(tag: DW_TAG_member, name: "INTSTAT", scope: !638, file: !566, line: 38308, baseType: !570, size: 32, offset: 352)
!649 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !638, file: !566, line: 38309, baseType: !650, size: 3712, offset: 384)
!650 = !DICompositeType(tag: DW_TAG_array_type, baseType: !156, size: 3712, elements: !651)
!651 = !{!652}
!652 = !DISubrange(count: 464)
!653 = !DIDerivedType(tag: DW_TAG_member, name: "MDA", scope: !638, file: !566, line: 38310, baseType: !654, size: 864, offset: 4096)
!654 = !DICompositeType(tag: DW_TAG_array_type, baseType: !570, size: 864, elements: !655)
!655 = !{!656}
!656 = !DISubrange(count: 27)
!657 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_2", scope: !638, file: !566, line: 38311, baseType: !658, size: 3232, offset: 4960)
!658 = !DICompositeType(tag: DW_TAG_array_type, baseType: !156, size: 3232, elements: !659)
!659 = !{!660}
!660 = !DISubrange(count: 404)
!661 = !DIDerivedType(tag: DW_TAG_member, name: "PDAP", scope: !638, file: !566, line: 38312, baseType: !662, size: 3776, offset: 8192)
!662 = !DICompositeType(tag: DW_TAG_array_type, baseType: !570, size: 3776, elements: !663)
!663 = !{!664}
!664 = !DISubrange(count: 118)
!665 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_3", scope: !638, file: !566, line: 38313, baseType: !666, size: 4416, offset: 11968)
!666 = !DICompositeType(tag: DW_TAG_array_type, baseType: !156, size: 4416, elements: !667)
!667 = !{!668}
!668 = !DISubrange(count: 552)
!669 = !DIDerivedType(tag: DW_TAG_member, name: "MR", scope: !638, file: !566, line: 38319, baseType: !670, size: 6656, offset: 16384)
!670 = !DICompositeType(tag: DW_TAG_array_type, baseType: !671, size: 6656, elements: !677)
!671 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !638, file: !566, line: 38314, size: 128, elements: !672)
!672 = !{!673, !674, !675, !676}
!673 = !DIDerivedType(tag: DW_TAG_member, name: "MRSA", scope: !671, file: !566, line: 38315, baseType: !570, size: 32)
!674 = !DIDerivedType(tag: DW_TAG_member, name: "MREA", scope: !671, file: !566, line: 38316, baseType: !570, size: 32, offset: 32)
!675 = !DIDerivedType(tag: DW_TAG_member, name: "MRC", scope: !671, file: !566, line: 38317, baseType: !570, size: 32, offset: 64)
!676 = !DIDerivedType(tag: DW_TAG_member, name: "MRVS", scope: !671, file: !566, line: 38318, baseType: !570, size: 32, offset: 96)
!677 = !{!678}
!678 = !DISubrange(count: 52)
!679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !680, size: 32)
!680 = !DIDerivedType(tag: DW_TAG_typedef, name: "WDOG_Type", file: !566, line: 43319, baseType: !681)
!681 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !566, line: 43313, size: 80, elements: !682)
!682 = !{!683, !685, !686, !688, !689}
!683 = !DIDerivedType(tag: DW_TAG_member, name: "WCR", scope: !681, file: !566, line: 43314, baseType: !684, size: 16)
!684 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !170)
!685 = !DIDerivedType(tag: DW_TAG_member, name: "WSR", scope: !681, file: !566, line: 43315, baseType: !684, size: 16, offset: 16)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "WRSR", scope: !681, file: !566, line: 43316, baseType: !687, size: 16, offset: 32)
!687 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !684)
!688 = !DIDerivedType(tag: DW_TAG_member, name: "WICR", scope: !681, file: !566, line: 43317, baseType: !684, size: 16, offset: 48)
!689 = !DIDerivedType(tag: DW_TAG_member, name: "WMCR", scope: !681, file: !566, line: 43318, baseType: !684, size: 16, offset: 64)
!690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !570, size: 32)
!691 = !{!276}
!692 = !DIFile(filename: "zephyr/soc/arm/nxp_imx/mcimx7_m4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!693 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !694)
!694 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !695, line: 51, size: 64, elements: !696)
!695 = !DIFile(filename: "zephyr/include/zephyr/init.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!696 = !{!697, !704}
!697 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !694, file: !695, line: 60, baseType: !698, size: 32)
!698 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !699, size: 32)
!699 = !DISubroutineType(types: !700)
!700 = !{!103, !701}
!701 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !702, size: 32)
!702 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !703)
!703 = !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !695, line: 48, flags: DIFlagFwdDecl)
!704 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !694, file: !695, line: 65, baseType: !701, size: 32, offset: 32)
!705 = !DIGlobalVariableExpression(var: !706, expr: !DIExpression())
!706 = distinct !DIGlobalVariable(name: "_stdout_hook", scope: !707, file: !714, line: 21, type: !273, isLocal: true, isDefinition: true)
!707 = distinct !DICompileUnit(language: DW_LANG_C99, file: !708, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !709, globals: !713, splitDebugInlining: false, nameTableKind: None)
!708 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/gdbstub")
!709 = !{!710, !103, !102}
!710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !711, size: 32)
!711 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !712, line: 22, baseType: !103)
!712 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!713 = !{!705}
!714 = !DIFile(filename: "zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!715 = !DIGlobalVariableExpression(var: !716, expr: !DIExpression())
!716 = distinct !DIGlobalVariable(name: "__init_uart_console_init", scope: !717, file: !815, line: 603, type: !817, isLocal: true, isDefinition: true, align: 32)
!717 = distinct !DICompileUnit(language: DW_LANG_C99, file: !718, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !719, globals: !812, splitDebugInlining: false, nameTableKind: None)
!718 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/gdbstub")
!719 = !{!102, !103, !720}
!720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !721, size: 32)
!721 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !722)
!722 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !723, line: 336, size: 608, elements: !724)
!723 = !DIFile(filename: "zephyr/include/zephyr/drivers/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!724 = !{!725, !752, !756, !760, !773, !778, !784, !790, !794, !795, !796, !797, !798, !799, !800, !801, !802, !803, !804}
!725 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !722, file: !723, line: 365, baseType: !726, size: 32)
!726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !727, size: 32)
!727 = !DISubroutineType(types: !728)
!728 = !{!103, !729, !751}
!729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !730, size: 32)
!730 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !731)
!731 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !732, line: 378, size: 192, elements: !733)
!732 = !DIFile(filename: "zephyr/include/zephyr/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!733 = !{!734, !735, !736, !737, !744, !745}
!734 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !731, file: !732, line: 380, baseType: !256, size: 32)
!735 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !731, file: !732, line: 382, baseType: !13, size: 32, offset: 32)
!736 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !731, file: !732, line: 384, baseType: !13, size: 32, offset: 64)
!737 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !731, file: !732, line: 386, baseType: !738, size: 32, offset: 96)
!738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !739, size: 32)
!739 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !732, line: 351, size: 16, elements: !740)
!740 = !{!741, !742}
!741 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !739, file: !732, line: 359, baseType: !156, size: 8)
!742 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !739, file: !732, line: 364, baseType: !743, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!743 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!744 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !731, file: !732, line: 388, baseType: !102, size: 32, offset: 128)
!745 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !731, file: !732, line: 396, baseType: !746, size: 32, offset: 160)
!746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !747, size: 32)
!747 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !748)
!748 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_handle_t", file: !732, line: 43, baseType: !749)
!749 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !23, line: 73, baseType: !750)
!750 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!751 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !157, size: 32)
!752 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !722, file: !723, line: 366, baseType: !753, size: 32, offset: 32)
!753 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !754, size: 32)
!754 = !DISubroutineType(types: !755)
!755 = !{null, !729, !157}
!756 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !722, file: !723, line: 374, baseType: !757, size: 32, offset: 64)
!757 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !758, size: 32)
!758 = !DISubroutineType(types: !759)
!759 = !{!103, !729}
!760 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !722, file: !723, line: 377, baseType: !761, size: 32, offset: 96)
!761 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !762, size: 32)
!762 = !DISubroutineType(types: !763)
!763 = !{!103, !729, !764}
!764 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !765, size: 32)
!765 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !766)
!766 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !723, line: 122, size: 64, elements: !767)
!767 = !{!768, !769, !770, !771, !772}
!768 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !766, file: !723, line: 123, baseType: !173, size: 32)
!769 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !766, file: !723, line: 124, baseType: !156, size: 8, offset: 32)
!770 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !766, file: !723, line: 125, baseType: !156, size: 8, offset: 40)
!771 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !766, file: !723, line: 126, baseType: !156, size: 8, offset: 48)
!772 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !766, file: !723, line: 127, baseType: !156, size: 8, offset: 56)
!773 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !722, file: !723, line: 379, baseType: !774, size: 32, offset: 128)
!774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !775, size: 32)
!775 = !DISubroutineType(types: !776)
!776 = !{!103, !729, !777}
!777 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !766, size: 32)
!778 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_fill", scope: !722, file: !723, line: 384, baseType: !779, size: 32, offset: 160)
!779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !780, size: 32)
!780 = !DISubroutineType(types: !781)
!781 = !{!103, !729, !782, !103}
!782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !783, size: 32)
!783 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !156)
!784 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_read", scope: !722, file: !723, line: 393, baseType: !785, size: 32, offset: 192)
!785 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !786, size: 32)
!786 = !DISubroutineType(types: !787)
!787 = !{!103, !729, !788, !789}
!788 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !156, size: 32)
!789 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !103)
!790 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_enable", scope: !722, file: !723, line: 402, baseType: !791, size: 32, offset: 224)
!791 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !792, size: 32)
!792 = !DISubroutineType(types: !793)
!793 = !{null, !729}
!794 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_disable", scope: !722, file: !723, line: 405, baseType: !791, size: 32, offset: 256)
!795 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_ready", scope: !722, file: !723, line: 408, baseType: !757, size: 32, offset: 288)
!796 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_enable", scope: !722, file: !723, line: 411, baseType: !791, size: 32, offset: 320)
!797 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_disable", scope: !722, file: !723, line: 414, baseType: !791, size: 32, offset: 352)
!798 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_complete", scope: !722, file: !723, line: 417, baseType: !757, size: 32, offset: 384)
!799 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_ready", scope: !722, file: !723, line: 420, baseType: !757, size: 32, offset: 416)
!800 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_enable", scope: !722, file: !723, line: 423, baseType: !791, size: 32, offset: 448)
!801 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_disable", scope: !722, file: !723, line: 426, baseType: !791, size: 32, offset: 480)
!802 = !DIDerivedType(tag: DW_TAG_member, name: "irq_is_pending", scope: !722, file: !723, line: 429, baseType: !757, size: 32, offset: 512)
!803 = !DIDerivedType(tag: DW_TAG_member, name: "irq_update", scope: !722, file: !723, line: 432, baseType: !757, size: 32, offset: 544)
!804 = !DIDerivedType(tag: DW_TAG_member, name: "irq_callback_set", scope: !722, file: !723, line: 435, baseType: !805, size: 32, offset: 576)
!805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !806, size: 32)
!806 = !DISubroutineType(types: !807)
!807 = !{null, !729, !808, !102}
!808 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_irq_callback_user_data_t", file: !723, line: 142, baseType: !809)
!809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !810, size: 32)
!810 = !DISubroutineType(types: !811)
!811 = !{null, !729, !102}
!812 = !{!715, !813}
!813 = !DIGlobalVariableExpression(var: !814, expr: !DIExpression())
!814 = distinct !DIGlobalVariable(name: "uart_console_dev", scope: !717, file: !815, line: 38, type: !816, isLocal: true, isDefinition: true)
!815 = !DIFile(filename: "zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!816 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !729)
!817 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !818)
!818 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !695, line: 51, size: 64, elements: !819)
!819 = !{!820, !821}
!820 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !818, file: !695, line: 60, baseType: !757, size: 32)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !818, file: !695, line: 65, baseType: !729, size: 32, offset: 32)
!822 = !DIGlobalVariableExpression(var: !823, expr: !DIExpression())
!823 = distinct !DIGlobalVariable(name: "mcux_igpio_pinmux_0", scope: !824, file: !929, line: 318, type: !1003, isLocal: false, isDefinition: true)
!824 = distinct !DICompileUnit(language: DW_LANG_C99, file: !825, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !826, retainedTypes: !843, globals: !926, splitDebugInlining: false, nameTableKind: None)
!825 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/gpio/gpio_imx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/gdbstub")
!826 = !{!827, !833, !838}
!827 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_mode", file: !828, line: 506, baseType: !32, size: 32, elements: !829)
!828 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!829 = !{!830, !831, !832}
!830 = !DIEnumerator(name: "GPIO_INT_MODE_DISABLED", value: 2097152)
!831 = !DIEnumerator(name: "GPIO_INT_MODE_LEVEL", value: 4194304)
!832 = !DIEnumerator(name: "GPIO_INT_MODE_EDGE", value: 20971520)
!833 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_trig", file: !828, line: 512, baseType: !32, size: 32, elements: !834)
!834 = !{!835, !836, !837}
!835 = !DIEnumerator(name: "GPIO_INT_TRIG_LOW", value: 33554432)
!836 = !DIEnumerator(name: "GPIO_INT_TRIG_HIGH", value: 67108864)
!837 = !DIEnumerator(name: "GPIO_INT_TRIG_BOTH", value: 100663296)
!838 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_gpio_pin_action", file: !839, line: 66, baseType: !32, size: 32, elements: !840)
!839 = !DIFile(filename: "modules/hal/nxp/imx/drivers/./gpio_imx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!840 = !{!841, !842}
!841 = !DIEnumerator(name: "gpioPinClear", value: 0)
!842 = !DIEnumerator(name: "gpioPinSet", value: 1)
!843 = !{!844, !914, !919, !879, !833, !827, !924, !102, !690, !894, !925}
!844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !845, size: 32)
!845 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !846)
!846 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !828, line: 523, size: 288, elements: !847)
!847 = !{!848, !869, !875, !880, !884, !885, !886, !890, !910}
!848 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !846, file: !828, line: 524, baseType: !849, size: 32)
!849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !850, size: 32)
!850 = !DISubroutineType(types: !851)
!851 = !{!103, !852, !867, !868}
!852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !853, size: 32)
!853 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !854)
!854 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !732, line: 378, size: 192, elements: !855)
!855 = !{!856, !857, !858, !859, !865, !866}
!856 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !854, file: !732, line: 380, baseType: !256, size: 32)
!857 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !854, file: !732, line: 382, baseType: !13, size: 32, offset: 32)
!858 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !854, file: !732, line: 384, baseType: !13, size: 32, offset: 64)
!859 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !854, file: !732, line: 386, baseType: !860, size: 32, offset: 96)
!860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !861, size: 32)
!861 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !732, line: 351, size: 16, elements: !862)
!862 = !{!863, !864}
!863 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !861, file: !732, line: 359, baseType: !156, size: 8)
!864 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !861, file: !732, line: 364, baseType: !743, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!865 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !854, file: !732, line: 388, baseType: !102, size: 32, offset: 128)
!866 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !854, file: !732, line: 396, baseType: !746, size: 32, offset: 160)
!867 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_t", file: !828, line: 237, baseType: !156)
!868 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_flags_t", file: !828, line: 257, baseType: !173)
!869 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !846, file: !828, line: 530, baseType: !870, size: 32, offset: 32)
!870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !871, size: 32)
!871 = !DISubroutineType(types: !872)
!872 = !{!103, !852, !873}
!873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !874, size: 32)
!874 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_value_t", file: !828, line: 229, baseType: !173)
!875 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !846, file: !828, line: 532, baseType: !876, size: 32, offset: 64)
!876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !877, size: 32)
!877 = !DISubroutineType(types: !878)
!878 = !{!103, !852, !879, !874}
!879 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_pins_t", file: !828, line: 216, baseType: !173)
!880 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !846, file: !828, line: 535, baseType: !881, size: 32, offset: 96)
!881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !882, size: 32)
!882 = !DISubroutineType(types: !883)
!883 = !{!103, !852, !879}
!884 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !846, file: !828, line: 537, baseType: !881, size: 32, offset: 128)
!885 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !846, file: !828, line: 539, baseType: !881, size: 32, offset: 160)
!886 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !846, file: !828, line: 541, baseType: !887, size: 32, offset: 192)
!887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !888, size: 32)
!888 = !DISubroutineType(types: !889)
!889 = !{!103, !852, !867, !827, !833}
!890 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !846, file: !828, line: 544, baseType: !891, size: 32, offset: 224)
!891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !892, size: 32)
!892 = !DISubroutineType(types: !893)
!893 = !{!103, !852, !894, !743}
!894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !895, size: 32)
!895 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !828, line: 478, size: 96, elements: !896)
!896 = !{!897, !904, !909}
!897 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !895, file: !828, line: 482, baseType: !898, size: 32)
!898 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !899, line: 33, baseType: !900)
!899 = !DIFile(filename: "zephyr/include/zephyr/sys/slist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!900 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !899, line: 29, size: 32, elements: !901)
!901 = !{!902}
!902 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !900, file: !899, line: 30, baseType: !903, size: 32)
!903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !900, size: 32)
!904 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !895, file: !828, line: 485, baseType: !905, size: 32, offset: 32)
!905 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !828, line: 464, baseType: !906)
!906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !907, size: 32)
!907 = !DISubroutineType(types: !908)
!908 = !{null, !852, !894, !879}
!909 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !895, file: !828, line: 493, baseType: !879, size: 32, offset: 64)
!910 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !846, file: !828, line: 547, baseType: !911, size: 32, offset: 256)
!911 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !912, size: 32)
!912 = !DISubroutineType(types: !913)
!913 = !{!173, !852}
!914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !915, size: 32)
!915 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !916)
!916 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !828, line: 428, size: 32, elements: !917)
!917 = !{!918}
!918 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !916, file: !828, line: 434, baseType: !879, size: 32)
!919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !920, size: 32)
!920 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !921)
!921 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !828, line: 441, size: 32, elements: !922)
!922 = !{!923}
!923 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !921, file: !828, line: 447, baseType: !879, size: 32)
!924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !921, size: 32)
!925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !237, size: 32)
!926 = !{!822, !927, !933, !935, !945, !957, !959, !990, !992, !1001}
!927 = !DIGlobalVariableExpression(var: !928, expr: !DIExpression())
!928 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_25", scope: !824, file: !929, line: 318, type: !930, isLocal: false, isDefinition: true, align: 16)
!929 = !DIFile(filename: "zephyr/drivers/gpio/gpio_imx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!930 = !DICompositeType(tag: DW_TAG_array_type, baseType: !747, size: 400, elements: !931)
!931 = !{!932}
!932 = !DISubrange(count: 25)
!933 = !DIGlobalVariableExpression(var: !934, expr: !DIExpression())
!934 = distinct !DIGlobalVariable(name: "__device_dts_ord_25", scope: !824, file: !929, line: 318, type: !853, isLocal: false, isDefinition: true, align: 32)
!935 = !DIGlobalVariableExpression(var: !936, expr: !DIExpression())
!936 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_25", scope: !824, file: !929, line: 318, type: !937, isLocal: true, isDefinition: true, align: 32)
!937 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !938)
!938 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !695, line: 51, size: 64, elements: !939)
!939 = !{!940, !944}
!940 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !938, file: !695, line: 60, baseType: !941, size: 32)
!941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !942, size: 32)
!942 = !DISubroutineType(types: !943)
!943 = !{!103, !852}
!944 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !938, file: !695, line: 65, baseType: !852, size: 32, offset: 32)
!945 = !DIGlobalVariableExpression(var: !946, expr: !DIExpression())
!946 = distinct !DIGlobalVariable(name: "imx_gpio_0_data", scope: !824, file: !929, line: 318, type: !947, isLocal: true, isDefinition: true)
!947 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "imx_gpio_data", file: !929, line: 33, size: 96, elements: !948)
!948 = !{!949, !950}
!949 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !947, file: !929, line: 35, baseType: !921, size: 32)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "callbacks", scope: !947, file: !929, line: 37, baseType: !951, size: 64, offset: 32)
!951 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !899, line: 40, baseType: !952)
!952 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !899, line: 35, size: 64, elements: !953)
!953 = !{!954, !956}
!954 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !952, file: !899, line: 36, baseType: !955, size: 32)
!955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !898, size: 32)
!956 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !952, file: !899, line: 37, baseType: !955, size: 32, offset: 32)
!957 = !DIGlobalVariableExpression(var: !958, expr: !DIExpression())
!958 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_25", scope: !824, file: !929, line: 318, type: !861, isLocal: true, isDefinition: true, align: 8)
!959 = !DIGlobalVariableExpression(var: !960, expr: !DIExpression())
!960 = distinct !DIGlobalVariable(name: "imx_gpio_0_config", scope: !824, file: !929, line: 318, type: !961, isLocal: true, isDefinition: true)
!961 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !962)
!962 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "imx_gpio_config", file: !929, line: 23, size: 128, elements: !963)
!963 = !{!964, !965, !978, !989}
!964 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !962, file: !929, line: 25, baseType: !916, size: 32)
!965 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !962, file: !929, line: 26, baseType: !966, size: 32, offset: 32)
!966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !967, size: 32)
!967 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_Type", file: !566, line: 19729, baseType: !968)
!968 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !566, line: 19720, size: 256, elements: !969)
!969 = !{!970, !971, !972, !973, !974, !975, !976, !977}
!970 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !968, file: !566, line: 19721, baseType: !570, size: 32)
!971 = !DIDerivedType(tag: DW_TAG_member, name: "GDIR", scope: !968, file: !566, line: 19722, baseType: !570, size: 32, offset: 32)
!972 = !DIDerivedType(tag: DW_TAG_member, name: "PSR", scope: !968, file: !566, line: 19723, baseType: !641, size: 32, offset: 64)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "ICR1", scope: !968, file: !566, line: 19724, baseType: !570, size: 32, offset: 96)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "ICR2", scope: !968, file: !566, line: 19725, baseType: !570, size: 32, offset: 128)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !968, file: !566, line: 19726, baseType: !570, size: 32, offset: 160)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "ISR", scope: !968, file: !566, line: 19727, baseType: !570, size: 32, offset: 192)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "EDGE_SEL", scope: !968, file: !566, line: 19728, baseType: !570, size: 32, offset: 224)
!978 = !DIDerivedType(tag: DW_TAG_member, name: "pin_muxes", scope: !962, file: !929, line: 28, baseType: !979, size: 32, offset: 64)
!979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !980, size: 32)
!980 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !981)
!981 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pinmux", file: !982, line: 51, size: 128, elements: !983)
!982 = !DIFile(filename: "zephyr/soc/arm/nxp_imx/mcimx7_m4/pinctrl_soc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!983 = !{!984, !985, !986, !987, !988}
!984 = !DIDerivedType(tag: DW_TAG_member, name: "mux_register", scope: !981, file: !982, line: 52, baseType: !173, size: 32)
!985 = !DIDerivedType(tag: DW_TAG_member, name: "config_register", scope: !981, file: !982, line: 53, baseType: !173, size: 32, offset: 32)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "input_register", scope: !981, file: !982, line: 54, baseType: !173, size: 32, offset: 64)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "mux_mode", scope: !981, file: !982, line: 55, baseType: !156, size: 4, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "input_daisy", scope: !981, file: !982, line: 56, baseType: !173, size: 4, offset: 100, flags: DIFlagBitField, extraData: i64 96)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "mux_count", scope: !962, file: !929, line: 29, baseType: !156, size: 8, offset: 96)
!990 = !DIGlobalVariableExpression(var: !991, expr: !DIExpression())
!991 = distinct !DIGlobalVariable(name: "imx_gpio_driver_api", scope: !824, file: !929, line: 249, type: !845, isLocal: true, isDefinition: true)
!992 = !DIGlobalVariableExpression(var: !993, expr: !DIExpression())
!993 = distinct !DIGlobalVariable(name: "__isr_imx_gpio_port_isr_irq_0", scope: !994, file: !929, line: 318, type: !995, isLocal: true, isDefinition: true, align: 32)
!994 = distinct !DISubprogram(name: "imx_gpio_0_init", scope: !929, file: !929, line: 318, type: !942, scopeLine: 318, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !824, retainedNodes: !223)
!995 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !996)
!996 = !{!997, !998, !999, !1000}
!997 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !995, file: !10, line: 55, baseType: !250, size: 32)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !995, file: !10, line: 57, baseType: !250, size: 32, offset: 32)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !995, file: !10, line: 59, baseType: !102, size: 32, offset: 64)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !995, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!1001 = !DIGlobalVariableExpression(var: !1002, expr: !DIExpression())
!1002 = distinct !DIGlobalVariable(name: "__isr_imx_gpio_port_isr_irq_1", scope: !994, file: !929, line: 318, type: !995, isLocal: true, isDefinition: true, align: 32)
!1003 = !DICompositeType(tag: DW_TAG_array_type, baseType: !980, size: 2048, elements: !1004)
!1004 = !{!1005}
!1005 = !DISubrange(count: 16)
!1006 = !DIGlobalVariableExpression(var: !1007, expr: !DIExpression())
!1007 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_25", scope: !1008, file: !1013, line: 7, type: !1014, isLocal: false, isDefinition: true, align: 16)
!1008 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1009, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, globals: !1010, splitDebugInlining: false, nameTableKind: None)
!1009 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/gdbstub/zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/gdbstub")
!1010 = !{!1006, !1011}
!1011 = !DIGlobalVariableExpression(var: !1012, expr: !DIExpression())
!1012 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_198", scope: !1008, file: !1013, line: 12, type: !1014, isLocal: false, isDefinition: true, align: 16)
!1013 = !DIFile(filename: "zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/gdbstub")
!1014 = !DICompositeType(tag: DW_TAG_array_type, baseType: !747, size: 48, elements: !1015)
!1015 = !{!1016}
!1016 = !DISubrange(count: 3)
!1017 = !DIGlobalVariableExpression(var: !1018, expr: !DIExpression())
!1018 = distinct !DIGlobalVariable(name: "imx_uart_0_config", scope: !1019, file: !1216, line: 339, type: !1214, isLocal: true, isDefinition: true)
!1019 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1020, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !1021, retainedTypes: !1107, globals: !1252, splitDebugInlining: false, nameTableKind: None)
!1020 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/serial/uart_imx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/gdbstub")
!1021 = !{!30, !1022, !1060, !1088, !1092, !1096, !1101}
!1022 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_uart_status_flag", file: !1023, line: 122, baseType: !32, size: 32, elements: !1024)
!1023 = !DIFile(filename: "modules/hal/nxp/imx/drivers/./uart_imx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1024 = !{!1025, !1026, !1027, !1028, !1029, !1030, !1031, !1032, !1033, !1034, !1035, !1036, !1037, !1038, !1039, !1040, !1041, !1042, !1043, !1044, !1045, !1046, !1047, !1048, !1049, !1050, !1051, !1052, !1053, !1054, !1055, !1056, !1057, !1058, !1059}
!1025 = !DIEnumerator(name: "uartStatusRxCharReady", value: 15)
!1026 = !DIEnumerator(name: "uartStatusRxError", value: 14)
!1027 = !DIEnumerator(name: "uartStatusRxOverrunError", value: 13)
!1028 = !DIEnumerator(name: "uartStatusRxFrameError", value: 12)
!1029 = !DIEnumerator(name: "uartStatusRxBreakDetect", value: 11)
!1030 = !DIEnumerator(name: "uartStatusRxParityError", value: 10)
!1031 = !DIEnumerator(name: "uartStatusParityError", value: 9699343)
!1032 = !DIEnumerator(name: "uartStatusRtsStatus", value: 9699342)
!1033 = !DIEnumerator(name: "uartStatusTxReady", value: 9699341)
!1034 = !DIEnumerator(name: "uartStatusRtsDelta", value: 9699340)
!1035 = !DIEnumerator(name: "uartStatusEscape", value: 9699339)
!1036 = !DIEnumerator(name: "uartStatusFrameError", value: 9699338)
!1037 = !DIEnumerator(name: "uartStatusRxReady", value: 9699337)
!1038 = !DIEnumerator(name: "uartStatusAgingTimer", value: 9699336)
!1039 = !DIEnumerator(name: "uartStatusDtrDelta", value: 9699335)
!1040 = !DIEnumerator(name: "uartStatusRxDs", value: 9699334)
!1041 = !DIEnumerator(name: "uartStatustAirWake", value: 9699333)
!1042 = !DIEnumerator(name: "uartStatusAwake", value: 9699332)
!1043 = !DIEnumerator(name: "uartStatusRs485SlaveAddrMatch", value: 9699331)
!1044 = !DIEnumerator(name: "uartStatusAutoBaud", value: 9961487)
!1045 = !DIEnumerator(name: "uartStatusTxEmpty", value: 9961486)
!1046 = !DIEnumerator(name: "uartStatusDtr", value: 9961485)
!1047 = !DIEnumerator(name: "uartStatusIdle", value: 9961484)
!1048 = !DIEnumerator(name: "uartStatusAutoBaudCntStop", value: 9961483)
!1049 = !DIEnumerator(name: "uartStatusRiDelta", value: 9961482)
!1050 = !DIEnumerator(name: "uartStatusRi", value: 9961481)
!1051 = !DIEnumerator(name: "uartStatusIr", value: 9961480)
!1052 = !DIEnumerator(name: "uartStatusWake", value: 9961479)
!1053 = !DIEnumerator(name: "uartStatusDcdDelta", value: 9961478)
!1054 = !DIEnumerator(name: "uartStatusDcd", value: 9961477)
!1055 = !DIEnumerator(name: "uartStatusRts", value: 9961476)
!1056 = !DIEnumerator(name: "uartStatusTxComplete", value: 9961475)
!1057 = !DIEnumerator(name: "uartStatusBreakDetect", value: 9961474)
!1058 = !DIEnumerator(name: "uartStatusRxOverrun", value: 9961473)
!1059 = !DIEnumerator(name: "uartStatusRxDataReady", value: 9961472)
!1060 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_uart_interrupt", file: !1023, line: 91, baseType: !32, size: 32, elements: !1061)
!1061 = !{!1062, !1063, !1064, !1065, !1066, !1067, !1068, !1069, !1070, !1071, !1072, !1073, !1074, !1075, !1076, !1077, !1078, !1079, !1080, !1081, !1082, !1083, !1084, !1085, !1086, !1087}
!1062 = !DIEnumerator(name: "uartIntAutoBaud", value: 8388623)
!1063 = !DIEnumerator(name: "uartIntTxReady", value: 8388621)
!1064 = !DIEnumerator(name: "uartIntIdle", value: 8388620)
!1065 = !DIEnumerator(name: "uartIntRxReady", value: 8388617)
!1066 = !DIEnumerator(name: "uartIntTxEmpty", value: 8388614)
!1067 = !DIEnumerator(name: "uartIntRtsDelta", value: 8388613)
!1068 = !DIEnumerator(name: "uartIntEscape", value: 8650767)
!1069 = !DIEnumerator(name: "uartIntRts", value: 8650756)
!1070 = !DIEnumerator(name: "uartIntAgingTimer", value: 8650755)
!1071 = !DIEnumerator(name: "uartIntDtr", value: 8912909)
!1072 = !DIEnumerator(name: "uartIntParityError", value: 8912908)
!1073 = !DIEnumerator(name: "uartIntFrameError", value: 8912907)
!1074 = !DIEnumerator(name: "uartIntDcd", value: 8912905)
!1075 = !DIEnumerator(name: "uartIntRi", value: 8912904)
!1076 = !DIEnumerator(name: "uartIntRxDs", value: 8912902)
!1077 = !DIEnumerator(name: "uartInttAirWake", value: 8912901)
!1078 = !DIEnumerator(name: "uartIntAwake", value: 8912900)
!1079 = !DIEnumerator(name: "uartIntDtrDelta", value: 8912899)
!1080 = !DIEnumerator(name: "uartIntAutoBaudCnt", value: 8912896)
!1081 = !DIEnumerator(name: "uartIntIr", value: 9175048)
!1082 = !DIEnumerator(name: "uartIntWake", value: 9175047)
!1083 = !DIEnumerator(name: "uartIntTxComplete", value: 9175043)
!1084 = !DIEnumerator(name: "uartIntBreakDetect", value: 9175042)
!1085 = !DIEnumerator(name: "uartIntRxOverrun", value: 9175041)
!1086 = !DIEnumerator(name: "uartIntRxDataReady", value: 9175040)
!1087 = !DIEnumerator(name: "uartIntRs485SlaveAddrMatch", value: 12058627)
!1088 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_uart_word_length", file: !1023, line: 60, baseType: !32, size: 32, elements: !1089)
!1089 = !{!1090, !1091}
!1090 = !DIEnumerator(name: "uartWordLength7Bits", value: 0)
!1091 = !DIEnumerator(name: "uartWordLength8Bits", value: 32)
!1092 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_uart_stop_bit_num", file: !1023, line: 67, baseType: !32, size: 32, elements: !1093)
!1093 = !{!1094, !1095}
!1094 = !DIEnumerator(name: "uartStopBitNumOne", value: 0)
!1095 = !DIEnumerator(name: "uartStopBitNumTwo", value: 64)
!1096 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_uart_partity_mode", file: !1023, line: 74, baseType: !32, size: 32, elements: !1097)
!1097 = !{!1098, !1099, !1100}
!1098 = !DIEnumerator(name: "uartParityDisable", value: 0)
!1099 = !DIEnumerator(name: "uartParityEven", value: 256)
!1100 = !DIEnumerator(name: "uartParityOdd", value: 384)
!1101 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_uart_direction_mode", file: !1023, line: 82, baseType: !32, size: 32, elements: !1102)
!1102 = !{!1103, !1104, !1105, !1106}
!1103 = !DIEnumerator(name: "uartDirectionDisable", value: 0)
!1104 = !DIEnumerator(name: "uartDirectionTx", value: 4)
!1105 = !DIEnumerator(name: "uartDirectionRx", value: 2)
!1106 = !DIEnumerator(name: "uartDirectionTxRx", value: 6)
!1107 = !{!102, !103, !1108, !1187, !1213, !1251, !173, !743, !156}
!1108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1109, size: 32)
!1109 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1110)
!1110 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !723, line: 336, size: 608, elements: !1111)
!1111 = !{!1112, !1131, !1135, !1139, !1152, !1157, !1161, !1165, !1169, !1170, !1171, !1172, !1173, !1174, !1175, !1176, !1177, !1178, !1179}
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1110, file: !723, line: 365, baseType: !1113, size: 32)
!1113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1114, size: 32)
!1114 = !DISubroutineType(types: !1115)
!1115 = !{!103, !1116, !751}
!1116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1117, size: 32)
!1117 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1118)
!1118 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !732, line: 378, size: 192, elements: !1119)
!1119 = !{!1120, !1121, !1122, !1123, !1129, !1130}
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1118, file: !732, line: 380, baseType: !256, size: 32)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1118, file: !732, line: 382, baseType: !13, size: 32, offset: 32)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1118, file: !732, line: 384, baseType: !13, size: 32, offset: 64)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1118, file: !732, line: 386, baseType: !1124, size: 32, offset: 96)
!1124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1125, size: 32)
!1125 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !732, line: 351, size: 16, elements: !1126)
!1126 = !{!1127, !1128}
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1125, file: !732, line: 359, baseType: !156, size: 8)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1125, file: !732, line: 364, baseType: !743, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1118, file: !732, line: 388, baseType: !102, size: 32, offset: 128)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1118, file: !732, line: 396, baseType: !746, size: 32, offset: 160)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1110, file: !723, line: 366, baseType: !1132, size: 32, offset: 32)
!1132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1133, size: 32)
!1133 = !DISubroutineType(types: !1134)
!1134 = !{null, !1116, !157}
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1110, file: !723, line: 374, baseType: !1136, size: 32, offset: 64)
!1136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1137, size: 32)
!1137 = !DISubroutineType(types: !1138)
!1138 = !{!103, !1116}
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1110, file: !723, line: 377, baseType: !1140, size: 32, offset: 96)
!1140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1141, size: 32)
!1141 = !DISubroutineType(types: !1142)
!1142 = !{!103, !1116, !1143}
!1143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1144, size: 32)
!1144 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1145)
!1145 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !723, line: 122, size: 64, elements: !1146)
!1146 = !{!1147, !1148, !1149, !1150, !1151}
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1145, file: !723, line: 123, baseType: !173, size: 32)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1145, file: !723, line: 124, baseType: !156, size: 8, offset: 32)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1145, file: !723, line: 125, baseType: !156, size: 8, offset: 40)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1145, file: !723, line: 126, baseType: !156, size: 8, offset: 48)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1145, file: !723, line: 127, baseType: !156, size: 8, offset: 56)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1110, file: !723, line: 379, baseType: !1153, size: 32, offset: 128)
!1153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1154, size: 32)
!1154 = !DISubroutineType(types: !1155)
!1155 = !{!103, !1116, !1156}
!1156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1145, size: 32)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_fill", scope: !1110, file: !723, line: 384, baseType: !1158, size: 32, offset: 160)
!1158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1159, size: 32)
!1159 = !DISubroutineType(types: !1160)
!1160 = !{!103, !1116, !782, !103}
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_read", scope: !1110, file: !723, line: 393, baseType: !1162, size: 32, offset: 192)
!1162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1163, size: 32)
!1163 = !DISubroutineType(types: !1164)
!1164 = !{!103, !1116, !788, !789}
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_enable", scope: !1110, file: !723, line: 402, baseType: !1166, size: 32, offset: 224)
!1166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1167, size: 32)
!1167 = !DISubroutineType(types: !1168)
!1168 = !{null, !1116}
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_disable", scope: !1110, file: !723, line: 405, baseType: !1166, size: 32, offset: 256)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_ready", scope: !1110, file: !723, line: 408, baseType: !1136, size: 32, offset: 288)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_enable", scope: !1110, file: !723, line: 411, baseType: !1166, size: 32, offset: 320)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_disable", scope: !1110, file: !723, line: 414, baseType: !1166, size: 32, offset: 352)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_complete", scope: !1110, file: !723, line: 417, baseType: !1136, size: 32, offset: 384)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_ready", scope: !1110, file: !723, line: 420, baseType: !1136, size: 32, offset: 416)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_enable", scope: !1110, file: !723, line: 423, baseType: !1166, size: 32, offset: 448)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_disable", scope: !1110, file: !723, line: 426, baseType: !1166, size: 32, offset: 480)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "irq_is_pending", scope: !1110, file: !723, line: 429, baseType: !1136, size: 32, offset: 512)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "irq_update", scope: !1110, file: !723, line: 432, baseType: !1136, size: 32, offset: 544)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "irq_callback_set", scope: !1110, file: !723, line: 435, baseType: !1180, size: 32, offset: 576)
!1180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1181, size: 32)
!1181 = !DISubroutineType(types: !1182)
!1182 = !{null, !1116, !1183, !102}
!1183 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_irq_callback_user_data_t", file: !723, line: 142, baseType: !1184)
!1184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1185, size: 32)
!1185 = !DISubroutineType(types: !1186)
!1186 = !{null, !1116, !102}
!1187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1188, size: 32)
!1188 = !DIDerivedType(tag: DW_TAG_typedef, name: "UART_Type", file: !566, line: 41342, baseType: !1189)
!1189 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !566, line: 41322, size: 1504, elements: !1190)
!1190 = !{!1191, !1192, !1196, !1197, !1198, !1199, !1200, !1201, !1202, !1203, !1204, !1205, !1206, !1207, !1208, !1209, !1210, !1211, !1212}
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "URXD", scope: !1189, file: !566, line: 41323, baseType: !641, size: 32)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !1189, file: !566, line: 41324, baseType: !1193, size: 480, offset: 32)
!1193 = !DICompositeType(tag: DW_TAG_array_type, baseType: !156, size: 480, elements: !1194)
!1194 = !{!1195}
!1195 = !DISubrange(count: 60)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "UTXD", scope: !1189, file: !566, line: 41325, baseType: !570, size: 32, offset: 512)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !1189, file: !566, line: 41326, baseType: !1193, size: 480, offset: 544)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "UCR1", scope: !1189, file: !566, line: 41327, baseType: !570, size: 32, offset: 1024)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "UCR2", scope: !1189, file: !566, line: 41328, baseType: !570, size: 32, offset: 1056)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "UCR3", scope: !1189, file: !566, line: 41329, baseType: !570, size: 32, offset: 1088)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "UCR4", scope: !1189, file: !566, line: 41330, baseType: !570, size: 32, offset: 1120)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "UFCR", scope: !1189, file: !566, line: 41331, baseType: !570, size: 32, offset: 1152)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "USR1", scope: !1189, file: !566, line: 41332, baseType: !570, size: 32, offset: 1184)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "USR2", scope: !1189, file: !566, line: 41333, baseType: !570, size: 32, offset: 1216)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "UESC", scope: !1189, file: !566, line: 41334, baseType: !570, size: 32, offset: 1248)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "UTIM", scope: !1189, file: !566, line: 41335, baseType: !570, size: 32, offset: 1280)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "UBIR", scope: !1189, file: !566, line: 41336, baseType: !570, size: 32, offset: 1312)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "UBMR", scope: !1189, file: !566, line: 41337, baseType: !570, size: 32, offset: 1344)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "UBRC", scope: !1189, file: !566, line: 41338, baseType: !641, size: 32, offset: 1376)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "ONEMS", scope: !1189, file: !566, line: 41339, baseType: !570, size: 32, offset: 1408)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "UTS", scope: !1189, file: !566, line: 41340, baseType: !570, size: 32, offset: 1440)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "UMCR", scope: !1189, file: !566, line: 41341, baseType: !570, size: 32, offset: 1472)
!1213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1214, size: 32)
!1214 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1215)
!1215 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "imx_uart_config", file: !1216, line: 29, size: 160, elements: !1217)
!1216 = !DIFile(filename: "zephyr/drivers/serial/uart_imx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1217 = !{!1218, !1219, !1220, !1221, !1250}
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1215, file: !1216, line: 30, baseType: !1187, size: 32)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "baud_rate", scope: !1215, file: !1216, line: 31, baseType: !173, size: 32, offset: 32)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "modem_mode", scope: !1215, file: !1216, line: 32, baseType: !156, size: 8, offset: 64)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !1215, file: !1216, line: 33, baseType: !1222, size: 32, offset: 96)
!1222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1223, size: 32)
!1223 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1224)
!1224 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1225, line: 60, size: 64, elements: !1226)
!1225 = !DIFile(filename: "zephyr/include/zephyr/drivers/pinctrl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1226 = !{!1227, !1249}
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !1224, file: !1225, line: 69, baseType: !1228, size: 32)
!1228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1229, size: 32)
!1229 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1230)
!1230 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1225, line: 50, size: 64, elements: !1231)
!1231 = !{!1232, !1247, !1248}
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !1230, file: !1225, line: 52, baseType: !1233, size: 32)
!1233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1234, size: 32)
!1234 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1235)
!1235 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !982, line: 64, baseType: !1236)
!1236 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !982, line: 59, size: 160, elements: !1237)
!1237 = !{!1238, !1246}
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !1236, file: !982, line: 60, baseType: !1239, size: 128)
!1239 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pinmux", file: !982, line: 51, size: 128, elements: !1240)
!1240 = !{!1241, !1242, !1243, !1244, !1245}
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "mux_register", scope: !1239, file: !982, line: 52, baseType: !173, size: 32)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "config_register", scope: !1239, file: !982, line: 53, baseType: !173, size: 32, offset: 32)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "input_register", scope: !1239, file: !982, line: 54, baseType: !173, size: 32, offset: 64)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "mux_mode", scope: !1239, file: !982, line: 55, baseType: !156, size: 4, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "input_daisy", scope: !1239, file: !982, line: 56, baseType: !173, size: 4, offset: 100, flags: DIFlagBitField, extraData: i64 96)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "pin_ctrl_flags", scope: !1236, file: !982, line: 61, baseType: !173, size: 32, offset: 128)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !1230, file: !1225, line: 54, baseType: !156, size: 8, offset: 32)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1230, file: !1225, line: 56, baseType: !156, size: 8, offset: 40)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !1224, file: !1225, line: 71, baseType: !156, size: 8, offset: 32)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "irq_config_func", scope: !1215, file: !1216, line: 35, baseType: !1166, size: 32, offset: 128)
!1251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !173, size: 32)
!1252 = !{!1253, !1258, !1260, !1267, !1273, !1275, !1017, !1277, !1279, !1284, !1287}
!1253 = !DIGlobalVariableExpression(var: !1254, expr: !DIExpression())
!1254 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_198", scope: !1019, file: !1216, line: 339, type: !1255, isLocal: false, isDefinition: true, align: 16)
!1255 = !DICompositeType(tag: DW_TAG_array_type, baseType: !747, size: 96, elements: !1256)
!1256 = !{!1257}
!1257 = !DISubrange(count: 6)
!1258 = !DIGlobalVariableExpression(var: !1259, expr: !DIExpression())
!1259 = distinct !DIGlobalVariable(name: "__device_dts_ord_198", scope: !1019, file: !1216, line: 339, type: !1117, isLocal: false, isDefinition: true, align: 32)
!1260 = !DIGlobalVariableExpression(var: !1261, expr: !DIExpression())
!1261 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_198", scope: !1019, file: !1216, line: 339, type: !1262, isLocal: true, isDefinition: true, align: 32)
!1262 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1263)
!1263 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !695, line: 51, size: 64, elements: !1264)
!1264 = !{!1265, !1266}
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1263, file: !695, line: 60, baseType: !1136, size: 32)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1263, file: !695, line: 65, baseType: !1116, size: 32, offset: 32)
!1267 = !DIGlobalVariableExpression(var: !1268, expr: !DIExpression())
!1268 = distinct !DIGlobalVariable(name: "imx_uart_0_data", scope: !1019, file: !1216, line: 339, type: !1269, isLocal: true, isDefinition: true)
!1269 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "imx_uart_data", file: !1216, line: 39, size: 64, elements: !1270)
!1270 = !{!1271, !1272}
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !1269, file: !1216, line: 41, baseType: !1183, size: 32)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "cb_data", scope: !1269, file: !1216, line: 42, baseType: !102, size: 32, offset: 32)
!1273 = !DIGlobalVariableExpression(var: !1274, expr: !DIExpression())
!1274 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_198", scope: !1019, file: !1216, line: 339, type: !1125, isLocal: true, isDefinition: true, align: 8)
!1275 = !DIGlobalVariableExpression(var: !1276, expr: !DIExpression())
!1276 = distinct !DIGlobalVariable(name: "uart_imx_driver_api", scope: !1019, file: !1216, line: 270, type: !1109, isLocal: true, isDefinition: true)
!1277 = !DIGlobalVariableExpression(var: !1278, expr: !DIExpression())
!1278 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_198", scope: !1019, file: !1216, line: 339, type: !1223, isLocal: true, isDefinition: true)
!1279 = !DIGlobalVariableExpression(var: !1280, expr: !DIExpression())
!1280 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_198", scope: !1019, file: !1216, line: 339, type: !1281, isLocal: true, isDefinition: true)
!1281 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1229, size: 64, elements: !1282)
!1282 = !{!1283}
!1283 = !DISubrange(count: 1)
!1284 = !DIGlobalVariableExpression(var: !1285, expr: !DIExpression())
!1285 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_198", scope: !1019, file: !1216, line: 339, type: !1286, isLocal: true, isDefinition: true)
!1286 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1234, size: 320, elements: !145)
!1287 = !DIGlobalVariableExpression(var: !1288, expr: !DIExpression())
!1288 = distinct !DIGlobalVariable(name: "__isr_uart_imx_isr_irq_0", scope: !1289, file: !1216, line: 339, type: !1290, isLocal: true, isDefinition: true, align: 32)
!1289 = distinct !DISubprogram(name: "irq_config_func_0", scope: !1216, file: !1216, line: 339, type: !1167, scopeLine: 339, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1019, retainedNodes: !223)
!1290 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !1291)
!1291 = !{!1292, !1293, !1294, !1295}
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !1290, file: !10, line: 55, baseType: !250, size: 32)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1290, file: !10, line: 57, baseType: !250, size: 32, offset: 32)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1290, file: !10, line: 59, baseType: !102, size: 32, offset: 64)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !1290, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!1296 = !DIGlobalVariableExpression(var: !1297, expr: !DIExpression())
!1297 = distinct !DIGlobalVariable(name: "overflow_cyc", scope: !1298, file: !1525, line: 65, type: !570, isLocal: true, isDefinition: true)
!1298 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1299, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !1300, retainedTypes: !1441, globals: !1522, splitDebugInlining: false, nameTableKind: None)
!1299 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/gdbstub")
!1300 = !{!1301}
!1301 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "IRQn", file: !566, line: 103, baseType: !103, size: 32, elements: !1302)
!1302 = !{!1303, !1304, !1305, !1306, !1307, !1308, !1309, !1310, !1311, !1312, !1313, !1314, !1315, !1316, !1317, !1318, !1319, !1320, !1321, !1322, !1323, !1324, !1325, !1326, !1327, !1328, !1329, !1330, !1331, !1332, !1333, !1334, !1335, !1336, !1337, !1338, !1339, !1340, !1341, !1342, !1343, !1344, !1345, !1346, !1347, !1348, !1349, !1350, !1351, !1352, !1353, !1354, !1355, !1356, !1357, !1358, !1359, !1360, !1361, !1362, !1363, !1364, !1365, !1366, !1367, !1368, !1369, !1370, !1371, !1372, !1373, !1374, !1375, !1376, !1377, !1378, !1379, !1380, !1381, !1382, !1383, !1384, !1385, !1386, !1387, !1388, !1389, !1390, !1391, !1392, !1393, !1394, !1395, !1396, !1397, !1398, !1399, !1400, !1401, !1402, !1403, !1404, !1405, !1406, !1407, !1408, !1409, !1410, !1411, !1412, !1413, !1414, !1415, !1416, !1417, !1418, !1419, !1420, !1421, !1422, !1423, !1424, !1425, !1426, !1427, !1428, !1429, !1430, !1431, !1432, !1433, !1434, !1435, !1436, !1437, !1438, !1439, !1440}
!1303 = !DIEnumerator(name: "NotAvail_IRQn", value: -128)
!1304 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!1305 = !DIEnumerator(name: "HardFault_IRQn", value: -13)
!1306 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!1307 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!1308 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!1309 = !DIEnumerator(name: "SVCall_IRQn", value: -5)
!1310 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!1311 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!1312 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!1313 = !DIEnumerator(name: "GPR_IRQn", value: 0)
!1314 = !DIEnumerator(name: "DAP_IRQn", value: 1)
!1315 = !DIEnumerator(name: "SDMA_IRQn", value: 2)
!1316 = !DIEnumerator(name: "DBGMON_IRQn", value: 3)
!1317 = !DIEnumerator(name: "SNVS_IRQn", value: 4)
!1318 = !DIEnumerator(name: "LCDIF_IRQn", value: 5)
!1319 = !DIEnumerator(name: "SIM2_IRQn", value: 6)
!1320 = !DIEnumerator(name: "CSI_IRQn", value: 7)
!1321 = !DIEnumerator(name: "PXP1_IRQn", value: 8)
!1322 = !DIEnumerator(name: "Reserved_IRQn", value: 9)
!1323 = !DIEnumerator(name: "WDOG3_IRQn", value: 10)
!1324 = !DIEnumerator(name: "SEMA4_HS_M4_IRQn", value: 11)
!1325 = !DIEnumerator(name: "APBHDMA_IRQn", value: 12)
!1326 = !DIEnumerator(name: "EIM_IRQn", value: 13)
!1327 = !DIEnumerator(name: "BCH_IRQn", value: 14)
!1328 = !DIEnumerator(name: "GPMI_IRQn", value: 15)
!1329 = !DIEnumerator(name: "UART6_IRQn", value: 16)
!1330 = !DIEnumerator(name: "FTM1_IRQn", value: 17)
!1331 = !DIEnumerator(name: "FTM2_IRQn", value: 18)
!1332 = !DIEnumerator(name: "SNVS_CONSOLIDATED_IRQn", value: 19)
!1333 = !DIEnumerator(name: "SNVS_SECURITY_IRQn", value: 20)
!1334 = !DIEnumerator(name: "CSU_IRQn", value: 21)
!1335 = !DIEnumerator(name: "uSDHC1_IRQn", value: 22)
!1336 = !DIEnumerator(name: "uSDHC2_IRQn", value: 23)
!1337 = !DIEnumerator(name: "uSDHC3_IRQn", value: 24)
!1338 = !DIEnumerator(name: "MIPI_CSI_IRQn", value: 25)
!1339 = !DIEnumerator(name: "UART1_IRQn", value: 26)
!1340 = !DIEnumerator(name: "UART2_IRQn", value: 27)
!1341 = !DIEnumerator(name: "UART3_IRQn", value: 28)
!1342 = !DIEnumerator(name: "UART4_IRQn", value: 29)
!1343 = !DIEnumerator(name: "UART5_IRQn", value: 30)
!1344 = !DIEnumerator(name: "eCSPI1_IRQn", value: 31)
!1345 = !DIEnumerator(name: "eCSPI2_IRQn", value: 32)
!1346 = !DIEnumerator(name: "eCSPI3_IRQn", value: 33)
!1347 = !DIEnumerator(name: "eCSPI4_IRQn", value: 34)
!1348 = !DIEnumerator(name: "I2C1_IRQn", value: 35)
!1349 = !DIEnumerator(name: "I2C2_IRQn", value: 36)
!1350 = !DIEnumerator(name: "I2C3_IRQn", value: 37)
!1351 = !DIEnumerator(name: "I2C4_IRQn", value: 38)
!1352 = !DIEnumerator(name: "RDC_IRQn", value: 39)
!1353 = !DIEnumerator(name: "USB_OH3_OTG2_1_IRQn", value: 40)
!1354 = !DIEnumerator(name: "MIPI_DSI_IRQn", value: 41)
!1355 = !DIEnumerator(name: "USB_OH3_OTG2_2_IRQn", value: 42)
!1356 = !DIEnumerator(name: "USB_OH2_OTG_IRQn", value: 43)
!1357 = !DIEnumerator(name: "USB_OTG1_IRQn", value: 44)
!1358 = !DIEnumerator(name: "USB_OTG2_IRQn", value: 45)
!1359 = !DIEnumerator(name: "PXP2_IRQn", value: 46)
!1360 = !DIEnumerator(name: "SCTR1_IRQn", value: 47)
!1361 = !DIEnumerator(name: "SCTR2_IRQn", value: 48)
!1362 = !DIEnumerator(name: "Analog_TempSensor_IRQn", value: 49)
!1363 = !DIEnumerator(name: "SAI3_IRQn", value: 50)
!1364 = !DIEnumerator(name: "Analog_brown_out_IRQn", value: 51)
!1365 = !DIEnumerator(name: "GPT4_IRQn", value: 52)
!1366 = !DIEnumerator(name: "GPT3_IRQn", value: 53)
!1367 = !DIEnumerator(name: "GPT2_IRQn", value: 54)
!1368 = !DIEnumerator(name: "GPT1_IRQn", value: 55)
!1369 = !DIEnumerator(name: "GPIO1_INT7_IRQn", value: 56)
!1370 = !DIEnumerator(name: "GPIO1_INT6_IRQn", value: 57)
!1371 = !DIEnumerator(name: "GPIO1_INT5_IRQn", value: 58)
!1372 = !DIEnumerator(name: "GPIO1_INT4_IRQn", value: 59)
!1373 = !DIEnumerator(name: "GPIO1_INT3_IRQn", value: 60)
!1374 = !DIEnumerator(name: "GPIO1_INT2_IRQn", value: 61)
!1375 = !DIEnumerator(name: "GPIO1_INT1_IRQn", value: 62)
!1376 = !DIEnumerator(name: "GPIO1_INT0_IRQn", value: 63)
!1377 = !DIEnumerator(name: "GPIO1_INT15_0_IRQn", value: 64)
!1378 = !DIEnumerator(name: "GPIO1_INT31_16_IRQn", value: 65)
!1379 = !DIEnumerator(name: "GPIO2_INT15_0_IRQn", value: 66)
!1380 = !DIEnumerator(name: "GPIO2_INT31_16_IRQn", value: 67)
!1381 = !DIEnumerator(name: "GPIO3_INT15_0_IRQn", value: 68)
!1382 = !DIEnumerator(name: "GPIO3_INT31_16_IRQn", value: 69)
!1383 = !DIEnumerator(name: "GPIO4_INT15_0_IRQn", value: 70)
!1384 = !DIEnumerator(name: "GPIO4_INT31_16_IRQn", value: 71)
!1385 = !DIEnumerator(name: "GPIO5_INT15_0_IRQn", value: 72)
!1386 = !DIEnumerator(name: "GPIO5_INT31_16_IRQn", value: 73)
!1387 = !DIEnumerator(name: "GPIO6_INT15_0_IRQn", value: 74)
!1388 = !DIEnumerator(name: "GPIO6_INT31_16_IRQn", value: 75)
!1389 = !DIEnumerator(name: "GPIO7_INT15_0_IRQn", value: 76)
!1390 = !DIEnumerator(name: "GPIO7_INT31_16_IRQn", value: 77)
!1391 = !DIEnumerator(name: "WDOG1_IRQn", value: 78)
!1392 = !DIEnumerator(name: "WDOG2_IRQn", value: 79)
!1393 = !DIEnumerator(name: "KPP_IRQn", value: 80)
!1394 = !DIEnumerator(name: "PWM1_IRQn", value: 81)
!1395 = !DIEnumerator(name: "PWM2_IRQn", value: 82)
!1396 = !DIEnumerator(name: "PWM3_IRQn", value: 83)
!1397 = !DIEnumerator(name: "PWM4_IRQn", value: 84)
!1398 = !DIEnumerator(name: "CCM1_IRQn", value: 85)
!1399 = !DIEnumerator(name: "CCM2_IRQn", value: 86)
!1400 = !DIEnumerator(name: "GPC_IRQn", value: 87)
!1401 = !DIEnumerator(name: "MU_A7_IRQn", value: 88)
!1402 = !DIEnumerator(name: "SRC_IRQn", value: 89)
!1403 = !DIEnumerator(name: "SIM1_IRQn", value: 90)
!1404 = !DIEnumerator(name: "RTIC_IRQn", value: 91)
!1405 = !DIEnumerator(name: "CPU_IRQn", value: 92)
!1406 = !DIEnumerator(name: "CPU_CTI_IRQn", value: 93)
!1407 = !DIEnumerator(name: "CCM_SRC_GPC_IRQn", value: 94)
!1408 = !DIEnumerator(name: "SAI1_IRQn", value: 95)
!1409 = !DIEnumerator(name: "SAI2_IRQn", value: 96)
!1410 = !DIEnumerator(name: "MU_M4_IRQn", value: 97)
!1411 = !DIEnumerator(name: "ADC1_IRQn", value: 98)
!1412 = !DIEnumerator(name: "ADC2_IRQn", value: 99)
!1413 = !DIEnumerator(name: "ENET2_MAC0_TRANS1_IRQn", value: 100)
!1414 = !DIEnumerator(name: "ENET2_MAC0_TRANS2_IRQn", value: 101)
!1415 = !DIEnumerator(name: "ENET2_MAC0_IRQ_IRQn", value: 102)
!1416 = !DIEnumerator(name: "ENET2_1588_TIMER_IRQ_IRQn", value: 103)
!1417 = !DIEnumerator(name: "TPR_IRQn", value: 104)
!1418 = !DIEnumerator(name: "CAAM_QUEUE_IRQn", value: 105)
!1419 = !DIEnumerator(name: "CAAM_ERROR_IRQn", value: 106)
!1420 = !DIEnumerator(name: "QSPI_IRQn", value: 107)
!1421 = !DIEnumerator(name: "TZASC1_IRQn", value: 108)
!1422 = !DIEnumerator(name: "WDOG4_IRQn", value: 109)
!1423 = !DIEnumerator(name: "FLEXCAN1_IRQn", value: 110)
!1424 = !DIEnumerator(name: "FLEXCAN2_IRQn", value: 111)
!1425 = !DIEnumerator(name: "PERFMON1_IRQn", value: 112)
!1426 = !DIEnumerator(name: "PERFMON2_IRQn", value: 113)
!1427 = !DIEnumerator(name: "CAAM_WRAPPER1_IRQn", value: 114)
!1428 = !DIEnumerator(name: "CAAM_WRAPPER2_IRQn", value: 115)
!1429 = !DIEnumerator(name: "SEMA4_HS_A7_IRQn", value: 116)
!1430 = !DIEnumerator(name: "EPDC_IRQn", value: 117)
!1431 = !DIEnumerator(name: "ENET1_MAC0_TRANS1_IRQn", value: 118)
!1432 = !DIEnumerator(name: "ENET1_MAC0_TRANS2_IRQn", value: 119)
!1433 = !DIEnumerator(name: "ENET1_MAC0_IRQn", value: 120)
!1434 = !DIEnumerator(name: "ENET1_1588_TIMER_IRQn", value: 121)
!1435 = !DIEnumerator(name: "PCIE_CTRL1_IRQn", value: 122)
!1436 = !DIEnumerator(name: "PCIE_CTRL2_IRQn", value: 123)
!1437 = !DIEnumerator(name: "PCIE_CTRL3_IRQn", value: 124)
!1438 = !DIEnumerator(name: "PCIE_CTRL4_IRQn", value: 125)
!1439 = !DIEnumerator(name: "UART7_IRQn", value: 126)
!1440 = !DIEnumerator(name: "PCIE_CTRL_REQUEST_IRQn", value: 127)
!1441 = !{!1442, !1444, !250, !156, !173, !1453, !1486}
!1442 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_ticks_t", file: !1443, line: 46, baseType: !186)
!1443 = !DIFile(filename: "zephyr/include/zephyr/sys_clock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1445, size: 32)
!1445 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !1446, line: 770, baseType: !1447)
!1446 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/core_cm4.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1447 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1446, line: 764, size: 128, elements: !1448)
!1448 = !{!1449, !1450, !1451, !1452}
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1447, file: !1446, line: 766, baseType: !570, size: 32)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !1447, file: !1446, line: 767, baseType: !570, size: 32, offset: 32)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !1447, file: !1446, line: 768, baseType: !570, size: 32, offset: 64)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !1447, file: !1446, line: 769, baseType: !641, size: 32, offset: 96)
!1453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1454, size: 32)
!1454 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !1446, line: 426, baseType: !1455)
!1455 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1446, line: 411, size: 28704, elements: !1456)
!1456 = !{!1457, !1461, !1465, !1466, !1467, !1468, !1469, !1470, !1471, !1472, !1476, !1481, !1485}
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1455, file: !1446, line: 413, baseType: !1458, size: 256)
!1458 = !DICompositeType(tag: DW_TAG_array_type, baseType: !570, size: 256, elements: !1459)
!1459 = !{!1460}
!1460 = !DISubrange(count: 8)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1455, file: !1446, line: 414, baseType: !1462, size: 768, offset: 256)
!1462 = !DICompositeType(tag: DW_TAG_array_type, baseType: !173, size: 768, elements: !1463)
!1463 = !{!1464}
!1464 = !DISubrange(count: 24)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1455, file: !1446, line: 415, baseType: !1458, size: 256, offset: 1024)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1455, file: !1446, line: 416, baseType: !1462, size: 768, offset: 1280)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1455, file: !1446, line: 417, baseType: !1458, size: 256, offset: 2048)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1455, file: !1446, line: 418, baseType: !1462, size: 768, offset: 2304)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1455, file: !1446, line: 419, baseType: !1458, size: 256, offset: 3072)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1455, file: !1446, line: 420, baseType: !1462, size: 768, offset: 3328)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1455, file: !1446, line: 421, baseType: !1458, size: 256, offset: 4096)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1455, file: !1446, line: 422, baseType: !1473, size: 1792, offset: 4352)
!1473 = !DICompositeType(tag: DW_TAG_array_type, baseType: !173, size: 1792, elements: !1474)
!1474 = !{!1475}
!1475 = !DISubrange(count: 56)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1455, file: !1446, line: 423, baseType: !1477, size: 1920, offset: 6144)
!1477 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1478, size: 1920, elements: !1479)
!1478 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !156)
!1479 = !{!1480}
!1480 = !DISubrange(count: 240)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1455, file: !1446, line: 424, baseType: !1482, size: 20608, offset: 8064)
!1482 = !DICompositeType(tag: DW_TAG_array_type, baseType: !173, size: 20608, elements: !1483)
!1483 = !{!1484}
!1484 = !DISubrange(count: 644)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1455, file: !1446, line: 425, baseType: !570, size: 32, offset: 28672)
!1486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1487, size: 32)
!1487 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1446, line: 468, baseType: !1488)
!1488 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1446, line: 445, size: 1120, elements: !1489)
!1489 = !{!1490, !1491, !1492, !1493, !1494, !1495, !1496, !1500, !1501, !1502, !1503, !1504, !1505, !1506, !1507, !1509, !1510, !1511, !1515, !1519, !1521}
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1488, file: !1446, line: 447, baseType: !641, size: 32)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1488, file: !1446, line: 448, baseType: !570, size: 32, offset: 32)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1488, file: !1446, line: 449, baseType: !570, size: 32, offset: 64)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1488, file: !1446, line: 450, baseType: !570, size: 32, offset: 96)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1488, file: !1446, line: 451, baseType: !570, size: 32, offset: 128)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1488, file: !1446, line: 452, baseType: !570, size: 32, offset: 160)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1488, file: !1446, line: 453, baseType: !1497, size: 96, offset: 192)
!1497 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1478, size: 96, elements: !1498)
!1498 = !{!1499}
!1499 = !DISubrange(count: 12)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1488, file: !1446, line: 454, baseType: !570, size: 32, offset: 288)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1488, file: !1446, line: 455, baseType: !570, size: 32, offset: 320)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1488, file: !1446, line: 456, baseType: !570, size: 32, offset: 352)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1488, file: !1446, line: 457, baseType: !570, size: 32, offset: 384)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1488, file: !1446, line: 458, baseType: !570, size: 32, offset: 416)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1488, file: !1446, line: 459, baseType: !570, size: 32, offset: 448)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1488, file: !1446, line: 460, baseType: !570, size: 32, offset: 480)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1488, file: !1446, line: 461, baseType: !1508, size: 64, offset: 512)
!1508 = !DICompositeType(tag: DW_TAG_array_type, baseType: !641, size: 64, elements: !145)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1488, file: !1446, line: 462, baseType: !641, size: 32, offset: 576)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1488, file: !1446, line: 463, baseType: !641, size: 32, offset: 608)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1488, file: !1446, line: 464, baseType: !1512, size: 128, offset: 640)
!1512 = !DICompositeType(tag: DW_TAG_array_type, baseType: !641, size: 128, elements: !1513)
!1513 = !{!1514}
!1514 = !DISubrange(count: 4)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1488, file: !1446, line: 465, baseType: !1516, size: 160, offset: 768)
!1516 = !DICompositeType(tag: DW_TAG_array_type, baseType: !641, size: 160, elements: !1517)
!1517 = !{!1518}
!1518 = !DISubrange(count: 5)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1488, file: !1446, line: 466, baseType: !1520, size: 160, offset: 928)
!1520 = !DICompositeType(tag: DW_TAG_array_type, baseType: !173, size: 160, elements: !1517)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1488, file: !1446, line: 467, baseType: !570, size: 32, offset: 1088)
!1522 = !{!1523, !1549, !1552, !1554, !1556, !1296}
!1523 = !DIGlobalVariableExpression(var: !1524, expr: !DIExpression())
!1524 = distinct !DIGlobalVariable(name: "__init_sys_clock_driver_init", scope: !1298, file: !1525, line: 285, type: !1526, isLocal: true, isDefinition: true, align: 32)
!1525 = !DIFile(filename: "zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1526 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1527)
!1527 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !695, line: 51, size: 64, elements: !1528)
!1528 = !{!1529, !1548}
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1527, file: !695, line: 60, baseType: !1530, size: 32)
!1530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1531, size: 32)
!1531 = !DISubroutineType(types: !1532)
!1532 = !{!103, !1533}
!1533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1534, size: 32)
!1534 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1535)
!1535 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !732, line: 378, size: 192, elements: !1536)
!1536 = !{!1537, !1538, !1539, !1540, !1546, !1547}
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1535, file: !732, line: 380, baseType: !256, size: 32)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1535, file: !732, line: 382, baseType: !13, size: 32, offset: 32)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1535, file: !732, line: 384, baseType: !13, size: 32, offset: 64)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1535, file: !732, line: 386, baseType: !1541, size: 32, offset: 96)
!1541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1542, size: 32)
!1542 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !732, line: 351, size: 16, elements: !1543)
!1543 = !{!1544, !1545}
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1542, file: !732, line: 359, baseType: !156, size: 8)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1542, file: !732, line: 364, baseType: !743, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1535, file: !732, line: 388, baseType: !102, size: 32, offset: 128)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1535, file: !732, line: 396, baseType: !746, size: 32, offset: 160)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1527, file: !695, line: 65, baseType: !1533, size: 32, offset: 32)
!1549 = !DIGlobalVariableExpression(var: !1550, expr: !DIExpression())
!1550 = distinct !DIGlobalVariable(name: "lock", scope: !1298, file: !1525, line: 34, type: !1551, isLocal: true, isDefinition: true)
!1551 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !222, line: 43, elements: !223)
!1552 = !DIGlobalVariableExpression(var: !1553, expr: !DIExpression())
!1553 = distinct !DIGlobalVariable(name: "last_load", scope: !1298, file: !1525, line: 36, type: !173, isLocal: true, isDefinition: true)
!1554 = !DIGlobalVariableExpression(var: !1555, expr: !DIExpression())
!1555 = distinct !DIGlobalVariable(name: "cycle_count", scope: !1298, file: !1525, line: 48, type: !173, isLocal: true, isDefinition: true)
!1556 = !DIGlobalVariableExpression(var: !1557, expr: !DIExpression())
!1557 = distinct !DIGlobalVariable(name: "announced_cycles", scope: !1298, file: !1525, line: 54, type: !173, isLocal: true, isDefinition: true)
!1558 = !DIGlobalVariableExpression(var: !1559, expr: !DIExpression())
!1559 = distinct !DIGlobalVariable(name: "__init_imx_pinctrl_init", scope: !1560, file: !1564, line: 69, type: !1565, isLocal: true, isDefinition: true, align: 32)
!1560 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1561, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1562, globals: !1563, splitDebugInlining: false, nameTableKind: None)
!1561 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/pinctrl_imx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/gdbstub")
!1562 = !{!690, !22}
!1563 = !{!1558}
!1564 = !DIFile(filename: "zephyr/drivers/pinctrl/pinctrl_imx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1565 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1566)
!1566 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !695, line: 51, size: 64, elements: !1567)
!1567 = !{!1568, !1587}
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1566, file: !695, line: 60, baseType: !1569, size: 32)
!1569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1570, size: 32)
!1570 = !DISubroutineType(types: !1571)
!1571 = !{!103, !1572}
!1572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1573, size: 32)
!1573 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1574)
!1574 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !732, line: 378, size: 192, elements: !1575)
!1575 = !{!1576, !1577, !1578, !1579, !1585, !1586}
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1574, file: !732, line: 380, baseType: !256, size: 32)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1574, file: !732, line: 382, baseType: !13, size: 32, offset: 32)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1574, file: !732, line: 384, baseType: !13, size: 32, offset: 64)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1574, file: !732, line: 386, baseType: !1580, size: 32, offset: 96)
!1580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1581, size: 32)
!1581 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !732, line: 351, size: 16, elements: !1582)
!1582 = !{!1583, !1584}
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1581, file: !732, line: 359, baseType: !156, size: 8)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1581, file: !732, line: 364, baseType: !743, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1574, file: !732, line: 388, baseType: !102, size: 32, offset: 128)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1574, file: !732, line: 396, baseType: !746, size: 32, offset: 160)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1566, file: !695, line: 65, baseType: !1572, size: 32, offset: 32)
!1588 = !DIGlobalVariableExpression(var: !1589, expr: !DIExpression())
!1589 = distinct !DIGlobalVariable(name: "_k_neg_eagain", scope: !1590, file: !1593, line: 23, type: !789, isLocal: false, isDefinition: true)
!1590 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1591, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !1592, splitDebugInlining: false, nameTableKind: None)
!1591 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/gdbstub")
!1592 = !{!1588}
!1593 = !DIFile(filename: "zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1594 = !DIGlobalVariableExpression(var: !1595, expr: !DIExpression())
!1595 = distinct !DIGlobalVariable(name: "z_interrupt_stacks", scope: !1596, file: !1600, line: 86, type: !1832, isLocal: false, isDefinition: true, align: 64)
!1596 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1597, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !1598, retainedTypes: !1607, globals: !1680, splitDebugInlining: false, nameTableKind: None)
!1597 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/gdbstub")
!1598 = !{!1599, !30, !1301}
!1599 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "init_level", file: !1600, line: 63, baseType: !32, size: 32, elements: !1601)
!1600 = !DIFile(filename: "zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1601 = !{!1602, !1603, !1604, !1605, !1606}
!1602 = !DIEnumerator(name: "INIT_LEVEL_EARLY", value: 0)
!1603 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_1", value: 1)
!1604 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_2", value: 2)
!1605 = !DIEnumerator(name: "INIT_LEVEL_POST_KERNEL", value: 3)
!1606 = !DIEnumerator(name: "INIT_LEVEL_APPLICATION", value: 4)
!1607 = !{!217, !102, !103, !1608, !925, !173, !1638, !250, !156, !1663}
!1608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1609, size: 32)
!1609 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1610)
!1610 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "entropy_driver_api", file: !1611, line: 51, size: 64, elements: !1612)
!1611 = !DIFile(filename: "zephyr/include/zephyr/drivers/entropy.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1612 = !{!1613, !1633}
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy", scope: !1610, file: !1611, line: 52, baseType: !1614, size: 32)
!1614 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_t", file: !1611, line: 38, baseType: !1615)
!1615 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1616, size: 32)
!1616 = !DISubroutineType(types: !1617)
!1617 = !{!103, !1618, !788, !170}
!1618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1619, size: 32)
!1619 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1620)
!1620 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !732, line: 378, size: 192, elements: !1621)
!1621 = !{!1622, !1623, !1624, !1625, !1631, !1632}
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1620, file: !732, line: 380, baseType: !256, size: 32)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1620, file: !732, line: 382, baseType: !13, size: 32, offset: 32)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1620, file: !732, line: 384, baseType: !13, size: 32, offset: 64)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1620, file: !732, line: 386, baseType: !1626, size: 32, offset: 96)
!1626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1627, size: 32)
!1627 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !732, line: 351, size: 16, elements: !1628)
!1628 = !{!1629, !1630}
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1627, file: !732, line: 359, baseType: !156, size: 8)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1627, file: !732, line: 364, baseType: !743, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1620, file: !732, line: 388, baseType: !102, size: 32, offset: 128)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1620, file: !732, line: 396, baseType: !746, size: 32, offset: 160)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy_isr", scope: !1610, file: !1611, line: 53, baseType: !1634, size: 32, offset: 32)
!1634 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_isr_t", file: !1611, line: 47, baseType: !1635)
!1635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1636, size: 32)
!1636 = !DISubroutineType(types: !1637)
!1637 = !{!103, !1618, !788, !170, !173}
!1638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1639, size: 32)
!1639 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1446, line: 468, baseType: !1640)
!1640 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1446, line: 445, size: 1120, elements: !1641)
!1641 = !{!1642, !1643, !1644, !1645, !1646, !1647, !1648, !1649, !1650, !1651, !1652, !1653, !1654, !1655, !1656, !1657, !1658, !1659, !1660, !1661, !1662}
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1640, file: !1446, line: 447, baseType: !641, size: 32)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1640, file: !1446, line: 448, baseType: !570, size: 32, offset: 32)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1640, file: !1446, line: 449, baseType: !570, size: 32, offset: 64)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1640, file: !1446, line: 450, baseType: !570, size: 32, offset: 96)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1640, file: !1446, line: 451, baseType: !570, size: 32, offset: 128)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1640, file: !1446, line: 452, baseType: !570, size: 32, offset: 160)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1640, file: !1446, line: 453, baseType: !1497, size: 96, offset: 192)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1640, file: !1446, line: 454, baseType: !570, size: 32, offset: 288)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1640, file: !1446, line: 455, baseType: !570, size: 32, offset: 320)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1640, file: !1446, line: 456, baseType: !570, size: 32, offset: 352)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1640, file: !1446, line: 457, baseType: !570, size: 32, offset: 384)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1640, file: !1446, line: 458, baseType: !570, size: 32, offset: 416)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1640, file: !1446, line: 459, baseType: !570, size: 32, offset: 448)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1640, file: !1446, line: 460, baseType: !570, size: 32, offset: 480)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1640, file: !1446, line: 461, baseType: !1508, size: 64, offset: 512)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1640, file: !1446, line: 462, baseType: !641, size: 32, offset: 576)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1640, file: !1446, line: 463, baseType: !641, size: 32, offset: 608)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1640, file: !1446, line: 464, baseType: !1512, size: 128, offset: 640)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1640, file: !1446, line: 465, baseType: !1516, size: 160, offset: 768)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1640, file: !1446, line: 466, baseType: !1520, size: 160, offset: 928)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1640, file: !1446, line: 467, baseType: !570, size: 32, offset: 1088)
!1663 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1664, size: 32)
!1664 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !1446, line: 426, baseType: !1665)
!1665 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1446, line: 411, size: 28704, elements: !1666)
!1666 = !{!1667, !1668, !1669, !1670, !1671, !1672, !1673, !1674, !1675, !1676, !1677, !1678, !1679}
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1665, file: !1446, line: 413, baseType: !1458, size: 256)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1665, file: !1446, line: 414, baseType: !1462, size: 768, offset: 256)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1665, file: !1446, line: 415, baseType: !1458, size: 256, offset: 1024)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1665, file: !1446, line: 416, baseType: !1462, size: 768, offset: 1280)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1665, file: !1446, line: 417, baseType: !1458, size: 256, offset: 2048)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1665, file: !1446, line: 418, baseType: !1462, size: 768, offset: 2304)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1665, file: !1446, line: 419, baseType: !1458, size: 256, offset: 3072)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1665, file: !1446, line: 420, baseType: !1462, size: 768, offset: 3328)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1665, file: !1446, line: 421, baseType: !1458, size: 256, offset: 4096)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1665, file: !1446, line: 422, baseType: !1473, size: 1792, offset: 4352)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1665, file: !1446, line: 423, baseType: !1477, size: 1920, offset: 6144)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1665, file: !1446, line: 424, baseType: !1482, size: 20608, offset: 8064)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1665, file: !1446, line: 425, baseType: !570, size: 32, offset: 28672)
!1680 = !{!1681, !1797, !1805, !1807, !1594, !1810, !1812, !1817}
!1681 = !DIGlobalVariableExpression(var: !1682, expr: !DIExpression())
!1682 = distinct !DIGlobalVariable(name: "_kernel", scope: !1596, file: !1600, line: 40, type: !1683, isLocal: false, isDefinition: true)
!1683 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_kernel", file: !150, line: 158, size: 288, elements: !1684)
!1684 = !{!1685, !1792}
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "cpus", scope: !1683, file: !150, line: 159, baseType: !1686, size: 192)
!1686 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1687, size: 192, elements: !1282)
!1687 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu", file: !150, line: 100, size: 192, elements: !1688)
!1688 = !{!1689, !1690, !1691, !1786, !1787, !1788, !1789}
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !1687, file: !150, line: 102, baseType: !173, size: 32)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "irq_stack", scope: !1687, file: !150, line: 105, baseType: !925, size: 32, offset: 32)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !1687, file: !150, line: 108, baseType: !1692, size: 32, offset: 64)
!1692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1693, size: 32)
!1693 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !114, line: 245, size: 896, elements: !1694)
!1694 = !{!1695, !1753, !1765, !1766, !1767, !1768, !1781}
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1693, file: !114, line: 247, baseType: !1696, size: 384)
!1696 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !114, line: 57, size: 384, elements: !1697)
!1697 = !{!1698, !1722, !1729, !1730, !1731, !1740, !1741, !1742}
!1698 = !DIDerivedType(tag: DW_TAG_member, scope: !1696, file: !114, line: 60, baseType: !1699, size: 64)
!1699 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1696, file: !114, line: 60, size: 64, elements: !1700)
!1700 = !{!1701, !1716}
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !1699, file: !114, line: 61, baseType: !1702, size: 64)
!1702 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !124, line: 49, baseType: !1703)
!1703 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !124, line: 37, size: 64, elements: !1704)
!1704 = !{!1705, !1711}
!1705 = !DIDerivedType(tag: DW_TAG_member, scope: !1703, file: !124, line: 38, baseType: !1706, size: 32)
!1706 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1703, file: !124, line: 38, size: 32, elements: !1707)
!1707 = !{!1708, !1710}
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1706, file: !124, line: 39, baseType: !1709, size: 32)
!1709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1703, size: 32)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1706, file: !124, line: 40, baseType: !1709, size: 32)
!1711 = !DIDerivedType(tag: DW_TAG_member, scope: !1703, file: !124, line: 42, baseType: !1712, size: 32, offset: 32)
!1712 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1703, file: !124, line: 42, size: 32, elements: !1713)
!1713 = !{!1714, !1715}
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1712, file: !124, line: 43, baseType: !1709, size: 32)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1712, file: !124, line: 44, baseType: !1709, size: 32)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !1699, file: !114, line: 62, baseType: !1717, size: 64)
!1717 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !140, line: 49, size: 64, elements: !1718)
!1718 = !{!1719}
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1717, file: !140, line: 50, baseType: !1720, size: 64)
!1720 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1721, size: 64, elements: !145)
!1721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1717, size: 32)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !1696, file: !114, line: 68, baseType: !1723, size: 32, offset: 64)
!1723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1724, size: 32)
!1724 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !150, line: 233, baseType: !1725)
!1725 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !150, line: 231, size: 64, elements: !1726)
!1726 = !{!1727}
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !1725, file: !150, line: 232, baseType: !1728, size: 64)
!1728 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !124, line: 48, baseType: !1703)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !1696, file: !114, line: 71, baseType: !156, size: 8, offset: 96)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !1696, file: !114, line: 74, baseType: !156, size: 8, offset: 104)
!1731 = !DIDerivedType(tag: DW_TAG_member, scope: !1696, file: !114, line: 90, baseType: !1732, size: 16, offset: 112)
!1732 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1696, file: !114, line: 90, size: 16, elements: !1733)
!1733 = !{!1734, !1739}
!1734 = !DIDerivedType(tag: DW_TAG_member, scope: !1732, file: !114, line: 91, baseType: !1735, size: 16)
!1735 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1732, file: !114, line: 91, size: 16, elements: !1736)
!1736 = !{!1737, !1738}
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1735, file: !114, line: 96, baseType: !166, size: 8)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !1735, file: !114, line: 97, baseType: !156, size: 8, offset: 8)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !1732, file: !114, line: 100, baseType: !170, size: 16)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !1696, file: !114, line: 107, baseType: !173, size: 32, offset: 128)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !1696, file: !114, line: 127, baseType: !102, size: 32, offset: 160)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1696, file: !114, line: 131, baseType: !1743, size: 192, offset: 192)
!1743 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !150, line: 244, size: 192, elements: !1744)
!1744 = !{!1745, !1746, !1752}
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1743, file: !150, line: 245, baseType: !1702, size: 64)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1743, file: !150, line: 246, baseType: !1747, size: 32, offset: 64)
!1747 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !150, line: 242, baseType: !1748)
!1748 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1749, size: 32)
!1749 = !DISubroutineType(types: !1750)
!1750 = !{null, !1751}
!1751 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1743, size: 32)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !1743, file: !150, line: 249, baseType: !186, size: 64, offset: 128)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !1693, file: !114, line: 250, baseType: !1754, size: 288, offset: 384)
!1754 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !190, line: 25, size: 288, elements: !1755)
!1755 = !{!1756, !1757, !1758, !1759, !1760, !1761, !1762, !1763, !1764}
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !1754, file: !190, line: 26, baseType: !173, size: 32)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !1754, file: !190, line: 27, baseType: !173, size: 32, offset: 32)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !1754, file: !190, line: 28, baseType: !173, size: 32, offset: 64)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !1754, file: !190, line: 29, baseType: !173, size: 32, offset: 96)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !1754, file: !190, line: 30, baseType: !173, size: 32, offset: 128)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !1754, file: !190, line: 31, baseType: !173, size: 32, offset: 160)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !1754, file: !190, line: 32, baseType: !173, size: 32, offset: 192)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !1754, file: !190, line: 33, baseType: !173, size: 32, offset: 224)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !1754, file: !190, line: 34, baseType: !173, size: 32, offset: 256)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !1693, file: !114, line: 253, baseType: !102, size: 32, offset: 672)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !1693, file: !114, line: 256, baseType: !1724, size: 64, offset: 704)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !1693, file: !114, line: 294, baseType: !103, size: 32, offset: 768)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !1693, file: !114, line: 325, baseType: !1769, size: 32, offset: 800)
!1769 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1770, size: 32)
!1770 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !109, line: 5073, size: 160, elements: !1771)
!1771 = !{!1772, !1778, !1779}
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !1770, file: !109, line: 5074, baseType: !1773, size: 96)
!1773 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !210, line: 56, size: 96, elements: !1774)
!1774 = !{!1775, !1776, !1777}
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !1773, file: !210, line: 57, baseType: !213, size: 32)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !1773, file: !210, line: 58, baseType: !102, size: 32, offset: 32)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !1773, file: !210, line: 59, baseType: !217, size: 32, offset: 64)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !1770, file: !109, line: 5075, baseType: !1724, size: 64, offset: 96)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1770, file: !109, line: 5076, baseType: !1780, offset: 160)
!1780 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !222, line: 43, elements: !223)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1693, file: !114, line: 343, baseType: !1782, size: 64, offset: 832)
!1782 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !190, line: 60, size: 64, elements: !1783)
!1783 = !{!1784, !1785}
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !1782, file: !190, line: 63, baseType: !173, size: 32)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !1782, file: !190, line: 66, baseType: !173, size: 32, offset: 32)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "idle_thread", scope: !1687, file: !150, line: 111, baseType: !1692, size: 32, offset: 96)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "slice_ticks", scope: !1687, file: !150, line: 124, baseType: !103, size: 32, offset: 128)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1687, file: !150, line: 127, baseType: !156, size: 8, offset: 160)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1687, file: !150, line: 153, baseType: !1790, offset: 168)
!1790 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu_arch", file: !1791, line: 33, elements: !223)
!1791 = !DIFile(filename: "zephyr/include/zephyr/arch/structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "ready_q", scope: !1683, file: !150, line: 170, baseType: !1793, size: 96, offset: 192)
!1793 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !150, line: 83, size: 96, elements: !1794)
!1794 = !{!1795, !1796}
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !1793, file: !150, line: 86, baseType: !1692, size: 32)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !1793, file: !150, line: 90, baseType: !1728, size: 64, offset: 32)
!1797 = !DIGlobalVariableExpression(var: !1798, expr: !DIExpression())
!1798 = distinct !DIGlobalVariable(name: "z_main_stack", scope: !1596, file: !1600, line: 43, type: !1799, isLocal: false, isDefinition: true, align: 64)
!1799 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1800, size: 8192, elements: !1803)
!1800 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !234, line: 47, size: 8, elements: !1801)
!1801 = !{!1802}
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1800, file: !234, line: 48, baseType: !237, size: 8)
!1803 = !{!1804}
!1804 = !DISubrange(count: 1024)
!1805 = !DIGlobalVariableExpression(var: !1806, expr: !DIExpression())
!1806 = distinct !DIGlobalVariable(name: "z_main_thread", scope: !1596, file: !1600, line: 44, type: !1693, isLocal: false, isDefinition: true)
!1807 = !DIGlobalVariableExpression(var: !1808, expr: !DIExpression())
!1808 = distinct !DIGlobalVariable(name: "z_idle_threads", scope: !1596, file: !1600, line: 48, type: !1809, isLocal: false, isDefinition: true)
!1809 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1693, size: 896, elements: !1282)
!1810 = !DIGlobalVariableExpression(var: !1811, expr: !DIExpression())
!1811 = distinct !DIGlobalVariable(name: "z_sys_post_kernel", scope: !1596, file: !1600, line: 217, type: !743, isLocal: false, isDefinition: true)
!1812 = !DIGlobalVariableExpression(var: !1813, expr: !DIExpression())
!1813 = distinct !DIGlobalVariable(name: "z_idle_stacks", scope: !1596, file: !1600, line: 50, type: !1814, isLocal: true, isDefinition: true, align: 64)
!1814 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1800, size: 2560, elements: !1815)
!1815 = !{!1283, !1816}
!1816 = !DISubrange(count: 320)
!1817 = !DIGlobalVariableExpression(var: !1818, expr: !DIExpression())
!1818 = distinct !DIGlobalVariable(name: "levels", scope: !1819, file: !1600, line: 232, type: !1822, isLocal: true, isDefinition: true)
!1819 = distinct !DISubprogram(name: "z_sys_init_run_level", scope: !1600, file: !1600, line: 230, type: !1820, scopeLine: 231, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1596, retainedNodes: !223)
!1820 = !DISubroutineType(types: !1821)
!1821 = !{null, !1599}
!1822 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1823, size: 192, elements: !1256)
!1823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1824, size: 32)
!1824 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1825)
!1825 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !695, line: 51, size: 64, elements: !1826)
!1826 = !{!1827, !1831}
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1825, file: !695, line: 60, baseType: !1828, size: 32)
!1828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1829, size: 32)
!1829 = !DISubroutineType(types: !1830)
!1830 = !{!103, !1618}
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1825, file: !695, line: 65, baseType: !1618, size: 32, offset: 32)
!1832 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1800, size: 16384, elements: !1833)
!1833 = !{!1283, !1834}
!1834 = !DISubrange(count: 2048)
!1835 = !DIGlobalVariableExpression(var: !1836, expr: !DIExpression())
!1836 = distinct !DIGlobalVariable(name: "states_str", scope: !1837, file: !1838, line: 276, type: !1947, isLocal: true, isDefinition: true)
!1837 = distinct !DISubprogram(name: "k_thread_state_str", scope: !1838, file: !1838, line: 271, type: !1839, scopeLine: 272, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1936, retainedNodes: !223)
!1838 = !DIFile(filename: "zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1839 = !DISubroutineType(types: !1840)
!1840 = !{!256, !1841, !925, !217}
!1841 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !114, line: 347, baseType: !1842)
!1842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1843, size: 32)
!1843 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !114, line: 245, size: 896, elements: !1844)
!1844 = !{!1845, !1903, !1915, !1916, !1917, !1918, !1931}
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1843, file: !114, line: 247, baseType: !1846, size: 384)
!1846 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !114, line: 57, size: 384, elements: !1847)
!1847 = !{!1848, !1872, !1879, !1880, !1881, !1890, !1891, !1892}
!1848 = !DIDerivedType(tag: DW_TAG_member, scope: !1846, file: !114, line: 60, baseType: !1849, size: 64)
!1849 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1846, file: !114, line: 60, size: 64, elements: !1850)
!1850 = !{!1851, !1866}
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !1849, file: !114, line: 61, baseType: !1852, size: 64)
!1852 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !124, line: 49, baseType: !1853)
!1853 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !124, line: 37, size: 64, elements: !1854)
!1854 = !{!1855, !1861}
!1855 = !DIDerivedType(tag: DW_TAG_member, scope: !1853, file: !124, line: 38, baseType: !1856, size: 32)
!1856 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1853, file: !124, line: 38, size: 32, elements: !1857)
!1857 = !{!1858, !1860}
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1856, file: !124, line: 39, baseType: !1859, size: 32)
!1859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1853, size: 32)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1856, file: !124, line: 40, baseType: !1859, size: 32)
!1861 = !DIDerivedType(tag: DW_TAG_member, scope: !1853, file: !124, line: 42, baseType: !1862, size: 32, offset: 32)
!1862 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1853, file: !124, line: 42, size: 32, elements: !1863)
!1863 = !{!1864, !1865}
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1862, file: !124, line: 43, baseType: !1859, size: 32)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1862, file: !124, line: 44, baseType: !1859, size: 32)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !1849, file: !114, line: 62, baseType: !1867, size: 64)
!1867 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !140, line: 49, size: 64, elements: !1868)
!1868 = !{!1869}
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1867, file: !140, line: 50, baseType: !1870, size: 64)
!1870 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1871, size: 64, elements: !145)
!1871 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1867, size: 32)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !1846, file: !114, line: 68, baseType: !1873, size: 32, offset: 64)
!1873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1874, size: 32)
!1874 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !150, line: 233, baseType: !1875)
!1875 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !150, line: 231, size: 64, elements: !1876)
!1876 = !{!1877}
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !1875, file: !150, line: 232, baseType: !1878, size: 64)
!1878 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !124, line: 48, baseType: !1853)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !1846, file: !114, line: 71, baseType: !156, size: 8, offset: 96)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !1846, file: !114, line: 74, baseType: !156, size: 8, offset: 104)
!1881 = !DIDerivedType(tag: DW_TAG_member, scope: !1846, file: !114, line: 90, baseType: !1882, size: 16, offset: 112)
!1882 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1846, file: !114, line: 90, size: 16, elements: !1883)
!1883 = !{!1884, !1889}
!1884 = !DIDerivedType(tag: DW_TAG_member, scope: !1882, file: !114, line: 91, baseType: !1885, size: 16)
!1885 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1882, file: !114, line: 91, size: 16, elements: !1886)
!1886 = !{!1887, !1888}
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1885, file: !114, line: 96, baseType: !166, size: 8)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !1885, file: !114, line: 97, baseType: !156, size: 8, offset: 8)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !1882, file: !114, line: 100, baseType: !170, size: 16)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !1846, file: !114, line: 107, baseType: !173, size: 32, offset: 128)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !1846, file: !114, line: 127, baseType: !102, size: 32, offset: 160)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1846, file: !114, line: 131, baseType: !1893, size: 192, offset: 192)
!1893 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !150, line: 244, size: 192, elements: !1894)
!1894 = !{!1895, !1896, !1902}
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1893, file: !150, line: 245, baseType: !1852, size: 64)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1893, file: !150, line: 246, baseType: !1897, size: 32, offset: 64)
!1897 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !150, line: 242, baseType: !1898)
!1898 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1899, size: 32)
!1899 = !DISubroutineType(types: !1900)
!1900 = !{null, !1901}
!1901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1893, size: 32)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !1893, file: !150, line: 249, baseType: !186, size: 64, offset: 128)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !1843, file: !114, line: 250, baseType: !1904, size: 288, offset: 384)
!1904 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !190, line: 25, size: 288, elements: !1905)
!1905 = !{!1906, !1907, !1908, !1909, !1910, !1911, !1912, !1913, !1914}
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !1904, file: !190, line: 26, baseType: !173, size: 32)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !1904, file: !190, line: 27, baseType: !173, size: 32, offset: 32)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !1904, file: !190, line: 28, baseType: !173, size: 32, offset: 64)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !1904, file: !190, line: 29, baseType: !173, size: 32, offset: 96)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !1904, file: !190, line: 30, baseType: !173, size: 32, offset: 128)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !1904, file: !190, line: 31, baseType: !173, size: 32, offset: 160)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !1904, file: !190, line: 32, baseType: !173, size: 32, offset: 192)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !1904, file: !190, line: 33, baseType: !173, size: 32, offset: 224)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !1904, file: !190, line: 34, baseType: !173, size: 32, offset: 256)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !1843, file: !114, line: 253, baseType: !102, size: 32, offset: 672)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !1843, file: !114, line: 256, baseType: !1874, size: 64, offset: 704)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !1843, file: !114, line: 294, baseType: !103, size: 32, offset: 768)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !1843, file: !114, line: 325, baseType: !1919, size: 32, offset: 800)
!1919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1920, size: 32)
!1920 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !109, line: 5073, size: 160, elements: !1921)
!1921 = !{!1922, !1928, !1929}
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !1920, file: !109, line: 5074, baseType: !1923, size: 96)
!1923 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !210, line: 56, size: 96, elements: !1924)
!1924 = !{!1925, !1926, !1927}
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !1923, file: !210, line: 57, baseType: !213, size: 32)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !1923, file: !210, line: 58, baseType: !102, size: 32, offset: 32)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !1923, file: !210, line: 59, baseType: !217, size: 32, offset: 64)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !1920, file: !109, line: 5075, baseType: !1874, size: 64, offset: 96)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1920, file: !109, line: 5076, baseType: !1930, offset: 160)
!1930 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !222, line: 43, elements: !223)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1843, file: !114, line: 343, baseType: !1932, size: 64, offset: 832)
!1932 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !190, line: 60, size: 64, elements: !1933)
!1933 = !{!1934, !1935}
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !1932, file: !190, line: 63, baseType: !173, size: 32)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !1932, file: !190, line: 66, baseType: !173, size: 32, offset: 32)
!1936 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1937, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !1938, globals: !1942, splitDebugInlining: false, nameTableKind: None)
!1937 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/gdbstub")
!1938 = !{!102, !256, !1442, !156, !103, !1939, !24, !217, !925, !173, !1940}
!1939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1852, size: 32)
!1940 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !23, line: 91, baseType: !1941)
!1941 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!1942 = !{!1835, !1943}
!1943 = !DIGlobalVariableExpression(var: !1944, expr: !DIExpression())
!1944 = distinct !DIGlobalVariable(name: "states_sz", scope: !1837, file: !1838, line: 279, type: !1945, isLocal: true, isDefinition: true)
!1945 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1946, size: 256, elements: !1459)
!1946 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !217)
!1947 = !DICompositeType(tag: DW_TAG_array_type, baseType: !256, size: 256, elements: !1459)
!1948 = !DIGlobalVariableExpression(var: !1949, expr: !DIExpression())
!1949 = distinct !DIGlobalVariable(name: "sched_spinlock", scope: !1950, file: !2052, line: 56, type: !2041, isLocal: false, isDefinition: true)
!1950 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1951, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !1952, globals: !2049, splitDebugInlining: false, nameTableKind: None)
!1951 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/gdbstub")
!1952 = !{!1953, !925, !102, !2047, !788, !1442, !250, !103, !173, !1940, !2048}
!1953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1954, size: 32)
!1954 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !114, line: 245, size: 896, elements: !1955)
!1955 = !{!1956, !2014, !2026, !2027, !2028, !2029, !2042}
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1954, file: !114, line: 247, baseType: !1957, size: 384)
!1957 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !114, line: 57, size: 384, elements: !1958)
!1958 = !{!1959, !1983, !1990, !1991, !1992, !2001, !2002, !2003}
!1959 = !DIDerivedType(tag: DW_TAG_member, scope: !1957, file: !114, line: 60, baseType: !1960, size: 64)
!1960 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1957, file: !114, line: 60, size: 64, elements: !1961)
!1961 = !{!1962, !1977}
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !1960, file: !114, line: 61, baseType: !1963, size: 64)
!1963 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !124, line: 49, baseType: !1964)
!1964 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !124, line: 37, size: 64, elements: !1965)
!1965 = !{!1966, !1972}
!1966 = !DIDerivedType(tag: DW_TAG_member, scope: !1964, file: !124, line: 38, baseType: !1967, size: 32)
!1967 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1964, file: !124, line: 38, size: 32, elements: !1968)
!1968 = !{!1969, !1971}
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1967, file: !124, line: 39, baseType: !1970, size: 32)
!1970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1964, size: 32)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1967, file: !124, line: 40, baseType: !1970, size: 32)
!1972 = !DIDerivedType(tag: DW_TAG_member, scope: !1964, file: !124, line: 42, baseType: !1973, size: 32, offset: 32)
!1973 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1964, file: !124, line: 42, size: 32, elements: !1974)
!1974 = !{!1975, !1976}
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1973, file: !124, line: 43, baseType: !1970, size: 32)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1973, file: !124, line: 44, baseType: !1970, size: 32)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !1960, file: !114, line: 62, baseType: !1978, size: 64)
!1978 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !140, line: 49, size: 64, elements: !1979)
!1979 = !{!1980}
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1978, file: !140, line: 50, baseType: !1981, size: 64)
!1981 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1982, size: 64, elements: !145)
!1982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1978, size: 32)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !1957, file: !114, line: 68, baseType: !1984, size: 32, offset: 64)
!1984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1985, size: 32)
!1985 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !150, line: 233, baseType: !1986)
!1986 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !150, line: 231, size: 64, elements: !1987)
!1987 = !{!1988}
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !1986, file: !150, line: 232, baseType: !1989, size: 64)
!1989 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !124, line: 48, baseType: !1964)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !1957, file: !114, line: 71, baseType: !156, size: 8, offset: 96)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !1957, file: !114, line: 74, baseType: !156, size: 8, offset: 104)
!1992 = !DIDerivedType(tag: DW_TAG_member, scope: !1957, file: !114, line: 90, baseType: !1993, size: 16, offset: 112)
!1993 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1957, file: !114, line: 90, size: 16, elements: !1994)
!1994 = !{!1995, !2000}
!1995 = !DIDerivedType(tag: DW_TAG_member, scope: !1993, file: !114, line: 91, baseType: !1996, size: 16)
!1996 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1993, file: !114, line: 91, size: 16, elements: !1997)
!1997 = !{!1998, !1999}
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1996, file: !114, line: 96, baseType: !166, size: 8)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !1996, file: !114, line: 97, baseType: !156, size: 8, offset: 8)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !1993, file: !114, line: 100, baseType: !170, size: 16)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !1957, file: !114, line: 107, baseType: !173, size: 32, offset: 128)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !1957, file: !114, line: 127, baseType: !102, size: 32, offset: 160)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1957, file: !114, line: 131, baseType: !2004, size: 192, offset: 192)
!2004 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !150, line: 244, size: 192, elements: !2005)
!2005 = !{!2006, !2007, !2013}
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2004, file: !150, line: 245, baseType: !1963, size: 64)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2004, file: !150, line: 246, baseType: !2008, size: 32, offset: 64)
!2008 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !150, line: 242, baseType: !2009)
!2009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2010, size: 32)
!2010 = !DISubroutineType(types: !2011)
!2011 = !{null, !2012}
!2012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2004, size: 32)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2004, file: !150, line: 249, baseType: !186, size: 64, offset: 128)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !1954, file: !114, line: 250, baseType: !2015, size: 288, offset: 384)
!2015 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !190, line: 25, size: 288, elements: !2016)
!2016 = !{!2017, !2018, !2019, !2020, !2021, !2022, !2023, !2024, !2025}
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2015, file: !190, line: 26, baseType: !173, size: 32)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2015, file: !190, line: 27, baseType: !173, size: 32, offset: 32)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2015, file: !190, line: 28, baseType: !173, size: 32, offset: 64)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2015, file: !190, line: 29, baseType: !173, size: 32, offset: 96)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2015, file: !190, line: 30, baseType: !173, size: 32, offset: 128)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2015, file: !190, line: 31, baseType: !173, size: 32, offset: 160)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2015, file: !190, line: 32, baseType: !173, size: 32, offset: 192)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2015, file: !190, line: 33, baseType: !173, size: 32, offset: 224)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2015, file: !190, line: 34, baseType: !173, size: 32, offset: 256)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !1954, file: !114, line: 253, baseType: !102, size: 32, offset: 672)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !1954, file: !114, line: 256, baseType: !1985, size: 64, offset: 704)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !1954, file: !114, line: 294, baseType: !103, size: 32, offset: 768)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !1954, file: !114, line: 325, baseType: !2030, size: 32, offset: 800)
!2030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2031, size: 32)
!2031 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !109, line: 5073, size: 160, elements: !2032)
!2032 = !{!2033, !2039, !2040}
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2031, file: !109, line: 5074, baseType: !2034, size: 96)
!2034 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !210, line: 56, size: 96, elements: !2035)
!2035 = !{!2036, !2037, !2038}
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2034, file: !210, line: 57, baseType: !213, size: 32)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2034, file: !210, line: 58, baseType: !102, size: 32, offset: 32)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2034, file: !210, line: 59, baseType: !217, size: 32, offset: 64)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2031, file: !109, line: 5075, baseType: !1985, size: 64, offset: 96)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2031, file: !109, line: 5076, baseType: !2041, offset: 160)
!2041 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !222, line: 43, elements: !223)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1954, file: !114, line: 343, baseType: !2043, size: 64, offset: 832)
!2043 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !190, line: 60, size: 64, elements: !2044)
!2044 = !{!2045, !2046}
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2043, file: !190, line: 63, baseType: !173, size: 32)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2043, file: !190, line: 66, baseType: !173, size: 32, offset: 32)
!2047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1982, size: 32)
!2048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1963, size: 32)
!2049 = !{!1948, !2050, !2053, !2055}
!2050 = !DIGlobalVariableExpression(var: !2051, expr: !DIExpression())
!2051 = distinct !DIGlobalVariable(name: "slice_ticks", scope: !1950, file: !2052, line: 404, type: !103, isLocal: true, isDefinition: true)
!2052 = !DIFile(filename: "zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2053 = !DIGlobalVariableExpression(var: !2054, expr: !DIExpression())
!2054 = distinct !DIGlobalVariable(name: "slice_max_prio", scope: !1950, file: !2052, line: 405, type: !103, isLocal: true, isDefinition: true)
!2055 = !DIGlobalVariableExpression(var: !2056, expr: !DIExpression())
!2056 = distinct !DIGlobalVariable(name: "pending_current", scope: !1950, file: !2052, line: 425, type: !1953, isLocal: true, isDefinition: true)
!2057 = !DIGlobalVariableExpression(var: !2058, expr: !DIExpression())
!2058 = distinct !DIGlobalVariable(name: "timeout_lock", scope: !2059, file: !2089, line: 19, type: !2095, isLocal: true, isDefinition: true)
!2059 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2060, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2061, globals: !2086, splitDebugInlining: false, nameTableKind: None)
!2060 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/gdbstub")
!2061 = !{!1442, !102, !250, !173, !1940, !103, !2062, !925, !186}
!2062 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2063, size: 32)
!2063 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !150, line: 244, size: 192, elements: !2064)
!2064 = !{!2065, !2080, !2085}
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2063, file: !150, line: 245, baseType: !2066, size: 64)
!2066 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !124, line: 49, baseType: !2067)
!2067 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !124, line: 37, size: 64, elements: !2068)
!2068 = !{!2069, !2075}
!2069 = !DIDerivedType(tag: DW_TAG_member, scope: !2067, file: !124, line: 38, baseType: !2070, size: 32)
!2070 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2067, file: !124, line: 38, size: 32, elements: !2071)
!2071 = !{!2072, !2074}
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2070, file: !124, line: 39, baseType: !2073, size: 32)
!2073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2067, size: 32)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2070, file: !124, line: 40, baseType: !2073, size: 32)
!2075 = !DIDerivedType(tag: DW_TAG_member, scope: !2067, file: !124, line: 42, baseType: !2076, size: 32, offset: 32)
!2076 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2067, file: !124, line: 42, size: 32, elements: !2077)
!2077 = !{!2078, !2079}
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2076, file: !124, line: 43, baseType: !2073, size: 32)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2076, file: !124, line: 44, baseType: !2073, size: 32)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2063, file: !150, line: 246, baseType: !2081, size: 32, offset: 64)
!2081 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !150, line: 242, baseType: !2082)
!2082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2083, size: 32)
!2083 = !DISubroutineType(types: !2084)
!2084 = !{null, !2062}
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2063, file: !150, line: 249, baseType: !186, size: 64, offset: 128)
!2086 = !{!2087, !2057, !2090, !2092}
!2087 = !DIGlobalVariableExpression(var: !2088, expr: !DIExpression())
!2088 = distinct !DIGlobalVariable(name: "curr_tick", scope: !2059, file: !2089, line: 15, type: !1940, isLocal: true, isDefinition: true)
!2089 = !DIFile(filename: "zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2090 = !DIGlobalVariableExpression(var: !2091, expr: !DIExpression())
!2091 = distinct !DIGlobalVariable(name: "announce_remaining", scope: !2059, file: !2089, line: 25, type: !103, isLocal: true, isDefinition: true)
!2092 = !DIGlobalVariableExpression(var: !2093, expr: !DIExpression())
!2093 = distinct !DIGlobalVariable(name: "timeout_list", scope: !2059, file: !2089, line: 17, type: !2094, isLocal: true, isDefinition: true)
!2094 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !124, line: 48, baseType: !2067)
!2095 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !222, line: 43, elements: !223)
!2096 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2097, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2097 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/gdbstub")
!2098 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2099, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2099 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/gdbstub")
!2100 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2101, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2102, retainedTypes: !2122, splitDebugInlining: false, nameTableKind: None)
!2101 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/gdbstub")
!2102 = !{!2103, !2111}
!2103 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "specifier_cat_enum", file: !2104, line: 69, baseType: !32, size: 32, elements: !2105)
!2104 = !DIFile(filename: "zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2105 = !{!2106, !2107, !2108, !2109, !2110}
!2106 = !DIEnumerator(name: "SPECIFIER_INVALID", value: 0)
!2107 = !DIEnumerator(name: "SPECIFIER_SINT", value: 1)
!2108 = !DIEnumerator(name: "SPECIFIER_UINT", value: 2)
!2109 = !DIEnumerator(name: "SPECIFIER_PTR", value: 3)
!2110 = !DIEnumerator(name: "SPECIFIER_FP", value: 4)
!2111 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "length_mod_enum", file: !2104, line: 56, baseType: !32, size: 32, elements: !2112)
!2112 = !{!2113, !2114, !2115, !2116, !2117, !2118, !2119, !2120, !2121}
!2113 = !DIEnumerator(name: "LENGTH_NONE", value: 0)
!2114 = !DIEnumerator(name: "LENGTH_HH", value: 1)
!2115 = !DIEnumerator(name: "LENGTH_H", value: 2)
!2116 = !DIEnumerator(name: "LENGTH_L", value: 3)
!2117 = !DIEnumerator(name: "LENGTH_LL", value: 4)
!2118 = !DIEnumerator(name: "LENGTH_J", value: 5)
!2119 = !DIEnumerator(name: "LENGTH_Z", value: 6)
!2120 = !DIEnumerator(name: "LENGTH_T", value: 7)
!2121 = !DIEnumerator(name: "LENGTH_UPPER_L", value: 8)
!2122 = !{!103, !2103, !2111, !2123, !167, !750, !2125, !2126, !157, !171, !256, !217, !102, !22, !32, !2128, !2129, !2130, !2131, !2132, !187, !2133, !2124, !2134, !2135, !2136, !2137}
!2123 = !DIDerivedType(tag: DW_TAG_typedef, name: "sint_value_type", file: !2104, line: 31, baseType: !2124)
!2124 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !23, line: 76, baseType: !187)
!2125 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !218, line: 329, baseType: !32)
!2126 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_value_type", file: !2104, line: 32, baseType: !2127)
!2127 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !23, line: 92, baseType: !1941)
!2128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !103, size: 32)
!2129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !167, size: 32)
!2130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !750, size: 32)
!2131 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!2132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2131, size: 32)
!2133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !187, size: 32)
!2134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2124, size: 32)
!2135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !217, size: 32)
!2136 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !218, line: 145, baseType: !103)
!2137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2136, size: 32)
!2138 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2139, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2139 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/gdbstub/zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/gdbstub")
!2140 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2141, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2142, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2141 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/gdbstub")
!2142 = !{!2143, !30}
!2143 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_fatal_error_reason", file: !2144, line: 27, baseType: !32, size: 32, elements: !2145)
!2144 = !DIFile(filename: "zephyr/include/zephyr/fatal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2145 = !{!2146, !2147, !2148, !2149, !2150}
!2146 = !DIEnumerator(name: "K_ERR_CPU_EXCEPTION", value: 0)
!2147 = !DIEnumerator(name: "K_ERR_SPURIOUS_IRQ", value: 1)
!2148 = !DIEnumerator(name: "K_ERR_STACK_CHK_FAIL", value: 2)
!2149 = !DIEnumerator(name: "K_ERR_KERNEL_OOPS", value: 3)
!2150 = !DIEnumerator(name: "K_ERR_KERNEL_PANIC", value: 4)
!2151 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2152, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2153, retainedTypes: !2154, splitDebugInlining: false, nameTableKind: None)
!2152 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/gdbstub")
!2153 = !{!1301, !2143, !30}
!2154 = !{!2155, !2156, !102, !103, !250, !173, !156, !2173}
!2155 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !566, line: 249, baseType: !1301)
!2156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2157, size: 32)
!2157 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !1446, line: 426, baseType: !2158)
!2158 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1446, line: 411, size: 28704, elements: !2159)
!2159 = !{!2160, !2161, !2162, !2163, !2164, !2165, !2166, !2167, !2168, !2169, !2170, !2171, !2172}
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2158, file: !1446, line: 413, baseType: !1458, size: 256)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2158, file: !1446, line: 414, baseType: !1462, size: 768, offset: 256)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2158, file: !1446, line: 415, baseType: !1458, size: 256, offset: 1024)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2158, file: !1446, line: 416, baseType: !1462, size: 768, offset: 1280)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2158, file: !1446, line: 417, baseType: !1458, size: 256, offset: 2048)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2158, file: !1446, line: 418, baseType: !1462, size: 768, offset: 2304)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2158, file: !1446, line: 419, baseType: !1458, size: 256, offset: 3072)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2158, file: !1446, line: 420, baseType: !1462, size: 768, offset: 3328)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2158, file: !1446, line: 421, baseType: !1458, size: 256, offset: 4096)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2158, file: !1446, line: 422, baseType: !1473, size: 1792, offset: 4352)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2158, file: !1446, line: 423, baseType: !1477, size: 1920, offset: 6144)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2158, file: !1446, line: 424, baseType: !1482, size: 20608, offset: 8064)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2158, file: !1446, line: 425, baseType: !570, size: 32, offset: 28672)
!2173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2174, size: 32)
!2174 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1446, line: 468, baseType: !2175)
!2175 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1446, line: 445, size: 1120, elements: !2176)
!2176 = !{!2177, !2178, !2179, !2180, !2181, !2182, !2183, !2184, !2185, !2186, !2187, !2188, !2189, !2190, !2191, !2192, !2193, !2194, !2195, !2196, !2197}
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2175, file: !1446, line: 447, baseType: !641, size: 32)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2175, file: !1446, line: 448, baseType: !570, size: 32, offset: 32)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2175, file: !1446, line: 449, baseType: !570, size: 32, offset: 64)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2175, file: !1446, line: 450, baseType: !570, size: 32, offset: 96)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2175, file: !1446, line: 451, baseType: !570, size: 32, offset: 128)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2175, file: !1446, line: 452, baseType: !570, size: 32, offset: 160)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2175, file: !1446, line: 453, baseType: !1497, size: 96, offset: 192)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2175, file: !1446, line: 454, baseType: !570, size: 32, offset: 288)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2175, file: !1446, line: 455, baseType: !570, size: 32, offset: 320)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2175, file: !1446, line: 456, baseType: !570, size: 32, offset: 352)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2175, file: !1446, line: 457, baseType: !570, size: 32, offset: 384)
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2175, file: !1446, line: 458, baseType: !570, size: 32, offset: 416)
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2175, file: !1446, line: 459, baseType: !570, size: 32, offset: 448)
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2175, file: !1446, line: 460, baseType: !570, size: 32, offset: 480)
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2175, file: !1446, line: 461, baseType: !1508, size: 64, offset: 512)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2175, file: !1446, line: 462, baseType: !641, size: 32, offset: 576)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2175, file: !1446, line: 463, baseType: !641, size: 32, offset: 608)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2175, file: !1446, line: 464, baseType: !1512, size: 128, offset: 640)
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2175, file: !1446, line: 465, baseType: !1516, size: 160, offset: 768)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2175, file: !1446, line: 466, baseType: !1520, size: 160, offset: 928)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2175, file: !1446, line: 467, baseType: !570, size: 32, offset: 1088)
!2198 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2199, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2199 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/gdbstub")
!2200 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2201, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2202, splitDebugInlining: false, nameTableKind: None)
!2201 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/gdbstub")
!2202 = !{!102, !103, !22, !2203}
!2203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2204, size: 32)
!2204 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1446, line: 468, baseType: !2205)
!2205 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1446, line: 445, size: 1120, elements: !2206)
!2206 = !{!2207, !2208, !2209, !2210, !2211, !2212, !2213, !2214, !2215, !2216, !2217, !2218, !2219, !2220, !2221, !2222, !2223, !2224, !2225, !2226, !2227}
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2205, file: !1446, line: 447, baseType: !641, size: 32)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2205, file: !1446, line: 448, baseType: !570, size: 32, offset: 32)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2205, file: !1446, line: 449, baseType: !570, size: 32, offset: 64)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2205, file: !1446, line: 450, baseType: !570, size: 32, offset: 96)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2205, file: !1446, line: 451, baseType: !570, size: 32, offset: 128)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2205, file: !1446, line: 452, baseType: !570, size: 32, offset: 160)
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2205, file: !1446, line: 453, baseType: !1497, size: 96, offset: 192)
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2205, file: !1446, line: 454, baseType: !570, size: 32, offset: 288)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2205, file: !1446, line: 455, baseType: !570, size: 32, offset: 320)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2205, file: !1446, line: 456, baseType: !570, size: 32, offset: 352)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2205, file: !1446, line: 457, baseType: !570, size: 32, offset: 384)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2205, file: !1446, line: 458, baseType: !570, size: 32, offset: 416)
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2205, file: !1446, line: 459, baseType: !570, size: 32, offset: 448)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2205, file: !1446, line: 460, baseType: !570, size: 32, offset: 480)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2205, file: !1446, line: 461, baseType: !1508, size: 64, offset: 512)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2205, file: !1446, line: 462, baseType: !641, size: 32, offset: 576)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2205, file: !1446, line: 463, baseType: !641, size: 32, offset: 608)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2205, file: !1446, line: 464, baseType: !1512, size: 128, offset: 640)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2205, file: !1446, line: 465, baseType: !1516, size: 160, offset: 768)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2205, file: !1446, line: 466, baseType: !1520, size: 160, offset: 928)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2205, file: !1446, line: 467, baseType: !570, size: 32, offset: 1088)
!2228 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2229, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2230, splitDebugInlining: false, nameTableKind: None)
!2229 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/gdbstub")
!2230 = !{!2231, !102, !103}
!2231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2232, size: 32)
!2232 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1446, line: 468, baseType: !2233)
!2233 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1446, line: 445, size: 1120, elements: !2234)
!2234 = !{!2235, !2236, !2237, !2238, !2239, !2240, !2241, !2242, !2243, !2244, !2245, !2246, !2247, !2248, !2249, !2250, !2251, !2252, !2253, !2254, !2255}
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2233, file: !1446, line: 447, baseType: !641, size: 32)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2233, file: !1446, line: 448, baseType: !570, size: 32, offset: 32)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2233, file: !1446, line: 449, baseType: !570, size: 32, offset: 64)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2233, file: !1446, line: 450, baseType: !570, size: 32, offset: 96)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2233, file: !1446, line: 451, baseType: !570, size: 32, offset: 128)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2233, file: !1446, line: 452, baseType: !570, size: 32, offset: 160)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2233, file: !1446, line: 453, baseType: !1497, size: 96, offset: 192)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2233, file: !1446, line: 454, baseType: !570, size: 32, offset: 288)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2233, file: !1446, line: 455, baseType: !570, size: 32, offset: 320)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2233, file: !1446, line: 456, baseType: !570, size: 32, offset: 352)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2233, file: !1446, line: 457, baseType: !570, size: 32, offset: 384)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2233, file: !1446, line: 458, baseType: !570, size: 32, offset: 416)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2233, file: !1446, line: 459, baseType: !570, size: 32, offset: 448)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2233, file: !1446, line: 460, baseType: !570, size: 32, offset: 480)
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2233, file: !1446, line: 461, baseType: !1508, size: 64, offset: 512)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2233, file: !1446, line: 462, baseType: !641, size: 32, offset: 576)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2233, file: !1446, line: 463, baseType: !641, size: 32, offset: 608)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2233, file: !1446, line: 464, baseType: !1512, size: 128, offset: 640)
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2233, file: !1446, line: 465, baseType: !1516, size: 160, offset: 768)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2233, file: !1446, line: 466, baseType: !1520, size: 160, offset: 928)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2233, file: !1446, line: 467, baseType: !570, size: 32, offset: 1088)
!2256 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2257, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2258, splitDebugInlining: false, nameTableKind: None)
!2257 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/gdbstub")
!2258 = !{!2259, !173, !102, !103}
!2259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2260, size: 32)
!2260 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2261, line: 98, size: 256, elements: !2262)
!2261 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2262 = !{!2263, !2268, !2273, !2278, !2283, !2288, !2293, !2298}
!2263 = !DIDerivedType(tag: DW_TAG_member, scope: !2260, file: !2261, line: 99, baseType: !2264, size: 32)
!2264 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2260, file: !2261, line: 99, size: 32, elements: !2265)
!2265 = !{!2266, !2267}
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2264, file: !2261, line: 99, baseType: !173, size: 32)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2264, file: !2261, line: 99, baseType: !173, size: 32)
!2268 = !DIDerivedType(tag: DW_TAG_member, scope: !2260, file: !2261, line: 100, baseType: !2269, size: 32, offset: 32)
!2269 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2260, file: !2261, line: 100, size: 32, elements: !2270)
!2270 = !{!2271, !2272}
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2269, file: !2261, line: 100, baseType: !173, size: 32)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2269, file: !2261, line: 100, baseType: !173, size: 32)
!2273 = !DIDerivedType(tag: DW_TAG_member, scope: !2260, file: !2261, line: 101, baseType: !2274, size: 32, offset: 64)
!2274 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2260, file: !2261, line: 101, size: 32, elements: !2275)
!2275 = !{!2276, !2277}
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2274, file: !2261, line: 101, baseType: !173, size: 32)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2274, file: !2261, line: 101, baseType: !173, size: 32)
!2278 = !DIDerivedType(tag: DW_TAG_member, scope: !2260, file: !2261, line: 102, baseType: !2279, size: 32, offset: 96)
!2279 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2260, file: !2261, line: 102, size: 32, elements: !2280)
!2280 = !{!2281, !2282}
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2279, file: !2261, line: 102, baseType: !173, size: 32)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2279, file: !2261, line: 102, baseType: !173, size: 32)
!2283 = !DIDerivedType(tag: DW_TAG_member, scope: !2260, file: !2261, line: 103, baseType: !2284, size: 32, offset: 128)
!2284 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2260, file: !2261, line: 103, size: 32, elements: !2285)
!2285 = !{!2286, !2287}
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2284, file: !2261, line: 103, baseType: !173, size: 32)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2284, file: !2261, line: 103, baseType: !173, size: 32)
!2288 = !DIDerivedType(tag: DW_TAG_member, scope: !2260, file: !2261, line: 104, baseType: !2289, size: 32, offset: 160)
!2289 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2260, file: !2261, line: 104, size: 32, elements: !2290)
!2290 = !{!2291, !2292}
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2289, file: !2261, line: 104, baseType: !173, size: 32)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2289, file: !2261, line: 104, baseType: !173, size: 32)
!2293 = !DIDerivedType(tag: DW_TAG_member, scope: !2260, file: !2261, line: 105, baseType: !2294, size: 32, offset: 192)
!2294 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2260, file: !2261, line: 105, size: 32, elements: !2295)
!2295 = !{!2296, !2297}
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2294, file: !2261, line: 105, baseType: !173, size: 32)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2294, file: !2261, line: 105, baseType: !173, size: 32)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2260, file: !2261, line: 106, baseType: !173, size: 32, offset: 224)
!2299 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2300, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2142, retainedTypes: !2301, splitDebugInlining: false, nameTableKind: None)
!2300 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/gdbstub")
!2301 = !{!2302, !102, !103, !2327, !2370, !173}
!2302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2303, size: 32)
!2303 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1446, line: 468, baseType: !2304)
!2304 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1446, line: 445, size: 1120, elements: !2305)
!2305 = !{!2306, !2307, !2308, !2309, !2310, !2311, !2312, !2313, !2314, !2315, !2316, !2317, !2318, !2319, !2320, !2321, !2322, !2323, !2324, !2325, !2326}
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2304, file: !1446, line: 447, baseType: !641, size: 32)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2304, file: !1446, line: 448, baseType: !570, size: 32, offset: 32)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2304, file: !1446, line: 449, baseType: !570, size: 32, offset: 64)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2304, file: !1446, line: 450, baseType: !570, size: 32, offset: 96)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2304, file: !1446, line: 451, baseType: !570, size: 32, offset: 128)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2304, file: !1446, line: 452, baseType: !570, size: 32, offset: 160)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2304, file: !1446, line: 453, baseType: !1497, size: 96, offset: 192)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2304, file: !1446, line: 454, baseType: !570, size: 32, offset: 288)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2304, file: !1446, line: 455, baseType: !570, size: 32, offset: 320)
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2304, file: !1446, line: 456, baseType: !570, size: 32, offset: 352)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2304, file: !1446, line: 457, baseType: !570, size: 32, offset: 384)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2304, file: !1446, line: 458, baseType: !570, size: 32, offset: 416)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2304, file: !1446, line: 459, baseType: !570, size: 32, offset: 448)
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2304, file: !1446, line: 460, baseType: !570, size: 32, offset: 480)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2304, file: !1446, line: 461, baseType: !1508, size: 64, offset: 512)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2304, file: !1446, line: 462, baseType: !641, size: 32, offset: 576)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2304, file: !1446, line: 463, baseType: !641, size: 32, offset: 608)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2304, file: !1446, line: 464, baseType: !1512, size: 128, offset: 640)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2304, file: !1446, line: 465, baseType: !1516, size: 160, offset: 768)
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2304, file: !1446, line: 466, baseType: !1520, size: 160, offset: 928)
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2304, file: !1446, line: 467, baseType: !570, size: 32, offset: 1088)
!2327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2328, size: 32)
!2328 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2261, line: 141, baseType: !2329)
!2329 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2261, line: 97, size: 256, elements: !2330)
!2330 = !{!2331}
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !2329, file: !2261, line: 107, baseType: !2332, size: 256)
!2332 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2261, line: 98, size: 256, elements: !2333)
!2333 = !{!2334, !2339, !2344, !2349, !2354, !2359, !2364, !2369}
!2334 = !DIDerivedType(tag: DW_TAG_member, scope: !2332, file: !2261, line: 99, baseType: !2335, size: 32)
!2335 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2332, file: !2261, line: 99, size: 32, elements: !2336)
!2336 = !{!2337, !2338}
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2335, file: !2261, line: 99, baseType: !173, size: 32)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2335, file: !2261, line: 99, baseType: !173, size: 32)
!2339 = !DIDerivedType(tag: DW_TAG_member, scope: !2332, file: !2261, line: 100, baseType: !2340, size: 32, offset: 32)
!2340 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2332, file: !2261, line: 100, size: 32, elements: !2341)
!2341 = !{!2342, !2343}
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2340, file: !2261, line: 100, baseType: !173, size: 32)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2340, file: !2261, line: 100, baseType: !173, size: 32)
!2344 = !DIDerivedType(tag: DW_TAG_member, scope: !2332, file: !2261, line: 101, baseType: !2345, size: 32, offset: 64)
!2345 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2332, file: !2261, line: 101, size: 32, elements: !2346)
!2346 = !{!2347, !2348}
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2345, file: !2261, line: 101, baseType: !173, size: 32)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2345, file: !2261, line: 101, baseType: !173, size: 32)
!2349 = !DIDerivedType(tag: DW_TAG_member, scope: !2332, file: !2261, line: 102, baseType: !2350, size: 32, offset: 96)
!2350 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2332, file: !2261, line: 102, size: 32, elements: !2351)
!2351 = !{!2352, !2353}
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2350, file: !2261, line: 102, baseType: !173, size: 32)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2350, file: !2261, line: 102, baseType: !173, size: 32)
!2354 = !DIDerivedType(tag: DW_TAG_member, scope: !2332, file: !2261, line: 103, baseType: !2355, size: 32, offset: 128)
!2355 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2332, file: !2261, line: 103, size: 32, elements: !2356)
!2356 = !{!2357, !2358}
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2355, file: !2261, line: 103, baseType: !173, size: 32)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2355, file: !2261, line: 103, baseType: !173, size: 32)
!2359 = !DIDerivedType(tag: DW_TAG_member, scope: !2332, file: !2261, line: 104, baseType: !2360, size: 32, offset: 160)
!2360 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2332, file: !2261, line: 104, size: 32, elements: !2361)
!2361 = !{!2362, !2363}
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2360, file: !2261, line: 104, baseType: !173, size: 32)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2360, file: !2261, line: 104, baseType: !173, size: 32)
!2364 = !DIDerivedType(tag: DW_TAG_member, scope: !2332, file: !2261, line: 105, baseType: !2365, size: 32, offset: 192)
!2365 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2332, file: !2261, line: 105, size: 32, elements: !2366)
!2366 = !{!2367, !2368}
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2365, file: !2261, line: 105, baseType: !173, size: 32)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2365, file: !2261, line: 105, baseType: !173, size: 32)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2332, file: !2261, line: 106, baseType: !173, size: 32, offset: 224)
!2370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !170, size: 32)
!2371 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2372, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !1300, retainedTypes: !2373, splitDebugInlining: false, nameTableKind: None)
!2372 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/gdbstub")
!2373 = !{!2155, !250, !156, !173, !2374, !2391}
!2374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2375, size: 32)
!2375 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !1446, line: 426, baseType: !2376)
!2376 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1446, line: 411, size: 28704, elements: !2377)
!2377 = !{!2378, !2379, !2380, !2381, !2382, !2383, !2384, !2385, !2386, !2387, !2388, !2389, !2390}
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2376, file: !1446, line: 413, baseType: !1458, size: 256)
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2376, file: !1446, line: 414, baseType: !1462, size: 768, offset: 256)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2376, file: !1446, line: 415, baseType: !1458, size: 256, offset: 1024)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2376, file: !1446, line: 416, baseType: !1462, size: 768, offset: 1280)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2376, file: !1446, line: 417, baseType: !1458, size: 256, offset: 2048)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2376, file: !1446, line: 418, baseType: !1462, size: 768, offset: 2304)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2376, file: !1446, line: 419, baseType: !1458, size: 256, offset: 3072)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2376, file: !1446, line: 420, baseType: !1462, size: 768, offset: 3328)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2376, file: !1446, line: 421, baseType: !1458, size: 256, offset: 4096)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2376, file: !1446, line: 422, baseType: !1473, size: 1792, offset: 4352)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2376, file: !1446, line: 423, baseType: !1477, size: 1920, offset: 6144)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2376, file: !1446, line: 424, baseType: !1482, size: 20608, offset: 8064)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2376, file: !1446, line: 425, baseType: !570, size: 32, offset: 28672)
!2391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2392, size: 32)
!2392 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1446, line: 468, baseType: !2393)
!2393 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1446, line: 445, size: 1120, elements: !2394)
!2394 = !{!2395, !2396, !2397, !2398, !2399, !2400, !2401, !2402, !2403, !2404, !2405, !2406, !2407, !2408, !2409, !2410, !2411, !2412, !2413, !2414, !2415}
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2393, file: !1446, line: 447, baseType: !641, size: 32)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2393, file: !1446, line: 448, baseType: !570, size: 32, offset: 32)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2393, file: !1446, line: 449, baseType: !570, size: 32, offset: 64)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2393, file: !1446, line: 450, baseType: !570, size: 32, offset: 96)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2393, file: !1446, line: 451, baseType: !570, size: 32, offset: 128)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2393, file: !1446, line: 452, baseType: !570, size: 32, offset: 160)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2393, file: !1446, line: 453, baseType: !1497, size: 96, offset: 192)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2393, file: !1446, line: 454, baseType: !570, size: 32, offset: 288)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2393, file: !1446, line: 455, baseType: !570, size: 32, offset: 320)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2393, file: !1446, line: 456, baseType: !570, size: 32, offset: 352)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2393, file: !1446, line: 457, baseType: !570, size: 32, offset: 384)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2393, file: !1446, line: 458, baseType: !570, size: 32, offset: 416)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2393, file: !1446, line: 459, baseType: !570, size: 32, offset: 448)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2393, file: !1446, line: 460, baseType: !570, size: 32, offset: 480)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2393, file: !1446, line: 461, baseType: !1508, size: 64, offset: 512)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2393, file: !1446, line: 462, baseType: !641, size: 32, offset: 576)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2393, file: !1446, line: 463, baseType: !641, size: 32, offset: 608)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2393, file: !1446, line: 464, baseType: !1512, size: 128, offset: 640)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2393, file: !1446, line: 465, baseType: !1516, size: 160, offset: 768)
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2393, file: !1446, line: 466, baseType: !1520, size: 160, offset: 928)
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2393, file: !1446, line: 467, baseType: !570, size: 32, offset: 1088)
!2416 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2417, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2418, splitDebugInlining: false, nameTableKind: None)
!2417 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/gdbstub")
!2418 = !{!2419, !102, !103}
!2419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2420, size: 32)
!2420 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1446, line: 468, baseType: !2421)
!2421 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1446, line: 445, size: 1120, elements: !2422)
!2422 = !{!2423, !2424, !2425, !2426, !2427, !2428, !2429, !2430, !2431, !2432, !2433, !2434, !2435, !2436, !2437, !2438, !2439, !2440, !2441, !2442, !2443}
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2421, file: !1446, line: 447, baseType: !641, size: 32)
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2421, file: !1446, line: 448, baseType: !570, size: 32, offset: 32)
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2421, file: !1446, line: 449, baseType: !570, size: 32, offset: 64)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2421, file: !1446, line: 450, baseType: !570, size: 32, offset: 96)
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2421, file: !1446, line: 451, baseType: !570, size: 32, offset: 128)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2421, file: !1446, line: 452, baseType: !570, size: 32, offset: 160)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2421, file: !1446, line: 453, baseType: !1497, size: 96, offset: 192)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2421, file: !1446, line: 454, baseType: !570, size: 32, offset: 288)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2421, file: !1446, line: 455, baseType: !570, size: 32, offset: 320)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2421, file: !1446, line: 456, baseType: !570, size: 32, offset: 352)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2421, file: !1446, line: 457, baseType: !570, size: 32, offset: 384)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2421, file: !1446, line: 458, baseType: !570, size: 32, offset: 416)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2421, file: !1446, line: 459, baseType: !570, size: 32, offset: 448)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2421, file: !1446, line: 460, baseType: !570, size: 32, offset: 480)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2421, file: !1446, line: 461, baseType: !1508, size: 64, offset: 512)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2421, file: !1446, line: 462, baseType: !641, size: 32, offset: 576)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2421, file: !1446, line: 463, baseType: !641, size: 32, offset: 608)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2421, file: !1446, line: 464, baseType: !1512, size: 128, offset: 640)
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2421, file: !1446, line: 465, baseType: !1516, size: 160, offset: 768)
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2421, file: !1446, line: 466, baseType: !1520, size: 160, offset: 928)
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2421, file: !1446, line: 467, baseType: !570, size: 32, offset: 1088)
!2444 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2445, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2446, splitDebugInlining: false, nameTableKind: None)
!2445 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/gdbstub")
!2446 = !{!237, !925, !217, !751, !2447, !22, !2449, !2452, !157, !2450, !102}
!2447 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2448, size: 32)
!2448 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !157)
!2449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2450, size: 32)
!2450 = !DIDerivedType(tag: DW_TAG_typedef, name: "mem_word_t", file: !2451, line: 57, baseType: !22)
!2451 = !DIFile(filename: "zephyr/lib/libc/minimal/include/sys/types.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2453, size: 32)
!2453 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2450)
!2454 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2455, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2455 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/gdbstub")
!2456 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2457, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2458, splitDebugInlining: false, nameTableKind: None)
!2457 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/nxp/imx/drivers/./ccm_imx7d.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/gdbstub")
!2458 = !{!690, !173}
!2459 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2460, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2461, retainedTypes: !2471, splitDebugInlining: false, nameTableKind: None)
!2460 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/nxp/imx/drivers/./ccm_analog_imx7d.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/gdbstub")
!2461 = !{!2462}
!2462 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_ccm_analog_pll_control", file: !2463, line: 62, baseType: !32, size: 32, elements: !2464)
!2463 = !DIFile(filename: "modules/hal/nxp/imx/drivers/./ccm_analog_imx7d.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2464 = !{!2465, !2466, !2467, !2468, !2469, !2470}
!2465 = !DIEnumerator(name: "ccmAnalogPllArmControl", value: 786528)
!2466 = !DIEnumerator(name: "ccmAnalogPllDdrControl", value: 1310832)
!2467 = !DIEnumerator(name: "ccmAnalogPll480Control", value: 786608)
!2468 = !DIEnumerator(name: "ccmAnalogPllEnetControl", value: 327904)
!2469 = !DIEnumerator(name: "ccmAnalogPllAudioControl", value: 786672)
!2470 = !DIEnumerator(name: "ccmAnalogPllVideoControl", value: 786736)
!2471 = !{!2472, !2535, !173, !743, !690}
!2472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2473, size: 32)
!2473 = !DIDerivedType(tag: DW_TAG_typedef, name: "CCM_ANALOG_Type", file: !566, line: 8619, baseType: !2474)
!2474 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !566, line: 8563, size: 3072, elements: !2475)
!2475 = !{!2476, !2480, !2481, !2482, !2483, !2484, !2485, !2486, !2487, !2488, !2489, !2491, !2492, !2493, !2494, !2495, !2496, !2497, !2498, !2499, !2500, !2501, !2502, !2503, !2504, !2505, !2506, !2507, !2508, !2509, !2510, !2511, !2512, !2513, !2514, !2515, !2516, !2517, !2518, !2519, !2520, !2521, !2522, !2523, !2524, !2525, !2526, !2527, !2528, !2529, !2530, !2531, !2532, !2533, !2534}
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !2474, file: !566, line: 8564, baseType: !2477, size: 768)
!2477 = !DICompositeType(tag: DW_TAG_array_type, baseType: !156, size: 768, elements: !2478)
!2478 = !{!2479}
!2479 = !DISubrange(count: 96)
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ARM", scope: !2474, file: !566, line: 8565, baseType: !570, size: 32, offset: 768)
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ARM_SET", scope: !2474, file: !566, line: 8566, baseType: !570, size: 32, offset: 800)
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ARM_CLR", scope: !2474, file: !566, line: 8567, baseType: !570, size: 32, offset: 832)
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ARM_TOG", scope: !2474, file: !566, line: 8568, baseType: !570, size: 32, offset: 864)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR", scope: !2474, file: !566, line: 8569, baseType: !570, size: 32, offset: 896)
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_SET", scope: !2474, file: !566, line: 8570, baseType: !570, size: 32, offset: 928)
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_CLR", scope: !2474, file: !566, line: 8571, baseType: !570, size: 32, offset: 960)
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_TOG", scope: !2474, file: !566, line: 8572, baseType: !570, size: 32, offset: 992)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_SS", scope: !2474, file: !566, line: 8573, baseType: !570, size: 32, offset: 1024)
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !2474, file: !566, line: 8574, baseType: !2490, size: 96, offset: 1056)
!2490 = !DICompositeType(tag: DW_TAG_array_type, baseType: !156, size: 96, elements: !1498)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_NUM", scope: !2474, file: !566, line: 8575, baseType: !570, size: 32, offset: 1152)
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_2", scope: !2474, file: !566, line: 8576, baseType: !2490, size: 96, offset: 1184)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_DENOM", scope: !2474, file: !566, line: 8577, baseType: !570, size: 32, offset: 1280)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_3", scope: !2474, file: !566, line: 8578, baseType: !2490, size: 96, offset: 1312)
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_480", scope: !2474, file: !566, line: 8579, baseType: !570, size: 32, offset: 1408)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_480_SET", scope: !2474, file: !566, line: 8580, baseType: !570, size: 32, offset: 1440)
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_480_CLR", scope: !2474, file: !566, line: 8581, baseType: !570, size: 32, offset: 1472)
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_480_TOG", scope: !2474, file: !566, line: 8582, baseType: !570, size: 32, offset: 1504)
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480A", scope: !2474, file: !566, line: 8583, baseType: !570, size: 32, offset: 1536)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480A_SET", scope: !2474, file: !566, line: 8584, baseType: !570, size: 32, offset: 1568)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480A_CLR", scope: !2474, file: !566, line: 8585, baseType: !570, size: 32, offset: 1600)
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480A_TOG", scope: !2474, file: !566, line: 8586, baseType: !570, size: 32, offset: 1632)
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480B", scope: !2474, file: !566, line: 8587, baseType: !570, size: 32, offset: 1664)
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480B_SET", scope: !2474, file: !566, line: 8588, baseType: !570, size: 32, offset: 1696)
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480B_CLR", scope: !2474, file: !566, line: 8589, baseType: !570, size: 32, offset: 1728)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480B_TOG", scope: !2474, file: !566, line: 8590, baseType: !570, size: 32, offset: 1760)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ENET", scope: !2474, file: !566, line: 8591, baseType: !570, size: 32, offset: 1792)
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ENET_SET", scope: !2474, file: !566, line: 8592, baseType: !570, size: 32, offset: 1824)
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ENET_CLR", scope: !2474, file: !566, line: 8593, baseType: !570, size: 32, offset: 1856)
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ENET_TOG", scope: !2474, file: !566, line: 8594, baseType: !570, size: 32, offset: 1888)
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO", scope: !2474, file: !566, line: 8595, baseType: !570, size: 32, offset: 1920)
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_SET", scope: !2474, file: !566, line: 8596, baseType: !570, size: 32, offset: 1952)
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_CLR", scope: !2474, file: !566, line: 8597, baseType: !570, size: 32, offset: 1984)
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_TOG", scope: !2474, file: !566, line: 8598, baseType: !570, size: 32, offset: 2016)
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_SS", scope: !2474, file: !566, line: 8599, baseType: !570, size: 32, offset: 2048)
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_4", scope: !2474, file: !566, line: 8600, baseType: !2490, size: 96, offset: 2080)
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_NUM", scope: !2474, file: !566, line: 8601, baseType: !570, size: 32, offset: 2176)
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_5", scope: !2474, file: !566, line: 8602, baseType: !2490, size: 96, offset: 2208)
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_DENOM", scope: !2474, file: !566, line: 8603, baseType: !570, size: 32, offset: 2304)
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_6", scope: !2474, file: !566, line: 8604, baseType: !2490, size: 96, offset: 2336)
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO", scope: !2474, file: !566, line: 8605, baseType: !570, size: 32, offset: 2432)
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_SET", scope: !2474, file: !566, line: 8606, baseType: !570, size: 32, offset: 2464)
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_CLR", scope: !2474, file: !566, line: 8607, baseType: !570, size: 32, offset: 2496)
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_TOG", scope: !2474, file: !566, line: 8608, baseType: !570, size: 32, offset: 2528)
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_SS", scope: !2474, file: !566, line: 8609, baseType: !570, size: 32, offset: 2560)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_7", scope: !2474, file: !566, line: 8610, baseType: !2490, size: 96, offset: 2592)
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_NUM", scope: !2474, file: !566, line: 8611, baseType: !570, size: 32, offset: 2688)
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_8", scope: !2474, file: !566, line: 8612, baseType: !2490, size: 96, offset: 2720)
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_DENOM", scope: !2474, file: !566, line: 8613, baseType: !570, size: 32, offset: 2816)
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_9", scope: !2474, file: !566, line: 8614, baseType: !2490, size: 96, offset: 2848)
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_MISC0", scope: !2474, file: !566, line: 8615, baseType: !570, size: 32, offset: 2944)
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_MISC0_SET", scope: !2474, file: !566, line: 8616, baseType: !570, size: 32, offset: 2976)
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_MISC0_CLR", scope: !2474, file: !566, line: 8617, baseType: !570, size: 32, offset: 3008)
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_MISC0_TOG", scope: !2474, file: !566, line: 8618, baseType: !570, size: 32, offset: 3040)
!2535 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!2536 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2537, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2538, splitDebugInlining: false, nameTableKind: None)
!2537 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/nxp/imx/drivers/./gpio_imx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/gdbstub")
!2538 = !{!2539, !2543, !838}
!2539 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_gpio_pin_direction", file: !839, line: 49, baseType: !32, size: 32, elements: !2540)
!2540 = !{!2541, !2542}
!2541 = !DIEnumerator(name: "gpioDigitalInput", value: 0)
!2542 = !DIEnumerator(name: "gpioDigitalOutput", value: 1)
!2543 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_gpio_interrupt_mode", file: !839, line: 56, baseType: !32, size: 32, elements: !2544)
!2544 = !{!2545, !2546, !2547, !2548, !2549}
!2545 = !DIEnumerator(name: "gpioIntLowLevel", value: 0)
!2546 = !DIEnumerator(name: "gpioIntHighLevel", value: 1)
!2547 = !DIEnumerator(name: "gpioIntRisingEdge", value: 2)
!2548 = !DIEnumerator(name: "gpioIntFallingEdge", value: 3)
!2549 = !DIEnumerator(name: "gpioNoIntmode", value: 4)
!2550 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2551, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2552, retainedTypes: !2561, splitDebugInlining: false, nameTableKind: None)
!2551 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/nxp/imx/drivers/./uart_imx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/gdbstub")
!2552 = !{!2553, !2557}
!2553 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_uart_modem_mode", file: !1023, line: 179, baseType: !32, size: 32, elements: !2554)
!2554 = !{!2555, !2556}
!2555 = !DIEnumerator(name: "uartModemModeDce", value: 0)
!2556 = !DIEnumerator(name: "uartModemModeDte", value: 64)
!2557 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_uart_irda_vote_clock", file: !1023, line: 194, baseType: !32, size: 32, elements: !2558)
!2558 = !{!2559, !2560}
!2559 = !DIEnumerator(name: "uartIrdaVoteClockSampling", value: 0)
!2560 = !DIEnumerator(name: "uartIrdaVoteClockReference", value: 32)
!2561 = !{!173, !1251}
!2562 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2563, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2564, retainedTypes: !2575, splitDebugInlining: false, nameTableKind: None)
!2563 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/nxp/imx/devices/MCIMX7D/./clock_freq.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/gdbstub")
!2564 = !{!281, !2565}
!2565 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_ccm_analog_pfd_frac", file: !2463, line: 128, baseType: !32, size: 32, elements: !2566)
!2566 = !{!2567, !2568, !2569, !2570, !2571, !2572, !2573, !2574}
!2567 = !DIEnumerator(name: "ccmAnalogPfd0Frac", value: 192)
!2568 = !DIEnumerator(name: "ccmAnalogPfd1Frac", value: 524480)
!2569 = !DIEnumerator(name: "ccmAnalogPfd2Frac", value: 1048768)
!2570 = !DIEnumerator(name: "ccmAnalogPfd3Frac", value: 1573056)
!2571 = !DIEnumerator(name: "ccmAnalogPfd4Frac", value: 208)
!2572 = !DIEnumerator(name: "ccmAnalogPfd5Frac", value: 524496)
!2573 = !DIEnumerator(name: "ccmAnalogPfd6Frac", value: 1048784)
!2574 = !DIEnumerator(name: "ccmAnalogPfd7Frac", value: 1573072)
!2575 = !{!173, !2576, !2628, !690}
!2576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2577, size: 32)
!2577 = !DIDerivedType(tag: DW_TAG_typedef, name: "CCM_Type", file: !566, line: 4575, baseType: !2578)
!2578 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !566, line: 4532, size: 390144, elements: !2579)
!2579 = !{!2580, !2581, !2582, !2583, !2584, !2585, !2593, !2594, !2602, !2603}
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0", scope: !2578, file: !566, line: 4533, baseType: !570, size: 32)
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0_SET", scope: !2578, file: !566, line: 4534, baseType: !570, size: 32, offset: 32)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0_CLR", scope: !2578, file: !566, line: 4535, baseType: !570, size: 32, offset: 64)
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0_TOG", scope: !2578, file: !566, line: 4536, baseType: !570, size: 32, offset: 96)
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !2578, file: !566, line: 4537, baseType: !575, size: 16256, offset: 128)
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL", scope: !2578, file: !566, line: 4543, baseType: !2586, size: 4224, offset: 16384)
!2586 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2587, size: 4224, elements: !586)
!2587 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2578, file: !566, line: 4538, size: 128, elements: !2588)
!2588 = !{!2589, !2590, !2591, !2592}
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL", scope: !2587, file: !566, line: 4539, baseType: !570, size: 32)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL_SET", scope: !2587, file: !566, line: 4540, baseType: !570, size: 32, offset: 32)
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL_CLR", scope: !2587, file: !566, line: 4541, baseType: !570, size: 32, offset: 64)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL_TOG", scope: !2587, file: !566, line: 4542, baseType: !570, size: 32, offset: 96)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !2578, file: !566, line: 4544, baseType: !589, size: 110464, offset: 20608)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR", scope: !2578, file: !566, line: 4550, baseType: !2595, size: 24448, offset: 131072)
!2595 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2596, size: 24448, elements: !600)
!2596 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2578, file: !566, line: 4545, size: 128, elements: !2597)
!2597 = !{!2598, !2599, !2600, !2601}
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR", scope: !2596, file: !566, line: 4546, baseType: !570, size: 32)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR_SET", scope: !2596, file: !566, line: 4547, baseType: !570, size: 32, offset: 32)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR_CLR", scope: !2596, file: !566, line: 4548, baseType: !570, size: 32, offset: 64)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR_TOG", scope: !2596, file: !566, line: 4549, baseType: !570, size: 32, offset: 96)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_2", scope: !2578, file: !566, line: 4551, baseType: !603, size: 106624, offset: 155520)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_TOG", scope: !2578, file: !566, line: 4574, baseType: !2604, size: 128000, offset: 262144)
!2604 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2605, size: 128000, elements: !634)
!2605 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2578, file: !566, line: 4552, size: 1024, elements: !2606)
!2606 = !{!2607, !2608, !2609, !2610, !2611, !2612, !2613, !2614, !2615, !2616, !2617, !2618, !2619, !2620, !2621, !2622, !2623, !2624, !2625, !2626, !2627}
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT", scope: !2605, file: !566, line: 4553, baseType: !570, size: 32)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT_SET", scope: !2605, file: !566, line: 4554, baseType: !570, size: 32, offset: 32)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT_CLR", scope: !2605, file: !566, line: 4555, baseType: !570, size: 32, offset: 64)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT_TOG", scope: !2605, file: !566, line: 4556, baseType: !570, size: 32, offset: 96)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "MISC", scope: !2605, file: !566, line: 4557, baseType: !570, size: 32, offset: 128)
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "MISC_ROOT_SET", scope: !2605, file: !566, line: 4558, baseType: !570, size: 32, offset: 160)
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "MISC_ROOT_CLR", scope: !2605, file: !566, line: 4559, baseType: !570, size: 32, offset: 192)
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "MISC_ROOT_TOG", scope: !2605, file: !566, line: 4560, baseType: !570, size: 32, offset: 224)
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "POST", scope: !2605, file: !566, line: 4561, baseType: !570, size: 32, offset: 256)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "POST_ROOT_SET", scope: !2605, file: !566, line: 4562, baseType: !570, size: 32, offset: 288)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "POST_ROOT_CLR", scope: !2605, file: !566, line: 4563, baseType: !570, size: 32, offset: 320)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "POST_ROOT_TOG", scope: !2605, file: !566, line: 4564, baseType: !570, size: 32, offset: 352)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "PRE", scope: !2605, file: !566, line: 4565, baseType: !570, size: 32, offset: 384)
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "PRE_ROOT_SET", scope: !2605, file: !566, line: 4566, baseType: !570, size: 32, offset: 416)
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "PRE_ROOT_CLR", scope: !2605, file: !566, line: 4567, baseType: !570, size: 32, offset: 448)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "PRE_ROOT_TOG", scope: !2605, file: !566, line: 4568, baseType: !570, size: 32, offset: 480)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !2605, file: !566, line: 4569, baseType: !627, size: 384, offset: 512)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL", scope: !2605, file: !566, line: 4570, baseType: !570, size: 32, offset: 896)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_SET", scope: !2605, file: !566, line: 4571, baseType: !570, size: 32, offset: 928)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_CLR", scope: !2605, file: !566, line: 4572, baseType: !570, size: 32, offset: 960)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_TOG", scope: !2605, file: !566, line: 4573, baseType: !570, size: 32, offset: 992)
!2628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2629, size: 32)
!2629 = !DIDerivedType(tag: DW_TAG_typedef, name: "CCM_ANALOG_Type", file: !566, line: 8619, baseType: !2630)
!2630 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !566, line: 8563, size: 3072, elements: !2631)
!2631 = !{!2632, !2633, !2634, !2635, !2636, !2637, !2638, !2639, !2640, !2641, !2642, !2643, !2644, !2645, !2646, !2647, !2648, !2649, !2650, !2651, !2652, !2653, !2654, !2655, !2656, !2657, !2658, !2659, !2660, !2661, !2662, !2663, !2664, !2665, !2666, !2667, !2668, !2669, !2670, !2671, !2672, !2673, !2674, !2675, !2676, !2677, !2678, !2679, !2680, !2681, !2682, !2683, !2684, !2685, !2686}
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !2630, file: !566, line: 8564, baseType: !2477, size: 768)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ARM", scope: !2630, file: !566, line: 8565, baseType: !570, size: 32, offset: 768)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ARM_SET", scope: !2630, file: !566, line: 8566, baseType: !570, size: 32, offset: 800)
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ARM_CLR", scope: !2630, file: !566, line: 8567, baseType: !570, size: 32, offset: 832)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ARM_TOG", scope: !2630, file: !566, line: 8568, baseType: !570, size: 32, offset: 864)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR", scope: !2630, file: !566, line: 8569, baseType: !570, size: 32, offset: 896)
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_SET", scope: !2630, file: !566, line: 8570, baseType: !570, size: 32, offset: 928)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_CLR", scope: !2630, file: !566, line: 8571, baseType: !570, size: 32, offset: 960)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_TOG", scope: !2630, file: !566, line: 8572, baseType: !570, size: 32, offset: 992)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_SS", scope: !2630, file: !566, line: 8573, baseType: !570, size: 32, offset: 1024)
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !2630, file: !566, line: 8574, baseType: !2490, size: 96, offset: 1056)
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_NUM", scope: !2630, file: !566, line: 8575, baseType: !570, size: 32, offset: 1152)
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_2", scope: !2630, file: !566, line: 8576, baseType: !2490, size: 96, offset: 1184)
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_DENOM", scope: !2630, file: !566, line: 8577, baseType: !570, size: 32, offset: 1280)
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_3", scope: !2630, file: !566, line: 8578, baseType: !2490, size: 96, offset: 1312)
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_480", scope: !2630, file: !566, line: 8579, baseType: !570, size: 32, offset: 1408)
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_480_SET", scope: !2630, file: !566, line: 8580, baseType: !570, size: 32, offset: 1440)
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_480_CLR", scope: !2630, file: !566, line: 8581, baseType: !570, size: 32, offset: 1472)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_480_TOG", scope: !2630, file: !566, line: 8582, baseType: !570, size: 32, offset: 1504)
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480A", scope: !2630, file: !566, line: 8583, baseType: !570, size: 32, offset: 1536)
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480A_SET", scope: !2630, file: !566, line: 8584, baseType: !570, size: 32, offset: 1568)
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480A_CLR", scope: !2630, file: !566, line: 8585, baseType: !570, size: 32, offset: 1600)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480A_TOG", scope: !2630, file: !566, line: 8586, baseType: !570, size: 32, offset: 1632)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480B", scope: !2630, file: !566, line: 8587, baseType: !570, size: 32, offset: 1664)
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480B_SET", scope: !2630, file: !566, line: 8588, baseType: !570, size: 32, offset: 1696)
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480B_CLR", scope: !2630, file: !566, line: 8589, baseType: !570, size: 32, offset: 1728)
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480B_TOG", scope: !2630, file: !566, line: 8590, baseType: !570, size: 32, offset: 1760)
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ENET", scope: !2630, file: !566, line: 8591, baseType: !570, size: 32, offset: 1792)
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ENET_SET", scope: !2630, file: !566, line: 8592, baseType: !570, size: 32, offset: 1824)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ENET_CLR", scope: !2630, file: !566, line: 8593, baseType: !570, size: 32, offset: 1856)
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ENET_TOG", scope: !2630, file: !566, line: 8594, baseType: !570, size: 32, offset: 1888)
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO", scope: !2630, file: !566, line: 8595, baseType: !570, size: 32, offset: 1920)
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_SET", scope: !2630, file: !566, line: 8596, baseType: !570, size: 32, offset: 1952)
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_CLR", scope: !2630, file: !566, line: 8597, baseType: !570, size: 32, offset: 1984)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_TOG", scope: !2630, file: !566, line: 8598, baseType: !570, size: 32, offset: 2016)
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_SS", scope: !2630, file: !566, line: 8599, baseType: !570, size: 32, offset: 2048)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_4", scope: !2630, file: !566, line: 8600, baseType: !2490, size: 96, offset: 2080)
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_NUM", scope: !2630, file: !566, line: 8601, baseType: !570, size: 32, offset: 2176)
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_5", scope: !2630, file: !566, line: 8602, baseType: !2490, size: 96, offset: 2208)
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_DENOM", scope: !2630, file: !566, line: 8603, baseType: !570, size: 32, offset: 2304)
!2672 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_6", scope: !2630, file: !566, line: 8604, baseType: !2490, size: 96, offset: 2336)
!2673 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO", scope: !2630, file: !566, line: 8605, baseType: !570, size: 32, offset: 2432)
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_SET", scope: !2630, file: !566, line: 8606, baseType: !570, size: 32, offset: 2464)
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_CLR", scope: !2630, file: !566, line: 8607, baseType: !570, size: 32, offset: 2496)
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_TOG", scope: !2630, file: !566, line: 8608, baseType: !570, size: 32, offset: 2528)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_SS", scope: !2630, file: !566, line: 8609, baseType: !570, size: 32, offset: 2560)
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_7", scope: !2630, file: !566, line: 8610, baseType: !2490, size: 96, offset: 2592)
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_NUM", scope: !2630, file: !566, line: 8611, baseType: !570, size: 32, offset: 2688)
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_8", scope: !2630, file: !566, line: 8612, baseType: !2490, size: 96, offset: 2720)
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_DENOM", scope: !2630, file: !566, line: 8613, baseType: !570, size: 32, offset: 2816)
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_9", scope: !2630, file: !566, line: 8614, baseType: !2490, size: 96, offset: 2848)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_MISC0", scope: !2630, file: !566, line: 8615, baseType: !570, size: 32, offset: 2944)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_MISC0_SET", scope: !2630, file: !566, line: 8616, baseType: !570, size: 32, offset: 2976)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_MISC0_CLR", scope: !2630, file: !566, line: 8617, baseType: !570, size: 32, offset: 3008)
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_MISC0_TOG", scope: !2630, file: !566, line: 8618, baseType: !570, size: 32, offset: 3040)
!2687 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2688, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2689, splitDebugInlining: false, nameTableKind: None)
!2688 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/gdbstub")
!2689 = !{!102, !217}
!2690 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2691, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2692, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2691 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/gdbstub")
!2692 = !{!2693, !2700, !30}
!2693 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_query_id", file: !2694, line: 14, baseType: !32, size: 32, elements: !2695)
!2694 = !DIFile(filename: "zephyr/include/zephyr/debug/coredump.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2695 = !{!2696, !2697, !2698, !2699}
!2696 = !DIEnumerator(name: "COREDUMP_QUERY_GET_ERROR", value: 0)
!2697 = !DIEnumerator(name: "COREDUMP_QUERY_HAS_STORED_DUMP", value: 1)
!2698 = !DIEnumerator(name: "COREDUMP_QUERY_GET_STORED_DUMP_SIZE", value: 2)
!2699 = !DIEnumerator(name: "COREDUMP_QUERY_MAX", value: 3)
!2700 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_cmd_id", file: !2694, line: 42, baseType: !32, size: 32, elements: !2701)
!2701 = !{!2702, !2703, !2704, !2705, !2706, !2707}
!2702 = !DIEnumerator(name: "COREDUMP_CMD_CLEAR_ERROR", value: 0)
!2703 = !DIEnumerator(name: "COREDUMP_CMD_VERIFY_STORED_DUMP", value: 1)
!2704 = !DIEnumerator(name: "COREDUMP_CMD_ERASE_STORED_DUMP", value: 2)
!2705 = !DIEnumerator(name: "COREDUMP_CMD_COPY_STORED_DUMP", value: 3)
!2706 = !DIEnumerator(name: "COREDUMP_CMD_INVALIDATE_STORED_DUMP", value: 4)
!2707 = !DIEnumerator(name: "COREDUMP_CMD_MAX", value: 5)
!2708 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2709, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2709 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/gdbstub")
!2710 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2711, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2712, splitDebugInlining: false, nameTableKind: None)
!2711 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/gdbstub")
!2712 = !{!22, !102, !103}
!2713 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2714, producer: "Ubuntu clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2714 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/gdbstub")
!2715 = !{!"Ubuntu clang version 14.0.6"}
!2716 = !{i32 7, !"Dwarf Version", i32 4}
!2717 = !{i32 2, !"Debug Info Version", i32 3}
!2718 = !{i32 1, !"wchar_size", i32 4}
!2719 = !{i32 1, !"min_enum_size", i32 4}
!2720 = !{i32 1, !"branch-target-enforcement", i32 0}
!2721 = !{i32 1, !"sign-return-address", i32 0}
!2722 = !{i32 1, !"sign-return-address-all", i32 0}
!2723 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!2724 = !{i32 7, !"frame-pointer", i32 2}
!2725 = distinct !DISubprogram(name: "_OffsetAbsSyms", scope: !2726, file: !2726, line: 26, type: !253, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2096, retainedNodes: !223)
!2726 = !DIFile(filename: "zephyr/kernel/include/kernel_offsets.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2727 = !DILocation(line: 28, column: 1, scope: !2725)
!2728 = !{i64 2155071221, i64 2155071241, i64 2155071304}
!2729 = !DILocation(line: 29, column: 1, scope: !2725)
!2730 = !{i64 2155071636, i64 2155071656, i64 2155071719}
!2731 = !DILocation(line: 30, column: 1, scope: !2725)
!2732 = !{i64 2155072055, i64 2155072075, i64 2155072138}
!2733 = !DILocation(line: 31, column: 1, scope: !2725)
!2734 = !{i64 2155072474, i64 2155072494, i64 2155072557}
!2735 = !DILocation(line: 33, column: 1, scope: !2725)
!2736 = !{i64 2155072766, i64 2155072786, i64 2155072849}
!2737 = !DILocation(line: 35, column: 1, scope: !2725)
!2738 = !{i64 2155073091, i64 2155073111, i64 2155073174}
!2739 = !DILocation(line: 50, column: 1, scope: !2725)
!2740 = !{i64 2155073518, i64 2155073538, i64 2155073601}
!2741 = !DILocation(line: 54, column: 1, scope: !2725)
!2742 = !{i64 2155073957, i64 2155073977, i64 2155074040}
!2743 = !DILocation(line: 61, column: 1, scope: !2725)
!2744 = !{i64 2155074274, i64 2155074294, i64 2155074357}
!2745 = !DILocation(line: 63, column: 1, scope: !2725)
!2746 = !{i64 2155074654, i64 2155074674, i64 2155074737}
!2747 = !DILocation(line: 64, column: 1, scope: !2725)
!2748 = !{i64 2155079237, i64 2155079257, i64 2155079320}
!2749 = !DILocation(line: 65, column: 1, scope: !2725)
!2750 = !{i64 2155079735, i64 2155079755, i64 2155079818}
!2751 = !DILocation(line: 66, column: 1, scope: !2725)
!2752 = !{i64 2155080217, i64 2155080237, i64 2155080300}
!2753 = !DILocation(line: 67, column: 1, scope: !2725)
!2754 = !{i64 2155080724, i64 2155080744, i64 2155080807}
!2755 = !DILocation(line: 68, column: 1, scope: !2725)
!2756 = !{i64 2155081212, i64 2155081232, i64 2155081295}
!2757 = !DILocation(line: 70, column: 1, scope: !2725)
!2758 = !{i64 2155081680, i64 2155081700, i64 2155081763}
!2759 = !DILocation(line: 71, column: 1, scope: !2725)
!2760 = !{i64 2155082122, i64 2155082142, i64 2155082205}
!2761 = !DILocation(line: 72, column: 1, scope: !2725)
!2762 = !{i64 2155082580, i64 2155082600, i64 2155082663}
!2763 = !DILocation(line: 97, column: 1, scope: !2725)
!2764 = !{i64 2155082887, i64 2155082907, i64 2155082970}
!2765 = !DILocation(line: 99, column: 1, scope: !2725)
!2766 = !{i64 2155083105, i64 2155083125, i64 2155083188}
!2767 = !DILocation(line: 102, column: 1, scope: !2725)
!2768 = !{i64 2155083362, i64 2155083382, i64 2155083445}
!2769 = !DILocation(line: 105, column: 1, scope: !2725)
!2770 = !{i64 2155083602, i64 2155083622, i64 2155083685}
!2771 = !DILocation(line: 115, column: 1, scope: !2725)
!2772 = !{i64 2155083941, i64 2155083961, i64 2155084024}
!2773 = !DILocation(line: 118, column: 1, scope: !2725)
!2774 = !{i64 2155084285, i64 2155084305, i64 2155084368}
!2775 = !DILocation(line: 32, column: 1, scope: !2776)
!2776 = !DILexicalBlockFile(scope: !2725, file: !2777, discriminator: 0)
!2777 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets_aarch32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2778 = !{i64 2155084641, i64 2155084661, i64 2155084724}
!2779 = !DILocation(line: 33, column: 1, scope: !2776)
!2780 = !{i64 2155085153, i64 2155085173, i64 2155085236}
!2781 = !DILocation(line: 53, column: 1, scope: !2776)
!2782 = !{i64 2155085661, i64 2155085681, i64 2155085744}
!2783 = !DILocation(line: 54, column: 1, scope: !2776)
!2784 = !{i64 2155086079, i64 2155086099, i64 2155086162}
!2785 = !DILocation(line: 55, column: 1, scope: !2776)
!2786 = !{i64 2155086497, i64 2155086517, i64 2155086580}
!2787 = !DILocation(line: 56, column: 1, scope: !2776)
!2788 = !{i64 2155086915, i64 2155086935, i64 2155086998}
!2789 = !DILocation(line: 57, column: 1, scope: !2776)
!2790 = !{i64 2155087333, i64 2155087353, i64 2155087416}
!2791 = !DILocation(line: 58, column: 1, scope: !2776)
!2792 = !{i64 2155087751, i64 2155087771, i64 2155087834}
!2793 = !DILocation(line: 59, column: 1, scope: !2776)
!2794 = !{i64 2155088169, i64 2155088189, i64 2155088252}
!2795 = !DILocation(line: 60, column: 1, scope: !2776)
!2796 = !{i64 2155088593, i64 2155088613, i64 2155088676}
!2797 = !DILocation(line: 61, column: 1, scope: !2776)
!2798 = !{i64 2155092971, i64 2155092991, i64 2155093054}
!2799 = !DILocation(line: 70, column: 1, scope: !2776)
!2800 = !{i64 2155093200, i64 2155093220, i64 2155093283}
!2801 = !DILocation(line: 72, column: 1, scope: !2776)
!2802 = !{i64 2155093532, i64 2155093552, i64 2155093615}
!2803 = !DILocation(line: 73, column: 1, scope: !2776)
!2804 = !{i64 2155093982, i64 2155094002, i64 2155094065}
!2805 = !DILocation(line: 74, column: 1, scope: !2776)
!2806 = !{i64 2155094432, i64 2155094452, i64 2155094515}
!2807 = !DILocation(line: 75, column: 1, scope: !2776)
!2808 = !{i64 2155094882, i64 2155094902, i64 2155094965}
!2809 = !DILocation(line: 76, column: 1, scope: !2776)
!2810 = !{i64 2155095332, i64 2155095352, i64 2155095415}
!2811 = !DILocation(line: 77, column: 1, scope: !2776)
!2812 = !{i64 2155095782, i64 2155095802, i64 2155095865}
!2813 = !DILocation(line: 78, column: 1, scope: !2776)
!2814 = !{i64 2155096232, i64 2155096252, i64 2155096315}
!2815 = !DILocation(line: 79, column: 1, scope: !2776)
!2816 = !{i64 2155096682, i64 2155096702, i64 2155096765}
!2817 = !DILocation(line: 80, column: 1, scope: !2776)
!2818 = !{i64 2155097135, i64 2155097155, i64 2155097218}
!2819 = !DILocation(line: 84, column: 1, scope: !2776)
!2820 = !{i64 2155097467, i64 2155097487, i64 2155097550}
!2821 = !DILocation(line: 106, column: 1, scope: !2776)
!2822 = !{i64 2155097717, i64 2155097737, i64 2155097800}
!2823 = !DILocation(line: 11, column: 1, scope: !2824)
!2824 = !DILexicalBlockFile(scope: !2725, file: !2825, discriminator: 0)
!2825 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2826 = distinct !DISubprogram(name: "thread_entry", scope: !107, file: !107, line: 23, type: !242, scopeLine: 24, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !27, retainedNodes: !223)
!2827 = !DILocalVariable(name: "p1", arg: 1, scope: !2826, file: !107, line: 23, type: !102)
!2828 = !DILocation(line: 23, column: 32, scope: !2826)
!2829 = !DILocalVariable(name: "p2", arg: 2, scope: !2826, file: !107, line: 23, type: !102)
!2830 = !DILocation(line: 23, column: 42, scope: !2826)
!2831 = !DILocalVariable(name: "p3", arg: 3, scope: !2826, file: !107, line: 23, type: !102)
!2832 = !DILocation(line: 23, column: 52, scope: !2826)
!2833 = !DILocation(line: 25, column: 2, scope: !2826)
!2834 = !DILocation(line: 26, column: 1, scope: !2826)
!2835 = distinct !DISubprogram(name: "main", scope: !107, file: !107, line: 28, type: !253, scopeLine: 29, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !27, retainedNodes: !223)
!2836 = !DILocalVariable(name: "ret", scope: !2835, file: !107, line: 30, type: !103)
!2837 = !DILocation(line: 30, column: 6, scope: !2835)
!2838 = !DILocation(line: 32, column: 8, scope: !2835)
!2839 = !DILocation(line: 32, column: 6, scope: !2835)
!2840 = !DILocation(line: 33, column: 17, scope: !2835)
!2841 = !DILocation(line: 33, column: 2, scope: !2835)
!2842 = !DILocation(line: 34, column: 1, scope: !2835)
!2843 = distinct !DISubprogram(name: "test", scope: !107, file: !107, line: 12, type: !2844, scopeLine: 13, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !27, retainedNodes: !223)
!2844 = !DISubroutineType(types: !2845)
!2845 = !{!103}
!2846 = !DILocalVariable(name: "a", scope: !2843, file: !107, line: 14, type: !103)
!2847 = !DILocation(line: 14, column: 6, scope: !2843)
!2848 = !DILocalVariable(name: "b", scope: !2843, file: !107, line: 15, type: !103)
!2849 = !DILocation(line: 15, column: 6, scope: !2843)
!2850 = !DILocation(line: 17, column: 4, scope: !2843)
!2851 = !DILocation(line: 18, column: 6, scope: !2843)
!2852 = !DILocation(line: 18, column: 8, scope: !2843)
!2853 = !DILocation(line: 18, column: 4, scope: !2843)
!2854 = !DILocation(line: 20, column: 9, scope: !2843)
!2855 = !DILocation(line: 20, column: 13, scope: !2843)
!2856 = !DILocation(line: 20, column: 11, scope: !2843)
!2857 = !DILocation(line: 20, column: 2, scope: !2843)
!2858 = distinct !DISubprogram(name: "arch_printk_char_out", scope: !272, file: !272, line: 45, type: !274, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !269, retainedNodes: !223)
!2859 = !DILocalVariable(name: "c", arg: 1, scope: !2858, file: !272, line: 45, type: !103)
!2860 = !DILocation(line: 45, column: 52, scope: !2858)
!2861 = !DILocation(line: 47, column: 2, scope: !2858)
!2862 = !DILocation(line: 50, column: 2, scope: !2858)
!2863 = distinct !DISubprogram(name: "__printk_hook_install", scope: !272, file: !272, line: 63, type: !2864, scopeLine: 64, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !269, retainedNodes: !223)
!2864 = !DISubroutineType(types: !2865)
!2865 = !{null, !273}
!2866 = !DILocalVariable(name: "fn", arg: 1, scope: !2863, file: !272, line: 63, type: !273)
!2867 = !DILocation(line: 63, column: 34, scope: !2863)
!2868 = !DILocation(line: 65, column: 14, scope: !2863)
!2869 = !DILocation(line: 65, column: 12, scope: !2863)
!2870 = !DILocation(line: 66, column: 1, scope: !2863)
!2871 = distinct !DISubprogram(name: "__printk_get_hook", scope: !272, file: !272, line: 76, type: !2872, scopeLine: 77, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !269, retainedNodes: !223)
!2872 = !DISubroutineType(types: !2873)
!2873 = !{!102}
!2874 = !DILocation(line: 78, column: 9, scope: !2871)
!2875 = !DILocation(line: 78, column: 2, scope: !2871)
!2876 = distinct !DISubprogram(name: "vprintk", scope: !272, file: !272, line: 113, type: !2877, scopeLine: 114, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !269, retainedNodes: !223)
!2877 = !DISubroutineType(types: !2878)
!2878 = !{null, !256, !2879}
!2879 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !2880, line: 99, baseType: !2881)
!2880 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stdarg.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2881 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !2880, line: 40, baseType: !2882)
!2882 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !272, baseType: !2883)
!2883 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !2884)
!2884 = !{!2885}
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !2883, file: !272, line: 79, baseType: !102, size: 32)
!2886 = !DILocalVariable(name: "fmt", arg: 1, scope: !2876, file: !272, line: 113, type: !256)
!2887 = !DILocation(line: 113, column: 26, scope: !2876)
!2888 = !DILocalVariable(name: "ap", arg: 2, scope: !2876, file: !272, line: 113, type: !2879)
!2889 = !DILocation(line: 113, column: 39, scope: !2876)
!2890 = !DILocation(line: 120, column: 6, scope: !2891)
!2891 = distinct !DILexicalBlock(scope: !2876, file: !272, line: 120, column: 6)
!2892 = !DILocation(line: 120, column: 6, scope: !2876)
!2893 = !DILocalVariable(name: "ctx", scope: !2894, file: !272, line: 121, type: !2895)
!2894 = distinct !DILexicalBlock(scope: !2891, file: !272, line: 120, column: 27)
!2895 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "buf_out_context", file: !272, line: 81, size: 32, elements: !2896)
!2896 = !{!2897, !2898}
!2897 = !DIDerivedType(tag: DW_TAG_member, name: "buf_count", scope: !2895, file: !272, line: 85, baseType: !32, size: 32)
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !2895, file: !272, line: 86, baseType: !2899, offset: 32)
!2899 = !DICompositeType(tag: DW_TAG_array_type, baseType: !237, elements: !2900)
!2900 = !{!2901}
!2901 = !DISubrange(count: 0)
!2902 = !DILocation(line: 121, column: 26, scope: !2894)
!2903 = !DILocation(line: 133, column: 27, scope: !2894)
!2904 = !DILocation(line: 133, column: 33, scope: !2894)
!2905 = !DILocation(line: 133, column: 3, scope: !2894)
!2906 = !DILocation(line: 135, column: 11, scope: !2907)
!2907 = distinct !DILexicalBlock(scope: !2894, file: !272, line: 135, column: 7)
!2908 = !DILocation(line: 135, column: 7, scope: !2907)
!2909 = !DILocation(line: 135, column: 7, scope: !2894)
!2910 = !DILocation(line: 136, column: 4, scope: !2911)
!2911 = distinct !DILexicalBlock(scope: !2907, file: !272, line: 135, column: 22)
!2912 = !DILocation(line: 137, column: 3, scope: !2911)
!2913 = !DILocation(line: 138, column: 2, scope: !2894)
!2914 = !DILocation(line: 148, column: 29, scope: !2915)
!2915 = distinct !DILexicalBlock(scope: !2891, file: !272, line: 138, column: 9)
!2916 = !DILocation(line: 148, column: 3, scope: !2915)
!2917 = !DILocation(line: 155, column: 1, scope: !2876)
!2918 = distinct !DISubprogram(name: "k_is_user_context", scope: !2919, file: !2919, line: 115, type: !2920, scopeLine: 116, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !269, retainedNodes: !223)
!2919 = !DIFile(filename: "zephyr/include/zephyr/syscall.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2920 = !DISubroutineType(types: !2921)
!2921 = !{!743}
!2922 = !DILocation(line: 120, column: 2, scope: !2918)
!2923 = distinct !DISubprogram(name: "buf_char_out", scope: !272, file: !272, line: 95, type: !2924, scopeLine: 96, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !269, retainedNodes: !223)
!2924 = !DISubroutineType(types: !2925)
!2925 = !{!103, !103, !102}
!2926 = !DILocalVariable(name: "c", arg: 1, scope: !2923, file: !272, line: 95, type: !103)
!2927 = !DILocation(line: 95, column: 29, scope: !2923)
!2928 = !DILocalVariable(name: "ctx_p", arg: 2, scope: !2923, file: !272, line: 95, type: !102)
!2929 = !DILocation(line: 95, column: 38, scope: !2923)
!2930 = !DILocalVariable(name: "ctx", scope: !2923, file: !272, line: 97, type: !2931)
!2931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2895, size: 32)
!2932 = !DILocation(line: 97, column: 26, scope: !2923)
!2933 = !DILocation(line: 97, column: 32, scope: !2923)
!2934 = !DILocation(line: 99, column: 31, scope: !2923)
!2935 = !DILocation(line: 99, column: 2, scope: !2923)
!2936 = !DILocation(line: 99, column: 7, scope: !2923)
!2937 = !DILocation(line: 99, column: 11, scope: !2923)
!2938 = !DILocation(line: 99, column: 16, scope: !2923)
!2939 = !DILocation(line: 99, column: 25, scope: !2923)
!2940 = !DILocation(line: 99, column: 29, scope: !2923)
!2941 = !DILocation(line: 100, column: 6, scope: !2942)
!2942 = distinct !DILexicalBlock(scope: !2923, file: !272, line: 100, column: 6)
!2943 = !DILocation(line: 100, column: 11, scope: !2942)
!2944 = !DILocation(line: 100, column: 21, scope: !2942)
!2945 = !DILocation(line: 100, column: 6, scope: !2923)
!2946 = !DILocation(line: 101, column: 13, scope: !2947)
!2947 = distinct !DILexicalBlock(scope: !2942, file: !272, line: 100, column: 51)
!2948 = !DILocation(line: 101, column: 3, scope: !2947)
!2949 = !DILocation(line: 102, column: 2, scope: !2947)
!2950 = !DILocation(line: 104, column: 9, scope: !2923)
!2951 = !DILocation(line: 104, column: 2, scope: !2923)
!2952 = distinct !DISubprogram(name: "cbvprintf", scope: !2953, file: !2953, line: 739, type: !2954, scopeLine: 740, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !269, retainedNodes: !223)
!2953 = !DIFile(filename: "zephyr/include/zephyr/sys/cbprintf.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2954 = !DISubroutineType(types: !2955)
!2955 = !{!103, !2956, !102, !256, !2879}
!2956 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_cb", file: !2953, line: 297, baseType: !2957)
!2957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2958, size: 32)
!2958 = !DISubroutineType(types: !2959)
!2959 = !{!103, null}
!2960 = !DILocalVariable(name: "out", arg: 1, scope: !2952, file: !2953, line: 739, type: !2956)
!2961 = !DILocation(line: 739, column: 27, scope: !2952)
!2962 = !DILocalVariable(name: "ctx", arg: 2, scope: !2952, file: !2953, line: 739, type: !102)
!2963 = !DILocation(line: 739, column: 38, scope: !2952)
!2964 = !DILocalVariable(name: "format", arg: 3, scope: !2952, file: !2953, line: 739, type: !256)
!2965 = !DILocation(line: 739, column: 55, scope: !2952)
!2966 = !DILocalVariable(name: "ap", arg: 4, scope: !2952, file: !2953, line: 739, type: !2879)
!2967 = !DILocation(line: 739, column: 71, scope: !2952)
!2968 = !DILocation(line: 741, column: 26, scope: !2952)
!2969 = !DILocation(line: 741, column: 31, scope: !2952)
!2970 = !DILocation(line: 741, column: 36, scope: !2952)
!2971 = !DILocation(line: 741, column: 9, scope: !2952)
!2972 = !DILocation(line: 741, column: 2, scope: !2952)
!2973 = distinct !DISubprogram(name: "buf_flush", scope: !272, file: !272, line: 89, type: !2974, scopeLine: 90, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !269, retainedNodes: !223)
!2974 = !DISubroutineType(types: !2975)
!2975 = !{null, !2931}
!2976 = !DILocalVariable(name: "ctx", arg: 1, scope: !2973, file: !272, line: 89, type: !2931)
!2977 = !DILocation(line: 89, column: 47, scope: !2973)
!2978 = !DILocation(line: 91, column: 12, scope: !2973)
!2979 = !DILocation(line: 91, column: 17, scope: !2973)
!2980 = !DILocation(line: 91, column: 22, scope: !2973)
!2981 = !DILocation(line: 91, column: 27, scope: !2973)
!2982 = !DILocation(line: 91, column: 2, scope: !2973)
!2983 = !DILocation(line: 92, column: 2, scope: !2973)
!2984 = !DILocation(line: 92, column: 7, scope: !2973)
!2985 = !DILocation(line: 92, column: 17, scope: !2973)
!2986 = !DILocation(line: 93, column: 1, scope: !2973)
!2987 = distinct !DISubprogram(name: "char_out", scope: !272, file: !272, line: 107, type: !2924, scopeLine: 108, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !269, retainedNodes: !223)
!2988 = !DILocalVariable(name: "c", arg: 1, scope: !2987, file: !272, line: 107, type: !103)
!2989 = !DILocation(line: 107, column: 25, scope: !2987)
!2990 = !DILocalVariable(name: "ctx_p", arg: 2, scope: !2987, file: !272, line: 107, type: !102)
!2991 = !DILocation(line: 107, column: 34, scope: !2987)
!2992 = !DILocation(line: 109, column: 9, scope: !2987)
!2993 = !DILocation(line: 110, column: 9, scope: !2987)
!2994 = !DILocation(line: 110, column: 19, scope: !2987)
!2995 = !DILocation(line: 110, column: 2, scope: !2987)
!2996 = distinct !DISubprogram(name: "k_str_out", scope: !2997, file: !2997, line: 1470, type: !2998, scopeLine: 1471, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !269, retainedNodes: !223)
!2997 = !DIFile(filename: "zephyr/include/generated/syscalls/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/gdbstub")
!2998 = !DISubroutineType(types: !2999)
!2999 = !{null, !925, !217}
!3000 = !DILocalVariable(name: "c", arg: 1, scope: !2996, file: !2997, line: 1470, type: !925)
!3001 = !DILocation(line: 1470, column: 37, scope: !2996)
!3002 = !DILocalVariable(name: "n", arg: 2, scope: !2996, file: !2997, line: 1470, type: !217)
!3003 = !DILocation(line: 1470, column: 47, scope: !2996)
!3004 = !DILocation(line: 1480, column: 2, scope: !2996)
!3005 = !DILocation(line: 1480, column: 2, scope: !3006)
!3006 = distinct !DILexicalBlock(scope: !2996, file: !2997, line: 1480, column: 2)
!3007 = !{i64 2151042649}
!3008 = !DILocation(line: 1481, column: 19, scope: !2996)
!3009 = !DILocation(line: 1481, column: 22, scope: !2996)
!3010 = !DILocation(line: 1481, column: 2, scope: !2996)
!3011 = !DILocation(line: 1482, column: 1, scope: !2996)
!3012 = distinct !DISubprogram(name: "z_impl_k_str_out", scope: !272, file: !272, line: 157, type: !2998, scopeLine: 158, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !269, retainedNodes: !223)
!3013 = !DILocalVariable(name: "c", arg: 1, scope: !3012, file: !272, line: 157, type: !925)
!3014 = !DILocation(line: 157, column: 29, scope: !3012)
!3015 = !DILocalVariable(name: "n", arg: 2, scope: !3012, file: !272, line: 157, type: !217)
!3016 = !DILocation(line: 157, column: 39, scope: !3012)
!3017 = !DILocalVariable(name: "i", scope: !3012, file: !272, line: 159, type: !217)
!3018 = !DILocation(line: 159, column: 9, scope: !3012)
!3019 = !DILocation(line: 164, column: 9, scope: !3020)
!3020 = distinct !DILexicalBlock(scope: !3012, file: !272, line: 164, column: 2)
!3021 = !DILocation(line: 164, column: 7, scope: !3020)
!3022 = !DILocation(line: 164, column: 14, scope: !3023)
!3023 = distinct !DILexicalBlock(scope: !3020, file: !272, line: 164, column: 2)
!3024 = !DILocation(line: 164, column: 18, scope: !3023)
!3025 = !DILocation(line: 164, column: 16, scope: !3023)
!3026 = !DILocation(line: 164, column: 2, scope: !3020)
!3027 = !DILocation(line: 165, column: 3, scope: !3028)
!3028 = distinct !DILexicalBlock(scope: !3023, file: !272, line: 164, column: 26)
!3029 = !DILocation(line: 165, column: 13, scope: !3028)
!3030 = !DILocation(line: 165, column: 15, scope: !3028)
!3031 = !DILocation(line: 166, column: 2, scope: !3028)
!3032 = !DILocation(line: 164, column: 22, scope: !3023)
!3033 = !DILocation(line: 164, column: 2, scope: !3023)
!3034 = distinct !{!3034, !3026, !3035}
!3035 = !DILocation(line: 166, column: 2, scope: !3020)
!3036 = !DILocation(line: 171, column: 1, scope: !3012)
!3037 = distinct !DISubprogram(name: "printk", scope: !272, file: !272, line: 203, type: !3038, scopeLine: 204, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !269, retainedNodes: !223)
!3038 = !DISubroutineType(types: !3039)
!3039 = !{null, !256, null}
!3040 = !DILocalVariable(name: "fmt", arg: 1, scope: !3037, file: !272, line: 203, type: !256)
!3041 = !DILocation(line: 203, column: 25, scope: !3037)
!3042 = !DILocalVariable(name: "ap", scope: !3037, file: !272, line: 205, type: !2879)
!3043 = !DILocation(line: 205, column: 10, scope: !3037)
!3044 = !DILocation(line: 207, column: 2, scope: !3037)
!3045 = !DILocation(line: 209, column: 10, scope: !3037)
!3046 = !DILocation(line: 209, column: 2, scope: !3037)
!3047 = !DILocation(line: 211, column: 2, scope: !3037)
!3048 = !DILocation(line: 212, column: 1, scope: !3037)
!3049 = distinct !DISubprogram(name: "snprintk", scope: !272, file: !272, line: 239, type: !3050, scopeLine: 240, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !269, retainedNodes: !223)
!3050 = !DISubroutineType(types: !3051)
!3051 = !{!103, !925, !217, !256, null}
!3052 = !DILocalVariable(name: "str", arg: 1, scope: !3049, file: !272, line: 239, type: !925)
!3053 = !DILocation(line: 239, column: 20, scope: !3049)
!3054 = !DILocalVariable(name: "size", arg: 2, scope: !3049, file: !272, line: 239, type: !217)
!3055 = !DILocation(line: 239, column: 32, scope: !3049)
!3056 = !DILocalVariable(name: "fmt", arg: 3, scope: !3049, file: !272, line: 239, type: !256)
!3057 = !DILocation(line: 239, column: 50, scope: !3049)
!3058 = !DILocalVariable(name: "ap", scope: !3049, file: !272, line: 241, type: !2879)
!3059 = !DILocation(line: 241, column: 10, scope: !3049)
!3060 = !DILocalVariable(name: "ret", scope: !3049, file: !272, line: 242, type: !103)
!3061 = !DILocation(line: 242, column: 6, scope: !3049)
!3062 = !DILocation(line: 244, column: 2, scope: !3049)
!3063 = !DILocation(line: 245, column: 18, scope: !3049)
!3064 = !DILocation(line: 245, column: 23, scope: !3049)
!3065 = !DILocation(line: 245, column: 29, scope: !3049)
!3066 = !DILocation(line: 245, column: 8, scope: !3049)
!3067 = !DILocation(line: 245, column: 6, scope: !3049)
!3068 = !DILocation(line: 246, column: 2, scope: !3049)
!3069 = !DILocation(line: 248, column: 9, scope: !3049)
!3070 = !DILocation(line: 248, column: 2, scope: !3049)
!3071 = distinct !DISubprogram(name: "vsnprintk", scope: !272, file: !272, line: 251, type: !3072, scopeLine: 252, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !269, retainedNodes: !223)
!3072 = !DISubroutineType(types: !3073)
!3073 = !{!103, !925, !217, !256, !2879}
!3074 = !DILocalVariable(name: "str", arg: 1, scope: !3071, file: !272, line: 251, type: !925)
!3075 = !DILocation(line: 251, column: 21, scope: !3071)
!3076 = !DILocalVariable(name: "size", arg: 2, scope: !3071, file: !272, line: 251, type: !217)
!3077 = !DILocation(line: 251, column: 33, scope: !3071)
!3078 = !DILocalVariable(name: "fmt", arg: 3, scope: !3071, file: !272, line: 251, type: !256)
!3079 = !DILocation(line: 251, column: 51, scope: !3071)
!3080 = !DILocalVariable(name: "ap", arg: 4, scope: !3071, file: !272, line: 251, type: !2879)
!3081 = !DILocation(line: 251, column: 64, scope: !3071)
!3082 = !DILocalVariable(name: "ctx", scope: !3071, file: !272, line: 253, type: !3083)
!3083 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "str_context", file: !272, line: 217, size: 96, elements: !3084)
!3084 = !{!3085, !3086, !3087}
!3085 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !3083, file: !272, line: 218, baseType: !925, size: 32)
!3086 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !3083, file: !272, line: 219, baseType: !103, size: 32, offset: 32)
!3087 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3083, file: !272, line: 220, baseType: !103, size: 32, offset: 64)
!3088 = !DILocation(line: 253, column: 21, scope: !3071)
!3089 = !DILocation(line: 253, column: 27, scope: !3071)
!3090 = !DILocation(line: 253, column: 29, scope: !3071)
!3091 = !DILocation(line: 253, column: 34, scope: !3071)
!3092 = !DILocation(line: 255, column: 21, scope: !3071)
!3093 = !DILocation(line: 255, column: 27, scope: !3071)
!3094 = !DILocation(line: 255, column: 2, scope: !3071)
!3095 = !DILocation(line: 257, column: 10, scope: !3096)
!3096 = distinct !DILexicalBlock(scope: !3071, file: !272, line: 257, column: 6)
!3097 = !DILocation(line: 257, column: 22, scope: !3096)
!3098 = !DILocation(line: 257, column: 16, scope: !3096)
!3099 = !DILocation(line: 257, column: 6, scope: !3071)
!3100 = !DILocation(line: 258, column: 3, scope: !3101)
!3101 = distinct !DILexicalBlock(scope: !3096, file: !272, line: 257, column: 27)
!3102 = !DILocation(line: 258, column: 11, scope: !3101)
!3103 = !DILocation(line: 258, column: 18, scope: !3101)
!3104 = !DILocation(line: 259, column: 2, scope: !3101)
!3105 = !DILocation(line: 261, column: 13, scope: !3071)
!3106 = !DILocation(line: 261, column: 2, scope: !3071)
!3107 = distinct !DISubprogram(name: "str_out", scope: !272, file: !272, line: 223, type: !3108, scopeLine: 224, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !269, retainedNodes: !223)
!3108 = !DISubroutineType(types: !3109)
!3109 = !{!103, !103, !3110}
!3110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3083, size: 32)
!3111 = !DILocalVariable(name: "c", arg: 1, scope: !3107, file: !272, line: 223, type: !103)
!3112 = !DILocation(line: 223, column: 24, scope: !3107)
!3113 = !DILocalVariable(name: "ctx", arg: 2, scope: !3107, file: !272, line: 223, type: !3110)
!3114 = !DILocation(line: 223, column: 47, scope: !3107)
!3115 = !DILocation(line: 225, column: 6, scope: !3116)
!3116 = distinct !DILexicalBlock(scope: !3107, file: !272, line: 225, column: 6)
!3117 = !DILocation(line: 225, column: 11, scope: !3116)
!3118 = !DILocation(line: 225, column: 15, scope: !3116)
!3119 = !DILocation(line: 225, column: 23, scope: !3116)
!3120 = !DILocation(line: 225, column: 26, scope: !3116)
!3121 = !DILocation(line: 225, column: 31, scope: !3116)
!3122 = !DILocation(line: 225, column: 40, scope: !3116)
!3123 = !DILocation(line: 225, column: 45, scope: !3116)
!3124 = !DILocation(line: 225, column: 37, scope: !3116)
!3125 = !DILocation(line: 225, column: 6, scope: !3107)
!3126 = !DILocation(line: 226, column: 3, scope: !3127)
!3127 = distinct !DILexicalBlock(scope: !3116, file: !272, line: 225, column: 50)
!3128 = !DILocation(line: 226, column: 8, scope: !3127)
!3129 = !DILocation(line: 226, column: 13, scope: !3127)
!3130 = !DILocation(line: 227, column: 10, scope: !3127)
!3131 = !DILocation(line: 227, column: 3, scope: !3127)
!3132 = !DILocation(line: 230, column: 6, scope: !3133)
!3133 = distinct !DILexicalBlock(scope: !3107, file: !272, line: 230, column: 6)
!3134 = !DILocation(line: 230, column: 11, scope: !3133)
!3135 = !DILocation(line: 230, column: 20, scope: !3133)
!3136 = !DILocation(line: 230, column: 25, scope: !3133)
!3137 = !DILocation(line: 230, column: 29, scope: !3133)
!3138 = !DILocation(line: 230, column: 17, scope: !3133)
!3139 = !DILocation(line: 230, column: 6, scope: !3107)
!3140 = !DILocation(line: 231, column: 3, scope: !3141)
!3141 = distinct !DILexicalBlock(scope: !3133, file: !272, line: 230, column: 34)
!3142 = !DILocation(line: 231, column: 8, scope: !3141)
!3143 = !DILocation(line: 231, column: 12, scope: !3141)
!3144 = !DILocation(line: 231, column: 17, scope: !3141)
!3145 = !DILocation(line: 231, column: 22, scope: !3141)
!3146 = !DILocation(line: 231, column: 26, scope: !3141)
!3147 = !DILocation(line: 232, column: 2, scope: !3141)
!3148 = !DILocation(line: 233, column: 28, scope: !3149)
!3149 = distinct !DILexicalBlock(scope: !3133, file: !272, line: 232, column: 9)
!3150 = !DILocation(line: 233, column: 3, scope: !3149)
!3151 = !DILocation(line: 233, column: 8, scope: !3149)
!3152 = !DILocation(line: 233, column: 12, scope: !3149)
!3153 = !DILocation(line: 233, column: 17, scope: !3149)
!3154 = !DILocation(line: 233, column: 22, scope: !3149)
!3155 = !DILocation(line: 233, column: 26, scope: !3149)
!3156 = !DILocation(line: 236, column: 9, scope: !3107)
!3157 = !DILocation(line: 236, column: 2, scope: !3107)
!3158 = !DILocation(line: 237, column: 1, scope: !3107)
!3159 = distinct !DISubprogram(name: "z_thread_entry", scope: !3160, file: !3160, line: 30, type: !3161, scopeLine: 32, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagDefinition, unit: !2098, retainedNodes: !223)
!3160 = !DIFile(filename: "zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3161 = !DISubroutineType(types: !3162)
!3162 = !{null, !240, !102, !102, !102}
!3163 = !DILocalVariable(name: "entry", arg: 1, scope: !3159, file: !3160, line: 30, type: !240)
!3164 = !DILocation(line: 30, column: 52, scope: !3159)
!3165 = !DILocalVariable(name: "p1", arg: 2, scope: !3159, file: !3160, line: 31, type: !102)
!3166 = !DILocation(line: 31, column: 12, scope: !3159)
!3167 = !DILocalVariable(name: "p2", arg: 3, scope: !3159, file: !3160, line: 31, type: !102)
!3168 = !DILocation(line: 31, column: 22, scope: !3159)
!3169 = !DILocalVariable(name: "p3", arg: 4, scope: !3159, file: !3160, line: 31, type: !102)
!3170 = !DILocation(line: 31, column: 32, scope: !3159)
!3171 = !DILocation(line: 36, column: 2, scope: !3159)
!3172 = !DILocation(line: 36, column: 8, scope: !3159)
!3173 = !DILocation(line: 36, column: 12, scope: !3159)
!3174 = !DILocation(line: 36, column: 16, scope: !3159)
!3175 = !DILocation(line: 38, column: 17, scope: !3159)
!3176 = !DILocation(line: 38, column: 2, scope: !3159)
!3177 = !DILocation(line: 45, column: 2, scope: !3159)
!3178 = distinct !DISubprogram(name: "k_current_get", scope: !109, file: !109, line: 530, type: !3179, scopeLine: 531, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2098, retainedNodes: !223)
!3179 = !DISubroutineType(types: !3180)
!3180 = !{!3181}
!3181 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !114, line: 347, baseType: !3182)
!3182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3183, size: 32)
!3183 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !114, line: 245, size: 896, elements: !3184)
!3184 = !{!3185, !3243, !3255, !3256, !3257, !3258, !3271}
!3185 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3183, file: !114, line: 247, baseType: !3186, size: 384)
!3186 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !114, line: 57, size: 384, elements: !3187)
!3187 = !{!3188, !3212, !3219, !3220, !3221, !3230, !3231, !3232}
!3188 = !DIDerivedType(tag: DW_TAG_member, scope: !3186, file: !114, line: 60, baseType: !3189, size: 64)
!3189 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3186, file: !114, line: 60, size: 64, elements: !3190)
!3190 = !{!3191, !3206}
!3191 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !3189, file: !114, line: 61, baseType: !3192, size: 64)
!3192 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !124, line: 49, baseType: !3193)
!3193 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !124, line: 37, size: 64, elements: !3194)
!3194 = !{!3195, !3201}
!3195 = !DIDerivedType(tag: DW_TAG_member, scope: !3193, file: !124, line: 38, baseType: !3196, size: 32)
!3196 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3193, file: !124, line: 38, size: 32, elements: !3197)
!3197 = !{!3198, !3200}
!3198 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3196, file: !124, line: 39, baseType: !3199, size: 32)
!3199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3193, size: 32)
!3200 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3196, file: !124, line: 40, baseType: !3199, size: 32)
!3201 = !DIDerivedType(tag: DW_TAG_member, scope: !3193, file: !124, line: 42, baseType: !3202, size: 32, offset: 32)
!3202 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3193, file: !124, line: 42, size: 32, elements: !3203)
!3203 = !{!3204, !3205}
!3204 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3202, file: !124, line: 43, baseType: !3199, size: 32)
!3205 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3202, file: !124, line: 44, baseType: !3199, size: 32)
!3206 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !3189, file: !114, line: 62, baseType: !3207, size: 64)
!3207 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !140, line: 49, size: 64, elements: !3208)
!3208 = !{!3209}
!3209 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3207, file: !140, line: 50, baseType: !3210, size: 64)
!3210 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3211, size: 64, elements: !145)
!3211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3207, size: 32)
!3212 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !3186, file: !114, line: 68, baseType: !3213, size: 32, offset: 64)
!3213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3214, size: 32)
!3214 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !150, line: 233, baseType: !3215)
!3215 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !150, line: 231, size: 64, elements: !3216)
!3216 = !{!3217}
!3217 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !3215, file: !150, line: 232, baseType: !3218, size: 64)
!3218 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !124, line: 48, baseType: !3193)
!3219 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !3186, file: !114, line: 71, baseType: !156, size: 8, offset: 96)
!3220 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !3186, file: !114, line: 74, baseType: !156, size: 8, offset: 104)
!3221 = !DIDerivedType(tag: DW_TAG_member, scope: !3186, file: !114, line: 90, baseType: !3222, size: 16, offset: 112)
!3222 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3186, file: !114, line: 90, size: 16, elements: !3223)
!3223 = !{!3224, !3229}
!3224 = !DIDerivedType(tag: DW_TAG_member, scope: !3222, file: !114, line: 91, baseType: !3225, size: 16)
!3225 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3222, file: !114, line: 91, size: 16, elements: !3226)
!3226 = !{!3227, !3228}
!3227 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !3225, file: !114, line: 96, baseType: !166, size: 8)
!3228 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !3225, file: !114, line: 97, baseType: !156, size: 8, offset: 8)
!3229 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !3222, file: !114, line: 100, baseType: !170, size: 16)
!3230 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !3186, file: !114, line: 107, baseType: !173, size: 32, offset: 128)
!3231 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !3186, file: !114, line: 127, baseType: !102, size: 32, offset: 160)
!3232 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3186, file: !114, line: 131, baseType: !3233, size: 192, offset: 192)
!3233 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !150, line: 244, size: 192, elements: !3234)
!3234 = !{!3235, !3236, !3242}
!3235 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3233, file: !150, line: 245, baseType: !3192, size: 64)
!3236 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !3233, file: !150, line: 246, baseType: !3237, size: 32, offset: 64)
!3237 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !150, line: 242, baseType: !3238)
!3238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3239, size: 32)
!3239 = !DISubroutineType(types: !3240)
!3240 = !{null, !3241}
!3241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3233, size: 32)
!3242 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !3233, file: !150, line: 249, baseType: !186, size: 64, offset: 128)
!3243 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !3183, file: !114, line: 250, baseType: !3244, size: 288, offset: 384)
!3244 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !190, line: 25, size: 288, elements: !3245)
!3245 = !{!3246, !3247, !3248, !3249, !3250, !3251, !3252, !3253, !3254}
!3246 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !3244, file: !190, line: 26, baseType: !173, size: 32)
!3247 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !3244, file: !190, line: 27, baseType: !173, size: 32, offset: 32)
!3248 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !3244, file: !190, line: 28, baseType: !173, size: 32, offset: 64)
!3249 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !3244, file: !190, line: 29, baseType: !173, size: 32, offset: 96)
!3250 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !3244, file: !190, line: 30, baseType: !173, size: 32, offset: 128)
!3251 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !3244, file: !190, line: 31, baseType: !173, size: 32, offset: 160)
!3252 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !3244, file: !190, line: 32, baseType: !173, size: 32, offset: 192)
!3253 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !3244, file: !190, line: 33, baseType: !173, size: 32, offset: 224)
!3254 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !3244, file: !190, line: 34, baseType: !173, size: 32, offset: 256)
!3255 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !3183, file: !114, line: 253, baseType: !102, size: 32, offset: 672)
!3256 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !3183, file: !114, line: 256, baseType: !3214, size: 64, offset: 704)
!3257 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !3183, file: !114, line: 294, baseType: !103, size: 32, offset: 768)
!3258 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !3183, file: !114, line: 325, baseType: !3259, size: 32, offset: 800)
!3259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3260, size: 32)
!3260 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !109, line: 5073, size: 160, elements: !3261)
!3261 = !{!3262, !3268, !3269}
!3262 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3260, file: !109, line: 5074, baseType: !3263, size: 96)
!3263 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !210, line: 56, size: 96, elements: !3264)
!3264 = !{!3265, !3266, !3267}
!3265 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3263, file: !210, line: 57, baseType: !213, size: 32)
!3266 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !3263, file: !210, line: 58, baseType: !102, size: 32, offset: 32)
!3267 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !3263, file: !210, line: 59, baseType: !217, size: 32, offset: 64)
!3268 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !3260, file: !109, line: 5075, baseType: !3214, size: 64, offset: 96)
!3269 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3260, file: !109, line: 5076, baseType: !3270, offset: 160)
!3270 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !222, line: 43, elements: !223)
!3271 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !3183, file: !114, line: 343, baseType: !3272, size: 64, offset: 832)
!3272 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !190, line: 60, size: 64, elements: !3273)
!3273 = !{!3274, !3275}
!3274 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !3272, file: !190, line: 63, baseType: !173, size: 32)
!3275 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !3272, file: !190, line: 66, baseType: !173, size: 32, offset: 32)
!3276 = !DILocation(line: 535, column: 9, scope: !3178)
!3277 = !DILocation(line: 535, column: 2, scope: !3178)
!3278 = distinct !DISubprogram(name: "k_thread_abort", scope: !2997, file: !2997, line: 188, type: !3279, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2098, retainedNodes: !223)
!3279 = !DISubroutineType(types: !3280)
!3280 = !{null, !3181}
!3281 = !DILocalVariable(name: "thread", arg: 1, scope: !3278, file: !2997, line: 188, type: !3181)
!3282 = !DILocation(line: 188, column: 43, scope: !3278)
!3283 = !DILocation(line: 197, column: 2, scope: !3278)
!3284 = !DILocation(line: 197, column: 2, scope: !3285)
!3285 = distinct !DILexicalBlock(scope: !3278, file: !2997, line: 197, column: 2)
!3286 = !{i64 2151033310}
!3287 = !DILocation(line: 198, column: 24, scope: !3278)
!3288 = !DILocation(line: 198, column: 2, scope: !3278)
!3289 = !DILocation(line: 199, column: 1, scope: !3278)
!3290 = distinct !DISubprogram(name: "z_current_get", scope: !2997, file: !2997, line: 173, type: !3179, scopeLine: 174, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2098, retainedNodes: !223)
!3291 = !DILocation(line: 180, column: 2, scope: !3290)
!3292 = !DILocation(line: 180, column: 2, scope: !3293)
!3293 = distinct !DILexicalBlock(scope: !3290, file: !2997, line: 180, column: 2)
!3294 = !{i64 2151033242}
!3295 = !DILocation(line: 181, column: 9, scope: !3290)
!3296 = !DILocation(line: 181, column: 2, scope: !3290)
!3297 = distinct !DISubprogram(name: "z_cbvprintf_impl", scope: !2104, file: !2104, line: 1338, type: !3298, scopeLine: 1340, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2100, retainedNodes: !223)
!3298 = !DISubroutineType(types: !3299)
!3299 = !{!103, !2956, !102, !256, !3300, !173}
!3300 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !2880, line: 99, baseType: !3301)
!3301 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !2880, line: 40, baseType: !3302)
!3302 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2104, baseType: !3303)
!3303 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !3304)
!3304 = !{!3305}
!3305 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !3303, file: !2104, baseType: !102, size: 32)
!3306 = !DILocalVariable(name: "out", arg: 1, scope: !3297, file: !2104, line: 1338, type: !2956)
!3307 = !DILocation(line: 1338, column: 34, scope: !3297)
!3308 = !DILocalVariable(name: "ctx", arg: 2, scope: !3297, file: !2104, line: 1338, type: !102)
!3309 = !DILocation(line: 1338, column: 45, scope: !3297)
!3310 = !DILocalVariable(name: "fp", arg: 3, scope: !3297, file: !2104, line: 1338, type: !256)
!3311 = !DILocation(line: 1338, column: 62, scope: !3297)
!3312 = !DILocalVariable(name: "ap", arg: 4, scope: !3297, file: !2104, line: 1339, type: !3300)
!3313 = !DILocation(line: 1339, column: 16, scope: !3297)
!3314 = !DILocalVariable(name: "flags", arg: 5, scope: !3297, file: !2104, line: 1339, type: !173)
!3315 = !DILocation(line: 1339, column: 29, scope: !3297)
!3316 = !DILocalVariable(name: "buf", scope: !3297, file: !2104, line: 1341, type: !3317)
!3317 = !DICompositeType(tag: DW_TAG_array_type, baseType: !237, size: 176, elements: !3318)
!3318 = !{!3319}
!3319 = !DISubrange(count: 22)
!3320 = !DILocation(line: 1341, column: 7, scope: !3297)
!3321 = !DILocalVariable(name: "count", scope: !3297, file: !2104, line: 1342, type: !217)
!3322 = !DILocation(line: 1342, column: 9, scope: !3297)
!3323 = !DILocalVariable(name: "sint", scope: !3297, file: !2104, line: 1343, type: !2123)
!3324 = !DILocation(line: 1343, column: 18, scope: !3297)
!3325 = !DILocalVariable(name: "tagged_ap", scope: !3297, file: !2104, line: 1345, type: !3326)
!3326 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !743)
!3327 = !DILocation(line: 1345, column: 13, scope: !3297)
!3328 = !DILocation(line: 1345, column: 26, scope: !3297)
!3329 = !DILocation(line: 1345, column: 32, scope: !3297)
!3330 = !DILocation(line: 1346, column: 11, scope: !3297)
!3331 = !DILocation(line: 1375, column: 2, scope: !3297)
!3332 = !DILocation(line: 1375, column: 10, scope: !3297)
!3333 = !DILocation(line: 1375, column: 9, scope: !3297)
!3334 = !DILocation(line: 1375, column: 13, scope: !3297)
!3335 = !DILocation(line: 1376, column: 8, scope: !3336)
!3336 = distinct !DILexicalBlock(scope: !3337, file: !2104, line: 1376, column: 7)
!3337 = distinct !DILexicalBlock(scope: !3297, file: !2104, line: 1375, column: 19)
!3338 = !DILocation(line: 1376, column: 7, scope: !3336)
!3339 = !DILocation(line: 1376, column: 11, scope: !3336)
!3340 = !DILocation(line: 1376, column: 7, scope: !3337)
!3341 = !DILocation(line: 1377, column: 4, scope: !3342)
!3342 = distinct !DILexicalBlock(scope: !3336, file: !2104, line: 1376, column: 19)
!3343 = !DILocalVariable(name: "rc", scope: !3344, file: !2104, line: 1377, type: !103)
!3344 = distinct !DILexicalBlock(scope: !3342, file: !2104, line: 1377, column: 4)
!3345 = !DILocation(line: 1377, column: 4, scope: !3344)
!3346 = !DILocation(line: 1377, column: 4, scope: !3347)
!3347 = distinct !DILexicalBlock(scope: !3344, file: !2104, line: 1377, column: 4)
!3348 = !DILocation(line: 1377, column: 4, scope: !3349)
!3349 = distinct !DILexicalBlock(scope: !3347, file: !2104, line: 1377, column: 4)
!3350 = !DILocation(line: 1378, column: 4, scope: !3342)
!3351 = distinct !{!3351, !3331, !3352}
!3352 = !DILocation(line: 1839, column: 2, scope: !3297)
!3353 = !DILocalVariable(name: "state", scope: !3337, file: !2104, line: 1395, type: !3354)
!3354 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3297, file: !2104, line: 1392, size: 192, elements: !3355)
!3355 = !{!3356, !3366}
!3356 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !3354, file: !2104, line: 1393, baseType: !3357, size: 64)
!3357 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "argument_value", file: !2104, line: 166, size: 64, elements: !3358)
!3358 = !{!3359, !3360, !3361, !3363, !3365}
!3359 = !DIDerivedType(tag: DW_TAG_member, name: "sint", scope: !3357, file: !2104, line: 168, baseType: !2123, size: 64)
!3360 = !DIDerivedType(tag: DW_TAG_member, name: "uint", scope: !3357, file: !2104, line: 171, baseType: !2126, size: 64)
!3361 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !3357, file: !2104, line: 174, baseType: !3362, size: 64)
!3362 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!3363 = !DIDerivedType(tag: DW_TAG_member, name: "ldbl", scope: !3357, file: !2104, line: 177, baseType: !3364, size: 64)
!3364 = !DIBasicType(name: "long double", size: 64, encoding: DW_ATE_float)
!3365 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !3357, file: !2104, line: 180, baseType: !102, size: 32)
!3366 = !DIDerivedType(tag: DW_TAG_member, name: "conv", scope: !3354, file: !2104, line: 1394, baseType: !3367, size: 96, offset: 64)
!3367 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conversion", file: !2104, line: 189, size: 96, elements: !3368)
!3368 = !{!3369, !3370, !3371, !3372, !3373, !3374, !3375, !3376, !3377, !3378, !3379, !3380, !3381, !3382, !3383, !3384, !3385, !3386, !3387, !3388, !3393}
!3369 = !DIDerivedType(tag: DW_TAG_member, name: "invalid", scope: !3367, file: !2104, line: 191, baseType: !743, size: 1, flags: DIFlagBitField, extraData: i64 0)
!3370 = !DIDerivedType(tag: DW_TAG_member, name: "unsupported", scope: !3367, file: !2104, line: 194, baseType: !743, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!3371 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dash", scope: !3367, file: !2104, line: 197, baseType: !743, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!3372 = !DIDerivedType(tag: DW_TAG_member, name: "flag_plus", scope: !3367, file: !2104, line: 200, baseType: !743, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!3373 = !DIDerivedType(tag: DW_TAG_member, name: "flag_space", scope: !3367, file: !2104, line: 203, baseType: !743, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!3374 = !DIDerivedType(tag: DW_TAG_member, name: "flag_hash", scope: !3367, file: !2104, line: 206, baseType: !743, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!3375 = !DIDerivedType(tag: DW_TAG_member, name: "flag_zero", scope: !3367, file: !2104, line: 209, baseType: !743, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!3376 = !DIDerivedType(tag: DW_TAG_member, name: "width_present", scope: !3367, file: !2104, line: 212, baseType: !743, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!3377 = !DIDerivedType(tag: DW_TAG_member, name: "width_star", scope: !3367, file: !2104, line: 219, baseType: !743, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!3378 = !DIDerivedType(tag: DW_TAG_member, name: "prec_present", scope: !3367, file: !2104, line: 222, baseType: !743, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!3379 = !DIDerivedType(tag: DW_TAG_member, name: "prec_star", scope: !3367, file: !2104, line: 229, baseType: !743, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!3380 = !DIDerivedType(tag: DW_TAG_member, name: "length_mod", scope: !3367, file: !2104, line: 232, baseType: !32, size: 4, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!3381 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_a", scope: !3367, file: !2104, line: 238, baseType: !743, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!3382 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_cat", scope: !3367, file: !2104, line: 241, baseType: !32, size: 3, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!3383 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0", scope: !3367, file: !2104, line: 244, baseType: !743, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!3384 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0c", scope: !3367, file: !2104, line: 247, baseType: !743, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!3385 = !DIDerivedType(tag: DW_TAG_member, name: "pad_postdp", scope: !3367, file: !2104, line: 252, baseType: !743, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!3386 = !DIDerivedType(tag: DW_TAG_member, name: "pad_fp", scope: !3367, file: !2104, line: 257, baseType: !743, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!3387 = !DIDerivedType(tag: DW_TAG_member, name: "specifier", scope: !3367, file: !2104, line: 260, baseType: !157, size: 8, offset: 24)
!3388 = !DIDerivedType(tag: DW_TAG_member, scope: !3367, file: !2104, line: 262, baseType: !3389, size: 32, offset: 32)
!3389 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3367, file: !2104, line: 262, size: 32, elements: !3390)
!3390 = !{!3391, !3392}
!3391 = !DIDerivedType(tag: DW_TAG_member, name: "width_value", scope: !3389, file: !2104, line: 267, baseType: !103, size: 32)
!3392 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_value", scope: !3389, file: !2104, line: 289, baseType: !103, size: 32)
!3393 = !DIDerivedType(tag: DW_TAG_member, scope: !3367, file: !2104, line: 292, baseType: !3394, size: 32, offset: 64)
!3394 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3367, file: !2104, line: 292, size: 32, elements: !3395)
!3395 = !{!3396, !3397}
!3396 = !DIDerivedType(tag: DW_TAG_member, name: "prec_value", scope: !3394, file: !2104, line: 297, baseType: !103, size: 32)
!3397 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_pre_exp", scope: !3394, file: !2104, line: 306, baseType: !103, size: 32)
!3398 = !DILocation(line: 1395, column: 5, scope: !3337)
!3399 = !DILocalVariable(name: "conv", scope: !3337, file: !2104, line: 1400, type: !3400)
!3400 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3401)
!3401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3367, size: 32)
!3402 = !DILocation(line: 1400, column: 28, scope: !3337)
!3403 = !DILocation(line: 1400, column: 42, scope: !3337)
!3404 = !DILocalVariable(name: "value", scope: !3337, file: !2104, line: 1401, type: !3405)
!3405 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3406)
!3406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3357, size: 32)
!3407 = !DILocation(line: 1401, column: 31, scope: !3337)
!3408 = !DILocation(line: 1401, column: 46, scope: !3337)
!3409 = !DILocalVariable(name: "sp", scope: !3337, file: !2104, line: 1402, type: !256)
!3410 = !DILocation(line: 1402, column: 15, scope: !3337)
!3411 = !DILocation(line: 1402, column: 20, scope: !3337)
!3412 = !DILocalVariable(name: "width", scope: !3337, file: !2104, line: 1403, type: !103)
!3413 = !DILocation(line: 1403, column: 7, scope: !3337)
!3414 = !DILocalVariable(name: "precision", scope: !3337, file: !2104, line: 1404, type: !103)
!3415 = !DILocation(line: 1404, column: 7, scope: !3337)
!3416 = !DILocalVariable(name: "bps", scope: !3337, file: !2104, line: 1405, type: !256)
!3417 = !DILocation(line: 1405, column: 15, scope: !3337)
!3418 = !DILocalVariable(name: "bpe", scope: !3337, file: !2104, line: 1406, type: !256)
!3419 = !DILocation(line: 1406, column: 15, scope: !3337)
!3420 = !DILocation(line: 1406, column: 21, scope: !3337)
!3421 = !DILocation(line: 1406, column: 25, scope: !3337)
!3422 = !DILocalVariable(name: "sign", scope: !3337, file: !2104, line: 1407, type: !237)
!3423 = !DILocation(line: 1407, column: 8, scope: !3337)
!3424 = !DILocation(line: 1409, column: 27, scope: !3337)
!3425 = !DILocation(line: 1409, column: 33, scope: !3337)
!3426 = !DILocation(line: 1409, column: 8, scope: !3337)
!3427 = !DILocation(line: 1409, column: 6, scope: !3337)
!3428 = !DILocation(line: 1414, column: 7, scope: !3429)
!3429 = distinct !DILexicalBlock(scope: !3337, file: !2104, line: 1414, column: 7)
!3430 = !DILocation(line: 1414, column: 13, scope: !3429)
!3431 = !DILocation(line: 1414, column: 7, scope: !3337)
!3432 = !DILocation(line: 1415, column: 12, scope: !3433)
!3433 = distinct !DILexicalBlock(scope: !3429, file: !2104, line: 1414, column: 25)
!3434 = !DILocation(line: 1415, column: 10, scope: !3433)
!3435 = !DILocation(line: 1417, column: 8, scope: !3436)
!3436 = distinct !DILexicalBlock(scope: !3433, file: !2104, line: 1417, column: 8)
!3437 = !DILocation(line: 1417, column: 14, scope: !3436)
!3438 = !DILocation(line: 1417, column: 8, scope: !3433)
!3439 = !DILocation(line: 1418, column: 5, scope: !3440)
!3440 = distinct !DILexicalBlock(scope: !3436, file: !2104, line: 1417, column: 19)
!3441 = !DILocation(line: 1418, column: 11, scope: !3440)
!3442 = !DILocation(line: 1418, column: 21, scope: !3440)
!3443 = !DILocation(line: 1419, column: 14, scope: !3440)
!3444 = !DILocation(line: 1419, column: 13, scope: !3440)
!3445 = !DILocation(line: 1419, column: 11, scope: !3440)
!3446 = !DILocation(line: 1420, column: 4, scope: !3440)
!3447 = !DILocation(line: 1421, column: 3, scope: !3433)
!3448 = !DILocation(line: 1421, column: 14, scope: !3449)
!3449 = distinct !DILexicalBlock(scope: !3429, file: !2104, line: 1421, column: 14)
!3450 = !DILocation(line: 1421, column: 20, scope: !3449)
!3451 = !DILocation(line: 1421, column: 14, scope: !3429)
!3452 = !DILocation(line: 1422, column: 12, scope: !3453)
!3453 = distinct !DILexicalBlock(scope: !3449, file: !2104, line: 1421, column: 35)
!3454 = !DILocation(line: 1422, column: 18, scope: !3453)
!3455 = !DILocation(line: 1422, column: 10, scope: !3453)
!3456 = !DILocation(line: 1423, column: 3, scope: !3453)
!3457 = !DILocation(line: 1431, column: 7, scope: !3458)
!3458 = distinct !DILexicalBlock(scope: !3337, file: !2104, line: 1431, column: 7)
!3459 = !DILocation(line: 1431, column: 13, scope: !3458)
!3460 = !DILocation(line: 1431, column: 7, scope: !3337)
!3461 = !DILocalVariable(name: "arg", scope: !3462, file: !2104, line: 1432, type: !103)
!3462 = distinct !DILexicalBlock(scope: !3458, file: !2104, line: 1431, column: 24)
!3463 = !DILocation(line: 1432, column: 8, scope: !3462)
!3464 = !DILocation(line: 1432, column: 14, scope: !3462)
!3465 = !DILocation(line: 1434, column: 8, scope: !3466)
!3466 = distinct !DILexicalBlock(scope: !3462, file: !2104, line: 1434, column: 8)
!3467 = !DILocation(line: 1434, column: 12, scope: !3466)
!3468 = !DILocation(line: 1434, column: 8, scope: !3462)
!3469 = !DILocation(line: 1435, column: 5, scope: !3470)
!3470 = distinct !DILexicalBlock(scope: !3466, file: !2104, line: 1434, column: 17)
!3471 = !DILocation(line: 1435, column: 11, scope: !3470)
!3472 = !DILocation(line: 1435, column: 24, scope: !3470)
!3473 = !DILocation(line: 1436, column: 4, scope: !3470)
!3474 = !DILocation(line: 1437, column: 17, scope: !3475)
!3475 = distinct !DILexicalBlock(scope: !3466, file: !2104, line: 1436, column: 11)
!3476 = !DILocation(line: 1437, column: 15, scope: !3475)
!3477 = !DILocation(line: 1439, column: 3, scope: !3462)
!3478 = !DILocation(line: 1439, column: 14, scope: !3479)
!3479 = distinct !DILexicalBlock(scope: !3458, file: !2104, line: 1439, column: 14)
!3480 = !DILocation(line: 1439, column: 20, scope: !3479)
!3481 = !DILocation(line: 1439, column: 14, scope: !3458)
!3482 = !DILocation(line: 1440, column: 16, scope: !3483)
!3483 = distinct !DILexicalBlock(scope: !3479, file: !2104, line: 1439, column: 34)
!3484 = !DILocation(line: 1440, column: 22, scope: !3483)
!3485 = !DILocation(line: 1440, column: 14, scope: !3483)
!3486 = !DILocation(line: 1441, column: 3, scope: !3483)
!3487 = !DILocation(line: 1448, column: 3, scope: !3337)
!3488 = !DILocation(line: 1448, column: 9, scope: !3337)
!3489 = !DILocation(line: 1448, column: 20, scope: !3337)
!3490 = !DILocation(line: 1449, column: 3, scope: !3337)
!3491 = !DILocation(line: 1449, column: 9, scope: !3337)
!3492 = !DILocation(line: 1449, column: 22, scope: !3337)
!3493 = !DILocalVariable(name: "specifier_cat", scope: !3337, file: !2104, line: 1468, type: !2103)
!3494 = !DILocation(line: 1468, column: 27, scope: !3337)
!3495 = !DILocation(line: 1469, column: 31, scope: !3337)
!3496 = !DILocation(line: 1469, column: 37, scope: !3337)
!3497 = !DILocalVariable(name: "length_mod", scope: !3337, file: !2104, line: 1470, type: !2111)
!3498 = !DILocation(line: 1470, column: 24, scope: !3337)
!3499 = !DILocation(line: 1471, column: 28, scope: !3337)
!3500 = !DILocation(line: 1471, column: 34, scope: !3337)
!3501 = !DILocation(line: 1478, column: 7, scope: !3502)
!3502 = distinct !DILexicalBlock(scope: !3337, file: !2104, line: 1478, column: 7)
!3503 = !DILocation(line: 1478, column: 21, scope: !3502)
!3504 = !DILocation(line: 1478, column: 7, scope: !3337)
!3505 = !DILocation(line: 1479, column: 12, scope: !3506)
!3506 = distinct !DILexicalBlock(scope: !3502, file: !2104, line: 1478, column: 40)
!3507 = !DILocation(line: 1479, column: 4, scope: !3506)
!3508 = !DILocation(line: 1479, column: 24, scope: !3506)
!3509 = !DILocation(line: 1484, column: 19, scope: !3510)
!3510 = distinct !DILexicalBlock(scope: !3506, file: !2104, line: 1479, column: 24)
!3511 = !DILocation(line: 1484, column: 5, scope: !3510)
!3512 = !DILocation(line: 1484, column: 12, scope: !3510)
!3513 = !DILocation(line: 1484, column: 17, scope: !3510)
!3514 = !DILocation(line: 1485, column: 5, scope: !3510)
!3515 = !DILocation(line: 1492, column: 20, scope: !3516)
!3516 = distinct !DILexicalBlock(scope: !3517, file: !2104, line: 1491, column: 12)
!3517 = distinct !DILexicalBlock(scope: !3510, file: !2104, line: 1487, column: 9)
!3518 = !DILocation(line: 1492, column: 6, scope: !3516)
!3519 = !DILocation(line: 1492, column: 13, scope: !3516)
!3520 = !DILocation(line: 1492, column: 18, scope: !3516)
!3521 = !DILocation(line: 1494, column: 5, scope: !3510)
!3522 = !DILocation(line: 1497, column: 23, scope: !3510)
!3523 = !DILocation(line: 1496, column: 5, scope: !3510)
!3524 = !DILocation(line: 1496, column: 12, scope: !3510)
!3525 = !DILocation(line: 1496, column: 17, scope: !3510)
!3526 = !DILocation(line: 1498, column: 5, scope: !3510)
!3527 = !DILocation(line: 1501, column: 23, scope: !3510)
!3528 = !DILocation(line: 1500, column: 5, scope: !3510)
!3529 = !DILocation(line: 1500, column: 12, scope: !3510)
!3530 = !DILocation(line: 1500, column: 17, scope: !3510)
!3531 = !DILocation(line: 1502, column: 5, scope: !3510)
!3532 = !DILocation(line: 1513, column: 23, scope: !3510)
!3533 = !DILocation(line: 1513, column: 6, scope: !3510)
!3534 = !DILocation(line: 1512, column: 5, scope: !3510)
!3535 = !DILocation(line: 1512, column: 12, scope: !3510)
!3536 = !DILocation(line: 1512, column: 17, scope: !3510)
!3537 = !DILocation(line: 1514, column: 5, scope: !3510)
!3538 = !DILocation(line: 1516, column: 8, scope: !3539)
!3539 = distinct !DILexicalBlock(scope: !3506, file: !2104, line: 1516, column: 8)
!3540 = !DILocation(line: 1516, column: 19, scope: !3539)
!3541 = !DILocation(line: 1516, column: 8, scope: !3506)
!3542 = !DILocation(line: 1517, column: 32, scope: !3543)
!3543 = distinct !DILexicalBlock(scope: !3539, file: !2104, line: 1516, column: 33)
!3544 = !DILocation(line: 1517, column: 39, scope: !3543)
!3545 = !DILocation(line: 1517, column: 19, scope: !3543)
!3546 = !DILocation(line: 1517, column: 5, scope: !3543)
!3547 = !DILocation(line: 1517, column: 12, scope: !3543)
!3548 = !DILocation(line: 1517, column: 17, scope: !3543)
!3549 = !DILocation(line: 1518, column: 4, scope: !3543)
!3550 = !DILocation(line: 1518, column: 15, scope: !3551)
!3551 = distinct !DILexicalBlock(scope: !3539, file: !2104, line: 1518, column: 15)
!3552 = !DILocation(line: 1518, column: 26, scope: !3551)
!3553 = !DILocation(line: 1518, column: 15, scope: !3539)
!3554 = !DILocation(line: 1519, column: 26, scope: !3555)
!3555 = distinct !DILexicalBlock(scope: !3551, file: !2104, line: 1518, column: 39)
!3556 = !DILocation(line: 1519, column: 33, scope: !3555)
!3557 = !DILocation(line: 1519, column: 19, scope: !3555)
!3558 = !DILocation(line: 1519, column: 5, scope: !3555)
!3559 = !DILocation(line: 1519, column: 12, scope: !3555)
!3560 = !DILocation(line: 1519, column: 17, scope: !3555)
!3561 = !DILocation(line: 1520, column: 4, scope: !3555)
!3562 = !DILocation(line: 1521, column: 3, scope: !3506)
!3563 = !DILocation(line: 1521, column: 14, scope: !3564)
!3564 = distinct !DILexicalBlock(scope: !3502, file: !2104, line: 1521, column: 14)
!3565 = !DILocation(line: 1521, column: 28, scope: !3564)
!3566 = !DILocation(line: 1521, column: 14, scope: !3502)
!3567 = !DILocation(line: 1522, column: 12, scope: !3568)
!3568 = distinct !DILexicalBlock(scope: !3564, file: !2104, line: 1521, column: 47)
!3569 = !DILocation(line: 1522, column: 4, scope: !3568)
!3570 = !DILocation(line: 1522, column: 24, scope: !3568)
!3571 = !DILocation(line: 1527, column: 19, scope: !3572)
!3572 = distinct !DILexicalBlock(scope: !3568, file: !2104, line: 1522, column: 24)
!3573 = !DILocation(line: 1527, column: 5, scope: !3572)
!3574 = !DILocation(line: 1527, column: 12, scope: !3572)
!3575 = !DILocation(line: 1527, column: 17, scope: !3572)
!3576 = !DILocation(line: 1528, column: 5, scope: !3572)
!3577 = !DILocation(line: 1531, column: 13, scope: !3578)
!3578 = distinct !DILexicalBlock(scope: !3572, file: !2104, line: 1530, column: 9)
!3579 = !DILocation(line: 1531, column: 19, scope: !3578)
!3580 = !DILocation(line: 1531, column: 29, scope: !3578)
!3581 = !DILocation(line: 1530, column: 9, scope: !3572)
!3582 = !DILocation(line: 1532, column: 29, scope: !3583)
!3583 = distinct !DILexicalBlock(scope: !3578, file: !2104, line: 1531, column: 38)
!3584 = !DILocation(line: 1532, column: 20, scope: !3583)
!3585 = !DILocation(line: 1532, column: 6, scope: !3583)
!3586 = !DILocation(line: 1532, column: 13, scope: !3583)
!3587 = !DILocation(line: 1532, column: 18, scope: !3583)
!3588 = !DILocation(line: 1534, column: 5, scope: !3583)
!3589 = !DILocation(line: 1535, column: 20, scope: !3590)
!3590 = distinct !DILexicalBlock(scope: !3578, file: !2104, line: 1534, column: 12)
!3591 = !DILocation(line: 1535, column: 6, scope: !3590)
!3592 = !DILocation(line: 1535, column: 13, scope: !3590)
!3593 = !DILocation(line: 1535, column: 18, scope: !3590)
!3594 = !DILocation(line: 1537, column: 5, scope: !3572)
!3595 = !DILocation(line: 1540, column: 23, scope: !3572)
!3596 = !DILocation(line: 1539, column: 5, scope: !3572)
!3597 = !DILocation(line: 1539, column: 12, scope: !3572)
!3598 = !DILocation(line: 1539, column: 17, scope: !3572)
!3599 = !DILocation(line: 1542, column: 5, scope: !3572)
!3600 = !DILocation(line: 1545, column: 23, scope: !3572)
!3601 = !DILocation(line: 1544, column: 5, scope: !3572)
!3602 = !DILocation(line: 1544, column: 12, scope: !3572)
!3603 = !DILocation(line: 1544, column: 17, scope: !3572)
!3604 = !DILocation(line: 1547, column: 5, scope: !3572)
!3605 = !DILocation(line: 1551, column: 23, scope: !3572)
!3606 = !DILocation(line: 1551, column: 6, scope: !3572)
!3607 = !DILocation(line: 1550, column: 5, scope: !3572)
!3608 = !DILocation(line: 1550, column: 12, scope: !3572)
!3609 = !DILocation(line: 1550, column: 17, scope: !3572)
!3610 = !DILocation(line: 1552, column: 5, scope: !3572)
!3611 = !DILocation(line: 1554, column: 8, scope: !3612)
!3612 = distinct !DILexicalBlock(scope: !3568, file: !2104, line: 1554, column: 8)
!3613 = !DILocation(line: 1554, column: 19, scope: !3612)
!3614 = !DILocation(line: 1554, column: 8, scope: !3568)
!3615 = !DILocation(line: 1555, column: 34, scope: !3616)
!3616 = distinct !DILexicalBlock(scope: !3612, file: !2104, line: 1554, column: 33)
!3617 = !DILocation(line: 1555, column: 41, scope: !3616)
!3618 = !DILocation(line: 1555, column: 19, scope: !3616)
!3619 = !DILocation(line: 1555, column: 5, scope: !3616)
!3620 = !DILocation(line: 1555, column: 12, scope: !3616)
!3621 = !DILocation(line: 1555, column: 17, scope: !3616)
!3622 = !DILocation(line: 1556, column: 4, scope: !3616)
!3623 = !DILocation(line: 1556, column: 15, scope: !3624)
!3624 = distinct !DILexicalBlock(scope: !3612, file: !2104, line: 1556, column: 15)
!3625 = !DILocation(line: 1556, column: 26, scope: !3624)
!3626 = !DILocation(line: 1556, column: 15, scope: !3612)
!3627 = !DILocation(line: 1557, column: 35, scope: !3628)
!3628 = distinct !DILexicalBlock(scope: !3624, file: !2104, line: 1556, column: 39)
!3629 = !DILocation(line: 1557, column: 42, scope: !3628)
!3630 = !DILocation(line: 1557, column: 19, scope: !3628)
!3631 = !DILocation(line: 1557, column: 5, scope: !3628)
!3632 = !DILocation(line: 1557, column: 12, scope: !3628)
!3633 = !DILocation(line: 1557, column: 17, scope: !3628)
!3634 = !DILocation(line: 1558, column: 4, scope: !3628)
!3635 = !DILocation(line: 1559, column: 3, scope: !3568)
!3636 = !DILocation(line: 1559, column: 14, scope: !3637)
!3637 = distinct !DILexicalBlock(scope: !3564, file: !2104, line: 1559, column: 14)
!3638 = !DILocation(line: 1559, column: 28, scope: !3637)
!3639 = !DILocation(line: 1559, column: 14, scope: !3564)
!3640 = !DILocation(line: 1560, column: 8, scope: !3641)
!3641 = distinct !DILexicalBlock(scope: !3642, file: !2104, line: 1560, column: 8)
!3642 = distinct !DILexicalBlock(scope: !3637, file: !2104, line: 1559, column: 45)
!3643 = !DILocation(line: 1560, column: 19, scope: !3641)
!3644 = !DILocation(line: 1560, column: 8, scope: !3642)
!3645 = !DILocation(line: 1561, column: 19, scope: !3646)
!3646 = distinct !DILexicalBlock(scope: !3641, file: !2104, line: 1560, column: 38)
!3647 = !DILocation(line: 1561, column: 5, scope: !3646)
!3648 = !DILocation(line: 1561, column: 12, scope: !3646)
!3649 = !DILocation(line: 1561, column: 17, scope: !3646)
!3650 = !DILocation(line: 1562, column: 4, scope: !3646)
!3651 = !DILocation(line: 1563, column: 18, scope: !3652)
!3652 = distinct !DILexicalBlock(scope: !3641, file: !2104, line: 1562, column: 11)
!3653 = !DILocation(line: 1563, column: 5, scope: !3652)
!3654 = !DILocation(line: 1563, column: 12, scope: !3652)
!3655 = !DILocation(line: 1563, column: 16, scope: !3652)
!3656 = !DILocation(line: 1565, column: 3, scope: !3642)
!3657 = !DILocation(line: 1565, column: 14, scope: !3658)
!3658 = distinct !DILexicalBlock(scope: !3637, file: !2104, line: 1565, column: 14)
!3659 = !DILocation(line: 1565, column: 28, scope: !3658)
!3660 = !DILocation(line: 1565, column: 14, scope: !3637)
!3661 = !DILocation(line: 1566, column: 17, scope: !3662)
!3662 = distinct !DILexicalBlock(scope: !3658, file: !2104, line: 1565, column: 46)
!3663 = !DILocation(line: 1566, column: 4, scope: !3662)
!3664 = !DILocation(line: 1566, column: 11, scope: !3662)
!3665 = !DILocation(line: 1566, column: 15, scope: !3662)
!3666 = !DILocation(line: 1567, column: 3, scope: !3662)
!3667 = !DILocation(line: 1574, column: 7, scope: !3668)
!3668 = distinct !DILexicalBlock(scope: !3337, file: !2104, line: 1574, column: 7)
!3669 = !DILocation(line: 1574, column: 13, scope: !3668)
!3670 = !DILocation(line: 1574, column: 21, scope: !3668)
!3671 = !DILocation(line: 1574, column: 24, scope: !3668)
!3672 = !DILocation(line: 1574, column: 30, scope: !3668)
!3673 = !DILocation(line: 1574, column: 7, scope: !3337)
!3674 = !DILocation(line: 1575, column: 4, scope: !3675)
!3675 = distinct !DILexicalBlock(scope: !3668, file: !2104, line: 1574, column: 43)
!3676 = !DILocalVariable(name: "rc", scope: !3677, file: !2104, line: 1575, type: !103)
!3677 = distinct !DILexicalBlock(scope: !3675, file: !2104, line: 1575, column: 4)
!3678 = !DILocation(line: 1575, column: 4, scope: !3677)
!3679 = !DILocation(line: 1575, column: 4, scope: !3680)
!3680 = distinct !DILexicalBlock(scope: !3677, file: !2104, line: 1575, column: 4)
!3681 = !DILocation(line: 1575, column: 4, scope: !3682)
!3682 = distinct !DILexicalBlock(scope: !3680, file: !2104, line: 1575, column: 4)
!3683 = !DILocation(line: 1576, column: 4, scope: !3675)
!3684 = !DILocation(line: 1582, column: 11, scope: !3337)
!3685 = !DILocation(line: 1582, column: 17, scope: !3337)
!3686 = !DILocation(line: 1582, column: 3, scope: !3337)
!3687 = !DILocation(line: 1584, column: 4, scope: !3688)
!3688 = distinct !DILexicalBlock(scope: !3337, file: !2104, line: 1582, column: 28)
!3689 = !DILocalVariable(name: "rc", scope: !3690, file: !2104, line: 1584, type: !103)
!3690 = distinct !DILexicalBlock(scope: !3688, file: !2104, line: 1584, column: 4)
!3691 = !DILocation(line: 1584, column: 4, scope: !3690)
!3692 = !DILocation(line: 1584, column: 4, scope: !3693)
!3693 = distinct !DILexicalBlock(scope: !3690, file: !2104, line: 1584, column: 4)
!3694 = !DILocation(line: 1584, column: 4, scope: !3695)
!3695 = distinct !DILexicalBlock(scope: !3693, file: !2104, line: 1584, column: 4)
!3696 = !DILocation(line: 1585, column: 4, scope: !3688)
!3697 = !DILocation(line: 1587, column: 24, scope: !3698)
!3698 = distinct !DILexicalBlock(scope: !3688, file: !2104, line: 1586, column: 13)
!3699 = !DILocation(line: 1587, column: 31, scope: !3698)
!3700 = !DILocation(line: 1587, column: 8, scope: !3698)
!3701 = !DILocalVariable(name: "len", scope: !3698, file: !2104, line: 1589, type: !217)
!3702 = !DILocation(line: 1589, column: 11, scope: !3698)
!3703 = !DILocation(line: 1591, column: 8, scope: !3704)
!3704 = distinct !DILexicalBlock(scope: !3698, file: !2104, line: 1591, column: 8)
!3705 = !DILocation(line: 1591, column: 18, scope: !3704)
!3706 = !DILocation(line: 1591, column: 8, scope: !3698)
!3707 = !DILocation(line: 1592, column: 19, scope: !3708)
!3708 = distinct !DILexicalBlock(scope: !3704, file: !2104, line: 1591, column: 24)
!3709 = !DILocation(line: 1592, column: 24, scope: !3708)
!3710 = !DILocation(line: 1592, column: 11, scope: !3708)
!3711 = !DILocation(line: 1592, column: 9, scope: !3708)
!3712 = !DILocation(line: 1593, column: 4, scope: !3708)
!3713 = !DILocation(line: 1594, column: 18, scope: !3714)
!3714 = distinct !DILexicalBlock(scope: !3704, file: !2104, line: 1593, column: 11)
!3715 = !DILocation(line: 1594, column: 11, scope: !3714)
!3716 = !DILocation(line: 1594, column: 9, scope: !3714)
!3717 = !DILocation(line: 1597, column: 10, scope: !3698)
!3718 = !DILocation(line: 1597, column: 16, scope: !3698)
!3719 = !DILocation(line: 1597, column: 14, scope: !3698)
!3720 = !DILocation(line: 1597, column: 8, scope: !3698)
!3721 = !DILocation(line: 1598, column: 14, scope: !3698)
!3722 = !DILocation(line: 1600, column: 4, scope: !3698)
!3723 = !DILocation(line: 1603, column: 10, scope: !3688)
!3724 = !DILocation(line: 1603, column: 8, scope: !3688)
!3725 = !DILocation(line: 1604, column: 44, scope: !3688)
!3726 = !DILocation(line: 1604, column: 51, scope: !3688)
!3727 = !DILocation(line: 1604, column: 13, scope: !3688)
!3728 = !DILocation(line: 1604, column: 4, scope: !3688)
!3729 = !DILocation(line: 1604, column: 11, scope: !3688)
!3730 = !DILocation(line: 1605, column: 10, scope: !3688)
!3731 = !DILocation(line: 1605, column: 14, scope: !3688)
!3732 = !DILocation(line: 1605, column: 8, scope: !3688)
!3733 = !DILocation(line: 1606, column: 4, scope: !3688)
!3734 = !DILocation(line: 1609, column: 8, scope: !3735)
!3735 = distinct !DILexicalBlock(scope: !3688, file: !2104, line: 1609, column: 8)
!3736 = !DILocation(line: 1609, column: 14, scope: !3735)
!3737 = !DILocation(line: 1609, column: 8, scope: !3688)
!3738 = !DILocation(line: 1610, column: 10, scope: !3739)
!3739 = distinct !DILexicalBlock(scope: !3735, file: !2104, line: 1609, column: 25)
!3740 = !DILocation(line: 1611, column: 4, scope: !3739)
!3741 = !DILocation(line: 1611, column: 15, scope: !3742)
!3742 = distinct !DILexicalBlock(scope: !3735, file: !2104, line: 1611, column: 15)
!3743 = !DILocation(line: 1611, column: 21, scope: !3742)
!3744 = !DILocation(line: 1611, column: 15, scope: !3735)
!3745 = !DILocation(line: 1612, column: 10, scope: !3746)
!3746 = distinct !DILexicalBlock(scope: !3742, file: !2104, line: 1611, column: 33)
!3747 = !DILocation(line: 1613, column: 4, scope: !3746)
!3748 = !DILocation(line: 1619, column: 11, scope: !3688)
!3749 = !DILocation(line: 1619, column: 18, scope: !3688)
!3750 = !DILocation(line: 1619, column: 9, scope: !3688)
!3751 = !DILocation(line: 1620, column: 8, scope: !3752)
!3752 = distinct !DILexicalBlock(scope: !3688, file: !2104, line: 1620, column: 8)
!3753 = !DILocation(line: 1620, column: 13, scope: !3752)
!3754 = !DILocation(line: 1620, column: 8, scope: !3688)
!3755 = !DILocation(line: 1621, column: 10, scope: !3756)
!3756 = distinct !DILexicalBlock(scope: !3752, file: !2104, line: 1620, column: 18)
!3757 = !DILocation(line: 1622, column: 37, scope: !3756)
!3758 = !DILocation(line: 1622, column: 36, scope: !3756)
!3759 = !DILocation(line: 1622, column: 5, scope: !3756)
!3760 = !DILocation(line: 1622, column: 12, scope: !3756)
!3761 = !DILocation(line: 1622, column: 17, scope: !3756)
!3762 = !DILocation(line: 1623, column: 4, scope: !3756)
!3763 = !DILocation(line: 1624, column: 36, scope: !3764)
!3764 = distinct !DILexicalBlock(scope: !3752, file: !2104, line: 1623, column: 11)
!3765 = !DILocation(line: 1624, column: 5, scope: !3764)
!3766 = !DILocation(line: 1624, column: 12, scope: !3764)
!3767 = !DILocation(line: 1624, column: 17, scope: !3764)
!3768 = !DILocation(line: 1620, column: 15, scope: !3752)
!3769 = !DILocation(line: 1632, column: 22, scope: !3688)
!3770 = !DILocation(line: 1632, column: 29, scope: !3688)
!3771 = !DILocation(line: 1632, column: 35, scope: !3688)
!3772 = !DILocation(line: 1632, column: 41, scope: !3688)
!3773 = !DILocation(line: 1632, column: 46, scope: !3688)
!3774 = !DILocation(line: 1632, column: 10, scope: !3688)
!3775 = !DILocation(line: 1632, column: 8, scope: !3688)
!3776 = !DILocation(line: 1632, column: 4, scope: !3688)
!3777 = !DILabel(scope: !3688, name: "prec_int_pad0", file: !2104, line: 1634)
!3778 = !DILocation(line: 1634, column: 3, scope: !3688)
!3779 = !DILocation(line: 1640, column: 8, scope: !3780)
!3780 = distinct !DILexicalBlock(scope: !3688, file: !2104, line: 1640, column: 8)
!3781 = !DILocation(line: 1640, column: 18, scope: !3780)
!3782 = !DILocation(line: 1640, column: 8, scope: !3688)
!3783 = !DILocalVariable(name: "len", scope: !3784, file: !2104, line: 1641, type: !217)
!3784 = distinct !DILexicalBlock(scope: !3780, file: !2104, line: 1640, column: 24)
!3785 = !DILocation(line: 1641, column: 12, scope: !3784)
!3786 = !DILocation(line: 1641, column: 18, scope: !3784)
!3787 = !DILocation(line: 1641, column: 24, scope: !3784)
!3788 = !DILocation(line: 1641, column: 22, scope: !3784)
!3789 = !DILocation(line: 1646, column: 5, scope: !3784)
!3790 = !DILocation(line: 1646, column: 11, scope: !3784)
!3791 = !DILocation(line: 1646, column: 21, scope: !3784)
!3792 = !DILocation(line: 1649, column: 9, scope: !3793)
!3793 = distinct !DILexicalBlock(scope: !3784, file: !2104, line: 1649, column: 9)
!3794 = !DILocation(line: 1649, column: 23, scope: !3793)
!3795 = !DILocation(line: 1649, column: 13, scope: !3793)
!3796 = !DILocation(line: 1649, column: 9, scope: !3784)
!3797 = !DILocation(line: 1650, column: 25, scope: !3798)
!3798 = distinct !DILexicalBlock(scope: !3793, file: !2104, line: 1649, column: 34)
!3799 = !DILocation(line: 1650, column: 42, scope: !3798)
!3800 = !DILocation(line: 1650, column: 35, scope: !3798)
!3801 = !DILocation(line: 1650, column: 6, scope: !3798)
!3802 = !DILocation(line: 1650, column: 12, scope: !3798)
!3803 = !DILocation(line: 1650, column: 23, scope: !3798)
!3804 = !DILocation(line: 1651, column: 5, scope: !3798)
!3805 = !DILocation(line: 1652, column: 4, scope: !3784)
!3806 = !DILocation(line: 1654, column: 4, scope: !3688)
!3807 = !DILocation(line: 1660, column: 8, scope: !3808)
!3808 = distinct !DILexicalBlock(scope: !3688, file: !2104, line: 1660, column: 8)
!3809 = !DILocation(line: 1660, column: 15, scope: !3808)
!3810 = !DILocation(line: 1660, column: 19, scope: !3808)
!3811 = !DILocation(line: 1660, column: 8, scope: !3688)
!3812 = !DILocation(line: 1661, column: 34, scope: !3813)
!3813 = distinct !DILexicalBlock(scope: !3808, file: !2104, line: 1660, column: 28)
!3814 = !DILocation(line: 1661, column: 41, scope: !3813)
!3815 = !DILocation(line: 1661, column: 23, scope: !3813)
!3816 = !DILocation(line: 1661, column: 46, scope: !3813)
!3817 = !DILocation(line: 1662, column: 9, scope: !3813)
!3818 = !DILocation(line: 1662, column: 14, scope: !3813)
!3819 = !DILocation(line: 1661, column: 11, scope: !3813)
!3820 = !DILocation(line: 1661, column: 9, scope: !3813)
!3821 = !DILocation(line: 1665, column: 5, scope: !3813)
!3822 = !DILocation(line: 1665, column: 11, scope: !3813)
!3823 = !DILocation(line: 1665, column: 22, scope: !3813)
!3824 = !DILocation(line: 1666, column: 5, scope: !3813)
!3825 = !DILocation(line: 1666, column: 11, scope: !3813)
!3826 = !DILocation(line: 1666, column: 21, scope: !3813)
!3827 = !DILocation(line: 1668, column: 5, scope: !3813)
!3828 = !DILocation(line: 1671, column: 8, scope: !3688)
!3829 = !DILocation(line: 1672, column: 10, scope: !3688)
!3830 = !DILocation(line: 1672, column: 14, scope: !3688)
!3831 = !DILocation(line: 1672, column: 8, scope: !3688)
!3832 = !DILocation(line: 1674, column: 4, scope: !3688)
!3833 = !DILocation(line: 1677, column: 17, scope: !3834)
!3834 = distinct !DILexicalBlock(scope: !3835, file: !2104, line: 1676, column: 49)
!3835 = distinct !DILexicalBlock(scope: !3688, file: !2104, line: 1676, column: 8)
!3836 = !DILocation(line: 1677, column: 23, scope: !3834)
!3837 = !DILocation(line: 1677, column: 30, scope: !3834)
!3838 = !DILocation(line: 1677, column: 35, scope: !3834)
!3839 = !DILocation(line: 1677, column: 5, scope: !3834)
!3840 = !DILocation(line: 1680, column: 4, scope: !3688)
!3841 = !DILocation(line: 1687, column: 4, scope: !3688)
!3842 = !DILocation(line: 1693, column: 4, scope: !3688)
!3843 = !DILocation(line: 1699, column: 7, scope: !3844)
!3844 = distinct !DILexicalBlock(scope: !3337, file: !2104, line: 1699, column: 7)
!3845 = !DILocation(line: 1699, column: 11, scope: !3844)
!3846 = !DILocation(line: 1699, column: 7, scope: !3337)
!3847 = !DILocation(line: 1700, column: 4, scope: !3848)
!3848 = distinct !DILexicalBlock(scope: !3844, file: !2104, line: 1699, column: 20)
!3849 = !DILocalVariable(name: "nj_len", scope: !3337, file: !2104, line: 1722, type: !217)
!3850 = !DILocation(line: 1722, column: 10, scope: !3337)
!3851 = !DILocation(line: 1722, column: 20, scope: !3337)
!3852 = !DILocation(line: 1722, column: 26, scope: !3337)
!3853 = !DILocation(line: 1722, column: 24, scope: !3337)
!3854 = !DILocalVariable(name: "pad_len", scope: !3337, file: !2104, line: 1723, type: !103)
!3855 = !DILocation(line: 1723, column: 7, scope: !3337)
!3856 = !DILocation(line: 1725, column: 7, scope: !3857)
!3857 = distinct !DILexicalBlock(scope: !3337, file: !2104, line: 1725, column: 7)
!3858 = !DILocation(line: 1725, column: 12, scope: !3857)
!3859 = !DILocation(line: 1725, column: 7, scope: !3337)
!3860 = !DILocation(line: 1726, column: 11, scope: !3861)
!3861 = distinct !DILexicalBlock(scope: !3857, file: !2104, line: 1725, column: 18)
!3862 = !DILocation(line: 1727, column: 3, scope: !3861)
!3863 = !DILocation(line: 1729, column: 7, scope: !3864)
!3864 = distinct !DILexicalBlock(scope: !3337, file: !2104, line: 1729, column: 7)
!3865 = !DILocation(line: 1729, column: 13, scope: !3864)
!3866 = !DILocation(line: 1729, column: 7, scope: !3337)
!3867 = !DILocation(line: 1730, column: 11, scope: !3868)
!3868 = distinct !DILexicalBlock(scope: !3864, file: !2104, line: 1729, column: 25)
!3869 = !DILocation(line: 1731, column: 3, scope: !3868)
!3870 = !DILocation(line: 1731, column: 14, scope: !3871)
!3871 = distinct !DILexicalBlock(scope: !3864, file: !2104, line: 1731, column: 14)
!3872 = !DILocation(line: 1731, column: 20, scope: !3871)
!3873 = !DILocation(line: 1731, column: 14, scope: !3864)
!3874 = !DILocation(line: 1732, column: 11, scope: !3875)
!3875 = distinct !DILexicalBlock(scope: !3871, file: !2104, line: 1731, column: 31)
!3876 = !DILocation(line: 1733, column: 3, scope: !3875)
!3877 = !DILocation(line: 1735, column: 13, scope: !3337)
!3878 = !DILocation(line: 1735, column: 19, scope: !3337)
!3879 = !DILocation(line: 1735, column: 10, scope: !3337)
!3880 = !DILocation(line: 1736, column: 7, scope: !3881)
!3881 = distinct !DILexicalBlock(scope: !3337, file: !2104, line: 1736, column: 7)
!3882 = !DILocation(line: 1736, column: 13, scope: !3881)
!3883 = !DILocation(line: 1736, column: 7, scope: !3337)
!3884 = !DILocation(line: 1737, column: 14, scope: !3885)
!3885 = distinct !DILexicalBlock(scope: !3881, file: !2104, line: 1736, column: 21)
!3886 = !DILocation(line: 1737, column: 20, scope: !3885)
!3887 = !DILocation(line: 1737, column: 11, scope: !3885)
!3888 = !DILocation(line: 1738, column: 3, scope: !3885)
!3889 = !DILocation(line: 1747, column: 7, scope: !3890)
!3890 = distinct !DILexicalBlock(scope: !3337, file: !2104, line: 1747, column: 7)
!3891 = !DILocation(line: 1747, column: 13, scope: !3890)
!3892 = !DILocation(line: 1747, column: 7, scope: !3337)
!3893 = !DILocation(line: 1748, column: 18, scope: !3894)
!3894 = distinct !DILexicalBlock(scope: !3890, file: !2104, line: 1747, column: 18)
!3895 = !DILocation(line: 1748, column: 10, scope: !3894)
!3896 = !DILocation(line: 1750, column: 9, scope: !3897)
!3897 = distinct !DILexicalBlock(scope: !3894, file: !2104, line: 1750, column: 8)
!3898 = !DILocation(line: 1750, column: 15, scope: !3897)
!3899 = !DILocation(line: 1750, column: 8, scope: !3894)
!3900 = !DILocalVariable(name: "pad", scope: !3901, file: !2104, line: 1751, type: !237)
!3901 = distinct !DILexicalBlock(scope: !3897, file: !2104, line: 1750, column: 26)
!3902 = !DILocation(line: 1751, column: 10, scope: !3901)
!3903 = !DILocation(line: 1756, column: 9, scope: !3904)
!3904 = distinct !DILexicalBlock(scope: !3901, file: !2104, line: 1756, column: 9)
!3905 = !DILocation(line: 1756, column: 15, scope: !3904)
!3906 = !DILocation(line: 1756, column: 9, scope: !3901)
!3907 = !DILocation(line: 1757, column: 10, scope: !3908)
!3908 = distinct !DILexicalBlock(scope: !3909, file: !2104, line: 1757, column: 10)
!3909 = distinct !DILexicalBlock(scope: !3904, file: !2104, line: 1756, column: 26)
!3910 = !DILocation(line: 1757, column: 15, scope: !3908)
!3911 = !DILocation(line: 1757, column: 10, scope: !3909)
!3912 = !DILocation(line: 1758, column: 7, scope: !3913)
!3913 = distinct !DILexicalBlock(scope: !3908, file: !2104, line: 1757, column: 21)
!3914 = !DILocalVariable(name: "rc", scope: !3915, file: !2104, line: 1758, type: !103)
!3915 = distinct !DILexicalBlock(scope: !3913, file: !2104, line: 1758, column: 7)
!3916 = !DILocation(line: 1758, column: 7, scope: !3915)
!3917 = !DILocation(line: 1758, column: 7, scope: !3918)
!3918 = distinct !DILexicalBlock(scope: !3915, file: !2104, line: 1758, column: 7)
!3919 = !DILocation(line: 1758, column: 7, scope: !3920)
!3920 = distinct !DILexicalBlock(scope: !3918, file: !2104, line: 1758, column: 7)
!3921 = !DILocation(line: 1759, column: 12, scope: !3913)
!3922 = !DILocation(line: 1760, column: 6, scope: !3913)
!3923 = !DILocation(line: 1761, column: 10, scope: !3909)
!3924 = !DILocation(line: 1762, column: 5, scope: !3909)
!3925 = !DILocation(line: 1764, column: 5, scope: !3901)
!3926 = !DILocation(line: 1764, column: 17, scope: !3901)
!3927 = !DILocation(line: 1764, column: 20, scope: !3901)
!3928 = !DILocation(line: 1765, column: 6, scope: !3929)
!3929 = distinct !DILexicalBlock(scope: !3901, file: !2104, line: 1764, column: 25)
!3930 = !DILocalVariable(name: "rc", scope: !3931, file: !2104, line: 1765, type: !103)
!3931 = distinct !DILexicalBlock(scope: !3929, file: !2104, line: 1765, column: 6)
!3932 = !DILocation(line: 1765, column: 6, scope: !3931)
!3933 = !DILocation(line: 1765, column: 6, scope: !3934)
!3934 = distinct !DILexicalBlock(scope: !3931, file: !2104, line: 1765, column: 6)
!3935 = !DILocation(line: 1765, column: 6, scope: !3936)
!3936 = distinct !DILexicalBlock(scope: !3934, file: !2104, line: 1765, column: 6)
!3937 = distinct !{!3937, !3925, !3938}
!3938 = !DILocation(line: 1766, column: 5, scope: !3901)
!3939 = !DILocation(line: 1767, column: 4, scope: !3901)
!3940 = !DILocation(line: 1768, column: 3, scope: !3894)
!3941 = !DILocation(line: 1773, column: 7, scope: !3942)
!3942 = distinct !DILexicalBlock(scope: !3337, file: !2104, line: 1773, column: 7)
!3943 = !DILocation(line: 1773, column: 12, scope: !3942)
!3944 = !DILocation(line: 1773, column: 7, scope: !3337)
!3945 = !DILocation(line: 1774, column: 4, scope: !3946)
!3946 = distinct !DILexicalBlock(scope: !3942, file: !2104, line: 1773, column: 18)
!3947 = !DILocalVariable(name: "rc", scope: !3948, file: !2104, line: 1774, type: !103)
!3948 = distinct !DILexicalBlock(scope: !3946, file: !2104, line: 1774, column: 4)
!3949 = !DILocation(line: 1774, column: 4, scope: !3948)
!3950 = !DILocation(line: 1774, column: 4, scope: !3951)
!3951 = distinct !DILexicalBlock(scope: !3948, file: !2104, line: 1774, column: 4)
!3952 = !DILocation(line: 1774, column: 4, scope: !3953)
!3953 = distinct !DILexicalBlock(scope: !3951, file: !2104, line: 1774, column: 4)
!3954 = !DILocation(line: 1775, column: 3, scope: !3946)
!3955 = !DILocation(line: 1818, column: 8, scope: !3956)
!3956 = distinct !DILexicalBlock(scope: !3957, file: !2104, line: 1818, column: 8)
!3957 = distinct !DILexicalBlock(scope: !3958, file: !2104, line: 1817, column: 10)
!3958 = distinct !DILexicalBlock(scope: !3337, file: !2104, line: 1777, column: 7)
!3959 = !DILocation(line: 1818, column: 14, scope: !3956)
!3960 = !DILocation(line: 1818, column: 27, scope: !3956)
!3961 = !DILocation(line: 1818, column: 33, scope: !3956)
!3962 = !DILocation(line: 1818, column: 25, scope: !3956)
!3963 = !DILocation(line: 1818, column: 8, scope: !3957)
!3964 = !DILocation(line: 1819, column: 5, scope: !3965)
!3965 = distinct !DILexicalBlock(scope: !3956, file: !2104, line: 1818, column: 44)
!3966 = !DILocalVariable(name: "rc", scope: !3967, file: !2104, line: 1819, type: !103)
!3967 = distinct !DILexicalBlock(scope: !3965, file: !2104, line: 1819, column: 5)
!3968 = !DILocation(line: 1819, column: 5, scope: !3967)
!3969 = !DILocation(line: 1819, column: 5, scope: !3970)
!3970 = distinct !DILexicalBlock(scope: !3967, file: !2104, line: 1819, column: 5)
!3971 = !DILocation(line: 1819, column: 5, scope: !3972)
!3972 = distinct !DILexicalBlock(scope: !3970, file: !2104, line: 1819, column: 5)
!3973 = !DILocation(line: 1820, column: 4, scope: !3965)
!3974 = !DILocation(line: 1822, column: 8, scope: !3975)
!3975 = distinct !DILexicalBlock(scope: !3957, file: !2104, line: 1822, column: 8)
!3976 = !DILocation(line: 1822, column: 14, scope: !3975)
!3977 = !DILocation(line: 1822, column: 8, scope: !3957)
!3978 = !DILocation(line: 1823, column: 5, scope: !3979)
!3979 = distinct !DILexicalBlock(scope: !3975, file: !2104, line: 1822, column: 26)
!3980 = !DILocalVariable(name: "rc", scope: !3981, file: !2104, line: 1823, type: !103)
!3981 = distinct !DILexicalBlock(scope: !3979, file: !2104, line: 1823, column: 5)
!3982 = !DILocation(line: 1823, column: 5, scope: !3981)
!3983 = !DILocation(line: 1823, column: 5, scope: !3984)
!3984 = distinct !DILexicalBlock(scope: !3981, file: !2104, line: 1823, column: 5)
!3985 = !DILocation(line: 1823, column: 5, scope: !3986)
!3986 = distinct !DILexicalBlock(scope: !3984, file: !2104, line: 1823, column: 5)
!3987 = !DILocation(line: 1824, column: 4, scope: !3979)
!3988 = !DILocation(line: 1826, column: 14, scope: !3957)
!3989 = !DILocation(line: 1826, column: 20, scope: !3957)
!3990 = !DILocation(line: 1826, column: 12, scope: !3957)
!3991 = !DILocation(line: 1827, column: 4, scope: !3957)
!3992 = !DILocation(line: 1827, column: 18, scope: !3957)
!3993 = !DILocation(line: 1827, column: 21, scope: !3957)
!3994 = !DILocation(line: 1828, column: 5, scope: !3995)
!3995 = distinct !DILexicalBlock(scope: !3957, file: !2104, line: 1827, column: 26)
!3996 = !DILocalVariable(name: "rc", scope: !3997, file: !2104, line: 1828, type: !103)
!3997 = distinct !DILexicalBlock(scope: !3995, file: !2104, line: 1828, column: 5)
!3998 = !DILocation(line: 1828, column: 5, scope: !3997)
!3999 = !DILocation(line: 1828, column: 5, scope: !4000)
!4000 = distinct !DILexicalBlock(scope: !3997, file: !2104, line: 1828, column: 5)
!4001 = !DILocation(line: 1828, column: 5, scope: !4002)
!4002 = distinct !DILexicalBlock(scope: !4000, file: !2104, line: 1828, column: 5)
!4003 = distinct !{!4003, !3991, !4004}
!4004 = !DILocation(line: 1829, column: 4, scope: !3957)
!4005 = !DILocation(line: 1831, column: 4, scope: !3957)
!4006 = !DILocalVariable(name: "rc", scope: !4007, file: !2104, line: 1831, type: !103)
!4007 = distinct !DILexicalBlock(scope: !3957, file: !2104, line: 1831, column: 4)
!4008 = !DILocation(line: 1831, column: 4, scope: !4007)
!4009 = !DILocation(line: 1831, column: 4, scope: !4010)
!4010 = distinct !DILexicalBlock(scope: !4007, file: !2104, line: 1831, column: 4)
!4011 = !DILocation(line: 1831, column: 4, scope: !4012)
!4012 = distinct !DILexicalBlock(scope: !4010, file: !2104, line: 1831, column: 4)
!4013 = !DILocation(line: 1835, column: 3, scope: !3337)
!4014 = !DILocation(line: 1835, column: 10, scope: !3337)
!4015 = !DILocation(line: 1835, column: 16, scope: !3337)
!4016 = !DILocation(line: 1836, column: 4, scope: !4017)
!4017 = distinct !DILexicalBlock(scope: !3337, file: !2104, line: 1835, column: 21)
!4018 = !DILocalVariable(name: "rc", scope: !4019, file: !2104, line: 1836, type: !103)
!4019 = distinct !DILexicalBlock(scope: !4017, file: !2104, line: 1836, column: 4)
!4020 = !DILocation(line: 1836, column: 4, scope: !4019)
!4021 = !DILocation(line: 1836, column: 4, scope: !4022)
!4022 = distinct !DILexicalBlock(scope: !4019, file: !2104, line: 1836, column: 4)
!4023 = !DILocation(line: 1836, column: 4, scope: !4024)
!4024 = distinct !DILexicalBlock(scope: !4022, file: !2104, line: 1836, column: 4)
!4025 = !DILocation(line: 1837, column: 4, scope: !4017)
!4026 = distinct !{!4026, !4013, !4027}
!4027 = !DILocation(line: 1838, column: 3, scope: !3337)
!4028 = !DILocation(line: 1841, column: 9, scope: !3297)
!4029 = !DILocation(line: 1841, column: 2, scope: !3297)
!4030 = !DILocation(line: 1844, column: 1, scope: !3297)
!4031 = distinct !DISubprogram(name: "extract_conversion", scope: !2104, file: !2104, line: 642, type: !4032, scopeLine: 644, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2100, retainedNodes: !223)
!4032 = !DISubroutineType(types: !4033)
!4033 = !{!256, !3401, !256}
!4034 = !DILocalVariable(name: "conv", arg: 1, scope: !4031, file: !2104, line: 642, type: !3401)
!4035 = !DILocation(line: 642, column: 65, scope: !4031)
!4036 = !DILocalVariable(name: "sp", arg: 2, scope: !4031, file: !2104, line: 643, type: !256)
!4037 = !DILocation(line: 643, column: 23, scope: !4031)
!4038 = !DILocation(line: 645, column: 3, scope: !4031)
!4039 = !DILocation(line: 645, column: 30, scope: !4031)
!4040 = !DILocation(line: 645, column: 10, scope: !4031)
!4041 = !DILocation(line: 653, column: 2, scope: !4031)
!4042 = !DILocation(line: 654, column: 7, scope: !4043)
!4043 = distinct !DILexicalBlock(scope: !4031, file: !2104, line: 654, column: 6)
!4044 = !DILocation(line: 654, column: 6, scope: !4043)
!4045 = !DILocation(line: 654, column: 10, scope: !4043)
!4046 = !DILocation(line: 654, column: 6, scope: !4031)
!4047 = !DILocation(line: 655, column: 24, scope: !4048)
!4048 = distinct !DILexicalBlock(scope: !4043, file: !2104, line: 654, column: 18)
!4049 = !DILocation(line: 655, column: 21, scope: !4048)
!4050 = !DILocation(line: 655, column: 3, scope: !4048)
!4051 = !DILocation(line: 655, column: 9, scope: !4048)
!4052 = !DILocation(line: 655, column: 19, scope: !4048)
!4053 = !DILocation(line: 656, column: 10, scope: !4048)
!4054 = !DILocation(line: 656, column: 3, scope: !4048)
!4055 = !DILocation(line: 659, column: 21, scope: !4031)
!4056 = !DILocation(line: 659, column: 27, scope: !4031)
!4057 = !DILocation(line: 659, column: 7, scope: !4031)
!4058 = !DILocation(line: 659, column: 5, scope: !4031)
!4059 = !DILocation(line: 660, column: 21, scope: !4031)
!4060 = !DILocation(line: 660, column: 27, scope: !4031)
!4061 = !DILocation(line: 660, column: 7, scope: !4031)
!4062 = !DILocation(line: 660, column: 5, scope: !4031)
!4063 = !DILocation(line: 661, column: 20, scope: !4031)
!4064 = !DILocation(line: 661, column: 26, scope: !4031)
!4065 = !DILocation(line: 661, column: 7, scope: !4031)
!4066 = !DILocation(line: 661, column: 5, scope: !4031)
!4067 = !DILocation(line: 662, column: 22, scope: !4031)
!4068 = !DILocation(line: 662, column: 28, scope: !4031)
!4069 = !DILocation(line: 662, column: 7, scope: !4031)
!4070 = !DILocation(line: 662, column: 5, scope: !4031)
!4071 = !DILocation(line: 663, column: 25, scope: !4031)
!4072 = !DILocation(line: 663, column: 31, scope: !4031)
!4073 = !DILocation(line: 663, column: 7, scope: !4031)
!4074 = !DILocation(line: 663, column: 5, scope: !4031)
!4075 = !DILocation(line: 665, column: 9, scope: !4031)
!4076 = !DILocation(line: 665, column: 2, scope: !4031)
!4077 = !DILocation(line: 666, column: 1, scope: !4031)
!4078 = distinct !DISubprogram(name: "outs", scope: !2104, file: !2104, line: 1319, type: !4079, scopeLine: 1323, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2100, retainedNodes: !223)
!4079 = !DISubroutineType(types: !4080)
!4080 = !{!103, !2956, !102, !256, !256}
!4081 = !DILocalVariable(name: "out", arg: 1, scope: !4078, file: !2104, line: 1319, type: !2956)
!4082 = !DILocation(line: 1319, column: 29, scope: !4078)
!4083 = !DILocalVariable(name: "ctx", arg: 2, scope: !4078, file: !2104, line: 1320, type: !102)
!4084 = !DILocation(line: 1320, column: 9, scope: !4078)
!4085 = !DILocalVariable(name: "sp", arg: 3, scope: !4078, file: !2104, line: 1321, type: !256)
!4086 = !DILocation(line: 1321, column: 15, scope: !4078)
!4087 = !DILocalVariable(name: "ep", arg: 4, scope: !4078, file: !2104, line: 1322, type: !256)
!4088 = !DILocation(line: 1322, column: 15, scope: !4078)
!4089 = !DILocalVariable(name: "count", scope: !4078, file: !2104, line: 1324, type: !217)
!4090 = !DILocation(line: 1324, column: 9, scope: !4078)
!4091 = !DILocation(line: 1326, column: 2, scope: !4078)
!4092 = !DILocation(line: 1326, column: 10, scope: !4078)
!4093 = !DILocation(line: 1326, column: 15, scope: !4078)
!4094 = !DILocation(line: 1326, column: 13, scope: !4078)
!4095 = !DILocation(line: 1326, column: 19, scope: !4078)
!4096 = !DILocation(line: 1326, column: 24, scope: !4078)
!4097 = !DILocation(line: 1326, column: 27, scope: !4078)
!4098 = !DILocation(line: 1326, column: 36, scope: !4078)
!4099 = !DILocation(line: 1326, column: 40, scope: !4078)
!4100 = !DILocation(line: 1326, column: 39, scope: !4078)
!4101 = !DILocation(line: 0, scope: !4078)
!4102 = !DILocalVariable(name: "rc", scope: !4103, file: !2104, line: 1327, type: !103)
!4103 = distinct !DILexicalBlock(scope: !4078, file: !2104, line: 1326, column: 45)
!4104 = !DILocation(line: 1327, column: 7, scope: !4103)
!4105 = !DILocation(line: 1327, column: 12, scope: !4103)
!4106 = !DILocation(line: 1327, column: 24, scope: !4103)
!4107 = !DILocation(line: 1327, column: 21, scope: !4103)
!4108 = !DILocation(line: 1327, column: 16, scope: !4103)
!4109 = !DILocation(line: 1327, column: 28, scope: !4103)
!4110 = !DILocation(line: 1329, column: 7, scope: !4111)
!4111 = distinct !DILexicalBlock(scope: !4103, file: !2104, line: 1329, column: 7)
!4112 = !DILocation(line: 1329, column: 10, scope: !4111)
!4113 = !DILocation(line: 1329, column: 7, scope: !4103)
!4114 = !DILocation(line: 1330, column: 11, scope: !4115)
!4115 = distinct !DILexicalBlock(scope: !4111, file: !2104, line: 1329, column: 15)
!4116 = !DILocation(line: 1330, column: 4, scope: !4115)
!4117 = !DILocation(line: 1332, column: 3, scope: !4103)
!4118 = distinct !{!4118, !4091, !4119}
!4119 = !DILocation(line: 1333, column: 2, scope: !4078)
!4120 = !DILocation(line: 1335, column: 14, scope: !4078)
!4121 = !DILocation(line: 1335, column: 2, scope: !4078)
!4122 = !DILocation(line: 1336, column: 1, scope: !4078)
!4123 = distinct !DISubprogram(name: "encode_uint", scope: !2104, file: !2104, line: 788, type: !4124, scopeLine: 792, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2100, retainedNodes: !223)
!4124 = !DISubroutineType(types: !4125)
!4125 = !{!925, !2126, !3401, !925, !256}
!4126 = !DILocalVariable(name: "value", arg: 1, scope: !4123, file: !2104, line: 788, type: !2126)
!4127 = !DILocation(line: 788, column: 42, scope: !4123)
!4128 = !DILocalVariable(name: "conv", arg: 2, scope: !4123, file: !2104, line: 789, type: !3401)
!4129 = !DILocation(line: 789, column: 24, scope: !4123)
!4130 = !DILocalVariable(name: "bps", arg: 3, scope: !4123, file: !2104, line: 790, type: !925)
!4131 = !DILocation(line: 790, column: 11, scope: !4123)
!4132 = !DILocalVariable(name: "bpe", arg: 4, scope: !4123, file: !2104, line: 791, type: !256)
!4133 = !DILocation(line: 791, column: 17, scope: !4123)
!4134 = !DILocalVariable(name: "upcase", scope: !4123, file: !2104, line: 793, type: !743)
!4135 = !DILocation(line: 793, column: 7, scope: !4123)
!4136 = !DILocation(line: 793, column: 29, scope: !4123)
!4137 = !DILocation(line: 793, column: 35, scope: !4123)
!4138 = !DILocation(line: 793, column: 24, scope: !4123)
!4139 = !DILocation(line: 793, column: 16, scope: !4123)
!4140 = !DILocalVariable(name: "radix", scope: !4123, file: !2104, line: 794, type: !4141)
!4141 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !32)
!4142 = !DILocation(line: 794, column: 21, scope: !4123)
!4143 = !DILocation(line: 794, column: 46, scope: !4123)
!4144 = !DILocation(line: 794, column: 52, scope: !4123)
!4145 = !DILocation(line: 794, column: 29, scope: !4123)
!4146 = !DILocalVariable(name: "bp", scope: !4123, file: !2104, line: 795, type: !925)
!4147 = !DILocation(line: 795, column: 8, scope: !4123)
!4148 = !DILocation(line: 795, column: 13, scope: !4123)
!4149 = !DILocation(line: 795, column: 20, scope: !4123)
!4150 = !DILocation(line: 795, column: 26, scope: !4123)
!4151 = !DILocation(line: 795, column: 24, scope: !4123)
!4152 = !DILocation(line: 795, column: 17, scope: !4123)
!4153 = !DILocation(line: 797, column: 2, scope: !4123)
!4154 = !DILocalVariable(name: "lsv", scope: !4155, file: !2104, line: 798, type: !32)
!4155 = distinct !DILexicalBlock(scope: !4123, file: !2104, line: 797, column: 5)
!4156 = !DILocation(line: 798, column: 16, scope: !4155)
!4157 = !DILocation(line: 798, column: 37, scope: !4155)
!4158 = !DILocation(line: 798, column: 45, scope: !4155)
!4159 = !DILocation(line: 798, column: 43, scope: !4155)
!4160 = !DILocation(line: 798, column: 22, scope: !4155)
!4161 = !DILocation(line: 800, column: 12, scope: !4155)
!4162 = !DILocation(line: 800, column: 16, scope: !4155)
!4163 = !DILocation(line: 800, column: 11, scope: !4155)
!4164 = !DILocation(line: 800, column: 31, scope: !4155)
!4165 = !DILocation(line: 800, column: 29, scope: !4155)
!4166 = !DILocation(line: 801, column: 6, scope: !4155)
!4167 = !DILocation(line: 801, column: 22, scope: !4155)
!4168 = !DILocation(line: 801, column: 20, scope: !4155)
!4169 = !DILocation(line: 801, column: 26, scope: !4155)
!4170 = !DILocation(line: 801, column: 41, scope: !4155)
!4171 = !DILocation(line: 801, column: 39, scope: !4155)
!4172 = !DILocation(line: 801, column: 45, scope: !4155)
!4173 = !DILocation(line: 800, column: 4, scope: !4155)
!4174 = !DILocation(line: 800, column: 9, scope: !4155)
!4175 = !DILocation(line: 802, column: 12, scope: !4155)
!4176 = !DILocation(line: 802, column: 9, scope: !4155)
!4177 = !DILocation(line: 803, column: 2, scope: !4155)
!4178 = !DILocation(line: 803, column: 12, scope: !4123)
!4179 = !DILocation(line: 803, column: 18, scope: !4123)
!4180 = !DILocation(line: 803, column: 24, scope: !4123)
!4181 = !DILocation(line: 803, column: 28, scope: !4123)
!4182 = !DILocation(line: 803, column: 34, scope: !4123)
!4183 = !DILocation(line: 803, column: 32, scope: !4123)
!4184 = !DILocation(line: 0, scope: !4123)
!4185 = distinct !{!4185, !4153, !4186}
!4186 = !DILocation(line: 803, column: 37, scope: !4123)
!4187 = !DILocation(line: 808, column: 6, scope: !4188)
!4188 = distinct !DILexicalBlock(scope: !4123, file: !2104, line: 808, column: 6)
!4189 = !DILocation(line: 808, column: 12, scope: !4188)
!4190 = !DILocation(line: 808, column: 6, scope: !4123)
!4191 = !DILocation(line: 809, column: 7, scope: !4192)
!4192 = distinct !DILexicalBlock(scope: !4193, file: !2104, line: 809, column: 7)
!4193 = distinct !DILexicalBlock(scope: !4188, file: !2104, line: 808, column: 23)
!4194 = !DILocation(line: 809, column: 13, scope: !4192)
!4195 = !DILocation(line: 809, column: 7, scope: !4193)
!4196 = !DILocation(line: 810, column: 4, scope: !4197)
!4197 = distinct !DILexicalBlock(scope: !4192, file: !2104, line: 809, column: 19)
!4198 = !DILocation(line: 810, column: 10, scope: !4197)
!4199 = !DILocation(line: 810, column: 20, scope: !4197)
!4200 = !DILocation(line: 811, column: 3, scope: !4197)
!4201 = !DILocation(line: 811, column: 14, scope: !4202)
!4202 = distinct !DILexicalBlock(scope: !4192, file: !2104, line: 811, column: 14)
!4203 = !DILocation(line: 811, column: 20, scope: !4202)
!4204 = !DILocation(line: 811, column: 14, scope: !4192)
!4205 = !DILocation(line: 812, column: 4, scope: !4206)
!4206 = distinct !DILexicalBlock(scope: !4202, file: !2104, line: 811, column: 27)
!4207 = !DILocation(line: 812, column: 10, scope: !4206)
!4208 = !DILocation(line: 812, column: 21, scope: !4206)
!4209 = !DILocation(line: 813, column: 3, scope: !4206)
!4210 = !DILocation(line: 816, column: 2, scope: !4193)
!4211 = !DILocation(line: 818, column: 9, scope: !4123)
!4212 = !DILocation(line: 818, column: 2, scope: !4123)
!4213 = distinct !DISubprogram(name: "store_count", scope: !2104, file: !2104, line: 1280, type: !4214, scopeLine: 1283, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2100, retainedNodes: !223)
!4214 = !DISubroutineType(types: !4215)
!4215 = !{null, !4216, !102, !103}
!4216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4217, size: 32)
!4217 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3367)
!4218 = !DILocalVariable(name: "conv", arg: 1, scope: !4213, file: !2104, line: 1280, type: !4216)
!4219 = !DILocation(line: 1280, column: 57, scope: !4213)
!4220 = !DILocalVariable(name: "dp", arg: 2, scope: !4213, file: !2104, line: 1281, type: !102)
!4221 = !DILocation(line: 1281, column: 17, scope: !4213)
!4222 = !DILocalVariable(name: "count", arg: 3, scope: !4213, file: !2104, line: 1282, type: !103)
!4223 = !DILocation(line: 1282, column: 15, scope: !4213)
!4224 = !DILocation(line: 1284, column: 32, scope: !4213)
!4225 = !DILocation(line: 1284, column: 38, scope: !4213)
!4226 = !DILocation(line: 1284, column: 2, scope: !4213)
!4227 = !DILocation(line: 1286, column: 16, scope: !4228)
!4228 = distinct !DILexicalBlock(scope: !4213, file: !2104, line: 1284, column: 50)
!4229 = !DILocation(line: 1286, column: 11, scope: !4228)
!4230 = !DILocation(line: 1286, column: 4, scope: !4228)
!4231 = !DILocation(line: 1286, column: 14, scope: !4228)
!4232 = !DILocation(line: 1287, column: 3, scope: !4228)
!4233 = !DILocation(line: 1289, column: 37, scope: !4228)
!4234 = !DILocation(line: 1289, column: 24, scope: !4228)
!4235 = !DILocation(line: 1289, column: 19, scope: !4228)
!4236 = !DILocation(line: 1289, column: 22, scope: !4228)
!4237 = !DILocation(line: 1290, column: 3, scope: !4228)
!4238 = !DILocation(line: 1292, column: 25, scope: !4228)
!4239 = !DILocation(line: 1292, column: 18, scope: !4228)
!4240 = !DILocation(line: 1292, column: 13, scope: !4228)
!4241 = !DILocation(line: 1292, column: 4, scope: !4228)
!4242 = !DILocation(line: 1292, column: 16, scope: !4228)
!4243 = !DILocation(line: 1293, column: 3, scope: !4228)
!4244 = !DILocation(line: 1295, column: 23, scope: !4228)
!4245 = !DILocation(line: 1295, column: 12, scope: !4228)
!4246 = !DILocation(line: 1295, column: 4, scope: !4228)
!4247 = !DILocation(line: 1295, column: 15, scope: !4228)
!4248 = !DILocation(line: 1296, column: 3, scope: !4228)
!4249 = !DILocation(line: 1298, column: 33, scope: !4228)
!4250 = !DILocation(line: 1298, column: 22, scope: !4228)
!4251 = !DILocation(line: 1298, column: 17, scope: !4228)
!4252 = !DILocation(line: 1298, column: 4, scope: !4228)
!4253 = !DILocation(line: 1298, column: 20, scope: !4228)
!4254 = !DILocation(line: 1299, column: 3, scope: !4228)
!4255 = !DILocation(line: 1301, column: 31, scope: !4228)
!4256 = !DILocation(line: 1301, column: 21, scope: !4228)
!4257 = !DILocation(line: 1301, column: 16, scope: !4228)
!4258 = !DILocation(line: 1301, column: 4, scope: !4228)
!4259 = !DILocation(line: 1301, column: 19, scope: !4228)
!4260 = !DILocation(line: 1302, column: 3, scope: !4228)
!4261 = !DILocation(line: 1304, column: 27, scope: !4228)
!4262 = !DILocation(line: 1304, column: 14, scope: !4228)
!4263 = !DILocation(line: 1304, column: 4, scope: !4228)
!4264 = !DILocation(line: 1304, column: 17, scope: !4228)
!4265 = !DILocation(line: 1305, column: 3, scope: !4228)
!4266 = !DILocation(line: 1307, column: 33, scope: !4228)
!4267 = !DILocation(line: 1307, column: 17, scope: !4228)
!4268 = !DILocation(line: 1307, column: 4, scope: !4228)
!4269 = !DILocation(line: 1307, column: 20, scope: !4228)
!4270 = !DILocation(line: 1308, column: 3, scope: !4228)
!4271 = !DILocation(line: 1314, column: 3, scope: !4228)
!4272 = !DILocation(line: 1316, column: 1, scope: !4213)
!4273 = distinct !DISubprogram(name: "isupper", scope: !4274, file: !4274, line: 16, type: !274, scopeLine: 17, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2100, retainedNodes: !223)
!4274 = !DIFile(filename: "zephyr/lib/libc/minimal/include/ctype.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4275 = !DILocalVariable(name: "a", arg: 1, scope: !4273, file: !4274, line: 16, type: !103)
!4276 = !DILocation(line: 16, column: 31, scope: !4273)
!4277 = !DILocation(line: 18, column: 27, scope: !4273)
!4278 = !DILocation(line: 18, column: 29, scope: !4273)
!4279 = !DILocation(line: 18, column: 45, scope: !4273)
!4280 = !DILocation(line: 18, column: 2, scope: !4273)
!4281 = distinct !DISubprogram(name: "conversion_radix", scope: !2104, file: !2104, line: 761, type: !4282, scopeLine: 762, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2100, retainedNodes: !223)
!4282 = !DISubroutineType(types: !4283)
!4283 = !{!217, !237}
!4284 = !DILocalVariable(name: "specifier", arg: 1, scope: !4281, file: !2104, line: 761, type: !237)
!4285 = !DILocation(line: 761, column: 44, scope: !4281)
!4286 = !DILocation(line: 763, column: 10, scope: !4281)
!4287 = !DILocation(line: 763, column: 2, scope: !4281)
!4288 = !DILocation(line: 763, column: 21, scope: !4281)
!4289 = !DILocation(line: 768, column: 3, scope: !4290)
!4290 = distinct !DILexicalBlock(scope: !4281, file: !2104, line: 763, column: 21)
!4291 = !DILocation(line: 770, column: 3, scope: !4290)
!4292 = !DILocation(line: 774, column: 3, scope: !4290)
!4293 = !DILocation(line: 776, column: 1, scope: !4281)
!4294 = distinct !DISubprogram(name: "extract_flags", scope: !2104, file: !2104, line: 339, type: !4032, scopeLine: 341, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2100, retainedNodes: !223)
!4295 = !DILocalVariable(name: "conv", arg: 1, scope: !4294, file: !2104, line: 339, type: !3401)
!4296 = !DILocation(line: 339, column: 60, scope: !4294)
!4297 = !DILocalVariable(name: "sp", arg: 2, scope: !4294, file: !2104, line: 340, type: !256)
!4298 = !DILocation(line: 340, column: 18, scope: !4294)
!4299 = !DILocalVariable(name: "loop", scope: !4294, file: !2104, line: 342, type: !743)
!4300 = !DILocation(line: 342, column: 7, scope: !4294)
!4301 = !DILocation(line: 344, column: 2, scope: !4294)
!4302 = !DILocation(line: 345, column: 12, scope: !4303)
!4303 = distinct !DILexicalBlock(scope: !4294, file: !2104, line: 344, column: 5)
!4304 = !DILocation(line: 345, column: 11, scope: !4303)
!4305 = !DILocation(line: 345, column: 3, scope: !4303)
!4306 = !DILocation(line: 347, column: 4, scope: !4307)
!4307 = distinct !DILexicalBlock(scope: !4303, file: !2104, line: 345, column: 16)
!4308 = !DILocation(line: 347, column: 10, scope: !4307)
!4309 = !DILocation(line: 347, column: 20, scope: !4307)
!4310 = !DILocation(line: 348, column: 4, scope: !4307)
!4311 = !DILocation(line: 350, column: 4, scope: !4307)
!4312 = !DILocation(line: 350, column: 10, scope: !4307)
!4313 = !DILocation(line: 350, column: 20, scope: !4307)
!4314 = !DILocation(line: 351, column: 4, scope: !4307)
!4315 = !DILocation(line: 353, column: 4, scope: !4307)
!4316 = !DILocation(line: 353, column: 10, scope: !4307)
!4317 = !DILocation(line: 353, column: 21, scope: !4307)
!4318 = !DILocation(line: 354, column: 4, scope: !4307)
!4319 = !DILocation(line: 356, column: 4, scope: !4307)
!4320 = !DILocation(line: 356, column: 10, scope: !4307)
!4321 = !DILocation(line: 356, column: 20, scope: !4307)
!4322 = !DILocation(line: 357, column: 4, scope: !4307)
!4323 = !DILocation(line: 359, column: 4, scope: !4307)
!4324 = !DILocation(line: 359, column: 10, scope: !4307)
!4325 = !DILocation(line: 359, column: 20, scope: !4307)
!4326 = !DILocation(line: 360, column: 4, scope: !4307)
!4327 = !DILocation(line: 362, column: 9, scope: !4307)
!4328 = !DILocation(line: 363, column: 3, scope: !4307)
!4329 = !DILocation(line: 364, column: 7, scope: !4330)
!4330 = distinct !DILexicalBlock(scope: !4303, file: !2104, line: 364, column: 7)
!4331 = !DILocation(line: 364, column: 7, scope: !4303)
!4332 = !DILocation(line: 365, column: 4, scope: !4333)
!4333 = distinct !DILexicalBlock(scope: !4330, file: !2104, line: 364, column: 13)
!4334 = !DILocation(line: 366, column: 3, scope: !4333)
!4335 = !DILocation(line: 367, column: 2, scope: !4303)
!4336 = !DILocation(line: 367, column: 11, scope: !4294)
!4337 = distinct !{!4337, !4301, !4338}
!4338 = !DILocation(line: 367, column: 15, scope: !4294)
!4339 = !DILocation(line: 370, column: 6, scope: !4340)
!4340 = distinct !DILexicalBlock(scope: !4294, file: !2104, line: 370, column: 6)
!4341 = !DILocation(line: 370, column: 12, scope: !4340)
!4342 = !DILocation(line: 370, column: 22, scope: !4340)
!4343 = !DILocation(line: 370, column: 25, scope: !4340)
!4344 = !DILocation(line: 370, column: 31, scope: !4340)
!4345 = !DILocation(line: 370, column: 6, scope: !4294)
!4346 = !DILocation(line: 371, column: 3, scope: !4347)
!4347 = distinct !DILexicalBlock(scope: !4340, file: !2104, line: 370, column: 42)
!4348 = !DILocation(line: 371, column: 9, scope: !4347)
!4349 = !DILocation(line: 371, column: 19, scope: !4347)
!4350 = !DILocation(line: 372, column: 2, scope: !4347)
!4351 = !DILocation(line: 376, column: 9, scope: !4294)
!4352 = !DILocation(line: 376, column: 2, scope: !4294)
!4353 = distinct !DISubprogram(name: "extract_width", scope: !2104, file: !2104, line: 388, type: !4032, scopeLine: 390, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2100, retainedNodes: !223)
!4354 = !DILocalVariable(name: "conv", arg: 1, scope: !4353, file: !2104, line: 388, type: !3401)
!4355 = !DILocation(line: 388, column: 60, scope: !4353)
!4356 = !DILocalVariable(name: "sp", arg: 2, scope: !4353, file: !2104, line: 389, type: !256)
!4357 = !DILocation(line: 389, column: 18, scope: !4353)
!4358 = !DILocation(line: 391, column: 2, scope: !4353)
!4359 = !DILocation(line: 391, column: 8, scope: !4353)
!4360 = !DILocation(line: 391, column: 22, scope: !4353)
!4361 = !DILocation(line: 393, column: 7, scope: !4362)
!4362 = distinct !DILexicalBlock(scope: !4353, file: !2104, line: 393, column: 6)
!4363 = !DILocation(line: 393, column: 6, scope: !4362)
!4364 = !DILocation(line: 393, column: 10, scope: !4362)
!4365 = !DILocation(line: 393, column: 6, scope: !4353)
!4366 = !DILocation(line: 394, column: 3, scope: !4367)
!4367 = distinct !DILexicalBlock(scope: !4362, file: !2104, line: 393, column: 18)
!4368 = !DILocation(line: 394, column: 9, scope: !4367)
!4369 = !DILocation(line: 394, column: 20, scope: !4367)
!4370 = !DILocation(line: 395, column: 10, scope: !4367)
!4371 = !DILocation(line: 395, column: 3, scope: !4367)
!4372 = !DILocalVariable(name: "wp", scope: !4353, file: !2104, line: 398, type: !256)
!4373 = !DILocation(line: 398, column: 14, scope: !4353)
!4374 = !DILocation(line: 398, column: 19, scope: !4353)
!4375 = !DILocalVariable(name: "width", scope: !4353, file: !2104, line: 399, type: !217)
!4376 = !DILocation(line: 399, column: 9, scope: !4353)
!4377 = !DILocation(line: 399, column: 17, scope: !4353)
!4378 = !DILocation(line: 401, column: 6, scope: !4379)
!4379 = distinct !DILexicalBlock(scope: !4353, file: !2104, line: 401, column: 6)
!4380 = !DILocation(line: 401, column: 12, scope: !4379)
!4381 = !DILocation(line: 401, column: 9, scope: !4379)
!4382 = !DILocation(line: 401, column: 6, scope: !4353)
!4383 = !DILocation(line: 402, column: 3, scope: !4384)
!4384 = distinct !DILexicalBlock(scope: !4379, file: !2104, line: 401, column: 16)
!4385 = !DILocation(line: 402, column: 9, scope: !4384)
!4386 = !DILocation(line: 402, column: 23, scope: !4384)
!4387 = !DILocation(line: 403, column: 23, scope: !4384)
!4388 = !DILocation(line: 403, column: 3, scope: !4384)
!4389 = !DILocation(line: 403, column: 9, scope: !4384)
!4390 = !DILocation(line: 403, column: 21, scope: !4384)
!4391 = !DILocation(line: 404, column: 26, scope: !4384)
!4392 = !DILocation(line: 404, column: 32, scope: !4384)
!4393 = !DILocation(line: 404, column: 44, scope: !4384)
!4394 = !DILocation(line: 405, column: 11, scope: !4384)
!4395 = !DILocation(line: 405, column: 15, scope: !4384)
!4396 = !DILocation(line: 405, column: 32, scope: !4384)
!4397 = !DILocation(line: 405, column: 38, scope: !4384)
!4398 = !DILocation(line: 405, column: 21, scope: !4384)
!4399 = !DILocation(line: 404, column: 3, scope: !4384)
!4400 = !DILocation(line: 404, column: 9, scope: !4384)
!4401 = !DILocation(line: 404, column: 21, scope: !4384)
!4402 = !DILocation(line: 406, column: 2, scope: !4384)
!4403 = !DILocation(line: 408, column: 9, scope: !4353)
!4404 = !DILocation(line: 408, column: 2, scope: !4353)
!4405 = !DILocation(line: 409, column: 1, scope: !4353)
!4406 = distinct !DISubprogram(name: "extract_prec", scope: !2104, file: !2104, line: 420, type: !4032, scopeLine: 422, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2100, retainedNodes: !223)
!4407 = !DILocalVariable(name: "conv", arg: 1, scope: !4406, file: !2104, line: 420, type: !3401)
!4408 = !DILocation(line: 420, column: 59, scope: !4406)
!4409 = !DILocalVariable(name: "sp", arg: 2, scope: !4406, file: !2104, line: 421, type: !256)
!4410 = !DILocation(line: 421, column: 24, scope: !4406)
!4411 = !DILocation(line: 423, column: 25, scope: !4406)
!4412 = !DILocation(line: 423, column: 24, scope: !4406)
!4413 = !DILocation(line: 423, column: 28, scope: !4406)
!4414 = !DILocation(line: 423, column: 2, scope: !4406)
!4415 = !DILocation(line: 423, column: 8, scope: !4406)
!4416 = !DILocation(line: 423, column: 21, scope: !4406)
!4417 = !DILocation(line: 425, column: 7, scope: !4418)
!4418 = distinct !DILexicalBlock(scope: !4406, file: !2104, line: 425, column: 6)
!4419 = !DILocation(line: 425, column: 13, scope: !4418)
!4420 = !DILocation(line: 425, column: 6, scope: !4406)
!4421 = !DILocation(line: 426, column: 10, scope: !4422)
!4422 = distinct !DILexicalBlock(scope: !4418, file: !2104, line: 425, column: 27)
!4423 = !DILocation(line: 426, column: 3, scope: !4422)
!4424 = !DILocation(line: 428, column: 2, scope: !4406)
!4425 = !DILocation(line: 430, column: 7, scope: !4426)
!4426 = distinct !DILexicalBlock(scope: !4406, file: !2104, line: 430, column: 6)
!4427 = !DILocation(line: 430, column: 6, scope: !4426)
!4428 = !DILocation(line: 430, column: 10, scope: !4426)
!4429 = !DILocation(line: 430, column: 6, scope: !4406)
!4430 = !DILocation(line: 431, column: 3, scope: !4431)
!4431 = distinct !DILexicalBlock(scope: !4426, file: !2104, line: 430, column: 18)
!4432 = !DILocation(line: 431, column: 9, scope: !4431)
!4433 = !DILocation(line: 431, column: 19, scope: !4431)
!4434 = !DILocation(line: 432, column: 10, scope: !4431)
!4435 = !DILocation(line: 432, column: 3, scope: !4431)
!4436 = !DILocalVariable(name: "prec", scope: !4406, file: !2104, line: 435, type: !217)
!4437 = !DILocation(line: 435, column: 9, scope: !4406)
!4438 = !DILocation(line: 435, column: 16, scope: !4406)
!4439 = !DILocation(line: 437, column: 21, scope: !4406)
!4440 = !DILocation(line: 437, column: 2, scope: !4406)
!4441 = !DILocation(line: 437, column: 8, scope: !4406)
!4442 = !DILocation(line: 437, column: 19, scope: !4406)
!4443 = !DILocation(line: 438, column: 25, scope: !4406)
!4444 = !DILocation(line: 438, column: 31, scope: !4406)
!4445 = !DILocation(line: 438, column: 42, scope: !4406)
!4446 = !DILocation(line: 439, column: 10, scope: !4406)
!4447 = !DILocation(line: 439, column: 14, scope: !4406)
!4448 = !DILocation(line: 439, column: 30, scope: !4406)
!4449 = !DILocation(line: 439, column: 36, scope: !4406)
!4450 = !DILocation(line: 439, column: 19, scope: !4406)
!4451 = !DILocation(line: 438, column: 2, scope: !4406)
!4452 = !DILocation(line: 438, column: 8, scope: !4406)
!4453 = !DILocation(line: 438, column: 20, scope: !4406)
!4454 = !DILocation(line: 441, column: 9, scope: !4406)
!4455 = !DILocation(line: 441, column: 2, scope: !4406)
!4456 = !DILocation(line: 442, column: 1, scope: !4406)
!4457 = distinct !DISubprogram(name: "extract_length", scope: !2104, file: !2104, line: 453, type: !4032, scopeLine: 455, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2100, retainedNodes: !223)
!4458 = !DILocalVariable(name: "conv", arg: 1, scope: !4457, file: !2104, line: 453, type: !3401)
!4459 = !DILocation(line: 453, column: 61, scope: !4457)
!4460 = !DILocalVariable(name: "sp", arg: 2, scope: !4457, file: !2104, line: 454, type: !256)
!4461 = !DILocation(line: 454, column: 19, scope: !4457)
!4462 = !DILocation(line: 456, column: 11, scope: !4457)
!4463 = !DILocation(line: 456, column: 10, scope: !4457)
!4464 = !DILocation(line: 456, column: 2, scope: !4457)
!4465 = !DILocation(line: 458, column: 8, scope: !4466)
!4466 = distinct !DILexicalBlock(scope: !4467, file: !2104, line: 458, column: 7)
!4467 = distinct !DILexicalBlock(scope: !4457, file: !2104, line: 456, column: 15)
!4468 = !DILocation(line: 458, column: 7, scope: !4466)
!4469 = !DILocation(line: 458, column: 13, scope: !4466)
!4470 = !DILocation(line: 458, column: 7, scope: !4467)
!4471 = !DILocation(line: 459, column: 4, scope: !4472)
!4472 = distinct !DILexicalBlock(scope: !4466, file: !2104, line: 458, column: 21)
!4473 = !DILocation(line: 459, column: 10, scope: !4472)
!4474 = !DILocation(line: 459, column: 21, scope: !4472)
!4475 = !DILocation(line: 460, column: 4, scope: !4472)
!4476 = !DILocation(line: 461, column: 3, scope: !4472)
!4477 = !DILocation(line: 462, column: 4, scope: !4478)
!4478 = distinct !DILexicalBlock(scope: !4466, file: !2104, line: 461, column: 10)
!4479 = !DILocation(line: 462, column: 10, scope: !4478)
!4480 = !DILocation(line: 462, column: 21, scope: !4478)
!4481 = !DILocation(line: 464, column: 3, scope: !4467)
!4482 = !DILocation(line: 466, column: 8, scope: !4483)
!4483 = distinct !DILexicalBlock(scope: !4467, file: !2104, line: 466, column: 7)
!4484 = !DILocation(line: 466, column: 7, scope: !4483)
!4485 = !DILocation(line: 466, column: 13, scope: !4483)
!4486 = !DILocation(line: 466, column: 7, scope: !4467)
!4487 = !DILocation(line: 467, column: 4, scope: !4488)
!4488 = distinct !DILexicalBlock(scope: !4483, file: !2104, line: 466, column: 21)
!4489 = !DILocation(line: 467, column: 10, scope: !4488)
!4490 = !DILocation(line: 467, column: 21, scope: !4488)
!4491 = !DILocation(line: 468, column: 4, scope: !4488)
!4492 = !DILocation(line: 469, column: 3, scope: !4488)
!4493 = !DILocation(line: 470, column: 4, scope: !4494)
!4494 = distinct !DILexicalBlock(scope: !4483, file: !2104, line: 469, column: 10)
!4495 = !DILocation(line: 470, column: 10, scope: !4494)
!4496 = !DILocation(line: 470, column: 21, scope: !4494)
!4497 = !DILocation(line: 472, column: 3, scope: !4467)
!4498 = !DILocation(line: 474, column: 3, scope: !4467)
!4499 = !DILocation(line: 474, column: 9, scope: !4467)
!4500 = !DILocation(line: 474, column: 20, scope: !4467)
!4501 = !DILocation(line: 475, column: 3, scope: !4467)
!4502 = !DILocation(line: 476, column: 3, scope: !4467)
!4503 = !DILocation(line: 478, column: 3, scope: !4467)
!4504 = !DILocation(line: 478, column: 9, scope: !4467)
!4505 = !DILocation(line: 478, column: 20, scope: !4467)
!4506 = !DILocation(line: 479, column: 3, scope: !4467)
!4507 = !DILocation(line: 480, column: 3, scope: !4467)
!4508 = !DILocation(line: 482, column: 3, scope: !4467)
!4509 = !DILocation(line: 482, column: 9, scope: !4467)
!4510 = !DILocation(line: 482, column: 20, scope: !4467)
!4511 = !DILocation(line: 483, column: 3, scope: !4467)
!4512 = !DILocation(line: 484, column: 3, scope: !4467)
!4513 = !DILocation(line: 486, column: 3, scope: !4467)
!4514 = !DILocation(line: 486, column: 9, scope: !4467)
!4515 = !DILocation(line: 486, column: 20, scope: !4467)
!4516 = !DILocation(line: 487, column: 3, scope: !4467)
!4517 = !DILocation(line: 492, column: 3, scope: !4467)
!4518 = !DILocation(line: 492, column: 9, scope: !4467)
!4519 = !DILocation(line: 492, column: 21, scope: !4467)
!4520 = !DILocation(line: 493, column: 3, scope: !4467)
!4521 = !DILocation(line: 495, column: 3, scope: !4467)
!4522 = !DILocation(line: 495, column: 9, scope: !4467)
!4523 = !DILocation(line: 495, column: 20, scope: !4467)
!4524 = !DILocation(line: 496, column: 3, scope: !4467)
!4525 = !DILocation(line: 498, column: 9, scope: !4457)
!4526 = !DILocation(line: 498, column: 2, scope: !4457)
!4527 = distinct !DISubprogram(name: "extract_specifier", scope: !2104, file: !2104, line: 513, type: !4032, scopeLine: 515, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2100, retainedNodes: !223)
!4528 = !DILocalVariable(name: "conv", arg: 1, scope: !4527, file: !2104, line: 513, type: !3401)
!4529 = !DILocation(line: 513, column: 64, scope: !4527)
!4530 = !DILocalVariable(name: "sp", arg: 2, scope: !4527, file: !2104, line: 514, type: !256)
!4531 = !DILocation(line: 514, column: 22, scope: !4527)
!4532 = !DILocalVariable(name: "unsupported", scope: !4527, file: !2104, line: 516, type: !743)
!4533 = !DILocation(line: 516, column: 7, scope: !4527)
!4534 = !DILocation(line: 518, column: 23, scope: !4527)
!4535 = !DILocation(line: 518, column: 20, scope: !4527)
!4536 = !DILocation(line: 518, column: 2, scope: !4527)
!4537 = !DILocation(line: 518, column: 8, scope: !4527)
!4538 = !DILocation(line: 518, column: 18, scope: !4527)
!4539 = !DILocation(line: 520, column: 10, scope: !4527)
!4540 = !DILocation(line: 520, column: 16, scope: !4527)
!4541 = !DILocation(line: 520, column: 2, scope: !4527)
!4542 = !DILocation(line: 522, column: 3, scope: !4543)
!4543 = distinct !DILexicalBlock(scope: !4527, file: !2104, line: 520, column: 27)
!4544 = !DILocation(line: 522, column: 9, scope: !4543)
!4545 = !DILocation(line: 522, column: 23, scope: !4543)
!4546 = !DILocation(line: 523, column: 3, scope: !4543)
!4547 = !DILocation(line: 525, column: 3, scope: !4543)
!4548 = !DILocation(line: 525, column: 9, scope: !4543)
!4549 = !DILocation(line: 525, column: 23, scope: !4543)
!4550 = !DILabel(scope: !4543, name: "int_conv", file: !2104, line: 526)
!4551 = !DILocation(line: 526, column: 1, scope: !4543)
!4552 = !DILocation(line: 528, column: 7, scope: !4553)
!4553 = distinct !DILexicalBlock(scope: !4543, file: !2104, line: 528, column: 7)
!4554 = !DILocation(line: 528, column: 13, scope: !4553)
!4555 = !DILocation(line: 528, column: 24, scope: !4553)
!4556 = !DILocation(line: 528, column: 7, scope: !4543)
!4557 = !DILocation(line: 529, column: 4, scope: !4558)
!4558 = distinct !DILexicalBlock(scope: !4553, file: !2104, line: 528, column: 43)
!4559 = !DILocation(line: 529, column: 10, scope: !4558)
!4560 = !DILocation(line: 529, column: 18, scope: !4558)
!4561 = !DILocation(line: 530, column: 3, scope: !4558)
!4562 = !DILocation(line: 535, column: 7, scope: !4563)
!4563 = distinct !DILexicalBlock(scope: !4543, file: !2104, line: 535, column: 7)
!4564 = !DILocation(line: 535, column: 13, scope: !4563)
!4565 = !DILocation(line: 535, column: 23, scope: !4563)
!4566 = !DILocation(line: 535, column: 7, scope: !4543)
!4567 = !DILocation(line: 536, column: 19, scope: !4568)
!4568 = distinct !DILexicalBlock(scope: !4563, file: !2104, line: 535, column: 31)
!4569 = !DILocation(line: 536, column: 25, scope: !4568)
!4570 = !DILocation(line: 536, column: 36, scope: !4568)
!4571 = !DILocation(line: 536, column: 16, scope: !4568)
!4572 = !DILocation(line: 537, column: 3, scope: !4568)
!4573 = !DILocation(line: 567, column: 3, scope: !4543)
!4574 = !DILocation(line: 570, column: 3, scope: !4543)
!4575 = !DILocation(line: 570, column: 9, scope: !4543)
!4576 = !DILocation(line: 570, column: 23, scope: !4543)
!4577 = !DILocation(line: 574, column: 16, scope: !4578)
!4578 = distinct !DILexicalBlock(scope: !4579, file: !2104, line: 573, column: 48)
!4579 = distinct !DILexicalBlock(scope: !4543, file: !2104, line: 573, column: 7)
!4580 = !DILocation(line: 575, column: 4, scope: !4578)
!4581 = !DILocation(line: 603, column: 3, scope: !4543)
!4582 = !DILocation(line: 603, column: 9, scope: !4543)
!4583 = !DILocation(line: 603, column: 23, scope: !4543)
!4584 = !DILocation(line: 605, column: 7, scope: !4585)
!4585 = distinct !DILexicalBlock(scope: !4543, file: !2104, line: 605, column: 7)
!4586 = !DILocation(line: 605, column: 13, scope: !4585)
!4587 = !DILocation(line: 605, column: 24, scope: !4585)
!4588 = !DILocation(line: 605, column: 7, scope: !4543)
!4589 = !DILocation(line: 606, column: 16, scope: !4590)
!4590 = distinct !DILexicalBlock(scope: !4585, file: !2104, line: 605, column: 43)
!4591 = !DILocation(line: 607, column: 3, scope: !4590)
!4592 = !DILocation(line: 608, column: 3, scope: !4543)
!4593 = !DILocation(line: 612, column: 3, scope: !4543)
!4594 = !DILocation(line: 612, column: 9, scope: !4543)
!4595 = !DILocation(line: 612, column: 23, scope: !4543)
!4596 = !DILocation(line: 619, column: 7, scope: !4597)
!4597 = distinct !DILexicalBlock(scope: !4543, file: !2104, line: 619, column: 7)
!4598 = !DILocation(line: 619, column: 13, scope: !4597)
!4599 = !DILocation(line: 619, column: 24, scope: !4597)
!4600 = !DILocation(line: 619, column: 7, scope: !4543)
!4601 = !DILocation(line: 620, column: 16, scope: !4602)
!4602 = distinct !DILexicalBlock(scope: !4597, file: !2104, line: 619, column: 40)
!4603 = !DILocation(line: 621, column: 3, scope: !4602)
!4604 = !DILocation(line: 622, column: 3, scope: !4543)
!4605 = !DILocation(line: 625, column: 3, scope: !4543)
!4606 = !DILocation(line: 625, column: 9, scope: !4543)
!4607 = !DILocation(line: 625, column: 17, scope: !4543)
!4608 = !DILocation(line: 626, column: 3, scope: !4543)
!4609 = !DILocation(line: 629, column: 23, scope: !4527)
!4610 = !DILocation(line: 629, column: 2, scope: !4527)
!4611 = !DILocation(line: 629, column: 8, scope: !4527)
!4612 = !DILocation(line: 629, column: 20, scope: !4527)
!4613 = !DILocation(line: 631, column: 9, scope: !4527)
!4614 = !DILocation(line: 631, column: 2, scope: !4527)
!4615 = distinct !DISubprogram(name: "extract_decimal", scope: !2104, file: !2104, line: 318, type: !4616, scopeLine: 319, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2100, retainedNodes: !223)
!4616 = !DISubroutineType(types: !4617)
!4617 = !{!217, !4618}
!4618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !256, size: 32)
!4619 = !DILocalVariable(name: "str", arg: 1, scope: !4615, file: !2104, line: 318, type: !4618)
!4620 = !DILocation(line: 318, column: 44, scope: !4615)
!4621 = !DILocalVariable(name: "sp", scope: !4615, file: !2104, line: 320, type: !256)
!4622 = !DILocation(line: 320, column: 14, scope: !4615)
!4623 = !DILocation(line: 320, column: 20, scope: !4615)
!4624 = !DILocation(line: 320, column: 19, scope: !4615)
!4625 = !DILocalVariable(name: "val", scope: !4615, file: !2104, line: 321, type: !217)
!4626 = !DILocation(line: 321, column: 9, scope: !4615)
!4627 = !DILocation(line: 323, column: 2, scope: !4615)
!4628 = !DILocation(line: 323, column: 38, scope: !4615)
!4629 = !DILocation(line: 323, column: 37, scope: !4615)
!4630 = !DILocation(line: 323, column: 17, scope: !4615)
!4631 = !DILocation(line: 323, column: 9, scope: !4615)
!4632 = !DILocation(line: 324, column: 15, scope: !4633)
!4633 = distinct !DILexicalBlock(scope: !4615, file: !2104, line: 323, column: 43)
!4634 = !DILocation(line: 324, column: 13, scope: !4633)
!4635 = !DILocation(line: 324, column: 24, scope: !4633)
!4636 = !DILocation(line: 324, column: 21, scope: !4633)
!4637 = !DILocation(line: 324, column: 19, scope: !4633)
!4638 = !DILocation(line: 324, column: 27, scope: !4633)
!4639 = !DILocation(line: 324, column: 7, scope: !4633)
!4640 = distinct !{!4640, !4627, !4641}
!4641 = !DILocation(line: 325, column: 2, scope: !4615)
!4642 = !DILocation(line: 326, column: 9, scope: !4615)
!4643 = !DILocation(line: 326, column: 3, scope: !4615)
!4644 = !DILocation(line: 326, column: 7, scope: !4615)
!4645 = !DILocation(line: 327, column: 9, scope: !4615)
!4646 = !DILocation(line: 327, column: 2, scope: !4615)
!4647 = distinct !DISubprogram(name: "isdigit", scope: !4274, file: !4274, line: 43, type: !274, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2100, retainedNodes: !223)
!4648 = !DILocalVariable(name: "a", arg: 1, scope: !4647, file: !4274, line: 43, type: !103)
!4649 = !DILocation(line: 43, column: 31, scope: !4647)
!4650 = !DILocation(line: 45, column: 27, scope: !4647)
!4651 = !DILocation(line: 45, column: 29, scope: !4647)
!4652 = !DILocation(line: 45, column: 45, scope: !4647)
!4653 = !DILocation(line: 45, column: 2, scope: !4647)
!4654 = distinct !DISubprogram(name: "_ConfigAbsSyms", scope: !4655, file: !4655, line: 9, type: !253, scopeLine: 9, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2138, retainedNodes: !223)
!4655 = !DIFile(filename: "zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/gdbstub")
!4656 = !DILocation(line: 11, column: 1, scope: !4654)
!4657 = !{i64 2147555616, i64 2147555659, i64 2147555699}
!4658 = !DILocation(line: 12, column: 1, scope: !4654)
!4659 = !{i64 2147559843, i64 2147559886, i64 2147559926}
!4660 = !DILocation(line: 13, column: 1, scope: !4654)
!4661 = !{i64 2147560052, i64 2147560095, i64 2147560135}
!4662 = !DILocation(line: 14, column: 1, scope: !4654)
!4663 = !{i64 2147560269, i64 2147560312, i64 2147560352}
!4664 = !DILocation(line: 15, column: 1, scope: !4654)
!4665 = !{i64 2147560438, i64 2147560481, i64 2147560521}
!4666 = !DILocation(line: 16, column: 1, scope: !4654)
!4667 = !{i64 2147560623, i64 2147560666, i64 2147560706}
!4668 = !DILocation(line: 17, column: 1, scope: !4654)
!4669 = !{i64 2147560840, i64 2147560883, i64 2147560923}
!4670 = !DILocation(line: 18, column: 1, scope: !4654)
!4671 = !{i64 2147561003, i64 2147561046, i64 2147561086}
!4672 = !DILocation(line: 19, column: 1, scope: !4654)
!4673 = !{i64 2147561187, i64 2147561230, i64 2147561270}
!4674 = !DILocation(line: 20, column: 1, scope: !4654)
!4675 = !{i64 2147561367, i64 2147561410, i64 2147561450}
!4676 = !DILocation(line: 21, column: 1, scope: !4654)
!4677 = !{i64 2147561610, i64 2147561653, i64 2147561693}
!4678 = !DILocation(line: 22, column: 1, scope: !4654)
!4679 = !{i64 2147561846, i64 2147561889, i64 2147561929}
!4680 = !DILocation(line: 23, column: 1, scope: !4654)
!4681 = !{i64 2147562049, i64 2147562092, i64 2147562132}
!4682 = !DILocation(line: 24, column: 1, scope: !4654)
!4683 = !{i64 2147562252, i64 2147562295, i64 2147562335}
!4684 = !DILocation(line: 25, column: 1, scope: !4654)
!4685 = !{i64 2147562451, i64 2147562494, i64 2147562534}
!4686 = !DILocation(line: 26, column: 1, scope: !4654)
!4687 = !{i64 2147562626, i64 2147562669, i64 2147562709}
!4688 = !DILocation(line: 27, column: 1, scope: !4654)
!4689 = !{i64 2147562834, i64 2147562877, i64 2147562917}
!4690 = !DILocation(line: 28, column: 1, scope: !4654)
!4691 = !{i64 2147563038, i64 2147563081, i64 2147563121}
!4692 = !DILocation(line: 29, column: 1, scope: !4654)
!4693 = !{i64 2147563231, i64 2147563274, i64 2147563314}
!4694 = !DILocation(line: 30, column: 1, scope: !4654)
!4695 = !{i64 2147563433, i64 2147563476, i64 2147563516}
!4696 = !DILocation(line: 31, column: 1, scope: !4654)
!4697 = !{i64 2147563660, i64 2147563703, i64 2147563743}
!4698 = !DILocation(line: 32, column: 1, scope: !4654)
!4699 = !{i64 2147563875, i64 2147563918, i64 2147563958}
!4700 = !DILocation(line: 33, column: 1, scope: !4654)
!4701 = !{i64 2147564062, i64 2147564105, i64 2147564145}
!4702 = !DILocation(line: 34, column: 1, scope: !4654)
!4703 = !{i64 2147564234, i64 2147564277, i64 2147564317}
!4704 = !DILocation(line: 35, column: 1, scope: !4654)
!4705 = !{i64 2147564436, i64 2147564479, i64 2147564519}
!4706 = !DILocation(line: 36, column: 1, scope: !4654)
!4707 = !{i64 2147564635, i64 2147564678, i64 2147564718}
!4708 = !DILocation(line: 37, column: 1, scope: !4654)
!4709 = !{i64 2147564810, i64 2147564853, i64 2147564893}
!4710 = !DILocation(line: 38, column: 1, scope: !4654)
!4711 = !{i64 2147565063, i64 2147565106, i64 2147565146}
!4712 = !DILocation(line: 39, column: 1, scope: !4654)
!4713 = !{i64 2147565301, i64 2147565344, i64 2147565384}
!4714 = !DILocation(line: 40, column: 1, scope: !4654)
!4715 = !{i64 2147565536, i64 2147565579, i64 2147565619}
!4716 = !DILocation(line: 41, column: 1, scope: !4654)
!4717 = !{i64 2147565762, i64 2147565805, i64 2147565845}
!4718 = !DILocation(line: 42, column: 1, scope: !4654)
!4719 = !{i64 2147565997, i64 2147566040, i64 2147566080}
!4720 = !DILocation(line: 43, column: 1, scope: !4654)
!4721 = !{i64 2147566232, i64 2147566275, i64 2147566315}
!4722 = !DILocation(line: 44, column: 1, scope: !4654)
!4723 = !{i64 2147566473, i64 2147566516, i64 2147566556}
!4724 = !DILocation(line: 45, column: 1, scope: !4654)
!4725 = !{i64 2147566708, i64 2147566751, i64 2147566791}
!4726 = !DILocation(line: 46, column: 1, scope: !4654)
!4727 = !{i64 2147566937, i64 2147566980, i64 2147567020}
!4728 = !DILocation(line: 47, column: 1, scope: !4654)
!4729 = !{i64 2147567172, i64 2147567215, i64 2147567255}
!4730 = !DILocation(line: 48, column: 1, scope: !4654)
!4731 = !{i64 2147567422, i64 2147567465, i64 2147567505}
!4732 = !DILocation(line: 49, column: 1, scope: !4654)
!4733 = !{i64 2147567651, i64 2147567694, i64 2147567734}
!4734 = !DILocation(line: 50, column: 1, scope: !4654)
!4735 = !{i64 2147567859, i64 2147567902, i64 2147567942}
!4736 = !DILocation(line: 51, column: 1, scope: !4654)
!4737 = !{i64 2147568070, i64 2147568113, i64 2147568153}
!4738 = !DILocation(line: 52, column: 1, scope: !4654)
!4739 = !{i64 2147568305, i64 2147568348, i64 2147568388}
!4740 = !DILocation(line: 53, column: 1, scope: !4654)
!4741 = !{i64 2147568534, i64 2147568577, i64 2147568617}
!4742 = !DILocation(line: 54, column: 1, scope: !4654)
!4743 = !{i64 2147572833, i64 2147572876, i64 2147572916}
!4744 = !DILocation(line: 55, column: 1, scope: !4654)
!4745 = !{i64 2147573065, i64 2147573108, i64 2147573148}
!4746 = !DILocation(line: 56, column: 1, scope: !4654)
!4747 = !{i64 2147573291, i64 2147573334, i64 2147573374}
!4748 = !DILocation(line: 57, column: 1, scope: !4654)
!4749 = !{i64 2147573508, i64 2147573551, i64 2147573591}
!4750 = !DILocation(line: 58, column: 1, scope: !4654)
!4751 = !{i64 2147573740, i64 2147573783, i64 2147573823}
!4752 = !DILocation(line: 59, column: 1, scope: !4654)
!4753 = !{i64 2147573966, i64 2147574009, i64 2147574049}
!4754 = !DILocation(line: 60, column: 1, scope: !4654)
!4755 = !{i64 2147574180, i64 2147574223, i64 2147574263}
!4756 = !DILocation(line: 61, column: 1, scope: !4654)
!4757 = !{i64 2147574400, i64 2147574443, i64 2147574483}
!4758 = !DILocation(line: 62, column: 1, scope: !4654)
!4759 = !{i64 2147574632, i64 2147574675, i64 2147574715}
!4760 = !DILocation(line: 63, column: 1, scope: !4654)
!4761 = !{i64 2147574840, i64 2147574883, i64 2147574923}
!4762 = !DILocation(line: 64, column: 1, scope: !4654)
!4763 = !{i64 2147575045, i64 2147575088, i64 2147575128}
!4764 = !DILocation(line: 65, column: 1, scope: !4654)
!4765 = !{i64 2147575262, i64 2147575305, i64 2147575345}
!4766 = !DILocation(line: 66, column: 1, scope: !4654)
!4767 = !{i64 2147575476, i64 2147575519, i64 2147575559}
!4768 = !DILocation(line: 67, column: 1, scope: !4654)
!4769 = !{i64 2147575702, i64 2147575745, i64 2147575785}
!4770 = !DILocation(line: 68, column: 1, scope: !4654)
!4771 = !{i64 2147575922, i64 2147575965, i64 2147576005}
!4772 = !DILocation(line: 69, column: 1, scope: !4654)
!4773 = !{i64 2147576127, i64 2147576170, i64 2147576210}
!4774 = !DILocation(line: 70, column: 1, scope: !4654)
!4775 = !{i64 2147576359, i64 2147576402, i64 2147576442}
!4776 = !DILocation(line: 71, column: 1, scope: !4654)
!4777 = !{i64 2147576594, i64 2147576637, i64 2147576677}
!4778 = !DILocation(line: 72, column: 1, scope: !4654)
!4779 = !{i64 2147576844, i64 2147576887, i64 2147576927}
!4780 = !DILocation(line: 73, column: 1, scope: !4654)
!4781 = !{i64 2147577094, i64 2147577137, i64 2147577177}
!4782 = !DILocation(line: 74, column: 1, scope: !4654)
!4783 = !{i64 2147577332, i64 2147577375, i64 2147577415}
!4784 = !DILocation(line: 75, column: 1, scope: !4654)
!4785 = !{i64 2147577543, i64 2147577586, i64 2147577626}
!4786 = !DILocation(line: 76, column: 1, scope: !4654)
!4787 = !{i64 2147577760, i64 2147577803, i64 2147577843}
!4788 = !DILocation(line: 77, column: 1, scope: !4654)
!4789 = !{i64 2147577956, i64 2147577999, i64 2147578039}
!4790 = !DILocation(line: 78, column: 1, scope: !4654)
!4791 = !{i64 2147578158, i64 2147578201, i64 2147578241}
!4792 = !DILocation(line: 79, column: 1, scope: !4654)
!4793 = !{i64 2147578345, i64 2147578388, i64 2147578428}
!4794 = !DILocation(line: 80, column: 1, scope: !4654)
!4795 = !{i64 2147578535, i64 2147578578, i64 2147578618}
!4796 = !DILocation(line: 81, column: 1, scope: !4654)
!4797 = !{i64 2147578722, i64 2147578765, i64 2147578805}
!4798 = !DILocation(line: 82, column: 1, scope: !4654)
!4799 = !{i64 2147578918, i64 2147578961, i64 2147579001}
!4800 = !DILocation(line: 83, column: 1, scope: !4654)
!4801 = !{i64 2147579114, i64 2147579157, i64 2147579197}
!4802 = !DILocation(line: 84, column: 1, scope: !4654)
!4803 = !{i64 2147579325, i64 2147579368, i64 2147579408}
!4804 = !DILocation(line: 85, column: 1, scope: !4654)
!4805 = !{i64 2147579533, i64 2147579576, i64 2147579616}
!4806 = !DILocation(line: 86, column: 1, scope: !4654)
!4807 = !{i64 2147579717, i64 2147579760, i64 2147579800}
!4808 = !DILocation(line: 87, column: 1, scope: !4654)
!4809 = !{i64 2147579913, i64 2147579956, i64 2147579996}
!4810 = !DILocation(line: 88, column: 1, scope: !4654)
!4811 = !{i64 2147580106, i64 2147580149, i64 2147580189}
!4812 = !DILocation(line: 89, column: 1, scope: !4654)
!4813 = !{i64 2147580353, i64 2147580396, i64 2147580436}
!4814 = !DILocation(line: 90, column: 1, scope: !4654)
!4815 = !{i64 2147580576, i64 2147580619, i64 2147580659}
!4816 = !DILocation(line: 91, column: 1, scope: !4654)
!4817 = !{i64 2147580742, i64 2147580785, i64 2147580825}
!4818 = !DILocation(line: 92, column: 1, scope: !4654)
!4819 = !{i64 2147580926, i64 2147580969, i64 2147581009}
!4820 = !DILocation(line: 93, column: 1, scope: !4654)
!4821 = !{i64 2147581116, i64 2147581159, i64 2147581199}
!4822 = !DILocation(line: 94, column: 1, scope: !4654)
!4823 = !{i64 2147581300, i64 2147581343, i64 2147581383}
!4824 = !DILocation(line: 95, column: 1, scope: !4654)
!4825 = !{i64 2147581514, i64 2147581557, i64 2147581597}
!4826 = !DILocation(line: 96, column: 1, scope: !4654)
!4827 = !{i64 2147585786, i64 2147585829, i64 2147585869}
!4828 = !DILocation(line: 97, column: 1, scope: !4654)
!4829 = !{i64 2147586009, i64 2147586052, i64 2147586092}
!4830 = !DILocation(line: 98, column: 1, scope: !4654)
!4831 = !{i64 2147586193, i64 2147586236, i64 2147586276}
!4832 = !DILocation(line: 99, column: 1, scope: !4654)
!4833 = !{i64 2147586359, i64 2147586402, i64 2147586442}
!4834 = !DILocation(line: 100, column: 1, scope: !4654)
!4835 = !{i64 2147586540, i64 2147586583, i64 2147586623}
!4836 = !DILocation(line: 101, column: 1, scope: !4654)
!4837 = !{i64 2147586733, i64 2147586776, i64 2147586816}
!4838 = !DILocation(line: 102, column: 1, scope: !4654)
!4839 = !{i64 2147586959, i64 2147587002, i64 2147587042}
!4840 = !DILocation(line: 103, column: 1, scope: !4654)
!4841 = !{i64 2147587173, i64 2147587216, i64 2147587256}
!4842 = !DILocation(line: 104, column: 1, scope: !4654)
!4843 = !{i64 2147587399, i64 2147587442, i64 2147587482}
!4844 = !DILocation(line: 105, column: 1, scope: !4654)
!4845 = !{i64 2147587616, i64 2147587659, i64 2147587699}
!4846 = !DILocation(line: 106, column: 1, scope: !4654)
!4847 = !{i64 2147587893, i64 2147587936, i64 2147587976}
!4848 = !DILocation(line: 107, column: 1, scope: !4654)
!4849 = !{i64 2147588119, i64 2147588162, i64 2147588202}
!4850 = !DILocation(line: 108, column: 1, scope: !4654)
!4851 = !{i64 2147588327, i64 2147588370, i64 2147588410}
!4852 = !DILocation(line: 109, column: 1, scope: !4654)
!4853 = !{i64 2147588523, i64 2147588566, i64 2147588606}
!4854 = !DILocation(line: 110, column: 1, scope: !4654)
!4855 = !{i64 2147588788, i64 2147588831, i64 2147588871}
!4856 = !DILocation(line: 111, column: 1, scope: !4654)
!4857 = !{i64 2147589002, i64 2147589045, i64 2147589085}
!4858 = !DILocation(line: 112, column: 1, scope: !4654)
!4859 = !{i64 2147589165, i64 2147589208, i64 2147589248}
!4860 = !DILocation(line: 113, column: 1, scope: !4654)
!4861 = !{i64 2147589352, i64 2147589395, i64 2147589435}
!4862 = !DILocation(line: 114, column: 1, scope: !4654)
!4863 = !{i64 2147589545, i64 2147589588, i64 2147589628}
!4864 = !DILocation(line: 115, column: 1, scope: !4654)
!4865 = !{i64 2147589727, i64 2147589770, i64 2147589810}
!4866 = !DILocation(line: 116, column: 1, scope: !4654)
!4867 = !{i64 2147589941, i64 2147589984, i64 2147590024}
!4868 = !DILocation(line: 117, column: 1, scope: !4654)
!4869 = !{i64 2147590140, i64 2147590183, i64 2147590223}
!4870 = !DILocation(line: 118, column: 1, scope: !4654)
!4871 = !{i64 2147590375, i64 2147590418, i64 2147590458}
!4872 = !DILocation(line: 119, column: 1, scope: !4654)
!4873 = !{i64 2147590625, i64 2147590668, i64 2147590708}
!4874 = !DILocation(line: 120, column: 1, scope: !4654)
!4875 = !{i64 2147590827, i64 2147590870, i64 2147590910}
!4876 = !DILocation(line: 121, column: 1, scope: !4654)
!4877 = !{i64 2147591050, i64 2147591093, i64 2147591133}
!4878 = !DILocation(line: 122, column: 1, scope: !4654)
!4879 = !{i64 2147591264, i64 2147591307, i64 2147591347}
!4880 = !DILocation(line: 123, column: 1, scope: !4654)
!4881 = !{i64 2147591508, i64 2147591551, i64 2147591591}
!4882 = !DILocation(line: 124, column: 1, scope: !4654)
!4883 = !{i64 2147591737, i64 2147591780, i64 2147591820}
!4884 = !DILocation(line: 125, column: 1, scope: !4654)
!4885 = !{i64 2147591963, i64 2147592006, i64 2147592046}
!4886 = !DILocation(line: 126, column: 1, scope: !4654)
!4887 = !{i64 2147592222, i64 2147592265, i64 2147592305}
!4888 = !DILocation(line: 127, column: 1, scope: !4654)
!4889 = !{i64 2147592442, i64 2147592485, i64 2147592525}
!4890 = !DILocation(line: 128, column: 1, scope: !4654)
!4891 = !{i64 2147592674, i64 2147592717, i64 2147592757}
!4892 = !DILocation(line: 129, column: 1, scope: !4654)
!4893 = !{i64 2147592915, i64 2147592958, i64 2147592998}
!4894 = !DILocation(line: 130, column: 1, scope: !4654)
!4895 = !{i64 2147593156, i64 2147593199, i64 2147593239}
!4896 = !DILocation(line: 131, column: 1, scope: !4654)
!4897 = !{i64 2147593379, i64 2147593422, i64 2147593462}
!4898 = !DILocation(line: 132, column: 1, scope: !4654)
!4899 = !{i64 2147593596, i64 2147593639, i64 2147593679}
!4900 = !DILocation(line: 133, column: 1, scope: !4654)
!4901 = !{i64 2147593837, i64 2147593880, i64 2147593920}
!4902 = !DILocation(line: 134, column: 1, scope: !4654)
!4903 = !{i64 2147594024, i64 2147594067, i64 2147594107}
!4904 = !DILocation(line: 135, column: 1, scope: !4654)
!4905 = !{i64 2147594253, i64 2147594296, i64 2147594336}
!4906 = !DILocation(line: 136, column: 1, scope: !4654)
!4907 = !{i64 2147598510, i64 2147598553, i64 2147598593}
!4908 = !DILocation(line: 137, column: 1, scope: !4654)
!4909 = !{i64 2147598722, i64 2147598765, i64 2147598805}
!4910 = !DILocation(line: 138, column: 1, scope: !4654)
!4911 = !{i64 2147598943, i64 2147598986, i64 2147599026}
!4912 = !DILocation(line: 139, column: 1, scope: !4654)
!4913 = !{i64 2147599157, i64 2147599200, i64 2147599240}
!4914 = !DILocation(line: 140, column: 1, scope: !4654)
!4915 = !{i64 2147599347, i64 2147599390, i64 2147599430}
!4916 = !DILocation(line: 141, column: 1, scope: !4654)
!4917 = !{i64 2147599546, i64 2147599589, i64 2147599629}
!4918 = !DILocation(line: 142, column: 1, scope: !4654)
!4919 = !{i64 2147599751, i64 2147599794, i64 2147599834}
!4920 = !DILocation(line: 143, column: 1, scope: !4654)
!4921 = !{i64 2147599971, i64 2147600014, i64 2147600054}
!4922 = !DILocation(line: 144, column: 1, scope: !4654)
!4923 = !{i64 2147600172, i64 2147600215, i64 2147600255}
!4924 = !DILocation(line: 145, column: 1, scope: !4654)
!4925 = !{i64 2147600371, i64 2147600414, i64 2147600454}
!4926 = !DILocation(line: 146, column: 1, scope: !4654)
!4927 = !{i64 2147600540, i64 2147600583, i64 2147600623}
!4928 = !DILocation(line: 147, column: 1, scope: !4654)
!4929 = !{i64 2147600724, i64 2147600767, i64 2147600807}
!4930 = !DILocation(line: 148, column: 1, scope: !4654)
!4931 = !{i64 2147600908, i64 2147600951, i64 2147600991}
!4932 = !DILocation(line: 149, column: 1, scope: !4654)
!4933 = !{i64 2147601095, i64 2147601138, i64 2147601178}
!4934 = !DILocation(line: 150, column: 1, scope: !4654)
!4935 = !{i64 2147601279, i64 2147601322, i64 2147601362}
!4936 = !DILocation(line: 151, column: 1, scope: !4654)
!4937 = !{i64 2147601517, i64 2147601560, i64 2147601600}
!4938 = !DILocation(line: 152, column: 1, scope: !4654)
!4939 = !{i64 2147601747, i64 2147601790, i64 2147601830}
!4940 = !DILocation(line: 153, column: 1, scope: !4654)
!4941 = !{i64 2147601976, i64 2147602019, i64 2147602059}
!4942 = !DILocation(line: 154, column: 1, scope: !4654)
!4943 = !{i64 2147602163, i64 2147602206, i64 2147602246}
!4944 = !DILocation(line: 155, column: 1, scope: !4654)
!4945 = !{i64 2147602359, i64 2147602402, i64 2147602442}
!4946 = !DILocation(line: 156, column: 1, scope: !4654)
!4947 = !{i64 2147602567, i64 2147602610, i64 2147602650}
!4948 = !DILocation(line: 157, column: 1, scope: !4654)
!4949 = !{i64 2147602779, i64 2147602822, i64 2147602862}
!4950 = !DILocation(line: 158, column: 1, scope: !4654)
!4951 = !{i64 2147602978, i64 2147603021, i64 2147603061}
!4952 = !DILocation(line: 159, column: 1, scope: !4654)
!4953 = !{i64 2147603216, i64 2147603259, i64 2147603299}
!4954 = !DILocation(line: 160, column: 1, scope: !4654)
!4955 = !{i64 2147603412, i64 2147603455, i64 2147603495}
!4956 = !DILocation(line: 161, column: 1, scope: !4654)
!4957 = !{i64 2147603614, i64 2147603657, i64 2147603697}
!4958 = !DILocation(line: 162, column: 1, scope: !4654)
!4959 = !{i64 2147603807, i64 2147603850, i64 2147603890}
!4960 = !DILocation(line: 163, column: 1, scope: !4654)
!4961 = !{i64 2147604041, i64 2147604084, i64 2147604124}
!4962 = !DILocation(line: 164, column: 1, scope: !4654)
!4963 = !{i64 2147604204, i64 2147604247, i64 2147604287}
!4964 = !DILocation(line: 165, column: 1, scope: !4654)
!4965 = !{i64 2147604443, i64 2147604486, i64 2147604526}
!4966 = !DILocation(line: 166, column: 1, scope: !4654)
!4967 = !{i64 2147604682, i64 2147604725, i64 2147604765}
!4968 = !DILocation(line: 167, column: 1, scope: !4654)
!4969 = !{i64 2147604918, i64 2147604961, i64 2147605001}
!4970 = !DILocation(line: 168, column: 1, scope: !4654)
!4971 = !{i64 2147605148, i64 2147605191, i64 2147605231}
!4972 = !DILocation(line: 169, column: 1, scope: !4654)
!4973 = !{i64 2147605335, i64 2147605378, i64 2147605418}
!4974 = !DILocation(line: 170, column: 1, scope: !4654)
!4975 = !{i64 2147605534, i64 2147605577, i64 2147605617}
!4976 = !DILocation(line: 171, column: 1, scope: !4654)
!4977 = !{i64 2147605805, i64 2147605848, i64 2147605888}
!4978 = !DILocation(line: 172, column: 1, scope: !4654)
!4979 = !{i64 2147605980, i64 2147606023, i64 2147606063}
!4980 = !DILocation(line: 173, column: 1, scope: !4654)
!4981 = !{i64 2147606214, i64 2147606257, i64 2147606297}
!4982 = !DILocation(line: 174, column: 1, scope: !4654)
!4983 = !{i64 2147606422, i64 2147606465, i64 2147606505}
!4984 = !DILocation(line: 175, column: 1, scope: !4654)
!4985 = !{i64 2147606640, i64 2147606683, i64 2147606723}
!4986 = !DILocation(line: 176, column: 1, scope: !4654)
!4987 = !{i64 2147606830, i64 2147606873, i64 2147606913}
!4988 = !DILocation(line: 177, column: 1, scope: !4654)
!4989 = !{i64 2147607026, i64 2147607069, i64 2147607109}
!4990 = !DILocation(line: 178, column: 1, scope: !4654)
!4991 = !{i64 2147607232, i64 2147607275, i64 2147607315}
!4992 = !DILocation(line: 179, column: 1, scope: !4654)
!4993 = !{i64 2147607437, i64 2147607480, i64 2147607520}
!4994 = !DILocation(line: 180, column: 1, scope: !4654)
!4995 = !{i64 2147611724, i64 2147611767, i64 2147611807}
!4996 = !DILocation(line: 181, column: 1, scope: !4654)
!4997 = !{i64 2147611956, i64 2147611999, i64 2147612039}
!4998 = !DILocation(line: 182, column: 1, scope: !4654)
!4999 = !{i64 2147612134, i64 2147612177, i64 2147612217}
!5000 = !DILocation(line: 183, column: 1, scope: !4654)
!5001 = !{i64 2147612343, i64 2147612386, i64 2147612426}
!5002 = !DILocation(line: 184, column: 1, scope: !4654)
!5003 = !{i64 2147612575, i64 2147612618, i64 2147612658}
!5004 = !DILocation(line: 185, column: 1, scope: !4654)
!5005 = !{i64 2147612777, i64 2147612820, i64 2147612860}
!5006 = !DILocation(line: 186, column: 1, scope: !4654)
!5007 = !{i64 2147613027, i64 2147613070, i64 2147613110}
!5008 = !DILocation(line: 187, column: 1, scope: !4654)
!5009 = !{i64 2147613265, i64 2147613308, i64 2147613348}
!5010 = !DILocation(line: 188, column: 1, scope: !4654)
!5011 = !{i64 2147613443, i64 2147613486, i64 2147613526}
!5012 = !DILocation(line: 189, column: 1, scope: !4654)
!5013 = !{i64 2147613657, i64 2147613700, i64 2147613740}
!5014 = !DILocation(line: 190, column: 1, scope: !4654)
!5015 = !{i64 2147613865, i64 2147613908, i64 2147613948}
!5016 = !DILocation(line: 191, column: 1, scope: !4654)
!5017 = !{i64 2147614055, i64 2147614098, i64 2147614138}
!5018 = !DILocation(line: 192, column: 1, scope: !4654)
!5019 = !{i64 2147614269, i64 2147614312, i64 2147614352}
!5020 = !DILocation(line: 193, column: 1, scope: !4654)
!5021 = !{i64 2147614531, i64 2147614574, i64 2147614614}
!5022 = !DILocation(line: 194, column: 1, scope: !4654)
!5023 = !{i64 2147614742, i64 2147614785, i64 2147614825}
!5024 = !DILocation(line: 195, column: 1, scope: !4654)
!5025 = !{i64 2147614986, i64 2147615029, i64 2147615069}
!5026 = !DILocation(line: 196, column: 1, scope: !4654)
!5027 = !{i64 2147615197, i64 2147615240, i64 2147615280}
!5028 = !DILocation(line: 197, column: 1, scope: !4654)
!5029 = !{i64 2147615426, i64 2147615469, i64 2147615509}
!5030 = !DILocation(line: 198, column: 1, scope: !4654)
!5031 = !{i64 2147615631, i64 2147615674, i64 2147615714}
!5032 = !DILocation(line: 199, column: 1, scope: !4654)
!5033 = !{i64 2147615827, i64 2147615870, i64 2147615910}
!5034 = !DILocation(line: 200, column: 1, scope: !4654)
!5035 = !{i64 2147616050, i64 2147616093, i64 2147616133}
!5036 = !DILocation(line: 201, column: 1, scope: !4654)
!5037 = !{i64 2147616213, i64 2147616256, i64 2147616296}
!5038 = !DILocation(line: 202, column: 1, scope: !4654)
!5039 = !{i64 2147616418, i64 2147616461, i64 2147616501}
!5040 = !DILocation(line: 203, column: 1, scope: !4654)
!5041 = !{i64 2147616638, i64 2147616681, i64 2147616721}
!5042 = !DILocation(line: 204, column: 1, scope: !4654)
!5043 = !{i64 2147616852, i64 2147616895, i64 2147616935}
!5044 = !DILocation(line: 205, column: 1, scope: !4654)
!5045 = !{i64 2147617066, i64 2147617109, i64 2147617149}
!5046 = !DILocation(line: 206, column: 1, scope: !4654)
!5047 = !{i64 2147617277, i64 2147617320, i64 2147617360}
!5048 = !DILocation(line: 207, column: 1, scope: !4654)
!5049 = !{i64 2147617470, i64 2147617513, i64 2147617553}
!5050 = !DILocation(line: 208, column: 1, scope: !4654)
!5051 = !{i64 2147617669, i64 2147617712, i64 2147617752}
!5052 = !DILocation(line: 209, column: 1, scope: !4654)
!5053 = !{i64 2147617841, i64 2147617884, i64 2147617924}
!5054 = !DILocation(line: 210, column: 1, scope: !4654)
!5055 = !{i64 2147618034, i64 2147618077, i64 2147618117}
!5056 = !DILocation(line: 211, column: 1, scope: !4654)
!5057 = !{i64 2147618230, i64 2147618273, i64 2147618313}
!5058 = !DILocation(line: 212, column: 1, scope: !4654)
!5059 = !{i64 2147618457, i64 2147618500, i64 2147618540}
!5060 = !DILocation(line: 213, column: 1, scope: !4654)
!5061 = !{i64 2147618674, i64 2147618717, i64 2147618757}
!5062 = !DILocation(line: 214, column: 1, scope: !4654)
!5063 = !{i64 2147618966, i64 2147619009, i64 2147619049}
!5064 = !DILocation(line: 215, column: 1, scope: !4654)
!5065 = !{i64 2147619198, i64 2147619241, i64 2147619281}
!5066 = !DILocation(line: 216, column: 1, scope: !4654)
!5067 = !{i64 2147619415, i64 2147619458, i64 2147619498}
!5068 = !DILocation(line: 217, column: 1, scope: !4654)
!5069 = !{i64 2147619622, i64 2147619665, i64 2147619705}
!5070 = !DILocation(line: 218, column: 1, scope: !4654)
!5071 = !{i64 2147619823, i64 2147619866, i64 2147619906}
!5072 = !DILocation(line: 219, column: 1, scope: !4654)
!5073 = !{i64 2147620055, i64 2147620098, i64 2147620138}
!5074 = !DILocation(line: 220, column: 1, scope: !4654)
!5075 = !{i64 2147620263, i64 2147620306, i64 2147620346}
!5076 = !DILocation(line: 221, column: 1, scope: !4654)
!5077 = !{i64 2147620453, i64 2147620496, i64 2147620536}
!5078 = !DILocation(line: 222, column: 1, scope: !4654)
!5079 = !{i64 2147624740, i64 2147624783, i64 2147624823}
!5080 = !DILocation(line: 223, column: 1, scope: !4654)
!5081 = !{i64 2147624929, i64 2147624972, i64 2147625012}
!5082 = !DILocation(line: 224, column: 1, scope: !4654)
!5083 = !{i64 2147625200, i64 2147625243, i64 2147625283}
!5084 = !DILocation(line: 225, column: 1, scope: !4654)
!5085 = !{i64 2147625420, i64 2147625463, i64 2147625503}
!5086 = !DILocation(line: 226, column: 1, scope: !4654)
!5087 = !{i64 2147625673, i64 2147625716, i64 2147625756}
!5088 = !DILocation(line: 227, column: 1, scope: !4654)
!5089 = !{i64 2147625875, i64 2147625918, i64 2147625958}
!5090 = !DILocation(line: 228, column: 1, scope: !4654)
!5091 = !{i64 2147626107, i64 2147626150, i64 2147626190}
!5092 = !DILocation(line: 229, column: 1, scope: !4654)
!5093 = !{i64 2147626318, i64 2147626361, i64 2147626401}
!5094 = !DILocation(line: 230, column: 1, scope: !4654)
!5095 = !{i64 2147626508, i64 2147626551, i64 2147626591}
!5096 = !DILocation(line: 231, column: 1, scope: !4654)
!5097 = !{i64 2147626722, i64 2147626765, i64 2147626805}
!5098 = !DILocation(line: 232, column: 1, scope: !4654)
!5099 = !{i64 2147626921, i64 2147626964, i64 2147627004}
!5100 = !DILocation(line: 233, column: 1, scope: !4654)
!5101 = !{i64 2147627108, i64 2147627151, i64 2147627191}
!5102 = !DILocation(line: 234, column: 1, scope: !4654)
!5103 = !{i64 2147627316, i64 2147627359, i64 2147627399}
!5104 = !DILocation(line: 235, column: 1, scope: !4654)
!5105 = !{i64 2147627545, i64 2147627588, i64 2147627628}
!5106 = !DILocation(line: 236, column: 1, scope: !4654)
!5107 = !{i64 2147627747, i64 2147627790, i64 2147627830}
!5108 = !DILocation(line: 237, column: 1, scope: !4654)
!5109 = !{i64 2147627946, i64 2147627989, i64 2147628029}
!5110 = !DILocation(line: 238, column: 1, scope: !4654)
!5111 = !{i64 2147628163, i64 2147628206, i64 2147628246}
!5112 = !DILocation(line: 240, column: 1, scope: !4654)
!5113 = distinct !DISubprogram(name: "nxp_mcimx7_init", scope: !692, file: !692, line: 225, type: !699, scopeLine: 226, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !278, retainedNodes: !223)
!5114 = !DILocalVariable(name: "arg", arg: 1, scope: !5113, file: !692, line: 225, type: !701)
!5115 = !DILocation(line: 225, column: 49, scope: !5113)
!5116 = !DILocation(line: 227, column: 2, scope: !5113)
!5117 = !DILocation(line: 230, column: 2, scope: !5113)
!5118 = !DILocation(line: 233, column: 2, scope: !5113)
!5119 = !DILocation(line: 236, column: 2, scope: !5113)
!5120 = !DILocation(line: 240, column: 2, scope: !5113)
!5121 = !DILocation(line: 255, column: 2, scope: !5113)
!5122 = distinct !DISubprogram(name: "SOC_RdcInit", scope: !692, file: !692, line: 50, type: !253, scopeLine: 51, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !278, retainedNodes: !223)
!5123 = !DILocation(line: 53, column: 2, scope: !5122)
!5124 = !DILocation(line: 54, column: 1, scope: !5122)
!5125 = distinct !DISubprogram(name: "SOC_ClockInit", scope: !692, file: !692, line: 14, type: !253, scopeLine: 15, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !278, retainedNodes: !223)
!5126 = !DILocation(line: 23, column: 2, scope: !5125)
!5127 = !DILocation(line: 24, column: 2, scope: !5125)
!5128 = !DILocation(line: 25, column: 2, scope: !5125)
!5129 = !DILocation(line: 27, column: 2, scope: !5125)
!5130 = !DILocation(line: 31, column: 2, scope: !5125)
!5131 = !DILocation(line: 33, column: 2, scope: !5125)
!5132 = !DILocation(line: 36, column: 2, scope: !5125)
!5133 = !DILocation(line: 37, column: 2, scope: !5125)
!5134 = !DILocation(line: 40, column: 2, scope: !5125)
!5135 = !DILocation(line: 41, column: 2, scope: !5125)
!5136 = !DILocation(line: 42, column: 2, scope: !5125)
!5137 = !DILocation(line: 43, column: 2, scope: !5125)
!5138 = !DILocation(line: 44, column: 2, scope: !5125)
!5139 = !DILocation(line: 47, column: 2, scope: !5125)
!5140 = !DILocation(line: 48, column: 1, scope: !5125)
!5141 = distinct !DISubprogram(name: "nxp_mcimx7_gpio_config", scope: !692, file: !692, line: 57, type: !253, scopeLine: 58, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !278, retainedNodes: !223)
!5142 = !DILocation(line: 61, column: 2, scope: !5141)
!5143 = !DILocation(line: 63, column: 2, scope: !5141)
!5144 = !DILocation(line: 80, column: 1, scope: !5141)
!5145 = distinct !DISubprogram(name: "nxp_mcimx7_uart_config", scope: !692, file: !692, line: 84, type: !253, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !278, retainedNodes: !223)
!5146 = !DILocation(line: 116, column: 1, scope: !5145)
!5147 = distinct !DISubprogram(name: "RDC_SetPdapAccess", scope: !5148, file: !5148, line: 164, type: !5149, scopeLine: 165, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !278, retainedNodes: !223)
!5148 = !DIFile(filename: "modules/hal/nxp/imx/drivers/./rdc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5149 = !DISubroutineType(types: !5150)
!5150 = !{null, !636, !173, !156, !743, !743}
!5151 = !DILocalVariable(name: "base", arg: 1, scope: !5147, file: !5148, line: 164, type: !636)
!5152 = !DILocation(line: 164, column: 49, scope: !5147)
!5153 = !DILocalVariable(name: "pdap", arg: 2, scope: !5147, file: !5148, line: 164, type: !173)
!5154 = !DILocation(line: 164, column: 64, scope: !5147)
!5155 = !DILocalVariable(name: "perm", arg: 3, scope: !5147, file: !5148, line: 164, type: !156)
!5156 = !DILocation(line: 164, column: 78, scope: !5147)
!5157 = !DILocalVariable(name: "sreq", arg: 4, scope: !5147, file: !5148, line: 164, type: !743)
!5158 = !DILocation(line: 164, column: 89, scope: !5147)
!5159 = !DILocalVariable(name: "lock", arg: 5, scope: !5147, file: !5148, line: 164, type: !743)
!5160 = !DILocation(line: 164, column: 100, scope: !5147)
!5161 = !DILocation(line: 166, column: 24, scope: !5147)
!5162 = !DILocation(line: 166, column: 32, scope: !5147)
!5163 = !DILocation(line: 166, column: 29, scope: !5147)
!5164 = !DILocation(line: 166, column: 66, scope: !5147)
!5165 = !DILocation(line: 166, column: 63, scope: !5147)
!5166 = !DILocation(line: 166, column: 5, scope: !5147)
!5167 = !DILocation(line: 166, column: 11, scope: !5147)
!5168 = !DILocation(line: 166, column: 16, scope: !5147)
!5169 = !DILocation(line: 166, column: 22, scope: !5147)
!5170 = !DILocation(line: 167, column: 1, scope: !5147)
!5171 = distinct !DISubprogram(name: "CCM_ControlGate", scope: !282, file: !282, line: 454, type: !5172, scopeLine: 455, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !278, retainedNodes: !223)
!5172 = !DISubroutineType(types: !5173)
!5173 = !{null, !564, !173, !173}
!5174 = !DILocalVariable(name: "base", arg: 1, scope: !5171, file: !282, line: 454, type: !564)
!5175 = !DILocation(line: 454, column: 47, scope: !5171)
!5176 = !DILocalVariable(name: "ccmGate", arg: 2, scope: !5171, file: !282, line: 454, type: !173)
!5177 = !DILocation(line: 454, column: 62, scope: !5171)
!5178 = !DILocalVariable(name: "control", arg: 3, scope: !5171, file: !282, line: 454, type: !173)
!5179 = !DILocation(line: 454, column: 80, scope: !5171)
!5180 = !DILocation(line: 456, column: 24, scope: !5171)
!5181 = !DILocation(line: 456, column: 5, scope: !5171)
!5182 = !DILocation(line: 456, column: 22, scope: !5171)
!5183 = !DILocation(line: 457, column: 1, scope: !5171)
!5184 = distinct !DISubprogram(name: "CCM_EnableRoot", scope: !282, file: !282, line: 379, type: !5185, scopeLine: 380, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !278, retainedNodes: !223)
!5185 = !DISubroutineType(types: !5186)
!5186 = !{null, !564, !173}
!5187 = !DILocalVariable(name: "base", arg: 1, scope: !5184, file: !282, line: 379, type: !564)
!5188 = !DILocation(line: 379, column: 46, scope: !5184)
!5189 = !DILocalVariable(name: "ccmRoot", arg: 2, scope: !5184, file: !282, line: 379, type: !173)
!5190 = !DILocation(line: 379, column: 61, scope: !5184)
!5191 = !DILocation(line: 381, column: 5, scope: !5184)
!5192 = !DILocation(line: 381, column: 26, scope: !5184)
!5193 = !DILocation(line: 382, column: 1, scope: !5184)
!5194 = distinct !DISubprogram(name: "WDOG_DisablePowerdown", scope: !5195, file: !5195, line: 136, type: !5196, scopeLine: 137, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !278, retainedNodes: !223)
!5195 = !DIFile(filename: "modules/hal/nxp/imx/drivers/./wdog_imx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5196 = !DISubroutineType(types: !5197)
!5197 = !{null, !679}
!5198 = !DILocalVariable(name: "base", arg: 1, scope: !5194, file: !5195, line: 136, type: !679)
!5199 = !DILocation(line: 136, column: 53, scope: !5194)
!5200 = !DILocation(line: 138, column: 5, scope: !5194)
!5201 = !DILocation(line: 138, column: 11, scope: !5194)
!5202 = !DILocation(line: 138, column: 16, scope: !5194)
!5203 = !DILocation(line: 139, column: 1, scope: !5194)
!5204 = distinct !DISubprogram(name: "RDC_SetDomainID", scope: !5148, file: !5148, line: 136, type: !5205, scopeLine: 137, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !278, retainedNodes: !223)
!5205 = !DISubroutineType(types: !5206)
!5206 = !{null, !636, !173, !173, !743}
!5207 = !DILocalVariable(name: "base", arg: 1, scope: !5204, file: !5148, line: 136, type: !636)
!5208 = !DILocation(line: 136, column: 47, scope: !5204)
!5209 = !DILocalVariable(name: "mda", arg: 2, scope: !5204, file: !5148, line: 136, type: !173)
!5210 = !DILocation(line: 136, column: 62, scope: !5204)
!5211 = !DILocalVariable(name: "domainId", arg: 3, scope: !5204, file: !5148, line: 136, type: !173)
!5212 = !DILocation(line: 136, column: 76, scope: !5204)
!5213 = !DILocalVariable(name: "lock", arg: 4, scope: !5204, file: !5148, line: 136, type: !743)
!5214 = !DILocation(line: 136, column: 91, scope: !5204)
!5215 = !DILocation(line: 140, column: 22, scope: !5204)
!5216 = !DILocation(line: 140, column: 47, scope: !5204)
!5217 = !DILocation(line: 140, column: 44, scope: !5204)
!5218 = !DILocation(line: 140, column: 5, scope: !5204)
!5219 = !DILocation(line: 140, column: 11, scope: !5204)
!5220 = !DILocation(line: 140, column: 15, scope: !5204)
!5221 = !DILocation(line: 140, column: 20, scope: !5204)
!5222 = !DILocation(line: 141, column: 1, scope: !5204)
!5223 = distinct !DISubprogram(name: "z_arm_fatal_error", scope: !5224, file: !5224, line: 57, type: !5225, scopeLine: 58, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2140, retainedNodes: !223)
!5224 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5225 = !DISubroutineType(types: !5226)
!5226 = !{null, !32, !5227}
!5227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5228, size: 32)
!5228 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5229)
!5229 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2261, line: 141, baseType: !5230)
!5230 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2261, line: 97, size: 256, elements: !5231)
!5231 = !{!5232}
!5232 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !5230, file: !2261, line: 107, baseType: !5233, size: 256)
!5233 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2261, line: 98, size: 256, elements: !5234)
!5234 = !{!5235, !5240, !5245, !5250, !5255, !5260, !5265, !5270}
!5235 = !DIDerivedType(tag: DW_TAG_member, scope: !5233, file: !2261, line: 99, baseType: !5236, size: 32)
!5236 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5233, file: !2261, line: 99, size: 32, elements: !5237)
!5237 = !{!5238, !5239}
!5238 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !5236, file: !2261, line: 99, baseType: !173, size: 32)
!5239 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !5236, file: !2261, line: 99, baseType: !173, size: 32)
!5240 = !DIDerivedType(tag: DW_TAG_member, scope: !5233, file: !2261, line: 100, baseType: !5241, size: 32, offset: 32)
!5241 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5233, file: !2261, line: 100, size: 32, elements: !5242)
!5242 = !{!5243, !5244}
!5243 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !5241, file: !2261, line: 100, baseType: !173, size: 32)
!5244 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !5241, file: !2261, line: 100, baseType: !173, size: 32)
!5245 = !DIDerivedType(tag: DW_TAG_member, scope: !5233, file: !2261, line: 101, baseType: !5246, size: 32, offset: 64)
!5246 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5233, file: !2261, line: 101, size: 32, elements: !5247)
!5247 = !{!5248, !5249}
!5248 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !5246, file: !2261, line: 101, baseType: !173, size: 32)
!5249 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !5246, file: !2261, line: 101, baseType: !173, size: 32)
!5250 = !DIDerivedType(tag: DW_TAG_member, scope: !5233, file: !2261, line: 102, baseType: !5251, size: 32, offset: 96)
!5251 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5233, file: !2261, line: 102, size: 32, elements: !5252)
!5252 = !{!5253, !5254}
!5253 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !5251, file: !2261, line: 102, baseType: !173, size: 32)
!5254 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !5251, file: !2261, line: 102, baseType: !173, size: 32)
!5255 = !DIDerivedType(tag: DW_TAG_member, scope: !5233, file: !2261, line: 103, baseType: !5256, size: 32, offset: 128)
!5256 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5233, file: !2261, line: 103, size: 32, elements: !5257)
!5257 = !{!5258, !5259}
!5258 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !5256, file: !2261, line: 103, baseType: !173, size: 32)
!5259 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !5256, file: !2261, line: 103, baseType: !173, size: 32)
!5260 = !DIDerivedType(tag: DW_TAG_member, scope: !5233, file: !2261, line: 104, baseType: !5261, size: 32, offset: 160)
!5261 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5233, file: !2261, line: 104, size: 32, elements: !5262)
!5262 = !{!5263, !5264}
!5263 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !5261, file: !2261, line: 104, baseType: !173, size: 32)
!5264 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !5261, file: !2261, line: 104, baseType: !173, size: 32)
!5265 = !DIDerivedType(tag: DW_TAG_member, scope: !5233, file: !2261, line: 105, baseType: !5266, size: 32, offset: 192)
!5266 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5233, file: !2261, line: 105, size: 32, elements: !5267)
!5267 = !{!5268, !5269}
!5268 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !5266, file: !2261, line: 105, baseType: !173, size: 32)
!5269 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !5266, file: !2261, line: 105, baseType: !173, size: 32)
!5270 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !5233, file: !2261, line: 106, baseType: !173, size: 32, offset: 224)
!5271 = !DILocalVariable(name: "reason", arg: 1, scope: !5223, file: !5224, line: 57, type: !32)
!5272 = !DILocation(line: 57, column: 37, scope: !5223)
!5273 = !DILocalVariable(name: "esf", arg: 2, scope: !5223, file: !5224, line: 57, type: !5227)
!5274 = !DILocation(line: 57, column: 65, scope: !5223)
!5275 = !DILocation(line: 60, column: 6, scope: !5276)
!5276 = distinct !DILexicalBlock(scope: !5223, file: !5224, line: 60, column: 6)
!5277 = !DILocation(line: 60, column: 10, scope: !5276)
!5278 = !DILocation(line: 60, column: 6, scope: !5223)
!5279 = !DILocation(line: 61, column: 12, scope: !5280)
!5280 = distinct !DILexicalBlock(scope: !5276, file: !5224, line: 60, column: 19)
!5281 = !DILocation(line: 61, column: 3, scope: !5280)
!5282 = !DILocation(line: 62, column: 2, scope: !5280)
!5283 = !DILocation(line: 63, column: 16, scope: !5223)
!5284 = !DILocation(line: 63, column: 24, scope: !5223)
!5285 = !DILocation(line: 63, column: 2, scope: !5223)
!5286 = !DILocation(line: 64, column: 1, scope: !5223)
!5287 = distinct !DISubprogram(name: "esf_dump", scope: !5224, file: !5224, line: 20, type: !5288, scopeLine: 21, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2140, retainedNodes: !223)
!5288 = !DISubroutineType(types: !5289)
!5289 = !{null, !5227}
!5290 = !DILocalVariable(name: "esf", arg: 1, scope: !5287, file: !5224, line: 20, type: !5227)
!5291 = !DILocation(line: 20, column: 42, scope: !5287)
!5292 = !DILocation(line: 22, column: 2, scope: !5287)
!5293 = !DILocation(line: 22, column: 2, scope: !5294)
!5294 = distinct !DILexicalBlock(scope: !5295, file: !5224, line: 22, column: 2)
!5295 = distinct !DILexicalBlock(scope: !5296, file: !5224, line: 22, column: 2)
!5296 = distinct !DILexicalBlock(scope: !5287, file: !5224, line: 22, column: 2)
!5297 = !DILocation(line: 24, column: 2, scope: !5287)
!5298 = !DILocation(line: 24, column: 2, scope: !5299)
!5299 = distinct !DILexicalBlock(scope: !5300, file: !5224, line: 24, column: 2)
!5300 = distinct !DILexicalBlock(scope: !5301, file: !5224, line: 24, column: 2)
!5301 = distinct !DILexicalBlock(scope: !5287, file: !5224, line: 24, column: 2)
!5302 = !DILocation(line: 26, column: 2, scope: !5287)
!5303 = !DILocation(line: 26, column: 2, scope: !5304)
!5304 = distinct !DILexicalBlock(scope: !5305, file: !5224, line: 26, column: 2)
!5305 = distinct !DILexicalBlock(scope: !5306, file: !5224, line: 26, column: 2)
!5306 = distinct !DILexicalBlock(scope: !5287, file: !5224, line: 26, column: 2)
!5307 = !DILocation(line: 53, column: 2, scope: !5287)
!5308 = !DILocation(line: 53, column: 2, scope: !5309)
!5309 = distinct !DILexicalBlock(scope: !5310, file: !5224, line: 53, column: 2)
!5310 = distinct !DILexicalBlock(scope: !5311, file: !5224, line: 53, column: 2)
!5311 = distinct !DILexicalBlock(scope: !5287, file: !5224, line: 53, column: 2)
!5312 = !DILocation(line: 55, column: 1, scope: !5287)
!5313 = distinct !DISubprogram(name: "z_do_kernel_oops", scope: !5224, file: !5224, line: 82, type: !5314, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2140, retainedNodes: !223)
!5314 = !DISubroutineType(types: !5315)
!5315 = !{null, !5227, !5316}
!5316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5317, size: 32)
!5317 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !190, line: 37, baseType: !5318)
!5318 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !190, line: 25, size: 288, elements: !5319)
!5319 = !{!5320, !5321, !5322, !5323, !5324, !5325, !5326, !5327, !5328}
!5320 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !5318, file: !190, line: 26, baseType: !173, size: 32)
!5321 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !5318, file: !190, line: 27, baseType: !173, size: 32, offset: 32)
!5322 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !5318, file: !190, line: 28, baseType: !173, size: 32, offset: 64)
!5323 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !5318, file: !190, line: 29, baseType: !173, size: 32, offset: 96)
!5324 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !5318, file: !190, line: 30, baseType: !173, size: 32, offset: 128)
!5325 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !5318, file: !190, line: 31, baseType: !173, size: 32, offset: 160)
!5326 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !5318, file: !190, line: 32, baseType: !173, size: 32, offset: 192)
!5327 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !5318, file: !190, line: 33, baseType: !173, size: 32, offset: 224)
!5328 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !5318, file: !190, line: 34, baseType: !173, size: 32, offset: 256)
!5329 = !DILocalVariable(name: "esf", arg: 1, scope: !5313, file: !5224, line: 82, type: !5227)
!5330 = !DILocation(line: 82, column: 43, scope: !5313)
!5331 = !DILocalVariable(name: "callee_regs", arg: 2, scope: !5313, file: !5224, line: 82, type: !5316)
!5332 = !DILocation(line: 82, column: 65, scope: !5313)
!5333 = !DILocation(line: 85, column: 2, scope: !5313)
!5334 = !DILocalVariable(name: "reason", scope: !5313, file: !5224, line: 88, type: !32)
!5335 = !DILocation(line: 88, column: 15, scope: !5313)
!5336 = !DILocation(line: 88, column: 24, scope: !5313)
!5337 = !DILocation(line: 88, column: 29, scope: !5313)
!5338 = !DILocation(line: 88, column: 35, scope: !5313)
!5339 = !DILocation(line: 108, column: 20, scope: !5313)
!5340 = !DILocation(line: 108, column: 28, scope: !5313)
!5341 = !DILocation(line: 108, column: 2, scope: !5313)
!5342 = !DILocation(line: 131, column: 1, scope: !5313)
!5343 = distinct !DISubprogram(name: "arch_syscall_oops", scope: !5224, file: !5224, line: 133, type: !5344, scopeLine: 134, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagDefinition, unit: !2140, retainedNodes: !223)
!5344 = !DISubroutineType(types: !5345)
!5345 = !{null, !102}
!5346 = !DILocalVariable(name: "ssf_ptr", arg: 1, scope: !5343, file: !5224, line: 133, type: !102)
!5347 = !DILocation(line: 133, column: 44, scope: !5343)
!5348 = !DILocalVariable(name: "ssf_contents", scope: !5343, file: !5224, line: 135, type: !1251)
!5349 = !DILocation(line: 135, column: 12, scope: !5343)
!5350 = !DILocation(line: 135, column: 27, scope: !5343)
!5351 = !DILocalVariable(name: "oops_esf", scope: !5343, file: !5224, line: 136, type: !5229)
!5352 = !DILocation(line: 136, column: 15, scope: !5343)
!5353 = !DILocation(line: 139, column: 22, scope: !5343)
!5354 = !DILocation(line: 139, column: 11, scope: !5343)
!5355 = !DILocation(line: 139, column: 17, scope: !5343)
!5356 = !DILocation(line: 139, column: 20, scope: !5343)
!5357 = !DILocation(line: 141, column: 2, scope: !5343)
!5358 = !DILocation(line: 142, column: 2, scope: !5343)
!5359 = distinct !DISubprogram(name: "arch_irq_enable", scope: !5360, file: !5360, line: 40, type: !5361, scopeLine: 41, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2151, retainedNodes: !223)
!5360 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5361 = !DISubroutineType(types: !5362)
!5362 = !{null, !32}
!5363 = !DILocalVariable(name: "irq", arg: 1, scope: !5359, file: !5360, line: 40, type: !32)
!5364 = !DILocation(line: 40, column: 35, scope: !5359)
!5365 = !DILocation(line: 42, column: 28, scope: !5359)
!5366 = !DILocation(line: 42, column: 2, scope: !5359)
!5367 = !DILocation(line: 43, column: 1, scope: !5359)
!5368 = distinct !DISubprogram(name: "__NVIC_EnableIRQ", scope: !1446, file: !1446, line: 1684, type: !5369, scopeLine: 1685, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2151, retainedNodes: !223)
!5369 = !DISubroutineType(types: !5370)
!5370 = !{null, !2155}
!5371 = !DILocalVariable(name: "IRQn", arg: 1, scope: !5368, file: !1446, line: 1684, type: !2155)
!5372 = !DILocation(line: 1684, column: 49, scope: !5368)
!5373 = !DILocation(line: 1686, column: 17, scope: !5374)
!5374 = distinct !DILexicalBlock(scope: !5368, file: !1446, line: 1686, column: 7)
!5375 = !DILocation(line: 1686, column: 23, scope: !5374)
!5376 = !DILocation(line: 1686, column: 7, scope: !5368)
!5377 = !DILocation(line: 1688, column: 5, scope: !5378)
!5378 = distinct !DILexicalBlock(scope: !5374, file: !1446, line: 1687, column: 3)
!5379 = !{i64 2154443645}
!5380 = !DILocation(line: 1689, column: 75, scope: !5378)
!5381 = !DILocation(line: 1689, column: 81, scope: !5378)
!5382 = !DILocation(line: 1689, column: 60, scope: !5378)
!5383 = !DILocation(line: 1689, column: 28, scope: !5378)
!5384 = !DILocation(line: 1689, column: 34, scope: !5378)
!5385 = !DILocation(line: 1689, column: 5, scope: !5378)
!5386 = !DILocation(line: 1689, column: 43, scope: !5378)
!5387 = !DILocation(line: 1690, column: 5, scope: !5378)
!5388 = !{i64 2154443759}
!5389 = !DILocation(line: 1691, column: 3, scope: !5378)
!5390 = !DILocation(line: 1692, column: 1, scope: !5368)
!5391 = distinct !DISubprogram(name: "arch_irq_disable", scope: !5360, file: !5360, line: 45, type: !5361, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2151, retainedNodes: !223)
!5392 = !DILocalVariable(name: "irq", arg: 1, scope: !5391, file: !5360, line: 45, type: !32)
!5393 = !DILocation(line: 45, column: 36, scope: !5391)
!5394 = !DILocation(line: 47, column: 29, scope: !5391)
!5395 = !DILocation(line: 47, column: 2, scope: !5391)
!5396 = !DILocation(line: 48, column: 1, scope: !5391)
!5397 = distinct !DISubprogram(name: "__NVIC_DisableIRQ", scope: !1446, file: !1446, line: 1722, type: !5369, scopeLine: 1723, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2151, retainedNodes: !223)
!5398 = !DILocalVariable(name: "IRQn", arg: 1, scope: !5397, file: !1446, line: 1722, type: !2155)
!5399 = !DILocation(line: 1722, column: 50, scope: !5397)
!5400 = !DILocation(line: 1724, column: 17, scope: !5401)
!5401 = distinct !DILexicalBlock(scope: !5397, file: !1446, line: 1724, column: 7)
!5402 = !DILocation(line: 1724, column: 23, scope: !5401)
!5403 = !DILocation(line: 1724, column: 7, scope: !5397)
!5404 = !DILocation(line: 1726, column: 75, scope: !5405)
!5405 = distinct !DILexicalBlock(scope: !5401, file: !1446, line: 1725, column: 3)
!5406 = !DILocation(line: 1726, column: 81, scope: !5405)
!5407 = !DILocation(line: 1726, column: 60, scope: !5405)
!5408 = !DILocation(line: 1726, column: 28, scope: !5405)
!5409 = !DILocation(line: 1726, column: 34, scope: !5405)
!5410 = !DILocation(line: 1726, column: 5, scope: !5405)
!5411 = !DILocation(line: 1726, column: 43, scope: !5405)
!5412 = !DILocation(line: 271, column: 3, scope: !5413, inlinedAt: !5415)
!5413 = distinct !DISubprogram(name: "__DSB", scope: !5414, file: !5414, line: 269, type: !253, scopeLine: 270, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2151, retainedNodes: !223)
!5414 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/cmsis_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5415 = distinct !DILocation(line: 1727, column: 5, scope: !5405)
!5416 = !{i64 6898032}
!5417 = !DILocation(line: 260, column: 3, scope: !5418, inlinedAt: !5419)
!5418 = distinct !DISubprogram(name: "__ISB", scope: !5414, file: !5414, line: 258, type: !253, scopeLine: 259, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2151, retainedNodes: !223)
!5419 = distinct !DILocation(line: 1728, column: 5, scope: !5405)
!5420 = !{i64 6897749}
!5421 = !DILocation(line: 1729, column: 3, scope: !5405)
!5422 = !DILocation(line: 1730, column: 1, scope: !5397)
!5423 = distinct !DISubprogram(name: "arch_irq_is_enabled", scope: !5360, file: !5360, line: 50, type: !5424, scopeLine: 51, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2151, retainedNodes: !223)
!5424 = !DISubroutineType(types: !5425)
!5425 = !{!103, !32}
!5426 = !DILocalVariable(name: "irq", arg: 1, scope: !5423, file: !5360, line: 50, type: !32)
!5427 = !DILocation(line: 50, column: 38, scope: !5423)
!5428 = !DILocation(line: 52, column: 20, scope: !5423)
!5429 = !DILocation(line: 52, column: 9, scope: !5423)
!5430 = !DILocation(line: 52, column: 41, scope: !5423)
!5431 = !DILocation(line: 52, column: 39, scope: !5423)
!5432 = !DILocation(line: 52, column: 2, scope: !5423)
!5433 = distinct !DISubprogram(name: "z_arm_irq_priority_set", scope: !5360, file: !5360, line: 64, type: !5434, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2151, retainedNodes: !223)
!5434 = !DISubroutineType(types: !5435)
!5435 = !{null, !32, !32, !173}
!5436 = !DILocalVariable(name: "irq", arg: 1, scope: !5433, file: !5360, line: 64, type: !32)
!5437 = !DILocation(line: 64, column: 42, scope: !5433)
!5438 = !DILocalVariable(name: "prio", arg: 2, scope: !5433, file: !5360, line: 64, type: !32)
!5439 = !DILocation(line: 64, column: 60, scope: !5433)
!5440 = !DILocalVariable(name: "flags", arg: 3, scope: !5433, file: !5360, line: 64, type: !173)
!5441 = !DILocation(line: 64, column: 75, scope: !5433)
!5442 = !DILocation(line: 83, column: 8, scope: !5443)
!5443 = distinct !DILexicalBlock(scope: !5444, file: !5360, line: 82, column: 9)
!5444 = distinct !DILexicalBlock(scope: !5433, file: !5360, line: 76, column: 6)
!5445 = !DILocation(line: 95, column: 30, scope: !5433)
!5446 = !DILocation(line: 95, column: 35, scope: !5433)
!5447 = !DILocation(line: 95, column: 2, scope: !5433)
!5448 = !DILocation(line: 96, column: 1, scope: !5433)
!5449 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !1446, file: !1446, line: 1814, type: !5450, scopeLine: 1815, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2151, retainedNodes: !223)
!5450 = !DISubroutineType(types: !5451)
!5451 = !{null, !2155, !173}
!5452 = !DILocalVariable(name: "IRQn", arg: 1, scope: !5449, file: !1446, line: 1814, type: !2155)
!5453 = !DILocation(line: 1814, column: 51, scope: !5449)
!5454 = !DILocalVariable(name: "priority", arg: 2, scope: !5449, file: !1446, line: 1814, type: !173)
!5455 = !DILocation(line: 1814, column: 66, scope: !5449)
!5456 = !DILocation(line: 1816, column: 17, scope: !5457)
!5457 = distinct !DILexicalBlock(scope: !5449, file: !1446, line: 1816, column: 7)
!5458 = !DILocation(line: 1816, column: 23, scope: !5457)
!5459 = !DILocation(line: 1816, column: 7, scope: !5449)
!5460 = !DILocation(line: 1818, column: 59, scope: !5461)
!5461 = distinct !DILexicalBlock(scope: !5457, file: !1446, line: 1817, column: 3)
!5462 = !DILocation(line: 1818, column: 68, scope: !5461)
!5463 = !DILocation(line: 1818, column: 96, scope: !5461)
!5464 = !DILocation(line: 1818, column: 48, scope: !5461)
!5465 = !DILocation(line: 1818, column: 25, scope: !5461)
!5466 = !DILocation(line: 1818, column: 5, scope: !5461)
!5467 = !DILocation(line: 1818, column: 46, scope: !5461)
!5468 = !DILocation(line: 1819, column: 3, scope: !5461)
!5469 = !DILocation(line: 1822, column: 59, scope: !5470)
!5470 = distinct !DILexicalBlock(scope: !5457, file: !1446, line: 1821, column: 3)
!5471 = !DILocation(line: 1822, column: 68, scope: !5470)
!5472 = !DILocation(line: 1822, column: 96, scope: !5470)
!5473 = !DILocation(line: 1822, column: 48, scope: !5470)
!5474 = !DILocation(line: 1822, column: 26, scope: !5470)
!5475 = !DILocation(line: 1822, column: 32, scope: !5470)
!5476 = !DILocation(line: 1822, column: 40, scope: !5470)
!5477 = !DILocation(line: 1822, column: 5, scope: !5470)
!5478 = !DILocation(line: 1822, column: 46, scope: !5470)
!5479 = !DILocation(line: 1824, column: 1, scope: !5449)
!5480 = distinct !DISubprogram(name: "z_irq_spurious", scope: !5360, file: !5360, line: 155, type: !17, scopeLine: 156, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2151, retainedNodes: !223)
!5481 = !DILocalVariable(name: "unused", arg: 1, scope: !5480, file: !5360, line: 155, type: !13)
!5482 = !DILocation(line: 155, column: 33, scope: !5480)
!5483 = !DILocation(line: 157, column: 2, scope: !5480)
!5484 = !DILocation(line: 159, column: 2, scope: !5480)
!5485 = !DILocation(line: 160, column: 1, scope: !5480)
!5486 = distinct !DISubprogram(name: "z_arm_nmi", scope: !5487, file: !5487, line: 87, type: !253, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2198, retainedNodes: !223)
!5487 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5488 = !DILocation(line: 89, column: 2, scope: !5486)
!5489 = !DILocation(line: 90, column: 2, scope: !5486)
!5490 = !DILocation(line: 91, column: 1, scope: !5486)
!5491 = distinct !DISubprogram(name: "z_arm_prep_c", scope: !5492, file: !5492, line: 256, type: !253, scopeLine: 257, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2200, retainedNodes: !223)
!5492 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5493 = !DILocation(line: 258, column: 2, scope: !5491)
!5494 = !DILocation(line: 260, column: 2, scope: !5491)
!5495 = !DILocation(line: 262, column: 2, scope: !5491)
!5496 = !DILocation(line: 263, column: 2, scope: !5491)
!5497 = !DILocation(line: 267, column: 2, scope: !5491)
!5498 = !DILocation(line: 268, column: 2, scope: !5491)
!5499 = distinct !DISubprogram(name: "relocate_vector_table", scope: !5492, file: !5492, line: 53, type: !253, scopeLine: 54, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2200, retainedNodes: !223)
!5500 = !DILocation(line: 55, column: 12, scope: !5499)
!5501 = !DILocation(line: 271, column: 3, scope: !5502, inlinedAt: !5503)
!5502 = distinct !DISubprogram(name: "__DSB", scope: !5414, file: !5414, line: 269, type: !253, scopeLine: 270, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2200, retainedNodes: !223)
!5503 = distinct !DILocation(line: 56, column: 2, scope: !5499)
!5504 = !{i64 6933806}
!5505 = !DILocation(line: 260, column: 3, scope: !5506, inlinedAt: !5507)
!5506 = distinct !DISubprogram(name: "__ISB", scope: !5414, file: !5414, line: 258, type: !253, scopeLine: 259, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2200, retainedNodes: !223)
!5507 = distinct !DILocation(line: 57, column: 2, scope: !5499)
!5508 = !{i64 6933523}
!5509 = !DILocation(line: 58, column: 1, scope: !5499)
!5510 = distinct !DISubprogram(name: "z_arm_floating_point_init", scope: !5492, file: !5492, line: 96, type: !253, scopeLine: 97, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2200, retainedNodes: !223)
!5511 = !DILocation(line: 103, column: 13, scope: !5510)
!5512 = !DILocalVariable(name: "result", scope: !5513, file: !5414, line: 973, type: !173)
!5513 = distinct !DISubprogram(name: "__get_CONTROL", scope: !5414, file: !5414, line: 971, type: !5514, scopeLine: 972, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2200, retainedNodes: !223)
!5514 = !DISubroutineType(types: !5515)
!5515 = !{!173}
!5516 = !DILocation(line: 973, column: 12, scope: !5513, inlinedAt: !5517)
!5517 = distinct !DILocation(line: 189, column: 16, scope: !5510)
!5518 = !DILocation(line: 975, column: 3, scope: !5513, inlinedAt: !5517)
!5519 = !{i64 6954636}
!5520 = !DILocation(line: 976, column: 10, scope: !5513, inlinedAt: !5517)
!5521 = !DILocation(line: 189, column: 32, scope: !5510)
!5522 = !DILocalVariable(name: "control", arg: 1, scope: !5523, file: !5414, line: 1001, type: !173)
!5523 = distinct !DISubprogram(name: "__set_CONTROL", scope: !5414, file: !5414, line: 1001, type: !5524, scopeLine: 1002, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2200, retainedNodes: !223)
!5524 = !DISubroutineType(types: !5525)
!5525 = !{null, !173}
!5526 = !DILocation(line: 1001, column: 50, scope: !5523, inlinedAt: !5527)
!5527 = distinct !DILocation(line: 189, column: 2, scope: !5510)
!5528 = !DILocation(line: 1003, column: 46, scope: !5523, inlinedAt: !5527)
!5529 = !DILocation(line: 1003, column: 3, scope: !5523, inlinedAt: !5527)
!5530 = !{i64 6955356}
!5531 = !DILocation(line: 260, column: 3, scope: !5506, inlinedAt: !5532)
!5532 = distinct !DILocation(line: 1004, column: 3, scope: !5523, inlinedAt: !5527)
!5533 = !DILocation(line: 191, column: 1, scope: !5510)
!5534 = distinct !DISubprogram(name: "arch_swap", scope: !5535, file: !5535, line: 33, type: !5424, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2228, retainedNodes: !223)
!5535 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5536 = !DILocalVariable(name: "key", arg: 1, scope: !5534, file: !5535, line: 33, type: !32)
!5537 = !DILocation(line: 33, column: 28, scope: !5534)
!5538 = !DILocation(line: 36, column: 27, scope: !5534)
!5539 = !DILocation(line: 36, column: 2, scope: !5534)
!5540 = !DILocation(line: 36, column: 12, scope: !5534)
!5541 = !DILocation(line: 36, column: 17, scope: !5534)
!5542 = !DILocation(line: 36, column: 25, scope: !5534)
!5543 = !DILocation(line: 37, column: 37, scope: !5534)
!5544 = !DILocation(line: 37, column: 2, scope: !5534)
!5545 = !DILocation(line: 37, column: 12, scope: !5534)
!5546 = !DILocation(line: 37, column: 17, scope: !5534)
!5547 = !DILocation(line: 37, column: 35, scope: !5534)
!5548 = !DILocation(line: 41, column: 12, scope: !5534)
!5549 = !DILocalVariable(name: "key", arg: 1, scope: !5550, file: !5551, line: 84, type: !32)
!5550 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5551, file: !5551, line: 84, type: !5361, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2228, retainedNodes: !223)
!5551 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/asm_inline_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5552 = !DILocation(line: 84, column: 56, scope: !5550, inlinedAt: !5553)
!5553 = distinct !DILocation(line: 44, column: 2, scope: !5534)
!5554 = !DILocation(line: 98, column: 12, scope: !5550, inlinedAt: !5553)
!5555 = !DILocation(line: 95, column: 2, scope: !5550, inlinedAt: !5553)
!5556 = !{i64 2840304}
!5557 = !DILocation(line: 53, column: 9, scope: !5534)
!5558 = !DILocation(line: 53, column: 19, scope: !5534)
!5559 = !DILocation(line: 53, column: 24, scope: !5534)
!5560 = !DILocation(line: 53, column: 2, scope: !5534)
!5561 = distinct !DISubprogram(name: "arch_new_thread", scope: !5562, file: !5562, line: 56, type: !5563, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2256, retainedNodes: !223)
!5562 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5563 = !DISubroutineType(types: !5564)
!5564 = !{null, !5565, !5659, !925, !240, !102, !102, !102}
!5565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5566, size: 32)
!5566 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !114, line: 245, size: 896, elements: !5567)
!5567 = !{!5568, !5626, !5638, !5639, !5640, !5641, !5654}
!5568 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !5566, file: !114, line: 247, baseType: !5569, size: 384)
!5569 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !114, line: 57, size: 384, elements: !5570)
!5570 = !{!5571, !5595, !5602, !5603, !5604, !5613, !5614, !5615}
!5571 = !DIDerivedType(tag: DW_TAG_member, scope: !5569, file: !114, line: 60, baseType: !5572, size: 64)
!5572 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5569, file: !114, line: 60, size: 64, elements: !5573)
!5573 = !{!5574, !5589}
!5574 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !5572, file: !114, line: 61, baseType: !5575, size: 64)
!5575 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !124, line: 49, baseType: !5576)
!5576 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !124, line: 37, size: 64, elements: !5577)
!5577 = !{!5578, !5584}
!5578 = !DIDerivedType(tag: DW_TAG_member, scope: !5576, file: !124, line: 38, baseType: !5579, size: 32)
!5579 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5576, file: !124, line: 38, size: 32, elements: !5580)
!5580 = !{!5581, !5583}
!5581 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !5579, file: !124, line: 39, baseType: !5582, size: 32)
!5582 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5576, size: 32)
!5583 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5579, file: !124, line: 40, baseType: !5582, size: 32)
!5584 = !DIDerivedType(tag: DW_TAG_member, scope: !5576, file: !124, line: 42, baseType: !5585, size: 32, offset: 32)
!5585 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5576, file: !124, line: 42, size: 32, elements: !5586)
!5586 = !{!5587, !5588}
!5587 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !5585, file: !124, line: 43, baseType: !5582, size: 32)
!5588 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !5585, file: !124, line: 44, baseType: !5582, size: 32)
!5589 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !5572, file: !114, line: 62, baseType: !5590, size: 64)
!5590 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !140, line: 49, size: 64, elements: !5591)
!5591 = !{!5592}
!5592 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !5590, file: !140, line: 50, baseType: !5593, size: 64)
!5593 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5594, size: 64, elements: !145)
!5594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5590, size: 32)
!5595 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !5569, file: !114, line: 68, baseType: !5596, size: 32, offset: 64)
!5596 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5597, size: 32)
!5597 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !150, line: 233, baseType: !5598)
!5598 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !150, line: 231, size: 64, elements: !5599)
!5599 = !{!5600}
!5600 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !5598, file: !150, line: 232, baseType: !5601, size: 64)
!5601 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !124, line: 48, baseType: !5576)
!5602 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !5569, file: !114, line: 71, baseType: !156, size: 8, offset: 96)
!5603 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !5569, file: !114, line: 74, baseType: !156, size: 8, offset: 104)
!5604 = !DIDerivedType(tag: DW_TAG_member, scope: !5569, file: !114, line: 90, baseType: !5605, size: 16, offset: 112)
!5605 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5569, file: !114, line: 90, size: 16, elements: !5606)
!5606 = !{!5607, !5612}
!5607 = !DIDerivedType(tag: DW_TAG_member, scope: !5605, file: !114, line: 91, baseType: !5608, size: 16)
!5608 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5605, file: !114, line: 91, size: 16, elements: !5609)
!5609 = !{!5610, !5611}
!5610 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !5608, file: !114, line: 96, baseType: !166, size: 8)
!5611 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !5608, file: !114, line: 97, baseType: !156, size: 8, offset: 8)
!5612 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !5605, file: !114, line: 100, baseType: !170, size: 16)
!5613 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !5569, file: !114, line: 107, baseType: !173, size: 32, offset: 128)
!5614 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !5569, file: !114, line: 127, baseType: !102, size: 32, offset: 160)
!5615 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !5569, file: !114, line: 131, baseType: !5616, size: 192, offset: 192)
!5616 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !150, line: 244, size: 192, elements: !5617)
!5617 = !{!5618, !5619, !5625}
!5618 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !5616, file: !150, line: 245, baseType: !5575, size: 64)
!5619 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !5616, file: !150, line: 246, baseType: !5620, size: 32, offset: 64)
!5620 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !150, line: 242, baseType: !5621)
!5621 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5622, size: 32)
!5622 = !DISubroutineType(types: !5623)
!5623 = !{null, !5624}
!5624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5616, size: 32)
!5625 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !5616, file: !150, line: 249, baseType: !186, size: 64, offset: 128)
!5626 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !5566, file: !114, line: 250, baseType: !5627, size: 288, offset: 384)
!5627 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !190, line: 25, size: 288, elements: !5628)
!5628 = !{!5629, !5630, !5631, !5632, !5633, !5634, !5635, !5636, !5637}
!5629 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !5627, file: !190, line: 26, baseType: !173, size: 32)
!5630 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !5627, file: !190, line: 27, baseType: !173, size: 32, offset: 32)
!5631 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !5627, file: !190, line: 28, baseType: !173, size: 32, offset: 64)
!5632 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !5627, file: !190, line: 29, baseType: !173, size: 32, offset: 96)
!5633 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !5627, file: !190, line: 30, baseType: !173, size: 32, offset: 128)
!5634 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !5627, file: !190, line: 31, baseType: !173, size: 32, offset: 160)
!5635 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !5627, file: !190, line: 32, baseType: !173, size: 32, offset: 192)
!5636 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !5627, file: !190, line: 33, baseType: !173, size: 32, offset: 224)
!5637 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !5627, file: !190, line: 34, baseType: !173, size: 32, offset: 256)
!5638 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !5566, file: !114, line: 253, baseType: !102, size: 32, offset: 672)
!5639 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !5566, file: !114, line: 256, baseType: !5597, size: 64, offset: 704)
!5640 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !5566, file: !114, line: 294, baseType: !103, size: 32, offset: 768)
!5641 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !5566, file: !114, line: 325, baseType: !5642, size: 32, offset: 800)
!5642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5643, size: 32)
!5643 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !109, line: 5073, size: 160, elements: !5644)
!5644 = !{!5645, !5651, !5652}
!5645 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !5643, file: !109, line: 5074, baseType: !5646, size: 96)
!5646 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !210, line: 56, size: 96, elements: !5647)
!5647 = !{!5648, !5649, !5650}
!5648 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !5646, file: !210, line: 57, baseType: !213, size: 32)
!5649 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !5646, file: !210, line: 58, baseType: !102, size: 32, offset: 32)
!5650 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !5646, file: !210, line: 59, baseType: !217, size: 32, offset: 64)
!5651 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !5643, file: !109, line: 5075, baseType: !5597, size: 64, offset: 96)
!5652 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5643, file: !109, line: 5076, baseType: !5653, offset: 160)
!5653 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !222, line: 43, elements: !223)
!5654 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !5566, file: !114, line: 343, baseType: !5655, size: 64, offset: 832)
!5655 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !190, line: 60, size: 64, elements: !5656)
!5656 = !{!5657, !5658}
!5657 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !5655, file: !190, line: 63, baseType: !173, size: 32)
!5658 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !5655, file: !190, line: 66, baseType: !173, size: 32, offset: 32)
!5659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5660, size: 32)
!5660 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !232, line: 44, baseType: !5661)
!5661 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !234, line: 47, size: 8, elements: !5662)
!5662 = !{!5663}
!5663 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5661, file: !234, line: 48, baseType: !237, size: 8)
!5664 = !DILocalVariable(name: "thread", arg: 1, scope: !5561, file: !5562, line: 56, type: !5565)
!5665 = !DILocation(line: 56, column: 39, scope: !5561)
!5666 = !DILocalVariable(name: "stack", arg: 2, scope: !5561, file: !5562, line: 56, type: !5659)
!5667 = !DILocation(line: 56, column: 65, scope: !5561)
!5668 = !DILocalVariable(name: "stack_ptr", arg: 3, scope: !5561, file: !5562, line: 57, type: !925)
!5669 = !DILocation(line: 57, column: 14, scope: !5561)
!5670 = !DILocalVariable(name: "entry", arg: 4, scope: !5561, file: !5562, line: 57, type: !240)
!5671 = !DILocation(line: 57, column: 42, scope: !5561)
!5672 = !DILocalVariable(name: "p1", arg: 5, scope: !5561, file: !5562, line: 58, type: !102)
!5673 = !DILocation(line: 58, column: 14, scope: !5561)
!5674 = !DILocalVariable(name: "p2", arg: 6, scope: !5561, file: !5562, line: 58, type: !102)
!5675 = !DILocation(line: 58, column: 24, scope: !5561)
!5676 = !DILocalVariable(name: "p3", arg: 7, scope: !5561, file: !5562, line: 58, type: !102)
!5677 = !DILocation(line: 58, column: 34, scope: !5561)
!5678 = !DILocalVariable(name: "iframe", scope: !5561, file: !5562, line: 60, type: !2259)
!5679 = !DILocation(line: 60, column: 21, scope: !5561)
!5680 = !DILocation(line: 85, column: 11, scope: !5561)
!5681 = !DILocation(line: 85, column: 9, scope: !5561)
!5682 = !DILocation(line: 93, column: 2, scope: !5561)
!5683 = !DILocation(line: 93, column: 10, scope: !5561)
!5684 = !DILocation(line: 93, column: 13, scope: !5561)
!5685 = !DILocation(line: 98, column: 2, scope: !5561)
!5686 = !DILocation(line: 98, column: 10, scope: !5561)
!5687 = !DILocation(line: 98, column: 13, scope: !5561)
!5688 = !DILocation(line: 100, column: 25, scope: !5561)
!5689 = !DILocation(line: 100, column: 15, scope: !5561)
!5690 = !DILocation(line: 100, column: 2, scope: !5561)
!5691 = !DILocation(line: 100, column: 10, scope: !5561)
!5692 = !DILocation(line: 100, column: 13, scope: !5561)
!5693 = !DILocation(line: 101, column: 25, scope: !5561)
!5694 = !DILocation(line: 101, column: 15, scope: !5561)
!5695 = !DILocation(line: 101, column: 2, scope: !5561)
!5696 = !DILocation(line: 101, column: 10, scope: !5561)
!5697 = !DILocation(line: 101, column: 13, scope: !5561)
!5698 = !DILocation(line: 102, column: 25, scope: !5561)
!5699 = !DILocation(line: 102, column: 15, scope: !5561)
!5700 = !DILocation(line: 102, column: 2, scope: !5561)
!5701 = !DILocation(line: 102, column: 10, scope: !5561)
!5702 = !DILocation(line: 102, column: 13, scope: !5561)
!5703 = !DILocation(line: 103, column: 25, scope: !5561)
!5704 = !DILocation(line: 103, column: 15, scope: !5561)
!5705 = !DILocation(line: 103, column: 2, scope: !5561)
!5706 = !DILocation(line: 103, column: 10, scope: !5561)
!5707 = !DILocation(line: 103, column: 13, scope: !5561)
!5708 = !DILocation(line: 106, column: 2, scope: !5561)
!5709 = !DILocation(line: 106, column: 10, scope: !5561)
!5710 = !DILocation(line: 106, column: 15, scope: !5561)
!5711 = !DILocation(line: 122, column: 39, scope: !5561)
!5712 = !DILocation(line: 122, column: 29, scope: !5561)
!5713 = !DILocation(line: 122, column: 2, scope: !5561)
!5714 = !DILocation(line: 122, column: 10, scope: !5561)
!5715 = !DILocation(line: 122, column: 23, scope: !5561)
!5716 = !DILocation(line: 122, column: 27, scope: !5561)
!5717 = !DILocation(line: 123, column: 2, scope: !5561)
!5718 = !DILocation(line: 123, column: 10, scope: !5561)
!5719 = !DILocation(line: 123, column: 15, scope: !5561)
!5720 = !DILocation(line: 123, column: 23, scope: !5561)
!5721 = !DILocation(line: 143, column: 1, scope: !5561)
!5722 = distinct !DISubprogram(name: "arch_switch_to_main_thread", scope: !5562, file: !5562, line: 530, type: !5723, scopeLine: 532, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2256, retainedNodes: !223)
!5723 = !DISubroutineType(types: !5724)
!5724 = !{null, !5565, !925, !240}
!5725 = !DILocalVariable(name: "main_thread", arg: 1, scope: !5722, file: !5562, line: 530, type: !5565)
!5726 = !DILocation(line: 530, column: 50, scope: !5722)
!5727 = !DILocalVariable(name: "stack_ptr", arg: 2, scope: !5722, file: !5562, line: 530, type: !925)
!5728 = !DILocation(line: 530, column: 69, scope: !5722)
!5729 = !DILocalVariable(name: "_main", arg: 3, scope: !5722, file: !5562, line: 531, type: !240)
!5730 = !DILocation(line: 531, column: 22, scope: !5722)
!5731 = !DILocation(line: 533, column: 2, scope: !5722)
!5732 = !DILocation(line: 535, column: 13, scope: !5722)
!5733 = !DILocation(line: 535, column: 11, scope: !5722)
!5734 = !DILocation(line: 599, column: 9, scope: !5722)
!5735 = !DILocation(line: 599, column: 22, scope: !5722)
!5736 = !DILocation(line: 576, column: 2, scope: !5722)
!5737 = !{i64 18049, i64 18065, i64 18143, i64 18197, i64 18440, i64 18509, i64 18626, i64 18645, i64 18664, i64 18689}
!5738 = !DILocation(line: 603, column: 2, scope: !5722)
!5739 = distinct !DISubprogram(name: "z_arm_prepare_switch_to_main", scope: !5562, file: !5562, line: 506, type: !253, scopeLine: 507, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2256, retainedNodes: !223)
!5740 = !DILocation(line: 528, column: 1, scope: !5739)
!5741 = distinct !DISubprogram(name: "z_arm_fault", scope: !5742, file: !5742, line: 1036, type: !5743, scopeLine: 1038, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2299, retainedNodes: !223)
!5742 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5743 = !DISubroutineType(types: !5744)
!5744 = !{null, !173, !173, !173, !5745}
!5745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5746, size: 32)
!5746 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !190, line: 37, baseType: !5747)
!5747 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !190, line: 25, size: 288, elements: !5748)
!5748 = !{!5749, !5750, !5751, !5752, !5753, !5754, !5755, !5756, !5757}
!5749 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !5747, file: !190, line: 26, baseType: !173, size: 32)
!5750 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !5747, file: !190, line: 27, baseType: !173, size: 32, offset: 32)
!5751 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !5747, file: !190, line: 28, baseType: !173, size: 32, offset: 64)
!5752 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !5747, file: !190, line: 29, baseType: !173, size: 32, offset: 96)
!5753 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !5747, file: !190, line: 30, baseType: !173, size: 32, offset: 128)
!5754 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !5747, file: !190, line: 31, baseType: !173, size: 32, offset: 160)
!5755 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !5747, file: !190, line: 32, baseType: !173, size: 32, offset: 192)
!5756 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !5747, file: !190, line: 33, baseType: !173, size: 32, offset: 224)
!5757 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !5747, file: !190, line: 34, baseType: !173, size: 32, offset: 256)
!5758 = !DILocalVariable(name: "msp", arg: 1, scope: !5741, file: !5742, line: 1036, type: !173)
!5759 = !DILocation(line: 1036, column: 27, scope: !5741)
!5760 = !DILocalVariable(name: "psp", arg: 2, scope: !5741, file: !5742, line: 1036, type: !173)
!5761 = !DILocation(line: 1036, column: 41, scope: !5741)
!5762 = !DILocalVariable(name: "exc_return", arg: 3, scope: !5741, file: !5742, line: 1036, type: !173)
!5763 = !DILocation(line: 1036, column: 55, scope: !5741)
!5764 = !DILocalVariable(name: "callee_regs", arg: 4, scope: !5741, file: !5742, line: 1037, type: !5745)
!5765 = !DILocation(line: 1037, column: 19, scope: !5741)
!5766 = !DILocalVariable(name: "reason", scope: !5741, file: !5742, line: 1039, type: !173)
!5767 = !DILocation(line: 1039, column: 11, scope: !5741)
!5768 = !DILocalVariable(name: "fault", scope: !5741, file: !5742, line: 1040, type: !103)
!5769 = !DILocation(line: 1040, column: 6, scope: !5741)
!5770 = !DILocation(line: 1040, column: 19, scope: !5741)
!5771 = !DILocation(line: 1040, column: 24, scope: !5741)
!5772 = !DILocalVariable(name: "recoverable", scope: !5741, file: !5742, line: 1041, type: !743)
!5773 = !DILocation(line: 1041, column: 7, scope: !5741)
!5774 = !DILocalVariable(name: "nested_exc", scope: !5741, file: !5742, line: 1041, type: !743)
!5775 = !DILocation(line: 1041, column: 20, scope: !5741)
!5776 = !DILocalVariable(name: "esf", scope: !5741, file: !5742, line: 1042, type: !2327)
!5777 = !DILocation(line: 1042, column: 16, scope: !5741)
!5778 = !DILocalVariable(name: "esf_copy", scope: !5741, file: !5742, line: 1047, type: !2328)
!5779 = !DILocation(line: 1047, column: 15, scope: !5741)
!5780 = !DILocalVariable(name: "key", arg: 1, scope: !5781, file: !5551, line: 84, type: !32)
!5781 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5551, file: !5551, line: 84, type: !5361, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2299, retainedNodes: !223)
!5782 = !DILocation(line: 84, column: 56, scope: !5781, inlinedAt: !5783)
!5783 = distinct !DILocation(line: 1050, column: 2, scope: !5741)
!5784 = !DILocation(line: 98, column: 12, scope: !5781, inlinedAt: !5783)
!5785 = !DILocation(line: 95, column: 2, scope: !5781, inlinedAt: !5783)
!5786 = !{i64 2873548}
!5787 = !DILocation(line: 1055, column: 17, scope: !5741)
!5788 = !DILocation(line: 1055, column: 22, scope: !5741)
!5789 = !DILocation(line: 1055, column: 27, scope: !5741)
!5790 = !DILocation(line: 1055, column: 9, scope: !5741)
!5791 = !DILocation(line: 1055, column: 7, scope: !5741)
!5792 = !DILocation(line: 1063, column: 24, scope: !5741)
!5793 = !DILocation(line: 1063, column: 29, scope: !5741)
!5794 = !DILocation(line: 1063, column: 11, scope: !5741)
!5795 = !DILocation(line: 1063, column: 9, scope: !5741)
!5796 = !DILocation(line: 1064, column: 6, scope: !5797)
!5797 = distinct !DILexicalBlock(scope: !5741, file: !5742, line: 1064, column: 6)
!5798 = !DILocation(line: 1064, column: 6, scope: !5741)
!5799 = !DILocation(line: 1065, column: 3, scope: !5800)
!5800 = distinct !DILexicalBlock(scope: !5797, file: !5742, line: 1064, column: 19)
!5801 = !DILocation(line: 1070, column: 9, scope: !5741)
!5802 = !DILocation(line: 1070, column: 20, scope: !5741)
!5803 = !DILocation(line: 1070, column: 2, scope: !5741)
!5804 = !DILocation(line: 1071, column: 2, scope: !5741)
!5805 = !DILocation(line: 1089, column: 6, scope: !5806)
!5806 = distinct !DILexicalBlock(scope: !5741, file: !5742, line: 1089, column: 6)
!5807 = !DILocation(line: 1089, column: 6, scope: !5741)
!5808 = !DILocation(line: 1090, column: 17, scope: !5809)
!5809 = distinct !DILexicalBlock(scope: !5810, file: !5742, line: 1090, column: 7)
!5810 = distinct !DILexicalBlock(scope: !5806, file: !5742, line: 1089, column: 18)
!5811 = !DILocation(line: 1090, column: 23, scope: !5809)
!5812 = !DILocation(line: 1090, column: 28, scope: !5809)
!5813 = !DILocation(line: 1090, column: 44, scope: !5809)
!5814 = !DILocation(line: 1090, column: 7, scope: !5810)
!5815 = !DILocation(line: 1091, column: 13, scope: !5816)
!5816 = distinct !DILexicalBlock(scope: !5809, file: !5742, line: 1090, column: 50)
!5817 = !DILocation(line: 1091, column: 19, scope: !5816)
!5818 = !DILocation(line: 1091, column: 24, scope: !5816)
!5819 = !DILocation(line: 1092, column: 3, scope: !5816)
!5820 = !DILocation(line: 1093, column: 2, scope: !5810)
!5821 = !DILocation(line: 1094, column: 12, scope: !5822)
!5822 = distinct !DILexicalBlock(scope: !5806, file: !5742, line: 1093, column: 9)
!5823 = !DILocation(line: 1094, column: 18, scope: !5822)
!5824 = !DILocation(line: 1094, column: 23, scope: !5822)
!5825 = !DILocation(line: 1097, column: 20, scope: !5741)
!5826 = !DILocation(line: 1097, column: 2, scope: !5741)
!5827 = !DILocation(line: 1098, column: 1, scope: !5741)
!5828 = distinct !DISubprogram(name: "get_esf", scope: !5742, file: !5742, line: 894, type: !5829, scopeLine: 896, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2299, retainedNodes: !223)
!5829 = !DISubroutineType(types: !5830)
!5830 = !{!2327, !173, !173, !173, !5831}
!5831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !743, size: 32)
!5832 = !DILocalVariable(name: "msp", arg: 1, scope: !5828, file: !5742, line: 894, type: !173)
!5833 = !DILocation(line: 894, column: 46, scope: !5828)
!5834 = !DILocalVariable(name: "psp", arg: 2, scope: !5828, file: !5742, line: 894, type: !173)
!5835 = !DILocation(line: 894, column: 60, scope: !5828)
!5836 = !DILocalVariable(name: "exc_return", arg: 3, scope: !5828, file: !5742, line: 894, type: !173)
!5837 = !DILocation(line: 894, column: 74, scope: !5828)
!5838 = !DILocalVariable(name: "nested_exc", arg: 4, scope: !5828, file: !5742, line: 895, type: !5831)
!5839 = !DILocation(line: 895, column: 8, scope: !5828)
!5840 = !DILocalVariable(name: "alternative_state_exc", scope: !5828, file: !5742, line: 897, type: !743)
!5841 = !DILocation(line: 897, column: 7, scope: !5828)
!5842 = !DILocalVariable(name: "ptr_esf", scope: !5828, file: !5742, line: 898, type: !2327)
!5843 = !DILocation(line: 898, column: 16, scope: !5828)
!5844 = !DILocation(line: 900, column: 3, scope: !5828)
!5845 = !DILocation(line: 900, column: 14, scope: !5828)
!5846 = !DILocation(line: 902, column: 7, scope: !5847)
!5847 = distinct !DILexicalBlock(scope: !5828, file: !5742, line: 902, column: 6)
!5848 = !DILocation(line: 902, column: 18, scope: !5847)
!5849 = !DILocation(line: 902, column: 49, scope: !5847)
!5850 = !DILocation(line: 902, column: 6, scope: !5828)
!5851 = !DILocation(line: 905, column: 3, scope: !5852)
!5852 = distinct !DILexicalBlock(scope: !5847, file: !5742, line: 903, column: 33)
!5853 = !DILocation(line: 983, column: 7, scope: !5854)
!5854 = distinct !DILexicalBlock(scope: !5828, file: !5742, line: 983, column: 6)
!5855 = !DILocation(line: 983, column: 18, scope: !5854)
!5856 = !DILocation(line: 983, column: 44, scope: !5854)
!5857 = !DILocation(line: 984, column: 6, scope: !5854)
!5858 = !DILocation(line: 984, column: 17, scope: !5854)
!5859 = !DILocation(line: 983, column: 6, scope: !5828)
!5860 = !DILocation(line: 985, column: 3, scope: !5861)
!5861 = distinct !DILexicalBlock(scope: !5854, file: !5742, line: 984, column: 47)
!5862 = !DILocation(line: 985, column: 3, scope: !5863)
!5863 = distinct !DILexicalBlock(scope: !5864, file: !5742, line: 985, column: 3)
!5864 = distinct !DILexicalBlock(scope: !5865, file: !5742, line: 985, column: 3)
!5865 = distinct !DILexicalBlock(scope: !5861, file: !5742, line: 985, column: 3)
!5866 = !DILocation(line: 986, column: 3, scope: !5861)
!5867 = !DILocation(line: 990, column: 7, scope: !5868)
!5868 = distinct !DILexicalBlock(scope: !5828, file: !5742, line: 990, column: 6)
!5869 = !DILocation(line: 990, column: 6, scope: !5828)
!5870 = !DILocation(line: 991, column: 7, scope: !5871)
!5871 = distinct !DILexicalBlock(scope: !5872, file: !5742, line: 991, column: 7)
!5872 = distinct !DILexicalBlock(scope: !5868, file: !5742, line: 990, column: 30)
!5873 = !DILocation(line: 991, column: 18, scope: !5871)
!5874 = !DILocation(line: 991, column: 7, scope: !5872)
!5875 = !DILocation(line: 993, column: 31, scope: !5876)
!5876 = distinct !DILexicalBlock(scope: !5871, file: !5742, line: 991, column: 44)
!5877 = !DILocation(line: 993, column: 15, scope: !5876)
!5878 = !DILocation(line: 993, column: 12, scope: !5876)
!5879 = !DILocation(line: 995, column: 3, scope: !5876)
!5880 = !DILocation(line: 997, column: 30, scope: !5881)
!5881 = distinct !DILexicalBlock(scope: !5871, file: !5742, line: 995, column: 10)
!5882 = !DILocation(line: 997, column: 14, scope: !5881)
!5883 = !DILocation(line: 997, column: 12, scope: !5881)
!5884 = !DILocation(line: 998, column: 5, scope: !5881)
!5885 = !DILocation(line: 998, column: 16, scope: !5881)
!5886 = !DILocation(line: 1000, column: 2, scope: !5872)
!5887 = !DILocation(line: 1002, column: 9, scope: !5828)
!5888 = !DILocation(line: 1002, column: 2, scope: !5828)
!5889 = !DILocation(line: 1003, column: 1, scope: !5828)
!5890 = distinct !DISubprogram(name: "fault_handle", scope: !5742, file: !5742, line: 786, type: !5891, scopeLine: 787, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2299, retainedNodes: !223)
!5891 = !DISubroutineType(types: !5892)
!5892 = !{!173, !2327, !103, !5831}
!5893 = !DILocalVariable(name: "esf", arg: 1, scope: !5890, file: !5742, line: 786, type: !2327)
!5894 = !DILocation(line: 786, column: 44, scope: !5890)
!5895 = !DILocalVariable(name: "fault", arg: 2, scope: !5890, file: !5742, line: 786, type: !103)
!5896 = !DILocation(line: 786, column: 53, scope: !5890)
!5897 = !DILocalVariable(name: "recoverable", arg: 3, scope: !5890, file: !5742, line: 786, type: !5831)
!5898 = !DILocation(line: 786, column: 66, scope: !5890)
!5899 = !DILocalVariable(name: "reason", scope: !5890, file: !5742, line: 788, type: !173)
!5900 = !DILocation(line: 788, column: 11, scope: !5890)
!5901 = !DILocation(line: 790, column: 3, scope: !5890)
!5902 = !DILocation(line: 790, column: 15, scope: !5890)
!5903 = !DILocation(line: 792, column: 10, scope: !5890)
!5904 = !DILocation(line: 792, column: 2, scope: !5890)
!5905 = !DILocation(line: 794, column: 23, scope: !5906)
!5906 = distinct !DILexicalBlock(scope: !5890, file: !5742, line: 792, column: 17)
!5907 = !DILocation(line: 794, column: 28, scope: !5906)
!5908 = !DILocation(line: 794, column: 12, scope: !5906)
!5909 = !DILocation(line: 794, column: 10, scope: !5906)
!5910 = !DILocation(line: 795, column: 3, scope: !5906)
!5911 = !DILocation(line: 800, column: 29, scope: !5906)
!5912 = !DILocation(line: 800, column: 37, scope: !5906)
!5913 = !DILocation(line: 800, column: 12, scope: !5906)
!5914 = !DILocation(line: 800, column: 10, scope: !5906)
!5915 = !DILocation(line: 801, column: 3, scope: !5906)
!5916 = !DILocation(line: 803, column: 22, scope: !5906)
!5917 = !DILocation(line: 803, column: 30, scope: !5906)
!5918 = !DILocation(line: 803, column: 12, scope: !5906)
!5919 = !DILocation(line: 803, column: 10, scope: !5906)
!5920 = !DILocation(line: 804, column: 3, scope: !5906)
!5921 = !DILocation(line: 806, column: 24, scope: !5906)
!5922 = !DILocation(line: 806, column: 12, scope: !5906)
!5923 = !DILocation(line: 806, column: 10, scope: !5906)
!5924 = !DILocation(line: 807, column: 3, scope: !5906)
!5925 = !DILocation(line: 814, column: 17, scope: !5906)
!5926 = !DILocation(line: 814, column: 22, scope: !5906)
!5927 = !DILocation(line: 814, column: 3, scope: !5906)
!5928 = !DILocation(line: 815, column: 3, scope: !5906)
!5929 = !DILocation(line: 820, column: 22, scope: !5906)
!5930 = !DILocation(line: 820, column: 27, scope: !5906)
!5931 = !DILocation(line: 820, column: 3, scope: !5906)
!5932 = !DILocation(line: 821, column: 3, scope: !5906)
!5933 = !DILocation(line: 824, column: 8, scope: !5934)
!5934 = distinct !DILexicalBlock(scope: !5890, file: !5742, line: 824, column: 6)
!5935 = !DILocation(line: 824, column: 7, scope: !5934)
!5936 = !DILocation(line: 824, column: 6, scope: !5934)
!5937 = !DILocation(line: 824, column: 21, scope: !5934)
!5938 = !DILocation(line: 824, column: 6, scope: !5890)
!5939 = !DILocation(line: 826, column: 14, scope: !5940)
!5940 = distinct !DILexicalBlock(scope: !5934, file: !5742, line: 824, column: 31)
!5941 = !DILocation(line: 826, column: 19, scope: !5940)
!5942 = !DILocation(line: 826, column: 3, scope: !5940)
!5943 = !DILocation(line: 827, column: 2, scope: !5940)
!5944 = !DILocation(line: 829, column: 9, scope: !5890)
!5945 = !DILocation(line: 829, column: 2, scope: !5890)
!5946 = distinct !DISubprogram(name: "hard_fault", scope: !5742, file: !5742, line: 709, type: !5947, scopeLine: 710, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2299, retainedNodes: !223)
!5947 = !DISubroutineType(types: !5948)
!5948 = !{!173, !2327, !5831}
!5949 = !DILocalVariable(name: "esf", arg: 1, scope: !5946, file: !5742, line: 709, type: !2327)
!5950 = !DILocation(line: 709, column: 42, scope: !5946)
!5951 = !DILocalVariable(name: "recoverable", arg: 2, scope: !5946, file: !5742, line: 709, type: !5831)
!5952 = !DILocation(line: 709, column: 53, scope: !5946)
!5953 = !DILocalVariable(name: "reason", scope: !5946, file: !5742, line: 711, type: !173)
!5954 = !DILocation(line: 711, column: 11, scope: !5946)
!5955 = !DILocation(line: 713, column: 2, scope: !5946)
!5956 = !DILocation(line: 713, column: 2, scope: !5957)
!5957 = distinct !DILexicalBlock(scope: !5958, file: !5742, line: 713, column: 2)
!5958 = distinct !DILexicalBlock(scope: !5959, file: !5742, line: 713, column: 2)
!5959 = distinct !DILexicalBlock(scope: !5946, file: !5742, line: 713, column: 2)
!5960 = !DILocation(line: 732, column: 3, scope: !5946)
!5961 = !DILocation(line: 732, column: 15, scope: !5946)
!5962 = !DILocation(line: 734, column: 12, scope: !5963)
!5963 = distinct !DILexicalBlock(scope: !5946, file: !5742, line: 734, column: 6)
!5964 = !DILocation(line: 734, column: 17, scope: !5963)
!5965 = !DILocation(line: 734, column: 41, scope: !5963)
!5966 = !DILocation(line: 734, column: 6, scope: !5946)
!5967 = !DILocation(line: 735, column: 3, scope: !5968)
!5968 = distinct !DILexicalBlock(scope: !5963, file: !5742, line: 734, column: 47)
!5969 = !DILocation(line: 735, column: 3, scope: !5970)
!5970 = distinct !DILexicalBlock(scope: !5971, file: !5742, line: 735, column: 3)
!5971 = distinct !DILexicalBlock(scope: !5972, file: !5742, line: 735, column: 3)
!5972 = distinct !DILexicalBlock(scope: !5968, file: !5742, line: 735, column: 3)
!5973 = !DILocation(line: 736, column: 2, scope: !5968)
!5974 = !DILocation(line: 736, column: 19, scope: !5975)
!5975 = distinct !DILexicalBlock(scope: !5963, file: !5742, line: 736, column: 13)
!5976 = !DILocation(line: 736, column: 24, scope: !5975)
!5977 = !DILocation(line: 736, column: 49, scope: !5975)
!5978 = !DILocation(line: 736, column: 13, scope: !5963)
!5979 = !DILocation(line: 737, column: 3, scope: !5980)
!5980 = distinct !DILexicalBlock(scope: !5975, file: !5742, line: 736, column: 55)
!5981 = !DILocation(line: 737, column: 3, scope: !5982)
!5982 = distinct !DILexicalBlock(scope: !5983, file: !5742, line: 737, column: 3)
!5983 = distinct !DILexicalBlock(scope: !5984, file: !5742, line: 737, column: 3)
!5984 = distinct !DILexicalBlock(scope: !5980, file: !5742, line: 737, column: 3)
!5985 = !DILocation(line: 738, column: 2, scope: !5980)
!5986 = !DILocation(line: 738, column: 19, scope: !5987)
!5987 = distinct !DILexicalBlock(scope: !5975, file: !5742, line: 738, column: 13)
!5988 = !DILocation(line: 738, column: 24, scope: !5987)
!5989 = !DILocation(line: 738, column: 47, scope: !5987)
!5990 = !DILocation(line: 738, column: 13, scope: !5975)
!5991 = !DILocation(line: 739, column: 3, scope: !5992)
!5992 = distinct !DILexicalBlock(scope: !5987, file: !5742, line: 738, column: 53)
!5993 = !DILocation(line: 739, column: 3, scope: !5994)
!5994 = distinct !DILexicalBlock(scope: !5995, file: !5742, line: 739, column: 3)
!5995 = distinct !DILexicalBlock(scope: !5996, file: !5742, line: 739, column: 3)
!5996 = distinct !DILexicalBlock(scope: !5992, file: !5742, line: 739, column: 3)
!5997 = !DILocation(line: 740, column: 32, scope: !5998)
!5998 = distinct !DILexicalBlock(scope: !5992, file: !5742, line: 740, column: 7)
!5999 = !DILocation(line: 740, column: 7, scope: !5998)
!6000 = !DILocation(line: 740, column: 7, scope: !5992)
!6001 = !DILocation(line: 741, column: 4, scope: !6002)
!6002 = distinct !DILexicalBlock(scope: !5998, file: !5742, line: 740, column: 38)
!6003 = !DILocation(line: 741, column: 4, scope: !6004)
!6004 = distinct !DILexicalBlock(scope: !6005, file: !5742, line: 741, column: 4)
!6005 = distinct !DILexicalBlock(scope: !6006, file: !5742, line: 741, column: 4)
!6006 = distinct !DILexicalBlock(scope: !6002, file: !5742, line: 741, column: 4)
!6007 = !DILocation(line: 742, column: 13, scope: !6002)
!6008 = !DILocation(line: 742, column: 18, scope: !6002)
!6009 = !DILocation(line: 742, column: 24, scope: !6002)
!6010 = !DILocation(line: 742, column: 11, scope: !6002)
!6011 = !DILocation(line: 743, column: 3, scope: !6002)
!6012 = !DILocation(line: 743, column: 20, scope: !6013)
!6013 = distinct !DILexicalBlock(scope: !5998, file: !5742, line: 743, column: 14)
!6014 = !DILocation(line: 743, column: 25, scope: !6013)
!6015 = !DILocation(line: 743, column: 52, scope: !6013)
!6016 = !DILocation(line: 743, column: 14, scope: !5998)
!6017 = !DILocation(line: 744, column: 30, scope: !6018)
!6018 = distinct !DILexicalBlock(scope: !6013, file: !5742, line: 743, column: 58)
!6019 = !DILocation(line: 744, column: 38, scope: !6018)
!6020 = !DILocation(line: 744, column: 13, scope: !6018)
!6021 = !DILocation(line: 744, column: 11, scope: !6018)
!6022 = !DILocation(line: 745, column: 3, scope: !6018)
!6023 = !DILocation(line: 745, column: 20, scope: !6024)
!6024 = distinct !DILexicalBlock(scope: !6013, file: !5742, line: 745, column: 14)
!6025 = !DILocation(line: 745, column: 25, scope: !6024)
!6026 = !DILocation(line: 745, column: 52, scope: !6024)
!6027 = !DILocation(line: 745, column: 14, scope: !6013)
!6028 = !DILocation(line: 746, column: 23, scope: !6029)
!6029 = distinct !DILexicalBlock(scope: !6024, file: !5742, line: 745, column: 58)
!6030 = !DILocation(line: 746, column: 31, scope: !6029)
!6031 = !DILocation(line: 746, column: 13, scope: !6029)
!6032 = !DILocation(line: 746, column: 11, scope: !6029)
!6033 = !DILocation(line: 747, column: 3, scope: !6029)
!6034 = !DILocation(line: 747, column: 20, scope: !6035)
!6035 = distinct !DILexicalBlock(scope: !6024, file: !5742, line: 747, column: 14)
!6036 = !DILocation(line: 747, column: 25, scope: !6035)
!6037 = !DILocation(line: 747, column: 52, scope: !6035)
!6038 = !DILocation(line: 747, column: 14, scope: !6024)
!6039 = !DILocation(line: 748, column: 25, scope: !6040)
!6040 = distinct !DILexicalBlock(scope: !6035, file: !5742, line: 747, column: 58)
!6041 = !DILocation(line: 748, column: 13, scope: !6040)
!6042 = !DILocation(line: 748, column: 11, scope: !6040)
!6043 = !DILocation(line: 753, column: 3, scope: !6040)
!6044 = !DILocation(line: 757, column: 2, scope: !5992)
!6045 = !DILocation(line: 766, column: 9, scope: !5946)
!6046 = !DILocation(line: 766, column: 2, scope: !5946)
!6047 = distinct !DISubprogram(name: "mem_manage_fault", scope: !5742, file: !5742, line: 229, type: !5891, scopeLine: 231, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2299, retainedNodes: !223)
!6048 = !DILocalVariable(name: "esf", arg: 1, scope: !6047, file: !5742, line: 229, type: !2327)
!6049 = !DILocation(line: 229, column: 48, scope: !6047)
!6050 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !6047, file: !5742, line: 229, type: !103)
!6051 = !DILocation(line: 229, column: 57, scope: !6047)
!6052 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6047, file: !5742, line: 230, type: !5831)
!6053 = !DILocation(line: 230, column: 16, scope: !6047)
!6054 = !DILocalVariable(name: "reason", scope: !6047, file: !5742, line: 232, type: !173)
!6055 = !DILocation(line: 232, column: 11, scope: !6047)
!6056 = !DILocalVariable(name: "mmfar", scope: !6047, file: !5742, line: 233, type: !173)
!6057 = !DILocation(line: 233, column: 11, scope: !6047)
!6058 = !DILocation(line: 235, column: 2, scope: !6047)
!6059 = !DILocation(line: 235, column: 2, scope: !6060)
!6060 = distinct !DILexicalBlock(scope: !6061, file: !5742, line: 235, column: 2)
!6061 = distinct !DILexicalBlock(scope: !6062, file: !5742, line: 235, column: 2)
!6062 = distinct !DILexicalBlock(scope: !6047, file: !5742, line: 235, column: 2)
!6063 = !DILocation(line: 237, column: 12, scope: !6064)
!6064 = distinct !DILexicalBlock(scope: !6047, file: !5742, line: 237, column: 6)
!6065 = !DILocation(line: 237, column: 17, scope: !6064)
!6066 = !DILocation(line: 237, column: 41, scope: !6064)
!6067 = !DILocation(line: 237, column: 6, scope: !6047)
!6068 = !DILocation(line: 238, column: 3, scope: !6069)
!6069 = distinct !DILexicalBlock(scope: !6064, file: !5742, line: 237, column: 47)
!6070 = !DILocation(line: 238, column: 3, scope: !6071)
!6071 = distinct !DILexicalBlock(scope: !6072, file: !5742, line: 238, column: 3)
!6072 = distinct !DILexicalBlock(scope: !6073, file: !5742, line: 238, column: 3)
!6073 = distinct !DILexicalBlock(scope: !6069, file: !5742, line: 238, column: 3)
!6074 = !DILocation(line: 240, column: 2, scope: !6069)
!6075 = !DILocation(line: 241, column: 12, scope: !6076)
!6076 = distinct !DILexicalBlock(scope: !6047, file: !5742, line: 241, column: 6)
!6077 = !DILocation(line: 241, column: 17, scope: !6076)
!6078 = !DILocation(line: 241, column: 43, scope: !6076)
!6079 = !DILocation(line: 241, column: 6, scope: !6047)
!6080 = !DILocation(line: 242, column: 3, scope: !6081)
!6081 = distinct !DILexicalBlock(scope: !6076, file: !5742, line: 241, column: 49)
!6082 = !DILocation(line: 242, column: 3, scope: !6083)
!6083 = distinct !DILexicalBlock(scope: !6084, file: !5742, line: 242, column: 3)
!6084 = distinct !DILexicalBlock(scope: !6085, file: !5742, line: 242, column: 3)
!6085 = distinct !DILexicalBlock(scope: !6081, file: !5742, line: 242, column: 3)
!6086 = !DILocation(line: 243, column: 2, scope: !6081)
!6087 = !DILocation(line: 244, column: 12, scope: !6088)
!6088 = distinct !DILexicalBlock(scope: !6047, file: !5742, line: 244, column: 6)
!6089 = !DILocation(line: 244, column: 17, scope: !6088)
!6090 = !DILocation(line: 244, column: 42, scope: !6088)
!6091 = !DILocation(line: 244, column: 6, scope: !6047)
!6092 = !DILocation(line: 245, column: 3, scope: !6093)
!6093 = distinct !DILexicalBlock(scope: !6088, file: !5742, line: 244, column: 48)
!6094 = !DILocation(line: 245, column: 3, scope: !6095)
!6095 = distinct !DILexicalBlock(scope: !6096, file: !5742, line: 245, column: 3)
!6096 = distinct !DILexicalBlock(scope: !6097, file: !5742, line: 245, column: 3)
!6097 = distinct !DILexicalBlock(scope: !6093, file: !5742, line: 245, column: 3)
!6098 = !DILocalVariable(name: "temp", scope: !6093, file: !5742, line: 254, type: !173)
!6099 = !DILocation(line: 254, column: 12, scope: !6093)
!6100 = !DILocation(line: 254, column: 24, scope: !6093)
!6101 = !DILocation(line: 256, column: 13, scope: !6102)
!6102 = distinct !DILexicalBlock(scope: !6093, file: !5742, line: 256, column: 7)
!6103 = !DILocation(line: 256, column: 18, scope: !6102)
!6104 = !DILocation(line: 256, column: 44, scope: !6102)
!6105 = !DILocation(line: 256, column: 7, scope: !6093)
!6106 = !DILocation(line: 257, column: 12, scope: !6107)
!6107 = distinct !DILexicalBlock(scope: !6102, file: !5742, line: 256, column: 50)
!6108 = !DILocation(line: 257, column: 10, scope: !6107)
!6109 = !DILocation(line: 258, column: 4, scope: !6107)
!6110 = !DILocation(line: 258, column: 4, scope: !6111)
!6111 = distinct !DILexicalBlock(scope: !6112, file: !5742, line: 258, column: 4)
!6112 = distinct !DILexicalBlock(scope: !6113, file: !5742, line: 258, column: 4)
!6113 = distinct !DILexicalBlock(scope: !6107, file: !5742, line: 258, column: 4)
!6114 = !DILocation(line: 259, column: 8, scope: !6115)
!6115 = distinct !DILexicalBlock(scope: !6107, file: !5742, line: 259, column: 8)
!6116 = !DILocation(line: 259, column: 24, scope: !6115)
!6117 = !DILocation(line: 259, column: 8, scope: !6107)
!6118 = !DILocation(line: 261, column: 15, scope: !6119)
!6119 = distinct !DILexicalBlock(scope: !6115, file: !5742, line: 259, column: 30)
!6120 = !DILocation(line: 262, column: 4, scope: !6119)
!6121 = !DILocation(line: 263, column: 3, scope: !6107)
!6122 = !DILocation(line: 264, column: 2, scope: !6093)
!6123 = !DILocation(line: 265, column: 12, scope: !6124)
!6124 = distinct !DILexicalBlock(scope: !6047, file: !5742, line: 265, column: 6)
!6125 = !DILocation(line: 265, column: 17, scope: !6124)
!6126 = !DILocation(line: 265, column: 42, scope: !6124)
!6127 = !DILocation(line: 265, column: 6, scope: !6047)
!6128 = !DILocation(line: 266, column: 3, scope: !6129)
!6129 = distinct !DILexicalBlock(scope: !6124, file: !5742, line: 265, column: 48)
!6130 = !DILocation(line: 266, column: 3, scope: !6131)
!6131 = distinct !DILexicalBlock(scope: !6132, file: !5742, line: 266, column: 3)
!6132 = distinct !DILexicalBlock(scope: !6133, file: !5742, line: 266, column: 3)
!6133 = distinct !DILexicalBlock(scope: !6129, file: !5742, line: 266, column: 3)
!6134 = !DILocation(line: 267, column: 2, scope: !6129)
!6135 = !DILocation(line: 269, column: 12, scope: !6136)
!6136 = distinct !DILexicalBlock(scope: !6047, file: !5742, line: 269, column: 6)
!6137 = !DILocation(line: 269, column: 17, scope: !6136)
!6138 = !DILocation(line: 269, column: 41, scope: !6136)
!6139 = !DILocation(line: 269, column: 6, scope: !6047)
!6140 = !DILocation(line: 270, column: 3, scope: !6141)
!6141 = distinct !DILexicalBlock(scope: !6136, file: !5742, line: 269, column: 47)
!6142 = !DILocation(line: 270, column: 3, scope: !6143)
!6143 = distinct !DILexicalBlock(scope: !6144, file: !5742, line: 270, column: 3)
!6144 = distinct !DILexicalBlock(scope: !6145, file: !5742, line: 270, column: 3)
!6145 = distinct !DILexicalBlock(scope: !6141, file: !5742, line: 270, column: 3)
!6146 = !DILocation(line: 272, column: 2, scope: !6141)
!6147 = !DILocation(line: 288, column: 12, scope: !6148)
!6148 = distinct !DILexicalBlock(scope: !6047, file: !5742, line: 288, column: 6)
!6149 = !DILocation(line: 288, column: 17, scope: !6148)
!6150 = !DILocation(line: 288, column: 41, scope: !6148)
!6151 = !DILocation(line: 289, column: 9, scope: !6148)
!6152 = !DILocation(line: 289, column: 14, scope: !6148)
!6153 = !DILocation(line: 288, column: 6, scope: !6047)
!6154 = !DILocation(line: 347, column: 8, scope: !6155)
!6155 = distinct !DILexicalBlock(scope: !6148, file: !5742, line: 289, column: 40)
!6156 = !DILocation(line: 352, column: 2, scope: !6155)
!6157 = !DILocation(line: 360, column: 12, scope: !6158)
!6158 = distinct !DILexicalBlock(scope: !6047, file: !5742, line: 360, column: 6)
!6159 = !DILocation(line: 360, column: 17, scope: !6158)
!6160 = !DILocation(line: 360, column: 41, scope: !6158)
!6161 = !DILocation(line: 360, column: 6, scope: !6047)
!6162 = !DILocation(line: 361, column: 14, scope: !6163)
!6163 = distinct !DILexicalBlock(scope: !6158, file: !5742, line: 360, column: 47)
!6164 = !DILocation(line: 362, column: 2, scope: !6163)
!6165 = !DILocation(line: 366, column: 12, scope: !6047)
!6166 = !DILocation(line: 369, column: 42, scope: !6047)
!6167 = !DILocation(line: 369, column: 17, scope: !6047)
!6168 = !DILocation(line: 369, column: 3, scope: !6047)
!6169 = !DILocation(line: 369, column: 15, scope: !6047)
!6170 = !DILocation(line: 371, column: 9, scope: !6047)
!6171 = !DILocation(line: 371, column: 2, scope: !6047)
!6172 = distinct !DISubprogram(name: "bus_fault", scope: !5742, file: !5742, line: 383, type: !6173, scopeLine: 384, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2299, retainedNodes: !223)
!6173 = !DISubroutineType(types: !6174)
!6174 = !{!103, !2327, !103, !5831}
!6175 = !DILocalVariable(name: "esf", arg: 1, scope: !6172, file: !5742, line: 383, type: !2327)
!6176 = !DILocation(line: 383, column: 36, scope: !6172)
!6177 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !6172, file: !5742, line: 383, type: !103)
!6178 = !DILocation(line: 383, column: 45, scope: !6172)
!6179 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6172, file: !5742, line: 383, type: !5831)
!6180 = !DILocation(line: 383, column: 68, scope: !6172)
!6181 = !DILocalVariable(name: "reason", scope: !6172, file: !5742, line: 385, type: !173)
!6182 = !DILocation(line: 385, column: 11, scope: !6172)
!6183 = !DILocation(line: 387, column: 2, scope: !6172)
!6184 = !DILocation(line: 387, column: 2, scope: !6185)
!6185 = distinct !DILexicalBlock(scope: !6186, file: !5742, line: 387, column: 2)
!6186 = distinct !DILexicalBlock(scope: !6187, file: !5742, line: 387, column: 2)
!6187 = distinct !DILexicalBlock(scope: !6172, file: !5742, line: 387, column: 2)
!6188 = !DILocation(line: 389, column: 11, scope: !6189)
!6189 = distinct !DILexicalBlock(scope: !6172, file: !5742, line: 389, column: 6)
!6190 = !DILocation(line: 389, column: 16, scope: !6189)
!6191 = !DILocation(line: 389, column: 6, scope: !6172)
!6192 = !DILocation(line: 390, column: 3, scope: !6193)
!6193 = distinct !DILexicalBlock(scope: !6189, file: !5742, line: 389, column: 39)
!6194 = !DILocation(line: 390, column: 3, scope: !6195)
!6195 = distinct !DILexicalBlock(scope: !6196, file: !5742, line: 390, column: 3)
!6196 = distinct !DILexicalBlock(scope: !6197, file: !5742, line: 390, column: 3)
!6197 = distinct !DILexicalBlock(scope: !6193, file: !5742, line: 390, column: 3)
!6198 = !DILocation(line: 391, column: 2, scope: !6193)
!6199 = !DILocation(line: 392, column: 11, scope: !6200)
!6200 = distinct !DILexicalBlock(scope: !6172, file: !5742, line: 392, column: 6)
!6201 = !DILocation(line: 392, column: 16, scope: !6200)
!6202 = !DILocation(line: 392, column: 6, scope: !6172)
!6203 = !DILocation(line: 393, column: 3, scope: !6204)
!6204 = distinct !DILexicalBlock(scope: !6200, file: !5742, line: 392, column: 41)
!6205 = !DILocation(line: 393, column: 3, scope: !6206)
!6206 = distinct !DILexicalBlock(scope: !6207, file: !5742, line: 393, column: 3)
!6207 = distinct !DILexicalBlock(scope: !6208, file: !5742, line: 393, column: 3)
!6208 = distinct !DILexicalBlock(scope: !6204, file: !5742, line: 393, column: 3)
!6209 = !DILocation(line: 394, column: 2, scope: !6204)
!6210 = !DILocation(line: 395, column: 11, scope: !6211)
!6211 = distinct !DILexicalBlock(scope: !6172, file: !5742, line: 395, column: 6)
!6212 = !DILocation(line: 395, column: 16, scope: !6211)
!6213 = !DILocation(line: 395, column: 6, scope: !6172)
!6214 = !DILocation(line: 396, column: 3, scope: !6215)
!6215 = distinct !DILexicalBlock(scope: !6211, file: !5742, line: 395, column: 42)
!6216 = !DILocation(line: 396, column: 3, scope: !6217)
!6217 = distinct !DILexicalBlock(scope: !6218, file: !5742, line: 396, column: 3)
!6218 = distinct !DILexicalBlock(scope: !6219, file: !5742, line: 396, column: 3)
!6219 = distinct !DILexicalBlock(scope: !6215, file: !5742, line: 396, column: 3)
!6220 = !DILocalVariable(name: "bfar", scope: !6215, file: !5742, line: 405, type: !173)
!6221 = !DILocation(line: 405, column: 3, scope: !6215)
!6222 = !DILocation(line: 407, column: 13, scope: !6223)
!6223 = distinct !DILexicalBlock(scope: !6215, file: !5742, line: 407, column: 7)
!6224 = !DILocation(line: 407, column: 18, scope: !6223)
!6225 = !DILocation(line: 407, column: 44, scope: !6223)
!6226 = !DILocation(line: 407, column: 7, scope: !6215)
!6227 = !DILocation(line: 408, column: 4, scope: !6228)
!6228 = distinct !DILexicalBlock(scope: !6223, file: !5742, line: 407, column: 50)
!6229 = !DILocation(line: 408, column: 4, scope: !6230)
!6230 = distinct !DILexicalBlock(scope: !6231, file: !5742, line: 408, column: 4)
!6231 = distinct !DILexicalBlock(scope: !6232, file: !5742, line: 408, column: 4)
!6232 = distinct !DILexicalBlock(scope: !6228, file: !5742, line: 408, column: 4)
!6233 = !DILocation(line: 409, column: 8, scope: !6234)
!6234 = distinct !DILexicalBlock(scope: !6228, file: !5742, line: 409, column: 8)
!6235 = !DILocation(line: 409, column: 24, scope: !6234)
!6236 = !DILocation(line: 409, column: 8, scope: !6228)
!6237 = !DILocation(line: 411, column: 15, scope: !6238)
!6238 = distinct !DILexicalBlock(scope: !6234, file: !5742, line: 409, column: 30)
!6239 = !DILocation(line: 412, column: 4, scope: !6238)
!6240 = !DILocation(line: 413, column: 3, scope: !6228)
!6241 = !DILocation(line: 414, column: 2, scope: !6215)
!6242 = !DILocation(line: 415, column: 11, scope: !6243)
!6243 = distinct !DILexicalBlock(scope: !6172, file: !5742, line: 415, column: 6)
!6244 = !DILocation(line: 415, column: 16, scope: !6243)
!6245 = !DILocation(line: 415, column: 6, scope: !6172)
!6246 = !DILocation(line: 416, column: 3, scope: !6247)
!6247 = distinct !DILexicalBlock(scope: !6243, file: !5742, line: 415, column: 44)
!6248 = !DILocation(line: 416, column: 3, scope: !6249)
!6249 = distinct !DILexicalBlock(scope: !6250, file: !5742, line: 416, column: 3)
!6250 = distinct !DILexicalBlock(scope: !6251, file: !5742, line: 416, column: 3)
!6251 = distinct !DILexicalBlock(scope: !6247, file: !5742, line: 416, column: 3)
!6252 = !DILocation(line: 417, column: 2, scope: !6247)
!6253 = !DILocation(line: 418, column: 12, scope: !6254)
!6254 = distinct !DILexicalBlock(scope: !6172, file: !5742, line: 418, column: 6)
!6255 = !DILocation(line: 418, column: 17, scope: !6254)
!6256 = !DILocation(line: 418, column: 41, scope: !6254)
!6257 = !DILocation(line: 418, column: 6, scope: !6172)
!6258 = !DILocation(line: 419, column: 3, scope: !6259)
!6259 = distinct !DILexicalBlock(scope: !6254, file: !5742, line: 418, column: 47)
!6260 = !DILocation(line: 419, column: 3, scope: !6261)
!6261 = distinct !DILexicalBlock(scope: !6262, file: !5742, line: 419, column: 3)
!6262 = distinct !DILexicalBlock(scope: !6263, file: !5742, line: 419, column: 3)
!6263 = distinct !DILexicalBlock(scope: !6259, file: !5742, line: 419, column: 3)
!6264 = !DILocation(line: 423, column: 2, scope: !6259)
!6265 = !DILocation(line: 423, column: 18, scope: !6266)
!6266 = distinct !DILexicalBlock(scope: !6254, file: !5742, line: 423, column: 13)
!6267 = !DILocation(line: 423, column: 23, scope: !6266)
!6268 = !DILocation(line: 423, column: 13, scope: !6254)
!6269 = !DILocation(line: 424, column: 3, scope: !6270)
!6270 = distinct !DILexicalBlock(scope: !6266, file: !5742, line: 423, column: 46)
!6271 = !DILocation(line: 424, column: 3, scope: !6272)
!6272 = distinct !DILexicalBlock(scope: !6273, file: !5742, line: 424, column: 3)
!6273 = distinct !DILexicalBlock(scope: !6274, file: !5742, line: 424, column: 3)
!6274 = distinct !DILexicalBlock(scope: !6270, file: !5742, line: 424, column: 3)
!6275 = !DILocation(line: 425, column: 2, scope: !6270)
!6276 = !DILocation(line: 524, column: 12, scope: !6172)
!6277 = !DILocation(line: 526, column: 42, scope: !6172)
!6278 = !DILocation(line: 526, column: 17, scope: !6172)
!6279 = !DILocation(line: 526, column: 3, scope: !6172)
!6280 = !DILocation(line: 526, column: 15, scope: !6172)
!6281 = !DILocation(line: 528, column: 9, scope: !6172)
!6282 = !DILocation(line: 528, column: 2, scope: !6172)
!6283 = distinct !DISubprogram(name: "usage_fault", scope: !5742, file: !5742, line: 539, type: !6284, scopeLine: 540, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2299, retainedNodes: !223)
!6284 = !DISubroutineType(types: !6285)
!6285 = !{!173, !6286}
!6286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6287, size: 32)
!6287 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2328)
!6288 = !DILocalVariable(name: "esf", arg: 1, scope: !6283, file: !5742, line: 539, type: !6286)
!6289 = !DILocation(line: 539, column: 49, scope: !6283)
!6290 = !DILocalVariable(name: "reason", scope: !6283, file: !5742, line: 541, type: !173)
!6291 = !DILocation(line: 541, column: 11, scope: !6283)
!6292 = !DILocation(line: 543, column: 2, scope: !6283)
!6293 = !DILocation(line: 543, column: 2, scope: !6294)
!6294 = distinct !DILexicalBlock(scope: !6295, file: !5742, line: 543, column: 2)
!6295 = distinct !DILexicalBlock(scope: !6296, file: !5742, line: 543, column: 2)
!6296 = distinct !DILexicalBlock(scope: !6283, file: !5742, line: 543, column: 2)
!6297 = !DILocation(line: 546, column: 12, scope: !6298)
!6298 = distinct !DILexicalBlock(scope: !6283, file: !5742, line: 546, column: 6)
!6299 = !DILocation(line: 546, column: 17, scope: !6298)
!6300 = !DILocation(line: 546, column: 43, scope: !6298)
!6301 = !DILocation(line: 546, column: 6, scope: !6283)
!6302 = !DILocation(line: 547, column: 3, scope: !6303)
!6303 = distinct !DILexicalBlock(scope: !6298, file: !5742, line: 546, column: 49)
!6304 = !DILocation(line: 547, column: 3, scope: !6305)
!6305 = distinct !DILexicalBlock(scope: !6306, file: !5742, line: 547, column: 3)
!6306 = distinct !DILexicalBlock(scope: !6307, file: !5742, line: 547, column: 3)
!6307 = distinct !DILexicalBlock(scope: !6303, file: !5742, line: 547, column: 3)
!6308 = !DILocation(line: 548, column: 2, scope: !6303)
!6309 = !DILocation(line: 549, column: 12, scope: !6310)
!6310 = distinct !DILexicalBlock(scope: !6283, file: !5742, line: 549, column: 6)
!6311 = !DILocation(line: 549, column: 17, scope: !6310)
!6312 = !DILocation(line: 549, column: 43, scope: !6310)
!6313 = !DILocation(line: 549, column: 6, scope: !6283)
!6314 = !DILocation(line: 550, column: 3, scope: !6315)
!6315 = distinct !DILexicalBlock(scope: !6310, file: !5742, line: 549, column: 49)
!6316 = !DILocation(line: 550, column: 3, scope: !6317)
!6317 = distinct !DILexicalBlock(scope: !6318, file: !5742, line: 550, column: 3)
!6318 = distinct !DILexicalBlock(scope: !6319, file: !5742, line: 550, column: 3)
!6319 = distinct !DILexicalBlock(scope: !6315, file: !5742, line: 550, column: 3)
!6320 = !DILocation(line: 551, column: 2, scope: !6315)
!6321 = !DILocation(line: 567, column: 12, scope: !6322)
!6322 = distinct !DILexicalBlock(scope: !6283, file: !5742, line: 567, column: 6)
!6323 = !DILocation(line: 567, column: 17, scope: !6322)
!6324 = !DILocation(line: 567, column: 38, scope: !6322)
!6325 = !DILocation(line: 567, column: 6, scope: !6283)
!6326 = !DILocation(line: 568, column: 3, scope: !6327)
!6327 = distinct !DILexicalBlock(scope: !6322, file: !5742, line: 567, column: 44)
!6328 = !DILocation(line: 568, column: 3, scope: !6329)
!6329 = distinct !DILexicalBlock(scope: !6330, file: !5742, line: 568, column: 3)
!6330 = distinct !DILexicalBlock(scope: !6331, file: !5742, line: 568, column: 3)
!6331 = distinct !DILexicalBlock(scope: !6327, file: !5742, line: 568, column: 3)
!6332 = !DILocation(line: 569, column: 2, scope: !6327)
!6333 = !DILocation(line: 570, column: 12, scope: !6334)
!6334 = distinct !DILexicalBlock(scope: !6283, file: !5742, line: 570, column: 6)
!6335 = !DILocation(line: 570, column: 17, scope: !6334)
!6336 = !DILocation(line: 570, column: 39, scope: !6334)
!6337 = !DILocation(line: 570, column: 6, scope: !6283)
!6338 = !DILocation(line: 571, column: 3, scope: !6339)
!6339 = distinct !DILexicalBlock(scope: !6334, file: !5742, line: 570, column: 45)
!6340 = !DILocation(line: 571, column: 3, scope: !6341)
!6341 = distinct !DILexicalBlock(scope: !6342, file: !5742, line: 571, column: 3)
!6342 = distinct !DILexicalBlock(scope: !6343, file: !5742, line: 571, column: 3)
!6343 = distinct !DILexicalBlock(scope: !6339, file: !5742, line: 571, column: 3)
!6344 = !DILocation(line: 572, column: 2, scope: !6339)
!6345 = !DILocation(line: 573, column: 12, scope: !6346)
!6346 = distinct !DILexicalBlock(scope: !6283, file: !5742, line: 573, column: 6)
!6347 = !DILocation(line: 573, column: 17, scope: !6346)
!6348 = !DILocation(line: 573, column: 42, scope: !6346)
!6349 = !DILocation(line: 573, column: 6, scope: !6283)
!6350 = !DILocation(line: 574, column: 3, scope: !6351)
!6351 = distinct !DILexicalBlock(scope: !6346, file: !5742, line: 573, column: 48)
!6352 = !DILocation(line: 574, column: 3, scope: !6353)
!6353 = distinct !DILexicalBlock(scope: !6354, file: !5742, line: 574, column: 3)
!6354 = distinct !DILexicalBlock(scope: !6355, file: !5742, line: 574, column: 3)
!6355 = distinct !DILexicalBlock(scope: !6351, file: !5742, line: 574, column: 3)
!6356 = !DILocation(line: 575, column: 2, scope: !6351)
!6357 = !DILocation(line: 576, column: 12, scope: !6358)
!6358 = distinct !DILexicalBlock(scope: !6283, file: !5742, line: 576, column: 6)
!6359 = !DILocation(line: 576, column: 17, scope: !6358)
!6360 = !DILocation(line: 576, column: 44, scope: !6358)
!6361 = !DILocation(line: 576, column: 6, scope: !6283)
!6362 = !DILocation(line: 577, column: 3, scope: !6363)
!6363 = distinct !DILexicalBlock(scope: !6358, file: !5742, line: 576, column: 50)
!6364 = !DILocation(line: 577, column: 3, scope: !6365)
!6365 = distinct !DILexicalBlock(scope: !6366, file: !5742, line: 577, column: 3)
!6366 = distinct !DILexicalBlock(scope: !6367, file: !5742, line: 577, column: 3)
!6367 = distinct !DILexicalBlock(scope: !6363, file: !5742, line: 577, column: 3)
!6368 = !DILocation(line: 578, column: 2, scope: !6363)
!6369 = !DILocation(line: 581, column: 12, scope: !6283)
!6370 = !DILocation(line: 583, column: 9, scope: !6283)
!6371 = !DILocation(line: 583, column: 2, scope: !6283)
!6372 = distinct !DISubprogram(name: "debug_monitor", scope: !5742, file: !5742, line: 632, type: !6373, scopeLine: 633, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2299, retainedNodes: !223)
!6373 = !DISubroutineType(types: !6374)
!6374 = !{null, !2327, !5831}
!6375 = !DILocalVariable(name: "esf", arg: 1, scope: !6372, file: !5742, line: 632, type: !2327)
!6376 = !DILocation(line: 632, column: 41, scope: !6372)
!6377 = !DILocalVariable(name: "recoverable", arg: 2, scope: !6372, file: !5742, line: 632, type: !5831)
!6378 = !DILocation(line: 632, column: 52, scope: !6372)
!6379 = !DILocation(line: 634, column: 3, scope: !6372)
!6380 = !DILocation(line: 634, column: 15, scope: !6372)
!6381 = !DILocation(line: 636, column: 2, scope: !6372)
!6382 = !DILocation(line: 636, column: 2, scope: !6383)
!6383 = distinct !DILexicalBlock(scope: !6384, file: !5742, line: 636, column: 2)
!6384 = distinct !DILexicalBlock(scope: !6385, file: !5742, line: 636, column: 2)
!6385 = distinct !DILexicalBlock(scope: !6372, file: !5742, line: 636, column: 2)
!6386 = !DILocation(line: 652, column: 1, scope: !6372)
!6387 = distinct !DISubprogram(name: "reserved_exception", scope: !5742, file: !5742, line: 776, type: !6388, scopeLine: 777, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2299, retainedNodes: !223)
!6388 = !DISubroutineType(types: !6389)
!6389 = !{null, !6286, !103}
!6390 = !DILocalVariable(name: "esf", arg: 1, scope: !6387, file: !5742, line: 776, type: !6286)
!6391 = !DILocation(line: 776, column: 52, scope: !6387)
!6392 = !DILocalVariable(name: "fault", arg: 2, scope: !6387, file: !5742, line: 776, type: !103)
!6393 = !DILocation(line: 776, column: 61, scope: !6387)
!6394 = !DILocation(line: 778, column: 2, scope: !6387)
!6395 = !DILocation(line: 780, column: 2, scope: !6387)
!6396 = !DILocation(line: 780, column: 2, scope: !6397)
!6397 = distinct !DILexicalBlock(scope: !6398, file: !5742, line: 780, column: 2)
!6398 = distinct !DILexicalBlock(scope: !6399, file: !5742, line: 780, column: 2)
!6399 = distinct !DILexicalBlock(scope: !6387, file: !5742, line: 780, column: 2)
!6400 = !DILocation(line: 783, column: 1, scope: !6387)
!6401 = distinct !DISubprogram(name: "fault_show", scope: !5742, file: !5742, line: 166, type: !6388, scopeLine: 167, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2299, retainedNodes: !223)
!6402 = !DILocalVariable(name: "esf", arg: 1, scope: !6401, file: !5742, line: 166, type: !6286)
!6403 = !DILocation(line: 166, column: 44, scope: !6401)
!6404 = !DILocalVariable(name: "fault", arg: 2, scope: !6401, file: !5742, line: 166, type: !103)
!6405 = !DILocation(line: 166, column: 53, scope: !6401)
!6406 = !DILocation(line: 168, column: 8, scope: !6401)
!6407 = !DILocation(line: 169, column: 8, scope: !6401)
!6408 = !DILocation(line: 170, column: 1, scope: !6401)
!6409 = distinct !DISubprogram(name: "memory_fault_recoverable", scope: !5742, file: !5742, line: 186, type: !6410, scopeLine: 187, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2299, retainedNodes: !223)
!6410 = !DISubroutineType(types: !6411)
!6411 = !{!743, !2327, !743}
!6412 = !DILocalVariable(name: "esf", arg: 1, scope: !6409, file: !5742, line: 186, type: !2327)
!6413 = !DILocation(line: 186, column: 52, scope: !6409)
!6414 = !DILocalVariable(name: "synchronous", arg: 2, scope: !6409, file: !5742, line: 186, type: !743)
!6415 = !DILocation(line: 186, column: 62, scope: !6409)
!6416 = !DILocation(line: 209, column: 2, scope: !6409)
!6417 = distinct !DISubprogram(name: "z_arm_is_synchronous_svc", scope: !5742, file: !5742, line: 658, type: !6418, scopeLine: 659, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2299, retainedNodes: !223)
!6418 = !DISubroutineType(types: !6419)
!6419 = !{!743, !2327}
!6420 = !DILocalVariable(name: "esf", arg: 1, scope: !6417, file: !5742, line: 658, type: !2327)
!6421 = !DILocation(line: 658, column: 59, scope: !6417)
!6422 = !DILocalVariable(name: "ret_addr", scope: !6417, file: !5742, line: 660, type: !2370)
!6423 = !DILocation(line: 660, column: 12, scope: !6417)
!6424 = !DILocation(line: 660, column: 35, scope: !6417)
!6425 = !DILocation(line: 660, column: 40, scope: !6417)
!6426 = !DILocation(line: 660, column: 46, scope: !6417)
!6427 = !DILocation(line: 660, column: 23, scope: !6417)
!6428 = !DILocation(line: 682, column: 11, scope: !6417)
!6429 = !DILocation(line: 271, column: 3, scope: !6430, inlinedAt: !6431)
!6430 = distinct !DISubprogram(name: "__DSB", scope: !5414, file: !5414, line: 269, type: !253, scopeLine: 270, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2299, retainedNodes: !223)
!6431 = distinct !DILocation(line: 683, column: 2, scope: !6417)
!6432 = !{i64 6960910}
!6433 = !DILocation(line: 260, column: 3, scope: !6434, inlinedAt: !6435)
!6434 = distinct !DISubprogram(name: "__ISB", scope: !5414, file: !5414, line: 258, type: !253, scopeLine: 259, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2299, retainedNodes: !223)
!6435 = distinct !DILocation(line: 684, column: 2, scope: !6417)
!6436 = !{i64 6960627}
!6437 = !DILocalVariable(name: "fault_insn", scope: !6417, file: !5742, line: 686, type: !170)
!6438 = !DILocation(line: 686, column: 11, scope: !6417)
!6439 = !DILocation(line: 686, column: 26, scope: !6417)
!6440 = !DILocation(line: 686, column: 35, scope: !6417)
!6441 = !DILocation(line: 686, column: 24, scope: !6417)
!6442 = !DILocation(line: 688, column: 11, scope: !6417)
!6443 = !DILocation(line: 271, column: 3, scope: !6430, inlinedAt: !6444)
!6444 = distinct !DILocation(line: 689, column: 2, scope: !6417)
!6445 = !DILocation(line: 260, column: 3, scope: !6434, inlinedAt: !6446)
!6446 = distinct !DILocation(line: 690, column: 2, scope: !6417)
!6447 = !DILocation(line: 693, column: 8, scope: !6448)
!6448 = distinct !DILexicalBlock(scope: !6417, file: !5742, line: 693, column: 6)
!6449 = !DILocation(line: 693, column: 19, scope: !6448)
!6450 = !DILocation(line: 693, column: 29, scope: !6448)
!6451 = !DILocation(line: 693, column: 45, scope: !6448)
!6452 = !DILocation(line: 694, column: 5, scope: !6448)
!6453 = !DILocation(line: 694, column: 16, scope: !6448)
!6454 = !DILocation(line: 694, column: 26, scope: !6448)
!6455 = !DILocation(line: 693, column: 6, scope: !6417)
!6456 = !DILocation(line: 695, column: 3, scope: !6457)
!6457 = distinct !DILexicalBlock(scope: !6448, file: !5742, line: 694, column: 56)
!6458 = !DILocation(line: 698, column: 2, scope: !6417)
!6459 = !DILocation(line: 699, column: 1, scope: !6417)
!6460 = distinct !DISubprogram(name: "z_arm_fault_init", scope: !5742, file: !5742, line: 1107, type: !253, scopeLine: 1108, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2299, retainedNodes: !223)
!6461 = !DILocation(line: 1111, column: 11, scope: !6460)
!6462 = !DILocation(line: 1136, column: 1, scope: !6460)
!6463 = distinct !DISubprogram(name: "z_arm_interrupt_init", scope: !6464, file: !6464, line: 26, type: !253, scopeLine: 27, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2371, retainedNodes: !223)
!6464 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6465 = !DILocalVariable(name: "irq", scope: !6463, file: !6464, line: 28, type: !103)
!6466 = !DILocation(line: 28, column: 6, scope: !6463)
!6467 = !DILocation(line: 30, column: 2, scope: !6463)
!6468 = !DILocation(line: 30, column: 9, scope: !6469)
!6469 = distinct !DILexicalBlock(scope: !6470, file: !6464, line: 30, column: 2)
!6470 = distinct !DILexicalBlock(scope: !6463, file: !6464, line: 30, column: 2)
!6471 = !DILocation(line: 30, column: 13, scope: !6469)
!6472 = !DILocation(line: 30, column: 2, scope: !6470)
!6473 = !DILocation(line: 31, column: 31, scope: !6474)
!6474 = distinct !DILexicalBlock(scope: !6469, file: !6464, line: 30, column: 39)
!6475 = !DILocation(line: 31, column: 3, scope: !6474)
!6476 = !DILocation(line: 32, column: 2, scope: !6474)
!6477 = !DILocation(line: 30, column: 35, scope: !6469)
!6478 = !DILocation(line: 30, column: 2, scope: !6469)
!6479 = distinct !{!6479, !6472, !6480}
!6480 = !DILocation(line: 32, column: 2, scope: !6470)
!6481 = !DILocation(line: 33, column: 1, scope: !6463)
!6482 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !1446, file: !1446, line: 1814, type: !5450, scopeLine: 1815, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2371, retainedNodes: !223)
!6483 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6482, file: !1446, line: 1814, type: !2155)
!6484 = !DILocation(line: 1814, column: 51, scope: !6482)
!6485 = !DILocalVariable(name: "priority", arg: 2, scope: !6482, file: !1446, line: 1814, type: !173)
!6486 = !DILocation(line: 1814, column: 66, scope: !6482)
!6487 = !DILocation(line: 1816, column: 17, scope: !6488)
!6488 = distinct !DILexicalBlock(scope: !6482, file: !1446, line: 1816, column: 7)
!6489 = !DILocation(line: 1816, column: 23, scope: !6488)
!6490 = !DILocation(line: 1816, column: 7, scope: !6482)
!6491 = !DILocation(line: 1818, column: 59, scope: !6492)
!6492 = distinct !DILexicalBlock(scope: !6488, file: !1446, line: 1817, column: 3)
!6493 = !DILocation(line: 1818, column: 68, scope: !6492)
!6494 = !DILocation(line: 1818, column: 96, scope: !6492)
!6495 = !DILocation(line: 1818, column: 48, scope: !6492)
!6496 = !DILocation(line: 1818, column: 25, scope: !6492)
!6497 = !DILocation(line: 1818, column: 5, scope: !6492)
!6498 = !DILocation(line: 1818, column: 46, scope: !6492)
!6499 = !DILocation(line: 1819, column: 3, scope: !6492)
!6500 = !DILocation(line: 1822, column: 59, scope: !6501)
!6501 = distinct !DILexicalBlock(scope: !6488, file: !1446, line: 1821, column: 3)
!6502 = !DILocation(line: 1822, column: 68, scope: !6501)
!6503 = !DILocation(line: 1822, column: 96, scope: !6501)
!6504 = !DILocation(line: 1822, column: 48, scope: !6501)
!6505 = !DILocation(line: 1822, column: 26, scope: !6501)
!6506 = !DILocation(line: 1822, column: 32, scope: !6501)
!6507 = !DILocation(line: 1822, column: 40, scope: !6501)
!6508 = !DILocation(line: 1822, column: 5, scope: !6501)
!6509 = !DILocation(line: 1822, column: 46, scope: !6501)
!6510 = !DILocation(line: 1824, column: 1, scope: !6482)
!6511 = distinct !DISubprogram(name: "z_impl_k_thread_abort", scope: !6512, file: !6512, line: 27, type: !6513, scopeLine: 28, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2416, retainedNodes: !223)
!6512 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6513 = !DISubroutineType(types: !6514)
!6514 = !{null, !6515}
!6515 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !114, line: 347, baseType: !6516)
!6516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6517, size: 32)
!6517 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !114, line: 245, size: 896, elements: !6518)
!6518 = !{!6519, !6577, !6589, !6590, !6591, !6592, !6605}
!6519 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !6517, file: !114, line: 247, baseType: !6520, size: 384)
!6520 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !114, line: 57, size: 384, elements: !6521)
!6521 = !{!6522, !6546, !6553, !6554, !6555, !6564, !6565, !6566}
!6522 = !DIDerivedType(tag: DW_TAG_member, scope: !6520, file: !114, line: 60, baseType: !6523, size: 64)
!6523 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6520, file: !114, line: 60, size: 64, elements: !6524)
!6524 = !{!6525, !6540}
!6525 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !6523, file: !114, line: 61, baseType: !6526, size: 64)
!6526 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !124, line: 49, baseType: !6527)
!6527 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !124, line: 37, size: 64, elements: !6528)
!6528 = !{!6529, !6535}
!6529 = !DIDerivedType(tag: DW_TAG_member, scope: !6527, file: !124, line: 38, baseType: !6530, size: 32)
!6530 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6527, file: !124, line: 38, size: 32, elements: !6531)
!6531 = !{!6532, !6534}
!6532 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !6530, file: !124, line: 39, baseType: !6533, size: 32)
!6533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6527, size: 32)
!6534 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6530, file: !124, line: 40, baseType: !6533, size: 32)
!6535 = !DIDerivedType(tag: DW_TAG_member, scope: !6527, file: !124, line: 42, baseType: !6536, size: 32, offset: 32)
!6536 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6527, file: !124, line: 42, size: 32, elements: !6537)
!6537 = !{!6538, !6539}
!6538 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !6536, file: !124, line: 43, baseType: !6533, size: 32)
!6539 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6536, file: !124, line: 44, baseType: !6533, size: 32)
!6540 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !6523, file: !114, line: 62, baseType: !6541, size: 64)
!6541 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !140, line: 49, size: 64, elements: !6542)
!6542 = !{!6543}
!6543 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !6541, file: !140, line: 50, baseType: !6544, size: 64)
!6544 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6545, size: 64, elements: !145)
!6545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6541, size: 32)
!6546 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !6520, file: !114, line: 68, baseType: !6547, size: 32, offset: 64)
!6547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6548, size: 32)
!6548 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !150, line: 233, baseType: !6549)
!6549 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !150, line: 231, size: 64, elements: !6550)
!6550 = !{!6551}
!6551 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !6549, file: !150, line: 232, baseType: !6552, size: 64)
!6552 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !124, line: 48, baseType: !6527)
!6553 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !6520, file: !114, line: 71, baseType: !156, size: 8, offset: 96)
!6554 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !6520, file: !114, line: 74, baseType: !156, size: 8, offset: 104)
!6555 = !DIDerivedType(tag: DW_TAG_member, scope: !6520, file: !114, line: 90, baseType: !6556, size: 16, offset: 112)
!6556 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6520, file: !114, line: 90, size: 16, elements: !6557)
!6557 = !{!6558, !6563}
!6558 = !DIDerivedType(tag: DW_TAG_member, scope: !6556, file: !114, line: 91, baseType: !6559, size: 16)
!6559 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6556, file: !114, line: 91, size: 16, elements: !6560)
!6560 = !{!6561, !6562}
!6561 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !6559, file: !114, line: 96, baseType: !166, size: 8)
!6562 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !6559, file: !114, line: 97, baseType: !156, size: 8, offset: 8)
!6563 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !6556, file: !114, line: 100, baseType: !170, size: 16)
!6564 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !6520, file: !114, line: 107, baseType: !173, size: 32, offset: 128)
!6565 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !6520, file: !114, line: 127, baseType: !102, size: 32, offset: 160)
!6566 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !6520, file: !114, line: 131, baseType: !6567, size: 192, offset: 192)
!6567 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !150, line: 244, size: 192, elements: !6568)
!6568 = !{!6569, !6570, !6576}
!6569 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !6567, file: !150, line: 245, baseType: !6526, size: 64)
!6570 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !6567, file: !150, line: 246, baseType: !6571, size: 32, offset: 64)
!6571 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !150, line: 242, baseType: !6572)
!6572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6573, size: 32)
!6573 = !DISubroutineType(types: !6574)
!6574 = !{null, !6575}
!6575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6567, size: 32)
!6576 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !6567, file: !150, line: 249, baseType: !186, size: 64, offset: 128)
!6577 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !6517, file: !114, line: 250, baseType: !6578, size: 288, offset: 384)
!6578 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !190, line: 25, size: 288, elements: !6579)
!6579 = !{!6580, !6581, !6582, !6583, !6584, !6585, !6586, !6587, !6588}
!6580 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6578, file: !190, line: 26, baseType: !173, size: 32)
!6581 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6578, file: !190, line: 27, baseType: !173, size: 32, offset: 32)
!6582 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6578, file: !190, line: 28, baseType: !173, size: 32, offset: 64)
!6583 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6578, file: !190, line: 29, baseType: !173, size: 32, offset: 96)
!6584 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6578, file: !190, line: 30, baseType: !173, size: 32, offset: 128)
!6585 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6578, file: !190, line: 31, baseType: !173, size: 32, offset: 160)
!6586 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6578, file: !190, line: 32, baseType: !173, size: 32, offset: 192)
!6587 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6578, file: !190, line: 33, baseType: !173, size: 32, offset: 224)
!6588 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6578, file: !190, line: 34, baseType: !173, size: 32, offset: 256)
!6589 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !6517, file: !114, line: 253, baseType: !102, size: 32, offset: 672)
!6590 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !6517, file: !114, line: 256, baseType: !6548, size: 64, offset: 704)
!6591 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !6517, file: !114, line: 294, baseType: !103, size: 32, offset: 768)
!6592 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !6517, file: !114, line: 325, baseType: !6593, size: 32, offset: 800)
!6593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6594, size: 32)
!6594 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !109, line: 5073, size: 160, elements: !6595)
!6595 = !{!6596, !6602, !6603}
!6596 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6594, file: !109, line: 5074, baseType: !6597, size: 96)
!6597 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !210, line: 56, size: 96, elements: !6598)
!6598 = !{!6599, !6600, !6601}
!6599 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6597, file: !210, line: 57, baseType: !213, size: 32)
!6600 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !6597, file: !210, line: 58, baseType: !102, size: 32, offset: 32)
!6601 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !6597, file: !210, line: 59, baseType: !217, size: 32, offset: 64)
!6602 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !6594, file: !109, line: 5075, baseType: !6548, size: 64, offset: 96)
!6603 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6594, file: !109, line: 5076, baseType: !6604, offset: 160)
!6604 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !222, line: 43, elements: !223)
!6605 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !6517, file: !114, line: 343, baseType: !6606, size: 64, offset: 832)
!6606 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !190, line: 60, size: 64, elements: !6607)
!6607 = !{!6608, !6609}
!6608 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !6606, file: !190, line: 63, baseType: !173, size: 32)
!6609 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !6606, file: !190, line: 66, baseType: !173, size: 32, offset: 32)
!6610 = !DILocalVariable(name: "thread", arg: 1, scope: !6511, file: !6512, line: 27, type: !6515)
!6611 = !DILocation(line: 27, column: 36, scope: !6511)
!6612 = !DILocation(line: 29, column: 6, scope: !6613)
!6613 = distinct !DILexicalBlock(scope: !6511, file: !6512, line: 29, column: 6)
!6614 = !DILocation(line: 29, column: 18, scope: !6613)
!6615 = !DILocation(line: 29, column: 15, scope: !6613)
!6616 = !DILocation(line: 29, column: 6, scope: !6511)
!6617 = !DILocalVariable(name: "result", scope: !6618, file: !5414, line: 1029, type: !173)
!6618 = distinct !DISubprogram(name: "__get_IPSR", scope: !5414, file: !5414, line: 1027, type: !5514, scopeLine: 1028, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2416, retainedNodes: !223)
!6619 = !DILocation(line: 1029, column: 12, scope: !6618, inlinedAt: !6620)
!6620 = distinct !DILocation(line: 48, column: 10, scope: !6621, inlinedAt: !6623)
!6621 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !6622, file: !6622, line: 46, type: !2920, scopeLine: 47, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2416, retainedNodes: !223)
!6622 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6623 = distinct !DILocation(line: 30, column: 7, scope: !6624)
!6624 = distinct !DILexicalBlock(scope: !6625, file: !6512, line: 30, column: 7)
!6625 = distinct !DILexicalBlock(scope: !6613, file: !6512, line: 29, column: 26)
!6626 = !DILocation(line: 1031, column: 3, scope: !6618, inlinedAt: !6620)
!6627 = !{i64 6962134}
!6628 = !DILocation(line: 1032, column: 10, scope: !6618, inlinedAt: !6620)
!6629 = !DILocation(line: 48, column: 9, scope: !6621, inlinedAt: !6623)
!6630 = !DILocation(line: 30, column: 7, scope: !6625)
!6631 = !DILocation(line: 42, column: 14, scope: !6632)
!6632 = distinct !DILexicalBlock(scope: !6624, file: !6512, line: 30, column: 25)
!6633 = !DILocation(line: 48, column: 15, scope: !6632)
!6634 = !DILocation(line: 49, column: 3, scope: !6632)
!6635 = !DILocation(line: 50, column: 2, scope: !6625)
!6636 = !DILocation(line: 52, column: 17, scope: !6511)
!6637 = !DILocation(line: 52, column: 2, scope: !6511)
!6638 = !DILocation(line: 53, column: 1, scope: !6511)
!6639 = distinct !DISubprogram(name: "strcpy", scope: !6640, file: !6640, line: 20, type: !6641, scopeLine: 21, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2444, retainedNodes: !223)
!6640 = !DIFile(filename: "zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6641 = !DISubroutineType(types: !6642)
!6642 = !{!925, !6643, !6644}
!6643 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !925)
!6644 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !256)
!6645 = !DILocalVariable(name: "d", arg: 1, scope: !6639, file: !6640, line: 20, type: !6643)
!6646 = !DILocation(line: 20, column: 30, scope: !6639)
!6647 = !DILocalVariable(name: "s", arg: 2, scope: !6639, file: !6640, line: 20, type: !6644)
!6648 = !DILocation(line: 20, column: 55, scope: !6639)
!6649 = !DILocalVariable(name: "dest", scope: !6639, file: !6640, line: 22, type: !925)
!6650 = !DILocation(line: 22, column: 8, scope: !6639)
!6651 = !DILocation(line: 22, column: 15, scope: !6639)
!6652 = !DILocation(line: 24, column: 2, scope: !6639)
!6653 = !DILocation(line: 24, column: 10, scope: !6639)
!6654 = !DILocation(line: 24, column: 9, scope: !6639)
!6655 = !DILocation(line: 24, column: 12, scope: !6639)
!6656 = !DILocation(line: 25, column: 9, scope: !6657)
!6657 = distinct !DILexicalBlock(scope: !6639, file: !6640, line: 24, column: 21)
!6658 = !DILocation(line: 25, column: 8, scope: !6657)
!6659 = !DILocation(line: 25, column: 4, scope: !6657)
!6660 = !DILocation(line: 25, column: 6, scope: !6657)
!6661 = !DILocation(line: 26, column: 4, scope: !6657)
!6662 = !DILocation(line: 27, column: 4, scope: !6657)
!6663 = distinct !{!6663, !6652, !6664}
!6664 = !DILocation(line: 28, column: 2, scope: !6639)
!6665 = !DILocation(line: 30, column: 3, scope: !6639)
!6666 = !DILocation(line: 30, column: 5, scope: !6639)
!6667 = !DILocation(line: 32, column: 9, scope: !6639)
!6668 = !DILocation(line: 32, column: 2, scope: !6639)
!6669 = distinct !DISubprogram(name: "strncpy", scope: !6640, file: !6640, line: 42, type: !6670, scopeLine: 43, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2444, retainedNodes: !223)
!6670 = !DISubroutineType(types: !6671)
!6671 = !{!925, !6643, !6644, !217}
!6672 = !DILocalVariable(name: "d", arg: 1, scope: !6669, file: !6640, line: 42, type: !6643)
!6673 = !DILocation(line: 42, column: 31, scope: !6669)
!6674 = !DILocalVariable(name: "s", arg: 2, scope: !6669, file: !6640, line: 42, type: !6644)
!6675 = !DILocation(line: 42, column: 56, scope: !6669)
!6676 = !DILocalVariable(name: "n", arg: 3, scope: !6669, file: !6640, line: 42, type: !217)
!6677 = !DILocation(line: 42, column: 66, scope: !6669)
!6678 = !DILocalVariable(name: "dest", scope: !6669, file: !6640, line: 44, type: !925)
!6679 = !DILocation(line: 44, column: 8, scope: !6669)
!6680 = !DILocation(line: 44, column: 15, scope: !6669)
!6681 = !DILocation(line: 46, column: 2, scope: !6669)
!6682 = !DILocation(line: 46, column: 10, scope: !6669)
!6683 = !DILocation(line: 46, column: 12, scope: !6669)
!6684 = !DILocation(line: 46, column: 17, scope: !6669)
!6685 = !DILocation(line: 46, column: 21, scope: !6669)
!6686 = !DILocation(line: 46, column: 20, scope: !6669)
!6687 = !DILocation(line: 46, column: 23, scope: !6669)
!6688 = !DILocation(line: 0, scope: !6669)
!6689 = !DILocation(line: 47, column: 9, scope: !6690)
!6690 = distinct !DILexicalBlock(scope: !6669, file: !6640, line: 46, column: 32)
!6691 = !DILocation(line: 47, column: 8, scope: !6690)
!6692 = !DILocation(line: 47, column: 4, scope: !6690)
!6693 = !DILocation(line: 47, column: 6, scope: !6690)
!6694 = !DILocation(line: 48, column: 4, scope: !6690)
!6695 = !DILocation(line: 49, column: 4, scope: !6690)
!6696 = !DILocation(line: 50, column: 4, scope: !6690)
!6697 = distinct !{!6697, !6681, !6698}
!6698 = !DILocation(line: 51, column: 2, scope: !6669)
!6699 = !DILocation(line: 53, column: 2, scope: !6669)
!6700 = !DILocation(line: 53, column: 9, scope: !6669)
!6701 = !DILocation(line: 53, column: 11, scope: !6669)
!6702 = !DILocation(line: 54, column: 4, scope: !6703)
!6703 = distinct !DILexicalBlock(scope: !6669, file: !6640, line: 53, column: 16)
!6704 = !DILocation(line: 54, column: 6, scope: !6703)
!6705 = !DILocation(line: 55, column: 4, scope: !6703)
!6706 = !DILocation(line: 56, column: 4, scope: !6703)
!6707 = distinct !{!6707, !6699, !6708}
!6708 = !DILocation(line: 57, column: 2, scope: !6669)
!6709 = !DILocation(line: 59, column: 9, scope: !6669)
!6710 = !DILocation(line: 59, column: 2, scope: !6669)
!6711 = distinct !DISubprogram(name: "strchr", scope: !6640, file: !6640, line: 69, type: !6712, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2444, retainedNodes: !223)
!6712 = !DISubroutineType(types: !6713)
!6713 = !{!925, !256, !103}
!6714 = !DILocalVariable(name: "s", arg: 1, scope: !6711, file: !6640, line: 69, type: !256)
!6715 = !DILocation(line: 69, column: 26, scope: !6711)
!6716 = !DILocalVariable(name: "c", arg: 2, scope: !6711, file: !6640, line: 69, type: !103)
!6717 = !DILocation(line: 69, column: 33, scope: !6711)
!6718 = !DILocalVariable(name: "tmp", scope: !6711, file: !6640, line: 71, type: !237)
!6719 = !DILocation(line: 71, column: 7, scope: !6711)
!6720 = !DILocation(line: 71, column: 20, scope: !6711)
!6721 = !DILocation(line: 71, column: 13, scope: !6711)
!6722 = !DILocation(line: 73, column: 2, scope: !6711)
!6723 = !DILocation(line: 73, column: 11, scope: !6711)
!6724 = !DILocation(line: 73, column: 10, scope: !6711)
!6725 = !DILocation(line: 73, column: 16, scope: !6711)
!6726 = !DILocation(line: 73, column: 13, scope: !6711)
!6727 = !DILocation(line: 73, column: 21, scope: !6711)
!6728 = !DILocation(line: 73, column: 26, scope: !6711)
!6729 = !DILocation(line: 73, column: 25, scope: !6711)
!6730 = !DILocation(line: 73, column: 28, scope: !6711)
!6731 = !DILocation(line: 0, scope: !6711)
!6732 = !DILocation(line: 74, column: 4, scope: !6733)
!6733 = distinct !DILexicalBlock(scope: !6711, file: !6640, line: 73, column: 38)
!6734 = distinct !{!6734, !6722, !6735}
!6735 = !DILocation(line: 75, column: 2, scope: !6711)
!6736 = !DILocation(line: 77, column: 11, scope: !6711)
!6737 = !DILocation(line: 77, column: 10, scope: !6711)
!6738 = !DILocation(line: 77, column: 16, scope: !6711)
!6739 = !DILocation(line: 77, column: 13, scope: !6711)
!6740 = !DILocation(line: 77, column: 9, scope: !6711)
!6741 = !DILocation(line: 77, column: 32, scope: !6711)
!6742 = !DILocation(line: 77, column: 2, scope: !6711)
!6743 = distinct !DISubprogram(name: "strrchr", scope: !6640, file: !6640, line: 87, type: !6712, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2444, retainedNodes: !223)
!6744 = !DILocalVariable(name: "s", arg: 1, scope: !6743, file: !6640, line: 87, type: !256)
!6745 = !DILocation(line: 87, column: 27, scope: !6743)
!6746 = !DILocalVariable(name: "c", arg: 2, scope: !6743, file: !6640, line: 87, type: !103)
!6747 = !DILocation(line: 87, column: 34, scope: !6743)
!6748 = !DILocalVariable(name: "match", scope: !6743, file: !6640, line: 89, type: !925)
!6749 = !DILocation(line: 89, column: 8, scope: !6743)
!6750 = !DILocation(line: 91, column: 2, scope: !6743)
!6751 = !DILocation(line: 92, column: 8, scope: !6752)
!6752 = distinct !DILexicalBlock(scope: !6753, file: !6640, line: 92, column: 7)
!6753 = distinct !DILexicalBlock(scope: !6743, file: !6640, line: 91, column: 5)
!6754 = !DILocation(line: 92, column: 7, scope: !6752)
!6755 = !DILocation(line: 92, column: 19, scope: !6752)
!6756 = !DILocation(line: 92, column: 13, scope: !6752)
!6757 = !DILocation(line: 92, column: 10, scope: !6752)
!6758 = !DILocation(line: 92, column: 7, scope: !6753)
!6759 = !DILocation(line: 93, column: 20, scope: !6760)
!6760 = distinct !DILexicalBlock(scope: !6752, file: !6640, line: 92, column: 22)
!6761 = !DILocation(line: 93, column: 10, scope: !6760)
!6762 = !DILocation(line: 94, column: 3, scope: !6760)
!6763 = !DILocation(line: 95, column: 2, scope: !6753)
!6764 = !DILocation(line: 95, column: 13, scope: !6743)
!6765 = !DILocation(line: 95, column: 11, scope: !6743)
!6766 = distinct !{!6766, !6750, !6767}
!6767 = !DILocation(line: 95, column: 15, scope: !6743)
!6768 = !DILocation(line: 97, column: 9, scope: !6743)
!6769 = !DILocation(line: 97, column: 2, scope: !6743)
!6770 = distinct !DISubprogram(name: "strlen", scope: !6640, file: !6640, line: 107, type: !6771, scopeLine: 108, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2444, retainedNodes: !223)
!6771 = !DISubroutineType(types: !6772)
!6772 = !{!217, !256}
!6773 = !DILocalVariable(name: "s", arg: 1, scope: !6770, file: !6640, line: 107, type: !256)
!6774 = !DILocation(line: 107, column: 27, scope: !6770)
!6775 = !DILocalVariable(name: "n", scope: !6770, file: !6640, line: 109, type: !217)
!6776 = !DILocation(line: 109, column: 9, scope: !6770)
!6777 = !DILocation(line: 111, column: 2, scope: !6770)
!6778 = !DILocation(line: 111, column: 10, scope: !6770)
!6779 = !DILocation(line: 111, column: 9, scope: !6770)
!6780 = !DILocation(line: 111, column: 12, scope: !6770)
!6781 = !DILocation(line: 112, column: 4, scope: !6782)
!6782 = distinct !DILexicalBlock(scope: !6770, file: !6640, line: 111, column: 21)
!6783 = !DILocation(line: 113, column: 4, scope: !6782)
!6784 = distinct !{!6784, !6777, !6785}
!6785 = !DILocation(line: 114, column: 2, scope: !6770)
!6786 = !DILocation(line: 116, column: 9, scope: !6770)
!6787 = !DILocation(line: 116, column: 2, scope: !6770)
!6788 = distinct !DISubprogram(name: "strnlen", scope: !6640, file: !6640, line: 126, type: !6789, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2444, retainedNodes: !223)
!6789 = !DISubroutineType(types: !6790)
!6790 = !{!217, !256, !217}
!6791 = !DILocalVariable(name: "s", arg: 1, scope: !6788, file: !6640, line: 126, type: !256)
!6792 = !DILocation(line: 126, column: 28, scope: !6788)
!6793 = !DILocalVariable(name: "maxlen", arg: 2, scope: !6788, file: !6640, line: 126, type: !217)
!6794 = !DILocation(line: 126, column: 38, scope: !6788)
!6795 = !DILocalVariable(name: "n", scope: !6788, file: !6640, line: 128, type: !217)
!6796 = !DILocation(line: 128, column: 9, scope: !6788)
!6797 = !DILocation(line: 130, column: 2, scope: !6788)
!6798 = !DILocation(line: 130, column: 10, scope: !6788)
!6799 = !DILocation(line: 130, column: 9, scope: !6788)
!6800 = !DILocation(line: 130, column: 12, scope: !6788)
!6801 = !DILocation(line: 130, column: 20, scope: !6788)
!6802 = !DILocation(line: 130, column: 23, scope: !6788)
!6803 = !DILocation(line: 130, column: 27, scope: !6788)
!6804 = !DILocation(line: 130, column: 25, scope: !6788)
!6805 = !DILocation(line: 0, scope: !6788)
!6806 = !DILocation(line: 131, column: 4, scope: !6807)
!6807 = distinct !DILexicalBlock(scope: !6788, file: !6640, line: 130, column: 35)
!6808 = !DILocation(line: 132, column: 4, scope: !6807)
!6809 = distinct !{!6809, !6797, !6810}
!6810 = !DILocation(line: 133, column: 2, scope: !6788)
!6811 = !DILocation(line: 135, column: 9, scope: !6788)
!6812 = !DILocation(line: 135, column: 2, scope: !6788)
!6813 = distinct !DISubprogram(name: "strcmp", scope: !6640, file: !6640, line: 145, type: !6814, scopeLine: 146, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2444, retainedNodes: !223)
!6814 = !DISubroutineType(types: !6815)
!6815 = !{!103, !256, !256}
!6816 = !DILocalVariable(name: "s1", arg: 1, scope: !6813, file: !6640, line: 145, type: !256)
!6817 = !DILocation(line: 145, column: 24, scope: !6813)
!6818 = !DILocalVariable(name: "s2", arg: 2, scope: !6813, file: !6640, line: 145, type: !256)
!6819 = !DILocation(line: 145, column: 40, scope: !6813)
!6820 = !DILocation(line: 147, column: 2, scope: !6813)
!6821 = !DILocation(line: 147, column: 11, scope: !6813)
!6822 = !DILocation(line: 147, column: 10, scope: !6813)
!6823 = !DILocation(line: 147, column: 18, scope: !6813)
!6824 = !DILocation(line: 147, column: 17, scope: !6813)
!6825 = !DILocation(line: 147, column: 14, scope: !6813)
!6826 = !DILocation(line: 147, column: 22, scope: !6813)
!6827 = !DILocation(line: 147, column: 27, scope: !6813)
!6828 = !DILocation(line: 147, column: 26, scope: !6813)
!6829 = !DILocation(line: 147, column: 30, scope: !6813)
!6830 = !DILocation(line: 0, scope: !6813)
!6831 = !DILocation(line: 148, column: 5, scope: !6832)
!6832 = distinct !DILexicalBlock(scope: !6813, file: !6640, line: 147, column: 40)
!6833 = !DILocation(line: 149, column: 5, scope: !6832)
!6834 = distinct !{!6834, !6820, !6835}
!6835 = !DILocation(line: 150, column: 2, scope: !6813)
!6836 = !DILocation(line: 152, column: 10, scope: !6813)
!6837 = !DILocation(line: 152, column: 9, scope: !6813)
!6838 = !DILocation(line: 152, column: 16, scope: !6813)
!6839 = !DILocation(line: 152, column: 15, scope: !6813)
!6840 = !DILocation(line: 152, column: 13, scope: !6813)
!6841 = !DILocation(line: 152, column: 2, scope: !6813)
!6842 = distinct !DISubprogram(name: "strncmp", scope: !6640, file: !6640, line: 162, type: !6843, scopeLine: 163, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2444, retainedNodes: !223)
!6843 = !DISubroutineType(types: !6844)
!6844 = !{!103, !256, !256, !217}
!6845 = !DILocalVariable(name: "s1", arg: 1, scope: !6842, file: !6640, line: 162, type: !256)
!6846 = !DILocation(line: 162, column: 25, scope: !6842)
!6847 = !DILocalVariable(name: "s2", arg: 2, scope: !6842, file: !6640, line: 162, type: !256)
!6848 = !DILocation(line: 162, column: 41, scope: !6842)
!6849 = !DILocalVariable(name: "n", arg: 3, scope: !6842, file: !6640, line: 162, type: !217)
!6850 = !DILocation(line: 162, column: 52, scope: !6842)
!6851 = !DILocation(line: 164, column: 2, scope: !6842)
!6852 = !DILocation(line: 164, column: 10, scope: !6842)
!6853 = !DILocation(line: 164, column: 12, scope: !6842)
!6854 = !DILocation(line: 164, column: 17, scope: !6842)
!6855 = !DILocation(line: 164, column: 22, scope: !6842)
!6856 = !DILocation(line: 164, column: 21, scope: !6842)
!6857 = !DILocation(line: 164, column: 29, scope: !6842)
!6858 = !DILocation(line: 164, column: 28, scope: !6842)
!6859 = !DILocation(line: 164, column: 25, scope: !6842)
!6860 = !DILocation(line: 164, column: 33, scope: !6842)
!6861 = !DILocation(line: 164, column: 38, scope: !6842)
!6862 = !DILocation(line: 164, column: 37, scope: !6842)
!6863 = !DILocation(line: 164, column: 41, scope: !6842)
!6864 = !DILocation(line: 0, scope: !6842)
!6865 = !DILocation(line: 165, column: 5, scope: !6866)
!6866 = distinct !DILexicalBlock(scope: !6842, file: !6640, line: 164, column: 51)
!6867 = !DILocation(line: 166, column: 5, scope: !6866)
!6868 = !DILocation(line: 167, column: 4, scope: !6866)
!6869 = distinct !{!6869, !6851, !6870}
!6870 = !DILocation(line: 168, column: 2, scope: !6842)
!6871 = !DILocation(line: 170, column: 10, scope: !6842)
!6872 = !DILocation(line: 170, column: 12, scope: !6842)
!6873 = !DILocation(line: 170, column: 9, scope: !6842)
!6874 = !DILocation(line: 170, column: 26, scope: !6842)
!6875 = !DILocation(line: 170, column: 25, scope: !6842)
!6876 = !DILocation(line: 170, column: 32, scope: !6842)
!6877 = !DILocation(line: 170, column: 31, scope: !6842)
!6878 = !DILocation(line: 170, column: 29, scope: !6842)
!6879 = !DILocation(line: 170, column: 2, scope: !6842)
!6880 = distinct !DISubprogram(name: "strtok_r", scope: !6640, file: !6640, line: 180, type: !6881, scopeLine: 181, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2444, retainedNodes: !223)
!6881 = !DISubroutineType(types: !6882)
!6882 = !{!925, !925, !256, !6883}
!6883 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !925, size: 32)
!6884 = !DILocalVariable(name: "str", arg: 1, scope: !6880, file: !6640, line: 180, type: !925)
!6885 = !DILocation(line: 180, column: 22, scope: !6880)
!6886 = !DILocalVariable(name: "sep", arg: 2, scope: !6880, file: !6640, line: 180, type: !256)
!6887 = !DILocation(line: 180, column: 39, scope: !6880)
!6888 = !DILocalVariable(name: "state", arg: 3, scope: !6880, file: !6640, line: 180, type: !6883)
!6889 = !DILocation(line: 180, column: 51, scope: !6880)
!6890 = !DILocalVariable(name: "start", scope: !6880, file: !6640, line: 182, type: !925)
!6891 = !DILocation(line: 182, column: 8, scope: !6880)
!6892 = !DILocalVariable(name: "end", scope: !6880, file: !6640, line: 182, type: !925)
!6893 = !DILocation(line: 182, column: 16, scope: !6880)
!6894 = !DILocation(line: 184, column: 10, scope: !6880)
!6895 = !DILocation(line: 184, column: 16, scope: !6880)
!6896 = !DILocation(line: 184, column: 23, scope: !6880)
!6897 = !DILocation(line: 184, column: 22, scope: !6880)
!6898 = !DILocation(line: 184, column: 8, scope: !6880)
!6899 = !DILocation(line: 187, column: 2, scope: !6880)
!6900 = !DILocation(line: 187, column: 10, scope: !6880)
!6901 = !DILocation(line: 187, column: 9, scope: !6880)
!6902 = !DILocation(line: 187, column: 16, scope: !6880)
!6903 = !DILocation(line: 187, column: 26, scope: !6880)
!6904 = !DILocation(line: 187, column: 32, scope: !6880)
!6905 = !DILocation(line: 187, column: 31, scope: !6880)
!6906 = !DILocation(line: 187, column: 19, scope: !6880)
!6907 = !DILocation(line: 0, scope: !6880)
!6908 = !DILocation(line: 188, column: 8, scope: !6909)
!6909 = distinct !DILexicalBlock(scope: !6880, file: !6640, line: 187, column: 40)
!6910 = distinct !{!6910, !6899, !6911}
!6911 = !DILocation(line: 189, column: 2, scope: !6880)
!6912 = !DILocation(line: 191, column: 7, scope: !6913)
!6913 = distinct !DILexicalBlock(scope: !6880, file: !6640, line: 191, column: 6)
!6914 = !DILocation(line: 191, column: 6, scope: !6913)
!6915 = !DILocation(line: 191, column: 13, scope: !6913)
!6916 = !DILocation(line: 191, column: 6, scope: !6880)
!6917 = !DILocation(line: 192, column: 12, scope: !6918)
!6918 = distinct !DILexicalBlock(scope: !6913, file: !6640, line: 191, column: 22)
!6919 = !DILocation(line: 192, column: 4, scope: !6918)
!6920 = !DILocation(line: 192, column: 10, scope: !6918)
!6921 = !DILocation(line: 193, column: 3, scope: !6918)
!6922 = !DILocation(line: 197, column: 8, scope: !6880)
!6923 = !DILocation(line: 197, column: 6, scope: !6880)
!6924 = !DILocation(line: 198, column: 2, scope: !6880)
!6925 = !DILocation(line: 198, column: 10, scope: !6880)
!6926 = !DILocation(line: 198, column: 9, scope: !6880)
!6927 = !DILocation(line: 198, column: 14, scope: !6880)
!6928 = !DILocation(line: 198, column: 25, scope: !6880)
!6929 = !DILocation(line: 198, column: 31, scope: !6880)
!6930 = !DILocation(line: 198, column: 30, scope: !6880)
!6931 = !DILocation(line: 198, column: 18, scope: !6880)
!6932 = !DILocation(line: 198, column: 17, scope: !6880)
!6933 = !DILocation(line: 199, column: 6, scope: !6934)
!6934 = distinct !DILexicalBlock(scope: !6880, file: !6640, line: 198, column: 37)
!6935 = distinct !{!6935, !6924, !6936}
!6936 = !DILocation(line: 200, column: 2, scope: !6880)
!6937 = !DILocation(line: 202, column: 7, scope: !6938)
!6938 = distinct !DILexicalBlock(scope: !6880, file: !6640, line: 202, column: 6)
!6939 = !DILocation(line: 202, column: 6, scope: !6938)
!6940 = !DILocation(line: 202, column: 11, scope: !6938)
!6941 = !DILocation(line: 202, column: 6, scope: !6880)
!6942 = !DILocation(line: 203, column: 4, scope: !6943)
!6943 = distinct !DILexicalBlock(scope: !6938, file: !6640, line: 202, column: 20)
!6944 = !DILocation(line: 203, column: 8, scope: !6943)
!6945 = !DILocation(line: 204, column: 12, scope: !6943)
!6946 = !DILocation(line: 204, column: 16, scope: !6943)
!6947 = !DILocation(line: 204, column: 4, scope: !6943)
!6948 = !DILocation(line: 204, column: 10, scope: !6943)
!6949 = !DILocation(line: 205, column: 2, scope: !6943)
!6950 = !DILocation(line: 206, column: 12, scope: !6951)
!6951 = distinct !DILexicalBlock(scope: !6938, file: !6640, line: 205, column: 9)
!6952 = !DILocation(line: 206, column: 4, scope: !6951)
!6953 = !DILocation(line: 206, column: 10, scope: !6951)
!6954 = !DILocation(line: 209, column: 9, scope: !6880)
!6955 = !DILocation(line: 209, column: 2, scope: !6880)
!6956 = !DILocation(line: 210, column: 1, scope: !6880)
!6957 = distinct !DISubprogram(name: "strcat", scope: !6640, file: !6640, line: 212, type: !6641, scopeLine: 213, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2444, retainedNodes: !223)
!6958 = !DILocalVariable(name: "dest", arg: 1, scope: !6957, file: !6640, line: 212, type: !6643)
!6959 = !DILocation(line: 212, column: 30, scope: !6957)
!6960 = !DILocalVariable(name: "src", arg: 2, scope: !6957, file: !6640, line: 212, type: !6644)
!6961 = !DILocation(line: 212, column: 58, scope: !6957)
!6962 = !DILocation(line: 214, column: 9, scope: !6957)
!6963 = !DILocation(line: 214, column: 23, scope: !6957)
!6964 = !DILocation(line: 214, column: 16, scope: !6957)
!6965 = !DILocation(line: 214, column: 14, scope: !6957)
!6966 = !DILocation(line: 214, column: 30, scope: !6957)
!6967 = !DILocation(line: 214, column: 2, scope: !6957)
!6968 = !DILocation(line: 215, column: 9, scope: !6957)
!6969 = !DILocation(line: 215, column: 2, scope: !6957)
!6970 = distinct !DISubprogram(name: "strncat", scope: !6640, file: !6640, line: 218, type: !6670, scopeLine: 220, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2444, retainedNodes: !223)
!6971 = !DILocalVariable(name: "dest", arg: 1, scope: !6970, file: !6640, line: 218, type: !6643)
!6972 = !DILocation(line: 218, column: 31, scope: !6970)
!6973 = !DILocalVariable(name: "src", arg: 2, scope: !6970, file: !6640, line: 218, type: !6644)
!6974 = !DILocation(line: 218, column: 59, scope: !6970)
!6975 = !DILocalVariable(name: "n", arg: 3, scope: !6970, file: !6640, line: 219, type: !217)
!6976 = !DILocation(line: 219, column: 15, scope: !6970)
!6977 = !DILocalVariable(name: "orig_dest", scope: !6970, file: !6640, line: 221, type: !925)
!6978 = !DILocation(line: 221, column: 8, scope: !6970)
!6979 = !DILocation(line: 221, column: 20, scope: !6970)
!6980 = !DILocalVariable(name: "len", scope: !6970, file: !6640, line: 222, type: !217)
!6981 = !DILocation(line: 222, column: 9, scope: !6970)
!6982 = !DILocation(line: 222, column: 22, scope: !6970)
!6983 = !DILocation(line: 222, column: 15, scope: !6970)
!6984 = !DILocation(line: 224, column: 10, scope: !6970)
!6985 = !DILocation(line: 224, column: 7, scope: !6970)
!6986 = !DILocation(line: 225, column: 2, scope: !6970)
!6987 = !DILocation(line: 225, column: 11, scope: !6970)
!6988 = !DILocation(line: 225, column: 14, scope: !6970)
!6989 = !DILocation(line: 225, column: 19, scope: !6970)
!6990 = !DILocation(line: 225, column: 24, scope: !6970)
!6991 = !DILocation(line: 225, column: 23, scope: !6970)
!6992 = !DILocation(line: 225, column: 28, scope: !6970)
!6993 = !DILocation(line: 0, scope: !6970)
!6994 = !DILocation(line: 226, column: 17, scope: !6995)
!6995 = distinct !DILexicalBlock(scope: !6970, file: !6640, line: 225, column: 38)
!6996 = !DILocation(line: 226, column: 13, scope: !6995)
!6997 = !DILocation(line: 226, column: 8, scope: !6995)
!6998 = !DILocation(line: 226, column: 11, scope: !6995)
!6999 = distinct !{!6999, !6986, !7000}
!7000 = !DILocation(line: 227, column: 2, scope: !6970)
!7001 = !DILocation(line: 228, column: 3, scope: !6970)
!7002 = !DILocation(line: 228, column: 8, scope: !6970)
!7003 = !DILocation(line: 230, column: 9, scope: !6970)
!7004 = !DILocation(line: 230, column: 2, scope: !6970)
!7005 = distinct !DISubprogram(name: "memcmp", scope: !6640, file: !6640, line: 239, type: !7006, scopeLine: 240, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2444, retainedNodes: !223)
!7006 = !DISubroutineType(types: !7007)
!7007 = !{!103, !13, !13, !217}
!7008 = !DILocalVariable(name: "m1", arg: 1, scope: !7005, file: !6640, line: 239, type: !13)
!7009 = !DILocation(line: 239, column: 24, scope: !7005)
!7010 = !DILocalVariable(name: "m2", arg: 2, scope: !7005, file: !6640, line: 239, type: !13)
!7011 = !DILocation(line: 239, column: 40, scope: !7005)
!7012 = !DILocalVariable(name: "n", arg: 3, scope: !7005, file: !6640, line: 239, type: !217)
!7013 = !DILocation(line: 239, column: 51, scope: !7005)
!7014 = !DILocalVariable(name: "c1", scope: !7005, file: !6640, line: 241, type: !256)
!7015 = !DILocation(line: 241, column: 14, scope: !7005)
!7016 = !DILocation(line: 241, column: 19, scope: !7005)
!7017 = !DILocalVariable(name: "c2", scope: !7005, file: !6640, line: 242, type: !256)
!7018 = !DILocation(line: 242, column: 14, scope: !7005)
!7019 = !DILocation(line: 242, column: 19, scope: !7005)
!7020 = !DILocation(line: 244, column: 7, scope: !7021)
!7021 = distinct !DILexicalBlock(scope: !7005, file: !6640, line: 244, column: 6)
!7022 = !DILocation(line: 244, column: 6, scope: !7005)
!7023 = !DILocation(line: 245, column: 3, scope: !7024)
!7024 = distinct !DILexicalBlock(scope: !7021, file: !6640, line: 244, column: 10)
!7025 = !DILocation(line: 248, column: 2, scope: !7005)
!7026 = !DILocation(line: 248, column: 10, scope: !7005)
!7027 = !DILocation(line: 248, column: 14, scope: !7005)
!7028 = !DILocation(line: 248, column: 19, scope: !7005)
!7029 = !DILocation(line: 248, column: 24, scope: !7005)
!7030 = !DILocation(line: 248, column: 23, scope: !7005)
!7031 = !DILocation(line: 248, column: 31, scope: !7005)
!7032 = !DILocation(line: 248, column: 30, scope: !7005)
!7033 = !DILocation(line: 248, column: 27, scope: !7005)
!7034 = !DILocation(line: 0, scope: !7005)
!7035 = !DILocation(line: 249, column: 5, scope: !7036)
!7036 = distinct !DILexicalBlock(scope: !7005, file: !6640, line: 248, column: 36)
!7037 = !DILocation(line: 250, column: 5, scope: !7036)
!7038 = distinct !{!7038, !7025, !7039}
!7039 = !DILocation(line: 251, column: 2, scope: !7005)
!7040 = !DILocation(line: 253, column: 10, scope: !7005)
!7041 = !DILocation(line: 253, column: 9, scope: !7005)
!7042 = !DILocation(line: 253, column: 16, scope: !7005)
!7043 = !DILocation(line: 253, column: 15, scope: !7005)
!7044 = !DILocation(line: 253, column: 13, scope: !7005)
!7045 = !DILocation(line: 253, column: 2, scope: !7005)
!7046 = !DILocation(line: 254, column: 1, scope: !7005)
!7047 = distinct !DISubprogram(name: "memmove", scope: !6640, file: !6640, line: 263, type: !7048, scopeLine: 264, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2444, retainedNodes: !223)
!7048 = !DISubroutineType(types: !7049)
!7049 = !{!102, !102, !13, !217}
!7050 = !DILocalVariable(name: "d", arg: 1, scope: !7047, file: !6640, line: 263, type: !102)
!7051 = !DILocation(line: 263, column: 21, scope: !7047)
!7052 = !DILocalVariable(name: "s", arg: 2, scope: !7047, file: !6640, line: 263, type: !13)
!7053 = !DILocation(line: 263, column: 36, scope: !7047)
!7054 = !DILocalVariable(name: "n", arg: 3, scope: !7047, file: !6640, line: 263, type: !217)
!7055 = !DILocation(line: 263, column: 46, scope: !7047)
!7056 = !DILocalVariable(name: "dest", scope: !7047, file: !6640, line: 265, type: !925)
!7057 = !DILocation(line: 265, column: 8, scope: !7047)
!7058 = !DILocation(line: 265, column: 15, scope: !7047)
!7059 = !DILocalVariable(name: "src", scope: !7047, file: !6640, line: 266, type: !256)
!7060 = !DILocation(line: 266, column: 14, scope: !7047)
!7061 = !DILocation(line: 266, column: 21, scope: !7047)
!7062 = !DILocation(line: 268, column: 16, scope: !7063)
!7063 = distinct !DILexicalBlock(scope: !7047, file: !6640, line: 268, column: 6)
!7064 = !DILocation(line: 268, column: 23, scope: !7063)
!7065 = !DILocation(line: 268, column: 21, scope: !7063)
!7066 = !DILocation(line: 268, column: 30, scope: !7063)
!7067 = !DILocation(line: 268, column: 28, scope: !7063)
!7068 = !DILocation(line: 268, column: 6, scope: !7047)
!7069 = !DILocation(line: 274, column: 3, scope: !7070)
!7070 = distinct !DILexicalBlock(scope: !7063, file: !6640, line: 268, column: 33)
!7071 = !DILocation(line: 274, column: 10, scope: !7070)
!7072 = !DILocation(line: 274, column: 12, scope: !7070)
!7073 = !DILocation(line: 275, column: 5, scope: !7074)
!7074 = distinct !DILexicalBlock(scope: !7070, file: !6640, line: 274, column: 17)
!7075 = !DILocation(line: 276, column: 14, scope: !7074)
!7076 = !DILocation(line: 276, column: 18, scope: !7074)
!7077 = !DILocation(line: 276, column: 4, scope: !7074)
!7078 = !DILocation(line: 276, column: 9, scope: !7074)
!7079 = !DILocation(line: 276, column: 12, scope: !7074)
!7080 = distinct !{!7080, !7069, !7081}
!7081 = !DILocation(line: 277, column: 3, scope: !7070)
!7082 = !DILocation(line: 278, column: 2, scope: !7070)
!7083 = !DILocation(line: 280, column: 3, scope: !7084)
!7084 = distinct !DILexicalBlock(scope: !7063, file: !6640, line: 278, column: 9)
!7085 = !DILocation(line: 280, column: 10, scope: !7084)
!7086 = !DILocation(line: 280, column: 12, scope: !7084)
!7087 = !DILocation(line: 281, column: 13, scope: !7088)
!7088 = distinct !DILexicalBlock(scope: !7084, file: !6640, line: 280, column: 17)
!7089 = !DILocation(line: 281, column: 12, scope: !7088)
!7090 = !DILocation(line: 281, column: 5, scope: !7088)
!7091 = !DILocation(line: 281, column: 10, scope: !7088)
!7092 = !DILocation(line: 282, column: 8, scope: !7088)
!7093 = !DILocation(line: 283, column: 7, scope: !7088)
!7094 = !DILocation(line: 284, column: 5, scope: !7088)
!7095 = distinct !{!7095, !7083, !7096}
!7096 = !DILocation(line: 285, column: 3, scope: !7084)
!7097 = !DILocation(line: 288, column: 9, scope: !7047)
!7098 = !DILocation(line: 288, column: 2, scope: !7047)
!7099 = distinct !DISubprogram(name: "memcpy", scope: !6640, file: !6640, line: 298, type: !7100, scopeLine: 299, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2444, retainedNodes: !223)
!7100 = !DISubroutineType(types: !7101)
!7101 = !{!102, !7102, !7103, !217}
!7102 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !102)
!7103 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !13)
!7104 = !DILocalVariable(name: "d", arg: 1, scope: !7099, file: !6640, line: 298, type: !7102)
!7105 = !DILocation(line: 298, column: 30, scope: !7099)
!7106 = !DILocalVariable(name: "s", arg: 2, scope: !7099, file: !6640, line: 298, type: !7103)
!7107 = !DILocation(line: 298, column: 55, scope: !7099)
!7108 = !DILocalVariable(name: "n", arg: 3, scope: !7099, file: !6640, line: 298, type: !217)
!7109 = !DILocation(line: 298, column: 65, scope: !7099)
!7110 = !DILocalVariable(name: "d_byte", scope: !7099, file: !6640, line: 302, type: !751)
!7111 = !DILocation(line: 302, column: 17, scope: !7099)
!7112 = !DILocation(line: 302, column: 43, scope: !7099)
!7113 = !DILocalVariable(name: "s_byte", scope: !7099, file: !6640, line: 303, type: !2447)
!7114 = !DILocation(line: 303, column: 23, scope: !7099)
!7115 = !DILocation(line: 303, column: 55, scope: !7099)
!7116 = !DILocalVariable(name: "mask", scope: !7099, file: !6640, line: 306, type: !7117)
!7117 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !22)
!7118 = !DILocation(line: 306, column: 18, scope: !7099)
!7119 = !DILocation(line: 308, column: 19, scope: !7120)
!7120 = distinct !DILexicalBlock(scope: !7099, file: !6640, line: 308, column: 6)
!7121 = !DILocation(line: 308, column: 8, scope: !7120)
!7122 = !DILocation(line: 308, column: 34, scope: !7120)
!7123 = !DILocation(line: 308, column: 23, scope: !7120)
!7124 = !DILocation(line: 308, column: 21, scope: !7120)
!7125 = !DILocation(line: 308, column: 42, scope: !7120)
!7126 = !DILocation(line: 308, column: 50, scope: !7120)
!7127 = !DILocation(line: 308, column: 6, scope: !7099)
!7128 = !DILocation(line: 312, column: 3, scope: !7129)
!7129 = distinct !DILexicalBlock(scope: !7120, file: !6640, line: 308, column: 56)
!7130 = !DILocation(line: 312, column: 22, scope: !7129)
!7131 = !DILocation(line: 312, column: 11, scope: !7129)
!7132 = !DILocation(line: 312, column: 30, scope: !7129)
!7133 = !DILocation(line: 313, column: 8, scope: !7134)
!7134 = distinct !DILexicalBlock(scope: !7135, file: !6640, line: 313, column: 8)
!7135 = distinct !DILexicalBlock(scope: !7129, file: !6640, line: 312, column: 38)
!7136 = !DILocation(line: 313, column: 10, scope: !7134)
!7137 = !DILocation(line: 313, column: 8, scope: !7135)
!7138 = !DILocation(line: 314, column: 12, scope: !7139)
!7139 = distinct !DILexicalBlock(scope: !7134, file: !6640, line: 313, column: 16)
!7140 = !DILocation(line: 314, column: 5, scope: !7139)
!7141 = !DILocation(line: 316, column: 26, scope: !7135)
!7142 = !DILocation(line: 316, column: 18, scope: !7135)
!7143 = !DILocation(line: 316, column: 12, scope: !7135)
!7144 = !DILocation(line: 316, column: 16, scope: !7135)
!7145 = !DILocation(line: 317, column: 5, scope: !7135)
!7146 = distinct !{!7146, !7128, !7147}
!7147 = !DILocation(line: 318, column: 3, scope: !7129)
!7148 = !DILocalVariable(name: "d_word", scope: !7129, file: !6640, line: 322, type: !2449)
!7149 = !DILocation(line: 322, column: 15, scope: !7129)
!7150 = !DILocation(line: 322, column: 38, scope: !7129)
!7151 = !DILocation(line: 322, column: 24, scope: !7129)
!7152 = !DILocalVariable(name: "s_word", scope: !7129, file: !6640, line: 323, type: !2452)
!7153 = !DILocation(line: 323, column: 21, scope: !7129)
!7154 = !DILocation(line: 323, column: 50, scope: !7129)
!7155 = !DILocation(line: 323, column: 30, scope: !7129)
!7156 = !DILocation(line: 325, column: 3, scope: !7129)
!7157 = !DILocation(line: 325, column: 10, scope: !7129)
!7158 = !DILocation(line: 325, column: 12, scope: !7129)
!7159 = !DILocation(line: 326, column: 26, scope: !7160)
!7160 = distinct !DILexicalBlock(scope: !7129, file: !6640, line: 325, column: 35)
!7161 = !DILocation(line: 326, column: 18, scope: !7160)
!7162 = !DILocation(line: 326, column: 12, scope: !7160)
!7163 = !DILocation(line: 326, column: 16, scope: !7160)
!7164 = !DILocation(line: 327, column: 6, scope: !7160)
!7165 = distinct !{!7165, !7156, !7166}
!7166 = !DILocation(line: 328, column: 3, scope: !7129)
!7167 = !DILocation(line: 330, column: 29, scope: !7129)
!7168 = !DILocation(line: 330, column: 12, scope: !7129)
!7169 = !DILocation(line: 330, column: 10, scope: !7129)
!7170 = !DILocation(line: 331, column: 29, scope: !7129)
!7171 = !DILocation(line: 331, column: 12, scope: !7129)
!7172 = !DILocation(line: 331, column: 10, scope: !7129)
!7173 = !DILocation(line: 332, column: 2, scope: !7129)
!7174 = !DILocation(line: 337, column: 2, scope: !7099)
!7175 = !DILocation(line: 337, column: 9, scope: !7099)
!7176 = !DILocation(line: 337, column: 11, scope: !7099)
!7177 = !DILocation(line: 338, column: 25, scope: !7178)
!7178 = distinct !DILexicalBlock(scope: !7099, file: !6640, line: 337, column: 16)
!7179 = !DILocation(line: 338, column: 17, scope: !7178)
!7180 = !DILocation(line: 338, column: 11, scope: !7178)
!7181 = !DILocation(line: 338, column: 15, scope: !7178)
!7182 = !DILocation(line: 339, column: 4, scope: !7178)
!7183 = distinct !{!7183, !7174, !7184}
!7184 = !DILocation(line: 340, column: 2, scope: !7099)
!7185 = !DILocation(line: 342, column: 9, scope: !7099)
!7186 = !DILocation(line: 342, column: 2, scope: !7099)
!7187 = !DILocation(line: 343, column: 1, scope: !7099)
!7188 = distinct !DISubprogram(name: "memset", scope: !6640, file: !6640, line: 352, type: !7189, scopeLine: 353, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2444, retainedNodes: !223)
!7189 = !DISubroutineType(types: !7190)
!7190 = !{!102, !102, !103, !217}
!7191 = !DILocalVariable(name: "buf", arg: 1, scope: !7188, file: !6640, line: 352, type: !102)
!7192 = !DILocation(line: 352, column: 20, scope: !7188)
!7193 = !DILocalVariable(name: "c", arg: 2, scope: !7188, file: !6640, line: 352, type: !103)
!7194 = !DILocation(line: 352, column: 29, scope: !7188)
!7195 = !DILocalVariable(name: "n", arg: 3, scope: !7188, file: !6640, line: 352, type: !217)
!7196 = !DILocation(line: 352, column: 39, scope: !7188)
!7197 = !DILocalVariable(name: "d_byte", scope: !7188, file: !6640, line: 356, type: !751)
!7198 = !DILocation(line: 356, column: 17, scope: !7188)
!7199 = !DILocation(line: 356, column: 43, scope: !7188)
!7200 = !DILocalVariable(name: "c_byte", scope: !7188, file: !6640, line: 357, type: !157)
!7201 = !DILocation(line: 357, column: 16, scope: !7188)
!7202 = !DILocation(line: 357, column: 40, scope: !7188)
!7203 = !DILocation(line: 357, column: 25, scope: !7188)
!7204 = !DILocation(line: 360, column: 2, scope: !7188)
!7205 = !DILocation(line: 360, column: 21, scope: !7188)
!7206 = !DILocation(line: 360, column: 10, scope: !7188)
!7207 = !DILocation(line: 360, column: 29, scope: !7188)
!7208 = !DILocation(line: 361, column: 7, scope: !7209)
!7209 = distinct !DILexicalBlock(scope: !7210, file: !6640, line: 361, column: 7)
!7210 = distinct !DILexicalBlock(scope: !7188, file: !6640, line: 360, column: 57)
!7211 = !DILocation(line: 361, column: 9, scope: !7209)
!7212 = !DILocation(line: 361, column: 7, scope: !7210)
!7213 = !DILocation(line: 362, column: 11, scope: !7214)
!7214 = distinct !DILexicalBlock(scope: !7209, file: !6640, line: 361, column: 15)
!7215 = !DILocation(line: 362, column: 4, scope: !7214)
!7216 = !DILocation(line: 364, column: 17, scope: !7210)
!7217 = !DILocation(line: 364, column: 11, scope: !7210)
!7218 = !DILocation(line: 364, column: 15, scope: !7210)
!7219 = !DILocation(line: 365, column: 4, scope: !7210)
!7220 = distinct !{!7220, !7204, !7221}
!7221 = !DILocation(line: 366, column: 2, scope: !7188)
!7222 = !DILocalVariable(name: "d_word", scope: !7188, file: !6640, line: 370, type: !2449)
!7223 = !DILocation(line: 370, column: 14, scope: !7188)
!7224 = !DILocation(line: 370, column: 37, scope: !7188)
!7225 = !DILocation(line: 370, column: 23, scope: !7188)
!7226 = !DILocalVariable(name: "c_word", scope: !7188, file: !6640, line: 371, type: !2450)
!7227 = !DILocation(line: 371, column: 13, scope: !7188)
!7228 = !DILocation(line: 371, column: 34, scope: !7188)
!7229 = !DILocation(line: 371, column: 22, scope: !7188)
!7230 = !DILocation(line: 373, column: 12, scope: !7188)
!7231 = !DILocation(line: 373, column: 19, scope: !7188)
!7232 = !DILocation(line: 373, column: 9, scope: !7188)
!7233 = !DILocation(line: 374, column: 12, scope: !7188)
!7234 = !DILocation(line: 374, column: 19, scope: !7188)
!7235 = !DILocation(line: 374, column: 9, scope: !7188)
!7236 = !DILocation(line: 379, column: 2, scope: !7188)
!7237 = !DILocation(line: 379, column: 9, scope: !7188)
!7238 = !DILocation(line: 379, column: 11, scope: !7188)
!7239 = !DILocation(line: 380, column: 17, scope: !7240)
!7240 = distinct !DILexicalBlock(scope: !7188, file: !6640, line: 379, column: 34)
!7241 = !DILocation(line: 380, column: 11, scope: !7240)
!7242 = !DILocation(line: 380, column: 15, scope: !7240)
!7243 = !DILocation(line: 381, column: 5, scope: !7240)
!7244 = distinct !{!7244, !7236, !7245}
!7245 = !DILocation(line: 382, column: 2, scope: !7188)
!7246 = !DILocation(line: 386, column: 28, scope: !7188)
!7247 = !DILocation(line: 386, column: 11, scope: !7188)
!7248 = !DILocation(line: 386, column: 9, scope: !7188)
!7249 = !DILocation(line: 389, column: 2, scope: !7188)
!7250 = !DILocation(line: 389, column: 9, scope: !7188)
!7251 = !DILocation(line: 389, column: 11, scope: !7188)
!7252 = !DILocation(line: 390, column: 17, scope: !7253)
!7253 = distinct !DILexicalBlock(scope: !7188, file: !6640, line: 389, column: 16)
!7254 = !DILocation(line: 390, column: 11, scope: !7253)
!7255 = !DILocation(line: 390, column: 15, scope: !7253)
!7256 = !DILocation(line: 391, column: 4, scope: !7253)
!7257 = distinct !{!7257, !7249, !7258}
!7258 = !DILocation(line: 392, column: 2, scope: !7188)
!7259 = !DILocation(line: 394, column: 9, scope: !7188)
!7260 = !DILocation(line: 394, column: 2, scope: !7188)
!7261 = !DILocation(line: 395, column: 1, scope: !7188)
!7262 = distinct !DISubprogram(name: "memchr", scope: !6640, file: !6640, line: 404, type: !7263, scopeLine: 405, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2444, retainedNodes: !223)
!7263 = !DISubroutineType(types: !7264)
!7264 = !{!102, !13, !103, !217}
!7265 = !DILocalVariable(name: "s", arg: 1, scope: !7262, file: !6640, line: 404, type: !13)
!7266 = !DILocation(line: 404, column: 26, scope: !7262)
!7267 = !DILocalVariable(name: "c", arg: 2, scope: !7262, file: !6640, line: 404, type: !103)
!7268 = !DILocation(line: 404, column: 33, scope: !7262)
!7269 = !DILocalVariable(name: "n", arg: 3, scope: !7262, file: !6640, line: 404, type: !217)
!7270 = !DILocation(line: 404, column: 43, scope: !7262)
!7271 = !DILocation(line: 406, column: 6, scope: !7272)
!7272 = distinct !DILexicalBlock(scope: !7262, file: !6640, line: 406, column: 6)
!7273 = !DILocation(line: 406, column: 8, scope: !7272)
!7274 = !DILocation(line: 406, column: 6, scope: !7262)
!7275 = !DILocalVariable(name: "p", scope: !7276, file: !6640, line: 407, type: !2447)
!7276 = distinct !DILexicalBlock(scope: !7272, file: !6640, line: 406, column: 14)
!7277 = !DILocation(line: 407, column: 24, scope: !7276)
!7278 = !DILocation(line: 407, column: 28, scope: !7276)
!7279 = !DILocation(line: 409, column: 3, scope: !7276)
!7280 = !DILocation(line: 410, column: 10, scope: !7281)
!7281 = distinct !DILexicalBlock(scope: !7282, file: !6640, line: 410, column: 8)
!7282 = distinct !DILexicalBlock(scope: !7276, file: !6640, line: 409, column: 6)
!7283 = !DILocation(line: 410, column: 8, scope: !7281)
!7284 = !DILocation(line: 410, column: 31, scope: !7281)
!7285 = !DILocation(line: 410, column: 16, scope: !7281)
!7286 = !DILocation(line: 410, column: 13, scope: !7281)
!7287 = !DILocation(line: 410, column: 8, scope: !7282)
!7288 = !DILocation(line: 411, column: 22, scope: !7289)
!7289 = distinct !DILexicalBlock(scope: !7281, file: !6640, line: 410, column: 34)
!7290 = !DILocation(line: 411, column: 24, scope: !7289)
!7291 = !DILocation(line: 411, column: 5, scope: !7289)
!7292 = !DILocation(line: 414, column: 3, scope: !7282)
!7293 = !DILocation(line: 414, column: 12, scope: !7276)
!7294 = !DILocation(line: 414, column: 16, scope: !7276)
!7295 = distinct !{!7295, !7279, !7296}
!7296 = !DILocation(line: 414, column: 20, scope: !7276)
!7297 = !DILocation(line: 415, column: 2, scope: !7276)
!7298 = !DILocation(line: 417, column: 2, scope: !7262)
!7299 = !DILocation(line: 418, column: 1, scope: !7262)
!7300 = distinct !DISubprogram(name: "__stdout_hook_install", scope: !714, file: !714, line: 23, type: !2864, scopeLine: 24, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !707, retainedNodes: !223)
!7301 = !DILocalVariable(name: "hook", arg: 1, scope: !7300, file: !714, line: 23, type: !273)
!7302 = !DILocation(line: 23, column: 34, scope: !7300)
!7303 = !DILocation(line: 25, column: 17, scope: !7300)
!7304 = !DILocation(line: 25, column: 15, scope: !7300)
!7305 = !DILocation(line: 26, column: 1, scope: !7300)
!7306 = distinct !DISubprogram(name: "_stdout_hook_default", scope: !714, file: !714, line: 14, type: !274, scopeLine: 15, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !707, retainedNodes: !223)
!7307 = !DILocalVariable(name: "c", arg: 1, scope: !7306, file: !714, line: 14, type: !103)
!7308 = !DILocation(line: 14, column: 37, scope: !7306)
!7309 = !DILocation(line: 16, column: 9, scope: !7306)
!7310 = !DILocation(line: 18, column: 2, scope: !7306)
!7311 = distinct !DISubprogram(name: "z_impl_zephyr_fputc", scope: !714, file: !714, line: 28, type: !7312, scopeLine: 29, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !707, retainedNodes: !223)
!7312 = !DISubroutineType(types: !7313)
!7313 = !{!103, !103, !710}
!7314 = !DILocalVariable(name: "c", arg: 1, scope: !7311, file: !714, line: 28, type: !103)
!7315 = !DILocation(line: 28, column: 29, scope: !7311)
!7316 = !DILocalVariable(name: "stream", arg: 2, scope: !7311, file: !714, line: 28, type: !710)
!7317 = !DILocation(line: 28, column: 38, scope: !7311)
!7318 = !DILocation(line: 30, column: 10, scope: !7311)
!7319 = !DILocation(line: 30, column: 17, scope: !7311)
!7320 = !DILocation(line: 30, column: 27, scope: !7311)
!7321 = !DILocation(line: 30, column: 30, scope: !7311)
!7322 = !DILocation(line: 30, column: 37, scope: !7311)
!7323 = !DILocation(line: 30, column: 9, scope: !7311)
!7324 = !DILocation(line: 30, column: 50, scope: !7311)
!7325 = !DILocation(line: 30, column: 63, scope: !7311)
!7326 = !DILocation(line: 30, column: 2, scope: !7311)
!7327 = distinct !DISubprogram(name: "fputc", scope: !714, file: !714, line: 41, type: !7312, scopeLine: 42, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !707, retainedNodes: !223)
!7328 = !DILocalVariable(name: "c", arg: 1, scope: !7327, file: !714, line: 41, type: !103)
!7329 = !DILocation(line: 41, column: 15, scope: !7327)
!7330 = !DILocalVariable(name: "stream", arg: 2, scope: !7327, file: !714, line: 41, type: !710)
!7331 = !DILocation(line: 41, column: 24, scope: !7327)
!7332 = !DILocation(line: 43, column: 22, scope: !7327)
!7333 = !DILocation(line: 43, column: 25, scope: !7327)
!7334 = !DILocation(line: 43, column: 9, scope: !7327)
!7335 = !DILocation(line: 43, column: 2, scope: !7327)
!7336 = distinct !DISubprogram(name: "zephyr_fputc", scope: !7337, file: !7337, line: 72, type: !7312, scopeLine: 73, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !707, retainedNodes: !223)
!7337 = !DIFile(filename: "zephyr/include/generated/syscalls/libc-hooks.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/gdbstub")
!7338 = !DILocalVariable(name: "c", arg: 1, scope: !7336, file: !7337, line: 72, type: !103)
!7339 = !DILocation(line: 72, column: 36, scope: !7336)
!7340 = !DILocalVariable(name: "stream", arg: 2, scope: !7336, file: !7337, line: 72, type: !710)
!7341 = !DILocation(line: 72, column: 46, scope: !7336)
!7342 = !DILocation(line: 81, column: 2, scope: !7336)
!7343 = !DILocation(line: 81, column: 2, scope: !7344)
!7344 = distinct !DILexicalBlock(scope: !7336, file: !7337, line: 81, column: 2)
!7345 = !{i64 2151098679}
!7346 = !DILocation(line: 82, column: 29, scope: !7336)
!7347 = !DILocation(line: 82, column: 32, scope: !7336)
!7348 = !DILocation(line: 82, column: 9, scope: !7336)
!7349 = !DILocation(line: 82, column: 2, scope: !7336)
!7350 = distinct !DISubprogram(name: "fputs", scope: !714, file: !714, line: 46, type: !7351, scopeLine: 47, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !707, retainedNodes: !223)
!7351 = !DISubroutineType(types: !7352)
!7352 = !{!103, !6644, !7353}
!7353 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !710)
!7354 = !DILocalVariable(name: "s", arg: 1, scope: !7350, file: !714, line: 46, type: !6644)
!7355 = !DILocation(line: 46, column: 33, scope: !7350)
!7356 = !DILocalVariable(name: "stream", arg: 2, scope: !7350, file: !714, line: 46, type: !7353)
!7357 = !DILocation(line: 46, column: 52, scope: !7350)
!7358 = !DILocalVariable(name: "len", scope: !7350, file: !714, line: 48, type: !103)
!7359 = !DILocation(line: 48, column: 6, scope: !7350)
!7360 = !DILocation(line: 48, column: 19, scope: !7350)
!7361 = !DILocation(line: 48, column: 12, scope: !7350)
!7362 = !DILocalVariable(name: "ret", scope: !7350, file: !714, line: 49, type: !103)
!7363 = !DILocation(line: 49, column: 6, scope: !7350)
!7364 = !DILocation(line: 51, column: 15, scope: !7350)
!7365 = !DILocation(line: 51, column: 21, scope: !7350)
!7366 = !DILocation(line: 51, column: 26, scope: !7350)
!7367 = !DILocation(line: 51, column: 8, scope: !7350)
!7368 = !DILocation(line: 51, column: 6, scope: !7350)
!7369 = !DILocation(line: 53, column: 9, scope: !7350)
!7370 = !DILocation(line: 53, column: 16, scope: !7350)
!7371 = !DILocation(line: 53, column: 13, scope: !7350)
!7372 = !DILocation(line: 53, column: 2, scope: !7350)
!7373 = distinct !DISubprogram(name: "fwrite", scope: !714, file: !714, line: 99, type: !7374, scopeLine: 101, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !707, retainedNodes: !223)
!7374 = !DISubroutineType(types: !7375)
!7375 = !{!217, !7103, !217, !217, !7353}
!7376 = !DILocalVariable(name: "ptr", arg: 1, scope: !7373, file: !714, line: 99, type: !7103)
!7377 = !DILocation(line: 99, column: 37, scope: !7373)
!7378 = !DILocalVariable(name: "size", arg: 2, scope: !7373, file: !714, line: 99, type: !217)
!7379 = !DILocation(line: 99, column: 49, scope: !7373)
!7380 = !DILocalVariable(name: "nitems", arg: 3, scope: !7373, file: !714, line: 99, type: !217)
!7381 = !DILocation(line: 99, column: 62, scope: !7373)
!7382 = !DILocalVariable(name: "stream", arg: 4, scope: !7373, file: !714, line: 100, type: !7353)
!7383 = !DILocation(line: 100, column: 22, scope: !7373)
!7384 = !DILocation(line: 102, column: 23, scope: !7373)
!7385 = !DILocation(line: 102, column: 28, scope: !7373)
!7386 = !DILocation(line: 102, column: 34, scope: !7373)
!7387 = !DILocation(line: 102, column: 42, scope: !7373)
!7388 = !DILocation(line: 102, column: 9, scope: !7373)
!7389 = !DILocation(line: 102, column: 2, scope: !7373)
!7390 = distinct !DISubprogram(name: "zephyr_fwrite", scope: !7337, file: !7337, line: 96, type: !7374, scopeLine: 97, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !707, retainedNodes: !223)
!7391 = !DILocalVariable(name: "ptr", arg: 1, scope: !7390, file: !7337, line: 96, type: !7103)
!7392 = !DILocation(line: 96, column: 58, scope: !7390)
!7393 = !DILocalVariable(name: "size", arg: 2, scope: !7390, file: !7337, line: 96, type: !217)
!7394 = !DILocation(line: 96, column: 70, scope: !7390)
!7395 = !DILocalVariable(name: "nitems", arg: 3, scope: !7390, file: !7337, line: 96, type: !217)
!7396 = !DILocation(line: 96, column: 83, scope: !7390)
!7397 = !DILocalVariable(name: "stream", arg: 4, scope: !7390, file: !7337, line: 96, type: !7353)
!7398 = !DILocation(line: 96, column: 107, scope: !7390)
!7399 = !DILocation(line: 107, column: 2, scope: !7390)
!7400 = !DILocation(line: 107, column: 2, scope: !7401)
!7401 = distinct !DILexicalBlock(scope: !7390, file: !7337, line: 107, column: 2)
!7402 = !{i64 2151098783}
!7403 = !DILocation(line: 108, column: 30, scope: !7390)
!7404 = !DILocation(line: 108, column: 35, scope: !7390)
!7405 = !DILocation(line: 108, column: 41, scope: !7390)
!7406 = !DILocation(line: 108, column: 49, scope: !7390)
!7407 = !DILocation(line: 108, column: 9, scope: !7390)
!7408 = !DILocation(line: 108, column: 2, scope: !7390)
!7409 = distinct !DISubprogram(name: "z_impl_zephyr_fwrite", scope: !714, file: !714, line: 56, type: !7374, scopeLine: 58, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !707, retainedNodes: !223)
!7410 = !DILocalVariable(name: "ptr", arg: 1, scope: !7409, file: !714, line: 56, type: !7103)
!7411 = !DILocation(line: 56, column: 51, scope: !7409)
!7412 = !DILocalVariable(name: "size", arg: 2, scope: !7409, file: !714, line: 56, type: !217)
!7413 = !DILocation(line: 56, column: 63, scope: !7409)
!7414 = !DILocalVariable(name: "nitems", arg: 3, scope: !7409, file: !714, line: 57, type: !217)
!7415 = !DILocation(line: 57, column: 15, scope: !7409)
!7416 = !DILocalVariable(name: "stream", arg: 4, scope: !7409, file: !714, line: 57, type: !7353)
!7417 = !DILocation(line: 57, column: 39, scope: !7409)
!7418 = !DILocalVariable(name: "i", scope: !7409, file: !714, line: 59, type: !217)
!7419 = !DILocation(line: 59, column: 9, scope: !7409)
!7420 = !DILocalVariable(name: "j", scope: !7409, file: !714, line: 60, type: !217)
!7421 = !DILocation(line: 60, column: 9, scope: !7409)
!7422 = !DILocalVariable(name: "p", scope: !7409, file: !714, line: 61, type: !2447)
!7423 = !DILocation(line: 61, column: 23, scope: !7409)
!7424 = !DILocation(line: 63, column: 7, scope: !7425)
!7425 = distinct !DILexicalBlock(scope: !7409, file: !714, line: 63, column: 6)
!7426 = !DILocation(line: 63, column: 14, scope: !7425)
!7427 = !DILocation(line: 63, column: 24, scope: !7425)
!7428 = !DILocation(line: 63, column: 27, scope: !7425)
!7429 = !DILocation(line: 63, column: 34, scope: !7425)
!7430 = !DILocation(line: 63, column: 45, scope: !7425)
!7431 = !DILocation(line: 64, column: 7, scope: !7425)
!7432 = !DILocation(line: 64, column: 14, scope: !7425)
!7433 = !DILocation(line: 64, column: 20, scope: !7425)
!7434 = !DILocation(line: 64, column: 24, scope: !7425)
!7435 = !DILocation(line: 64, column: 29, scope: !7425)
!7436 = !DILocation(line: 63, column: 6, scope: !7409)
!7437 = !DILocation(line: 65, column: 3, scope: !7438)
!7438 = distinct !DILexicalBlock(scope: !7425, file: !714, line: 64, column: 36)
!7439 = !DILocation(line: 68, column: 6, scope: !7409)
!7440 = !DILocation(line: 68, column: 4, scope: !7409)
!7441 = !DILocation(line: 69, column: 6, scope: !7409)
!7442 = !DILocation(line: 69, column: 4, scope: !7409)
!7443 = !DILocation(line: 70, column: 2, scope: !7409)
!7444 = !DILocation(line: 71, column: 7, scope: !7445)
!7445 = distinct !DILexicalBlock(scope: !7409, file: !714, line: 70, column: 5)
!7446 = !DILocation(line: 71, column: 5, scope: !7445)
!7447 = !DILocation(line: 72, column: 3, scope: !7445)
!7448 = !DILocation(line: 73, column: 8, scope: !7449)
!7449 = distinct !DILexicalBlock(scope: !7450, file: !714, line: 73, column: 8)
!7450 = distinct !DILexicalBlock(scope: !7445, file: !714, line: 72, column: 6)
!7451 = !DILocation(line: 73, column: 29, scope: !7449)
!7452 = !DILocation(line: 73, column: 27, scope: !7449)
!7453 = !DILocation(line: 73, column: 21, scope: !7449)
!7454 = !DILocation(line: 73, column: 33, scope: !7449)
!7455 = !DILocation(line: 73, column: 8, scope: !7450)
!7456 = !DILocation(line: 74, column: 5, scope: !7457)
!7457 = distinct !DILexicalBlock(scope: !7449, file: !714, line: 73, column: 41)
!7458 = !DILocation(line: 76, column: 5, scope: !7450)
!7459 = !DILocation(line: 77, column: 3, scope: !7450)
!7460 = !DILocation(line: 77, column: 12, scope: !7445)
!7461 = !DILocation(line: 77, column: 14, scope: !7445)
!7462 = distinct !{!7462, !7447, !7463}
!7463 = !DILocation(line: 77, column: 17, scope: !7445)
!7464 = !DILocation(line: 79, column: 4, scope: !7445)
!7465 = !DILocation(line: 80, column: 2, scope: !7445)
!7466 = !DILocation(line: 80, column: 11, scope: !7409)
!7467 = !DILocation(line: 80, column: 13, scope: !7409)
!7468 = distinct !{!7468, !7443, !7469}
!7469 = !DILocation(line: 80, column: 16, scope: !7409)
!7470 = !DILabel(scope: !7409, name: "done", file: !714, line: 82)
!7471 = !DILocation(line: 82, column: 1, scope: !7409)
!7472 = !DILocation(line: 83, column: 10, scope: !7409)
!7473 = !DILocation(line: 83, column: 19, scope: !7409)
!7474 = !DILocation(line: 83, column: 17, scope: !7409)
!7475 = !DILocation(line: 83, column: 2, scope: !7409)
!7476 = !DILocation(line: 84, column: 1, scope: !7409)
!7477 = distinct !DISubprogram(name: "puts", scope: !714, file: !714, line: 106, type: !7478, scopeLine: 107, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !707, retainedNodes: !223)
!7478 = !DISubroutineType(types: !7479)
!7479 = !{!103, !256}
!7480 = !DILocalVariable(name: "s", arg: 1, scope: !7477, file: !714, line: 106, type: !256)
!7481 = !DILocation(line: 106, column: 22, scope: !7477)
!7482 = !DILocation(line: 108, column: 12, scope: !7483)
!7483 = distinct !DILexicalBlock(scope: !7477, file: !714, line: 108, column: 6)
!7484 = !DILocation(line: 108, column: 6, scope: !7483)
!7485 = !DILocation(line: 108, column: 23, scope: !7483)
!7486 = !DILocation(line: 108, column: 6, scope: !7477)
!7487 = !DILocation(line: 109, column: 3, scope: !7488)
!7488 = distinct !DILexicalBlock(scope: !7483, file: !714, line: 108, column: 31)
!7489 = !DILocation(line: 112, column: 9, scope: !7477)
!7490 = !DILocation(line: 112, column: 29, scope: !7477)
!7491 = !DILocation(line: 112, column: 2, scope: !7477)
!7492 = !DILocation(line: 113, column: 1, scope: !7477)
!7493 = distinct !DISubprogram(name: "uart_console_init", scope: !815, file: !815, line: 588, type: !758, scopeLine: 589, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !717, retainedNodes: !223)
!7494 = !DILocalVariable(name: "arg", arg: 1, scope: !7493, file: !815, line: 588, type: !729)
!7495 = !DILocation(line: 588, column: 51, scope: !7493)
!7496 = !DILocation(line: 591, column: 2, scope: !7493)
!7497 = !DILocation(line: 593, column: 7, scope: !7498)
!7498 = distinct !DILexicalBlock(scope: !7493, file: !815, line: 593, column: 6)
!7499 = !DILocation(line: 593, column: 6, scope: !7493)
!7500 = !DILocation(line: 594, column: 3, scope: !7501)
!7501 = distinct !DILexicalBlock(scope: !7498, file: !815, line: 593, column: 42)
!7502 = !DILocation(line: 597, column: 2, scope: !7493)
!7503 = !DILocation(line: 599, column: 2, scope: !7493)
!7504 = !DILocation(line: 600, column: 1, scope: !7493)
!7505 = distinct !DISubprogram(name: "device_is_ready", scope: !7506, file: !7506, line: 47, type: !7507, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !717, retainedNodes: !223)
!7506 = !DIFile(filename: "zephyr/include/generated/syscalls/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/gdbstub")
!7507 = !DISubroutineType(types: !7508)
!7508 = !{!743, !729}
!7509 = !DILocalVariable(name: "dev", arg: 1, scope: !7505, file: !7506, line: 47, type: !729)
!7510 = !DILocation(line: 47, column: 58, scope: !7505)
!7511 = !DILocation(line: 55, column: 2, scope: !7505)
!7512 = !DILocation(line: 55, column: 2, scope: !7513)
!7513 = distinct !DILexicalBlock(scope: !7505, file: !7506, line: 55, column: 2)
!7514 = !{i64 2151368353}
!7515 = !DILocation(line: 56, column: 32, scope: !7505)
!7516 = !DILocation(line: 56, column: 9, scope: !7505)
!7517 = !DILocation(line: 56, column: 2, scope: !7505)
!7518 = distinct !DISubprogram(name: "uart_console_hook_install", scope: !815, file: !815, line: 573, type: !253, scopeLine: 574, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !717, retainedNodes: !223)
!7519 = !DILocation(line: 576, column: 2, scope: !7518)
!7520 = !DILocation(line: 579, column: 2, scope: !7518)
!7521 = !DILocation(line: 581, column: 1, scope: !7518)
!7522 = distinct !DISubprogram(name: "console_out", scope: !815, file: !815, line: 77, type: !274, scopeLine: 78, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !717, retainedNodes: !223)
!7523 = !DILocalVariable(name: "c", arg: 1, scope: !7522, file: !815, line: 77, type: !103)
!7524 = !DILocation(line: 77, column: 28, scope: !7522)
!7525 = !DILocation(line: 89, column: 14, scope: !7526)
!7526 = distinct !DILexicalBlock(scope: !7522, file: !815, line: 89, column: 6)
!7527 = !DILocation(line: 89, column: 11, scope: !7526)
!7528 = !DILocation(line: 89, column: 6, scope: !7522)
!7529 = !DILocation(line: 90, column: 3, scope: !7530)
!7530 = distinct !DILexicalBlock(scope: !7526, file: !815, line: 89, column: 17)
!7531 = !DILocation(line: 91, column: 2, scope: !7530)
!7532 = !DILocation(line: 92, column: 34, scope: !7522)
!7533 = !DILocation(line: 92, column: 2, scope: !7522)
!7534 = !DILocation(line: 94, column: 9, scope: !7522)
!7535 = !DILocation(line: 94, column: 2, scope: !7522)
!7536 = distinct !DISubprogram(name: "uart_poll_out", scope: !7537, file: !7537, line: 95, type: !754, scopeLine: 96, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !717, retainedNodes: !223)
!7537 = !DIFile(filename: "zephyr/include/generated/syscalls/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/gdbstub")
!7538 = !DILocalVariable(name: "dev", arg: 1, scope: !7536, file: !7537, line: 95, type: !729)
!7539 = !DILocation(line: 95, column: 56, scope: !7536)
!7540 = !DILocalVariable(name: "out_char", arg: 2, scope: !7536, file: !7537, line: 95, type: !157)
!7541 = !DILocation(line: 95, column: 75, scope: !7536)
!7542 = !DILocation(line: 105, column: 2, scope: !7536)
!7543 = !DILocation(line: 105, column: 2, scope: !7544)
!7544 = distinct !DILexicalBlock(scope: !7536, file: !7537, line: 105, column: 2)
!7545 = !{i64 2151451598}
!7546 = !DILocation(line: 106, column: 23, scope: !7536)
!7547 = !DILocation(line: 106, column: 28, scope: !7536)
!7548 = !DILocation(line: 106, column: 2, scope: !7536)
!7549 = !DILocation(line: 107, column: 1, scope: !7536)
!7550 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !723, file: !723, line: 574, type: !754, scopeLine: 576, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !717, retainedNodes: !223)
!7551 = !DILocalVariable(name: "dev", arg: 1, scope: !7550, file: !723, line: 574, type: !729)
!7552 = !DILocation(line: 574, column: 62, scope: !7550)
!7553 = !DILocalVariable(name: "out_char", arg: 2, scope: !7550, file: !723, line: 575, type: !157)
!7554 = !DILocation(line: 575, column: 20, scope: !7550)
!7555 = !DILocalVariable(name: "api", scope: !7550, file: !723, line: 577, type: !720)
!7556 = !DILocation(line: 577, column: 32, scope: !7550)
!7557 = !DILocation(line: 578, column: 35, scope: !7550)
!7558 = !DILocation(line: 578, column: 40, scope: !7550)
!7559 = !DILocation(line: 578, column: 3, scope: !7550)
!7560 = !DILocation(line: 580, column: 2, scope: !7550)
!7561 = !DILocation(line: 580, column: 7, scope: !7550)
!7562 = !DILocation(line: 580, column: 16, scope: !7550)
!7563 = !DILocation(line: 580, column: 21, scope: !7550)
!7564 = !DILocation(line: 581, column: 1, scope: !7550)
!7565 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !732, file: !732, line: 730, type: !7507, scopeLine: 731, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !717, retainedNodes: !223)
!7566 = !DILocalVariable(name: "dev", arg: 1, scope: !7565, file: !732, line: 730, type: !729)
!7567 = !DILocation(line: 730, column: 64, scope: !7565)
!7568 = !DILocation(line: 732, column: 27, scope: !7565)
!7569 = !DILocation(line: 732, column: 9, scope: !7565)
!7570 = !DILocation(line: 732, column: 2, scope: !7565)
!7571 = distinct !DISubprogram(name: "uart_register_input", scope: !815, file: !815, line: 560, type: !7572, scopeLine: 562, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !717, retainedNodes: !223)
!7572 = !DISubroutineType(types: !7573)
!7573 = !{null, !7574, !7574, !7614}
!7574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7575, size: 32)
!7575 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !109, line: 2208, size: 128, elements: !7576)
!7576 = !{!7577}
!7577 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !7575, file: !109, line: 2209, baseType: !7578, size: 128)
!7578 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !109, line: 1709, size: 128, elements: !7579)
!7579 = !{!7580, !7593, !7595}
!7580 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !7578, file: !109, line: 1710, baseType: !7581, size: 64)
!7581 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !7582, line: 46, baseType: !7583)
!7582 = !DIFile(filename: "zephyr/include/zephyr/sys/sflist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7583 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !7582, line: 41, size: 64, elements: !7584)
!7584 = !{!7585, !7592}
!7585 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !7583, file: !7582, line: 42, baseType: !7586, size: 32)
!7586 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7587, size: 32)
!7587 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !7582, line: 39, baseType: !7588)
!7588 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !7582, line: 35, size: 32, elements: !7589)
!7589 = !{!7590}
!7590 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !7588, file: !7582, line: 36, baseType: !7591, size: 32)
!7591 = !DIDerivedType(tag: DW_TAG_typedef, name: "unative_t", file: !7582, line: 32, baseType: !173)
!7592 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !7583, file: !7582, line: 43, baseType: !7586, size: 32, offset: 32)
!7593 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !7578, file: !109, line: 1711, baseType: !7594, offset: 64)
!7594 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !222, line: 43, elements: !223)
!7595 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !7578, file: !109, line: 1712, baseType: !7596, size: 64, offset: 64)
!7596 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !150, line: 233, baseType: !7597)
!7597 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !150, line: 231, size: 64, elements: !7598)
!7598 = !{!7599}
!7599 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !7597, file: !150, line: 232, baseType: !7600, size: 64)
!7600 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !124, line: 48, baseType: !7601)
!7601 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !124, line: 37, size: 64, elements: !7602)
!7602 = !{!7603, !7609}
!7603 = !DIDerivedType(tag: DW_TAG_member, scope: !7601, file: !124, line: 38, baseType: !7604, size: 32)
!7604 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7601, file: !124, line: 38, size: 32, elements: !7605)
!7605 = !{!7606, !7608}
!7606 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !7604, file: !124, line: 39, baseType: !7607, size: 32)
!7607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7601, size: 32)
!7608 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7604, file: !124, line: 40, baseType: !7607, size: 32)
!7609 = !DIDerivedType(tag: DW_TAG_member, scope: !7601, file: !124, line: 42, baseType: !7610, size: 32, offset: 32)
!7610 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7601, file: !124, line: 42, size: 32, elements: !7611)
!7611 = !{!7612, !7613}
!7612 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !7610, file: !124, line: 43, baseType: !7607, size: 32)
!7613 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !7610, file: !124, line: 44, baseType: !7607, size: 32)
!7614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7615, size: 32)
!7615 = !DISubroutineType(types: !7616)
!7616 = !{!156, !925, !156}
!7617 = !DILocalVariable(name: "avail", arg: 1, scope: !7571, file: !815, line: 560, type: !7574)
!7618 = !DILocation(line: 560, column: 41, scope: !7571)
!7619 = !DILocalVariable(name: "lines", arg: 2, scope: !7571, file: !815, line: 560, type: !7574)
!7620 = !DILocation(line: 560, column: 63, scope: !7571)
!7621 = !DILocalVariable(name: "completion", arg: 3, scope: !7571, file: !815, line: 561, type: !7614)
!7622 = !DILocation(line: 561, column: 15, scope: !7571)
!7623 = !DILocation(line: 563, column: 2, scope: !7571)
!7624 = !DILocation(line: 564, column: 2, scope: !7571)
!7625 = !DILocation(line: 565, column: 2, scope: !7571)
!7626 = !DILocation(line: 566, column: 1, scope: !7571)
!7627 = distinct !DISubprogram(name: "imx_gpio_configure", scope: !929, file: !929, line: 40, type: !850, scopeLine: 42, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !824, retainedNodes: !223)
!7628 = !DILocalVariable(name: "port", arg: 1, scope: !7627, file: !929, line: 40, type: !852)
!7629 = !DILocation(line: 40, column: 52, scope: !7627)
!7630 = !DILocalVariable(name: "pin", arg: 2, scope: !7627, file: !929, line: 40, type: !867)
!7631 = !DILocation(line: 40, column: 69, scope: !7627)
!7632 = !DILocalVariable(name: "flags", arg: 3, scope: !7627, file: !929, line: 41, type: !868)
!7633 = !DILocation(line: 41, column: 23, scope: !7627)
!7634 = !DILocalVariable(name: "config", scope: !7627, file: !929, line: 43, type: !7635)
!7635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !961, size: 32)
!7636 = !DILocation(line: 43, column: 32, scope: !7627)
!7637 = !DILocation(line: 43, column: 41, scope: !7627)
!7638 = !DILocation(line: 43, column: 47, scope: !7627)
!7639 = !DILocalVariable(name: "base", scope: !7627, file: !929, line: 44, type: !966)
!7640 = !DILocation(line: 44, column: 13, scope: !7627)
!7641 = !DILocation(line: 44, column: 20, scope: !7627)
!7642 = !DILocation(line: 44, column: 28, scope: !7627)
!7643 = !DILocation(line: 46, column: 8, scope: !7644)
!7644 = distinct !DILexicalBlock(scope: !7627, file: !929, line: 46, column: 6)
!7645 = !DILocation(line: 46, column: 14, scope: !7644)
!7646 = !DILocation(line: 46, column: 28, scope: !7644)
!7647 = !DILocation(line: 46, column: 35, scope: !7644)
!7648 = !DILocation(line: 46, column: 40, scope: !7644)
!7649 = !DILocation(line: 46, column: 46, scope: !7644)
!7650 = !DILocation(line: 46, column: 61, scope: !7644)
!7651 = !DILocation(line: 46, column: 6, scope: !7627)
!7652 = !DILocation(line: 47, column: 3, scope: !7653)
!7653 = distinct !DILexicalBlock(scope: !7644, file: !929, line: 46, column: 69)
!7654 = !DILocalVariable(name: "pin_cfg", scope: !7627, file: !929, line: 52, type: !7655)
!7655 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !982, line: 59, size: 160, elements: !7656)
!7656 = !{!7657, !7658}
!7657 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !7655, file: !982, line: 60, baseType: !981, size: 128)
!7658 = !DIDerivedType(tag: DW_TAG_member, name: "pin_ctrl_flags", scope: !7655, file: !982, line: 61, baseType: !173, size: 32, offset: 128)
!7659 = !DILocation(line: 52, column: 25, scope: !7627)
!7660 = !DILocalVariable(name: "gpio_cfg_reg", scope: !7627, file: !929, line: 54, type: !690)
!7661 = !DILocation(line: 54, column: 21, scope: !7627)
!7662 = !DILocation(line: 55, column: 24, scope: !7627)
!7663 = !DILocation(line: 55, column: 32, scope: !7627)
!7664 = !DILocation(line: 55, column: 42, scope: !7627)
!7665 = !DILocation(line: 55, column: 47, scope: !7627)
!7666 = !DILocation(line: 55, column: 3, scope: !7627)
!7667 = !DILocalVariable(name: "reg", scope: !7627, file: !929, line: 56, type: !173)
!7668 = !DILocation(line: 56, column: 11, scope: !7627)
!7669 = !DILocation(line: 56, column: 18, scope: !7627)
!7670 = !DILocation(line: 56, column: 17, scope: !7627)
!7671 = !DILocation(line: 66, column: 7, scope: !7672)
!7672 = distinct !DILexicalBlock(scope: !7627, file: !929, line: 66, column: 6)
!7673 = !DILocation(line: 66, column: 13, scope: !7672)
!7674 = !DILocation(line: 66, column: 34, scope: !7672)
!7675 = !DILocation(line: 66, column: 6, scope: !7627)
!7676 = !DILocation(line: 67, column: 3, scope: !7677)
!7677 = distinct !DILexicalBlock(scope: !7672, file: !929, line: 66, column: 40)
!7678 = !DILocation(line: 70, column: 8, scope: !7679)
!7679 = distinct !DILexicalBlock(scope: !7627, file: !929, line: 70, column: 6)
!7680 = !DILocation(line: 70, column: 14, scope: !7679)
!7681 = !DILocation(line: 70, column: 30, scope: !7679)
!7682 = !DILocation(line: 70, column: 36, scope: !7679)
!7683 = !DILocation(line: 70, column: 41, scope: !7679)
!7684 = !DILocation(line: 70, column: 47, scope: !7679)
!7685 = !DILocation(line: 70, column: 65, scope: !7679)
!7686 = !DILocation(line: 70, column: 6, scope: !7627)
!7687 = !DILocation(line: 71, column: 7, scope: !7688)
!7688 = distinct !DILexicalBlock(scope: !7679, file: !929, line: 70, column: 72)
!7689 = !DILocation(line: 72, column: 9, scope: !7690)
!7690 = distinct !DILexicalBlock(scope: !7688, file: !929, line: 72, column: 7)
!7691 = !DILocation(line: 72, column: 15, scope: !7690)
!7692 = !DILocation(line: 72, column: 31, scope: !7690)
!7693 = !DILocation(line: 72, column: 7, scope: !7688)
!7694 = !DILocation(line: 73, column: 8, scope: !7695)
!7695 = distinct !DILexicalBlock(scope: !7690, file: !929, line: 72, column: 38)
!7696 = !DILocation(line: 74, column: 3, scope: !7695)
!7697 = !DILocation(line: 75, column: 8, scope: !7698)
!7698 = distinct !DILexicalBlock(scope: !7690, file: !929, line: 74, column: 10)
!7699 = !DILocation(line: 77, column: 2, scope: !7688)
!7700 = !DILocation(line: 79, column: 7, scope: !7701)
!7701 = distinct !DILexicalBlock(scope: !7679, file: !929, line: 77, column: 9)
!7702 = !DILocation(line: 84, column: 18, scope: !7627)
!7703 = !DILocation(line: 84, column: 9, scope: !7627)
!7704 = !DILocation(line: 84, column: 27, scope: !7627)
!7705 = !DILocation(line: 84, column: 35, scope: !7627)
!7706 = !DILocation(line: 84, column: 45, scope: !7627)
!7707 = !DILocation(line: 84, column: 26, scope: !7627)
!7708 = !DILocation(line: 84, column: 2, scope: !7627)
!7709 = !DILocation(line: 86, column: 27, scope: !7627)
!7710 = !DILocation(line: 86, column: 10, scope: !7627)
!7711 = !DILocation(line: 86, column: 25, scope: !7627)
!7712 = !DILocation(line: 87, column: 2, scope: !7627)
!7713 = !DILocation(line: 98, column: 21, scope: !7627)
!7714 = !DILocation(line: 98, column: 27, scope: !7627)
!7715 = !DILocation(line: 98, column: 2, scope: !7627)
!7716 = !DILocation(line: 99, column: 24, scope: !7627)
!7717 = !DILocation(line: 99, column: 30, scope: !7627)
!7718 = !DILocation(line: 99, column: 2, scope: !7627)
!7719 = !DILocation(line: 101, column: 7, scope: !7720)
!7720 = distinct !DILexicalBlock(scope: !7627, file: !929, line: 101, column: 6)
!7721 = !DILocation(line: 101, column: 13, scope: !7720)
!7722 = !DILocation(line: 101, column: 28, scope: !7720)
!7723 = !DILocation(line: 101, column: 6, scope: !7627)
!7724 = !DILocation(line: 103, column: 8, scope: !7725)
!7725 = distinct !DILexicalBlock(scope: !7726, file: !929, line: 103, column: 7)
!7726 = distinct !DILexicalBlock(scope: !7720, file: !929, line: 101, column: 35)
!7727 = !DILocation(line: 103, column: 14, scope: !7725)
!7728 = !DILocation(line: 103, column: 38, scope: !7725)
!7729 = !DILocation(line: 103, column: 7, scope: !7726)
!7730 = !DILocation(line: 104, column: 24, scope: !7731)
!7731 = distinct !DILexicalBlock(scope: !7725, file: !929, line: 103, column: 45)
!7732 = !DILocation(line: 104, column: 30, scope: !7731)
!7733 = !DILocation(line: 104, column: 4, scope: !7731)
!7734 = !DILocation(line: 105, column: 3, scope: !7731)
!7735 = !DILocation(line: 105, column: 15, scope: !7736)
!7736 = distinct !DILexicalBlock(scope: !7725, file: !929, line: 105, column: 14)
!7737 = !DILocation(line: 105, column: 21, scope: !7736)
!7738 = !DILocation(line: 105, column: 46, scope: !7736)
!7739 = !DILocation(line: 105, column: 14, scope: !7725)
!7740 = !DILocation(line: 106, column: 24, scope: !7741)
!7741 = distinct !DILexicalBlock(scope: !7736, file: !929, line: 105, column: 53)
!7742 = !DILocation(line: 106, column: 30, scope: !7741)
!7743 = !DILocation(line: 106, column: 4, scope: !7741)
!7744 = !DILocation(line: 107, column: 3, scope: !7741)
!7745 = !DILocation(line: 110, column: 3, scope: !7726)
!7746 = !DILocation(line: 111, column: 2, scope: !7726)
!7747 = !DILocation(line: 113, column: 3, scope: !7748)
!7748 = distinct !DILexicalBlock(scope: !7720, file: !929, line: 111, column: 9)
!7749 = !DILocation(line: 116, column: 2, scope: !7627)
!7750 = !DILocation(line: 117, column: 1, scope: !7627)
!7751 = distinct !DISubprogram(name: "imx_gpio_port_get_raw", scope: !929, file: !929, line: 119, type: !7752, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !824, retainedNodes: !223)
!7752 = !DISubroutineType(types: !7753)
!7753 = !{!103, !852, !1251}
!7754 = !DILocalVariable(name: "port", arg: 1, scope: !7751, file: !929, line: 119, type: !852)
!7755 = !DILocation(line: 119, column: 55, scope: !7751)
!7756 = !DILocalVariable(name: "value", arg: 2, scope: !7751, file: !929, line: 119, type: !1251)
!7757 = !DILocation(line: 119, column: 71, scope: !7751)
!7758 = !DILocalVariable(name: "config", scope: !7751, file: !929, line: 121, type: !7635)
!7759 = !DILocation(line: 121, column: 32, scope: !7751)
!7760 = !DILocation(line: 121, column: 41, scope: !7751)
!7761 = !DILocation(line: 121, column: 47, scope: !7751)
!7762 = !DILocalVariable(name: "base", scope: !7751, file: !929, line: 122, type: !966)
!7763 = !DILocation(line: 122, column: 13, scope: !7751)
!7764 = !DILocation(line: 122, column: 20, scope: !7751)
!7765 = !DILocation(line: 122, column: 28, scope: !7751)
!7766 = !DILocation(line: 124, column: 30, scope: !7751)
!7767 = !DILocation(line: 124, column: 11, scope: !7751)
!7768 = !DILocation(line: 124, column: 3, scope: !7751)
!7769 = !DILocation(line: 124, column: 9, scope: !7751)
!7770 = !DILocation(line: 126, column: 2, scope: !7751)
!7771 = distinct !DISubprogram(name: "imx_gpio_port_set_masked_raw", scope: !929, file: !929, line: 129, type: !877, scopeLine: 132, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !824, retainedNodes: !223)
!7772 = !DILocalVariable(name: "port", arg: 1, scope: !7771, file: !929, line: 129, type: !852)
!7773 = !DILocation(line: 129, column: 62, scope: !7771)
!7774 = !DILocalVariable(name: "mask", arg: 2, scope: !7771, file: !929, line: 130, type: !879)
!7775 = !DILocation(line: 130, column: 23, scope: !7771)
!7776 = !DILocalVariable(name: "value", arg: 3, scope: !7771, file: !929, line: 131, type: !874)
!7777 = !DILocation(line: 131, column: 24, scope: !7771)
!7778 = !DILocalVariable(name: "config", scope: !7771, file: !929, line: 133, type: !7635)
!7779 = !DILocation(line: 133, column: 32, scope: !7771)
!7780 = !DILocation(line: 133, column: 41, scope: !7771)
!7781 = !DILocation(line: 133, column: 47, scope: !7771)
!7782 = !DILocalVariable(name: "base", scope: !7771, file: !929, line: 134, type: !966)
!7783 = !DILocation(line: 134, column: 13, scope: !7771)
!7784 = !DILocation(line: 134, column: 20, scope: !7771)
!7785 = !DILocation(line: 134, column: 28, scope: !7771)
!7786 = !DILocation(line: 136, column: 23, scope: !7771)
!7787 = !DILocation(line: 137, column: 24, scope: !7771)
!7788 = !DILocation(line: 137, column: 5, scope: !7771)
!7789 = !DILocation(line: 137, column: 33, scope: !7771)
!7790 = !DILocation(line: 137, column: 32, scope: !7771)
!7791 = !DILocation(line: 137, column: 30, scope: !7771)
!7792 = !DILocation(line: 137, column: 42, scope: !7771)
!7793 = !DILocation(line: 137, column: 50, scope: !7771)
!7794 = !DILocation(line: 137, column: 48, scope: !7771)
!7795 = !DILocation(line: 137, column: 39, scope: !7771)
!7796 = !DILocation(line: 136, column: 2, scope: !7771)
!7797 = !DILocation(line: 139, column: 2, scope: !7771)
!7798 = distinct !DISubprogram(name: "imx_gpio_port_set_bits_raw", scope: !929, file: !929, line: 142, type: !882, scopeLine: 144, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !824, retainedNodes: !223)
!7799 = !DILocalVariable(name: "port", arg: 1, scope: !7798, file: !929, line: 142, type: !852)
!7800 = !DILocation(line: 142, column: 60, scope: !7798)
!7801 = !DILocalVariable(name: "pins", arg: 2, scope: !7798, file: !929, line: 143, type: !879)
!7802 = !DILocation(line: 143, column: 28, scope: !7798)
!7803 = !DILocalVariable(name: "config", scope: !7798, file: !929, line: 145, type: !7635)
!7804 = !DILocation(line: 145, column: 32, scope: !7798)
!7805 = !DILocation(line: 145, column: 41, scope: !7798)
!7806 = !DILocation(line: 145, column: 47, scope: !7798)
!7807 = !DILocalVariable(name: "base", scope: !7798, file: !929, line: 146, type: !966)
!7808 = !DILocation(line: 146, column: 13, scope: !7798)
!7809 = !DILocation(line: 146, column: 20, scope: !7798)
!7810 = !DILocation(line: 146, column: 28, scope: !7798)
!7811 = !DILocation(line: 148, column: 23, scope: !7798)
!7812 = !DILocation(line: 148, column: 48, scope: !7798)
!7813 = !DILocation(line: 148, column: 29, scope: !7798)
!7814 = !DILocation(line: 148, column: 56, scope: !7798)
!7815 = !DILocation(line: 148, column: 54, scope: !7798)
!7816 = !DILocation(line: 148, column: 2, scope: !7798)
!7817 = !DILocation(line: 150, column: 2, scope: !7798)
!7818 = distinct !DISubprogram(name: "imx_gpio_port_clear_bits_raw", scope: !929, file: !929, line: 153, type: !882, scopeLine: 155, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !824, retainedNodes: !223)
!7819 = !DILocalVariable(name: "port", arg: 1, scope: !7818, file: !929, line: 153, type: !852)
!7820 = !DILocation(line: 153, column: 62, scope: !7818)
!7821 = !DILocalVariable(name: "pins", arg: 2, scope: !7818, file: !929, line: 154, type: !879)
!7822 = !DILocation(line: 154, column: 23, scope: !7818)
!7823 = !DILocalVariable(name: "config", scope: !7818, file: !929, line: 156, type: !7635)
!7824 = !DILocation(line: 156, column: 32, scope: !7818)
!7825 = !DILocation(line: 156, column: 41, scope: !7818)
!7826 = !DILocation(line: 156, column: 47, scope: !7818)
!7827 = !DILocalVariable(name: "base", scope: !7818, file: !929, line: 157, type: !966)
!7828 = !DILocation(line: 157, column: 13, scope: !7818)
!7829 = !DILocation(line: 157, column: 20, scope: !7818)
!7830 = !DILocation(line: 157, column: 28, scope: !7818)
!7831 = !DILocation(line: 159, column: 23, scope: !7818)
!7832 = !DILocation(line: 159, column: 48, scope: !7818)
!7833 = !DILocation(line: 159, column: 29, scope: !7818)
!7834 = !DILocation(line: 159, column: 57, scope: !7818)
!7835 = !DILocation(line: 159, column: 56, scope: !7818)
!7836 = !DILocation(line: 159, column: 54, scope: !7818)
!7837 = !DILocation(line: 159, column: 2, scope: !7818)
!7838 = !DILocation(line: 161, column: 2, scope: !7818)
!7839 = distinct !DISubprogram(name: "imx_gpio_port_toggle_bits", scope: !929, file: !929, line: 164, type: !882, scopeLine: 166, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !824, retainedNodes: !223)
!7840 = !DILocalVariable(name: "port", arg: 1, scope: !7839, file: !929, line: 164, type: !852)
!7841 = !DILocation(line: 164, column: 59, scope: !7839)
!7842 = !DILocalVariable(name: "pins", arg: 2, scope: !7839, file: !929, line: 165, type: !879)
!7843 = !DILocation(line: 165, column: 27, scope: !7839)
!7844 = !DILocalVariable(name: "config", scope: !7839, file: !929, line: 167, type: !7635)
!7845 = !DILocation(line: 167, column: 32, scope: !7839)
!7846 = !DILocation(line: 167, column: 41, scope: !7839)
!7847 = !DILocation(line: 167, column: 47, scope: !7839)
!7848 = !DILocalVariable(name: "base", scope: !7839, file: !929, line: 168, type: !966)
!7849 = !DILocation(line: 168, column: 13, scope: !7839)
!7850 = !DILocation(line: 168, column: 20, scope: !7839)
!7851 = !DILocation(line: 168, column: 28, scope: !7839)
!7852 = !DILocation(line: 170, column: 23, scope: !7839)
!7853 = !DILocation(line: 170, column: 48, scope: !7839)
!7854 = !DILocation(line: 170, column: 29, scope: !7839)
!7855 = !DILocation(line: 170, column: 56, scope: !7839)
!7856 = !DILocation(line: 170, column: 54, scope: !7839)
!7857 = !DILocation(line: 170, column: 2, scope: !7839)
!7858 = !DILocation(line: 172, column: 2, scope: !7839)
!7859 = distinct !DISubprogram(name: "imx_gpio_pin_interrupt_configure", scope: !929, file: !929, line: 175, type: !888, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !824, retainedNodes: !223)
!7860 = !DILocalVariable(name: "port", arg: 1, scope: !7859, file: !929, line: 175, type: !852)
!7861 = !DILocation(line: 175, column: 66, scope: !7859)
!7862 = !DILocalVariable(name: "pin", arg: 2, scope: !7859, file: !929, line: 176, type: !867)
!7863 = !DILocation(line: 176, column: 21, scope: !7859)
!7864 = !DILocalVariable(name: "mode", arg: 3, scope: !7859, file: !929, line: 177, type: !827)
!7865 = !DILocation(line: 177, column: 29, scope: !7859)
!7866 = !DILocalVariable(name: "trig", arg: 4, scope: !7859, file: !929, line: 178, type: !833)
!7867 = !DILocation(line: 178, column: 29, scope: !7859)
!7868 = !DILocalVariable(name: "config", scope: !7859, file: !929, line: 180, type: !7635)
!7869 = !DILocation(line: 180, column: 32, scope: !7859)
!7870 = !DILocation(line: 180, column: 41, scope: !7859)
!7871 = !DILocation(line: 180, column: 47, scope: !7859)
!7872 = !DILocalVariable(name: "base", scope: !7859, file: !929, line: 181, type: !966)
!7873 = !DILocation(line: 181, column: 13, scope: !7859)
!7874 = !DILocation(line: 181, column: 20, scope: !7859)
!7875 = !DILocation(line: 181, column: 28, scope: !7859)
!7876 = !DILocalVariable(name: "icr_reg", scope: !7859, file: !929, line: 182, type: !690)
!7877 = !DILocation(line: 182, column: 21, scope: !7859)
!7878 = !DILocalVariable(name: "key", scope: !7859, file: !929, line: 183, type: !32)
!7879 = !DILocation(line: 183, column: 15, scope: !7859)
!7880 = !DILocalVariable(name: "icr_val", scope: !7859, file: !929, line: 184, type: !173)
!7881 = !DILocation(line: 184, column: 11, scope: !7859)
!7882 = !DILocalVariable(name: "shift", scope: !7859, file: !929, line: 185, type: !156)
!7883 = !DILocation(line: 185, column: 10, scope: !7859)
!7884 = !DILocation(line: 187, column: 8, scope: !7885)
!7885 = distinct !DILexicalBlock(scope: !7859, file: !929, line: 187, column: 6)
!7886 = !DILocation(line: 187, column: 14, scope: !7885)
!7887 = !DILocation(line: 187, column: 21, scope: !7885)
!7888 = !DILocation(line: 187, column: 19, scope: !7885)
!7889 = !DILocation(line: 187, column: 31, scope: !7885)
!7890 = !DILocation(line: 188, column: 6, scope: !7885)
!7891 = !DILocation(line: 188, column: 10, scope: !7885)
!7892 = !DILocation(line: 188, column: 15, scope: !7885)
!7893 = !DILocation(line: 187, column: 6, scope: !7859)
!7894 = !DILocation(line: 190, column: 3, scope: !7895)
!7895 = distinct !DILexicalBlock(scope: !7885, file: !929, line: 188, column: 43)
!7896 = !DILocation(line: 193, column: 7, scope: !7897)
!7897 = distinct !DILexicalBlock(scope: !7859, file: !929, line: 193, column: 6)
!7898 = !DILocation(line: 193, column: 12, scope: !7897)
!7899 = !DILocation(line: 193, column: 35, scope: !7897)
!7900 = !DILocation(line: 193, column: 39, scope: !7897)
!7901 = !DILocation(line: 193, column: 44, scope: !7897)
!7902 = !DILocation(line: 193, column: 6, scope: !7859)
!7903 = !DILocation(line: 194, column: 11, scope: !7904)
!7904 = distinct !DILexicalBlock(scope: !7897, file: !929, line: 193, column: 67)
!7905 = !DILocation(line: 195, column: 2, scope: !7904)
!7906 = !DILocation(line: 195, column: 14, scope: !7907)
!7907 = distinct !DILexicalBlock(scope: !7897, file: !929, line: 195, column: 13)
!7908 = !DILocation(line: 195, column: 19, scope: !7907)
!7909 = !DILocation(line: 195, column: 42, scope: !7907)
!7910 = !DILocation(line: 196, column: 7, scope: !7907)
!7911 = !DILocation(line: 196, column: 12, scope: !7907)
!7912 = !DILocation(line: 195, column: 13, scope: !7897)
!7913 = !DILocation(line: 197, column: 11, scope: !7914)
!7914 = distinct !DILexicalBlock(scope: !7907, file: !929, line: 196, column: 36)
!7915 = !DILocation(line: 198, column: 2, scope: !7914)
!7916 = !DILocation(line: 198, column: 14, scope: !7917)
!7917 = distinct !DILexicalBlock(scope: !7907, file: !929, line: 198, column: 13)
!7918 = !DILocation(line: 198, column: 19, scope: !7917)
!7919 = !DILocation(line: 198, column: 43, scope: !7917)
!7920 = !DILocation(line: 199, column: 7, scope: !7917)
!7921 = !DILocation(line: 199, column: 12, scope: !7917)
!7922 = !DILocation(line: 198, column: 13, scope: !7907)
!7923 = !DILocation(line: 200, column: 11, scope: !7924)
!7924 = distinct !DILexicalBlock(scope: !7917, file: !929, line: 199, column: 36)
!7925 = !DILocation(line: 201, column: 2, scope: !7924)
!7926 = !DILocation(line: 202, column: 11, scope: !7927)
!7927 = distinct !DILexicalBlock(scope: !7917, file: !929, line: 201, column: 9)
!7928 = !DILocation(line: 205, column: 6, scope: !7929)
!7929 = distinct !DILexicalBlock(scope: !7859, file: !929, line: 205, column: 6)
!7930 = !DILocation(line: 205, column: 10, scope: !7929)
!7931 = !DILocation(line: 205, column: 6, scope: !7859)
!7932 = !DILocation(line: 206, column: 16, scope: !7933)
!7933 = distinct !DILexicalBlock(scope: !7929, file: !929, line: 205, column: 17)
!7934 = !DILocation(line: 206, column: 14, scope: !7933)
!7935 = !DILocation(line: 206, column: 11, scope: !7933)
!7936 = !DILocation(line: 206, column: 9, scope: !7933)
!7937 = !DILocation(line: 207, column: 15, scope: !7933)
!7938 = !DILocation(line: 207, column: 21, scope: !7933)
!7939 = !DILocation(line: 207, column: 11, scope: !7933)
!7940 = !DILocation(line: 208, column: 2, scope: !7933)
!7941 = !DILocation(line: 208, column: 13, scope: !7942)
!7942 = distinct !DILexicalBlock(scope: !7929, file: !929, line: 208, column: 13)
!7943 = !DILocation(line: 208, column: 17, scope: !7942)
!7944 = !DILocation(line: 208, column: 13, scope: !7929)
!7945 = !DILocation(line: 209, column: 17, scope: !7946)
!7946 = distinct !DILexicalBlock(scope: !7942, file: !929, line: 208, column: 24)
!7947 = !DILocation(line: 209, column: 21, scope: !7946)
!7948 = !DILocation(line: 209, column: 14, scope: !7946)
!7949 = !DILocation(line: 209, column: 11, scope: !7946)
!7950 = !DILocation(line: 209, column: 9, scope: !7946)
!7951 = !DILocation(line: 210, column: 15, scope: !7946)
!7952 = !DILocation(line: 210, column: 21, scope: !7946)
!7953 = !DILocation(line: 210, column: 11, scope: !7946)
!7954 = !DILocation(line: 211, column: 2, scope: !7946)
!7955 = !DILocation(line: 212, column: 3, scope: !7956)
!7956 = distinct !DILexicalBlock(scope: !7942, file: !929, line: 211, column: 9)
!7957 = !DILocalVariable(name: "key", scope: !7958, file: !5551, line: 44, type: !32)
!7958 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5551, file: !5551, line: 42, type: !7959, scopeLine: 43, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !824, retainedNodes: !223)
!7959 = !DISubroutineType(types: !7960)
!7960 = !{!32}
!7961 = !DILocation(line: 44, column: 15, scope: !7958, inlinedAt: !7962)
!7962 = distinct !DILocation(line: 215, column: 8, scope: !7859)
!7963 = !DILocalVariable(name: "tmp", scope: !7958, file: !5551, line: 53, type: !32)
!7964 = !DILocation(line: 53, column: 15, scope: !7958, inlinedAt: !7962)
!7965 = !DILocation(line: 55, column: 2, scope: !7958, inlinedAt: !7962)
!7966 = !{i64 3014885}
!7967 = !DILocation(line: 76, column: 9, scope: !7958, inlinedAt: !7962)
!7968 = !DILocation(line: 215, column: 6, scope: !7859)
!7969 = !DILocation(line: 217, column: 15, scope: !7859)
!7970 = !DILocation(line: 217, column: 14, scope: !7859)
!7971 = !DILocation(line: 217, column: 33, scope: !7859)
!7972 = !DILocation(line: 217, column: 30, scope: !7859)
!7973 = !DILocation(line: 217, column: 25, scope: !7859)
!7974 = !DILocation(line: 217, column: 23, scope: !7859)
!7975 = !DILocation(line: 217, column: 44, scope: !7859)
!7976 = !DILocation(line: 217, column: 55, scope: !7859)
!7977 = !DILocation(line: 217, column: 52, scope: !7859)
!7978 = !DILocation(line: 217, column: 41, scope: !7859)
!7979 = !DILocation(line: 217, column: 3, scope: !7859)
!7980 = !DILocation(line: 217, column: 11, scope: !7859)
!7981 = !DILocation(line: 219, column: 2, scope: !7859)
!7982 = !DILocation(line: 220, column: 2, scope: !7859)
!7983 = !DILocation(line: 221, column: 2, scope: !7859)
!7984 = !DILocation(line: 223, column: 2, scope: !7859)
!7985 = !DILocalVariable(name: "key", arg: 1, scope: !7986, file: !5551, line: 84, type: !32)
!7986 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5551, file: !5551, line: 84, type: !5361, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !824, retainedNodes: !223)
!7987 = !DILocation(line: 84, column: 56, scope: !7986, inlinedAt: !7988)
!7988 = distinct !DILocation(line: 223, column: 2, scope: !7859)
!7989 = !DILocation(line: 98, column: 12, scope: !7986, inlinedAt: !7988)
!7990 = !DILocation(line: 95, column: 2, scope: !7986, inlinedAt: !7988)
!7991 = !{i64 3015702}
!7992 = !DILocation(line: 225, column: 2, scope: !7859)
!7993 = !DILocation(line: 226, column: 1, scope: !7859)
!7994 = distinct !DISubprogram(name: "imx_gpio_manage_callback", scope: !929, file: !929, line: 228, type: !892, scopeLine: 230, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !824, retainedNodes: !223)
!7995 = !DILocalVariable(name: "port", arg: 1, scope: !7994, file: !929, line: 228, type: !852)
!7996 = !DILocation(line: 228, column: 58, scope: !7994)
!7997 = !DILocalVariable(name: "cb", arg: 2, scope: !7994, file: !929, line: 229, type: !894)
!7998 = !DILocation(line: 229, column: 31, scope: !7994)
!7999 = !DILocalVariable(name: "set", arg: 3, scope: !7994, file: !929, line: 229, type: !743)
!8000 = !DILocation(line: 229, column: 40, scope: !7994)
!8001 = !DILocalVariable(name: "data", scope: !7994, file: !929, line: 231, type: !8002)
!8002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !947, size: 32)
!8003 = !DILocation(line: 231, column: 24, scope: !7994)
!8004 = !DILocation(line: 231, column: 31, scope: !7994)
!8005 = !DILocation(line: 231, column: 37, scope: !7994)
!8006 = !DILocation(line: 233, column: 31, scope: !7994)
!8007 = !DILocation(line: 233, column: 37, scope: !7994)
!8008 = !DILocation(line: 233, column: 48, scope: !7994)
!8009 = !DILocation(line: 233, column: 52, scope: !7994)
!8010 = !DILocation(line: 233, column: 9, scope: !7994)
!8011 = !DILocation(line: 233, column: 2, scope: !7994)
!8012 = distinct !DISubprogram(name: "gpio_manage_callback", scope: !8013, file: !8013, line: 38, type: !8014, scopeLine: 41, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !824, retainedNodes: !223)
!8013 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio/gpio_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8014 = !DISubroutineType(types: !8015)
!8015 = !{!103, !8016, !894, !743}
!8016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !951, size: 32)
!8017 = !DILocalVariable(name: "callbacks", arg: 1, scope: !8012, file: !8013, line: 38, type: !8016)
!8018 = !DILocation(line: 38, column: 53, scope: !8012)
!8019 = !DILocalVariable(name: "callback", arg: 2, scope: !8012, file: !8013, line: 39, type: !894)
!8020 = !DILocation(line: 39, column: 28, scope: !8012)
!8021 = !DILocalVariable(name: "set", arg: 3, scope: !8012, file: !8013, line: 40, type: !743)
!8022 = !DILocation(line: 40, column: 11, scope: !8012)
!8023 = !DILocation(line: 45, column: 26, scope: !8024)
!8024 = distinct !DILexicalBlock(scope: !8012, file: !8013, line: 45, column: 6)
!8025 = !DILocation(line: 45, column: 7, scope: !8024)
!8026 = !DILocation(line: 45, column: 6, scope: !8012)
!8027 = !DILocation(line: 46, column: 34, scope: !8028)
!8028 = distinct !DILexicalBlock(scope: !8029, file: !8013, line: 46, column: 7)
!8029 = distinct !DILexicalBlock(scope: !8024, file: !8013, line: 45, column: 38)
!8030 = !DILocation(line: 46, column: 46, scope: !8028)
!8031 = !DILocation(line: 46, column: 56, scope: !8028)
!8032 = !DILocation(line: 46, column: 8, scope: !8028)
!8033 = !DILocation(line: 46, column: 7, scope: !8029)
!8034 = !DILocation(line: 47, column: 9, scope: !8035)
!8035 = distinct !DILexicalBlock(scope: !8036, file: !8013, line: 47, column: 8)
!8036 = distinct !DILexicalBlock(scope: !8028, file: !8013, line: 46, column: 63)
!8037 = !DILocation(line: 47, column: 8, scope: !8036)
!8038 = !DILocation(line: 48, column: 5, scope: !8039)
!8039 = distinct !DILexicalBlock(scope: !8035, file: !8013, line: 47, column: 14)
!8040 = !DILocation(line: 50, column: 3, scope: !8036)
!8041 = !DILocation(line: 51, column: 2, scope: !8029)
!8042 = !DILocation(line: 51, column: 14, scope: !8043)
!8043 = distinct !DILexicalBlock(scope: !8024, file: !8013, line: 51, column: 13)
!8044 = !DILocation(line: 51, column: 13, scope: !8024)
!8045 = !DILocation(line: 52, column: 3, scope: !8046)
!8046 = distinct !DILexicalBlock(scope: !8043, file: !8013, line: 51, column: 19)
!8047 = !DILocation(line: 55, column: 6, scope: !8048)
!8048 = distinct !DILexicalBlock(scope: !8012, file: !8013, line: 55, column: 6)
!8049 = !DILocation(line: 55, column: 6, scope: !8012)
!8050 = !DILocation(line: 56, column: 21, scope: !8051)
!8051 = distinct !DILexicalBlock(scope: !8048, file: !8013, line: 55, column: 11)
!8052 = !DILocation(line: 56, column: 33, scope: !8051)
!8053 = !DILocation(line: 56, column: 43, scope: !8051)
!8054 = !DILocation(line: 56, column: 3, scope: !8051)
!8055 = !DILocation(line: 57, column: 2, scope: !8051)
!8056 = !DILocation(line: 59, column: 2, scope: !8012)
!8057 = !DILocation(line: 60, column: 1, scope: !8012)
!8058 = distinct !DISubprogram(name: "sys_slist_is_empty", scope: !899, file: !899, line: 261, type: !8059, scopeLine: 261, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !824, retainedNodes: !223)
!8059 = !DISubroutineType(types: !8060)
!8060 = !{!743, !8016}
!8061 = !DILocalVariable(name: "list", arg: 1, scope: !8058, file: !899, line: 261, type: !8016)
!8062 = !DILocation(line: 261, column: 1, scope: !8058)
!8063 = distinct !DISubprogram(name: "sys_slist_find_and_remove", scope: !899, file: !899, line: 417, type: !8064, scopeLine: 417, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !824, retainedNodes: !223)
!8064 = !DISubroutineType(types: !8065)
!8065 = !{!743, !8016, !955}
!8066 = !DILocalVariable(name: "list", arg: 1, scope: !8063, file: !899, line: 417, type: !8016)
!8067 = !DILocation(line: 417, column: 1, scope: !8063)
!8068 = !DILocalVariable(name: "node", arg: 2, scope: !8063, file: !899, line: 417, type: !955)
!8069 = !DILocalVariable(name: "prev", scope: !8063, file: !899, line: 417, type: !955)
!8070 = !DILocalVariable(name: "test", scope: !8063, file: !899, line: 417, type: !955)
!8071 = !DILocation(line: 417, column: 1, scope: !8072)
!8072 = distinct !DILexicalBlock(scope: !8063, file: !899, line: 417, column: 1)
!8073 = !DILocation(line: 417, column: 1, scope: !8074)
!8074 = distinct !DILexicalBlock(scope: !8072, file: !899, line: 417, column: 1)
!8075 = !DILocation(line: 417, column: 1, scope: !8076)
!8076 = distinct !DILexicalBlock(scope: !8077, file: !899, line: 417, column: 1)
!8077 = distinct !DILexicalBlock(scope: !8074, file: !899, line: 417, column: 1)
!8078 = !DILocation(line: 417, column: 1, scope: !8077)
!8079 = !DILocation(line: 417, column: 1, scope: !8080)
!8080 = distinct !DILexicalBlock(scope: !8076, file: !899, line: 417, column: 1)
!8081 = distinct !{!8081, !8071, !8071}
!8082 = distinct !DISubprogram(name: "sys_slist_prepend", scope: !899, file: !899, line: 298, type: !8083, scopeLine: 298, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !824, retainedNodes: !223)
!8083 = !DISubroutineType(types: !8084)
!8084 = !{null, !8016, !955}
!8085 = !DILocalVariable(name: "list", arg: 1, scope: !8082, file: !899, line: 298, type: !8016)
!8086 = !DILocation(line: 298, column: 1, scope: !8082)
!8087 = !DILocalVariable(name: "node", arg: 2, scope: !8082, file: !899, line: 298, type: !955)
!8088 = !DILocation(line: 298, column: 1, scope: !8089)
!8089 = distinct !DILexicalBlock(scope: !8082, file: !899, line: 298, column: 1)
!8090 = !DILocation(line: 298, column: 1, scope: !8091)
!8091 = distinct !DILexicalBlock(scope: !8089, file: !899, line: 298, column: 1)
!8092 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !899, file: !899, line: 231, type: !8093, scopeLine: 232, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !824, retainedNodes: !223)
!8093 = !DISubroutineType(types: !8094)
!8094 = !{!955, !8016}
!8095 = !DILocalVariable(name: "list", arg: 1, scope: !8092, file: !899, line: 231, type: !8016)
!8096 = !DILocation(line: 231, column: 61, scope: !8092)
!8097 = !DILocation(line: 233, column: 9, scope: !8092)
!8098 = !DILocation(line: 233, column: 15, scope: !8092)
!8099 = !DILocation(line: 233, column: 2, scope: !8092)
!8100 = distinct !DISubprogram(name: "z_snode_next_set", scope: !899, file: !899, line: 209, type: !8101, scopeLine: 210, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !824, retainedNodes: !223)
!8101 = !DISubroutineType(types: !8102)
!8102 = !{null, !955, !955}
!8103 = !DILocalVariable(name: "parent", arg: 1, scope: !8100, file: !899, line: 209, type: !955)
!8104 = !DILocation(line: 209, column: 50, scope: !8100)
!8105 = !DILocalVariable(name: "child", arg: 2, scope: !8100, file: !899, line: 209, type: !955)
!8106 = !DILocation(line: 209, column: 71, scope: !8100)
!8107 = !DILocation(line: 211, column: 17, scope: !8100)
!8108 = !DILocation(line: 211, column: 2, scope: !8100)
!8109 = !DILocation(line: 211, column: 10, scope: !8100)
!8110 = !DILocation(line: 211, column: 15, scope: !8100)
!8111 = !DILocation(line: 212, column: 1, scope: !8100)
!8112 = distinct !DISubprogram(name: "z_slist_head_set", scope: !899, file: !899, line: 214, type: !8083, scopeLine: 215, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !824, retainedNodes: !223)
!8113 = !DILocalVariable(name: "list", arg: 1, scope: !8112, file: !899, line: 214, type: !8016)
!8114 = !DILocation(line: 214, column: 50, scope: !8112)
!8115 = !DILocalVariable(name: "node", arg: 2, scope: !8112, file: !899, line: 214, type: !955)
!8116 = !DILocation(line: 214, column: 69, scope: !8112)
!8117 = !DILocation(line: 216, column: 15, scope: !8112)
!8118 = !DILocation(line: 216, column: 2, scope: !8112)
!8119 = !DILocation(line: 216, column: 8, scope: !8112)
!8120 = !DILocation(line: 216, column: 13, scope: !8112)
!8121 = !DILocation(line: 217, column: 1, scope: !8112)
!8122 = distinct !DISubprogram(name: "sys_slist_peek_tail", scope: !899, file: !899, line: 243, type: !8093, scopeLine: 244, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !824, retainedNodes: !223)
!8123 = !DILocalVariable(name: "list", arg: 1, scope: !8122, file: !899, line: 243, type: !8016)
!8124 = !DILocation(line: 243, column: 61, scope: !8122)
!8125 = !DILocation(line: 245, column: 9, scope: !8122)
!8126 = !DILocation(line: 245, column: 15, scope: !8122)
!8127 = !DILocation(line: 245, column: 2, scope: !8122)
!8128 = distinct !DISubprogram(name: "z_slist_tail_set", scope: !899, file: !899, line: 219, type: !8083, scopeLine: 220, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !824, retainedNodes: !223)
!8129 = !DILocalVariable(name: "list", arg: 1, scope: !8128, file: !899, line: 219, type: !8016)
!8130 = !DILocation(line: 219, column: 50, scope: !8128)
!8131 = !DILocalVariable(name: "node", arg: 2, scope: !8128, file: !899, line: 219, type: !955)
!8132 = !DILocation(line: 219, column: 69, scope: !8128)
!8133 = !DILocation(line: 221, column: 15, scope: !8128)
!8134 = !DILocation(line: 221, column: 2, scope: !8128)
!8135 = !DILocation(line: 221, column: 8, scope: !8128)
!8136 = !DILocation(line: 221, column: 13, scope: !8128)
!8137 = !DILocation(line: 222, column: 1, scope: !8128)
!8138 = distinct !DISubprogram(name: "sys_slist_remove", scope: !899, file: !899, line: 401, type: !8139, scopeLine: 401, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !824, retainedNodes: !223)
!8139 = !DISubroutineType(types: !8140)
!8140 = !{null, !8016, !955, !955}
!8141 = !DILocalVariable(name: "list", arg: 1, scope: !8138, file: !899, line: 401, type: !8016)
!8142 = !DILocation(line: 401, column: 1, scope: !8138)
!8143 = !DILocalVariable(name: "prev_node", arg: 2, scope: !8138, file: !899, line: 401, type: !955)
!8144 = !DILocalVariable(name: "node", arg: 3, scope: !8138, file: !899, line: 401, type: !955)
!8145 = !DILocation(line: 401, column: 1, scope: !8146)
!8146 = distinct !DILexicalBlock(scope: !8138, file: !899, line: 401, column: 1)
!8147 = !DILocation(line: 401, column: 1, scope: !8148)
!8148 = distinct !DILexicalBlock(scope: !8146, file: !899, line: 401, column: 1)
!8149 = !DILocation(line: 401, column: 1, scope: !8150)
!8150 = distinct !DILexicalBlock(scope: !8148, file: !899, line: 401, column: 1)
!8151 = !DILocation(line: 401, column: 1, scope: !8152)
!8152 = distinct !DILexicalBlock(scope: !8150, file: !899, line: 401, column: 1)
!8153 = !DILocation(line: 401, column: 1, scope: !8154)
!8154 = distinct !DILexicalBlock(scope: !8146, file: !899, line: 401, column: 1)
!8155 = !DILocation(line: 401, column: 1, scope: !8156)
!8156 = distinct !DILexicalBlock(scope: !8154, file: !899, line: 401, column: 1)
!8157 = !DILocation(line: 401, column: 1, scope: !8158)
!8158 = distinct !DILexicalBlock(scope: !8156, file: !899, line: 401, column: 1)
!8159 = distinct !DISubprogram(name: "sys_slist_peek_next", scope: !899, file: !899, line: 285, type: !8160, scopeLine: 285, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !824, retainedNodes: !223)
!8160 = !DISubroutineType(types: !8161)
!8161 = !{!955, !955}
!8162 = !DILocalVariable(name: "node", arg: 1, scope: !8159, file: !899, line: 285, type: !955)
!8163 = !DILocation(line: 285, column: 1, scope: !8159)
!8164 = distinct !DISubprogram(name: "sys_slist_peek_next_no_check", scope: !899, file: !899, line: 274, type: !8160, scopeLine: 274, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !824, retainedNodes: !223)
!8165 = !DILocalVariable(name: "node", arg: 1, scope: !8164, file: !899, line: 274, type: !955)
!8166 = !DILocation(line: 274, column: 1, scope: !8164)
!8167 = distinct !DISubprogram(name: "z_snode_next_peek", scope: !899, file: !899, line: 204, type: !8160, scopeLine: 205, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !824, retainedNodes: !223)
!8168 = !DILocalVariable(name: "node", arg: 1, scope: !8167, file: !899, line: 204, type: !955)
!8169 = !DILocation(line: 204, column: 59, scope: !8167)
!8170 = !DILocation(line: 206, column: 9, scope: !8167)
!8171 = !DILocation(line: 206, column: 15, scope: !8167)
!8172 = !DILocation(line: 206, column: 2, scope: !8167)
!8173 = distinct !DISubprogram(name: "GPIO_ReadPortInput", scope: !839, file: !839, line: 131, type: !8174, scopeLine: 132, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !824, retainedNodes: !223)
!8174 = !DISubroutineType(types: !8175)
!8175 = !{!173, !966}
!8176 = !DILocalVariable(name: "base", arg: 1, scope: !8173, file: !839, line: 131, type: !966)
!8177 = !DILocation(line: 131, column: 54, scope: !8173)
!8178 = !DILocation(line: 133, column: 12, scope: !8173)
!8179 = !DILocation(line: 133, column: 5, scope: !8173)
!8180 = distinct !DISubprogram(name: "GPIO_WritePortOutput", scope: !839, file: !839, line: 178, type: !8181, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !824, retainedNodes: !223)
!8181 = !DISubroutineType(types: !8182)
!8182 = !{null, !966, !173}
!8183 = !DILocalVariable(name: "base", arg: 1, scope: !8180, file: !839, line: 178, type: !966)
!8184 = !DILocation(line: 178, column: 52, scope: !8180)
!8185 = !DILocalVariable(name: "portVal", arg: 2, scope: !8180, file: !839, line: 178, type: !173)
!8186 = !DILocation(line: 178, column: 67, scope: !8180)
!8187 = !DILocation(line: 180, column: 25, scope: !8180)
!8188 = !DILocation(line: 180, column: 5, scope: !8180)
!8189 = !DILocation(line: 180, column: 23, scope: !8180)
!8190 = !DILocation(line: 181, column: 1, scope: !8180)
!8191 = distinct !DISubprogram(name: "imx_gpio_port_isr", scope: !929, file: !929, line: 236, type: !8192, scopeLine: 237, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !824, retainedNodes: !223)
!8192 = !DISubroutineType(types: !8193)
!8193 = !{null, !852}
!8194 = !DILocalVariable(name: "port", arg: 1, scope: !8191, file: !929, line: 236, type: !852)
!8195 = !DILocation(line: 236, column: 52, scope: !8191)
!8196 = !DILocalVariable(name: "config", scope: !8191, file: !929, line: 238, type: !7635)
!8197 = !DILocation(line: 238, column: 32, scope: !8191)
!8198 = !DILocation(line: 238, column: 41, scope: !8191)
!8199 = !DILocation(line: 238, column: 47, scope: !8191)
!8200 = !DILocalVariable(name: "data", scope: !8191, file: !929, line: 239, type: !8002)
!8201 = !DILocation(line: 239, column: 24, scope: !8191)
!8202 = !DILocation(line: 239, column: 31, scope: !8191)
!8203 = !DILocation(line: 239, column: 37, scope: !8191)
!8204 = !DILocalVariable(name: "int_status", scope: !8191, file: !929, line: 240, type: !173)
!8205 = !DILocation(line: 240, column: 11, scope: !8191)
!8206 = !DILocation(line: 242, column: 15, scope: !8191)
!8207 = !DILocation(line: 242, column: 23, scope: !8191)
!8208 = !DILocation(line: 242, column: 29, scope: !8191)
!8209 = !DILocation(line: 242, column: 13, scope: !8191)
!8210 = !DILocation(line: 244, column: 22, scope: !8191)
!8211 = !DILocation(line: 244, column: 2, scope: !8191)
!8212 = !DILocation(line: 244, column: 10, scope: !8191)
!8213 = !DILocation(line: 244, column: 16, scope: !8191)
!8214 = !DILocation(line: 244, column: 20, scope: !8191)
!8215 = !DILocation(line: 246, column: 23, scope: !8191)
!8216 = !DILocation(line: 246, column: 29, scope: !8191)
!8217 = !DILocation(line: 246, column: 40, scope: !8191)
!8218 = !DILocation(line: 246, column: 46, scope: !8191)
!8219 = !DILocation(line: 246, column: 2, scope: !8191)
!8220 = !DILocation(line: 247, column: 1, scope: !8191)
!8221 = distinct !DISubprogram(name: "gpio_fire_callbacks", scope: !8013, file: !8013, line: 69, type: !8222, scopeLine: 72, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !824, retainedNodes: !223)
!8222 = !DISubroutineType(types: !8223)
!8223 = !{null, !8016, !852, !173}
!8224 = !DILocalVariable(name: "list", arg: 1, scope: !8221, file: !8013, line: 69, type: !8016)
!8225 = !DILocation(line: 69, column: 53, scope: !8221)
!8226 = !DILocalVariable(name: "port", arg: 2, scope: !8221, file: !8013, line: 70, type: !852)
!8227 = !DILocation(line: 70, column: 27, scope: !8221)
!8228 = !DILocalVariable(name: "pins", arg: 3, scope: !8221, file: !8013, line: 71, type: !173)
!8229 = !DILocation(line: 71, column: 15, scope: !8221)
!8230 = !DILocalVariable(name: "cb", scope: !8221, file: !8013, line: 73, type: !894)
!8231 = !DILocation(line: 73, column: 24, scope: !8221)
!8232 = !DILocalVariable(name: "tmp", scope: !8221, file: !8013, line: 73, type: !894)
!8233 = !DILocation(line: 73, column: 29, scope: !8221)
!8234 = !DILocation(line: 75, column: 2, scope: !8235)
!8235 = distinct !DILexicalBlock(scope: !8221, file: !8013, line: 75, column: 2)
!8236 = !DILocation(line: 75, column: 2, scope: !8237)
!8237 = distinct !DILexicalBlock(scope: !8235, file: !8013, line: 75, column: 2)
!8238 = !DILocation(line: 76, column: 7, scope: !8239)
!8239 = distinct !DILexicalBlock(scope: !8240, file: !8013, line: 76, column: 7)
!8240 = distinct !DILexicalBlock(scope: !8237, file: !8013, line: 75, column: 57)
!8241 = !DILocation(line: 76, column: 11, scope: !8239)
!8242 = !DILocation(line: 76, column: 22, scope: !8239)
!8243 = !DILocation(line: 76, column: 20, scope: !8239)
!8244 = !DILocation(line: 76, column: 7, scope: !8240)
!8245 = !DILocation(line: 78, column: 4, scope: !8246)
!8246 = distinct !DILexicalBlock(scope: !8239, file: !8013, line: 76, column: 28)
!8247 = !DILocation(line: 78, column: 8, scope: !8246)
!8248 = !DILocation(line: 78, column: 16, scope: !8246)
!8249 = !DILocation(line: 78, column: 22, scope: !8246)
!8250 = !DILocation(line: 78, column: 26, scope: !8246)
!8251 = !DILocation(line: 78, column: 30, scope: !8246)
!8252 = !DILocation(line: 78, column: 41, scope: !8246)
!8253 = !DILocation(line: 78, column: 39, scope: !8246)
!8254 = !DILocation(line: 79, column: 3, scope: !8246)
!8255 = !DILocation(line: 80, column: 2, scope: !8240)
!8256 = distinct !{!8256, !8234, !8257}
!8257 = !DILocation(line: 80, column: 2, scope: !8235)
!8258 = !DILocation(line: 81, column: 1, scope: !8221)
!8259 = !DILocalVariable(name: "port", arg: 1, scope: !994, file: !929, line: 318, type: !852)
!8260 = !DILocation(line: 318, column: 1, scope: !994)
!8261 = !DILocation(line: 318, column: 1, scope: !8262)
!8262 = distinct !DILexicalBlock(scope: !994, file: !929, line: 318, column: 1)
!8263 = !DILocation(line: 318, column: 1, scope: !8264)
!8264 = distinct !DILexicalBlock(scope: !994, file: !929, line: 318, column: 1)
!8265 = distinct !DISubprogram(name: "uart_imx_poll_in", scope: !1216, file: !1216, line: 114, type: !1114, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1019, retainedNodes: !223)
!8266 = !DILocalVariable(name: "dev", arg: 1, scope: !8265, file: !1216, line: 114, type: !1116)
!8267 = !DILocation(line: 114, column: 50, scope: !8265)
!8268 = !DILocalVariable(name: "c", arg: 2, scope: !8265, file: !1216, line: 114, type: !751)
!8269 = !DILocation(line: 114, column: 70, scope: !8265)
!8270 = !DILocalVariable(name: "uart", scope: !8265, file: !1216, line: 116, type: !1187)
!8271 = !DILocation(line: 116, column: 13, scope: !8265)
!8272 = !DILocation(line: 116, column: 20, scope: !8265)
!8273 = !DILocalVariable(name: "ret", scope: !8265, file: !1216, line: 117, type: !103)
!8274 = !DILocation(line: 117, column: 6, scope: !8265)
!8275 = !DILocation(line: 119, column: 25, scope: !8276)
!8276 = distinct !DILexicalBlock(scope: !8265, file: !1216, line: 119, column: 6)
!8277 = !DILocation(line: 119, column: 6, scope: !8276)
!8278 = !DILocation(line: 119, column: 6, scope: !8265)
!8279 = !DILocation(line: 120, column: 21, scope: !8280)
!8280 = distinct !DILexicalBlock(scope: !8276, file: !1216, line: 119, column: 55)
!8281 = !DILocation(line: 120, column: 8, scope: !8280)
!8282 = !DILocation(line: 120, column: 4, scope: !8280)
!8283 = !DILocation(line: 120, column: 6, scope: !8280)
!8284 = !DILocation(line: 122, column: 26, scope: !8285)
!8285 = distinct !DILexicalBlock(scope: !8280, file: !1216, line: 122, column: 7)
!8286 = !DILocation(line: 122, column: 7, scope: !8285)
!8287 = !DILocation(line: 122, column: 7, scope: !8280)
!8288 = !DILocation(line: 123, column: 25, scope: !8289)
!8289 = distinct !DILexicalBlock(scope: !8285, file: !1216, line: 122, column: 54)
!8290 = !DILocation(line: 123, column: 4, scope: !8289)
!8291 = !DILocation(line: 124, column: 3, scope: !8289)
!8292 = !DILocation(line: 125, column: 7, scope: !8280)
!8293 = !DILocation(line: 126, column: 2, scope: !8280)
!8294 = !DILocation(line: 128, column: 9, scope: !8265)
!8295 = !DILocation(line: 128, column: 2, scope: !8265)
!8296 = distinct !DISubprogram(name: "uart_imx_poll_out", scope: !1216, file: !1216, line: 105, type: !1133, scopeLine: 106, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1019, retainedNodes: !223)
!8297 = !DILocalVariable(name: "dev", arg: 1, scope: !8296, file: !1216, line: 105, type: !1116)
!8298 = !DILocation(line: 105, column: 52, scope: !8296)
!8299 = !DILocalVariable(name: "c", arg: 2, scope: !8296, file: !1216, line: 105, type: !157)
!8300 = !DILocation(line: 105, column: 71, scope: !8296)
!8301 = !DILocalVariable(name: "uart", scope: !8296, file: !1216, line: 107, type: !1187)
!8302 = !DILocation(line: 107, column: 13, scope: !8296)
!8303 = !DILocation(line: 107, column: 20, scope: !8296)
!8304 = !DILocation(line: 109, column: 2, scope: !8296)
!8305 = !DILocation(line: 109, column: 29, scope: !8296)
!8306 = !DILocation(line: 109, column: 10, scope: !8296)
!8307 = !DILocation(line: 109, column: 9, scope: !8296)
!8308 = distinct !{!8308, !8304, !8309}
!8309 = !DILocation(line: 110, column: 2, scope: !8296)
!8310 = !DILocation(line: 111, column: 15, scope: !8296)
!8311 = !DILocation(line: 111, column: 21, scope: !8296)
!8312 = !DILocation(line: 111, column: 2, scope: !8296)
!8313 = !DILocation(line: 112, column: 1, scope: !8296)
!8314 = distinct !DISubprogram(name: "uart_imx_fifo_fill", scope: !1216, file: !1216, line: 133, type: !1159, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1019, retainedNodes: !223)
!8315 = !DILocalVariable(name: "dev", arg: 1, scope: !8314, file: !1216, line: 133, type: !1116)
!8316 = !DILocation(line: 133, column: 52, scope: !8314)
!8317 = !DILocalVariable(name: "tx_data", arg: 2, scope: !8314, file: !1216, line: 134, type: !782)
!8318 = !DILocation(line: 134, column: 22, scope: !8314)
!8319 = !DILocalVariable(name: "size", arg: 3, scope: !8314, file: !1216, line: 135, type: !103)
!8320 = !DILocation(line: 135, column: 11, scope: !8314)
!8321 = !DILocalVariable(name: "uart", scope: !8314, file: !1216, line: 137, type: !1187)
!8322 = !DILocation(line: 137, column: 13, scope: !8314)
!8323 = !DILocation(line: 137, column: 20, scope: !8314)
!8324 = !DILocalVariable(name: "num_tx", scope: !8314, file: !1216, line: 138, type: !32)
!8325 = !DILocation(line: 138, column: 15, scope: !8314)
!8326 = !DILocation(line: 140, column: 2, scope: !8314)
!8327 = !DILocation(line: 140, column: 11, scope: !8314)
!8328 = !DILocation(line: 140, column: 18, scope: !8314)
!8329 = !DILocation(line: 140, column: 16, scope: !8314)
!8330 = !DILocation(line: 140, column: 26, scope: !8314)
!8331 = !DILocation(line: 140, column: 31, scope: !8314)
!8332 = !DILocation(line: 141, column: 25, scope: !8314)
!8333 = !DILocation(line: 141, column: 6, scope: !8314)
!8334 = !DILocation(line: 0, scope: !8314)
!8335 = !DILocation(line: 143, column: 16, scope: !8336)
!8336 = distinct !DILexicalBlock(scope: !8314, file: !1216, line: 141, column: 51)
!8337 = !DILocation(line: 143, column: 22, scope: !8336)
!8338 = !DILocation(line: 143, column: 30, scope: !8336)
!8339 = !DILocation(line: 143, column: 3, scope: !8336)
!8340 = !DILocation(line: 144, column: 9, scope: !8336)
!8341 = distinct !{!8341, !8326, !8342}
!8342 = !DILocation(line: 145, column: 2, scope: !8314)
!8343 = !DILocation(line: 147, column: 14, scope: !8314)
!8344 = !DILocation(line: 147, column: 2, scope: !8314)
!8345 = distinct !DISubprogram(name: "uart_imx_fifo_read", scope: !1216, file: !1216, line: 150, type: !1163, scopeLine: 152, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1019, retainedNodes: !223)
!8346 = !DILocalVariable(name: "dev", arg: 1, scope: !8345, file: !1216, line: 150, type: !1116)
!8347 = !DILocation(line: 150, column: 52, scope: !8345)
!8348 = !DILocalVariable(name: "rx_data", arg: 2, scope: !8345, file: !1216, line: 150, type: !788)
!8349 = !DILocation(line: 150, column: 66, scope: !8345)
!8350 = !DILocalVariable(name: "size", arg: 3, scope: !8345, file: !1216, line: 151, type: !789)
!8351 = !DILocation(line: 151, column: 17, scope: !8345)
!8352 = !DILocalVariable(name: "uart", scope: !8345, file: !1216, line: 153, type: !1187)
!8353 = !DILocation(line: 153, column: 13, scope: !8345)
!8354 = !DILocation(line: 153, column: 20, scope: !8345)
!8355 = !DILocalVariable(name: "num_rx", scope: !8345, file: !1216, line: 154, type: !32)
!8356 = !DILocation(line: 154, column: 15, scope: !8345)
!8357 = !DILocation(line: 156, column: 2, scope: !8345)
!8358 = !DILocation(line: 156, column: 11, scope: !8345)
!8359 = !DILocation(line: 156, column: 18, scope: !8345)
!8360 = !DILocation(line: 156, column: 16, scope: !8345)
!8361 = !DILocation(line: 156, column: 26, scope: !8345)
!8362 = !DILocation(line: 156, column: 31, scope: !8345)
!8363 = !DILocation(line: 157, column: 25, scope: !8345)
!8364 = !DILocation(line: 157, column: 6, scope: !8345)
!8365 = !DILocation(line: 0, scope: !8345)
!8366 = !DILocation(line: 159, column: 36, scope: !8367)
!8367 = distinct !DILexicalBlock(scope: !8345, file: !1216, line: 157, column: 51)
!8368 = !DILocation(line: 159, column: 23, scope: !8367)
!8369 = !DILocation(line: 159, column: 3, scope: !8367)
!8370 = !DILocation(line: 159, column: 17, scope: !8367)
!8371 = !DILocation(line: 159, column: 21, scope: !8367)
!8372 = distinct !{!8372, !8357, !8373}
!8373 = !DILocation(line: 160, column: 2, scope: !8345)
!8374 = !DILocation(line: 162, column: 25, scope: !8375)
!8375 = distinct !DILexicalBlock(scope: !8345, file: !1216, line: 162, column: 6)
!8376 = !DILocation(line: 162, column: 6, scope: !8375)
!8377 = !DILocation(line: 162, column: 6, scope: !8345)
!8378 = !DILocation(line: 163, column: 24, scope: !8379)
!8379 = distinct !DILexicalBlock(scope: !8375, file: !1216, line: 162, column: 53)
!8380 = !DILocation(line: 163, column: 3, scope: !8379)
!8381 = !DILocation(line: 164, column: 2, scope: !8379)
!8382 = !DILocation(line: 166, column: 9, scope: !8345)
!8383 = !DILocation(line: 166, column: 2, scope: !8345)
!8384 = distinct !DISubprogram(name: "uart_imx_irq_tx_enable", scope: !1216, file: !1216, line: 169, type: !1167, scopeLine: 170, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1019, retainedNodes: !223)
!8385 = !DILocalVariable(name: "dev", arg: 1, scope: !8384, file: !1216, line: 169, type: !1116)
!8386 = !DILocation(line: 169, column: 57, scope: !8384)
!8387 = !DILocalVariable(name: "uart", scope: !8384, file: !1216, line: 171, type: !1187)
!8388 = !DILocation(line: 171, column: 13, scope: !8384)
!8389 = !DILocation(line: 171, column: 20, scope: !8384)
!8390 = !DILocation(line: 173, column: 17, scope: !8384)
!8391 = !DILocation(line: 173, column: 2, scope: !8384)
!8392 = !DILocation(line: 174, column: 1, scope: !8384)
!8393 = distinct !DISubprogram(name: "uart_imx_irq_tx_disable", scope: !1216, file: !1216, line: 176, type: !1167, scopeLine: 177, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1019, retainedNodes: !223)
!8394 = !DILocalVariable(name: "dev", arg: 1, scope: !8393, file: !1216, line: 176, type: !1116)
!8395 = !DILocation(line: 176, column: 58, scope: !8393)
!8396 = !DILocalVariable(name: "uart", scope: !8393, file: !1216, line: 178, type: !1187)
!8397 = !DILocation(line: 178, column: 13, scope: !8393)
!8398 = !DILocation(line: 178, column: 20, scope: !8393)
!8399 = !DILocation(line: 180, column: 17, scope: !8393)
!8400 = !DILocation(line: 180, column: 2, scope: !8393)
!8401 = !DILocation(line: 181, column: 1, scope: !8393)
!8402 = distinct !DISubprogram(name: "uart_imx_irq_tx_ready", scope: !1216, file: !1216, line: 183, type: !1137, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1019, retainedNodes: !223)
!8403 = !DILocalVariable(name: "dev", arg: 1, scope: !8402, file: !1216, line: 183, type: !1116)
!8404 = !DILocation(line: 183, column: 55, scope: !8402)
!8405 = !DILocalVariable(name: "uart", scope: !8402, file: !1216, line: 185, type: !1187)
!8406 = !DILocation(line: 185, column: 13, scope: !8402)
!8407 = !DILocation(line: 185, column: 20, scope: !8402)
!8408 = !DILocation(line: 187, column: 28, scope: !8402)
!8409 = !DILocation(line: 187, column: 9, scope: !8402)
!8410 = !DILocation(line: 187, column: 2, scope: !8402)
!8411 = distinct !DISubprogram(name: "uart_imx_irq_rx_enable", scope: !1216, file: !1216, line: 190, type: !1167, scopeLine: 191, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1019, retainedNodes: !223)
!8412 = !DILocalVariable(name: "dev", arg: 1, scope: !8411, file: !1216, line: 190, type: !1116)
!8413 = !DILocation(line: 190, column: 57, scope: !8411)
!8414 = !DILocalVariable(name: "uart", scope: !8411, file: !1216, line: 192, type: !1187)
!8415 = !DILocation(line: 192, column: 13, scope: !8411)
!8416 = !DILocation(line: 192, column: 20, scope: !8411)
!8417 = !DILocation(line: 194, column: 17, scope: !8411)
!8418 = !DILocation(line: 194, column: 2, scope: !8411)
!8419 = !DILocation(line: 195, column: 1, scope: !8411)
!8420 = distinct !DISubprogram(name: "uart_imx_irq_rx_disable", scope: !1216, file: !1216, line: 197, type: !1167, scopeLine: 198, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1019, retainedNodes: !223)
!8421 = !DILocalVariable(name: "dev", arg: 1, scope: !8420, file: !1216, line: 197, type: !1116)
!8422 = !DILocation(line: 197, column: 58, scope: !8420)
!8423 = !DILocalVariable(name: "uart", scope: !8420, file: !1216, line: 199, type: !1187)
!8424 = !DILocation(line: 199, column: 13, scope: !8420)
!8425 = !DILocation(line: 199, column: 20, scope: !8420)
!8426 = !DILocation(line: 201, column: 17, scope: !8420)
!8427 = !DILocation(line: 201, column: 2, scope: !8420)
!8428 = !DILocation(line: 202, column: 1, scope: !8420)
!8429 = distinct !DISubprogram(name: "uart_imx_irq_rx_ready", scope: !1216, file: !1216, line: 204, type: !1137, scopeLine: 205, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1019, retainedNodes: !223)
!8430 = !DILocalVariable(name: "dev", arg: 1, scope: !8429, file: !1216, line: 204, type: !1116)
!8431 = !DILocation(line: 204, column: 55, scope: !8429)
!8432 = !DILocalVariable(name: "uart", scope: !8429, file: !1216, line: 206, type: !1187)
!8433 = !DILocation(line: 206, column: 13, scope: !8429)
!8434 = !DILocation(line: 206, column: 20, scope: !8429)
!8435 = !DILocation(line: 208, column: 28, scope: !8429)
!8436 = !DILocation(line: 208, column: 9, scope: !8429)
!8437 = !DILocation(line: 208, column: 2, scope: !8429)
!8438 = distinct !DISubprogram(name: "uart_imx_irq_err_enable", scope: !1216, file: !1216, line: 211, type: !1167, scopeLine: 212, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1019, retainedNodes: !223)
!8439 = !DILocalVariable(name: "dev", arg: 1, scope: !8438, file: !1216, line: 211, type: !1116)
!8440 = !DILocation(line: 211, column: 58, scope: !8438)
!8441 = !DILocalVariable(name: "uart", scope: !8438, file: !1216, line: 213, type: !1187)
!8442 = !DILocation(line: 213, column: 13, scope: !8438)
!8443 = !DILocation(line: 213, column: 20, scope: !8438)
!8444 = !DILocation(line: 215, column: 17, scope: !8438)
!8445 = !DILocation(line: 215, column: 2, scope: !8438)
!8446 = !DILocation(line: 216, column: 17, scope: !8438)
!8447 = !DILocation(line: 216, column: 2, scope: !8438)
!8448 = !DILocation(line: 217, column: 1, scope: !8438)
!8449 = distinct !DISubprogram(name: "uart_imx_irq_err_disable", scope: !1216, file: !1216, line: 219, type: !1167, scopeLine: 220, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1019, retainedNodes: !223)
!8450 = !DILocalVariable(name: "dev", arg: 1, scope: !8449, file: !1216, line: 219, type: !1116)
!8451 = !DILocation(line: 219, column: 59, scope: !8449)
!8452 = !DILocalVariable(name: "uart", scope: !8449, file: !1216, line: 221, type: !1187)
!8453 = !DILocation(line: 221, column: 13, scope: !8449)
!8454 = !DILocation(line: 221, column: 20, scope: !8449)
!8455 = !DILocation(line: 223, column: 17, scope: !8449)
!8456 = !DILocation(line: 223, column: 2, scope: !8449)
!8457 = !DILocation(line: 224, column: 17, scope: !8449)
!8458 = !DILocation(line: 224, column: 2, scope: !8449)
!8459 = !DILocation(line: 225, column: 1, scope: !8449)
!8460 = distinct !DISubprogram(name: "uart_imx_irq_is_pending", scope: !1216, file: !1216, line: 227, type: !1137, scopeLine: 228, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1019, retainedNodes: !223)
!8461 = !DILocalVariable(name: "dev", arg: 1, scope: !8460, file: !1216, line: 227, type: !1116)
!8462 = !DILocation(line: 227, column: 57, scope: !8460)
!8463 = !DILocalVariable(name: "uart", scope: !8460, file: !1216, line: 229, type: !1187)
!8464 = !DILocation(line: 229, column: 13, scope: !8460)
!8465 = !DILocation(line: 229, column: 20, scope: !8460)
!8466 = !DILocation(line: 231, column: 28, scope: !8460)
!8467 = !DILocation(line: 231, column: 9, scope: !8460)
!8468 = !DILocation(line: 231, column: 53, scope: !8460)
!8469 = !DILocation(line: 232, column: 22, scope: !8460)
!8470 = !DILocation(line: 232, column: 3, scope: !8460)
!8471 = !DILocation(line: 231, column: 2, scope: !8460)
!8472 = distinct !DISubprogram(name: "uart_imx_irq_update", scope: !1216, file: !1216, line: 235, type: !1137, scopeLine: 236, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1019, retainedNodes: !223)
!8473 = !DILocalVariable(name: "dev", arg: 1, scope: !8472, file: !1216, line: 235, type: !1116)
!8474 = !DILocation(line: 235, column: 53, scope: !8472)
!8475 = !DILocation(line: 237, column: 2, scope: !8472)
!8476 = distinct !DISubprogram(name: "uart_imx_irq_callback_set", scope: !1216, file: !1216, line: 240, type: !1181, scopeLine: 243, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1019, retainedNodes: !223)
!8477 = !DILocalVariable(name: "dev", arg: 1, scope: !8476, file: !1216, line: 240, type: !1116)
!8478 = !DILocation(line: 240, column: 60, scope: !8476)
!8479 = !DILocalVariable(name: "cb", arg: 2, scope: !8476, file: !1216, line: 241, type: !1183)
!8480 = !DILocation(line: 241, column: 41, scope: !8476)
!8481 = !DILocalVariable(name: "cb_data", arg: 3, scope: !8476, file: !1216, line: 242, type: !102)
!8482 = !DILocation(line: 242, column: 17, scope: !8476)
!8483 = !DILocalVariable(name: "data", scope: !8476, file: !1216, line: 244, type: !8484)
!8484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1269, size: 32)
!8485 = !DILocation(line: 244, column: 24, scope: !8476)
!8486 = !DILocation(line: 244, column: 31, scope: !8476)
!8487 = !DILocation(line: 244, column: 36, scope: !8476)
!8488 = !DILocation(line: 246, column: 19, scope: !8476)
!8489 = !DILocation(line: 246, column: 2, scope: !8476)
!8490 = !DILocation(line: 246, column: 8, scope: !8476)
!8491 = !DILocation(line: 246, column: 17, scope: !8476)
!8492 = !DILocation(line: 247, column: 18, scope: !8476)
!8493 = !DILocation(line: 247, column: 2, scope: !8476)
!8494 = !DILocation(line: 247, column: 8, scope: !8476)
!8495 = !DILocation(line: 247, column: 16, scope: !8476)
!8496 = !DILocation(line: 248, column: 1, scope: !8476)
!8497 = distinct !DISubprogram(name: "UART_GetStatusFlag", scope: !1023, file: !1023, line: 392, type: !8498, scopeLine: 392, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1019, retainedNodes: !223)
!8498 = !DISubroutineType(types: !8499)
!8499 = !{!743, !1187, !173}
!8500 = !DILocalVariable(name: "base", arg: 1, scope: !8497, file: !1023, line: 392, type: !1187)
!8501 = !DILocation(line: 392, column: 50, scope: !8497)
!8502 = !DILocalVariable(name: "flag", arg: 2, scope: !8497, file: !1023, line: 392, type: !173)
!8503 = !DILocation(line: 392, column: 65, scope: !8497)
!8504 = !DILocalVariable(name: "uart_reg", scope: !8497, file: !1023, line: 393, type: !690)
!8505 = !DILocation(line: 393, column: 24, scope: !8497)
!8506 = !DILocation(line: 395, column: 39, scope: !8497)
!8507 = !DILocation(line: 395, column: 29, scope: !8497)
!8508 = !DILocation(line: 395, column: 47, scope: !8497)
!8509 = !DILocation(line: 395, column: 52, scope: !8497)
!8510 = !DILocation(line: 395, column: 44, scope: !8497)
!8511 = !DILocation(line: 395, column: 16, scope: !8497)
!8512 = !DILocation(line: 395, column: 14, scope: !8497)
!8513 = !DILocation(line: 396, column: 21, scope: !8497)
!8514 = !DILocation(line: 396, column: 20, scope: !8497)
!8515 = !DILocation(line: 396, column: 34, scope: !8497)
!8516 = !DILocation(line: 396, column: 39, scope: !8497)
!8517 = !DILocation(line: 396, column: 30, scope: !8497)
!8518 = !DILocation(line: 396, column: 54, scope: !8497)
!8519 = !DILocation(line: 396, column: 12, scope: !8497)
!8520 = !DILocation(line: 396, column: 5, scope: !8497)
!8521 = distinct !DISubprogram(name: "UART_Getchar", scope: !1023, file: !1023, line: 358, type: !8522, scopeLine: 359, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1019, retainedNodes: !223)
!8522 = !DISubroutineType(types: !8523)
!8523 = !{!156, !1187}
!8524 = !DILocalVariable(name: "base", arg: 1, scope: !8521, file: !1023, line: 358, type: !1187)
!8525 = !DILocation(line: 358, column: 47, scope: !8521)
!8526 = !DILocation(line: 360, column: 22, scope: !8521)
!8527 = !DILocation(line: 360, column: 42, scope: !8521)
!8528 = !DILocation(line: 360, column: 12, scope: !8521)
!8529 = !DILocation(line: 360, column: 5, scope: !8521)
!8530 = distinct !DISubprogram(name: "UART_Putchar", scope: !1023, file: !1023, line: 346, type: !8531, scopeLine: 347, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1019, retainedNodes: !223)
!8531 = !DISubroutineType(types: !8532)
!8532 = !{null, !1187, !156}
!8533 = !DILocalVariable(name: "base", arg: 1, scope: !8530, file: !1023, line: 346, type: !1187)
!8534 = !DILocation(line: 346, column: 44, scope: !8530)
!8535 = !DILocalVariable(name: "data", arg: 2, scope: !8530, file: !1023, line: 346, type: !156)
!8536 = !DILocation(line: 346, column: 58, scope: !8530)
!8537 = !DILocation(line: 348, column: 28, scope: !8530)
!8538 = !DILocation(line: 348, column: 33, scope: !8530)
!8539 = !DILocation(line: 348, column: 5, scope: !8530)
!8540 = !DILocation(line: 348, column: 25, scope: !8530)
!8541 = !DILocation(line: 349, column: 1, scope: !8530)
!8542 = !DILocalVariable(name: "dev", arg: 1, scope: !1289, file: !1216, line: 339, type: !1116)
!8543 = !DILocation(line: 339, column: 1, scope: !1289)
!8544 = !DILocation(line: 339, column: 1, scope: !8545)
!8545 = distinct !DILexicalBlock(scope: !1289, file: !1216, line: 339, column: 1)
!8546 = distinct !DISubprogram(name: "uart_imx_isr", scope: !1216, file: !1216, line: 260, type: !1167, scopeLine: 261, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1019, retainedNodes: !223)
!8547 = !DILocalVariable(name: "dev", arg: 1, scope: !8546, file: !1216, line: 260, type: !1116)
!8548 = !DILocation(line: 260, column: 40, scope: !8546)
!8549 = !DILocalVariable(name: "data", scope: !8546, file: !1216, line: 262, type: !8484)
!8550 = !DILocation(line: 262, column: 24, scope: !8546)
!8551 = !DILocation(line: 262, column: 31, scope: !8546)
!8552 = !DILocation(line: 262, column: 36, scope: !8546)
!8553 = !DILocation(line: 264, column: 6, scope: !8554)
!8554 = distinct !DILexicalBlock(scope: !8546, file: !1216, line: 264, column: 6)
!8555 = !DILocation(line: 264, column: 12, scope: !8554)
!8556 = !DILocation(line: 264, column: 6, scope: !8546)
!8557 = !DILocation(line: 265, column: 3, scope: !8558)
!8558 = distinct !DILexicalBlock(scope: !8554, file: !1216, line: 264, column: 22)
!8559 = !DILocation(line: 265, column: 9, scope: !8558)
!8560 = !DILocation(line: 265, column: 18, scope: !8558)
!8561 = !DILocation(line: 265, column: 23, scope: !8558)
!8562 = !DILocation(line: 265, column: 29, scope: !8558)
!8563 = !DILocation(line: 266, column: 2, scope: !8558)
!8564 = !DILocation(line: 267, column: 1, scope: !8546)
!8565 = distinct !DISubprogram(name: "uart_imx_init", scope: !1216, file: !1216, line: 56, type: !1137, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1019, retainedNodes: !223)
!8566 = !DILocalVariable(name: "dev", arg: 1, scope: !8565, file: !1216, line: 56, type: !1116)
!8567 = !DILocation(line: 56, column: 47, scope: !8565)
!8568 = !DILocalVariable(name: "uart", scope: !8565, file: !1216, line: 58, type: !1187)
!8569 = !DILocation(line: 58, column: 13, scope: !8565)
!8570 = !DILocation(line: 58, column: 20, scope: !8565)
!8571 = !DILocalVariable(name: "config", scope: !8565, file: !1216, line: 59, type: !1213)
!8572 = !DILocation(line: 59, column: 32, scope: !8565)
!8573 = !DILocation(line: 59, column: 41, scope: !8565)
!8574 = !DILocation(line: 59, column: 46, scope: !8565)
!8575 = !DILocalVariable(name: "old_level", scope: !8565, file: !1216, line: 60, type: !32)
!8576 = !DILocation(line: 60, column: 15, scope: !8565)
!8577 = !DILocalVariable(name: "err", scope: !8565, file: !1216, line: 61, type: !103)
!8578 = !DILocation(line: 61, column: 6, scope: !8565)
!8579 = !DILocalVariable(name: "key", scope: !8580, file: !5551, line: 44, type: !32)
!8580 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5551, file: !5551, line: 42, type: !7959, scopeLine: 43, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1019, retainedNodes: !223)
!8581 = !DILocation(line: 44, column: 15, scope: !8580, inlinedAt: !8582)
!8582 = distinct !DILocation(line: 64, column: 14, scope: !8565)
!8583 = !DILocalVariable(name: "tmp", scope: !8580, file: !5551, line: 53, type: !32)
!8584 = !DILocation(line: 53, column: 15, scope: !8580, inlinedAt: !8582)
!8585 = !DILocation(line: 55, column: 2, scope: !8580, inlinedAt: !8582)
!8586 = !{i64 2845914}
!8587 = !DILocation(line: 76, column: 9, scope: !8580, inlinedAt: !8582)
!8588 = !DILocation(line: 64, column: 12, scope: !8565)
!8589 = !DILocalVariable(name: "initConfig", scope: !8565, file: !1216, line: 67, type: !8590)
!8590 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_init_config_t", file: !1023, line: 57, baseType: !8591)
!8591 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_uart_init_config", file: !1023, line: 49, size: 192, elements: !8592)
!8592 = !{!8593, !8594, !8595, !8596, !8597, !8598}
!8593 = !DIDerivedType(tag: DW_TAG_member, name: "clockRate", scope: !8591, file: !1023, line: 51, baseType: !173, size: 32)
!8594 = !DIDerivedType(tag: DW_TAG_member, name: "baudRate", scope: !8591, file: !1023, line: 52, baseType: !173, size: 32, offset: 32)
!8595 = !DIDerivedType(tag: DW_TAG_member, name: "wordLength", scope: !8591, file: !1023, line: 53, baseType: !173, size: 32, offset: 64)
!8596 = !DIDerivedType(tag: DW_TAG_member, name: "stopBitNum", scope: !8591, file: !1023, line: 54, baseType: !173, size: 32, offset: 96)
!8597 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !8591, file: !1023, line: 55, baseType: !173, size: 32, offset: 128)
!8598 = !DIDerivedType(tag: DW_TAG_member, name: "direction", scope: !8591, file: !1023, line: 56, baseType: !173, size: 32, offset: 160)
!8599 = !DILocation(line: 67, column: 21, scope: !8565)
!8600 = !DILocation(line: 67, column: 34, scope: !8565)
!8601 = !DILocation(line: 68, column: 15, scope: !8565)
!8602 = !DILocation(line: 68, column: 23, scope: !8565)
!8603 = !DILocation(line: 75, column: 28, scope: !8565)
!8604 = !DILocation(line: 75, column: 36, scope: !8565)
!8605 = !DILocation(line: 75, column: 8, scope: !8565)
!8606 = !DILocation(line: 75, column: 6, scope: !8565)
!8607 = !DILocation(line: 76, column: 6, scope: !8608)
!8608 = distinct !DILexicalBlock(scope: !8565, file: !1216, line: 76, column: 6)
!8609 = !DILocation(line: 76, column: 6, scope: !8565)
!8610 = !DILocation(line: 77, column: 10, scope: !8611)
!8611 = distinct !DILexicalBlock(scope: !8608, file: !1216, line: 76, column: 11)
!8612 = !DILocation(line: 77, column: 3, scope: !8611)
!8613 = !DILocation(line: 81, column: 46, scope: !8565)
!8614 = !DILocation(line: 81, column: 26, scope: !8565)
!8615 = !DILocation(line: 81, column: 13, scope: !8565)
!8616 = !DILocation(line: 81, column: 24, scope: !8565)
!8617 = !DILocation(line: 83, column: 12, scope: !8565)
!8618 = !DILocation(line: 83, column: 2, scope: !8565)
!8619 = !DILocation(line: 86, column: 26, scope: !8565)
!8620 = !DILocation(line: 86, column: 2, scope: !8565)
!8621 = !DILocation(line: 87, column: 26, scope: !8565)
!8622 = !DILocation(line: 87, column: 2, scope: !8565)
!8623 = !DILocation(line: 90, column: 2, scope: !8565)
!8624 = !DILocalVariable(name: "key", arg: 1, scope: !8625, file: !5551, line: 84, type: !32)
!8625 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5551, file: !5551, line: 84, type: !5361, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1019, retainedNodes: !223)
!8626 = !DILocation(line: 84, column: 56, scope: !8625, inlinedAt: !8627)
!8627 = distinct !DILocation(line: 90, column: 2, scope: !8565)
!8628 = !DILocation(line: 98, column: 12, scope: !8625, inlinedAt: !8627)
!8629 = !DILocation(line: 95, column: 2, scope: !8625, inlinedAt: !8627)
!8630 = !{i64 2846731}
!8631 = !DILocation(line: 93, column: 2, scope: !8565)
!8632 = !DILocation(line: 93, column: 10, scope: !8565)
!8633 = !DILocation(line: 93, column: 26, scope: !8565)
!8634 = !DILocation(line: 97, column: 20, scope: !8565)
!8635 = !DILocation(line: 97, column: 26, scope: !8565)
!8636 = !DILocation(line: 97, column: 34, scope: !8565)
!8637 = !DILocation(line: 97, column: 2, scope: !8565)
!8638 = !DILocation(line: 100, column: 14, scope: !8565)
!8639 = !DILocation(line: 100, column: 2, scope: !8565)
!8640 = !DILocation(line: 102, column: 2, scope: !8565)
!8641 = !DILocation(line: 103, column: 1, scope: !8565)
!8642 = distinct !DISubprogram(name: "pinctrl_apply_state", scope: !1225, file: !1225, line: 342, type: !8643, scopeLine: 344, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1019, retainedNodes: !223)
!8643 = !DISubroutineType(types: !8644)
!8644 = !{!103, !1222, !156}
!8645 = !DILocalVariable(name: "config", arg: 1, scope: !8642, file: !1225, line: 342, type: !1222)
!8646 = !DILocation(line: 342, column: 72, scope: !8642)
!8647 = !DILocalVariable(name: "id", arg: 2, scope: !8642, file: !1225, line: 343, type: !156)
!8648 = !DILocation(line: 343, column: 19, scope: !8642)
!8649 = !DILocalVariable(name: "ret", scope: !8642, file: !1225, line: 345, type: !103)
!8650 = !DILocation(line: 345, column: 6, scope: !8642)
!8651 = !DILocalVariable(name: "state", scope: !8642, file: !1225, line: 346, type: !1228)
!8652 = !DILocation(line: 346, column: 30, scope: !8642)
!8653 = !DILocation(line: 348, column: 29, scope: !8642)
!8654 = !DILocation(line: 348, column: 37, scope: !8642)
!8655 = !DILocation(line: 348, column: 8, scope: !8642)
!8656 = !DILocation(line: 348, column: 6, scope: !8642)
!8657 = !DILocation(line: 349, column: 6, scope: !8658)
!8658 = distinct !DILexicalBlock(scope: !8642, file: !1225, line: 349, column: 6)
!8659 = !DILocation(line: 349, column: 10, scope: !8658)
!8660 = !DILocation(line: 349, column: 6, scope: !8642)
!8661 = !DILocation(line: 350, column: 10, scope: !8662)
!8662 = distinct !DILexicalBlock(scope: !8658, file: !1225, line: 349, column: 15)
!8663 = !DILocation(line: 350, column: 3, scope: !8662)
!8664 = !DILocation(line: 353, column: 36, scope: !8642)
!8665 = !DILocation(line: 353, column: 44, scope: !8642)
!8666 = !DILocation(line: 353, column: 9, scope: !8642)
!8667 = !DILocation(line: 353, column: 2, scope: !8642)
!8668 = !DILocation(line: 354, column: 1, scope: !8642)
!8669 = distinct !DISubprogram(name: "UART_SetTxFifoWatermark", scope: !1023, file: !1023, line: 444, type: !8531, scopeLine: 445, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1019, retainedNodes: !223)
!8670 = !DILocalVariable(name: "base", arg: 1, scope: !8669, file: !1023, line: 444, type: !1187)
!8671 = !DILocation(line: 444, column: 55, scope: !8669)
!8672 = !DILocalVariable(name: "watermark", arg: 2, scope: !8669, file: !1023, line: 444, type: !156)
!8673 = !DILocation(line: 444, column: 69, scope: !8669)
!8674 = !DILocation(line: 447, column: 28, scope: !8669)
!8675 = !DILocation(line: 447, column: 48, scope: !8669)
!8676 = !DILocation(line: 447, column: 74, scope: !8669)
!8677 = !DILocation(line: 447, column: 72, scope: !8669)
!8678 = !DILocation(line: 447, column: 5, scope: !8669)
!8679 = !DILocation(line: 447, column: 25, scope: !8669)
!8680 = !DILocation(line: 448, column: 1, scope: !8669)
!8681 = distinct !DISubprogram(name: "UART_SetRxFifoWatermark", scope: !1023, file: !1023, line: 458, type: !8531, scopeLine: 459, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1019, retainedNodes: !223)
!8682 = !DILocalVariable(name: "base", arg: 1, scope: !8681, file: !1023, line: 458, type: !1187)
!8683 = !DILocation(line: 458, column: 55, scope: !8681)
!8684 = !DILocalVariable(name: "watermark", arg: 2, scope: !8681, file: !1023, line: 458, type: !156)
!8685 = !DILocation(line: 458, column: 69, scope: !8681)
!8686 = !DILocation(line: 461, column: 28, scope: !8681)
!8687 = !DILocation(line: 461, column: 48, scope: !8681)
!8688 = !DILocation(line: 461, column: 74, scope: !8681)
!8689 = !DILocation(line: 461, column: 72, scope: !8681)
!8690 = !DILocation(line: 461, column: 5, scope: !8681)
!8691 = !DILocation(line: 461, column: 25, scope: !8681)
!8692 = !DILocation(line: 462, column: 1, scope: !8681)
!8693 = distinct !DISubprogram(name: "UART_Enable", scope: !1023, file: !1023, line: 242, type: !8694, scopeLine: 243, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1019, retainedNodes: !223)
!8694 = !DISubroutineType(types: !8695)
!8695 = !{null, !1187}
!8696 = !DILocalVariable(name: "base", arg: 1, scope: !8693, file: !1023, line: 242, type: !1187)
!8697 = !DILocation(line: 242, column: 43, scope: !8693)
!8698 = !DILocation(line: 244, column: 5, scope: !8693)
!8699 = !DILocation(line: 244, column: 25, scope: !8693)
!8700 = !DILocation(line: 245, column: 1, scope: !8693)
!8701 = distinct !DISubprogram(name: "pinctrl_apply_state_direct", scope: !1225, file: !1225, line: 316, type: !8702, scopeLine: 319, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1019, retainedNodes: !223)
!8702 = !DISubroutineType(types: !8703)
!8703 = !{!103, !1222, !1228}
!8704 = !DILocalVariable(name: "config", arg: 1, scope: !8701, file: !1225, line: 317, type: !1222)
!8705 = !DILocation(line: 317, column: 35, scope: !8701)
!8706 = !DILocalVariable(name: "state", arg: 2, scope: !8701, file: !1225, line: 318, type: !1228)
!8707 = !DILocation(line: 318, column: 30, scope: !8701)
!8708 = !DILocalVariable(name: "reg", scope: !8701, file: !1225, line: 320, type: !22)
!8709 = !DILocation(line: 320, column: 12, scope: !8701)
!8710 = !DILocation(line: 325, column: 2, scope: !8701)
!8711 = !DILocation(line: 326, column: 6, scope: !8701)
!8712 = !DILocation(line: 329, column: 32, scope: !8701)
!8713 = !DILocation(line: 329, column: 39, scope: !8701)
!8714 = !DILocation(line: 329, column: 45, scope: !8701)
!8715 = !DILocation(line: 329, column: 52, scope: !8701)
!8716 = !DILocation(line: 329, column: 61, scope: !8701)
!8717 = !DILocation(line: 329, column: 9, scope: !8701)
!8718 = !DILocation(line: 329, column: 2, scope: !8701)
!8719 = distinct !DISubprogram(name: "sys_clock_driver_init", scope: !1525, file: !1525, line: 270, type: !1531, scopeLine: 271, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1298, retainedNodes: !223)
!8720 = !DILocalVariable(name: "dev", arg: 1, scope: !8719, file: !1525, line: 270, type: !1533)
!8721 = !DILocation(line: 270, column: 55, scope: !8719)
!8722 = !DILocation(line: 272, column: 2, scope: !8719)
!8723 = !DILocation(line: 274, column: 2, scope: !8719)
!8724 = !DILocation(line: 275, column: 14, scope: !8719)
!8725 = !DILocation(line: 275, column: 27, scope: !8719)
!8726 = !DILocation(line: 275, column: 12, scope: !8719)
!8727 = !DILocation(line: 276, column: 15, scope: !8719)
!8728 = !DILocation(line: 277, column: 18, scope: !8719)
!8729 = !DILocation(line: 277, column: 16, scope: !8719)
!8730 = !DILocation(line: 278, column: 15, scope: !8719)
!8731 = !DILocation(line: 279, column: 16, scope: !8719)
!8732 = !DILocation(line: 282, column: 2, scope: !8719)
!8733 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !1446, file: !1446, line: 1814, type: !5450, scopeLine: 1815, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1298, retainedNodes: !223)
!8734 = !DILocalVariable(name: "IRQn", arg: 1, scope: !8733, file: !1446, line: 1814, type: !2155)
!8735 = !DILocation(line: 1814, column: 51, scope: !8733)
!8736 = !DILocalVariable(name: "priority", arg: 2, scope: !8733, file: !1446, line: 1814, type: !173)
!8737 = !DILocation(line: 1814, column: 66, scope: !8733)
!8738 = !DILocation(line: 1816, column: 17, scope: !8739)
!8739 = distinct !DILexicalBlock(scope: !8733, file: !1446, line: 1816, column: 7)
!8740 = !DILocation(line: 1816, column: 23, scope: !8739)
!8741 = !DILocation(line: 1816, column: 7, scope: !8733)
!8742 = !DILocation(line: 1818, column: 59, scope: !8743)
!8743 = distinct !DILexicalBlock(scope: !8739, file: !1446, line: 1817, column: 3)
!8744 = !DILocation(line: 1818, column: 68, scope: !8743)
!8745 = !DILocation(line: 1818, column: 96, scope: !8743)
!8746 = !DILocation(line: 1818, column: 48, scope: !8743)
!8747 = !DILocation(line: 1818, column: 25, scope: !8743)
!8748 = !DILocation(line: 1818, column: 5, scope: !8743)
!8749 = !DILocation(line: 1818, column: 46, scope: !8743)
!8750 = !DILocation(line: 1819, column: 3, scope: !8743)
!8751 = !DILocation(line: 1822, column: 59, scope: !8752)
!8752 = distinct !DILexicalBlock(scope: !8739, file: !1446, line: 1821, column: 3)
!8753 = !DILocation(line: 1822, column: 68, scope: !8752)
!8754 = !DILocation(line: 1822, column: 96, scope: !8752)
!8755 = !DILocation(line: 1822, column: 48, scope: !8752)
!8756 = !DILocation(line: 1822, column: 26, scope: !8752)
!8757 = !DILocation(line: 1822, column: 32, scope: !8752)
!8758 = !DILocation(line: 1822, column: 40, scope: !8752)
!8759 = !DILocation(line: 1822, column: 5, scope: !8752)
!8760 = !DILocation(line: 1822, column: 46, scope: !8752)
!8761 = !DILocation(line: 1824, column: 1, scope: !8733)
!8762 = distinct !DISubprogram(name: "sys_clock_hw_cycles_per_sec", scope: !8763, file: !8763, line: 59, type: !2844, scopeLine: 60, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1298, retainedNodes: !223)
!8763 = !DIFile(filename: "zephyr/include/zephyr/sys/time_units.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8764 = !DILocation(line: 64, column: 2, scope: !8762)
!8765 = distinct !DISubprogram(name: "sys_clock_isr", scope: !1525, file: !1525, line: 118, type: !5344, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1298, retainedNodes: !223)
!8766 = !DILocalVariable(name: "arg", arg: 1, scope: !8765, file: !1525, line: 118, type: !102)
!8767 = !DILocation(line: 118, column: 26, scope: !8765)
!8768 = !DILocation(line: 120, column: 2, scope: !8765)
!8769 = !DILocalVariable(name: "dticks", scope: !8765, file: !1525, line: 121, type: !173)
!8770 = !DILocation(line: 121, column: 11, scope: !8765)
!8771 = !DILocation(line: 124, column: 2, scope: !8765)
!8772 = !DILocation(line: 129, column: 17, scope: !8765)
!8773 = !DILocation(line: 129, column: 14, scope: !8765)
!8774 = !DILocation(line: 130, column: 15, scope: !8765)
!8775 = !DILocation(line: 145, column: 13, scope: !8776)
!8776 = distinct !DILexicalBlock(scope: !8777, file: !1525, line: 132, column: 16)
!8777 = distinct !DILexicalBlock(scope: !8765, file: !1525, line: 132, column: 6)
!8778 = !DILocation(line: 145, column: 27, scope: !8776)
!8779 = !DILocation(line: 145, column: 25, scope: !8776)
!8780 = !DILocation(line: 145, column: 47, scope: !8776)
!8781 = !DILocation(line: 145, column: 45, scope: !8776)
!8782 = !DILocation(line: 145, column: 10, scope: !8776)
!8783 = !DILocation(line: 146, column: 23, scope: !8776)
!8784 = !DILocation(line: 146, column: 32, scope: !8776)
!8785 = !DILocation(line: 146, column: 30, scope: !8776)
!8786 = !DILocation(line: 146, column: 20, scope: !8776)
!8787 = !DILocation(line: 147, column: 22, scope: !8776)
!8788 = !DILocation(line: 147, column: 3, scope: !8776)
!8789 = !DILocation(line: 151, column: 2, scope: !8765)
!8790 = !DILocation(line: 152, column: 1, scope: !8765)
!8791 = distinct !DISubprogram(name: "elapsed", scope: !1525, file: !1525, line: 85, type: !5514, scopeLine: 86, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1298, retainedNodes: !223)
!8792 = !DILocalVariable(name: "val1", scope: !8791, file: !1525, line: 87, type: !173)
!8793 = !DILocation(line: 87, column: 11, scope: !8791)
!8794 = !DILocation(line: 87, column: 27, scope: !8791)
!8795 = !DILocalVariable(name: "ctrl", scope: !8791, file: !1525, line: 88, type: !173)
!8796 = !DILocation(line: 88, column: 11, scope: !8791)
!8797 = !DILocation(line: 88, column: 27, scope: !8791)
!8798 = !DILocalVariable(name: "val2", scope: !8791, file: !1525, line: 89, type: !173)
!8799 = !DILocation(line: 89, column: 11, scope: !8791)
!8800 = !DILocation(line: 89, column: 27, scope: !8791)
!8801 = !DILocation(line: 105, column: 7, scope: !8802)
!8802 = distinct !DILexicalBlock(scope: !8791, file: !1525, line: 105, column: 6)
!8803 = !DILocation(line: 105, column: 12, scope: !8802)
!8804 = !DILocation(line: 106, column: 6, scope: !8802)
!8805 = !DILocation(line: 106, column: 10, scope: !8802)
!8806 = !DILocation(line: 106, column: 17, scope: !8802)
!8807 = !DILocation(line: 106, column: 15, scope: !8802)
!8808 = !DILocation(line: 105, column: 6, scope: !8791)
!8809 = !DILocation(line: 107, column: 19, scope: !8810)
!8810 = distinct !DILexicalBlock(scope: !8802, file: !1525, line: 106, column: 24)
!8811 = !DILocation(line: 107, column: 16, scope: !8810)
!8812 = !DILocation(line: 111, column: 18, scope: !8810)
!8813 = !DILocation(line: 112, column: 2, scope: !8810)
!8814 = !DILocation(line: 114, column: 10, scope: !8791)
!8815 = !DILocation(line: 114, column: 22, scope: !8791)
!8816 = !DILocation(line: 114, column: 20, scope: !8791)
!8817 = !DILocation(line: 114, column: 30, scope: !8791)
!8818 = !DILocation(line: 114, column: 28, scope: !8791)
!8819 = !DILocation(line: 114, column: 2, scope: !8791)
!8820 = distinct !DISubprogram(name: "sys_clock_set_timeout", scope: !1525, file: !1525, line: 154, type: !8821, scopeLine: 155, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1298, retainedNodes: !223)
!8821 = !DISubroutineType(types: !8822)
!8822 = !{null, !250, !743}
!8823 = !DILocalVariable(name: "ticks", arg: 1, scope: !8820, file: !1525, line: 154, type: !250)
!8824 = !DILocation(line: 154, column: 36, scope: !8820)
!8825 = !DILocalVariable(name: "idle", arg: 2, scope: !8820, file: !1525, line: 154, type: !743)
!8826 = !DILocation(line: 154, column: 48, scope: !8820)
!8827 = !DILocation(line: 162, column: 44, scope: !8828)
!8828 = distinct !DILexicalBlock(scope: !8820, file: !1525, line: 162, column: 6)
!8829 = !DILocation(line: 162, column: 49, scope: !8828)
!8830 = !DILocation(line: 162, column: 52, scope: !8828)
!8831 = !DILocation(line: 162, column: 58, scope: !8828)
!8832 = !DILocation(line: 162, column: 6, scope: !8820)
!8833 = !DILocation(line: 163, column: 17, scope: !8834)
!8834 = distinct !DILexicalBlock(scope: !8828, file: !1525, line: 162, column: 78)
!8835 = !DILocation(line: 164, column: 13, scope: !8834)
!8836 = !DILocation(line: 165, column: 3, scope: !8834)
!8837 = !DILocalVariable(name: "delay", scope: !8820, file: !1525, line: 169, type: !173)
!8838 = !DILocation(line: 169, column: 11, scope: !8820)
!8839 = !DILocalVariable(name: "val1", scope: !8820, file: !1525, line: 170, type: !173)
!8840 = !DILocation(line: 170, column: 11, scope: !8820)
!8841 = !DILocalVariable(name: "val2", scope: !8820, file: !1525, line: 170, type: !173)
!8842 = !DILocation(line: 170, column: 17, scope: !8820)
!8843 = !DILocalVariable(name: "last_load_", scope: !8820, file: !1525, line: 171, type: !173)
!8844 = !DILocation(line: 171, column: 11, scope: !8820)
!8845 = !DILocation(line: 171, column: 24, scope: !8820)
!8846 = !DILocation(line: 173, column: 11, scope: !8820)
!8847 = !DILocation(line: 173, column: 17, scope: !8820)
!8848 = !DILocation(line: 173, column: 10, scope: !8820)
!8849 = !DILocation(line: 173, column: 39, scope: !8820)
!8850 = !DILocation(line: 173, column: 51, scope: !8820)
!8851 = !DILocation(line: 173, column: 8, scope: !8820)
!8852 = !DILocation(line: 174, column: 10, scope: !8820)
!8853 = !DILocation(line: 174, column: 8, scope: !8820)
!8854 = !DILocalVariable(name: "key", scope: !8820, file: !1525, line: 176, type: !8855)
!8855 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !222, line: 106, baseType: !8856)
!8856 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !222, line: 32, size: 32, elements: !8857)
!8857 = !{!8858}
!8858 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !8856, file: !222, line: 33, baseType: !103, size: 32)
!8859 = !DILocation(line: 176, column: 19, scope: !8820)
!8860 = !DILocalVariable(name: "l", arg: 1, scope: !8861, file: !222, line: 136, type: !8864)
!8861 = distinct !DISubprogram(name: "k_spin_lock", scope: !222, file: !222, line: 136, type: !8862, scopeLine: 137, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1298, retainedNodes: !223)
!8862 = !DISubroutineType(types: !8863)
!8863 = !{!8855, !8864}
!8864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1551, size: 32)
!8865 = !DILocation(line: 136, column: 70, scope: !8861, inlinedAt: !8866)
!8866 = distinct !DILocation(line: 176, column: 25, scope: !8820)
!8867 = !DILocation(line: 138, column: 2, scope: !8861, inlinedAt: !8866)
!8868 = !DILocalVariable(name: "k", scope: !8861, file: !222, line: 139, type: !8855)
!8869 = !DILocation(line: 139, column: 19, scope: !8861, inlinedAt: !8866)
!8870 = !DILocalVariable(name: "key", scope: !8871, file: !5551, line: 44, type: !32)
!8871 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5551, file: !5551, line: 42, type: !7959, scopeLine: 43, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1298, retainedNodes: !223)
!8872 = !DILocation(line: 44, column: 15, scope: !8871, inlinedAt: !8873)
!8873 = distinct !DILocation(line: 145, column: 10, scope: !8861, inlinedAt: !8866)
!8874 = !DILocalVariable(name: "tmp", scope: !8871, file: !5551, line: 53, type: !32)
!8875 = !DILocation(line: 53, column: 15, scope: !8871, inlinedAt: !8873)
!8876 = !DILocation(line: 55, column: 2, scope: !8871, inlinedAt: !8873)
!8877 = !{i64 2947918}
!8878 = !DILocation(line: 76, column: 9, scope: !8871, inlinedAt: !8873)
!8879 = !DILocation(line: 145, column: 4, scope: !8861, inlinedAt: !8866)
!8880 = !DILocation(line: 145, column: 8, scope: !8861, inlinedAt: !8866)
!8881 = !DILocation(line: 165, column: 2, scope: !8861, inlinedAt: !8866)
!8882 = !DILocation(line: 176, column: 25, scope: !8820)
!8883 = !DILocalVariable(name: "pending", scope: !8820, file: !1525, line: 178, type: !173)
!8884 = !DILocation(line: 178, column: 11, scope: !8820)
!8885 = !DILocation(line: 178, column: 21, scope: !8820)
!8886 = !DILocation(line: 180, column: 18, scope: !8820)
!8887 = !DILocation(line: 180, column: 7, scope: !8820)
!8888 = !DILocation(line: 182, column: 17, scope: !8820)
!8889 = !DILocation(line: 182, column: 14, scope: !8820)
!8890 = !DILocation(line: 183, column: 15, scope: !8820)
!8891 = !DILocalVariable(name: "unannounced", scope: !8820, file: !1525, line: 185, type: !173)
!8892 = !DILocation(line: 185, column: 11, scope: !8820)
!8893 = !DILocation(line: 185, column: 25, scope: !8820)
!8894 = !DILocation(line: 185, column: 39, scope: !8820)
!8895 = !DILocation(line: 185, column: 37, scope: !8820)
!8896 = !DILocation(line: 187, column: 15, scope: !8897)
!8897 = distinct !DILexicalBlock(scope: !8820, file: !1525, line: 187, column: 6)
!8898 = !DILocation(line: 187, column: 27, scope: !8897)
!8899 = !DILocation(line: 187, column: 6, scope: !8820)
!8900 = !DILocation(line: 194, column: 15, scope: !8901)
!8901 = distinct !DILexicalBlock(scope: !8897, file: !1525, line: 187, column: 32)
!8902 = !DILocation(line: 194, column: 13, scope: !8901)
!8903 = !DILocation(line: 195, column: 2, scope: !8901)
!8904 = !DILocation(line: 197, column: 11, scope: !8905)
!8905 = distinct !DILexicalBlock(scope: !8897, file: !1525, line: 195, column: 9)
!8906 = !DILocation(line: 197, column: 19, scope: !8905)
!8907 = !DILocation(line: 197, column: 17, scope: !8905)
!8908 = !DILocation(line: 197, column: 9, scope: !8905)
!8909 = !DILocation(line: 200, column: 12, scope: !8905)
!8910 = !DILocation(line: 200, column: 9, scope: !8905)
!8911 = !DILocation(line: 202, column: 6, scope: !8905)
!8912 = !DILocation(line: 202, column: 14, scope: !8905)
!8913 = !DILocation(line: 202, column: 12, scope: !8905)
!8914 = !DILocation(line: 202, column: 27, scope: !8905)
!8915 = !DILocation(line: 202, column: 34, scope: !8905)
!8916 = !DILocation(line: 202, column: 32, scope: !8905)
!8917 = !DILocation(line: 202, column: 50, scope: !8905)
!8918 = !DILocation(line: 202, column: 48, scope: !8905)
!8919 = !DILocation(line: 201, column: 9, scope: !8905)
!8920 = !DILocation(line: 203, column: 12, scope: !8905)
!8921 = !DILocation(line: 203, column: 9, scope: !8905)
!8922 = !DILocation(line: 204, column: 11, scope: !8905)
!8923 = !DILocation(line: 204, column: 9, scope: !8905)
!8924 = !DILocation(line: 205, column: 7, scope: !8925)
!8925 = distinct !DILexicalBlock(scope: !8905, file: !1525, line: 205, column: 7)
!8926 = !DILocation(line: 205, column: 15, scope: !8925)
!8927 = !DILocation(line: 205, column: 13, scope: !8925)
!8928 = !DILocation(line: 205, column: 7, scope: !8905)
!8929 = !DILocation(line: 206, column: 16, scope: !8930)
!8930 = distinct !DILexicalBlock(scope: !8925, file: !1525, line: 205, column: 27)
!8931 = !DILocation(line: 206, column: 14, scope: !8930)
!8932 = !DILocation(line: 207, column: 3, scope: !8930)
!8933 = !DILocation(line: 208, column: 16, scope: !8934)
!8934 = distinct !DILexicalBlock(scope: !8925, file: !1525, line: 207, column: 10)
!8935 = !DILocation(line: 208, column: 14, scope: !8934)
!8936 = !DILocation(line: 212, column: 18, scope: !8820)
!8937 = !DILocation(line: 212, column: 7, scope: !8820)
!8938 = !DILocation(line: 214, column: 18, scope: !8820)
!8939 = !DILocation(line: 214, column: 28, scope: !8820)
!8940 = !DILocation(line: 214, column: 16, scope: !8820)
!8941 = !DILocation(line: 215, column: 15, scope: !8820)
!8942 = !DILocation(line: 227, column: 6, scope: !8943)
!8943 = distinct !DILexicalBlock(scope: !8820, file: !1525, line: 227, column: 6)
!8944 = !DILocation(line: 227, column: 13, scope: !8943)
!8945 = !DILocation(line: 227, column: 11, scope: !8943)
!8946 = !DILocation(line: 227, column: 6, scope: !8820)
!8947 = !DILocation(line: 228, column: 19, scope: !8948)
!8948 = distinct !DILexicalBlock(scope: !8943, file: !1525, line: 227, column: 19)
!8949 = !DILocation(line: 228, column: 27, scope: !8948)
!8950 = !DILocation(line: 228, column: 40, scope: !8948)
!8951 = !DILocation(line: 228, column: 38, scope: !8948)
!8952 = !DILocation(line: 228, column: 24, scope: !8948)
!8953 = !DILocation(line: 228, column: 15, scope: !8948)
!8954 = !DILocation(line: 229, column: 2, scope: !8948)
!8955 = !DILocation(line: 230, column: 19, scope: !8956)
!8956 = distinct !DILexicalBlock(scope: !8943, file: !1525, line: 229, column: 9)
!8957 = !DILocation(line: 230, column: 26, scope: !8956)
!8958 = !DILocation(line: 230, column: 24, scope: !8956)
!8959 = !DILocation(line: 230, column: 15, scope: !8956)
!8960 = !DILocation(line: 232, column: 2, scope: !8820)
!8961 = !DILocalVariable(name: "l", arg: 1, scope: !8962, file: !222, line: 189, type: !8864)
!8962 = distinct !DISubprogram(name: "k_spin_unlock", scope: !222, file: !222, line: 189, type: !8963, scopeLine: 191, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1298, retainedNodes: !223)
!8963 = !DISubroutineType(types: !8964)
!8964 = !{null, !8864, !8855}
!8965 = !DILocation(line: 189, column: 60, scope: !8962, inlinedAt: !8966)
!8966 = distinct !DILocation(line: 232, column: 2, scope: !8820)
!8967 = !DILocalVariable(name: "key", arg: 2, scope: !8962, file: !222, line: 190, type: !8855)
!8968 = !DILocation(line: 190, column: 23, scope: !8962, inlinedAt: !8966)
!8969 = !DILocation(line: 192, column: 2, scope: !8962, inlinedAt: !8966)
!8970 = !DILocation(line: 215, column: 22, scope: !8962, inlinedAt: !8966)
!8971 = !DILocalVariable(name: "key", arg: 1, scope: !8972, file: !5551, line: 84, type: !32)
!8972 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5551, file: !5551, line: 84, type: !5361, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1298, retainedNodes: !223)
!8973 = !DILocation(line: 84, column: 56, scope: !8972, inlinedAt: !8974)
!8974 = distinct !DILocation(line: 215, column: 2, scope: !8962, inlinedAt: !8966)
!8975 = !DILocation(line: 98, column: 12, scope: !8972, inlinedAt: !8974)
!8976 = !DILocation(line: 95, column: 2, scope: !8972, inlinedAt: !8974)
!8977 = !{i64 2948735}
!8978 = !DILocation(line: 234, column: 1, scope: !8820)
!8979 = distinct !DISubprogram(name: "sys_clock_elapsed", scope: !1525, file: !1525, line: 236, type: !5514, scopeLine: 237, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1298, retainedNodes: !223)
!8980 = !DILocalVariable(name: "key", scope: !8979, file: !1525, line: 242, type: !8855)
!8981 = !DILocation(line: 242, column: 19, scope: !8979)
!8982 = !DILocation(line: 136, column: 70, scope: !8861, inlinedAt: !8983)
!8983 = distinct !DILocation(line: 242, column: 25, scope: !8979)
!8984 = !DILocation(line: 138, column: 2, scope: !8861, inlinedAt: !8983)
!8985 = !DILocation(line: 139, column: 19, scope: !8861, inlinedAt: !8983)
!8986 = !DILocation(line: 44, column: 15, scope: !8871, inlinedAt: !8987)
!8987 = distinct !DILocation(line: 145, column: 10, scope: !8861, inlinedAt: !8983)
!8988 = !DILocation(line: 53, column: 15, scope: !8871, inlinedAt: !8987)
!8989 = !DILocation(line: 55, column: 2, scope: !8871, inlinedAt: !8987)
!8990 = !DILocation(line: 76, column: 9, scope: !8871, inlinedAt: !8987)
!8991 = !DILocation(line: 145, column: 4, scope: !8861, inlinedAt: !8983)
!8992 = !DILocation(line: 145, column: 8, scope: !8861, inlinedAt: !8983)
!8993 = !DILocation(line: 165, column: 2, scope: !8861, inlinedAt: !8983)
!8994 = !DILocation(line: 242, column: 25, scope: !8979)
!8995 = !DILocalVariable(name: "cyc", scope: !8979, file: !1525, line: 243, type: !173)
!8996 = !DILocation(line: 243, column: 11, scope: !8979)
!8997 = !DILocation(line: 243, column: 17, scope: !8979)
!8998 = !DILocation(line: 243, column: 29, scope: !8979)
!8999 = !DILocation(line: 243, column: 27, scope: !8979)
!9000 = !DILocation(line: 243, column: 43, scope: !8979)
!9001 = !DILocation(line: 243, column: 41, scope: !8979)
!9002 = !DILocation(line: 245, column: 2, scope: !8979)
!9003 = !DILocation(line: 189, column: 60, scope: !8962, inlinedAt: !9004)
!9004 = distinct !DILocation(line: 245, column: 2, scope: !8979)
!9005 = !DILocation(line: 190, column: 23, scope: !8962, inlinedAt: !9004)
!9006 = !DILocation(line: 192, column: 2, scope: !8962, inlinedAt: !9004)
!9007 = !DILocation(line: 215, column: 22, scope: !8962, inlinedAt: !9004)
!9008 = !DILocation(line: 84, column: 56, scope: !8972, inlinedAt: !9009)
!9009 = distinct !DILocation(line: 215, column: 2, scope: !8962, inlinedAt: !9004)
!9010 = !DILocation(line: 98, column: 12, scope: !8972, inlinedAt: !9009)
!9011 = !DILocation(line: 95, column: 2, scope: !8972, inlinedAt: !9009)
!9012 = !DILocation(line: 246, column: 9, scope: !8979)
!9013 = !DILocation(line: 246, column: 15, scope: !8979)
!9014 = !DILocation(line: 246, column: 13, scope: !8979)
!9015 = !DILocation(line: 246, column: 2, scope: !8979)
!9016 = distinct !DISubprogram(name: "sys_clock_cycle_get_32", scope: !1525, file: !1525, line: 249, type: !5514, scopeLine: 250, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1298, retainedNodes: !223)
!9017 = !DILocalVariable(name: "key", scope: !9016, file: !1525, line: 251, type: !8855)
!9018 = !DILocation(line: 251, column: 19, scope: !9016)
!9019 = !DILocation(line: 136, column: 70, scope: !8861, inlinedAt: !9020)
!9020 = distinct !DILocation(line: 251, column: 25, scope: !9016)
!9021 = !DILocation(line: 138, column: 2, scope: !8861, inlinedAt: !9020)
!9022 = !DILocation(line: 139, column: 19, scope: !8861, inlinedAt: !9020)
!9023 = !DILocation(line: 44, column: 15, scope: !8871, inlinedAt: !9024)
!9024 = distinct !DILocation(line: 145, column: 10, scope: !8861, inlinedAt: !9020)
!9025 = !DILocation(line: 53, column: 15, scope: !8871, inlinedAt: !9024)
!9026 = !DILocation(line: 55, column: 2, scope: !8871, inlinedAt: !9024)
!9027 = !DILocation(line: 76, column: 9, scope: !8871, inlinedAt: !9024)
!9028 = !DILocation(line: 145, column: 4, scope: !8861, inlinedAt: !9020)
!9029 = !DILocation(line: 145, column: 8, scope: !8861, inlinedAt: !9020)
!9030 = !DILocation(line: 165, column: 2, scope: !8861, inlinedAt: !9020)
!9031 = !DILocation(line: 251, column: 25, scope: !9016)
!9032 = !DILocalVariable(name: "ret", scope: !9016, file: !1525, line: 252, type: !173)
!9033 = !DILocation(line: 252, column: 11, scope: !9016)
!9034 = !DILocation(line: 252, column: 17, scope: !9016)
!9035 = !DILocation(line: 252, column: 29, scope: !9016)
!9036 = !DILocation(line: 252, column: 27, scope: !9016)
!9037 = !DILocation(line: 254, column: 2, scope: !9016)
!9038 = !DILocation(line: 189, column: 60, scope: !8962, inlinedAt: !9039)
!9039 = distinct !DILocation(line: 254, column: 2, scope: !9016)
!9040 = !DILocation(line: 190, column: 23, scope: !8962, inlinedAt: !9039)
!9041 = !DILocation(line: 192, column: 2, scope: !8962, inlinedAt: !9039)
!9042 = !DILocation(line: 215, column: 22, scope: !8962, inlinedAt: !9039)
!9043 = !DILocation(line: 84, column: 56, scope: !8972, inlinedAt: !9044)
!9044 = distinct !DILocation(line: 215, column: 2, scope: !8962, inlinedAt: !9039)
!9045 = !DILocation(line: 98, column: 12, scope: !8972, inlinedAt: !9044)
!9046 = !DILocation(line: 95, column: 2, scope: !8972, inlinedAt: !9044)
!9047 = !DILocation(line: 255, column: 9, scope: !9016)
!9048 = !DILocation(line: 255, column: 2, scope: !9016)
!9049 = distinct !DISubprogram(name: "sys_clock_idle_exit", scope: !1525, file: !1525, line: 258, type: !253, scopeLine: 259, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1298, retainedNodes: !223)
!9050 = !DILocation(line: 260, column: 6, scope: !9051)
!9051 = distinct !DILexicalBlock(scope: !9049, file: !1525, line: 260, column: 6)
!9052 = !DILocation(line: 260, column: 16, scope: !9051)
!9053 = !DILocation(line: 260, column: 6, scope: !9049)
!9054 = !DILocation(line: 261, column: 17, scope: !9055)
!9055 = distinct !DILexicalBlock(scope: !9051, file: !1525, line: 260, column: 34)
!9056 = !DILocation(line: 262, column: 2, scope: !9055)
!9057 = !DILocation(line: 263, column: 1, scope: !9049)
!9058 = distinct !DISubprogram(name: "sys_clock_disable", scope: !1525, file: !1525, line: 265, type: !253, scopeLine: 266, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1298, retainedNodes: !223)
!9059 = !DILocation(line: 267, column: 16, scope: !9058)
!9060 = !DILocation(line: 268, column: 1, scope: !9058)
!9061 = distinct !DISubprogram(name: "pinctrl_lookup_state", scope: !9062, file: !9062, line: 9, type: !9063, scopeLine: 11, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2454, retainedNodes: !223)
!9062 = !DIFile(filename: "zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9063 = !DISubroutineType(types: !9064)
!9064 = !{!103, !9065, !156, !9092}
!9065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9066, size: 32)
!9066 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9067)
!9067 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1225, line: 60, size: 64, elements: !9068)
!9068 = !{!9069, !9091}
!9069 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !9067, file: !1225, line: 69, baseType: !9070, size: 32)
!9070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9071, size: 32)
!9071 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9072)
!9072 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1225, line: 50, size: 64, elements: !9073)
!9073 = !{!9074, !9089, !9090}
!9074 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !9072, file: !1225, line: 52, baseType: !9075, size: 32)
!9075 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9076, size: 32)
!9076 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9077)
!9077 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !982, line: 64, baseType: !9078)
!9078 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !982, line: 59, size: 160, elements: !9079)
!9079 = !{!9080, !9088}
!9080 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !9078, file: !982, line: 60, baseType: !9081, size: 128)
!9081 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pinmux", file: !982, line: 51, size: 128, elements: !9082)
!9082 = !{!9083, !9084, !9085, !9086, !9087}
!9083 = !DIDerivedType(tag: DW_TAG_member, name: "mux_register", scope: !9081, file: !982, line: 52, baseType: !173, size: 32)
!9084 = !DIDerivedType(tag: DW_TAG_member, name: "config_register", scope: !9081, file: !982, line: 53, baseType: !173, size: 32, offset: 32)
!9085 = !DIDerivedType(tag: DW_TAG_member, name: "input_register", scope: !9081, file: !982, line: 54, baseType: !173, size: 32, offset: 64)
!9086 = !DIDerivedType(tag: DW_TAG_member, name: "mux_mode", scope: !9081, file: !982, line: 55, baseType: !156, size: 4, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!9087 = !DIDerivedType(tag: DW_TAG_member, name: "input_daisy", scope: !9081, file: !982, line: 56, baseType: !173, size: 4, offset: 100, flags: DIFlagBitField, extraData: i64 96)
!9088 = !DIDerivedType(tag: DW_TAG_member, name: "pin_ctrl_flags", scope: !9078, file: !982, line: 61, baseType: !173, size: 32, offset: 128)
!9089 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !9072, file: !1225, line: 54, baseType: !156, size: 8, offset: 32)
!9090 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !9072, file: !1225, line: 56, baseType: !156, size: 8, offset: 40)
!9091 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !9067, file: !1225, line: 71, baseType: !156, size: 8, offset: 32)
!9092 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9070, size: 32)
!9093 = !DILocalVariable(name: "config", arg: 1, scope: !9061, file: !9062, line: 9, type: !9065)
!9094 = !DILocation(line: 9, column: 59, scope: !9061)
!9095 = !DILocalVariable(name: "id", arg: 2, scope: !9061, file: !9062, line: 9, type: !156)
!9096 = !DILocation(line: 9, column: 75, scope: !9061)
!9097 = !DILocalVariable(name: "state", arg: 3, scope: !9061, file: !9062, line: 10, type: !9092)
!9098 = !DILocation(line: 10, column: 34, scope: !9061)
!9099 = !DILocation(line: 12, column: 12, scope: !9061)
!9100 = !DILocation(line: 12, column: 20, scope: !9061)
!9101 = !DILocation(line: 12, column: 3, scope: !9061)
!9102 = !DILocation(line: 12, column: 9, scope: !9061)
!9103 = !DILocation(line: 13, column: 2, scope: !9061)
!9104 = !DILocation(line: 13, column: 10, scope: !9061)
!9105 = !DILocation(line: 13, column: 9, scope: !9061)
!9106 = !DILocation(line: 13, column: 19, scope: !9061)
!9107 = !DILocation(line: 13, column: 27, scope: !9061)
!9108 = !DILocation(line: 13, column: 34, scope: !9061)
!9109 = !DILocation(line: 13, column: 42, scope: !9061)
!9110 = !DILocation(line: 13, column: 16, scope: !9061)
!9111 = !DILocation(line: 14, column: 7, scope: !9112)
!9112 = distinct !DILexicalBlock(scope: !9113, file: !9062, line: 14, column: 7)
!9113 = distinct !DILexicalBlock(scope: !9061, file: !9062, line: 13, column: 54)
!9114 = !DILocation(line: 14, column: 15, scope: !9112)
!9115 = !DILocation(line: 14, column: 14, scope: !9112)
!9116 = !DILocation(line: 14, column: 23, scope: !9112)
!9117 = !DILocation(line: 14, column: 13, scope: !9112)
!9118 = !DILocation(line: 14, column: 10, scope: !9112)
!9119 = !DILocation(line: 14, column: 7, scope: !9113)
!9120 = !DILocation(line: 15, column: 4, scope: !9121)
!9121 = distinct !DILexicalBlock(scope: !9112, file: !9062, line: 14, column: 27)
!9122 = !DILocation(line: 18, column: 5, scope: !9113)
!9123 = !DILocation(line: 18, column: 11, scope: !9113)
!9124 = distinct !{!9124, !9103, !9125}
!9125 = !DILocation(line: 19, column: 2, scope: !9061)
!9126 = !DILocation(line: 21, column: 2, scope: !9061)
!9127 = !DILocation(line: 22, column: 1, scope: !9061)
!9128 = distinct !DISubprogram(name: "imx_pinctrl_init", scope: !1564, file: !1564, line: 51, type: !1570, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1560, retainedNodes: !223)
!9129 = !DILocalVariable(name: "dev", arg: 1, scope: !9128, file: !1564, line: 51, type: !1572)
!9130 = !DILocation(line: 51, column: 50, scope: !9128)
!9131 = !DILocation(line: 53, column: 2, scope: !9128)
!9132 = !DILocation(line: 66, column: 2, scope: !9128)
!9133 = distinct !DISubprogram(name: "pinctrl_configure_pins", scope: !1564, file: !1564, line: 10, type: !9134, scopeLine: 12, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1560, retainedNodes: !223)
!9134 = !DISubroutineType(types: !9135)
!9135 = !{!103, !9136, !156, !22}
!9136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9137, size: 32)
!9137 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9138)
!9138 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !982, line: 64, baseType: !9139)
!9139 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !982, line: 59, size: 160, elements: !9140)
!9140 = !{!9141, !9149}
!9141 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !9139, file: !982, line: 60, baseType: !9142, size: 128)
!9142 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pinmux", file: !982, line: 51, size: 128, elements: !9143)
!9143 = !{!9144, !9145, !9146, !9147, !9148}
!9144 = !DIDerivedType(tag: DW_TAG_member, name: "mux_register", scope: !9142, file: !982, line: 52, baseType: !173, size: 32)
!9145 = !DIDerivedType(tag: DW_TAG_member, name: "config_register", scope: !9142, file: !982, line: 53, baseType: !173, size: 32, offset: 32)
!9146 = !DIDerivedType(tag: DW_TAG_member, name: "input_register", scope: !9142, file: !982, line: 54, baseType: !173, size: 32, offset: 64)
!9147 = !DIDerivedType(tag: DW_TAG_member, name: "mux_mode", scope: !9142, file: !982, line: 55, baseType: !156, size: 4, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!9148 = !DIDerivedType(tag: DW_TAG_member, name: "input_daisy", scope: !9142, file: !982, line: 56, baseType: !173, size: 4, offset: 100, flags: DIFlagBitField, extraData: i64 96)
!9149 = !DIDerivedType(tag: DW_TAG_member, name: "pin_ctrl_flags", scope: !9139, file: !982, line: 61, baseType: !173, size: 32, offset: 128)
!9150 = !DILocalVariable(name: "pins", arg: 1, scope: !9133, file: !1564, line: 10, type: !9136)
!9151 = !DILocation(line: 10, column: 53, scope: !9133)
!9152 = !DILocalVariable(name: "pin_cnt", arg: 2, scope: !9133, file: !1564, line: 10, type: !156)
!9153 = !DILocation(line: 10, column: 67, scope: !9133)
!9154 = !DILocalVariable(name: "reg", arg: 3, scope: !9133, file: !1564, line: 11, type: !22)
!9155 = !DILocation(line: 11, column: 17, scope: !9133)
!9156 = !DILocalVariable(name: "i", scope: !9157, file: !1564, line: 14, type: !156)
!9157 = distinct !DILexicalBlock(scope: !9133, file: !1564, line: 14, column: 2)
!9158 = !DILocation(line: 14, column: 15, scope: !9157)
!9159 = !DILocation(line: 14, column: 7, scope: !9157)
!9160 = !DILocation(line: 14, column: 23, scope: !9161)
!9161 = distinct !DILexicalBlock(scope: !9157, file: !1564, line: 14, column: 2)
!9162 = !DILocation(line: 14, column: 27, scope: !9161)
!9163 = !DILocation(line: 14, column: 25, scope: !9161)
!9164 = !DILocation(line: 14, column: 2, scope: !9157)
!9165 = !DILocalVariable(name: "mux_register", scope: !9166, file: !1564, line: 15, type: !173)
!9166 = distinct !DILexicalBlock(scope: !9161, file: !1564, line: 14, column: 41)
!9167 = !DILocation(line: 15, column: 12, scope: !9166)
!9168 = !DILocation(line: 15, column: 27, scope: !9166)
!9169 = !DILocation(line: 15, column: 32, scope: !9166)
!9170 = !DILocation(line: 15, column: 35, scope: !9166)
!9171 = !DILocation(line: 15, column: 42, scope: !9166)
!9172 = !DILocalVariable(name: "mux_mode", scope: !9166, file: !1564, line: 16, type: !173)
!9173 = !DILocation(line: 16, column: 12, scope: !9166)
!9174 = !DILocation(line: 16, column: 23, scope: !9166)
!9175 = !DILocation(line: 16, column: 28, scope: !9166)
!9176 = !DILocation(line: 16, column: 31, scope: !9166)
!9177 = !DILocation(line: 16, column: 38, scope: !9166)
!9178 = !DILocalVariable(name: "input_register", scope: !9166, file: !1564, line: 17, type: !173)
!9179 = !DILocation(line: 17, column: 12, scope: !9166)
!9180 = !DILocation(line: 17, column: 29, scope: !9166)
!9181 = !DILocation(line: 17, column: 34, scope: !9166)
!9182 = !DILocation(line: 17, column: 37, scope: !9166)
!9183 = !DILocation(line: 17, column: 44, scope: !9166)
!9184 = !DILocalVariable(name: "input_daisy", scope: !9166, file: !1564, line: 18, type: !173)
!9185 = !DILocation(line: 18, column: 12, scope: !9166)
!9186 = !DILocation(line: 18, column: 26, scope: !9166)
!9187 = !DILocation(line: 18, column: 31, scope: !9166)
!9188 = !DILocation(line: 18, column: 34, scope: !9166)
!9189 = !DILocation(line: 18, column: 41, scope: !9166)
!9190 = !DILocalVariable(name: "config_register", scope: !9166, file: !1564, line: 19, type: !173)
!9191 = !DILocation(line: 19, column: 12, scope: !9166)
!9192 = !DILocation(line: 19, column: 30, scope: !9166)
!9193 = !DILocation(line: 19, column: 35, scope: !9166)
!9194 = !DILocation(line: 19, column: 38, scope: !9166)
!9195 = !DILocation(line: 19, column: 45, scope: !9166)
!9196 = !DILocalVariable(name: "pin_ctrl_flags", scope: !9166, file: !1564, line: 20, type: !173)
!9197 = !DILocation(line: 20, column: 12, scope: !9166)
!9198 = !DILocation(line: 20, column: 29, scope: !9166)
!9199 = !DILocation(line: 20, column: 34, scope: !9166)
!9200 = !DILocation(line: 20, column: 37, scope: !9166)
!9201 = !DILocation(line: 35, column: 4, scope: !9166)
!9202 = !DILocation(line: 36, column: 4, scope: !9166)
!9203 = !DILocation(line: 35, column: 45, scope: !9166)
!9204 = !DILocation(line: 34, column: 38, scope: !9166)
!9205 = !DILocation(line: 34, column: 5, scope: !9166)
!9206 = !DILocation(line: 34, column: 53, scope: !9166)
!9207 = !DILocation(line: 37, column: 7, scope: !9208)
!9208 = distinct !DILexicalBlock(scope: !9166, file: !1564, line: 37, column: 7)
!9209 = !DILocation(line: 37, column: 7, scope: !9166)
!9210 = !DILocation(line: 39, column: 5, scope: !9211)
!9211 = distinct !DILexicalBlock(scope: !9208, file: !1564, line: 37, column: 23)
!9212 = !DILocation(line: 38, column: 39, scope: !9211)
!9213 = !DILocation(line: 38, column: 6, scope: !9211)
!9214 = !DILocation(line: 38, column: 56, scope: !9211)
!9215 = !DILocation(line: 40, column: 3, scope: !9211)
!9216 = !DILocation(line: 41, column: 7, scope: !9217)
!9217 = distinct !DILexicalBlock(scope: !9166, file: !1564, line: 41, column: 7)
!9218 = !DILocation(line: 41, column: 7, scope: !9166)
!9219 = !DILocation(line: 43, column: 5, scope: !9220)
!9220 = distinct !DILexicalBlock(scope: !9217, file: !1564, line: 41, column: 24)
!9221 = !DILocation(line: 43, column: 20, scope: !9220)
!9222 = !DILocation(line: 42, column: 39, scope: !9220)
!9223 = !DILocation(line: 42, column: 6, scope: !9220)
!9224 = !DILocation(line: 42, column: 57, scope: !9220)
!9225 = !DILocation(line: 44, column: 3, scope: !9220)
!9226 = !DILocation(line: 47, column: 2, scope: !9166)
!9227 = !DILocation(line: 14, column: 37, scope: !9161)
!9228 = !DILocation(line: 14, column: 2, scope: !9161)
!9229 = distinct !{!9229, !9164, !9230}
!9230 = !DILocation(line: 47, column: 2, scope: !9157)
!9231 = !DILocation(line: 48, column: 2, scope: !9133)
!9232 = distinct !DISubprogram(name: "CCM_SetRootDivider", scope: !9233, file: !9233, line: 43, type: !9234, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2456, retainedNodes: !223)
!9233 = !DIFile(filename: "modules/hal/nxp/imx/drivers/ccm_imx7d.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9234 = !DISubroutineType(types: !9235)
!9235 = !{null, !9236, !173, !173, !173}
!9236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9237, size: 32)
!9237 = !DIDerivedType(tag: DW_TAG_typedef, name: "CCM_Type", file: !566, line: 4575, baseType: !9238)
!9238 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !566, line: 4532, size: 390144, elements: !9239)
!9239 = !{!9240, !9241, !9242, !9243, !9244, !9245, !9253, !9254, !9262, !9263}
!9240 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0", scope: !9238, file: !566, line: 4533, baseType: !570, size: 32)
!9241 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0_SET", scope: !9238, file: !566, line: 4534, baseType: !570, size: 32, offset: 32)
!9242 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0_CLR", scope: !9238, file: !566, line: 4535, baseType: !570, size: 32, offset: 64)
!9243 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0_TOG", scope: !9238, file: !566, line: 4536, baseType: !570, size: 32, offset: 96)
!9244 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !9238, file: !566, line: 4537, baseType: !575, size: 16256, offset: 128)
!9245 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL", scope: !9238, file: !566, line: 4543, baseType: !9246, size: 4224, offset: 16384)
!9246 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9247, size: 4224, elements: !586)
!9247 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !9238, file: !566, line: 4538, size: 128, elements: !9248)
!9248 = !{!9249, !9250, !9251, !9252}
!9249 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL", scope: !9247, file: !566, line: 4539, baseType: !570, size: 32)
!9250 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL_SET", scope: !9247, file: !566, line: 4540, baseType: !570, size: 32, offset: 32)
!9251 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL_CLR", scope: !9247, file: !566, line: 4541, baseType: !570, size: 32, offset: 64)
!9252 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL_TOG", scope: !9247, file: !566, line: 4542, baseType: !570, size: 32, offset: 96)
!9253 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !9238, file: !566, line: 4544, baseType: !589, size: 110464, offset: 20608)
!9254 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR", scope: !9238, file: !566, line: 4550, baseType: !9255, size: 24448, offset: 131072)
!9255 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9256, size: 24448, elements: !600)
!9256 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !9238, file: !566, line: 4545, size: 128, elements: !9257)
!9257 = !{!9258, !9259, !9260, !9261}
!9258 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR", scope: !9256, file: !566, line: 4546, baseType: !570, size: 32)
!9259 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR_SET", scope: !9256, file: !566, line: 4547, baseType: !570, size: 32, offset: 32)
!9260 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR_CLR", scope: !9256, file: !566, line: 4548, baseType: !570, size: 32, offset: 64)
!9261 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR_TOG", scope: !9256, file: !566, line: 4549, baseType: !570, size: 32, offset: 96)
!9262 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_2", scope: !9238, file: !566, line: 4551, baseType: !603, size: 106624, offset: 155520)
!9263 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_TOG", scope: !9238, file: !566, line: 4574, baseType: !9264, size: 128000, offset: 262144)
!9264 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9265, size: 128000, elements: !634)
!9265 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !9238, file: !566, line: 4552, size: 1024, elements: !9266)
!9266 = !{!9267, !9268, !9269, !9270, !9271, !9272, !9273, !9274, !9275, !9276, !9277, !9278, !9279, !9280, !9281, !9282, !9283, !9284, !9285, !9286, !9287}
!9267 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT", scope: !9265, file: !566, line: 4553, baseType: !570, size: 32)
!9268 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT_SET", scope: !9265, file: !566, line: 4554, baseType: !570, size: 32, offset: 32)
!9269 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT_CLR", scope: !9265, file: !566, line: 4555, baseType: !570, size: 32, offset: 64)
!9270 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT_TOG", scope: !9265, file: !566, line: 4556, baseType: !570, size: 32, offset: 96)
!9271 = !DIDerivedType(tag: DW_TAG_member, name: "MISC", scope: !9265, file: !566, line: 4557, baseType: !570, size: 32, offset: 128)
!9272 = !DIDerivedType(tag: DW_TAG_member, name: "MISC_ROOT_SET", scope: !9265, file: !566, line: 4558, baseType: !570, size: 32, offset: 160)
!9273 = !DIDerivedType(tag: DW_TAG_member, name: "MISC_ROOT_CLR", scope: !9265, file: !566, line: 4559, baseType: !570, size: 32, offset: 192)
!9274 = !DIDerivedType(tag: DW_TAG_member, name: "MISC_ROOT_TOG", scope: !9265, file: !566, line: 4560, baseType: !570, size: 32, offset: 224)
!9275 = !DIDerivedType(tag: DW_TAG_member, name: "POST", scope: !9265, file: !566, line: 4561, baseType: !570, size: 32, offset: 256)
!9276 = !DIDerivedType(tag: DW_TAG_member, name: "POST_ROOT_SET", scope: !9265, file: !566, line: 4562, baseType: !570, size: 32, offset: 288)
!9277 = !DIDerivedType(tag: DW_TAG_member, name: "POST_ROOT_CLR", scope: !9265, file: !566, line: 4563, baseType: !570, size: 32, offset: 320)
!9278 = !DIDerivedType(tag: DW_TAG_member, name: "POST_ROOT_TOG", scope: !9265, file: !566, line: 4564, baseType: !570, size: 32, offset: 352)
!9279 = !DIDerivedType(tag: DW_TAG_member, name: "PRE", scope: !9265, file: !566, line: 4565, baseType: !570, size: 32, offset: 384)
!9280 = !DIDerivedType(tag: DW_TAG_member, name: "PRE_ROOT_SET", scope: !9265, file: !566, line: 4566, baseType: !570, size: 32, offset: 416)
!9281 = !DIDerivedType(tag: DW_TAG_member, name: "PRE_ROOT_CLR", scope: !9265, file: !566, line: 4567, baseType: !570, size: 32, offset: 448)
!9282 = !DIDerivedType(tag: DW_TAG_member, name: "PRE_ROOT_TOG", scope: !9265, file: !566, line: 4568, baseType: !570, size: 32, offset: 480)
!9283 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !9265, file: !566, line: 4569, baseType: !627, size: 384, offset: 512)
!9284 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL", scope: !9265, file: !566, line: 4570, baseType: !570, size: 32, offset: 896)
!9285 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_SET", scope: !9265, file: !566, line: 4571, baseType: !570, size: 32, offset: 928)
!9286 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_CLR", scope: !9265, file: !566, line: 4572, baseType: !570, size: 32, offset: 960)
!9287 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_TOG", scope: !9265, file: !566, line: 4573, baseType: !570, size: 32, offset: 992)
!9288 = !DILocalVariable(name: "base", arg: 1, scope: !9232, file: !9233, line: 43, type: !9236)
!9289 = !DILocation(line: 43, column: 36, scope: !9232)
!9290 = !DILocalVariable(name: "ccmRoot", arg: 2, scope: !9232, file: !9233, line: 43, type: !173)
!9291 = !DILocation(line: 43, column: 51, scope: !9232)
!9292 = !DILocalVariable(name: "pre", arg: 3, scope: !9232, file: !9233, line: 43, type: !173)
!9293 = !DILocation(line: 43, column: 69, scope: !9232)
!9294 = !DILocalVariable(name: "post", arg: 4, scope: !9232, file: !9233, line: 43, type: !173)
!9295 = !DILocation(line: 43, column: 83, scope: !9232)
!9296 = !DILocation(line: 48, column: 25, scope: !9232)
!9297 = !DILocation(line: 48, column: 42, scope: !9232)
!9298 = !DILocation(line: 50, column: 24, scope: !9232)
!9299 = !DILocation(line: 49, column: 94, scope: !9232)
!9300 = !DILocation(line: 50, column: 56, scope: !9232)
!9301 = !DILocation(line: 50, column: 54, scope: !9232)
!9302 = !DILocation(line: 48, column: 5, scope: !9232)
!9303 = !DILocation(line: 48, column: 22, scope: !9232)
!9304 = !DILocation(line: 51, column: 1, scope: !9232)
!9305 = distinct !DISubprogram(name: "CCM_GetRootDivider", scope: !9233, file: !9233, line: 59, type: !9306, scopeLine: 60, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2456, retainedNodes: !223)
!9306 = !DISubroutineType(types: !9307)
!9307 = !{null, !9236, !173, !1251, !1251}
!9308 = !DILocalVariable(name: "base", arg: 1, scope: !9305, file: !9233, line: 59, type: !9236)
!9309 = !DILocation(line: 59, column: 36, scope: !9305)
!9310 = !DILocalVariable(name: "ccmRoot", arg: 2, scope: !9305, file: !9233, line: 59, type: !173)
!9311 = !DILocation(line: 59, column: 51, scope: !9305)
!9312 = !DILocalVariable(name: "pre", arg: 3, scope: !9305, file: !9233, line: 59, type: !1251)
!9313 = !DILocation(line: 59, column: 70, scope: !9305)
!9314 = !DILocalVariable(name: "post", arg: 4, scope: !9305, file: !9233, line: 59, type: !1251)
!9315 = !DILocation(line: 59, column: 85, scope: !9305)
!9316 = !DILocation(line: 63, column: 13, scope: !9305)
!9317 = !DILocation(line: 63, column: 30, scope: !9305)
!9318 = !DILocation(line: 63, column: 63, scope: !9305)
!9319 = !DILocation(line: 63, column: 6, scope: !9305)
!9320 = !DILocation(line: 63, column: 10, scope: !9305)
!9321 = !DILocation(line: 64, column: 14, scope: !9305)
!9322 = !DILocation(line: 64, column: 31, scope: !9305)
!9323 = !DILocation(line: 64, column: 65, scope: !9305)
!9324 = !DILocation(line: 64, column: 6, scope: !9305)
!9325 = !DILocation(line: 64, column: 11, scope: !9305)
!9326 = !DILocation(line: 65, column: 1, scope: !9305)
!9327 = distinct !DISubprogram(name: "CCM_UpdateRoot", scope: !9233, file: !9233, line: 73, type: !9328, scopeLine: 74, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2456, retainedNodes: !223)
!9328 = !DISubroutineType(types: !9329)
!9329 = !{null, !9236, !173, !173, !173, !173}
!9330 = !DILocalVariable(name: "base", arg: 1, scope: !9327, file: !9233, line: 73, type: !9236)
!9331 = !DILocation(line: 73, column: 32, scope: !9327)
!9332 = !DILocalVariable(name: "ccmRoot", arg: 2, scope: !9327, file: !9233, line: 73, type: !173)
!9333 = !DILocation(line: 73, column: 47, scope: !9327)
!9334 = !DILocalVariable(name: "mux", arg: 3, scope: !9327, file: !9233, line: 73, type: !173)
!9335 = !DILocation(line: 73, column: 65, scope: !9327)
!9336 = !DILocalVariable(name: "pre", arg: 4, scope: !9327, file: !9233, line: 73, type: !173)
!9337 = !DILocation(line: 73, column: 79, scope: !9327)
!9338 = !DILocalVariable(name: "post", arg: 5, scope: !9327, file: !9233, line: 73, type: !173)
!9339 = !DILocation(line: 73, column: 93, scope: !9327)
!9340 = !DILocation(line: 78, column: 25, scope: !9327)
!9341 = !DILocation(line: 78, column: 42, scope: !9327)
!9342 = !DILocation(line: 80, column: 24, scope: !9327)
!9343 = !DILocation(line: 79, column: 121, scope: !9327)
!9344 = !DILocation(line: 80, column: 51, scope: !9327)
!9345 = !DILocation(line: 80, column: 49, scope: !9327)
!9346 = !DILocation(line: 80, column: 83, scope: !9327)
!9347 = !DILocation(line: 80, column: 81, scope: !9327)
!9348 = !DILocation(line: 78, column: 5, scope: !9327)
!9349 = !DILocation(line: 78, column: 22, scope: !9327)
!9350 = !DILocation(line: 81, column: 1, scope: !9327)
!9351 = distinct !DISubprogram(name: "CCM_ANALOG_GetArmPllFreq", scope: !9352, file: !9352, line: 43, type: !9353, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2459, retainedNodes: !223)
!9352 = !DIFile(filename: "modules/hal/nxp/imx/drivers/ccm_analog_imx7d.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9353 = !DISubroutineType(types: !9354)
!9354 = !{!173, !2472}
!9355 = !DILocalVariable(name: "base", arg: 1, scope: !9351, file: !9352, line: 43, type: !2472)
!9356 = !DILocation(line: 43, column: 53, scope: !9351)
!9357 = !DILocation(line: 45, column: 34, scope: !9358)
!9358 = distinct !DILexicalBlock(scope: !9351, file: !9352, line: 45, column: 9)
!9359 = !DILocation(line: 45, column: 9, scope: !9358)
!9360 = !DILocation(line: 45, column: 9, scope: !9351)
!9361 = !DILocation(line: 46, column: 9, scope: !9358)
!9362 = !DILocation(line: 48, column: 26, scope: !9351)
!9363 = !DILocation(line: 48, column: 45, scope: !9351)
!9364 = !DILocation(line: 48, column: 23, scope: !9351)
!9365 = !DILocation(line: 48, column: 5, scope: !9351)
!9366 = !DILocation(line: 49, column: 1, scope: !9351)
!9367 = distinct !DISubprogram(name: "CCM_ANALOG_IsPllBypassed", scope: !2463, file: !2463, line: 220, type: !9368, scopeLine: 221, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2459, retainedNodes: !223)
!9368 = !DISubroutineType(types: !9369)
!9369 = !{!743, !2472, !173}
!9370 = !DILocalVariable(name: "base", arg: 1, scope: !9367, file: !2463, line: 220, type: !2472)
!9371 = !DILocation(line: 220, column: 63, scope: !9367)
!9372 = !DILocalVariable(name: "pllControl", arg: 2, scope: !9367, file: !2463, line: 220, type: !173)
!9373 = !DILocation(line: 220, column: 78, scope: !9367)
!9374 = !DILocation(line: 222, column: 19, scope: !9367)
!9375 = !DILocation(line: 222, column: 58, scope: !9367)
!9376 = !DILocation(line: 222, column: 12, scope: !9367)
!9377 = !DILocation(line: 222, column: 5, scope: !9367)
!9378 = distinct !DISubprogram(name: "CCM_ANALOG_GetSysPllFreq", scope: !9352, file: !9352, line: 57, type: !9353, scopeLine: 58, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2459, retainedNodes: !223)
!9379 = !DILocalVariable(name: "base", arg: 1, scope: !9378, file: !9352, line: 57, type: !2472)
!9380 = !DILocation(line: 57, column: 53, scope: !9378)
!9381 = !DILocation(line: 59, column: 34, scope: !9382)
!9382 = distinct !DILexicalBlock(scope: !9378, file: !9352, line: 59, column: 9)
!9383 = !DILocation(line: 59, column: 9, scope: !9382)
!9384 = !DILocation(line: 59, column: 9, scope: !9378)
!9385 = !DILocation(line: 60, column: 9, scope: !9382)
!9386 = !DILocation(line: 62, column: 9, scope: !9387)
!9387 = distinct !DILexicalBlock(scope: !9378, file: !9352, line: 62, column: 9)
!9388 = !DILocation(line: 62, column: 28, scope: !9387)
!9389 = !DILocation(line: 62, column: 9, scope: !9378)
!9390 = !DILocation(line: 63, column: 9, scope: !9387)
!9391 = !DILocation(line: 65, column: 9, scope: !9387)
!9392 = !DILocation(line: 66, column: 1, scope: !9378)
!9393 = distinct !DISubprogram(name: "CCM_ANALOG_GetDdrPllFreq", scope: !9352, file: !9352, line: 74, type: !9353, scopeLine: 75, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2459, retainedNodes: !223)
!9394 = !DILocalVariable(name: "base", arg: 1, scope: !9393, file: !9352, line: 74, type: !2472)
!9395 = !DILocation(line: 74, column: 53, scope: !9393)
!9396 = !DILocalVariable(name: "divSelect", scope: !9393, file: !9352, line: 76, type: !156)
!9397 = !DILocation(line: 76, column: 13, scope: !9393)
!9398 = !DILocalVariable(name: "divTestSelect", scope: !9393, file: !9352, line: 76, type: !156)
!9399 = !DILocation(line: 76, column: 24, scope: !9393)
!9400 = !DILocalVariable(name: "factor", scope: !9393, file: !9352, line: 77, type: !2535)
!9401 = !DILocation(line: 77, column: 11, scope: !9393)
!9402 = !DILocation(line: 79, column: 34, scope: !9403)
!9403 = distinct !DILexicalBlock(scope: !9393, file: !9352, line: 79, column: 9)
!9404 = !DILocation(line: 79, column: 9, scope: !9403)
!9405 = !DILocation(line: 79, column: 9, scope: !9393)
!9406 = !DILocation(line: 80, column: 9, scope: !9403)
!9407 = !DILocation(line: 82, column: 17, scope: !9393)
!9408 = !DILocation(line: 82, column: 52, scope: !9393)
!9409 = !DILocation(line: 82, column: 15, scope: !9393)
!9410 = !DILocation(line: 83, column: 22, scope: !9393)
!9411 = !DILocation(line: 83, column: 57, scope: !9393)
!9412 = !DILocation(line: 83, column: 100, scope: !9393)
!9413 = !DILocation(line: 83, column: 21, scope: !9393)
!9414 = !DILocation(line: 83, column: 19, scope: !9393)
!9415 = !DILocation(line: 86, column: 13, scope: !9393)
!9416 = !DILocation(line: 86, column: 5, scope: !9393)
!9417 = !DILocation(line: 89, column: 27, scope: !9418)
!9418 = distinct !DILexicalBlock(scope: !9393, file: !9352, line: 87, column: 5)
!9419 = !DILocation(line: 90, column: 13, scope: !9418)
!9420 = !DILocation(line: 92, column: 27, scope: !9418)
!9421 = !DILocation(line: 93, column: 13, scope: !9418)
!9422 = !DILocation(line: 96, column: 27, scope: !9418)
!9423 = !DILocation(line: 97, column: 13, scope: !9418)
!9424 = !DILocation(line: 100, column: 9, scope: !9425)
!9425 = distinct !DILexicalBlock(scope: !9393, file: !9352, line: 100, column: 9)
!9426 = !DILocation(line: 100, column: 41, scope: !9425)
!9427 = !DILocation(line: 100, column: 9, scope: !9393)
!9428 = !DILocation(line: 102, column: 27, scope: !9429)
!9429 = distinct !DILexicalBlock(scope: !9425, file: !9352, line: 101, column: 5)
!9430 = !DILocation(line: 102, column: 59, scope: !9429)
!9431 = !DILocation(line: 102, column: 19, scope: !9429)
!9432 = !DILocation(line: 103, column: 27, scope: !9429)
!9433 = !DILocation(line: 103, column: 62, scope: !9429)
!9434 = !DILocation(line: 103, column: 19, scope: !9429)
!9435 = !DILocation(line: 102, column: 95, scope: !9429)
!9436 = !DILocation(line: 104, column: 27, scope: !9429)
!9437 = !DILocation(line: 104, column: 60, scope: !9429)
!9438 = !DILocation(line: 104, column: 19, scope: !9429)
!9439 = !DILocation(line: 103, column: 98, scope: !9429)
!9440 = !DILocation(line: 102, column: 16, scope: !9429)
!9441 = !DILocation(line: 105, column: 42, scope: !9429)
!9442 = !DILocation(line: 105, column: 39, scope: !9429)
!9443 = !DILocation(line: 105, column: 27, scope: !9429)
!9444 = !DILocation(line: 105, column: 60, scope: !9429)
!9445 = !DILocation(line: 105, column: 72, scope: !9429)
!9446 = !DILocation(line: 105, column: 70, scope: !9429)
!9447 = !DILocation(line: 105, column: 57, scope: !9429)
!9448 = !DILocation(line: 105, column: 16, scope: !9429)
!9449 = !DILocation(line: 105, column: 9, scope: !9429)
!9450 = !DILocation(line: 109, column: 31, scope: !9451)
!9451 = distinct !DILexicalBlock(scope: !9425, file: !9352, line: 108, column: 5)
!9452 = !DILocation(line: 109, column: 28, scope: !9451)
!9453 = !DILocation(line: 109, column: 48, scope: !9451)
!9454 = !DILocation(line: 109, column: 46, scope: !9451)
!9455 = !DILocation(line: 109, column: 9, scope: !9451)
!9456 = !DILocation(line: 111, column: 1, scope: !9393)
!9457 = distinct !DISubprogram(name: "CCM_ANALOG_GetEnetPllFreq", scope: !9352, file: !9352, line: 119, type: !9353, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2459, retainedNodes: !223)
!9458 = !DILocalVariable(name: "base", arg: 1, scope: !9457, file: !9352, line: 119, type: !2472)
!9459 = !DILocation(line: 119, column: 54, scope: !9457)
!9460 = !DILocation(line: 121, column: 34, scope: !9461)
!9461 = distinct !DILexicalBlock(scope: !9457, file: !9352, line: 121, column: 9)
!9462 = !DILocation(line: 121, column: 9, scope: !9461)
!9463 = !DILocation(line: 121, column: 9, scope: !9457)
!9464 = !DILocation(line: 122, column: 9, scope: !9461)
!9465 = !DILocation(line: 124, column: 5, scope: !9457)
!9466 = !DILocation(line: 125, column: 1, scope: !9457)
!9467 = distinct !DISubprogram(name: "CCM_ANALOG_GetAudioPllFreq", scope: !9352, file: !9352, line: 133, type: !9353, scopeLine: 134, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2459, retainedNodes: !223)
!9468 = !DILocalVariable(name: "base", arg: 1, scope: !9467, file: !9352, line: 133, type: !2472)
!9469 = !DILocation(line: 133, column: 55, scope: !9467)
!9470 = !DILocalVariable(name: "divSelect", scope: !9467, file: !9352, line: 135, type: !156)
!9471 = !DILocation(line: 135, column: 13, scope: !9467)
!9472 = !DILocalVariable(name: "divPostSelect", scope: !9467, file: !9352, line: 135, type: !156)
!9473 = !DILocation(line: 135, column: 24, scope: !9467)
!9474 = !DILocalVariable(name: "divTestSelect", scope: !9467, file: !9352, line: 135, type: !156)
!9475 = !DILocation(line: 135, column: 39, scope: !9467)
!9476 = !DILocalVariable(name: "factor", scope: !9467, file: !9352, line: 136, type: !2535)
!9477 = !DILocation(line: 136, column: 11, scope: !9467)
!9478 = !DILocation(line: 138, column: 34, scope: !9479)
!9479 = distinct !DILexicalBlock(scope: !9467, file: !9352, line: 138, column: 9)
!9480 = !DILocation(line: 138, column: 9, scope: !9479)
!9481 = !DILocation(line: 138, column: 9, scope: !9467)
!9482 = !DILocation(line: 139, column: 9, scope: !9479)
!9483 = !DILocation(line: 141, column: 17, scope: !9467)
!9484 = !DILocation(line: 141, column: 54, scope: !9467)
!9485 = !DILocation(line: 141, column: 15, scope: !9467)
!9486 = !DILocation(line: 142, column: 22, scope: !9467)
!9487 = !DILocation(line: 142, column: 59, scope: !9467)
!9488 = !DILocation(line: 142, column: 101, scope: !9467)
!9489 = !DILocation(line: 142, column: 21, scope: !9467)
!9490 = !DILocation(line: 142, column: 19, scope: !9467)
!9491 = !DILocation(line: 144, column: 22, scope: !9467)
!9492 = !DILocation(line: 144, column: 59, scope: !9467)
!9493 = !DILocation(line: 144, column: 104, scope: !9467)
!9494 = !DILocation(line: 144, column: 21, scope: !9467)
!9495 = !DILocation(line: 144, column: 19, scope: !9467)
!9496 = !DILocation(line: 147, column: 13, scope: !9467)
!9497 = !DILocation(line: 147, column: 5, scope: !9467)
!9498 = !DILocation(line: 151, column: 27, scope: !9499)
!9499 = distinct !DILexicalBlock(scope: !9467, file: !9352, line: 148, column: 5)
!9500 = !DILocation(line: 152, column: 13, scope: !9499)
!9501 = !DILocation(line: 154, column: 27, scope: !9499)
!9502 = !DILocation(line: 155, column: 13, scope: !9499)
!9503 = !DILocation(line: 157, column: 27, scope: !9499)
!9504 = !DILocation(line: 158, column: 13, scope: !9499)
!9505 = !DILocation(line: 161, column: 13, scope: !9467)
!9506 = !DILocation(line: 161, column: 5, scope: !9467)
!9507 = !DILocation(line: 164, column: 27, scope: !9508)
!9508 = distinct !DILexicalBlock(scope: !9467, file: !9352, line: 162, column: 5)
!9509 = !DILocation(line: 165, column: 13, scope: !9508)
!9510 = !DILocation(line: 167, column: 27, scope: !9508)
!9511 = !DILocation(line: 168, column: 13, scope: !9508)
!9512 = !DILocation(line: 171, column: 27, scope: !9508)
!9513 = !DILocation(line: 172, column: 13, scope: !9508)
!9514 = !DILocation(line: 175, column: 9, scope: !9515)
!9515 = distinct !DILexicalBlock(scope: !9467, file: !9352, line: 175, column: 9)
!9516 = !DILocation(line: 175, column: 43, scope: !9515)
!9517 = !DILocation(line: 175, column: 9, scope: !9467)
!9518 = !DILocation(line: 177, column: 27, scope: !9519)
!9519 = distinct !DILexicalBlock(scope: !9515, file: !9352, line: 176, column: 5)
!9520 = !DILocation(line: 177, column: 61, scope: !9519)
!9521 = !DILocation(line: 177, column: 19, scope: !9519)
!9522 = !DILocation(line: 178, column: 27, scope: !9519)
!9523 = !DILocation(line: 178, column: 64, scope: !9519)
!9524 = !DILocation(line: 178, column: 19, scope: !9519)
!9525 = !DILocation(line: 177, column: 99, scope: !9519)
!9526 = !DILocation(line: 179, column: 27, scope: !9519)
!9527 = !DILocation(line: 179, column: 62, scope: !9519)
!9528 = !DILocation(line: 179, column: 19, scope: !9519)
!9529 = !DILocation(line: 178, column: 102, scope: !9519)
!9530 = !DILocation(line: 177, column: 16, scope: !9519)
!9531 = !DILocation(line: 180, column: 43, scope: !9519)
!9532 = !DILocation(line: 180, column: 40, scope: !9519)
!9533 = !DILocation(line: 180, column: 61, scope: !9519)
!9534 = !DILocation(line: 180, column: 58, scope: !9519)
!9535 = !DILocation(line: 180, column: 27, scope: !9519)
!9536 = !DILocation(line: 180, column: 79, scope: !9519)
!9537 = !DILocation(line: 180, column: 91, scope: !9519)
!9538 = !DILocation(line: 180, column: 89, scope: !9519)
!9539 = !DILocation(line: 180, column: 76, scope: !9519)
!9540 = !DILocation(line: 180, column: 16, scope: !9519)
!9541 = !DILocation(line: 180, column: 9, scope: !9519)
!9542 = !DILocation(line: 184, column: 32, scope: !9543)
!9543 = distinct !DILexicalBlock(scope: !9515, file: !9352, line: 183, column: 5)
!9544 = !DILocation(line: 184, column: 29, scope: !9543)
!9545 = !DILocation(line: 184, column: 50, scope: !9543)
!9546 = !DILocation(line: 184, column: 47, scope: !9543)
!9547 = !DILocation(line: 184, column: 67, scope: !9543)
!9548 = !DILocation(line: 184, column: 65, scope: !9543)
!9549 = !DILocation(line: 184, column: 9, scope: !9543)
!9550 = !DILocation(line: 186, column: 1, scope: !9467)
!9551 = distinct !DISubprogram(name: "CCM_ANALOG_GetVideoPllFreq", scope: !9352, file: !9352, line: 194, type: !9353, scopeLine: 195, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2459, retainedNodes: !223)
!9552 = !DILocalVariable(name: "base", arg: 1, scope: !9551, file: !9352, line: 194, type: !2472)
!9553 = !DILocation(line: 194, column: 55, scope: !9551)
!9554 = !DILocalVariable(name: "divSelect", scope: !9551, file: !9352, line: 196, type: !156)
!9555 = !DILocation(line: 196, column: 13, scope: !9551)
!9556 = !DILocalVariable(name: "divPostSelect", scope: !9551, file: !9352, line: 196, type: !156)
!9557 = !DILocation(line: 196, column: 24, scope: !9551)
!9558 = !DILocalVariable(name: "divTestSelect", scope: !9551, file: !9352, line: 196, type: !156)
!9559 = !DILocation(line: 196, column: 39, scope: !9551)
!9560 = !DILocalVariable(name: "factor", scope: !9551, file: !9352, line: 197, type: !2535)
!9561 = !DILocation(line: 197, column: 11, scope: !9551)
!9562 = !DILocation(line: 199, column: 34, scope: !9563)
!9563 = distinct !DILexicalBlock(scope: !9551, file: !9352, line: 199, column: 9)
!9564 = !DILocation(line: 199, column: 9, scope: !9563)
!9565 = !DILocation(line: 199, column: 9, scope: !9551)
!9566 = !DILocation(line: 200, column: 9, scope: !9563)
!9567 = !DILocation(line: 202, column: 17, scope: !9551)
!9568 = !DILocation(line: 202, column: 54, scope: !9551)
!9569 = !DILocation(line: 202, column: 15, scope: !9551)
!9570 = !DILocation(line: 203, column: 22, scope: !9551)
!9571 = !DILocation(line: 203, column: 59, scope: !9551)
!9572 = !DILocation(line: 203, column: 101, scope: !9551)
!9573 = !DILocation(line: 203, column: 21, scope: !9551)
!9574 = !DILocation(line: 203, column: 19, scope: !9551)
!9575 = !DILocation(line: 205, column: 22, scope: !9551)
!9576 = !DILocation(line: 205, column: 59, scope: !9551)
!9577 = !DILocation(line: 205, column: 104, scope: !9551)
!9578 = !DILocation(line: 205, column: 21, scope: !9551)
!9579 = !DILocation(line: 205, column: 19, scope: !9551)
!9580 = !DILocation(line: 208, column: 13, scope: !9551)
!9581 = !DILocation(line: 208, column: 5, scope: !9551)
!9582 = !DILocation(line: 212, column: 27, scope: !9583)
!9583 = distinct !DILexicalBlock(scope: !9551, file: !9352, line: 209, column: 5)
!9584 = !DILocation(line: 213, column: 13, scope: !9583)
!9585 = !DILocation(line: 215, column: 27, scope: !9583)
!9586 = !DILocation(line: 216, column: 13, scope: !9583)
!9587 = !DILocation(line: 218, column: 27, scope: !9583)
!9588 = !DILocation(line: 219, column: 13, scope: !9583)
!9589 = !DILocation(line: 222, column: 13, scope: !9551)
!9590 = !DILocation(line: 222, column: 5, scope: !9551)
!9591 = !DILocation(line: 225, column: 27, scope: !9592)
!9592 = distinct !DILexicalBlock(scope: !9551, file: !9352, line: 223, column: 5)
!9593 = !DILocation(line: 226, column: 13, scope: !9592)
!9594 = !DILocation(line: 228, column: 27, scope: !9592)
!9595 = !DILocation(line: 229, column: 13, scope: !9592)
!9596 = !DILocation(line: 232, column: 27, scope: !9592)
!9597 = !DILocation(line: 233, column: 13, scope: !9592)
!9598 = !DILocation(line: 236, column: 9, scope: !9599)
!9599 = distinct !DILexicalBlock(scope: !9551, file: !9352, line: 236, column: 9)
!9600 = !DILocation(line: 236, column: 43, scope: !9599)
!9601 = !DILocation(line: 236, column: 9, scope: !9551)
!9602 = !DILocation(line: 238, column: 27, scope: !9603)
!9603 = distinct !DILexicalBlock(scope: !9599, file: !9352, line: 237, column: 5)
!9604 = !DILocation(line: 238, column: 61, scope: !9603)
!9605 = !DILocation(line: 238, column: 19, scope: !9603)
!9606 = !DILocation(line: 239, column: 27, scope: !9603)
!9607 = !DILocation(line: 239, column: 64, scope: !9603)
!9608 = !DILocation(line: 239, column: 19, scope: !9603)
!9609 = !DILocation(line: 238, column: 99, scope: !9603)
!9610 = !DILocation(line: 240, column: 27, scope: !9603)
!9611 = !DILocation(line: 240, column: 62, scope: !9603)
!9612 = !DILocation(line: 240, column: 19, scope: !9603)
!9613 = !DILocation(line: 239, column: 102, scope: !9603)
!9614 = !DILocation(line: 238, column: 16, scope: !9603)
!9615 = !DILocation(line: 241, column: 43, scope: !9603)
!9616 = !DILocation(line: 241, column: 40, scope: !9603)
!9617 = !DILocation(line: 241, column: 61, scope: !9603)
!9618 = !DILocation(line: 241, column: 58, scope: !9603)
!9619 = !DILocation(line: 241, column: 27, scope: !9603)
!9620 = !DILocation(line: 241, column: 79, scope: !9603)
!9621 = !DILocation(line: 241, column: 91, scope: !9603)
!9622 = !DILocation(line: 241, column: 89, scope: !9603)
!9623 = !DILocation(line: 241, column: 76, scope: !9603)
!9624 = !DILocation(line: 241, column: 16, scope: !9603)
!9625 = !DILocation(line: 241, column: 9, scope: !9603)
!9626 = !DILocation(line: 245, column: 32, scope: !9627)
!9627 = distinct !DILexicalBlock(scope: !9599, file: !9352, line: 244, column: 5)
!9628 = !DILocation(line: 245, column: 29, scope: !9627)
!9629 = !DILocation(line: 245, column: 50, scope: !9627)
!9630 = !DILocation(line: 245, column: 47, scope: !9627)
!9631 = !DILocation(line: 245, column: 67, scope: !9627)
!9632 = !DILocation(line: 245, column: 65, scope: !9627)
!9633 = !DILocation(line: 245, column: 9, scope: !9627)
!9634 = !DILocation(line: 247, column: 1, scope: !9551)
!9635 = distinct !DISubprogram(name: "CCM_ANALOG_GetPfdFreq", scope: !9352, file: !9352, line: 255, type: !9636, scopeLine: 256, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2459, retainedNodes: !223)
!9636 = !DISubroutineType(types: !9637)
!9637 = !{!173, !2472, !173}
!9638 = !DILocalVariable(name: "base", arg: 1, scope: !9635, file: !9352, line: 255, type: !2472)
!9639 = !DILocation(line: 255, column: 50, scope: !9635)
!9640 = !DILocalVariable(name: "pfdFrac", arg: 2, scope: !9635, file: !9352, line: 255, type: !173)
!9641 = !DILocation(line: 255, column: 65, scope: !9635)
!9642 = !DILocalVariable(name: "main", scope: !9635, file: !9352, line: 257, type: !173)
!9643 = !DILocation(line: 257, column: 14, scope: !9635)
!9644 = !DILocalVariable(name: "frac", scope: !9635, file: !9352, line: 257, type: !173)
!9645 = !DILocation(line: 257, column: 20, scope: !9635)
!9646 = !DILocation(line: 262, column: 37, scope: !9635)
!9647 = !DILocation(line: 262, column: 12, scope: !9635)
!9648 = !DILocation(line: 262, column: 10, scope: !9635)
!9649 = !DILocation(line: 263, column: 34, scope: !9635)
!9650 = !DILocation(line: 263, column: 40, scope: !9635)
!9651 = !DILocation(line: 263, column: 12, scope: !9635)
!9652 = !DILocation(line: 263, column: 10, scope: !9635)
!9653 = !DILocation(line: 265, column: 12, scope: !9635)
!9654 = !DILocation(line: 265, column: 19, scope: !9635)
!9655 = !DILocation(line: 265, column: 17, scope: !9635)
!9656 = !DILocation(line: 265, column: 24, scope: !9635)
!9657 = !DILocation(line: 265, column: 5, scope: !9635)
!9658 = distinct !DISubprogram(name: "CCM_ANALOG_GetPfdFrac", scope: !2463, file: !2463, line: 373, type: !9636, scopeLine: 374, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2459, retainedNodes: !223)
!9659 = !DILocalVariable(name: "base", arg: 1, scope: !9658, file: !2463, line: 373, type: !2472)
!9660 = !DILocation(line: 373, column: 64, scope: !9658)
!9661 = !DILocalVariable(name: "pfdFrac", arg: 2, scope: !9658, file: !2463, line: 373, type: !173)
!9662 = !DILocation(line: 373, column: 79, scope: !9658)
!9663 = !DILocation(line: 375, column: 13, scope: !9658)
!9664 = !DILocation(line: 375, column: 52, scope: !9658)
!9665 = !DILocation(line: 375, column: 49, scope: !9658)
!9666 = !DILocation(line: 375, column: 85, scope: !9658)
!9667 = !DILocation(line: 375, column: 5, scope: !9658)
!9668 = distinct !DISubprogram(name: "GPIO_Init", scope: !9669, file: !9669, line: 47, type: !9670, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2536, retainedNodes: !223)
!9669 = !DIFile(filename: "modules/hal/nxp/imx/drivers/gpio_imx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9670 = !DISubroutineType(types: !9671)
!9671 = !{null, !9672, !9684}
!9672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9673, size: 32)
!9673 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_Type", file: !566, line: 19729, baseType: !9674)
!9674 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !566, line: 19720, size: 256, elements: !9675)
!9675 = !{!9676, !9677, !9678, !9679, !9680, !9681, !9682, !9683}
!9676 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !9674, file: !566, line: 19721, baseType: !570, size: 32)
!9677 = !DIDerivedType(tag: DW_TAG_member, name: "GDIR", scope: !9674, file: !566, line: 19722, baseType: !570, size: 32, offset: 32)
!9678 = !DIDerivedType(tag: DW_TAG_member, name: "PSR", scope: !9674, file: !566, line: 19723, baseType: !641, size: 32, offset: 64)
!9679 = !DIDerivedType(tag: DW_TAG_member, name: "ICR1", scope: !9674, file: !566, line: 19724, baseType: !570, size: 32, offset: 96)
!9680 = !DIDerivedType(tag: DW_TAG_member, name: "ICR2", scope: !9674, file: !566, line: 19725, baseType: !570, size: 32, offset: 128)
!9681 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !9674, file: !566, line: 19726, baseType: !570, size: 32, offset: 160)
!9682 = !DIDerivedType(tag: DW_TAG_member, name: "ISR", scope: !9674, file: !566, line: 19727, baseType: !570, size: 32, offset: 192)
!9683 = !DIDerivedType(tag: DW_TAG_member, name: "EDGE_SEL", scope: !9674, file: !566, line: 19728, baseType: !570, size: 32, offset: 224)
!9684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9685, size: 32)
!9685 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9686)
!9686 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_init_config_t", file: !839, line: 78, baseType: !9687)
!9687 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_gpio_init_config", file: !839, line: 73, size: 96, elements: !9688)
!9688 = !{!9689, !9690, !9692}
!9689 = !DIDerivedType(tag: DW_TAG_member, name: "pin", scope: !9687, file: !839, line: 75, baseType: !173, size: 32)
!9690 = !DIDerivedType(tag: DW_TAG_member, name: "direction", scope: !9687, file: !839, line: 76, baseType: !9691, size: 32, offset: 32)
!9691 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_direction_t", file: !839, line: 53, baseType: !2539)
!9692 = !DIDerivedType(tag: DW_TAG_member, name: "interruptMode", scope: !9687, file: !839, line: 77, baseType: !9693, size: 32, offset: 64)
!9693 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_interrupt_mode_t", file: !839, line: 63, baseType: !2543)
!9694 = !DILocalVariable(name: "base", arg: 1, scope: !9668, file: !9669, line: 47, type: !9672)
!9695 = !DILocation(line: 47, column: 27, scope: !9668)
!9696 = !DILocalVariable(name: "initConfig", arg: 2, scope: !9668, file: !9669, line: 47, type: !9684)
!9697 = !DILocation(line: 47, column: 59, scope: !9668)
!9698 = !DILocalVariable(name: "pin", scope: !9668, file: !9669, line: 49, type: !173)
!9699 = !DILocation(line: 49, column: 14, scope: !9668)
!9700 = !DILocalVariable(name: "icr", scope: !9668, file: !9669, line: 50, type: !690)
!9701 = !DILocation(line: 50, column: 24, scope: !9668)
!9702 = !DILocation(line: 53, column: 5, scope: !9668)
!9703 = !DILocation(line: 53, column: 24, scope: !9668)
!9704 = !DILocation(line: 54, column: 2, scope: !9668)
!9705 = !DILocation(line: 54, column: 26, scope: !9668)
!9706 = !DILocation(line: 57, column: 11, scope: !9668)
!9707 = !DILocation(line: 57, column: 23, scope: !9668)
!9708 = !DILocation(line: 57, column: 9, scope: !9668)
!9709 = !DILocation(line: 60, column: 9, scope: !9710)
!9710 = distinct !DILexicalBlock(scope: !9668, file: !9669, line: 60, column: 9)
!9711 = !DILocation(line: 60, column: 21, scope: !9710)
!9712 = !DILocation(line: 60, column: 31, scope: !9710)
!9713 = !DILocation(line: 60, column: 9, scope: !9668)
!9714 = !DILocation(line: 61, column: 39, scope: !9710)
!9715 = !DILocation(line: 61, column: 36, scope: !9710)
!9716 = !DILocation(line: 61, column: 9, scope: !9710)
!9717 = !DILocation(line: 61, column: 29, scope: !9710)
!9718 = !DILocation(line: 63, column: 40, scope: !9710)
!9719 = !DILocation(line: 63, column: 37, scope: !9710)
!9720 = !DILocation(line: 63, column: 32, scope: !9710)
!9721 = !DILocation(line: 63, column: 9, scope: !9710)
!9722 = !DILocation(line: 63, column: 29, scope: !9710)
!9723 = !DILocation(line: 66, column: 8, scope: !9724)
!9724 = distinct !DILexicalBlock(scope: !9668, file: !9669, line: 66, column: 8)
!9725 = !DILocation(line: 66, column: 12, scope: !9724)
!9726 = !DILocation(line: 66, column: 8, scope: !9668)
!9727 = !DILocation(line: 67, column: 16, scope: !9724)
!9728 = !DILocation(line: 67, column: 13, scope: !9724)
!9729 = !DILocation(line: 67, column: 9, scope: !9724)
!9730 = !DILocation(line: 70, column: 16, scope: !9731)
!9731 = distinct !DILexicalBlock(scope: !9724, file: !9669, line: 69, column: 5)
!9732 = !DILocation(line: 70, column: 13, scope: !9731)
!9733 = !DILocation(line: 71, column: 13, scope: !9731)
!9734 = !DILocation(line: 73, column: 12, scope: !9668)
!9735 = !DILocation(line: 73, column: 24, scope: !9668)
!9736 = !DILocation(line: 73, column: 5, scope: !9668)
!9737 = !DILocation(line: 77, column: 31, scope: !9738)
!9738 = distinct !DILexicalBlock(scope: !9739, file: !9669, line: 76, column: 9)
!9739 = distinct !DILexicalBlock(scope: !9668, file: !9669, line: 74, column: 5)
!9740 = !DILocation(line: 77, column: 30, scope: !9738)
!9741 = !DILocation(line: 77, column: 26, scope: !9738)
!9742 = !DILocation(line: 77, column: 21, scope: !9738)
!9743 = !DILocation(line: 77, column: 14, scope: !9738)
!9744 = !DILocation(line: 77, column: 18, scope: !9738)
!9745 = !DILocation(line: 78, column: 13, scope: !9738)
!9746 = !DILocation(line: 82, column: 22, scope: !9747)
!9747 = distinct !DILexicalBlock(scope: !9739, file: !9669, line: 81, column: 9)
!9748 = !DILocation(line: 82, column: 21, scope: !9747)
!9749 = !DILocation(line: 82, column: 39, scope: !9747)
!9750 = !DILocation(line: 82, column: 38, scope: !9747)
!9751 = !DILocation(line: 82, column: 34, scope: !9747)
!9752 = !DILocation(line: 82, column: 29, scope: !9747)
!9753 = !DILocation(line: 82, column: 26, scope: !9747)
!9754 = !DILocation(line: 82, column: 58, scope: !9747)
!9755 = !DILocation(line: 82, column: 57, scope: !9747)
!9756 = !DILocation(line: 82, column: 53, scope: !9747)
!9757 = !DILocation(line: 82, column: 47, scope: !9747)
!9758 = !DILocation(line: 82, column: 14, scope: !9747)
!9759 = !DILocation(line: 82, column: 18, scope: !9747)
!9760 = !DILocation(line: 83, column: 13, scope: !9747)
!9761 = !DILocation(line: 87, column: 22, scope: !9762)
!9762 = distinct !DILexicalBlock(scope: !9739, file: !9669, line: 86, column: 9)
!9763 = !DILocation(line: 87, column: 21, scope: !9762)
!9764 = !DILocation(line: 87, column: 39, scope: !9762)
!9765 = !DILocation(line: 87, column: 38, scope: !9762)
!9766 = !DILocation(line: 87, column: 34, scope: !9762)
!9767 = !DILocation(line: 87, column: 29, scope: !9762)
!9768 = !DILocation(line: 87, column: 26, scope: !9762)
!9769 = !DILocation(line: 87, column: 58, scope: !9762)
!9770 = !DILocation(line: 87, column: 57, scope: !9762)
!9771 = !DILocation(line: 87, column: 53, scope: !9762)
!9772 = !DILocation(line: 87, column: 47, scope: !9762)
!9773 = !DILocation(line: 87, column: 14, scope: !9762)
!9774 = !DILocation(line: 87, column: 18, scope: !9762)
!9775 = !DILocation(line: 88, column: 13, scope: !9762)
!9776 = !DILocation(line: 92, column: 30, scope: !9777)
!9777 = distinct !DILexicalBlock(scope: !9739, file: !9669, line: 91, column: 9)
!9778 = !DILocation(line: 92, column: 29, scope: !9777)
!9779 = !DILocation(line: 92, column: 25, scope: !9777)
!9780 = !DILocation(line: 92, column: 14, scope: !9777)
!9781 = !DILocation(line: 92, column: 18, scope: !9777)
!9782 = !DILocation(line: 93, column: 13, scope: !9777)
!9783 = !DILocation(line: 97, column: 13, scope: !9784)
!9784 = distinct !DILexicalBlock(scope: !9739, file: !9669, line: 96, column: 9)
!9785 = !DILocation(line: 100, column: 1, scope: !9668)
!9786 = distinct !DISubprogram(name: "GPIO_WritePinOutput", scope: !9669, file: !9669, line: 111, type: !9787, scopeLine: 112, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2536, retainedNodes: !223)
!9787 = !DISubroutineType(types: !9788)
!9788 = !{null, !9672, !173, !9789}
!9789 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_action_t", file: !839, line: 70, baseType: !838)
!9790 = !DILocalVariable(name: "base", arg: 1, scope: !9786, file: !9669, line: 111, type: !9672)
!9791 = !DILocation(line: 111, column: 37, scope: !9786)
!9792 = !DILocalVariable(name: "pin", arg: 2, scope: !9786, file: !9669, line: 111, type: !173)
!9793 = !DILocation(line: 111, column: 52, scope: !9786)
!9794 = !DILocalVariable(name: "pinVal", arg: 3, scope: !9786, file: !9669, line: 111, type: !9789)
!9795 = !DILocation(line: 111, column: 75, scope: !9786)
!9796 = !DILocation(line: 114, column: 9, scope: !9797)
!9797 = distinct !DILexicalBlock(scope: !9786, file: !9669, line: 114, column: 9)
!9798 = !DILocation(line: 114, column: 16, scope: !9797)
!9799 = !DILocation(line: 114, column: 9, scope: !9786)
!9800 = !DILocation(line: 116, column: 37, scope: !9801)
!9801 = distinct !DILexicalBlock(scope: !9797, file: !9669, line: 115, column: 5)
!9802 = !DILocation(line: 116, column: 34, scope: !9801)
!9803 = !DILocation(line: 116, column: 9, scope: !9801)
!9804 = !DILocation(line: 116, column: 27, scope: !9801)
!9805 = !DILocation(line: 117, column: 5, scope: !9801)
!9806 = !DILocation(line: 120, column: 38, scope: !9807)
!9807 = distinct !DILexicalBlock(scope: !9797, file: !9669, line: 119, column: 5)
!9808 = !DILocation(line: 120, column: 35, scope: !9807)
!9809 = !DILocation(line: 120, column: 30, scope: !9807)
!9810 = !DILocation(line: 120, column: 9, scope: !9807)
!9811 = !DILocation(line: 120, column: 27, scope: !9807)
!9812 = !DILocation(line: 122, column: 1, scope: !9786)
!9813 = distinct !DISubprogram(name: "GPIO_SetPinIntMode", scope: !9669, file: !9669, line: 133, type: !9814, scopeLine: 134, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2536, retainedNodes: !223)
!9814 = !DISubroutineType(types: !9815)
!9815 = !{null, !9672, !173, !743}
!9816 = !DILocalVariable(name: "base", arg: 1, scope: !9813, file: !9669, line: 133, type: !9672)
!9817 = !DILocation(line: 133, column: 36, scope: !9813)
!9818 = !DILocalVariable(name: "pin", arg: 2, scope: !9813, file: !9669, line: 133, type: !173)
!9819 = !DILocation(line: 133, column: 51, scope: !9813)
!9820 = !DILocalVariable(name: "enable", arg: 3, scope: !9813, file: !9669, line: 133, type: !743)
!9821 = !DILocation(line: 133, column: 61, scope: !9813)
!9822 = !DILocation(line: 137, column: 8, scope: !9823)
!9823 = distinct !DILexicalBlock(scope: !9813, file: !9669, line: 137, column: 8)
!9824 = !DILocation(line: 137, column: 8, scope: !9813)
!9825 = !DILocation(line: 138, column: 38, scope: !9823)
!9826 = !DILocation(line: 138, column: 35, scope: !9823)
!9827 = !DILocation(line: 138, column: 9, scope: !9823)
!9828 = !DILocation(line: 138, column: 28, scope: !9823)
!9829 = !DILocation(line: 140, column: 39, scope: !9823)
!9830 = !DILocation(line: 140, column: 36, scope: !9823)
!9831 = !DILocation(line: 140, column: 31, scope: !9823)
!9832 = !DILocation(line: 140, column: 9, scope: !9823)
!9833 = !DILocation(line: 140, column: 28, scope: !9823)
!9834 = !DILocation(line: 141, column: 1, scope: !9813)
!9835 = distinct !DISubprogram(name: "GPIO_SetIntEdgeSelect", scope: !9669, file: !9669, line: 150, type: !9814, scopeLine: 151, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2536, retainedNodes: !223)
!9836 = !DILocalVariable(name: "base", arg: 1, scope: !9835, file: !9669, line: 150, type: !9672)
!9837 = !DILocation(line: 150, column: 39, scope: !9835)
!9838 = !DILocalVariable(name: "pin", arg: 2, scope: !9835, file: !9669, line: 150, type: !173)
!9839 = !DILocation(line: 150, column: 54, scope: !9835)
!9840 = !DILocalVariable(name: "enable", arg: 3, scope: !9835, file: !9669, line: 150, type: !743)
!9841 = !DILocation(line: 150, column: 64, scope: !9835)
!9842 = !DILocation(line: 154, column: 8, scope: !9843)
!9843 = distinct !DILexicalBlock(scope: !9835, file: !9669, line: 154, column: 8)
!9844 = !DILocation(line: 154, column: 8, scope: !9835)
!9845 = !DILocation(line: 155, column: 43, scope: !9843)
!9846 = !DILocation(line: 155, column: 40, scope: !9843)
!9847 = !DILocation(line: 155, column: 9, scope: !9843)
!9848 = !DILocation(line: 155, column: 33, scope: !9843)
!9849 = !DILocation(line: 157, column: 44, scope: !9843)
!9850 = !DILocation(line: 157, column: 41, scope: !9843)
!9851 = !DILocation(line: 157, column: 36, scope: !9843)
!9852 = !DILocation(line: 157, column: 9, scope: !9843)
!9853 = !DILocation(line: 157, column: 33, scope: !9843)
!9854 = !DILocation(line: 158, column: 1, scope: !9835)
!9855 = distinct !DISubprogram(name: "UART_Init", scope: !9856, file: !9856, line: 47, type: !9857, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2550, retainedNodes: !223)
!9856 = !DIFile(filename: "modules/hal/nxp/imx/drivers/uart_imx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9857 = !DISubroutineType(types: !9858)
!9858 = !{null, !9859, !9882}
!9859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9860, size: 32)
!9860 = !DIDerivedType(tag: DW_TAG_typedef, name: "UART_Type", file: !566, line: 41342, baseType: !9861)
!9861 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !566, line: 41322, size: 1504, elements: !9862)
!9862 = !{!9863, !9864, !9865, !9866, !9867, !9868, !9869, !9870, !9871, !9872, !9873, !9874, !9875, !9876, !9877, !9878, !9879, !9880, !9881}
!9863 = !DIDerivedType(tag: DW_TAG_member, name: "URXD", scope: !9861, file: !566, line: 41323, baseType: !641, size: 32)
!9864 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !9861, file: !566, line: 41324, baseType: !1193, size: 480, offset: 32)
!9865 = !DIDerivedType(tag: DW_TAG_member, name: "UTXD", scope: !9861, file: !566, line: 41325, baseType: !570, size: 32, offset: 512)
!9866 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !9861, file: !566, line: 41326, baseType: !1193, size: 480, offset: 544)
!9867 = !DIDerivedType(tag: DW_TAG_member, name: "UCR1", scope: !9861, file: !566, line: 41327, baseType: !570, size: 32, offset: 1024)
!9868 = !DIDerivedType(tag: DW_TAG_member, name: "UCR2", scope: !9861, file: !566, line: 41328, baseType: !570, size: 32, offset: 1056)
!9869 = !DIDerivedType(tag: DW_TAG_member, name: "UCR3", scope: !9861, file: !566, line: 41329, baseType: !570, size: 32, offset: 1088)
!9870 = !DIDerivedType(tag: DW_TAG_member, name: "UCR4", scope: !9861, file: !566, line: 41330, baseType: !570, size: 32, offset: 1120)
!9871 = !DIDerivedType(tag: DW_TAG_member, name: "UFCR", scope: !9861, file: !566, line: 41331, baseType: !570, size: 32, offset: 1152)
!9872 = !DIDerivedType(tag: DW_TAG_member, name: "USR1", scope: !9861, file: !566, line: 41332, baseType: !570, size: 32, offset: 1184)
!9873 = !DIDerivedType(tag: DW_TAG_member, name: "USR2", scope: !9861, file: !566, line: 41333, baseType: !570, size: 32, offset: 1216)
!9874 = !DIDerivedType(tag: DW_TAG_member, name: "UESC", scope: !9861, file: !566, line: 41334, baseType: !570, size: 32, offset: 1248)
!9875 = !DIDerivedType(tag: DW_TAG_member, name: "UTIM", scope: !9861, file: !566, line: 41335, baseType: !570, size: 32, offset: 1280)
!9876 = !DIDerivedType(tag: DW_TAG_member, name: "UBIR", scope: !9861, file: !566, line: 41336, baseType: !570, size: 32, offset: 1312)
!9877 = !DIDerivedType(tag: DW_TAG_member, name: "UBMR", scope: !9861, file: !566, line: 41337, baseType: !570, size: 32, offset: 1344)
!9878 = !DIDerivedType(tag: DW_TAG_member, name: "UBRC", scope: !9861, file: !566, line: 41338, baseType: !641, size: 32, offset: 1376)
!9879 = !DIDerivedType(tag: DW_TAG_member, name: "ONEMS", scope: !9861, file: !566, line: 41339, baseType: !570, size: 32, offset: 1408)
!9880 = !DIDerivedType(tag: DW_TAG_member, name: "UTS", scope: !9861, file: !566, line: 41340, baseType: !570, size: 32, offset: 1440)
!9881 = !DIDerivedType(tag: DW_TAG_member, name: "UMCR", scope: !9861, file: !566, line: 41341, baseType: !570, size: 32, offset: 1472)
!9882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9883, size: 32)
!9883 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9884)
!9884 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_init_config_t", file: !1023, line: 57, baseType: !9885)
!9885 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_uart_init_config", file: !1023, line: 49, size: 192, elements: !9886)
!9886 = !{!9887, !9888, !9889, !9890, !9891, !9892}
!9887 = !DIDerivedType(tag: DW_TAG_member, name: "clockRate", scope: !9885, file: !1023, line: 51, baseType: !173, size: 32)
!9888 = !DIDerivedType(tag: DW_TAG_member, name: "baudRate", scope: !9885, file: !1023, line: 52, baseType: !173, size: 32, offset: 32)
!9889 = !DIDerivedType(tag: DW_TAG_member, name: "wordLength", scope: !9885, file: !1023, line: 53, baseType: !173, size: 32, offset: 64)
!9890 = !DIDerivedType(tag: DW_TAG_member, name: "stopBitNum", scope: !9885, file: !1023, line: 54, baseType: !173, size: 32, offset: 96)
!9891 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !9885, file: !1023, line: 55, baseType: !173, size: 32, offset: 128)
!9892 = !DIDerivedType(tag: DW_TAG_member, name: "direction", scope: !9885, file: !1023, line: 56, baseType: !173, size: 32, offset: 160)
!9893 = !DILocalVariable(name: "base", arg: 1, scope: !9855, file: !9856, line: 47, type: !9859)
!9894 = !DILocation(line: 47, column: 27, scope: !9855)
!9895 = !DILocalVariable(name: "initConfig", arg: 2, scope: !9855, file: !9856, line: 47, type: !9882)
!9896 = !DILocation(line: 47, column: 59, scope: !9855)
!9897 = !DILocation(line: 52, column: 5, scope: !9855)
!9898 = !DILocation(line: 52, column: 25, scope: !9855)
!9899 = !DILocation(line: 55, column: 17, scope: !9855)
!9900 = !DILocation(line: 55, column: 5, scope: !9855)
!9901 = !DILocation(line: 60, column: 29, scope: !9855)
!9902 = !DILocation(line: 60, column: 41, scope: !9855)
!9903 = !DILocation(line: 61, column: 29, scope: !9855)
!9904 = !DILocation(line: 61, column: 41, scope: !9855)
!9905 = !DILocation(line: 60, column: 52, scope: !9855)
!9906 = !DILocation(line: 62, column: 29, scope: !9855)
!9907 = !DILocation(line: 62, column: 41, scope: !9855)
!9908 = !DILocation(line: 61, column: 52, scope: !9855)
!9909 = !DILocation(line: 63, column: 29, scope: !9855)
!9910 = !DILocation(line: 63, column: 41, scope: !9855)
!9911 = !DILocation(line: 62, column: 52, scope: !9855)
!9912 = !DILocation(line: 63, column: 52, scope: !9855)
!9913 = !DILocation(line: 60, column: 5, scope: !9855)
!9914 = !DILocation(line: 60, column: 25, scope: !9855)
!9915 = !DILocation(line: 68, column: 5, scope: !9855)
!9916 = !DILocation(line: 68, column: 25, scope: !9855)
!9917 = !DILocation(line: 72, column: 22, scope: !9855)
!9918 = !DILocation(line: 72, column: 28, scope: !9855)
!9919 = !DILocation(line: 72, column: 40, scope: !9855)
!9920 = !DILocation(line: 72, column: 51, scope: !9855)
!9921 = !DILocation(line: 72, column: 63, scope: !9855)
!9922 = !DILocation(line: 72, column: 5, scope: !9855)
!9923 = !DILocation(line: 73, column: 1, scope: !9855)
!9924 = distinct !DISubprogram(name: "UART_Deinit", scope: !9856, file: !9856, line: 82, type: !9925, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2550, retainedNodes: !223)
!9925 = !DISubroutineType(types: !9926)
!9926 = !{null, !9859}
!9927 = !DILocalVariable(name: "base", arg: 1, scope: !9924, file: !9856, line: 82, type: !9859)
!9928 = !DILocation(line: 82, column: 29, scope: !9924)
!9929 = !DILocation(line: 85, column: 5, scope: !9924)
!9930 = !DILocation(line: 85, column: 25, scope: !9924)
!9931 = !DILocation(line: 88, column: 5, scope: !9924)
!9932 = !DILocation(line: 88, column: 26, scope: !9924)
!9933 = !DILocation(line: 89, column: 5, scope: !9924)
!9934 = !DILocation(line: 89, column: 26, scope: !9924)
!9935 = !DILocation(line: 90, column: 5, scope: !9924)
!9936 = !DILocation(line: 90, column: 26, scope: !9924)
!9937 = !DILocation(line: 93, column: 5, scope: !9924)
!9938 = !DILocation(line: 93, column: 26, scope: !9924)
!9939 = !DILocation(line: 94, column: 5, scope: !9924)
!9940 = !DILocation(line: 94, column: 26, scope: !9924)
!9941 = !DILocation(line: 95, column: 5, scope: !9924)
!9942 = !DILocation(line: 95, column: 26, scope: !9924)
!9943 = !DILocation(line: 96, column: 5, scope: !9924)
!9944 = !DILocation(line: 96, column: 26, scope: !9924)
!9945 = !DILocation(line: 97, column: 5, scope: !9924)
!9946 = !DILocation(line: 97, column: 26, scope: !9924)
!9947 = !DILocation(line: 98, column: 5, scope: !9924)
!9948 = !DILocation(line: 98, column: 26, scope: !9924)
!9949 = !DILocation(line: 99, column: 5, scope: !9924)
!9950 = !DILocation(line: 99, column: 26, scope: !9924)
!9951 = !DILocation(line: 103, column: 5, scope: !9924)
!9952 = !DILocation(line: 103, column: 25, scope: !9924)
!9953 = !DILocation(line: 104, column: 5, scope: !9924)
!9954 = !DILocation(line: 104, column: 14, scope: !9924)
!9955 = !DILocation(line: 104, column: 34, scope: !9924)
!9956 = !DILocation(line: 104, column: 12, scope: !9924)
!9957 = distinct !{!9957, !9953, !9958}
!9958 = !DILocation(line: 104, column: 57, scope: !9924)
!9959 = !DILocation(line: 105, column: 1, scope: !9924)
!9960 = distinct !DISubprogram(name: "UART_SetBaudRate", scope: !9856, file: !9856, line: 113, type: !9961, scopeLine: 114, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2550, retainedNodes: !223)
!9961 = !DISubroutineType(types: !9962)
!9962 = !{null, !9859, !173, !173}
!9963 = !DILocalVariable(name: "base", arg: 1, scope: !9960, file: !9856, line: 113, type: !9859)
!9964 = !DILocation(line: 113, column: 34, scope: !9960)
!9965 = !DILocalVariable(name: "clockRate", arg: 2, scope: !9960, file: !9856, line: 113, type: !173)
!9966 = !DILocation(line: 113, column: 49, scope: !9960)
!9967 = !DILocalVariable(name: "baudRate", arg: 3, scope: !9960, file: !9856, line: 113, type: !173)
!9968 = !DILocation(line: 113, column: 69, scope: !9960)
!9969 = !DILocalVariable(name: "numerator", scope: !9960, file: !9856, line: 115, type: !173)
!9970 = !DILocation(line: 115, column: 14, scope: !9960)
!9971 = !DILocalVariable(name: "denominator", scope: !9960, file: !9856, line: 116, type: !173)
!9972 = !DILocation(line: 116, column: 14, scope: !9960)
!9973 = !DILocalVariable(name: "divisor", scope: !9960, file: !9856, line: 117, type: !173)
!9974 = !DILocation(line: 117, column: 14, scope: !9960)
!9975 = !DILocalVariable(name: "refFreqDiv", scope: !9960, file: !9856, line: 118, type: !173)
!9976 = !DILocation(line: 118, column: 14, scope: !9960)
!9977 = !DILocalVariable(name: "divider", scope: !9960, file: !9856, line: 119, type: !173)
!9978 = !DILocation(line: 119, column: 14, scope: !9960)
!9979 = !DILocation(line: 122, column: 17, scope: !9960)
!9980 = !DILocation(line: 122, column: 15, scope: !9960)
!9981 = !DILocation(line: 123, column: 19, scope: !9960)
!9982 = !DILocation(line: 123, column: 28, scope: !9960)
!9983 = !DILocation(line: 123, column: 17, scope: !9960)
!9984 = !DILocation(line: 124, column: 13, scope: !9960)
!9985 = !DILocation(line: 126, column: 5, scope: !9960)
!9986 = !DILocation(line: 126, column: 12, scope: !9960)
!9987 = !DILocation(line: 126, column: 24, scope: !9960)
!9988 = !DILocation(line: 128, column: 19, scope: !9989)
!9989 = distinct !DILexicalBlock(scope: !9960, file: !9856, line: 127, column: 5)
!9990 = !DILocation(line: 128, column: 17, scope: !9989)
!9991 = !DILocation(line: 129, column: 23, scope: !9989)
!9992 = !DILocation(line: 129, column: 35, scope: !9989)
!9993 = !DILocation(line: 129, column: 33, scope: !9989)
!9994 = !DILocation(line: 129, column: 21, scope: !9989)
!9995 = !DILocation(line: 130, column: 21, scope: !9989)
!9996 = !DILocation(line: 130, column: 19, scope: !9989)
!9997 = distinct !{!9997, !9985, !9998}
!9998 = !DILocation(line: 131, column: 5, scope: !9960)
!9999 = !DILocation(line: 133, column: 17, scope: !9960)
!10000 = !DILocation(line: 133, column: 29, scope: !9960)
!10001 = !DILocation(line: 133, column: 27, scope: !9960)
!10002 = !DILocation(line: 133, column: 15, scope: !9960)
!10003 = !DILocation(line: 134, column: 20, scope: !9960)
!10004 = !DILocation(line: 134, column: 29, scope: !9960)
!10005 = !DILocation(line: 134, column: 37, scope: !9960)
!10006 = !DILocation(line: 134, column: 35, scope: !9960)
!10007 = !DILocation(line: 134, column: 17, scope: !9960)
!10008 = !DILocation(line: 138, column: 10, scope: !10009)
!10009 = distinct !DILexicalBlock(scope: !9960, file: !9856, line: 138, column: 9)
!10010 = !DILocation(line: 138, column: 20, scope: !10009)
!10011 = !DILocation(line: 138, column: 48, scope: !10009)
!10012 = !DILocation(line: 139, column: 10, scope: !10009)
!10013 = !DILocation(line: 139, column: 22, scope: !10009)
!10014 = !DILocation(line: 138, column: 9, scope: !9960)
!10015 = !DILocalVariable(name: "m", scope: !10016, file: !9856, line: 141, type: !173)
!10016 = distinct !DILexicalBlock(scope: !10009, file: !9856, line: 140, column: 5)
!10017 = !DILocation(line: 141, column: 18, scope: !10016)
!10018 = !DILocation(line: 141, column: 23, scope: !10016)
!10019 = !DILocation(line: 141, column: 33, scope: !10016)
!10020 = !DILocation(line: 141, column: 38, scope: !10016)
!10021 = !DILocation(line: 141, column: 65, scope: !10016)
!10022 = !DILocalVariable(name: "n", scope: !10016, file: !9856, line: 142, type: !173)
!10023 = !DILocation(line: 142, column: 18, scope: !10016)
!10024 = !DILocation(line: 142, column: 23, scope: !10016)
!10025 = !DILocation(line: 142, column: 35, scope: !10016)
!10026 = !DILocation(line: 142, column: 40, scope: !10016)
!10027 = !DILocation(line: 142, column: 61, scope: !10016)
!10028 = !DILocalVariable(name: "max", scope: !10016, file: !9856, line: 143, type: !173)
!10029 = !DILocation(line: 143, column: 18, scope: !10016)
!10030 = !DILocation(line: 143, column: 24, scope: !10016)
!10031 = !DILocation(line: 143, column: 28, scope: !10016)
!10032 = !DILocation(line: 143, column: 26, scope: !10016)
!10033 = !DILocation(line: 143, column: 32, scope: !10016)
!10034 = !DILocation(line: 143, column: 36, scope: !10016)
!10035 = !DILocation(line: 144, column: 22, scope: !10016)
!10036 = !DILocation(line: 144, column: 19, scope: !10016)
!10037 = !DILocation(line: 145, column: 24, scope: !10016)
!10038 = !DILocation(line: 145, column: 21, scope: !10016)
!10039 = !DILocation(line: 146, column: 18, scope: !10040)
!10040 = distinct !DILexicalBlock(scope: !10016, file: !9856, line: 146, column: 13)
!10041 = !DILocation(line: 146, column: 15, scope: !10040)
!10042 = !DILocation(line: 146, column: 13, scope: !10016)
!10043 = !DILocation(line: 147, column: 23, scope: !10040)
!10044 = !DILocation(line: 147, column: 13, scope: !10040)
!10045 = !DILocation(line: 148, column: 18, scope: !10046)
!10046 = distinct !DILexicalBlock(scope: !10016, file: !9856, line: 148, column: 13)
!10047 = !DILocation(line: 148, column: 15, scope: !10046)
!10048 = !DILocation(line: 148, column: 13, scope: !10016)
!10049 = !DILocation(line: 149, column: 25, scope: !10046)
!10050 = !DILocation(line: 149, column: 13, scope: !10046)
!10051 = !DILocation(line: 150, column: 5, scope: !10016)
!10052 = !DILocation(line: 151, column: 16, scope: !9960)
!10053 = !DILocation(line: 151, column: 26, scope: !9960)
!10054 = !DILocation(line: 151, column: 31, scope: !9960)
!10055 = !DILocation(line: 151, column: 52, scope: !9960)
!10056 = !DILocation(line: 151, column: 13, scope: !9960)
!10057 = !DILocation(line: 153, column: 13, scope: !9960)
!10058 = !DILocation(line: 153, column: 5, scope: !9960)
!10059 = !DILocation(line: 156, column: 24, scope: !10060)
!10060 = distinct !DILexicalBlock(scope: !9960, file: !9856, line: 154, column: 5)
!10061 = !DILocation(line: 157, column: 13, scope: !10060)
!10062 = !DILocation(line: 159, column: 24, scope: !10060)
!10063 = !DILocation(line: 160, column: 13, scope: !10060)
!10064 = !DILocation(line: 162, column: 24, scope: !10060)
!10065 = !DILocation(line: 163, column: 13, scope: !10060)
!10066 = !DILocation(line: 165, column: 24, scope: !10060)
!10067 = !DILocation(line: 166, column: 13, scope: !10060)
!10068 = !DILocation(line: 168, column: 24, scope: !10060)
!10069 = !DILocation(line: 169, column: 13, scope: !10060)
!10070 = !DILocation(line: 171, column: 24, scope: !10060)
!10071 = !DILocation(line: 172, column: 13, scope: !10060)
!10072 = !DILocation(line: 174, column: 24, scope: !10060)
!10073 = !DILocation(line: 175, column: 13, scope: !10060)
!10074 = !DILocation(line: 177, column: 20, scope: !10060)
!10075 = !DILocation(line: 178, column: 5, scope: !10060)
!10076 = !DILocation(line: 180, column: 5, scope: !9960)
!10077 = !DILocation(line: 180, column: 25, scope: !9960)
!10078 = !DILocation(line: 181, column: 28, scope: !9960)
!10079 = !DILocation(line: 181, column: 5, scope: !9960)
!10080 = !DILocation(line: 181, column: 25, scope: !9960)
!10081 = !DILocation(line: 182, column: 27, scope: !9960)
!10082 = !DILocation(line: 182, column: 5, scope: !9960)
!10083 = !DILocation(line: 182, column: 25, scope: !9960)
!10084 = !DILocation(line: 183, column: 27, scope: !9960)
!10085 = !DILocation(line: 183, column: 5, scope: !9960)
!10086 = !DILocation(line: 183, column: 25, scope: !9960)
!10087 = !DILocation(line: 184, column: 28, scope: !9960)
!10088 = !DILocation(line: 184, column: 5, scope: !9960)
!10089 = !DILocation(line: 184, column: 26, scope: !9960)
!10090 = !DILocation(line: 185, column: 1, scope: !9960)
!10091 = distinct !DISubprogram(name: "UART_SetInvertCmd", scope: !9856, file: !9856, line: 194, type: !10092, scopeLine: 195, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2550, retainedNodes: !223)
!10092 = !DISubroutineType(types: !10093)
!10093 = !{null, !9859, !173, !743}
!10094 = !DILocalVariable(name: "base", arg: 1, scope: !10091, file: !9856, line: 194, type: !9859)
!10095 = !DILocation(line: 194, column: 35, scope: !10091)
!10096 = !DILocalVariable(name: "direction", arg: 2, scope: !10091, file: !9856, line: 194, type: !173)
!10097 = !DILocation(line: 194, column: 50, scope: !10091)
!10098 = !DILocalVariable(name: "invert", arg: 3, scope: !10091, file: !9856, line: 194, type: !743)
!10099 = !DILocation(line: 194, column: 66, scope: !10091)
!10100 = !DILocation(line: 198, column: 9, scope: !10101)
!10101 = distinct !DILexicalBlock(scope: !10091, file: !9856, line: 198, column: 9)
!10102 = !DILocation(line: 198, column: 9, scope: !10091)
!10103 = !DILocation(line: 200, column: 13, scope: !10104)
!10104 = distinct !DILexicalBlock(scope: !10105, file: !9856, line: 200, column: 13)
!10105 = distinct !DILexicalBlock(scope: !10101, file: !9856, line: 199, column: 5)
!10106 = !DILocation(line: 200, column: 23, scope: !10104)
!10107 = !DILocation(line: 200, column: 13, scope: !10105)
!10108 = !DILocation(line: 201, column: 13, scope: !10104)
!10109 = !DILocation(line: 201, column: 33, scope: !10104)
!10110 = !DILocation(line: 202, column: 13, scope: !10111)
!10111 = distinct !DILexicalBlock(scope: !10105, file: !9856, line: 202, column: 13)
!10112 = !DILocation(line: 202, column: 23, scope: !10111)
!10113 = !DILocation(line: 202, column: 13, scope: !10105)
!10114 = !DILocation(line: 203, column: 13, scope: !10111)
!10115 = !DILocation(line: 203, column: 33, scope: !10111)
!10116 = !DILocation(line: 204, column: 5, scope: !10105)
!10117 = !DILocation(line: 207, column: 13, scope: !10118)
!10118 = distinct !DILexicalBlock(scope: !10119, file: !9856, line: 207, column: 13)
!10119 = distinct !DILexicalBlock(scope: !10101, file: !9856, line: 206, column: 5)
!10120 = !DILocation(line: 207, column: 23, scope: !10118)
!10121 = !DILocation(line: 207, column: 13, scope: !10119)
!10122 = !DILocation(line: 208, column: 13, scope: !10118)
!10123 = !DILocation(line: 208, column: 33, scope: !10118)
!10124 = !DILocation(line: 209, column: 13, scope: !10125)
!10125 = distinct !DILexicalBlock(scope: !10119, file: !9856, line: 209, column: 13)
!10126 = !DILocation(line: 209, column: 23, scope: !10125)
!10127 = !DILocation(line: 209, column: 13, scope: !10119)
!10128 = !DILocation(line: 210, column: 13, scope: !10125)
!10129 = !DILocation(line: 210, column: 33, scope: !10125)
!10130 = !DILocation(line: 212, column: 1, scope: !10091)
!10131 = distinct !DISubprogram(name: "UART_SetDozeMode", scope: !9856, file: !9856, line: 224, type: !10132, scopeLine: 225, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2550, retainedNodes: !223)
!10132 = !DISubroutineType(types: !10133)
!10133 = !{null, !9859, !743}
!10134 = !DILocalVariable(name: "base", arg: 1, scope: !10131, file: !9856, line: 224, type: !9859)
!10135 = !DILocation(line: 224, column: 34, scope: !10131)
!10136 = !DILocalVariable(name: "enable", arg: 2, scope: !10131, file: !9856, line: 224, type: !743)
!10137 = !DILocation(line: 224, column: 45, scope: !10131)
!10138 = !DILocation(line: 226, column: 9, scope: !10139)
!10139 = distinct !DILexicalBlock(scope: !10131, file: !9856, line: 226, column: 9)
!10140 = !DILocation(line: 226, column: 9, scope: !10131)
!10141 = !DILocation(line: 227, column: 9, scope: !10139)
!10142 = !DILocation(line: 227, column: 29, scope: !10139)
!10143 = !DILocation(line: 229, column: 9, scope: !10139)
!10144 = !DILocation(line: 229, column: 29, scope: !10139)
!10145 = !DILocation(line: 230, column: 1, scope: !10131)
!10146 = distinct !DISubprogram(name: "UART_SetLowPowerMode", scope: !9856, file: !9856, line: 239, type: !10132, scopeLine: 240, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2550, retainedNodes: !223)
!10147 = !DILocalVariable(name: "base", arg: 1, scope: !10146, file: !9856, line: 239, type: !9859)
!10148 = !DILocation(line: 239, column: 38, scope: !10146)
!10149 = !DILocalVariable(name: "enable", arg: 2, scope: !10146, file: !9856, line: 239, type: !743)
!10150 = !DILocation(line: 239, column: 49, scope: !10146)
!10151 = !DILocation(line: 241, column: 9, scope: !10152)
!10152 = distinct !DILexicalBlock(scope: !10146, file: !9856, line: 241, column: 9)
!10153 = !DILocation(line: 241, column: 9, scope: !10146)
!10154 = !DILocation(line: 242, column: 9, scope: !10152)
!10155 = !DILocation(line: 242, column: 29, scope: !10152)
!10156 = !DILocation(line: 244, column: 9, scope: !10152)
!10157 = !DILocation(line: 244, column: 29, scope: !10152)
!10158 = !DILocation(line: 245, column: 1, scope: !10146)
!10159 = distinct !DISubprogram(name: "UART_SetIntCmd", scope: !9856, file: !9856, line: 258, type: !10092, scopeLine: 259, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2550, retainedNodes: !223)
!10160 = !DILocalVariable(name: "base", arg: 1, scope: !10159, file: !9856, line: 258, type: !9859)
!10161 = !DILocation(line: 258, column: 32, scope: !10159)
!10162 = !DILocalVariable(name: "intSource", arg: 2, scope: !10159, file: !9856, line: 258, type: !173)
!10163 = !DILocation(line: 258, column: 47, scope: !10159)
!10164 = !DILocalVariable(name: "enable", arg: 3, scope: !10159, file: !9856, line: 258, type: !743)
!10165 = !DILocation(line: 258, column: 63, scope: !10159)
!10166 = !DILocalVariable(name: "uart_reg", scope: !10159, file: !9856, line: 260, type: !690)
!10167 = !DILocation(line: 260, column: 24, scope: !10159)
!10168 = !DILocalVariable(name: "uart_mask", scope: !10159, file: !9856, line: 261, type: !173)
!10169 = !DILocation(line: 261, column: 14, scope: !10159)
!10170 = !DILocation(line: 263, column: 39, scope: !10159)
!10171 = !DILocation(line: 263, column: 29, scope: !10159)
!10172 = !DILocation(line: 263, column: 47, scope: !10159)
!10173 = !DILocation(line: 263, column: 57, scope: !10159)
!10174 = !DILocation(line: 263, column: 44, scope: !10159)
!10175 = !DILocation(line: 263, column: 16, scope: !10159)
!10176 = !DILocation(line: 263, column: 14, scope: !10159)
!10177 = !DILocation(line: 264, column: 24, scope: !10159)
!10178 = !DILocation(line: 264, column: 34, scope: !10159)
!10179 = !DILocation(line: 264, column: 20, scope: !10159)
!10180 = !DILocation(line: 264, column: 15, scope: !10159)
!10181 = !DILocation(line: 266, column: 9, scope: !10182)
!10182 = distinct !DILexicalBlock(scope: !10159, file: !9856, line: 266, column: 9)
!10183 = !DILocation(line: 266, column: 9, scope: !10159)
!10184 = !DILocation(line: 267, column: 22, scope: !10182)
!10185 = !DILocation(line: 267, column: 10, scope: !10182)
!10186 = !DILocation(line: 267, column: 19, scope: !10182)
!10187 = !DILocation(line: 267, column: 9, scope: !10182)
!10188 = !DILocation(line: 269, column: 23, scope: !10182)
!10189 = !DILocation(line: 269, column: 22, scope: !10182)
!10190 = !DILocation(line: 269, column: 10, scope: !10182)
!10191 = !DILocation(line: 269, column: 19, scope: !10182)
!10192 = !DILocation(line: 270, column: 1, scope: !10159)
!10193 = distinct !DISubprogram(name: "UART_ClearStatusFlag", scope: !9856, file: !9856, line: 299, type: !10194, scopeLine: 300, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2550, retainedNodes: !223)
!10194 = !DISubroutineType(types: !10195)
!10195 = !{null, !9859, !173}
!10196 = !DILocalVariable(name: "base", arg: 1, scope: !10193, file: !9856, line: 299, type: !9859)
!10197 = !DILocation(line: 299, column: 38, scope: !10193)
!10198 = !DILocalVariable(name: "flag", arg: 2, scope: !10193, file: !9856, line: 299, type: !173)
!10199 = !DILocation(line: 299, column: 53, scope: !10193)
!10200 = !DILocalVariable(name: "uart_reg", scope: !10193, file: !9856, line: 301, type: !690)
!10201 = !DILocation(line: 301, column: 24, scope: !10193)
!10202 = !DILocalVariable(name: "uart_mask", scope: !10193, file: !9856, line: 302, type: !173)
!10203 = !DILocation(line: 302, column: 14, scope: !10193)
!10204 = !DILocation(line: 304, column: 39, scope: !10193)
!10205 = !DILocation(line: 304, column: 29, scope: !10193)
!10206 = !DILocation(line: 304, column: 47, scope: !10193)
!10207 = !DILocation(line: 304, column: 52, scope: !10193)
!10208 = !DILocation(line: 304, column: 44, scope: !10193)
!10209 = !DILocation(line: 304, column: 16, scope: !10193)
!10210 = !DILocation(line: 304, column: 14, scope: !10193)
!10211 = !DILocation(line: 305, column: 24, scope: !10193)
!10212 = !DILocation(line: 305, column: 29, scope: !10193)
!10213 = !DILocation(line: 305, column: 20, scope: !10193)
!10214 = !DILocation(line: 305, column: 15, scope: !10193)
!10215 = !DILocation(line: 308, column: 17, scope: !10193)
!10216 = !DILocation(line: 308, column: 6, scope: !10193)
!10217 = !DILocation(line: 308, column: 15, scope: !10193)
!10218 = !DILocation(line: 309, column: 1, scope: !10193)
!10219 = distinct !DISubprogram(name: "UART_SetDmaCmd", scope: !9856, file: !9856, line: 322, type: !10092, scopeLine: 323, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2550, retainedNodes: !223)
!10220 = !DILocalVariable(name: "base", arg: 1, scope: !10219, file: !9856, line: 322, type: !9859)
!10221 = !DILocation(line: 322, column: 32, scope: !10219)
!10222 = !DILocalVariable(name: "dmaSource", arg: 2, scope: !10219, file: !9856, line: 322, type: !173)
!10223 = !DILocation(line: 322, column: 47, scope: !10219)
!10224 = !DILocalVariable(name: "enable", arg: 3, scope: !10219, file: !9856, line: 322, type: !743)
!10225 = !DILocation(line: 322, column: 63, scope: !10219)
!10226 = !DILocalVariable(name: "uart_reg", scope: !10219, file: !9856, line: 324, type: !690)
!10227 = !DILocation(line: 324, column: 24, scope: !10219)
!10228 = !DILocalVariable(name: "uart_mask", scope: !10219, file: !9856, line: 325, type: !173)
!10229 = !DILocation(line: 325, column: 14, scope: !10219)
!10230 = !DILocation(line: 327, column: 39, scope: !10219)
!10231 = !DILocation(line: 327, column: 29, scope: !10219)
!10232 = !DILocation(line: 327, column: 47, scope: !10219)
!10233 = !DILocation(line: 327, column: 57, scope: !10219)
!10234 = !DILocation(line: 327, column: 44, scope: !10219)
!10235 = !DILocation(line: 327, column: 16, scope: !10219)
!10236 = !DILocation(line: 327, column: 14, scope: !10219)
!10237 = !DILocation(line: 328, column: 24, scope: !10219)
!10238 = !DILocation(line: 328, column: 34, scope: !10219)
!10239 = !DILocation(line: 328, column: 20, scope: !10219)
!10240 = !DILocation(line: 328, column: 15, scope: !10219)
!10241 = !DILocation(line: 329, column: 9, scope: !10242)
!10242 = distinct !DILexicalBlock(scope: !10219, file: !9856, line: 329, column: 9)
!10243 = !DILocation(line: 329, column: 9, scope: !10219)
!10244 = !DILocation(line: 330, column: 22, scope: !10242)
!10245 = !DILocation(line: 330, column: 10, scope: !10242)
!10246 = !DILocation(line: 330, column: 19, scope: !10242)
!10247 = !DILocation(line: 330, column: 9, scope: !10242)
!10248 = !DILocation(line: 332, column: 23, scope: !10242)
!10249 = !DILocation(line: 332, column: 22, scope: !10242)
!10250 = !DILocation(line: 332, column: 10, scope: !10242)
!10251 = !DILocation(line: 332, column: 19, scope: !10242)
!10252 = !DILocation(line: 333, column: 1, scope: !10219)
!10253 = distinct !DISubprogram(name: "UART_SetRtsFlowCtrlCmd", scope: !9856, file: !9856, line: 345, type: !10132, scopeLine: 346, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2550, retainedNodes: !223)
!10254 = !DILocalVariable(name: "base", arg: 1, scope: !10253, file: !9856, line: 345, type: !9859)
!10255 = !DILocation(line: 345, column: 40, scope: !10253)
!10256 = !DILocalVariable(name: "enable", arg: 2, scope: !10253, file: !9856, line: 345, type: !743)
!10257 = !DILocation(line: 345, column: 51, scope: !10253)
!10258 = !DILocation(line: 347, column: 9, scope: !10259)
!10259 = distinct !DILexicalBlock(scope: !10253, file: !9856, line: 347, column: 9)
!10260 = !DILocation(line: 347, column: 9, scope: !10253)
!10261 = !DILocation(line: 348, column: 9, scope: !10259)
!10262 = !DILocation(line: 348, column: 29, scope: !10259)
!10263 = !DILocation(line: 350, column: 9, scope: !10259)
!10264 = !DILocation(line: 350, column: 29, scope: !10259)
!10265 = !DILocation(line: 351, column: 1, scope: !10253)
!10266 = distinct !DISubprogram(name: "UART_SetCtsFlowCtrlCmd", scope: !9856, file: !9856, line: 362, type: !10132, scopeLine: 363, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2550, retainedNodes: !223)
!10267 = !DILocalVariable(name: "base", arg: 1, scope: !10266, file: !9856, line: 362, type: !9859)
!10268 = !DILocation(line: 362, column: 40, scope: !10266)
!10269 = !DILocalVariable(name: "enable", arg: 2, scope: !10266, file: !9856, line: 362, type: !743)
!10270 = !DILocation(line: 362, column: 51, scope: !10266)
!10271 = !DILocation(line: 364, column: 9, scope: !10272)
!10272 = distinct !DILexicalBlock(scope: !10266, file: !9856, line: 364, column: 9)
!10273 = !DILocation(line: 364, column: 9, scope: !10266)
!10274 = !DILocation(line: 365, column: 9, scope: !10272)
!10275 = !DILocation(line: 365, column: 29, scope: !10272)
!10276 = !DILocation(line: 367, column: 9, scope: !10272)
!10277 = !DILocation(line: 367, column: 29, scope: !10272)
!10278 = !DILocation(line: 368, column: 1, scope: !10266)
!10279 = distinct !DISubprogram(name: "UART_SetCtsPinLevel", scope: !9856, file: !9856, line: 379, type: !10132, scopeLine: 380, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2550, retainedNodes: !223)
!10280 = !DILocalVariable(name: "base", arg: 1, scope: !10279, file: !9856, line: 379, type: !9859)
!10281 = !DILocation(line: 379, column: 37, scope: !10279)
!10282 = !DILocalVariable(name: "active", arg: 2, scope: !10279, file: !9856, line: 379, type: !743)
!10283 = !DILocation(line: 379, column: 48, scope: !10279)
!10284 = !DILocation(line: 381, column: 9, scope: !10285)
!10285 = distinct !DILexicalBlock(scope: !10279, file: !9856, line: 381, column: 9)
!10286 = !DILocation(line: 381, column: 9, scope: !10279)
!10287 = !DILocation(line: 382, column: 9, scope: !10285)
!10288 = !DILocation(line: 382, column: 29, scope: !10285)
!10289 = !DILocation(line: 384, column: 9, scope: !10285)
!10290 = !DILocation(line: 384, column: 29, scope: !10285)
!10291 = !DILocation(line: 385, column: 1, scope: !10279)
!10292 = distinct !DISubprogram(name: "UART_SetModemMode", scope: !9856, file: !9856, line: 394, type: !10194, scopeLine: 395, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2550, retainedNodes: !223)
!10293 = !DILocalVariable(name: "base", arg: 1, scope: !10292, file: !9856, line: 394, type: !9859)
!10294 = !DILocation(line: 394, column: 35, scope: !10292)
!10295 = !DILocalVariable(name: "mode", arg: 2, scope: !10292, file: !9856, line: 394, type: !173)
!10296 = !DILocation(line: 394, column: 50, scope: !10292)
!10297 = !DILocation(line: 398, column: 29, scope: !10298)
!10298 = distinct !DILexicalBlock(scope: !10292, file: !9856, line: 398, column: 9)
!10299 = !DILocation(line: 398, column: 26, scope: !10298)
!10300 = !DILocation(line: 398, column: 9, scope: !10292)
!10301 = !DILocation(line: 399, column: 9, scope: !10298)
!10302 = !DILocation(line: 399, column: 29, scope: !10298)
!10303 = !DILocation(line: 401, column: 9, scope: !10298)
!10304 = !DILocation(line: 401, column: 29, scope: !10298)
!10305 = !DILocation(line: 402, column: 1, scope: !10292)
!10306 = distinct !DISubprogram(name: "UART_SetDtrPinLevel", scope: !9856, file: !9856, line: 412, type: !10132, scopeLine: 413, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2550, retainedNodes: !223)
!10307 = !DILocalVariable(name: "base", arg: 1, scope: !10306, file: !9856, line: 412, type: !9859)
!10308 = !DILocation(line: 412, column: 37, scope: !10306)
!10309 = !DILocalVariable(name: "active", arg: 2, scope: !10306, file: !9856, line: 412, type: !743)
!10310 = !DILocation(line: 412, column: 48, scope: !10306)
!10311 = !DILocation(line: 414, column: 9, scope: !10312)
!10312 = distinct !DILexicalBlock(scope: !10306, file: !9856, line: 414, column: 9)
!10313 = !DILocation(line: 414, column: 9, scope: !10306)
!10314 = !DILocation(line: 415, column: 9, scope: !10312)
!10315 = !DILocation(line: 415, column: 29, scope: !10312)
!10316 = !DILocation(line: 417, column: 9, scope: !10312)
!10317 = !DILocation(line: 417, column: 29, scope: !10312)
!10318 = !DILocation(line: 418, column: 1, scope: !10306)
!10319 = distinct !DISubprogram(name: "UART_SetDcdPinLevel", scope: !9856, file: !9856, line: 427, type: !10132, scopeLine: 428, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2550, retainedNodes: !223)
!10320 = !DILocalVariable(name: "base", arg: 1, scope: !10319, file: !9856, line: 427, type: !9859)
!10321 = !DILocation(line: 427, column: 37, scope: !10319)
!10322 = !DILocalVariable(name: "active", arg: 2, scope: !10319, file: !9856, line: 427, type: !743)
!10323 = !DILocation(line: 427, column: 48, scope: !10319)
!10324 = !DILocation(line: 429, column: 9, scope: !10325)
!10325 = distinct !DILexicalBlock(scope: !10319, file: !9856, line: 429, column: 9)
!10326 = !DILocation(line: 429, column: 9, scope: !10319)
!10327 = !DILocation(line: 430, column: 9, scope: !10325)
!10328 = !DILocation(line: 430, column: 29, scope: !10325)
!10329 = !DILocation(line: 432, column: 9, scope: !10325)
!10330 = !DILocation(line: 432, column: 29, scope: !10325)
!10331 = !DILocation(line: 433, column: 1, scope: !10319)
!10332 = distinct !DISubprogram(name: "UART_SetRiPinLevel", scope: !9856, file: !9856, line: 442, type: !10132, scopeLine: 443, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2550, retainedNodes: !223)
!10333 = !DILocalVariable(name: "base", arg: 1, scope: !10332, file: !9856, line: 442, type: !9859)
!10334 = !DILocation(line: 442, column: 36, scope: !10332)
!10335 = !DILocalVariable(name: "active", arg: 2, scope: !10332, file: !9856, line: 442, type: !743)
!10336 = !DILocation(line: 442, column: 47, scope: !10332)
!10337 = !DILocation(line: 444, column: 9, scope: !10338)
!10338 = distinct !DILexicalBlock(scope: !10332, file: !9856, line: 444, column: 9)
!10339 = !DILocation(line: 444, column: 9, scope: !10332)
!10340 = !DILocation(line: 445, column: 9, scope: !10338)
!10341 = !DILocation(line: 445, column: 29, scope: !10338)
!10342 = !DILocation(line: 447, column: 9, scope: !10338)
!10343 = !DILocation(line: 447, column: 29, scope: !10338)
!10344 = !DILocation(line: 448, column: 1, scope: !10332)
!10345 = distinct !DISubprogram(name: "UART_Putchar9", scope: !9856, file: !9856, line: 460, type: !10346, scopeLine: 461, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2550, retainedNodes: !223)
!10346 = !DISubroutineType(types: !10347)
!10347 = !{null, !9859, !170}
!10348 = !DILocalVariable(name: "base", arg: 1, scope: !10345, file: !9856, line: 460, type: !9859)
!10349 = !DILocation(line: 460, column: 31, scope: !10345)
!10350 = !DILocalVariable(name: "data", arg: 2, scope: !10345, file: !9856, line: 460, type: !170)
!10351 = !DILocation(line: 460, column: 46, scope: !10345)
!10352 = !DILocation(line: 464, column: 9, scope: !10353)
!10353 = distinct !DILexicalBlock(scope: !10345, file: !9856, line: 464, column: 9)
!10354 = !DILocation(line: 464, column: 14, scope: !10353)
!10355 = !DILocation(line: 464, column: 9, scope: !10345)
!10356 = !DILocation(line: 465, column: 9, scope: !10353)
!10357 = !DILocation(line: 465, column: 29, scope: !10353)
!10358 = !DILocation(line: 467, column: 9, scope: !10353)
!10359 = !DILocation(line: 467, column: 29, scope: !10353)
!10360 = !DILocation(line: 468, column: 28, scope: !10345)
!10361 = !DILocation(line: 468, column: 33, scope: !10345)
!10362 = !DILocation(line: 468, column: 5, scope: !10345)
!10363 = !DILocation(line: 468, column: 25, scope: !10345)
!10364 = !DILocation(line: 469, column: 1, scope: !10345)
!10365 = distinct !DISubprogram(name: "UART_Getchar9", scope: !9856, file: !9856, line: 478, type: !10366, scopeLine: 479, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2550, retainedNodes: !223)
!10366 = !DISubroutineType(types: !10367)
!10367 = !{!170, !9859}
!10368 = !DILocalVariable(name: "base", arg: 1, scope: !10365, file: !9856, line: 478, type: !9859)
!10369 = !DILocation(line: 478, column: 35, scope: !10365)
!10370 = !DILocalVariable(name: "rxData", scope: !10365, file: !9856, line: 480, type: !170)
!10371 = !DILocation(line: 480, column: 14, scope: !10365)
!10372 = !DILocation(line: 480, column: 23, scope: !10365)
!10373 = !DILocation(line: 482, column: 9, scope: !10374)
!10374 = distinct !DILexicalBlock(scope: !10365, file: !9856, line: 482, column: 9)
!10375 = !DILocation(line: 482, column: 16, scope: !10374)
!10376 = !DILocation(line: 482, column: 9, scope: !10365)
!10377 = !DILocation(line: 484, column: 19, scope: !10378)
!10378 = distinct !DILexicalBlock(scope: !10374, file: !9856, line: 483, column: 5)
!10379 = !DILocation(line: 484, column: 26, scope: !10378)
!10380 = !DILocation(line: 484, column: 36, scope: !10378)
!10381 = !DILocation(line: 484, column: 18, scope: !10378)
!10382 = !DILocation(line: 484, column: 16, scope: !10378)
!10383 = !DILocation(line: 485, column: 5, scope: !10378)
!10384 = !DILocation(line: 488, column: 16, scope: !10385)
!10385 = distinct !DILexicalBlock(scope: !10374, file: !9856, line: 487, column: 5)
!10386 = !DILocation(line: 491, column: 12, scope: !10365)
!10387 = !DILocation(line: 491, column: 5, scope: !10365)
!10388 = distinct !DISubprogram(name: "UART_SetMultidropMode", scope: !9856, file: !9856, line: 501, type: !10132, scopeLine: 502, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2550, retainedNodes: !223)
!10389 = !DILocalVariable(name: "base", arg: 1, scope: !10388, file: !9856, line: 501, type: !9859)
!10390 = !DILocation(line: 501, column: 39, scope: !10388)
!10391 = !DILocalVariable(name: "enable", arg: 2, scope: !10388, file: !9856, line: 501, type: !743)
!10392 = !DILocation(line: 501, column: 50, scope: !10388)
!10393 = !DILocation(line: 503, column: 9, scope: !10394)
!10394 = distinct !DILexicalBlock(scope: !10388, file: !9856, line: 503, column: 9)
!10395 = !DILocation(line: 503, column: 9, scope: !10388)
!10396 = !DILocation(line: 504, column: 9, scope: !10394)
!10397 = !DILocation(line: 504, column: 29, scope: !10394)
!10398 = !DILocation(line: 506, column: 9, scope: !10394)
!10399 = !DILocation(line: 506, column: 29, scope: !10394)
!10400 = !DILocation(line: 507, column: 1, scope: !10388)
!10401 = distinct !DISubprogram(name: "UART_SetSlaveAddressDetectCmd", scope: !9856, file: !9856, line: 516, type: !10132, scopeLine: 517, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2550, retainedNodes: !223)
!10402 = !DILocalVariable(name: "base", arg: 1, scope: !10401, file: !9856, line: 516, type: !9859)
!10403 = !DILocation(line: 516, column: 47, scope: !10401)
!10404 = !DILocalVariable(name: "enable", arg: 2, scope: !10401, file: !9856, line: 516, type: !743)
!10405 = !DILocation(line: 516, column: 58, scope: !10401)
!10406 = !DILocation(line: 518, column: 9, scope: !10407)
!10407 = distinct !DILexicalBlock(scope: !10401, file: !9856, line: 518, column: 9)
!10408 = !DILocation(line: 518, column: 9, scope: !10401)
!10409 = !DILocation(line: 519, column: 9, scope: !10407)
!10410 = !DILocation(line: 519, column: 29, scope: !10407)
!10411 = !DILocation(line: 521, column: 9, scope: !10407)
!10412 = !DILocation(line: 521, column: 29, scope: !10407)
!10413 = !DILocation(line: 522, column: 1, scope: !10401)
!10414 = distinct !DISubprogram(name: "UART_SetIrDACmd", scope: !9856, file: !9856, line: 534, type: !10132, scopeLine: 535, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2550, retainedNodes: !223)
!10415 = !DILocalVariable(name: "base", arg: 1, scope: !10414, file: !9856, line: 534, type: !9859)
!10416 = !DILocation(line: 534, column: 33, scope: !10414)
!10417 = !DILocalVariable(name: "enable", arg: 2, scope: !10414, file: !9856, line: 534, type: !743)
!10418 = !DILocation(line: 534, column: 44, scope: !10414)
!10419 = !DILocation(line: 536, column: 9, scope: !10420)
!10420 = distinct !DILexicalBlock(scope: !10414, file: !9856, line: 536, column: 9)
!10421 = !DILocation(line: 536, column: 9, scope: !10414)
!10422 = !DILocation(line: 537, column: 9, scope: !10420)
!10423 = !DILocation(line: 537, column: 29, scope: !10420)
!10424 = !DILocation(line: 539, column: 9, scope: !10420)
!10425 = !DILocation(line: 539, column: 29, scope: !10420)
!10426 = !DILocation(line: 540, column: 1, scope: !10414)
!10427 = distinct !DISubprogram(name: "UART_SetIrDAVoteClock", scope: !9856, file: !9856, line: 550, type: !10194, scopeLine: 551, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2550, retainedNodes: !223)
!10428 = !DILocalVariable(name: "base", arg: 1, scope: !10427, file: !9856, line: 550, type: !9859)
!10429 = !DILocation(line: 550, column: 39, scope: !10427)
!10430 = !DILocalVariable(name: "voteClock", arg: 2, scope: !10427, file: !9856, line: 550, type: !173)
!10431 = !DILocation(line: 550, column: 54, scope: !10427)
!10432 = !DILocation(line: 555, column: 38, scope: !10433)
!10433 = distinct !DILexicalBlock(scope: !10427, file: !9856, line: 555, column: 9)
!10434 = !DILocation(line: 555, column: 35, scope: !10433)
!10435 = !DILocation(line: 555, column: 9, scope: !10427)
!10436 = !DILocation(line: 556, column: 9, scope: !10433)
!10437 = !DILocation(line: 556, column: 29, scope: !10433)
!10438 = !DILocation(line: 558, column: 9, scope: !10433)
!10439 = !DILocation(line: 558, column: 29, scope: !10433)
!10440 = !DILocation(line: 559, column: 1, scope: !10427)
!10441 = distinct !DISubprogram(name: "UART_SetAutoBaudRateCmd", scope: !9856, file: !9856, line: 571, type: !10132, scopeLine: 572, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2550, retainedNodes: !223)
!10442 = !DILocalVariable(name: "base", arg: 1, scope: !10441, file: !9856, line: 571, type: !9859)
!10443 = !DILocation(line: 571, column: 41, scope: !10441)
!10444 = !DILocalVariable(name: "enable", arg: 2, scope: !10441, file: !9856, line: 571, type: !743)
!10445 = !DILocation(line: 571, column: 52, scope: !10441)
!10446 = !DILocation(line: 573, column: 9, scope: !10447)
!10447 = distinct !DILexicalBlock(scope: !10441, file: !9856, line: 573, column: 9)
!10448 = !DILocation(line: 573, column: 9, scope: !10441)
!10449 = !DILocation(line: 574, column: 9, scope: !10447)
!10450 = !DILocation(line: 574, column: 29, scope: !10447)
!10451 = !DILocation(line: 576, column: 9, scope: !10447)
!10452 = !DILocation(line: 576, column: 29, scope: !10447)
!10453 = !DILocation(line: 577, column: 1, scope: !10441)
!10454 = distinct !DISubprogram(name: "UART_SendBreakChar", scope: !9856, file: !9856, line: 587, type: !10132, scopeLine: 588, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2550, retainedNodes: !223)
!10455 = !DILocalVariable(name: "base", arg: 1, scope: !10454, file: !9856, line: 587, type: !9859)
!10456 = !DILocation(line: 587, column: 36, scope: !10454)
!10457 = !DILocalVariable(name: "active", arg: 2, scope: !10454, file: !9856, line: 587, type: !743)
!10458 = !DILocation(line: 587, column: 47, scope: !10454)
!10459 = !DILocation(line: 589, column: 9, scope: !10460)
!10460 = distinct !DILexicalBlock(scope: !10454, file: !9856, line: 589, column: 9)
!10461 = !DILocation(line: 589, column: 9, scope: !10454)
!10462 = !DILocation(line: 590, column: 9, scope: !10460)
!10463 = !DILocation(line: 590, column: 29, scope: !10460)
!10464 = !DILocation(line: 592, column: 9, scope: !10460)
!10465 = !DILocation(line: 592, column: 29, scope: !10460)
!10466 = !DILocation(line: 593, column: 1, scope: !10454)
!10467 = distinct !DISubprogram(name: "UART_SetEscapeDecectCmd", scope: !9856, file: !9856, line: 602, type: !10132, scopeLine: 603, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2550, retainedNodes: !223)
!10468 = !DILocalVariable(name: "base", arg: 1, scope: !10467, file: !9856, line: 602, type: !9859)
!10469 = !DILocation(line: 602, column: 41, scope: !10467)
!10470 = !DILocalVariable(name: "enable", arg: 2, scope: !10467, file: !9856, line: 602, type: !743)
!10471 = !DILocation(line: 602, column: 52, scope: !10467)
!10472 = !DILocation(line: 604, column: 9, scope: !10473)
!10473 = distinct !DILexicalBlock(scope: !10467, file: !9856, line: 604, column: 9)
!10474 = !DILocation(line: 604, column: 9, scope: !10467)
!10475 = !DILocation(line: 605, column: 9, scope: !10473)
!10476 = !DILocation(line: 605, column: 29, scope: !10473)
!10477 = !DILocation(line: 607, column: 9, scope: !10473)
!10478 = !DILocation(line: 607, column: 29, scope: !10473)
!10479 = !DILocation(line: 608, column: 1, scope: !10467)
!10480 = distinct !DISubprogram(name: "get_gpt_clock_freq", scope: !10481, file: !10481, line: 42, type: !10482, scopeLine: 43, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2562, retainedNodes: !223)
!10481 = !DIFile(filename: "modules/hal/nxp/imx/devices/MCIMX7D/clock_freq.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10482 = !DISubroutineType(types: !10483)
!10483 = !{!173, !10484}
!10484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10485, size: 32)
!10485 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPT_Type", file: !566, line: 20831, baseType: !10486)
!10486 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !566, line: 20820, size: 320, elements: !10487)
!10487 = !{!10488, !10489, !10490, !10491, !10492, !10493, !10494, !10495, !10496, !10497}
!10488 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !10486, file: !566, line: 20821, baseType: !570, size: 32)
!10489 = !DIDerivedType(tag: DW_TAG_member, name: "PR", scope: !10486, file: !566, line: 20822, baseType: !570, size: 32, offset: 32)
!10490 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !10486, file: !566, line: 20823, baseType: !570, size: 32, offset: 64)
!10491 = !DIDerivedType(tag: DW_TAG_member, name: "IR", scope: !10486, file: !566, line: 20824, baseType: !570, size: 32, offset: 96)
!10492 = !DIDerivedType(tag: DW_TAG_member, name: "OCR1", scope: !10486, file: !566, line: 20825, baseType: !570, size: 32, offset: 128)
!10493 = !DIDerivedType(tag: DW_TAG_member, name: "OCR2", scope: !10486, file: !566, line: 20826, baseType: !570, size: 32, offset: 160)
!10494 = !DIDerivedType(tag: DW_TAG_member, name: "OCR3", scope: !10486, file: !566, line: 20827, baseType: !570, size: 32, offset: 192)
!10495 = !DIDerivedType(tag: DW_TAG_member, name: "ICR1", scope: !10486, file: !566, line: 20828, baseType: !641, size: 32, offset: 224)
!10496 = !DIDerivedType(tag: DW_TAG_member, name: "ICR2", scope: !10486, file: !566, line: 20829, baseType: !641, size: 32, offset: 256)
!10497 = !DIDerivedType(tag: DW_TAG_member, name: "CNT", scope: !10486, file: !566, line: 20830, baseType: !641, size: 32, offset: 288)
!10498 = !DILocalVariable(name: "base", arg: 1, scope: !10480, file: !10481, line: 42, type: !10484)
!10499 = !DILocation(line: 42, column: 39, scope: !10480)
!10500 = !DILocalVariable(name: "root", scope: !10480, file: !10481, line: 44, type: !173)
!10501 = !DILocation(line: 44, column: 11, scope: !10480)
!10502 = !DILocalVariable(name: "hz", scope: !10480, file: !10481, line: 45, type: !173)
!10503 = !DILocation(line: 45, column: 11, scope: !10480)
!10504 = !DILocalVariable(name: "pre", scope: !10480, file: !10481, line: 46, type: !173)
!10505 = !DILocation(line: 46, column: 11, scope: !10480)
!10506 = !DILocalVariable(name: "post", scope: !10480, file: !10481, line: 46, type: !173)
!10507 = !DILocation(line: 46, column: 16, scope: !10480)
!10508 = !DILocation(line: 48, column: 20, scope: !10480)
!10509 = !DILocation(line: 48, column: 10, scope: !10480)
!10510 = !DILocation(line: 48, column: 2, scope: !10480)
!10511 = !DILocation(line: 50, column: 10, scope: !10512)
!10512 = distinct !DILexicalBlock(scope: !10480, file: !10481, line: 48, column: 26)
!10513 = !DILocation(line: 50, column: 8, scope: !10512)
!10514 = !DILocation(line: 51, column: 3, scope: !10512)
!10515 = !DILocation(line: 52, column: 3, scope: !10512)
!10516 = !DILocation(line: 54, column: 10, scope: !10512)
!10517 = !DILocation(line: 54, column: 8, scope: !10512)
!10518 = !DILocation(line: 55, column: 3, scope: !10512)
!10519 = !DILocation(line: 56, column: 3, scope: !10512)
!10520 = !DILocation(line: 58, column: 3, scope: !10512)
!10521 = !DILocation(line: 61, column: 10, scope: !10480)
!10522 = !DILocation(line: 61, column: 2, scope: !10480)
!10523 = !DILocation(line: 63, column: 6, scope: !10524)
!10524 = distinct !DILexicalBlock(scope: !10480, file: !10481, line: 61, column: 16)
!10525 = !DILocation(line: 64, column: 3, scope: !10524)
!10526 = !DILocation(line: 66, column: 8, scope: !10524)
!10527 = !DILocation(line: 66, column: 6, scope: !10524)
!10528 = !DILocation(line: 67, column: 3, scope: !10524)
!10529 = !DILocation(line: 69, column: 3, scope: !10524)
!10530 = !DILocation(line: 72, column: 9, scope: !10480)
!10531 = !DILocation(line: 72, column: 15, scope: !10480)
!10532 = !DILocation(line: 72, column: 19, scope: !10480)
!10533 = !DILocation(line: 72, column: 12, scope: !10480)
!10534 = !DILocation(line: 72, column: 27, scope: !10480)
!10535 = !DILocation(line: 72, column: 32, scope: !10480)
!10536 = !DILocation(line: 72, column: 24, scope: !10480)
!10537 = !DILocation(line: 72, column: 2, scope: !10480)
!10538 = !DILocation(line: 73, column: 1, scope: !10480)
!10539 = distinct !DISubprogram(name: "CCM_GetRootMux", scope: !282, file: !282, line: 368, type: !10540, scopeLine: 369, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2562, retainedNodes: !223)
!10540 = !DISubroutineType(types: !10541)
!10541 = !{!173, !2576, !173}
!10542 = !DILocalVariable(name: "base", arg: 1, scope: !10539, file: !282, line: 368, type: !2576)
!10543 = !DILocation(line: 368, column: 50, scope: !10539)
!10544 = !DILocalVariable(name: "ccmRoot", arg: 2, scope: !10539, file: !282, line: 368, type: !173)
!10545 = !DILocation(line: 368, column: 65, scope: !10539)
!10546 = !DILocation(line: 370, column: 13, scope: !10539)
!10547 = !DILocation(line: 370, column: 30, scope: !10539)
!10548 = !DILocation(line: 370, column: 58, scope: !10539)
!10549 = !DILocation(line: 370, column: 5, scope: !10539)
!10550 = distinct !DISubprogram(name: "get_ecspi_clock_freq", scope: !10481, file: !10481, line: 81, type: !10551, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2562, retainedNodes: !223)
!10551 = !DISubroutineType(types: !10552)
!10552 = !{!173, !10553}
!10553 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10554, size: 32)
!10554 = !DIDerivedType(tag: DW_TAG_typedef, name: "ECSPI_Type", file: !566, line: 12462, baseType: !10555)
!10555 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !566, line: 12450, size: 544, elements: !10556)
!10556 = !{!10557, !10558, !10559, !10560, !10561, !10562, !10563, !10564, !10565, !10566, !10570}
!10557 = !DIDerivedType(tag: DW_TAG_member, name: "RXDATA", scope: !10555, file: !566, line: 12451, baseType: !641, size: 32)
!10558 = !DIDerivedType(tag: DW_TAG_member, name: "TXDATA", scope: !10555, file: !566, line: 12452, baseType: !570, size: 32, offset: 32)
!10559 = !DIDerivedType(tag: DW_TAG_member, name: "CONREG", scope: !10555, file: !566, line: 12453, baseType: !570, size: 32, offset: 64)
!10560 = !DIDerivedType(tag: DW_TAG_member, name: "CONFIGREG", scope: !10555, file: !566, line: 12454, baseType: !570, size: 32, offset: 96)
!10561 = !DIDerivedType(tag: DW_TAG_member, name: "INTREG", scope: !10555, file: !566, line: 12455, baseType: !570, size: 32, offset: 128)
!10562 = !DIDerivedType(tag: DW_TAG_member, name: "DMAREG", scope: !10555, file: !566, line: 12456, baseType: !570, size: 32, offset: 160)
!10563 = !DIDerivedType(tag: DW_TAG_member, name: "STATREG", scope: !10555, file: !566, line: 12457, baseType: !570, size: 32, offset: 192)
!10564 = !DIDerivedType(tag: DW_TAG_member, name: "PERIODREG", scope: !10555, file: !566, line: 12458, baseType: !570, size: 32, offset: 224)
!10565 = !DIDerivedType(tag: DW_TAG_member, name: "TESTREG", scope: !10555, file: !566, line: 12459, baseType: !570, size: 32, offset: 256)
!10566 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !10555, file: !566, line: 12460, baseType: !10567, size: 224, offset: 288)
!10567 = !DICompositeType(tag: DW_TAG_array_type, baseType: !156, size: 224, elements: !10568)
!10568 = !{!10569}
!10569 = !DISubrange(count: 28)
!10570 = !DIDerivedType(tag: DW_TAG_member, name: "MSGDATA", scope: !10555, file: !566, line: 12461, baseType: !570, size: 32, offset: 512)
!10571 = !DILocalVariable(name: "base", arg: 1, scope: !10550, file: !10481, line: 81, type: !10553)
!10572 = !DILocation(line: 81, column: 43, scope: !10550)
!10573 = !DILocalVariable(name: "root", scope: !10550, file: !10481, line: 83, type: !173)
!10574 = !DILocation(line: 83, column: 11, scope: !10550)
!10575 = !DILocalVariable(name: "hz", scope: !10550, file: !10481, line: 84, type: !173)
!10576 = !DILocation(line: 84, column: 11, scope: !10550)
!10577 = !DILocalVariable(name: "pre", scope: !10550, file: !10481, line: 85, type: !173)
!10578 = !DILocation(line: 85, column: 11, scope: !10550)
!10579 = !DILocalVariable(name: "post", scope: !10550, file: !10481, line: 85, type: !173)
!10580 = !DILocation(line: 85, column: 16, scope: !10550)
!10581 = !DILocation(line: 87, column: 20, scope: !10550)
!10582 = !DILocation(line: 87, column: 10, scope: !10550)
!10583 = !DILocation(line: 87, column: 2, scope: !10550)
!10584 = !DILocation(line: 89, column: 10, scope: !10585)
!10585 = distinct !DILexicalBlock(scope: !10550, file: !10481, line: 87, column: 26)
!10586 = !DILocation(line: 89, column: 8, scope: !10585)
!10587 = !DILocation(line: 90, column: 3, scope: !10585)
!10588 = !DILocation(line: 91, column: 3, scope: !10585)
!10589 = !DILocation(line: 93, column: 10, scope: !10585)
!10590 = !DILocation(line: 93, column: 8, scope: !10585)
!10591 = !DILocation(line: 94, column: 3, scope: !10585)
!10592 = !DILocation(line: 95, column: 3, scope: !10585)
!10593 = !DILocation(line: 97, column: 3, scope: !10585)
!10594 = !DILocation(line: 100, column: 10, scope: !10550)
!10595 = !DILocation(line: 100, column: 2, scope: !10550)
!10596 = !DILocation(line: 102, column: 6, scope: !10597)
!10597 = distinct !DILexicalBlock(scope: !10550, file: !10481, line: 100, column: 16)
!10598 = !DILocation(line: 103, column: 3, scope: !10597)
!10599 = !DILocation(line: 105, column: 8, scope: !10597)
!10600 = !DILocation(line: 105, column: 6, scope: !10597)
!10601 = !DILocation(line: 106, column: 3, scope: !10597)
!10602 = !DILocation(line: 108, column: 3, scope: !10597)
!10603 = !DILocation(line: 111, column: 9, scope: !10550)
!10604 = !DILocation(line: 111, column: 15, scope: !10550)
!10605 = !DILocation(line: 111, column: 19, scope: !10550)
!10606 = !DILocation(line: 111, column: 12, scope: !10550)
!10607 = !DILocation(line: 111, column: 27, scope: !10550)
!10608 = !DILocation(line: 111, column: 32, scope: !10550)
!10609 = !DILocation(line: 111, column: 24, scope: !10550)
!10610 = !DILocation(line: 111, column: 2, scope: !10550)
!10611 = !DILocation(line: 112, column: 1, scope: !10550)
!10612 = distinct !DISubprogram(name: "get_flexcan_clock_freq", scope: !10481, file: !10481, line: 120, type: !10613, scopeLine: 121, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2562, retainedNodes: !223)
!10613 = !DISubroutineType(types: !10614)
!10614 = !{!173, !10615}
!10615 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10616, size: 32)
!10616 = !DIDerivedType(tag: DW_TAG_typedef, name: "CAN_Type", file: !566, line: 3477, baseType: !10617)
!10617 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !566, line: 3446, size: 20256, elements: !10618)
!10618 = !{!10619, !10620, !10621, !10622, !10624, !10625, !10626, !10627, !10628, !10629, !10630, !10631, !10632, !10633, !10634, !10635, !10637, !10638, !10639, !10640, !10641, !10651, !10653, !10655, !10656}
!10619 = !DIDerivedType(tag: DW_TAG_member, name: "MCR", scope: !10617, file: !566, line: 3447, baseType: !570, size: 32)
!10620 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL1", scope: !10617, file: !566, line: 3448, baseType: !570, size: 32, offset: 32)
!10621 = !DIDerivedType(tag: DW_TAG_member, name: "TIMER", scope: !10617, file: !566, line: 3449, baseType: !570, size: 32, offset: 64)
!10622 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !10617, file: !566, line: 3450, baseType: !10623, size: 32, offset: 96)
!10623 = !DICompositeType(tag: DW_TAG_array_type, baseType: !156, size: 32, elements: !1513)
!10624 = !DIDerivedType(tag: DW_TAG_member, name: "RXMGMASK", scope: !10617, file: !566, line: 3451, baseType: !570, size: 32, offset: 128)
!10625 = !DIDerivedType(tag: DW_TAG_member, name: "RX14MASK", scope: !10617, file: !566, line: 3452, baseType: !570, size: 32, offset: 160)
!10626 = !DIDerivedType(tag: DW_TAG_member, name: "RX15MASK", scope: !10617, file: !566, line: 3453, baseType: !570, size: 32, offset: 192)
!10627 = !DIDerivedType(tag: DW_TAG_member, name: "ECR", scope: !10617, file: !566, line: 3454, baseType: !570, size: 32, offset: 224)
!10628 = !DIDerivedType(tag: DW_TAG_member, name: "ESR1", scope: !10617, file: !566, line: 3455, baseType: !570, size: 32, offset: 256)
!10629 = !DIDerivedType(tag: DW_TAG_member, name: "IMASK2", scope: !10617, file: !566, line: 3456, baseType: !570, size: 32, offset: 288)
!10630 = !DIDerivedType(tag: DW_TAG_member, name: "IMASK1", scope: !10617, file: !566, line: 3457, baseType: !570, size: 32, offset: 320)
!10631 = !DIDerivedType(tag: DW_TAG_member, name: "IFLAG2", scope: !10617, file: !566, line: 3458, baseType: !570, size: 32, offset: 352)
!10632 = !DIDerivedType(tag: DW_TAG_member, name: "IFLAG1", scope: !10617, file: !566, line: 3459, baseType: !570, size: 32, offset: 384)
!10633 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL2", scope: !10617, file: !566, line: 3460, baseType: !570, size: 32, offset: 416)
!10634 = !DIDerivedType(tag: DW_TAG_member, name: "ESR2", scope: !10617, file: !566, line: 3461, baseType: !641, size: 32, offset: 448)
!10635 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !10617, file: !566, line: 3462, baseType: !10636, size: 64, offset: 480)
!10636 = !DICompositeType(tag: DW_TAG_array_type, baseType: !156, size: 64, elements: !1459)
!10637 = !DIDerivedType(tag: DW_TAG_member, name: "CRCR", scope: !10617, file: !566, line: 3463, baseType: !641, size: 32, offset: 544)
!10638 = !DIDerivedType(tag: DW_TAG_member, name: "RXFGMASK", scope: !10617, file: !566, line: 3464, baseType: !570, size: 32, offset: 576)
!10639 = !DIDerivedType(tag: DW_TAG_member, name: "RXFIR", scope: !10617, file: !566, line: 3465, baseType: !641, size: 32, offset: 608)
!10640 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_2", scope: !10617, file: !566, line: 3466, baseType: !627, size: 384, offset: 640)
!10641 = !DIDerivedType(tag: DW_TAG_member, name: "MB", scope: !10617, file: !566, line: 3472, baseType: !10642, size: 8192, offset: 1024)
!10642 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10643, size: 8192, elements: !10649)
!10643 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !10617, file: !566, line: 3467, size: 128, elements: !10644)
!10644 = !{!10645, !10646, !10647, !10648}
!10645 = !DIDerivedType(tag: DW_TAG_member, name: "CS", scope: !10643, file: !566, line: 3468, baseType: !570, size: 32)
!10646 = !DIDerivedType(tag: DW_TAG_member, name: "ID", scope: !10643, file: !566, line: 3469, baseType: !570, size: 32, offset: 32)
!10647 = !DIDerivedType(tag: DW_TAG_member, name: "WORD0", scope: !10643, file: !566, line: 3470, baseType: !570, size: 32, offset: 64)
!10648 = !DIDerivedType(tag: DW_TAG_member, name: "WORD1", scope: !10643, file: !566, line: 3471, baseType: !570, size: 32, offset: 96)
!10649 = !{!10650}
!10650 = !DISubrange(count: 64)
!10651 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_3", scope: !10617, file: !566, line: 3473, baseType: !10652, size: 8192, offset: 9216)
!10652 = !DICompositeType(tag: DW_TAG_array_type, baseType: !156, size: 8192, elements: !1803)
!10653 = !DIDerivedType(tag: DW_TAG_member, name: "RXIMR", scope: !10617, file: !566, line: 3474, baseType: !10654, size: 2048, offset: 17408)
!10654 = !DICompositeType(tag: DW_TAG_array_type, baseType: !570, size: 2048, elements: !10649)
!10655 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_4", scope: !10617, file: !566, line: 3475, baseType: !2477, size: 768, offset: 19456)
!10656 = !DIDerivedType(tag: DW_TAG_member, name: "GFWR", scope: !10617, file: !566, line: 3476, baseType: !570, size: 32, offset: 20224)
!10657 = !DILocalVariable(name: "base", arg: 1, scope: !10612, file: !10481, line: 120, type: !10615)
!10658 = !DILocation(line: 120, column: 43, scope: !10612)
!10659 = !DILocalVariable(name: "root", scope: !10612, file: !10481, line: 122, type: !173)
!10660 = !DILocation(line: 122, column: 11, scope: !10612)
!10661 = !DILocalVariable(name: "hz", scope: !10612, file: !10481, line: 123, type: !173)
!10662 = !DILocation(line: 123, column: 11, scope: !10612)
!10663 = !DILocalVariable(name: "pre", scope: !10612, file: !10481, line: 124, type: !173)
!10664 = !DILocation(line: 124, column: 11, scope: !10612)
!10665 = !DILocalVariable(name: "post", scope: !10612, file: !10481, line: 124, type: !173)
!10666 = !DILocation(line: 124, column: 16, scope: !10612)
!10667 = !DILocation(line: 126, column: 20, scope: !10612)
!10668 = !DILocation(line: 126, column: 10, scope: !10612)
!10669 = !DILocation(line: 126, column: 2, scope: !10612)
!10670 = !DILocation(line: 128, column: 10, scope: !10671)
!10671 = distinct !DILexicalBlock(scope: !10612, file: !10481, line: 126, column: 26)
!10672 = !DILocation(line: 128, column: 8, scope: !10671)
!10673 = !DILocation(line: 129, column: 3, scope: !10671)
!10674 = !DILocation(line: 130, column: 3, scope: !10671)
!10675 = !DILocation(line: 132, column: 10, scope: !10671)
!10676 = !DILocation(line: 132, column: 8, scope: !10671)
!10677 = !DILocation(line: 133, column: 3, scope: !10671)
!10678 = !DILocation(line: 134, column: 3, scope: !10671)
!10679 = !DILocation(line: 136, column: 3, scope: !10671)
!10680 = !DILocation(line: 139, column: 10, scope: !10612)
!10681 = !DILocation(line: 139, column: 2, scope: !10612)
!10682 = !DILocation(line: 141, column: 6, scope: !10683)
!10683 = distinct !DILexicalBlock(scope: !10612, file: !10481, line: 139, column: 16)
!10684 = !DILocation(line: 142, column: 3, scope: !10683)
!10685 = !DILocation(line: 144, column: 8, scope: !10683)
!10686 = !DILocation(line: 144, column: 45, scope: !10683)
!10687 = !DILocation(line: 144, column: 6, scope: !10683)
!10688 = !DILocation(line: 145, column: 3, scope: !10683)
!10689 = !DILocation(line: 147, column: 8, scope: !10683)
!10690 = !DILocation(line: 147, column: 6, scope: !10683)
!10691 = !DILocation(line: 148, column: 3, scope: !10683)
!10692 = !DILocation(line: 150, column: 3, scope: !10683)
!10693 = !DILocation(line: 153, column: 9, scope: !10612)
!10694 = !DILocation(line: 153, column: 15, scope: !10612)
!10695 = !DILocation(line: 153, column: 19, scope: !10612)
!10696 = !DILocation(line: 153, column: 12, scope: !10612)
!10697 = !DILocation(line: 153, column: 27, scope: !10612)
!10698 = !DILocation(line: 153, column: 32, scope: !10612)
!10699 = !DILocation(line: 153, column: 24, scope: !10612)
!10700 = !DILocation(line: 153, column: 2, scope: !10612)
!10701 = !DILocation(line: 154, column: 1, scope: !10612)
!10702 = distinct !DISubprogram(name: "get_i2c_clock_freq", scope: !10481, file: !10481, line: 162, type: !10703, scopeLine: 163, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2562, retainedNodes: !223)
!10703 = !DISubroutineType(types: !10704)
!10704 = !{!173, !10705}
!10705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10706, size: 32)
!10706 = !DIDerivedType(tag: DW_TAG_typedef, name: "I2C_Type", file: !566, line: 21082, baseType: !10707)
!10707 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !566, line: 21072, size: 144, elements: !10708)
!10708 = !{!10709, !10710, !10712, !10713, !10714, !10715, !10716, !10717, !10718}
!10709 = !DIDerivedType(tag: DW_TAG_member, name: "IADR", scope: !10707, file: !566, line: 21073, baseType: !684, size: 16)
!10710 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !10707, file: !566, line: 21074, baseType: !10711, size: 16, offset: 16)
!10711 = !DICompositeType(tag: DW_TAG_array_type, baseType: !156, size: 16, elements: !145)
!10712 = !DIDerivedType(tag: DW_TAG_member, name: "IFDR", scope: !10707, file: !566, line: 21075, baseType: !684, size: 16, offset: 32)
!10713 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !10707, file: !566, line: 21076, baseType: !10711, size: 16, offset: 48)
!10714 = !DIDerivedType(tag: DW_TAG_member, name: "I2CR", scope: !10707, file: !566, line: 21077, baseType: !684, size: 16, offset: 64)
!10715 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_2", scope: !10707, file: !566, line: 21078, baseType: !10711, size: 16, offset: 80)
!10716 = !DIDerivedType(tag: DW_TAG_member, name: "I2SR", scope: !10707, file: !566, line: 21079, baseType: !684, size: 16, offset: 96)
!10717 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_3", scope: !10707, file: !566, line: 21080, baseType: !10711, size: 16, offset: 112)
!10718 = !DIDerivedType(tag: DW_TAG_member, name: "I2DR", scope: !10707, file: !566, line: 21081, baseType: !684, size: 16, offset: 128)
!10719 = !DILocalVariable(name: "base", arg: 1, scope: !10702, file: !10481, line: 162, type: !10705)
!10720 = !DILocation(line: 162, column: 39, scope: !10702)
!10721 = !DILocalVariable(name: "root", scope: !10702, file: !10481, line: 164, type: !173)
!10722 = !DILocation(line: 164, column: 11, scope: !10702)
!10723 = !DILocalVariable(name: "hz", scope: !10702, file: !10481, line: 165, type: !173)
!10724 = !DILocation(line: 165, column: 11, scope: !10702)
!10725 = !DILocalVariable(name: "pre", scope: !10702, file: !10481, line: 166, type: !173)
!10726 = !DILocation(line: 166, column: 11, scope: !10702)
!10727 = !DILocalVariable(name: "post", scope: !10702, file: !10481, line: 166, type: !173)
!10728 = !DILocation(line: 166, column: 16, scope: !10702)
!10729 = !DILocation(line: 168, column: 20, scope: !10702)
!10730 = !DILocation(line: 168, column: 10, scope: !10702)
!10731 = !DILocation(line: 168, column: 2, scope: !10702)
!10732 = !DILocation(line: 170, column: 10, scope: !10733)
!10733 = distinct !DILexicalBlock(scope: !10702, file: !10481, line: 168, column: 26)
!10734 = !DILocation(line: 170, column: 8, scope: !10733)
!10735 = !DILocation(line: 171, column: 3, scope: !10733)
!10736 = !DILocation(line: 172, column: 3, scope: !10733)
!10737 = !DILocation(line: 174, column: 10, scope: !10733)
!10738 = !DILocation(line: 174, column: 8, scope: !10733)
!10739 = !DILocation(line: 175, column: 3, scope: !10733)
!10740 = !DILocation(line: 176, column: 3, scope: !10733)
!10741 = !DILocation(line: 178, column: 10, scope: !10733)
!10742 = !DILocation(line: 178, column: 8, scope: !10733)
!10743 = !DILocation(line: 179, column: 3, scope: !10733)
!10744 = !DILocation(line: 180, column: 3, scope: !10733)
!10745 = !DILocation(line: 182, column: 10, scope: !10733)
!10746 = !DILocation(line: 182, column: 8, scope: !10733)
!10747 = !DILocation(line: 183, column: 3, scope: !10733)
!10748 = !DILocation(line: 184, column: 3, scope: !10733)
!10749 = !DILocation(line: 186, column: 3, scope: !10733)
!10750 = !DILocation(line: 189, column: 10, scope: !10702)
!10751 = !DILocation(line: 189, column: 2, scope: !10702)
!10752 = !DILocation(line: 191, column: 6, scope: !10753)
!10753 = distinct !DILexicalBlock(scope: !10702, file: !10481, line: 189, column: 16)
!10754 = !DILocation(line: 192, column: 3, scope: !10753)
!10755 = !DILocation(line: 194, column: 8, scope: !10753)
!10756 = !DILocation(line: 194, column: 45, scope: !10753)
!10757 = !DILocation(line: 194, column: 6, scope: !10753)
!10758 = !DILocation(line: 195, column: 3, scope: !10753)
!10759 = !DILocation(line: 197, column: 3, scope: !10753)
!10760 = !DILocation(line: 200, column: 9, scope: !10702)
!10761 = !DILocation(line: 200, column: 15, scope: !10702)
!10762 = !DILocation(line: 200, column: 19, scope: !10702)
!10763 = !DILocation(line: 200, column: 12, scope: !10702)
!10764 = !DILocation(line: 200, column: 27, scope: !10702)
!10765 = !DILocation(line: 200, column: 32, scope: !10702)
!10766 = !DILocation(line: 200, column: 24, scope: !10702)
!10767 = !DILocation(line: 200, column: 2, scope: !10702)
!10768 = !DILocation(line: 201, column: 1, scope: !10702)
!10769 = distinct !DISubprogram(name: "get_uart_clock_freq", scope: !10481, file: !10481, line: 209, type: !10770, scopeLine: 210, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2562, retainedNodes: !223)
!10770 = !DISubroutineType(types: !10771)
!10771 = !{!173, !10772}
!10772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10773, size: 32)
!10773 = !DIDerivedType(tag: DW_TAG_typedef, name: "UART_Type", file: !566, line: 41342, baseType: !10774)
!10774 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !566, line: 41322, size: 1504, elements: !10775)
!10775 = !{!10776, !10777, !10778, !10779, !10780, !10781, !10782, !10783, !10784, !10785, !10786, !10787, !10788, !10789, !10790, !10791, !10792, !10793, !10794}
!10776 = !DIDerivedType(tag: DW_TAG_member, name: "URXD", scope: !10774, file: !566, line: 41323, baseType: !641, size: 32)
!10777 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !10774, file: !566, line: 41324, baseType: !1193, size: 480, offset: 32)
!10778 = !DIDerivedType(tag: DW_TAG_member, name: "UTXD", scope: !10774, file: !566, line: 41325, baseType: !570, size: 32, offset: 512)
!10779 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !10774, file: !566, line: 41326, baseType: !1193, size: 480, offset: 544)
!10780 = !DIDerivedType(tag: DW_TAG_member, name: "UCR1", scope: !10774, file: !566, line: 41327, baseType: !570, size: 32, offset: 1024)
!10781 = !DIDerivedType(tag: DW_TAG_member, name: "UCR2", scope: !10774, file: !566, line: 41328, baseType: !570, size: 32, offset: 1056)
!10782 = !DIDerivedType(tag: DW_TAG_member, name: "UCR3", scope: !10774, file: !566, line: 41329, baseType: !570, size: 32, offset: 1088)
!10783 = !DIDerivedType(tag: DW_TAG_member, name: "UCR4", scope: !10774, file: !566, line: 41330, baseType: !570, size: 32, offset: 1120)
!10784 = !DIDerivedType(tag: DW_TAG_member, name: "UFCR", scope: !10774, file: !566, line: 41331, baseType: !570, size: 32, offset: 1152)
!10785 = !DIDerivedType(tag: DW_TAG_member, name: "USR1", scope: !10774, file: !566, line: 41332, baseType: !570, size: 32, offset: 1184)
!10786 = !DIDerivedType(tag: DW_TAG_member, name: "USR2", scope: !10774, file: !566, line: 41333, baseType: !570, size: 32, offset: 1216)
!10787 = !DIDerivedType(tag: DW_TAG_member, name: "UESC", scope: !10774, file: !566, line: 41334, baseType: !570, size: 32, offset: 1248)
!10788 = !DIDerivedType(tag: DW_TAG_member, name: "UTIM", scope: !10774, file: !566, line: 41335, baseType: !570, size: 32, offset: 1280)
!10789 = !DIDerivedType(tag: DW_TAG_member, name: "UBIR", scope: !10774, file: !566, line: 41336, baseType: !570, size: 32, offset: 1312)
!10790 = !DIDerivedType(tag: DW_TAG_member, name: "UBMR", scope: !10774, file: !566, line: 41337, baseType: !570, size: 32, offset: 1344)
!10791 = !DIDerivedType(tag: DW_TAG_member, name: "UBRC", scope: !10774, file: !566, line: 41338, baseType: !641, size: 32, offset: 1376)
!10792 = !DIDerivedType(tag: DW_TAG_member, name: "ONEMS", scope: !10774, file: !566, line: 41339, baseType: !570, size: 32, offset: 1408)
!10793 = !DIDerivedType(tag: DW_TAG_member, name: "UTS", scope: !10774, file: !566, line: 41340, baseType: !570, size: 32, offset: 1440)
!10794 = !DIDerivedType(tag: DW_TAG_member, name: "UMCR", scope: !10774, file: !566, line: 41341, baseType: !570, size: 32, offset: 1472)
!10795 = !DILocalVariable(name: "base", arg: 1, scope: !10769, file: !10481, line: 209, type: !10772)
!10796 = !DILocation(line: 209, column: 41, scope: !10769)
!10797 = !DILocalVariable(name: "root", scope: !10769, file: !10481, line: 211, type: !173)
!10798 = !DILocation(line: 211, column: 11, scope: !10769)
!10799 = !DILocalVariable(name: "hz", scope: !10769, file: !10481, line: 212, type: !173)
!10800 = !DILocation(line: 212, column: 11, scope: !10769)
!10801 = !DILocalVariable(name: "pre", scope: !10769, file: !10481, line: 213, type: !173)
!10802 = !DILocation(line: 213, column: 11, scope: !10769)
!10803 = !DILocalVariable(name: "post", scope: !10769, file: !10481, line: 213, type: !173)
!10804 = !DILocation(line: 213, column: 16, scope: !10769)
!10805 = !DILocation(line: 215, column: 20, scope: !10769)
!10806 = !DILocation(line: 215, column: 10, scope: !10769)
!10807 = !DILocation(line: 215, column: 2, scope: !10769)
!10808 = !DILocation(line: 217, column: 10, scope: !10809)
!10809 = distinct !DILexicalBlock(scope: !10769, file: !10481, line: 215, column: 26)
!10810 = !DILocation(line: 217, column: 8, scope: !10809)
!10811 = !DILocation(line: 218, column: 3, scope: !10809)
!10812 = !DILocation(line: 219, column: 3, scope: !10809)
!10813 = !DILocation(line: 221, column: 10, scope: !10809)
!10814 = !DILocation(line: 221, column: 8, scope: !10809)
!10815 = !DILocation(line: 222, column: 3, scope: !10809)
!10816 = !DILocation(line: 223, column: 3, scope: !10809)
!10817 = !DILocation(line: 225, column: 10, scope: !10809)
!10818 = !DILocation(line: 225, column: 8, scope: !10809)
!10819 = !DILocation(line: 226, column: 3, scope: !10809)
!10820 = !DILocation(line: 227, column: 3, scope: !10809)
!10821 = !DILocation(line: 229, column: 10, scope: !10809)
!10822 = !DILocation(line: 229, column: 8, scope: !10809)
!10823 = !DILocation(line: 230, column: 3, scope: !10809)
!10824 = !DILocation(line: 231, column: 3, scope: !10809)
!10825 = !DILocation(line: 233, column: 10, scope: !10809)
!10826 = !DILocation(line: 233, column: 8, scope: !10809)
!10827 = !DILocation(line: 234, column: 3, scope: !10809)
!10828 = !DILocation(line: 235, column: 3, scope: !10809)
!10829 = !DILocation(line: 237, column: 10, scope: !10809)
!10830 = !DILocation(line: 237, column: 8, scope: !10809)
!10831 = !DILocation(line: 238, column: 3, scope: !10809)
!10832 = !DILocation(line: 239, column: 3, scope: !10809)
!10833 = !DILocation(line: 241, column: 10, scope: !10809)
!10834 = !DILocation(line: 241, column: 8, scope: !10809)
!10835 = !DILocation(line: 242, column: 3, scope: !10809)
!10836 = !DILocation(line: 243, column: 3, scope: !10809)
!10837 = !DILocation(line: 245, column: 3, scope: !10809)
!10838 = !DILocation(line: 248, column: 10, scope: !10769)
!10839 = !DILocation(line: 248, column: 2, scope: !10769)
!10840 = !DILocation(line: 250, column: 6, scope: !10841)
!10841 = distinct !DILexicalBlock(scope: !10769, file: !10481, line: 248, column: 16)
!10842 = !DILocation(line: 251, column: 3, scope: !10841)
!10843 = !DILocation(line: 253, column: 8, scope: !10841)
!10844 = !DILocation(line: 253, column: 45, scope: !10841)
!10845 = !DILocation(line: 253, column: 6, scope: !10841)
!10846 = !DILocation(line: 254, column: 3, scope: !10841)
!10847 = !DILocation(line: 256, column: 8, scope: !10841)
!10848 = !DILocation(line: 256, column: 6, scope: !10841)
!10849 = !DILocation(line: 257, column: 3, scope: !10841)
!10850 = !DILocation(line: 259, column: 3, scope: !10841)
!10851 = !DILocation(line: 262, column: 9, scope: !10769)
!10852 = !DILocation(line: 262, column: 15, scope: !10769)
!10853 = !DILocation(line: 262, column: 19, scope: !10769)
!10854 = !DILocation(line: 262, column: 12, scope: !10769)
!10855 = !DILocation(line: 262, column: 27, scope: !10769)
!10856 = !DILocation(line: 262, column: 32, scope: !10769)
!10857 = !DILocation(line: 262, column: 24, scope: !10769)
!10858 = !DILocation(line: 262, column: 2, scope: !10769)
!10859 = !DILocation(line: 263, column: 1, scope: !10769)
!10860 = distinct !DISubprogram(name: "z_device_state_init", scope: !10861, file: !10861, line: 23, type: !253, scopeLine: 24, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2687, retainedNodes: !223)
!10861 = !DIFile(filename: "zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10862 = !DILocalVariable(name: "dev", scope: !10860, file: !10861, line: 25, type: !10863)
!10863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10864, size: 32)
!10864 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10865)
!10865 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !732, line: 378, size: 192, elements: !10866)
!10866 = !{!10867, !10868, !10869, !10870, !10876, !10877}
!10867 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !10865, file: !732, line: 380, baseType: !256, size: 32)
!10868 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !10865, file: !732, line: 382, baseType: !13, size: 32, offset: 32)
!10869 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !10865, file: !732, line: 384, baseType: !13, size: 32, offset: 64)
!10870 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !10865, file: !732, line: 386, baseType: !10871, size: 32, offset: 96)
!10871 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10872, size: 32)
!10872 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !732, line: 351, size: 16, elements: !10873)
!10873 = !{!10874, !10875}
!10874 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !10872, file: !732, line: 359, baseType: !156, size: 8)
!10875 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !10872, file: !732, line: 364, baseType: !743, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!10876 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !10865, file: !732, line: 388, baseType: !102, size: 32, offset: 128)
!10877 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !10865, file: !732, line: 396, baseType: !746, size: 32, offset: 160)
!10878 = !DILocation(line: 25, column: 23, scope: !10860)
!10879 = !DILocation(line: 27, column: 2, scope: !10860)
!10880 = !DILocation(line: 27, column: 9, scope: !10860)
!10881 = !DILocation(line: 27, column: 13, scope: !10860)
!10882 = !DILocation(line: 28, column: 17, scope: !10883)
!10883 = distinct !DILexicalBlock(scope: !10860, file: !10861, line: 27, column: 29)
!10884 = !DILocation(line: 28, column: 3, scope: !10883)
!10885 = !DILocation(line: 29, column: 3, scope: !10883)
!10886 = distinct !{!10886, !10879, !10887}
!10887 = !DILocation(line: 30, column: 2, scope: !10860)
!10888 = !DILocation(line: 31, column: 1, scope: !10860)
!10889 = distinct !DISubprogram(name: "z_object_init", scope: !31, file: !31, line: 200, type: !17, scopeLine: 201, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2687, retainedNodes: !223)
!10890 = !DILocalVariable(name: "obj", arg: 1, scope: !10889, file: !31, line: 200, type: !13)
!10891 = !DILocation(line: 200, column: 46, scope: !10889)
!10892 = !DILocation(line: 202, column: 2, scope: !10889)
!10893 = !DILocation(line: 203, column: 1, scope: !10889)
!10894 = distinct !DISubprogram(name: "z_impl_device_get_binding", scope: !10861, file: !10861, line: 33, type: !10895, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2687, retainedNodes: !223)
!10895 = !DISubroutineType(types: !10896)
!10896 = !{!10863, !256}
!10897 = !DILocalVariable(name: "name", arg: 1, scope: !10894, file: !10861, line: 33, type: !256)
!10898 = !DILocation(line: 33, column: 60, scope: !10894)
!10899 = !DILocalVariable(name: "dev", scope: !10894, file: !10861, line: 35, type: !10863)
!10900 = !DILocation(line: 35, column: 23, scope: !10894)
!10901 = !DILocation(line: 40, column: 7, scope: !10902)
!10902 = distinct !DILexicalBlock(scope: !10894, file: !10861, line: 40, column: 6)
!10903 = !DILocation(line: 40, column: 12, scope: !10902)
!10904 = !DILocation(line: 40, column: 21, scope: !10902)
!10905 = !DILocation(line: 40, column: 25, scope: !10902)
!10906 = !DILocation(line: 40, column: 33, scope: !10902)
!10907 = !DILocation(line: 40, column: 6, scope: !10894)
!10908 = !DILocation(line: 41, column: 3, scope: !10909)
!10909 = distinct !DILexicalBlock(scope: !10902, file: !10861, line: 40, column: 43)
!10910 = !DILocation(line: 49, column: 11, scope: !10911)
!10911 = distinct !DILexicalBlock(scope: !10894, file: !10861, line: 49, column: 2)
!10912 = !DILocation(line: 49, column: 7, scope: !10911)
!10913 = !DILocation(line: 49, column: 29, scope: !10914)
!10914 = distinct !DILexicalBlock(scope: !10911, file: !10861, line: 49, column: 2)
!10915 = !DILocation(line: 49, column: 33, scope: !10914)
!10916 = !DILocation(line: 49, column: 2, scope: !10911)
!10917 = !DILocation(line: 50, column: 25, scope: !10918)
!10918 = distinct !DILexicalBlock(scope: !10919, file: !10861, line: 50, column: 7)
!10919 = distinct !DILexicalBlock(scope: !10914, file: !10861, line: 49, column: 57)
!10920 = !DILocation(line: 50, column: 7, scope: !10918)
!10921 = !DILocation(line: 50, column: 30, scope: !10918)
!10922 = !DILocation(line: 50, column: 34, scope: !10918)
!10923 = !DILocation(line: 50, column: 39, scope: !10918)
!10924 = !DILocation(line: 50, column: 47, scope: !10918)
!10925 = !DILocation(line: 50, column: 44, scope: !10918)
!10926 = !DILocation(line: 50, column: 7, scope: !10919)
!10927 = !DILocation(line: 51, column: 11, scope: !10928)
!10928 = distinct !DILexicalBlock(scope: !10918, file: !10861, line: 50, column: 54)
!10929 = !DILocation(line: 51, column: 4, scope: !10928)
!10930 = !DILocation(line: 53, column: 2, scope: !10919)
!10931 = !DILocation(line: 49, column: 53, scope: !10914)
!10932 = !DILocation(line: 49, column: 2, scope: !10914)
!10933 = distinct !{!10933, !10916, !10934}
!10934 = !DILocation(line: 53, column: 2, scope: !10911)
!10935 = !DILocation(line: 55, column: 11, scope: !10936)
!10936 = distinct !DILexicalBlock(scope: !10894, file: !10861, line: 55, column: 2)
!10937 = !DILocation(line: 55, column: 7, scope: !10936)
!10938 = !DILocation(line: 55, column: 29, scope: !10939)
!10939 = distinct !DILexicalBlock(scope: !10936, file: !10861, line: 55, column: 2)
!10940 = !DILocation(line: 55, column: 33, scope: !10939)
!10941 = !DILocation(line: 55, column: 2, scope: !10936)
!10942 = !DILocation(line: 56, column: 25, scope: !10943)
!10943 = distinct !DILexicalBlock(scope: !10944, file: !10861, line: 56, column: 7)
!10944 = distinct !DILexicalBlock(scope: !10939, file: !10861, line: 55, column: 57)
!10945 = !DILocation(line: 56, column: 7, scope: !10943)
!10946 = !DILocation(line: 56, column: 30, scope: !10943)
!10947 = !DILocation(line: 56, column: 41, scope: !10943)
!10948 = !DILocation(line: 56, column: 47, scope: !10943)
!10949 = !DILocation(line: 56, column: 52, scope: !10943)
!10950 = !DILocation(line: 56, column: 34, scope: !10943)
!10951 = !DILocation(line: 56, column: 58, scope: !10943)
!10952 = !DILocation(line: 56, column: 7, scope: !10944)
!10953 = !DILocation(line: 57, column: 11, scope: !10954)
!10954 = distinct !DILexicalBlock(scope: !10943, file: !10861, line: 56, column: 65)
!10955 = !DILocation(line: 57, column: 4, scope: !10954)
!10956 = !DILocation(line: 59, column: 2, scope: !10944)
!10957 = !DILocation(line: 55, column: 53, scope: !10939)
!10958 = !DILocation(line: 55, column: 2, scope: !10939)
!10959 = distinct !{!10959, !10941, !10960}
!10960 = !DILocation(line: 59, column: 2, scope: !10936)
!10961 = !DILocation(line: 61, column: 2, scope: !10894)
!10962 = !DILocation(line: 62, column: 1, scope: !10894)
!10963 = distinct !DISubprogram(name: "z_device_is_ready", scope: !10861, file: !10861, line: 93, type: !10964, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2687, retainedNodes: !223)
!10964 = !DISubroutineType(types: !10965)
!10965 = !{!743, !10863}
!10966 = !DILocalVariable(name: "dev", arg: 1, scope: !10963, file: !10861, line: 93, type: !10863)
!10967 = !DILocation(line: 93, column: 45, scope: !10963)
!10968 = !DILocation(line: 99, column: 6, scope: !10969)
!10969 = distinct !DILexicalBlock(scope: !10963, file: !10861, line: 99, column: 6)
!10970 = !DILocation(line: 99, column: 10, scope: !10969)
!10971 = !DILocation(line: 99, column: 6, scope: !10963)
!10972 = !DILocation(line: 100, column: 3, scope: !10973)
!10973 = distinct !DILexicalBlock(scope: !10969, file: !10861, line: 99, column: 19)
!10974 = !DILocation(line: 103, column: 9, scope: !10963)
!10975 = !DILocation(line: 103, column: 14, scope: !10963)
!10976 = !DILocation(line: 103, column: 21, scope: !10963)
!10977 = !DILocation(line: 103, column: 33, scope: !10963)
!10978 = !DILocation(line: 103, column: 37, scope: !10963)
!10979 = !DILocation(line: 103, column: 42, scope: !10963)
!10980 = !DILocation(line: 103, column: 49, scope: !10963)
!10981 = !DILocation(line: 103, column: 58, scope: !10963)
!10982 = !DILocation(line: 0, scope: !10963)
!10983 = !DILocation(line: 103, column: 2, scope: !10963)
!10984 = !DILocation(line: 104, column: 1, scope: !10963)
!10985 = distinct !DISubprogram(name: "z_device_get_all_static", scope: !10861, file: !10861, line: 87, type: !10986, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2687, retainedNodes: !223)
!10986 = !DISubroutineType(types: !10987)
!10987 = !{!217, !10988}
!10988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10863, size: 32)
!10989 = !DILocalVariable(name: "devices", arg: 1, scope: !10985, file: !10861, line: 87, type: !10988)
!10990 = !DILocation(line: 87, column: 54, scope: !10985)
!10991 = !DILocation(line: 89, column: 3, scope: !10985)
!10992 = !DILocation(line: 89, column: 11, scope: !10985)
!10993 = !DILocation(line: 90, column: 2, scope: !10985)
!10994 = distinct !DISubprogram(name: "device_required_foreach", scope: !10861, file: !10861, line: 125, type: !10995, scopeLine: 128, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2687, retainedNodes: !223)
!10995 = !DISubroutineType(types: !10996)
!10996 = !{!103, !10863, !10997, !102}
!10997 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_visitor_callback_t", file: !732, line: 471, baseType: !10998)
!10998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10999, size: 32)
!10999 = !DISubroutineType(types: !11000)
!11000 = !{!103, !10863, !102}
!11001 = !DILocalVariable(name: "dev", arg: 1, scope: !10994, file: !10861, line: 125, type: !10863)
!11002 = !DILocation(line: 125, column: 50, scope: !10994)
!11003 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !10994, file: !10861, line: 126, type: !10997)
!11004 = !DILocation(line: 126, column: 34, scope: !10994)
!11005 = !DILocalVariable(name: "context", arg: 3, scope: !10994, file: !10861, line: 127, type: !102)
!11006 = !DILocation(line: 127, column: 14, scope: !10994)
!11007 = !DILocalVariable(name: "handle_count", scope: !10994, file: !10861, line: 129, type: !217)
!11008 = !DILocation(line: 129, column: 9, scope: !10994)
!11009 = !DILocalVariable(name: "handles", scope: !10994, file: !10861, line: 130, type: !746)
!11010 = !DILocation(line: 130, column: 25, scope: !10994)
!11011 = !DILocation(line: 130, column: 63, scope: !10994)
!11012 = !DILocation(line: 130, column: 35, scope: !10994)
!11013 = !DILocation(line: 132, column: 24, scope: !10994)
!11014 = !DILocation(line: 132, column: 33, scope: !10994)
!11015 = !DILocation(line: 132, column: 47, scope: !10994)
!11016 = !DILocation(line: 132, column: 59, scope: !10994)
!11017 = !DILocation(line: 132, column: 9, scope: !10994)
!11018 = !DILocation(line: 132, column: 2, scope: !10994)
!11019 = distinct !DISubprogram(name: "device_required_handles_get", scope: !732, file: !732, line: 493, type: !11020, scopeLine: 494, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2687, retainedNodes: !223)
!11020 = !DISubroutineType(types: !11021)
!11021 = !{!746, !10863, !2135}
!11022 = !DILocalVariable(name: "dev", arg: 1, scope: !11019, file: !732, line: 493, type: !10863)
!11023 = !DILocation(line: 493, column: 50, scope: !11019)
!11024 = !DILocalVariable(name: "count", arg: 2, scope: !11019, file: !732, line: 493, type: !2135)
!11025 = !DILocation(line: 493, column: 63, scope: !11019)
!11026 = !DILocalVariable(name: "rv", scope: !11019, file: !732, line: 495, type: !746)
!11027 = !DILocation(line: 495, column: 25, scope: !11019)
!11028 = !DILocation(line: 495, column: 30, scope: !11019)
!11029 = !DILocation(line: 495, column: 35, scope: !11019)
!11030 = !DILocation(line: 497, column: 6, scope: !11031)
!11031 = distinct !DILexicalBlock(scope: !11019, file: !732, line: 497, column: 6)
!11032 = !DILocation(line: 497, column: 9, scope: !11031)
!11033 = !DILocation(line: 497, column: 6, scope: !11019)
!11034 = !DILocalVariable(name: "i", scope: !11035, file: !732, line: 498, type: !217)
!11035 = distinct !DILexicalBlock(scope: !11031, file: !732, line: 497, column: 18)
!11036 = !DILocation(line: 498, column: 10, scope: !11035)
!11037 = !DILocation(line: 500, column: 3, scope: !11035)
!11038 = !DILocation(line: 500, column: 11, scope: !11035)
!11039 = !DILocation(line: 500, column: 14, scope: !11035)
!11040 = !DILocation(line: 500, column: 17, scope: !11035)
!11041 = !DILocation(line: 500, column: 40, scope: !11035)
!11042 = !DILocation(line: 501, column: 11, scope: !11035)
!11043 = !DILocation(line: 501, column: 14, scope: !11035)
!11044 = !DILocation(line: 501, column: 17, scope: !11035)
!11045 = !DILocation(line: 0, scope: !11035)
!11046 = !DILocation(line: 502, column: 4, scope: !11047)
!11047 = distinct !DILexicalBlock(scope: !11035, file: !732, line: 501, column: 40)
!11048 = distinct !{!11048, !11037, !11049}
!11049 = !DILocation(line: 503, column: 3, scope: !11035)
!11050 = !DILocation(line: 504, column: 12, scope: !11035)
!11051 = !DILocation(line: 504, column: 4, scope: !11035)
!11052 = !DILocation(line: 504, column: 10, scope: !11035)
!11053 = !DILocation(line: 505, column: 2, scope: !11035)
!11054 = !DILocation(line: 507, column: 9, scope: !11019)
!11055 = !DILocation(line: 507, column: 2, scope: !11019)
!11056 = distinct !DISubprogram(name: "device_visitor", scope: !10861, file: !10861, line: 106, type: !11057, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2687, retainedNodes: !223)
!11057 = !DISubroutineType(types: !11058)
!11058 = !{!103, !746, !217, !10997, !102}
!11059 = !DILocalVariable(name: "handles", arg: 1, scope: !11056, file: !10861, line: 106, type: !746)
!11060 = !DILocation(line: 106, column: 50, scope: !11056)
!11061 = !DILocalVariable(name: "handle_count", arg: 2, scope: !11056, file: !10861, line: 107, type: !217)
!11062 = !DILocation(line: 107, column: 14, scope: !11056)
!11063 = !DILocalVariable(name: "visitor_cb", arg: 3, scope: !11056, file: !10861, line: 108, type: !10997)
!11064 = !DILocation(line: 108, column: 33, scope: !11056)
!11065 = !DILocalVariable(name: "context", arg: 4, scope: !11056, file: !10861, line: 109, type: !102)
!11066 = !DILocation(line: 109, column: 13, scope: !11056)
!11067 = !DILocalVariable(name: "i", scope: !11068, file: !10861, line: 112, type: !217)
!11068 = distinct !DILexicalBlock(scope: !11056, file: !10861, line: 112, column: 2)
!11069 = !DILocation(line: 112, column: 14, scope: !11068)
!11070 = !DILocation(line: 112, column: 7, scope: !11068)
!11071 = !DILocation(line: 112, column: 21, scope: !11072)
!11072 = distinct !DILexicalBlock(scope: !11068, file: !10861, line: 112, column: 2)
!11073 = !DILocation(line: 112, column: 25, scope: !11072)
!11074 = !DILocation(line: 112, column: 23, scope: !11072)
!11075 = !DILocation(line: 112, column: 2, scope: !11068)
!11076 = !DILocalVariable(name: "dh", scope: !11077, file: !10861, line: 113, type: !748)
!11077 = distinct !DILexicalBlock(scope: !11072, file: !10861, line: 112, column: 44)
!11078 = !DILocation(line: 113, column: 19, scope: !11077)
!11079 = !DILocation(line: 113, column: 24, scope: !11077)
!11080 = !DILocation(line: 113, column: 32, scope: !11077)
!11081 = !DILocalVariable(name: "rdev", scope: !11077, file: !10861, line: 114, type: !10863)
!11082 = !DILocation(line: 114, column: 24, scope: !11077)
!11083 = !DILocation(line: 114, column: 50, scope: !11077)
!11084 = !DILocation(line: 114, column: 31, scope: !11077)
!11085 = !DILocalVariable(name: "rc", scope: !11077, file: !10861, line: 115, type: !103)
!11086 = !DILocation(line: 115, column: 7, scope: !11077)
!11087 = !DILocation(line: 115, column: 12, scope: !11077)
!11088 = !DILocation(line: 115, column: 23, scope: !11077)
!11089 = !DILocation(line: 115, column: 29, scope: !11077)
!11090 = !DILocation(line: 117, column: 7, scope: !11091)
!11091 = distinct !DILexicalBlock(scope: !11077, file: !10861, line: 117, column: 7)
!11092 = !DILocation(line: 117, column: 10, scope: !11091)
!11093 = !DILocation(line: 117, column: 7, scope: !11077)
!11094 = !DILocation(line: 118, column: 11, scope: !11095)
!11095 = distinct !DILexicalBlock(scope: !11091, file: !10861, line: 117, column: 15)
!11096 = !DILocation(line: 118, column: 4, scope: !11095)
!11097 = !DILocation(line: 120, column: 2, scope: !11077)
!11098 = !DILocation(line: 112, column: 39, scope: !11072)
!11099 = !DILocation(line: 112, column: 2, scope: !11072)
!11100 = distinct !{!11100, !11075, !11101}
!11101 = !DILocation(line: 120, column: 2, scope: !11068)
!11102 = !DILocation(line: 122, column: 9, scope: !11056)
!11103 = !DILocation(line: 122, column: 2, scope: !11056)
!11104 = !DILocation(line: 123, column: 1, scope: !11056)
!11105 = distinct !DISubprogram(name: "device_from_handle", scope: !732, file: !732, line: 439, type: !11106, scopeLine: 440, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2687, retainedNodes: !223)
!11106 = !DISubroutineType(types: !11107)
!11107 = !{!10863, !748}
!11108 = !DILocalVariable(name: "dev_handle", arg: 1, scope: !11105, file: !732, line: 439, type: !748)
!11109 = !DILocation(line: 439, column: 36, scope: !11105)
!11110 = !DILocalVariable(name: "dev", scope: !11105, file: !732, line: 443, type: !10863)
!11111 = !DILocation(line: 443, column: 23, scope: !11105)
!11112 = !DILocalVariable(name: "numdev", scope: !11105, file: !732, line: 444, type: !217)
!11113 = !DILocation(line: 444, column: 9, scope: !11105)
!11114 = !DILocation(line: 446, column: 7, scope: !11115)
!11115 = distinct !DILexicalBlock(scope: !11105, file: !732, line: 446, column: 6)
!11116 = !DILocation(line: 446, column: 18, scope: !11115)
!11117 = !DILocation(line: 446, column: 23, scope: !11115)
!11118 = !DILocation(line: 446, column: 35, scope: !11115)
!11119 = !DILocation(line: 446, column: 27, scope: !11115)
!11120 = !DILocation(line: 446, column: 49, scope: !11115)
!11121 = !DILocation(line: 446, column: 46, scope: !11115)
!11122 = !DILocation(line: 446, column: 6, scope: !11105)
!11123 = !DILocation(line: 447, column: 25, scope: !11124)
!11124 = distinct !DILexicalBlock(scope: !11115, file: !732, line: 446, column: 58)
!11125 = !DILocation(line: 447, column: 36, scope: !11124)
!11126 = !DILocation(line: 447, column: 10, scope: !11124)
!11127 = !DILocation(line: 447, column: 7, scope: !11124)
!11128 = !DILocation(line: 448, column: 2, scope: !11124)
!11129 = !DILocation(line: 450, column: 9, scope: !11105)
!11130 = !DILocation(line: 450, column: 2, scope: !11105)
!11131 = distinct !DISubprogram(name: "device_supported_foreach", scope: !10861, file: !10861, line: 135, type: !10995, scopeLine: 138, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2687, retainedNodes: !223)
!11132 = !DILocalVariable(name: "dev", arg: 1, scope: !11131, file: !10861, line: 135, type: !10863)
!11133 = !DILocation(line: 135, column: 51, scope: !11131)
!11134 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !11131, file: !10861, line: 136, type: !10997)
!11135 = !DILocation(line: 136, column: 35, scope: !11131)
!11136 = !DILocalVariable(name: "context", arg: 3, scope: !11131, file: !10861, line: 137, type: !102)
!11137 = !DILocation(line: 137, column: 15, scope: !11131)
!11138 = !DILocalVariable(name: "handle_count", scope: !11131, file: !10861, line: 139, type: !217)
!11139 = !DILocation(line: 139, column: 9, scope: !11131)
!11140 = !DILocalVariable(name: "handles", scope: !11131, file: !10861, line: 140, type: !746)
!11141 = !DILocation(line: 140, column: 25, scope: !11131)
!11142 = !DILocation(line: 140, column: 64, scope: !11131)
!11143 = !DILocation(line: 140, column: 35, scope: !11131)
!11144 = !DILocation(line: 142, column: 24, scope: !11131)
!11145 = !DILocation(line: 142, column: 33, scope: !11131)
!11146 = !DILocation(line: 142, column: 47, scope: !11131)
!11147 = !DILocation(line: 142, column: 59, scope: !11131)
!11148 = !DILocation(line: 142, column: 9, scope: !11131)
!11149 = !DILocation(line: 142, column: 2, scope: !11131)
!11150 = distinct !DISubprogram(name: "device_supported_handles_get", scope: !732, file: !732, line: 573, type: !11020, scopeLine: 574, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2687, retainedNodes: !223)
!11151 = !DILocalVariable(name: "dev", arg: 1, scope: !11150, file: !732, line: 573, type: !10863)
!11152 = !DILocation(line: 573, column: 51, scope: !11150)
!11153 = !DILocalVariable(name: "count", arg: 2, scope: !11150, file: !732, line: 573, type: !2135)
!11154 = !DILocation(line: 573, column: 64, scope: !11150)
!11155 = !DILocalVariable(name: "rv", scope: !11150, file: !732, line: 575, type: !746)
!11156 = !DILocation(line: 575, column: 25, scope: !11150)
!11157 = !DILocation(line: 575, column: 30, scope: !11150)
!11158 = !DILocation(line: 575, column: 35, scope: !11150)
!11159 = !DILocalVariable(name: "region", scope: !11150, file: !732, line: 576, type: !217)
!11160 = !DILocation(line: 576, column: 9, scope: !11150)
!11161 = !DILocalVariable(name: "i", scope: !11150, file: !732, line: 577, type: !217)
!11162 = !DILocation(line: 577, column: 9, scope: !11150)
!11163 = !DILocation(line: 579, column: 6, scope: !11164)
!11164 = distinct !DILexicalBlock(scope: !11150, file: !732, line: 579, column: 6)
!11165 = !DILocation(line: 579, column: 9, scope: !11164)
!11166 = !DILocation(line: 579, column: 6, scope: !11150)
!11167 = !DILocation(line: 581, column: 3, scope: !11168)
!11168 = distinct !DILexicalBlock(scope: !11164, file: !732, line: 579, column: 18)
!11169 = !DILocation(line: 581, column: 10, scope: !11168)
!11170 = !DILocation(line: 581, column: 17, scope: !11168)
!11171 = !DILocation(line: 582, column: 9, scope: !11172)
!11172 = distinct !DILexicalBlock(scope: !11173, file: !732, line: 582, column: 8)
!11173 = distinct !DILexicalBlock(scope: !11168, file: !732, line: 581, column: 23)
!11174 = !DILocation(line: 582, column: 8, scope: !11172)
!11175 = !DILocation(line: 582, column: 12, scope: !11172)
!11176 = !DILocation(line: 582, column: 8, scope: !11173)
!11177 = !DILocation(line: 583, column: 11, scope: !11178)
!11178 = distinct !DILexicalBlock(scope: !11172, file: !732, line: 582, column: 34)
!11179 = !DILocation(line: 584, column: 4, scope: !11178)
!11180 = !DILocation(line: 585, column: 6, scope: !11173)
!11181 = distinct !{!11181, !11167, !11182}
!11182 = !DILocation(line: 586, column: 3, scope: !11168)
!11183 = !DILocation(line: 588, column: 3, scope: !11168)
!11184 = !DILocation(line: 588, column: 10, scope: !11168)
!11185 = !DILocation(line: 588, column: 13, scope: !11168)
!11186 = !DILocation(line: 588, column: 16, scope: !11168)
!11187 = !DILocation(line: 589, column: 4, scope: !11188)
!11188 = distinct !DILexicalBlock(scope: !11168, file: !732, line: 588, column: 39)
!11189 = distinct !{!11189, !11183, !11190}
!11190 = !DILocation(line: 590, column: 3, scope: !11168)
!11191 = !DILocation(line: 591, column: 12, scope: !11168)
!11192 = !DILocation(line: 591, column: 4, scope: !11168)
!11193 = !DILocation(line: 591, column: 10, scope: !11168)
!11194 = !DILocation(line: 592, column: 2, scope: !11168)
!11195 = !DILocation(line: 594, column: 9, scope: !11150)
!11196 = !DILocation(line: 594, column: 2, scope: !11150)
!11197 = distinct !DISubprogram(name: "z_impl_z_errno", scope: !1593, file: !1593, line: 49, type: !11198, scopeLine: 50, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1590, retainedNodes: !223)
!11198 = !DISubroutineType(types: !11199)
!11199 = !{!2128}
!11200 = !DILocation(line: 51, column: 10, scope: !11197)
!11201 = !DILocation(line: 51, column: 20, scope: !11197)
!11202 = !DILocation(line: 51, column: 2, scope: !11197)
!11203 = distinct !DISubprogram(name: "coredump", scope: !2694, file: !2694, line: 209, type: !11204, scopeLine: 211, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2690, retainedNodes: !223)
!11204 = !DISubroutineType(types: !11205)
!11205 = !{null, !32, !11206, !11250}
!11206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11207, size: 32)
!11207 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11208)
!11208 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2261, line: 141, baseType: !11209)
!11209 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2261, line: 97, size: 256, elements: !11210)
!11210 = !{!11211}
!11211 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !11209, file: !2261, line: 107, baseType: !11212, size: 256)
!11212 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2261, line: 98, size: 256, elements: !11213)
!11213 = !{!11214, !11219, !11224, !11229, !11234, !11239, !11244, !11249}
!11214 = !DIDerivedType(tag: DW_TAG_member, scope: !11212, file: !2261, line: 99, baseType: !11215, size: 32)
!11215 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11212, file: !2261, line: 99, size: 32, elements: !11216)
!11216 = !{!11217, !11218}
!11217 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !11215, file: !2261, line: 99, baseType: !173, size: 32)
!11218 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !11215, file: !2261, line: 99, baseType: !173, size: 32)
!11219 = !DIDerivedType(tag: DW_TAG_member, scope: !11212, file: !2261, line: 100, baseType: !11220, size: 32, offset: 32)
!11220 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11212, file: !2261, line: 100, size: 32, elements: !11221)
!11221 = !{!11222, !11223}
!11222 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !11220, file: !2261, line: 100, baseType: !173, size: 32)
!11223 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !11220, file: !2261, line: 100, baseType: !173, size: 32)
!11224 = !DIDerivedType(tag: DW_TAG_member, scope: !11212, file: !2261, line: 101, baseType: !11225, size: 32, offset: 64)
!11225 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11212, file: !2261, line: 101, size: 32, elements: !11226)
!11226 = !{!11227, !11228}
!11227 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !11225, file: !2261, line: 101, baseType: !173, size: 32)
!11228 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !11225, file: !2261, line: 101, baseType: !173, size: 32)
!11229 = !DIDerivedType(tag: DW_TAG_member, scope: !11212, file: !2261, line: 102, baseType: !11230, size: 32, offset: 96)
!11230 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11212, file: !2261, line: 102, size: 32, elements: !11231)
!11231 = !{!11232, !11233}
!11232 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !11230, file: !2261, line: 102, baseType: !173, size: 32)
!11233 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !11230, file: !2261, line: 102, baseType: !173, size: 32)
!11234 = !DIDerivedType(tag: DW_TAG_member, scope: !11212, file: !2261, line: 103, baseType: !11235, size: 32, offset: 128)
!11235 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11212, file: !2261, line: 103, size: 32, elements: !11236)
!11236 = !{!11237, !11238}
!11237 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !11235, file: !2261, line: 103, baseType: !173, size: 32)
!11238 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !11235, file: !2261, line: 103, baseType: !173, size: 32)
!11239 = !DIDerivedType(tag: DW_TAG_member, scope: !11212, file: !2261, line: 104, baseType: !11240, size: 32, offset: 160)
!11240 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11212, file: !2261, line: 104, size: 32, elements: !11241)
!11241 = !{!11242, !11243}
!11242 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !11240, file: !2261, line: 104, baseType: !173, size: 32)
!11243 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !11240, file: !2261, line: 104, baseType: !173, size: 32)
!11244 = !DIDerivedType(tag: DW_TAG_member, scope: !11212, file: !2261, line: 105, baseType: !11245, size: 32, offset: 192)
!11245 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11212, file: !2261, line: 105, size: 32, elements: !11246)
!11246 = !{!11247, !11248}
!11247 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !11245, file: !2261, line: 105, baseType: !173, size: 32)
!11248 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !11245, file: !2261, line: 105, baseType: !173, size: 32)
!11249 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !11212, file: !2261, line: 106, baseType: !173, size: 32, offset: 224)
!11250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11251, size: 32)
!11251 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !114, line: 245, size: 896, elements: !11252)
!11252 = !{!11253, !11311, !11323, !11324, !11325, !11326, !11339}
!11253 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !11251, file: !114, line: 247, baseType: !11254, size: 384)
!11254 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !114, line: 57, size: 384, elements: !11255)
!11255 = !{!11256, !11280, !11287, !11288, !11289, !11298, !11299, !11300}
!11256 = !DIDerivedType(tag: DW_TAG_member, scope: !11254, file: !114, line: 60, baseType: !11257, size: 64)
!11257 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11254, file: !114, line: 60, size: 64, elements: !11258)
!11258 = !{!11259, !11274}
!11259 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !11257, file: !114, line: 61, baseType: !11260, size: 64)
!11260 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !124, line: 49, baseType: !11261)
!11261 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !124, line: 37, size: 64, elements: !11262)
!11262 = !{!11263, !11269}
!11263 = !DIDerivedType(tag: DW_TAG_member, scope: !11261, file: !124, line: 38, baseType: !11264, size: 32)
!11264 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11261, file: !124, line: 38, size: 32, elements: !11265)
!11265 = !{!11266, !11268}
!11266 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !11264, file: !124, line: 39, baseType: !11267, size: 32)
!11267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11261, size: 32)
!11268 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !11264, file: !124, line: 40, baseType: !11267, size: 32)
!11269 = !DIDerivedType(tag: DW_TAG_member, scope: !11261, file: !124, line: 42, baseType: !11270, size: 32, offset: 32)
!11270 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11261, file: !124, line: 42, size: 32, elements: !11271)
!11271 = !{!11272, !11273}
!11272 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !11270, file: !124, line: 43, baseType: !11267, size: 32)
!11273 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !11270, file: !124, line: 44, baseType: !11267, size: 32)
!11274 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !11257, file: !114, line: 62, baseType: !11275, size: 64)
!11275 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !140, line: 49, size: 64, elements: !11276)
!11276 = !{!11277}
!11277 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !11275, file: !140, line: 50, baseType: !11278, size: 64)
!11278 = !DICompositeType(tag: DW_TAG_array_type, baseType: !11279, size: 64, elements: !145)
!11279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11275, size: 32)
!11280 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !11254, file: !114, line: 68, baseType: !11281, size: 32, offset: 64)
!11281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11282, size: 32)
!11282 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !150, line: 233, baseType: !11283)
!11283 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !150, line: 231, size: 64, elements: !11284)
!11284 = !{!11285}
!11285 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !11283, file: !150, line: 232, baseType: !11286, size: 64)
!11286 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !124, line: 48, baseType: !11261)
!11287 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !11254, file: !114, line: 71, baseType: !156, size: 8, offset: 96)
!11288 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !11254, file: !114, line: 74, baseType: !156, size: 8, offset: 104)
!11289 = !DIDerivedType(tag: DW_TAG_member, scope: !11254, file: !114, line: 90, baseType: !11290, size: 16, offset: 112)
!11290 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11254, file: !114, line: 90, size: 16, elements: !11291)
!11291 = !{!11292, !11297}
!11292 = !DIDerivedType(tag: DW_TAG_member, scope: !11290, file: !114, line: 91, baseType: !11293, size: 16)
!11293 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !11290, file: !114, line: 91, size: 16, elements: !11294)
!11294 = !{!11295, !11296}
!11295 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !11293, file: !114, line: 96, baseType: !166, size: 8)
!11296 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !11293, file: !114, line: 97, baseType: !156, size: 8, offset: 8)
!11297 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !11290, file: !114, line: 100, baseType: !170, size: 16)
!11298 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !11254, file: !114, line: 107, baseType: !173, size: 32, offset: 128)
!11299 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !11254, file: !114, line: 127, baseType: !102, size: 32, offset: 160)
!11300 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !11254, file: !114, line: 131, baseType: !11301, size: 192, offset: 192)
!11301 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !150, line: 244, size: 192, elements: !11302)
!11302 = !{!11303, !11304, !11310}
!11303 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !11301, file: !150, line: 245, baseType: !11260, size: 64)
!11304 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !11301, file: !150, line: 246, baseType: !11305, size: 32, offset: 64)
!11305 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !150, line: 242, baseType: !11306)
!11306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11307, size: 32)
!11307 = !DISubroutineType(types: !11308)
!11308 = !{null, !11309}
!11309 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11301, size: 32)
!11310 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !11301, file: !150, line: 249, baseType: !186, size: 64, offset: 128)
!11311 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !11251, file: !114, line: 250, baseType: !11312, size: 288, offset: 384)
!11312 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !190, line: 25, size: 288, elements: !11313)
!11313 = !{!11314, !11315, !11316, !11317, !11318, !11319, !11320, !11321, !11322}
!11314 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !11312, file: !190, line: 26, baseType: !173, size: 32)
!11315 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !11312, file: !190, line: 27, baseType: !173, size: 32, offset: 32)
!11316 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !11312, file: !190, line: 28, baseType: !173, size: 32, offset: 64)
!11317 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !11312, file: !190, line: 29, baseType: !173, size: 32, offset: 96)
!11318 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !11312, file: !190, line: 30, baseType: !173, size: 32, offset: 128)
!11319 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !11312, file: !190, line: 31, baseType: !173, size: 32, offset: 160)
!11320 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !11312, file: !190, line: 32, baseType: !173, size: 32, offset: 192)
!11321 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !11312, file: !190, line: 33, baseType: !173, size: 32, offset: 224)
!11322 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !11312, file: !190, line: 34, baseType: !173, size: 32, offset: 256)
!11323 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !11251, file: !114, line: 253, baseType: !102, size: 32, offset: 672)
!11324 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !11251, file: !114, line: 256, baseType: !11282, size: 64, offset: 704)
!11325 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !11251, file: !114, line: 294, baseType: !103, size: 32, offset: 768)
!11326 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !11251, file: !114, line: 325, baseType: !11327, size: 32, offset: 800)
!11327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11328, size: 32)
!11328 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !109, line: 5073, size: 160, elements: !11329)
!11329 = !{!11330, !11336, !11337}
!11330 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !11328, file: !109, line: 5074, baseType: !11331, size: 96)
!11331 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !210, line: 56, size: 96, elements: !11332)
!11332 = !{!11333, !11334, !11335}
!11333 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !11331, file: !210, line: 57, baseType: !213, size: 32)
!11334 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !11331, file: !210, line: 58, baseType: !102, size: 32, offset: 32)
!11335 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !11331, file: !210, line: 59, baseType: !217, size: 32, offset: 64)
!11336 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !11328, file: !109, line: 5075, baseType: !11282, size: 64, offset: 96)
!11337 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !11328, file: !109, line: 5076, baseType: !11338, offset: 160)
!11338 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !222, line: 43, elements: !223)
!11339 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !11251, file: !114, line: 343, baseType: !11340, size: 64, offset: 832)
!11340 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !190, line: 60, size: 64, elements: !11341)
!11341 = !{!11342, !11343}
!11342 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !11340, file: !190, line: 63, baseType: !173, size: 32)
!11343 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !11340, file: !190, line: 66, baseType: !173, size: 32, offset: 32)
!11344 = !DILocalVariable(name: "reason", arg: 1, scope: !11203, file: !2694, line: 209, type: !32)
!11345 = !DILocation(line: 209, column: 28, scope: !11203)
!11346 = !DILocalVariable(name: "esf", arg: 2, scope: !11203, file: !2694, line: 209, type: !11206)
!11347 = !DILocation(line: 209, column: 56, scope: !11203)
!11348 = !DILocalVariable(name: "thread", arg: 3, scope: !11203, file: !2694, line: 210, type: !11250)
!11349 = !DILocation(line: 210, column: 25, scope: !11203)
!11350 = !DILocation(line: 212, column: 1, scope: !11203)
!11351 = distinct !DISubprogram(name: "coredump_memory_dump", scope: !2694, file: !2694, line: 214, type: !11352, scopeLine: 215, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2690, retainedNodes: !223)
!11352 = !DISubroutineType(types: !11353)
!11353 = !{null, !22, !22}
!11354 = !DILocalVariable(name: "start_addr", arg: 1, scope: !11351, file: !2694, line: 214, type: !22)
!11355 = !DILocation(line: 214, column: 37, scope: !11351)
!11356 = !DILocalVariable(name: "end_addr", arg: 2, scope: !11351, file: !2694, line: 214, type: !22)
!11357 = !DILocation(line: 214, column: 59, scope: !11351)
!11358 = !DILocation(line: 216, column: 1, scope: !11351)
!11359 = distinct !DISubprogram(name: "coredump_buffer_output", scope: !2694, file: !2694, line: 218, type: !11360, scopeLine: 219, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2690, retainedNodes: !223)
!11360 = !DISubroutineType(types: !11361)
!11361 = !{null, !788, !217}
!11362 = !DILocalVariable(name: "buf", arg: 1, scope: !11359, file: !2694, line: 218, type: !788)
!11363 = !DILocation(line: 218, column: 38, scope: !11359)
!11364 = !DILocalVariable(name: "buflen", arg: 2, scope: !11359, file: !2694, line: 218, type: !217)
!11365 = !DILocation(line: 218, column: 50, scope: !11359)
!11366 = !DILocation(line: 220, column: 1, scope: !11359)
!11367 = distinct !DISubprogram(name: "coredump_query", scope: !2694, file: !2694, line: 222, type: !11368, scopeLine: 223, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2690, retainedNodes: !223)
!11368 = !DISubroutineType(types: !11369)
!11369 = !{!103, !2693, !102}
!11370 = !DILocalVariable(name: "query_id", arg: 1, scope: !11367, file: !2694, line: 222, type: !2693)
!11371 = !DILocation(line: 222, column: 43, scope: !11367)
!11372 = !DILocalVariable(name: "arg", arg: 2, scope: !11367, file: !2694, line: 222, type: !102)
!11373 = !DILocation(line: 222, column: 59, scope: !11367)
!11374 = !DILocation(line: 224, column: 2, scope: !11367)
!11375 = distinct !DISubprogram(name: "coredump_cmd", scope: !2694, file: !2694, line: 227, type: !11376, scopeLine: 228, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2690, retainedNodes: !223)
!11376 = !DISubroutineType(types: !11377)
!11377 = !{!103, !2700, !102}
!11378 = !DILocalVariable(name: "query_id", arg: 1, scope: !11375, file: !2694, line: 227, type: !2700)
!11379 = !DILocation(line: 227, column: 39, scope: !11375)
!11380 = !DILocalVariable(name: "arg", arg: 2, scope: !11375, file: !2694, line: 227, type: !102)
!11381 = !DILocation(line: 227, column: 55, scope: !11375)
!11382 = !DILocation(line: 229, column: 2, scope: !11375)
!11383 = distinct !DISubprogram(name: "arch_system_halt", scope: !11384, file: !11384, line: 23, type: !5361, scopeLine: 24, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagDefinition, unit: !2690, retainedNodes: !223)
!11384 = !DIFile(filename: "zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11385 = !DILocalVariable(name: "reason", arg: 1, scope: !11383, file: !11384, line: 23, type: !32)
!11386 = !DILocation(line: 23, column: 57, scope: !11383)
!11387 = !DILocation(line: 25, column: 2, scope: !11383)
!11388 = !DILocalVariable(name: "key", scope: !11389, file: !5551, line: 44, type: !32)
!11389 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5551, file: !5551, line: 42, type: !7959, scopeLine: 43, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2690, retainedNodes: !223)
!11390 = !DILocation(line: 44, column: 15, scope: !11389, inlinedAt: !11391)
!11391 = distinct !DILocation(line: 31, column: 8, scope: !11383)
!11392 = !DILocalVariable(name: "tmp", scope: !11389, file: !5551, line: 53, type: !32)
!11393 = !DILocation(line: 53, column: 15, scope: !11389, inlinedAt: !11391)
!11394 = !DILocation(line: 55, column: 2, scope: !11389, inlinedAt: !11391)
!11395 = !{i64 2842465}
!11396 = !DILocation(line: 76, column: 9, scope: !11389, inlinedAt: !11391)
!11397 = !DILocation(line: 32, column: 2, scope: !11383)
!11398 = !DILocation(line: 32, column: 2, scope: !11399)
!11399 = distinct !DILexicalBlock(scope: !11400, file: !11384, line: 32, column: 2)
!11400 = distinct !DILexicalBlock(scope: !11383, file: !11384, line: 32, column: 2)
!11401 = distinct !{!11401, !11402, !11403}
!11402 = !DILocation(line: 32, column: 2, scope: !11400)
!11403 = !DILocation(line: 34, column: 2, scope: !11400)
!11404 = distinct !DISubprogram(name: "k_sys_fatal_error_handler", scope: !11384, file: !11384, line: 39, type: !11405, scopeLine: 41, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2690, retainedNodes: !223)
!11405 = !DISubroutineType(types: !11406)
!11406 = !{null, !32, !11206}
!11407 = !DILocalVariable(name: "reason", arg: 1, scope: !11404, file: !11384, line: 39, type: !32)
!11408 = !DILocation(line: 39, column: 52, scope: !11404)
!11409 = !DILocalVariable(name: "esf", arg: 2, scope: !11404, file: !11384, line: 40, type: !11206)
!11410 = !DILocation(line: 40, column: 31, scope: !11404)
!11411 = !DILocation(line: 42, column: 2, scope: !11404)
!11412 = !DILocation(line: 45, column: 2, scope: !11404)
!11413 = !DILocation(line: 45, column: 2, scope: !11414)
!11414 = distinct !DILexicalBlock(scope: !11415, file: !11384, line: 45, column: 2)
!11415 = distinct !DILexicalBlock(scope: !11416, file: !11384, line: 45, column: 2)
!11416 = distinct !DILexicalBlock(scope: !11404, file: !11384, line: 45, column: 2)
!11417 = !DILocation(line: 46, column: 19, scope: !11404)
!11418 = !DILocation(line: 46, column: 2, scope: !11404)
!11419 = distinct !DISubprogram(name: "k_fatal_halt", scope: !11384, file: !11384, line: 81, type: !5361, scopeLine: 82, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagDefinition, unit: !2690, retainedNodes: !223)
!11420 = !DILocalVariable(name: "reason", arg: 1, scope: !11419, file: !11384, line: 81, type: !32)
!11421 = !DILocation(line: 81, column: 46, scope: !11419)
!11422 = !DILocation(line: 83, column: 19, scope: !11419)
!11423 = !DILocation(line: 83, column: 2, scope: !11419)
!11424 = distinct !DISubprogram(name: "z_fatal_error", scope: !11384, file: !11384, line: 96, type: !11405, scopeLine: 97, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2690, retainedNodes: !223)
!11425 = !DILocalVariable(name: "reason", arg: 1, scope: !11424, file: !11384, line: 96, type: !32)
!11426 = !DILocation(line: 96, column: 33, scope: !11424)
!11427 = !DILocalVariable(name: "esf", arg: 2, scope: !11424, file: !11384, line: 96, type: !11206)
!11428 = !DILocation(line: 96, column: 61, scope: !11424)
!11429 = !DILocalVariable(name: "key", scope: !11424, file: !11384, line: 102, type: !32)
!11430 = !DILocation(line: 102, column: 15, scope: !11424)
!11431 = !DILocation(line: 44, column: 15, scope: !11389, inlinedAt: !11432)
!11432 = distinct !DILocation(line: 102, column: 21, scope: !11424)
!11433 = !DILocation(line: 53, column: 15, scope: !11389, inlinedAt: !11432)
!11434 = !DILocation(line: 55, column: 2, scope: !11389, inlinedAt: !11432)
!11435 = !DILocation(line: 76, column: 9, scope: !11389, inlinedAt: !11432)
!11436 = !DILocalVariable(name: "thread", scope: !11424, file: !11384, line: 103, type: !11250)
!11437 = !DILocation(line: 103, column: 19, scope: !11424)
!11438 = !DILocation(line: 104, column: 4, scope: !11424)
!11439 = !DILocation(line: 109, column: 2, scope: !11424)
!11440 = !DILocation(line: 109, column: 2, scope: !11441)
!11441 = distinct !DILexicalBlock(scope: !11442, file: !11384, line: 109, column: 2)
!11442 = distinct !DILexicalBlock(scope: !11443, file: !11384, line: 109, column: 2)
!11443 = distinct !DILexicalBlock(scope: !11424, file: !11384, line: 109, column: 2)
!11444 = !DILocation(line: 119, column: 7, scope: !11445)
!11445 = distinct !DILexicalBlock(scope: !11424, file: !11384, line: 119, column: 6)
!11446 = !DILocation(line: 119, column: 11, scope: !11445)
!11447 = !DILocation(line: 119, column: 20, scope: !11445)
!11448 = !DILocation(line: 119, column: 51, scope: !11445)
!11449 = !DILocalVariable(name: "esf", arg: 1, scope: !11450, file: !6622, line: 71, type: !11206)
!11450 = distinct !DISubprogram(name: "arch_is_in_nested_exception", scope: !6622, file: !6622, line: 71, type: !11451, scopeLine: 72, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2690, retainedNodes: !223)
!11451 = !DISubroutineType(types: !11452)
!11452 = !{!743, !11206}
!11453 = !DILocation(line: 71, column: 75, scope: !11450, inlinedAt: !11454)
!11454 = distinct !DILocation(line: 119, column: 23, scope: !11445)
!11455 = !DILocation(line: 73, column: 10, scope: !11450, inlinedAt: !11454)
!11456 = !DILocation(line: 73, column: 15, scope: !11450, inlinedAt: !11454)
!11457 = !DILocation(line: 73, column: 21, scope: !11450, inlinedAt: !11454)
!11458 = !DILocation(line: 73, column: 26, scope: !11450, inlinedAt: !11454)
!11459 = !DILocation(line: 73, column: 9, scope: !11450, inlinedAt: !11454)
!11460 = !DILocation(line: 119, column: 6, scope: !11424)
!11461 = !DILocation(line: 120, column: 3, scope: !11462)
!11462 = distinct !DILexicalBlock(scope: !11445, file: !11384, line: 119, column: 57)
!11463 = !DILocation(line: 120, column: 3, scope: !11464)
!11464 = distinct !DILexicalBlock(scope: !11465, file: !11384, line: 120, column: 3)
!11465 = distinct !DILexicalBlock(scope: !11466, file: !11384, line: 120, column: 3)
!11466 = distinct !DILexicalBlock(scope: !11462, file: !11384, line: 120, column: 3)
!11467 = !DILocation(line: 121, column: 2, scope: !11462)
!11468 = !DILocation(line: 124, column: 2, scope: !11424)
!11469 = !DILocation(line: 124, column: 2, scope: !11470)
!11470 = distinct !DILexicalBlock(scope: !11471, file: !11384, line: 124, column: 2)
!11471 = distinct !DILexicalBlock(scope: !11472, file: !11384, line: 124, column: 2)
!11472 = distinct !DILexicalBlock(scope: !11424, file: !11384, line: 124, column: 2)
!11473 = !DILocation(line: 128, column: 11, scope: !11424)
!11474 = !DILocation(line: 128, column: 19, scope: !11424)
!11475 = !DILocation(line: 128, column: 24, scope: !11424)
!11476 = !DILocation(line: 128, column: 2, scope: !11424)
!11477 = !DILocation(line: 131, column: 28, scope: !11424)
!11478 = !DILocation(line: 131, column: 36, scope: !11424)
!11479 = !DILocation(line: 131, column: 2, scope: !11424)
!11480 = !DILocation(line: 151, column: 8, scope: !11481)
!11481 = distinct !DILexicalBlock(scope: !11482, file: !11384, line: 151, column: 7)
!11482 = distinct !DILexicalBlock(scope: !11483, file: !11384, line: 146, column: 32)
!11483 = distinct !DILexicalBlock(scope: !11424, file: !11384, line: 146, column: 6)
!11484 = !DILocation(line: 151, column: 12, scope: !11481)
!11485 = !DILocation(line: 151, column: 21, scope: !11481)
!11486 = !DILocation(line: 151, column: 52, scope: !11481)
!11487 = !DILocation(line: 71, column: 75, scope: !11450, inlinedAt: !11488)
!11488 = distinct !DILocation(line: 151, column: 24, scope: !11481)
!11489 = !DILocation(line: 73, column: 10, scope: !11450, inlinedAt: !11488)
!11490 = !DILocation(line: 73, column: 15, scope: !11450, inlinedAt: !11488)
!11491 = !DILocation(line: 73, column: 21, scope: !11450, inlinedAt: !11488)
!11492 = !DILocation(line: 73, column: 26, scope: !11450, inlinedAt: !11488)
!11493 = !DILocation(line: 73, column: 9, scope: !11450, inlinedAt: !11488)
!11494 = !DILocation(line: 151, column: 7, scope: !11482)
!11495 = !DILocation(line: 158, column: 3, scope: !11496)
!11496 = distinct !DILexicalBlock(scope: !11481, file: !11384, line: 151, column: 58)
!11497 = !DILocation(line: 186, column: 18, scope: !11424)
!11498 = !DILocalVariable(name: "key", arg: 1, scope: !11499, file: !5551, line: 84, type: !32)
!11499 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5551, file: !5551, line: 84, type: !5361, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2690, retainedNodes: !223)
!11500 = !DILocation(line: 84, column: 56, scope: !11499, inlinedAt: !11501)
!11501 = distinct !DILocation(line: 186, column: 2, scope: !11424)
!11502 = !DILocation(line: 98, column: 12, scope: !11499, inlinedAt: !11501)
!11503 = !DILocation(line: 95, column: 2, scope: !11499, inlinedAt: !11501)
!11504 = !{i64 2843282}
!11505 = !DILocation(line: 189, column: 18, scope: !11506)
!11506 = distinct !DILexicalBlock(scope: !11507, file: !11384, line: 188, column: 41)
!11507 = distinct !DILexicalBlock(scope: !11424, file: !11384, line: 188, column: 6)
!11508 = !DILocation(line: 189, column: 3, scope: !11506)
!11509 = !DILocation(line: 191, column: 1, scope: !11424)
!11510 = distinct !DISubprogram(name: "k_current_get", scope: !109, file: !109, line: 530, type: !11511, scopeLine: 531, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2690, retainedNodes: !223)
!11511 = !DISubroutineType(types: !11512)
!11512 = !{!11513}
!11513 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !114, line: 347, baseType: !11250)
!11514 = !DILocation(line: 535, column: 9, scope: !11510)
!11515 = !DILocation(line: 535, column: 2, scope: !11510)
!11516 = distinct !DISubprogram(name: "k_thread_abort", scope: !2997, file: !2997, line: 188, type: !11517, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2690, retainedNodes: !223)
!11517 = !DISubroutineType(types: !11518)
!11518 = !{null, !11513}
!11519 = !DILocalVariable(name: "thread", arg: 1, scope: !11516, file: !2997, line: 188, type: !11513)
!11520 = !DILocation(line: 188, column: 43, scope: !11516)
!11521 = !DILocation(line: 197, column: 2, scope: !11516)
!11522 = !DILocation(line: 197, column: 2, scope: !11523)
!11523 = distinct !DILexicalBlock(scope: !11516, file: !2997, line: 197, column: 2)
!11524 = !{i64 2151037015}
!11525 = !DILocation(line: 198, column: 24, scope: !11516)
!11526 = !DILocation(line: 198, column: 2, scope: !11516)
!11527 = !DILocation(line: 199, column: 1, scope: !11516)
!11528 = distinct !DISubprogram(name: "z_current_get", scope: !2997, file: !2997, line: 173, type: !11511, scopeLine: 174, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2690, retainedNodes: !223)
!11529 = !DILocation(line: 180, column: 2, scope: !11528)
!11530 = !DILocation(line: 180, column: 2, scope: !11531)
!11531 = distinct !DILexicalBlock(scope: !11528, file: !2997, line: 180, column: 2)
!11532 = !{i64 2151036947}
!11533 = !DILocation(line: 181, column: 9, scope: !11528)
!11534 = !DILocation(line: 181, column: 2, scope: !11528)
!11535 = distinct !DISubprogram(name: "z_early_memset", scope: !1600, file: !1600, line: 108, type: !11536, scopeLine: 109, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1596, retainedNodes: !223)
!11536 = !DISubroutineType(types: !11537)
!11537 = !{null, !102, !103, !217}
!11538 = !DILocalVariable(name: "dst", arg: 1, scope: !11535, file: !1600, line: 108, type: !102)
!11539 = !DILocation(line: 108, column: 34, scope: !11535)
!11540 = !DILocalVariable(name: "c", arg: 2, scope: !11535, file: !1600, line: 108, type: !103)
!11541 = !DILocation(line: 108, column: 43, scope: !11535)
!11542 = !DILocalVariable(name: "n", arg: 3, scope: !11535, file: !1600, line: 108, type: !217)
!11543 = !DILocation(line: 108, column: 53, scope: !11535)
!11544 = !DILocation(line: 110, column: 16, scope: !11535)
!11545 = !DILocation(line: 110, column: 21, scope: !11535)
!11546 = !DILocation(line: 110, column: 24, scope: !11535)
!11547 = !DILocation(line: 110, column: 9, scope: !11535)
!11548 = !DILocation(line: 111, column: 1, scope: !11535)
!11549 = distinct !DISubprogram(name: "z_early_memcpy", scope: !1600, file: !1600, line: 121, type: !11550, scopeLine: 122, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1596, retainedNodes: !223)
!11550 = !DISubroutineType(types: !11551)
!11551 = !{null, !102, !13, !217}
!11552 = !DILocalVariable(name: "dst", arg: 1, scope: !11549, file: !1600, line: 121, type: !102)
!11553 = !DILocation(line: 121, column: 34, scope: !11549)
!11554 = !DILocalVariable(name: "src", arg: 2, scope: !11549, file: !1600, line: 121, type: !13)
!11555 = !DILocation(line: 121, column: 51, scope: !11549)
!11556 = !DILocalVariable(name: "n", arg: 3, scope: !11549, file: !1600, line: 121, type: !217)
!11557 = !DILocation(line: 121, column: 63, scope: !11549)
!11558 = !DILocation(line: 123, column: 16, scope: !11549)
!11559 = !DILocation(line: 123, column: 21, scope: !11549)
!11560 = !DILocation(line: 123, column: 26, scope: !11549)
!11561 = !DILocation(line: 123, column: 9, scope: !11549)
!11562 = !DILocation(line: 124, column: 1, scope: !11549)
!11563 = distinct !DISubprogram(name: "z_bss_zero", scope: !1600, file: !1600, line: 132, type: !253, scopeLine: 133, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1596, retainedNodes: !223)
!11564 = !DILocation(line: 143, column: 2, scope: !11563)
!11565 = !DILocation(line: 168, column: 1, scope: !11563)
!11566 = distinct !DISubprogram(name: "z_init_cpu", scope: !1600, file: !1600, line: 372, type: !11567, scopeLine: 373, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1596, retainedNodes: !223)
!11567 = !DISubroutineType(types: !11568)
!11568 = !{null, !103}
!11569 = !DILocalVariable(name: "id", arg: 1, scope: !11566, file: !1600, line: 372, type: !103)
!11570 = !DILocation(line: 372, column: 21, scope: !11566)
!11571 = !DILocation(line: 374, column: 19, scope: !11566)
!11572 = !DILocation(line: 374, column: 2, scope: !11566)
!11573 = !DILocation(line: 375, column: 49, scope: !11566)
!11574 = !DILocation(line: 375, column: 34, scope: !11566)
!11575 = !DILocation(line: 375, column: 15, scope: !11566)
!11576 = !DILocation(line: 375, column: 2, scope: !11566)
!11577 = !DILocation(line: 375, column: 19, scope: !11566)
!11578 = !DILocation(line: 375, column: 31, scope: !11566)
!11579 = !DILocation(line: 376, column: 24, scope: !11566)
!11580 = !DILocation(line: 376, column: 15, scope: !11566)
!11581 = !DILocation(line: 376, column: 2, scope: !11566)
!11582 = !DILocation(line: 376, column: 19, scope: !11566)
!11583 = !DILocation(line: 376, column: 22, scope: !11566)
!11584 = !DILocation(line: 378, column: 45, scope: !11566)
!11585 = !DILocation(line: 378, column: 26, scope: !11566)
!11586 = !DILocation(line: 378, column: 4, scope: !11566)
!11587 = !DILocation(line: 378, column: 50, scope: !11566)
!11588 = !DILocation(line: 377, column: 15, scope: !11566)
!11589 = !DILocation(line: 377, column: 2, scope: !11566)
!11590 = !DILocation(line: 377, column: 19, scope: !11566)
!11591 = !DILocation(line: 377, column: 29, scope: !11566)
!11592 = !DILocation(line: 384, column: 1, scope: !11566)
!11593 = distinct !DISubprogram(name: "init_idle_thread", scope: !1600, file: !1600, line: 343, type: !11567, scopeLine: 344, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1596, retainedNodes: !223)
!11594 = !DILocalVariable(name: "i", arg: 1, scope: !11593, file: !1600, line: 343, type: !103)
!11595 = !DILocation(line: 343, column: 34, scope: !11593)
!11596 = !DILocalVariable(name: "thread", scope: !11593, file: !1600, line: 345, type: !1692)
!11597 = !DILocation(line: 345, column: 19, scope: !11593)
!11598 = !DILocation(line: 345, column: 44, scope: !11593)
!11599 = !DILocation(line: 345, column: 29, scope: !11593)
!11600 = !DILocalVariable(name: "stack", scope: !11593, file: !1600, line: 346, type: !11601)
!11601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11602, size: 32)
!11602 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !232, line: 44, baseType: !1800)
!11603 = !DILocation(line: 346, column: 20, scope: !11593)
!11604 = !DILocation(line: 346, column: 42, scope: !11593)
!11605 = !DILocation(line: 346, column: 28, scope: !11593)
!11606 = !DILocalVariable(name: "tname", scope: !11593, file: !1600, line: 358, type: !925)
!11607 = !DILocation(line: 358, column: 8, scope: !11593)
!11608 = !DILocation(line: 361, column: 21, scope: !11593)
!11609 = !DILocation(line: 361, column: 29, scope: !11593)
!11610 = !DILocation(line: 362, column: 50, scope: !11593)
!11611 = !DILocation(line: 362, column: 37, scope: !11593)
!11612 = !DILocation(line: 362, column: 36, scope: !11593)
!11613 = !DILocation(line: 364, column: 6, scope: !11593)
!11614 = !DILocation(line: 361, column: 2, scope: !11593)
!11615 = !DILocation(line: 365, column: 27, scope: !11593)
!11616 = !DILocation(line: 365, column: 2, scope: !11593)
!11617 = !DILocation(line: 370, column: 1, scope: !11593)
!11618 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !234, file: !234, line: 331, type: !11619, scopeLine: 332, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1596, retainedNodes: !223)
!11619 = !DISubroutineType(types: !11620)
!11620 = !{!925, !11601}
!11621 = !DILocalVariable(name: "sym", arg: 1, scope: !11618, file: !234, line: 331, type: !11601)
!11622 = !DILocation(line: 331, column: 61, scope: !11618)
!11623 = !DILocation(line: 333, column: 17, scope: !11618)
!11624 = !DILocation(line: 333, column: 9, scope: !11618)
!11625 = !DILocation(line: 333, column: 21, scope: !11618)
!11626 = !DILocation(line: 333, column: 2, scope: !11618)
!11627 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !11628, file: !11628, line: 155, type: !11629, scopeLine: 156, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1596, retainedNodes: !223)
!11628 = !DIFile(filename: "zephyr/kernel/include/ksched.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11629 = !DISubroutineType(types: !11630)
!11630 = !{null, !1692}
!11631 = !DILocalVariable(name: "thread", arg: 1, scope: !11627, file: !11628, line: 155, type: !1692)
!11632 = !DILocation(line: 155, column: 62, scope: !11627)
!11633 = !DILocation(line: 157, column: 2, scope: !11627)
!11634 = !DILocation(line: 157, column: 10, scope: !11627)
!11635 = !DILocation(line: 157, column: 15, scope: !11627)
!11636 = !DILocation(line: 157, column: 28, scope: !11627)
!11637 = !DILocation(line: 158, column: 1, scope: !11627)
!11638 = distinct !DISubprogram(name: "z_cstart", scope: !1600, file: !1600, line: 501, type: !253, scopeLine: 502, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagDefinition, unit: !1596, retainedNodes: !223)
!11639 = !DILocation(line: 504, column: 2, scope: !11638)
!11640 = !DILocation(line: 507, column: 2, scope: !11638)
!11641 = !DILocalVariable(name: "msp", scope: !11642, file: !11643, line: 42, type: !173)
!11642 = distinct !DISubprogram(name: "z_arm_interrupt_stack_setup", scope: !11643, file: !11643, line: 40, type: !253, scopeLine: 41, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1596, retainedNodes: !223)
!11643 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11644 = !DILocation(line: 42, column: 11, scope: !11642, inlinedAt: !11645)
!11645 = distinct !DILocation(line: 44, column: 2, scope: !11646, inlinedAt: !11648)
!11646 = distinct !DISubprogram(name: "arch_kernel_init", scope: !11647, file: !11647, line: 42, type: !253, scopeLine: 43, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1596, retainedNodes: !223)
!11647 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/kernel_arch_func.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11648 = distinct !DILocation(line: 510, column: 2, scope: !11638)
!11649 = !DILocation(line: 43, column: 14, scope: !11642, inlinedAt: !11645)
!11650 = !DILocation(line: 43, column: 3, scope: !11642, inlinedAt: !11645)
!11651 = !DILocation(line: 43, column: 60, scope: !11642, inlinedAt: !11645)
!11652 = !DILocation(line: 46, column: 12, scope: !11642, inlinedAt: !11645)
!11653 = !DILocalVariable(name: "topOfMainStack", arg: 1, scope: !11654, file: !5414, line: 1153, type: !173)
!11654 = distinct !DISubprogram(name: "__set_MSP", scope: !5414, file: !5414, line: 1153, type: !5524, scopeLine: 1154, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1596, retainedNodes: !223)
!11655 = !DILocation(line: 1153, column: 46, scope: !11654, inlinedAt: !11656)
!11656 = distinct !DILocation(line: 46, column: 2, scope: !11642, inlinedAt: !11645)
!11657 = !DILocation(line: 1155, column: 42, scope: !11654, inlinedAt: !11656)
!11658 = !DILocation(line: 1155, column: 3, scope: !11654, inlinedAt: !11656)
!11659 = !{i64 7497655}
!11660 = !DILocation(line: 62, column: 11, scope: !11642, inlinedAt: !11645)
!11661 = !DILocation(line: 102, column: 2, scope: !11662, inlinedAt: !11663)
!11662 = distinct !DISubprogram(name: "z_arm_exc_setup", scope: !6622, file: !6622, line: 97, type: !253, scopeLine: 98, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1596, retainedNodes: !223)
!11663 = distinct !DILocation(line: 45, column: 2, scope: !11646, inlinedAt: !11648)
!11664 = !DILocation(line: 108, column: 2, scope: !11662, inlinedAt: !11663)
!11665 = !DILocation(line: 112, column: 2, scope: !11662, inlinedAt: !11663)
!11666 = !DILocation(line: 113, column: 2, scope: !11662, inlinedAt: !11663)
!11667 = !DILocation(line: 114, column: 2, scope: !11662, inlinedAt: !11663)
!11668 = !DILocation(line: 116, column: 2, scope: !11662, inlinedAt: !11663)
!11669 = !DILocation(line: 123, column: 13, scope: !11662, inlinedAt: !11663)
!11670 = !DILocation(line: 46, column: 2, scope: !11646, inlinedAt: !11648)
!11671 = !DILocation(line: 47, column: 2, scope: !11646, inlinedAt: !11648)
!11672 = !DILocation(line: 174, column: 12, scope: !11673, inlinedAt: !11674)
!11673 = distinct !DISubprogram(name: "z_arm_clear_faults", scope: !6622, file: !6622, line: 169, type: !253, scopeLine: 170, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1596, retainedNodes: !223)
!11674 = distinct !DILocation(line: 48, column: 2, scope: !11646, inlinedAt: !11648)
!11675 = !DILocation(line: 179, column: 12, scope: !11673, inlinedAt: !11674)
!11676 = !DILocation(line: 512, column: 2, scope: !11638)
!11677 = !DILocation(line: 512, column: 2, scope: !11678)
!11678 = distinct !DILexicalBlock(scope: !11638, file: !1600, line: 512, column: 2)
!11679 = !DILocalVariable(name: "dummy_thread", scope: !11638, file: !1600, line: 518, type: !1693)
!11680 = !DILocation(line: 518, column: 18, scope: !11638)
!11681 = !DILocation(line: 520, column: 2, scope: !11638)
!11682 = !DILocation(line: 523, column: 2, scope: !11638)
!11683 = !DILocation(line: 526, column: 2, scope: !11638)
!11684 = !DILocation(line: 527, column: 2, scope: !11638)
!11685 = !DILocation(line: 543, column: 24, scope: !11638)
!11686 = !DILocation(line: 543, column: 2, scope: !11638)
!11687 = distinct !DISubprogram(name: "gcov_static_init", scope: !11688, file: !11688, line: 15, type: !253, scopeLine: 15, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1596, retainedNodes: !223)
!11688 = !DIFile(filename: "zephyr/include/zephyr/debug/gcov.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11689 = !DILocation(line: 15, column: 45, scope: !11687)
!11690 = !DILocalVariable(name: "level", arg: 1, scope: !1819, file: !1600, line: 230, type: !1599)
!11691 = !DILocation(line: 230, column: 50, scope: !1819)
!11692 = !DILocalVariable(name: "entry", scope: !1819, file: !1600, line: 244, type: !1823)
!11693 = !DILocation(line: 244, column: 27, scope: !1819)
!11694 = !DILocation(line: 246, column: 22, scope: !11695)
!11695 = distinct !DILexicalBlock(scope: !1819, file: !1600, line: 246, column: 2)
!11696 = !DILocation(line: 246, column: 15, scope: !11695)
!11697 = !DILocation(line: 246, column: 13, scope: !11695)
!11698 = !DILocation(line: 246, column: 7, scope: !11695)
!11699 = !DILocation(line: 246, column: 30, scope: !11700)
!11700 = distinct !DILexicalBlock(scope: !11695, file: !1600, line: 246, column: 2)
!11701 = !DILocation(line: 246, column: 45, scope: !11700)
!11702 = !DILocation(line: 246, column: 50, scope: !11700)
!11703 = !DILocation(line: 246, column: 38, scope: !11700)
!11704 = !DILocation(line: 246, column: 36, scope: !11700)
!11705 = !DILocation(line: 246, column: 2, scope: !11695)
!11706 = !DILocalVariable(name: "dev", scope: !11707, file: !1600, line: 247, type: !1618)
!11707 = distinct !DILexicalBlock(scope: !11700, file: !1600, line: 246, column: 64)
!11708 = !DILocation(line: 247, column: 24, scope: !11707)
!11709 = !DILocation(line: 247, column: 30, scope: !11707)
!11710 = !DILocation(line: 247, column: 37, scope: !11707)
!11711 = !DILocalVariable(name: "rc", scope: !11707, file: !1600, line: 248, type: !103)
!11712 = !DILocation(line: 248, column: 7, scope: !11707)
!11713 = !DILocation(line: 248, column: 12, scope: !11707)
!11714 = !DILocation(line: 248, column: 19, scope: !11707)
!11715 = !DILocation(line: 248, column: 24, scope: !11707)
!11716 = !DILocation(line: 250, column: 7, scope: !11717)
!11717 = distinct !DILexicalBlock(scope: !11707, file: !1600, line: 250, column: 7)
!11718 = !DILocation(line: 250, column: 11, scope: !11717)
!11719 = !DILocation(line: 250, column: 7, scope: !11707)
!11720 = !DILocation(line: 254, column: 8, scope: !11721)
!11721 = distinct !DILexicalBlock(scope: !11722, file: !1600, line: 254, column: 8)
!11722 = distinct !DILexicalBlock(scope: !11717, file: !1600, line: 250, column: 20)
!11723 = !DILocation(line: 254, column: 11, scope: !11721)
!11724 = !DILocation(line: 254, column: 8, scope: !11722)
!11725 = !DILocation(line: 255, column: 9, scope: !11726)
!11726 = distinct !DILexicalBlock(scope: !11727, file: !1600, line: 255, column: 9)
!11727 = distinct !DILexicalBlock(scope: !11721, file: !1600, line: 254, column: 17)
!11728 = !DILocation(line: 255, column: 12, scope: !11726)
!11729 = !DILocation(line: 255, column: 9, scope: !11727)
!11730 = !DILocation(line: 256, column: 12, scope: !11731)
!11731 = distinct !DILexicalBlock(scope: !11726, file: !1600, line: 255, column: 17)
!11732 = !DILocation(line: 256, column: 11, scope: !11731)
!11733 = !DILocation(line: 256, column: 9, scope: !11731)
!11734 = !DILocation(line: 257, column: 5, scope: !11731)
!11735 = !DILocation(line: 258, column: 9, scope: !11736)
!11736 = distinct !DILexicalBlock(scope: !11727, file: !1600, line: 258, column: 9)
!11737 = !DILocation(line: 258, column: 12, scope: !11736)
!11738 = !DILocation(line: 258, column: 9, scope: !11727)
!11739 = !DILocation(line: 259, column: 9, scope: !11740)
!11740 = distinct !DILexicalBlock(scope: !11736, file: !1600, line: 258, column: 25)
!11741 = !DILocation(line: 260, column: 5, scope: !11740)
!11742 = !DILocation(line: 261, column: 28, scope: !11727)
!11743 = !DILocation(line: 261, column: 5, scope: !11727)
!11744 = !DILocation(line: 261, column: 10, scope: !11727)
!11745 = !DILocation(line: 261, column: 17, scope: !11727)
!11746 = !DILocation(line: 261, column: 26, scope: !11727)
!11747 = !DILocation(line: 262, column: 4, scope: !11727)
!11748 = !DILocation(line: 263, column: 4, scope: !11722)
!11749 = !DILocation(line: 263, column: 9, scope: !11722)
!11750 = !DILocation(line: 263, column: 16, scope: !11722)
!11751 = !DILocation(line: 263, column: 28, scope: !11722)
!11752 = !DILocation(line: 264, column: 3, scope: !11722)
!11753 = !DILocation(line: 265, column: 2, scope: !11707)
!11754 = !DILocation(line: 246, column: 60, scope: !11700)
!11755 = !DILocation(line: 246, column: 2, scope: !11700)
!11756 = distinct !{!11756, !11705, !11757}
!11757 = !DILocation(line: 265, column: 2, scope: !11695)
!11758 = !DILocation(line: 266, column: 1, scope: !1819)
!11759 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !1446, file: !1446, line: 1814, type: !5450, scopeLine: 1815, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1596, retainedNodes: !223)
!11760 = !DILocalVariable(name: "IRQn", arg: 1, scope: !11759, file: !1446, line: 1814, type: !2155)
!11761 = !DILocation(line: 1814, column: 51, scope: !11759)
!11762 = !DILocalVariable(name: "priority", arg: 2, scope: !11759, file: !1446, line: 1814, type: !173)
!11763 = !DILocation(line: 1814, column: 66, scope: !11759)
!11764 = !DILocation(line: 1816, column: 17, scope: !11765)
!11765 = distinct !DILexicalBlock(scope: !11759, file: !1446, line: 1816, column: 7)
!11766 = !DILocation(line: 1816, column: 23, scope: !11765)
!11767 = !DILocation(line: 1816, column: 7, scope: !11759)
!11768 = !DILocation(line: 1818, column: 59, scope: !11769)
!11769 = distinct !DILexicalBlock(scope: !11765, file: !1446, line: 1817, column: 3)
!11770 = !DILocation(line: 1818, column: 68, scope: !11769)
!11771 = !DILocation(line: 1818, column: 96, scope: !11769)
!11772 = !DILocation(line: 1818, column: 48, scope: !11769)
!11773 = !DILocation(line: 1818, column: 25, scope: !11769)
!11774 = !DILocation(line: 1818, column: 5, scope: !11769)
!11775 = !DILocation(line: 1818, column: 46, scope: !11769)
!11776 = !DILocation(line: 1819, column: 3, scope: !11769)
!11777 = !DILocation(line: 1822, column: 59, scope: !11778)
!11778 = distinct !DILexicalBlock(scope: !11765, file: !1446, line: 1821, column: 3)
!11779 = !DILocation(line: 1822, column: 68, scope: !11778)
!11780 = !DILocation(line: 1822, column: 96, scope: !11778)
!11781 = !DILocation(line: 1822, column: 48, scope: !11778)
!11782 = !DILocation(line: 1822, column: 26, scope: !11778)
!11783 = !DILocation(line: 1822, column: 32, scope: !11778)
!11784 = !DILocation(line: 1822, column: 40, scope: !11778)
!11785 = !DILocation(line: 1822, column: 5, scope: !11778)
!11786 = !DILocation(line: 1822, column: 46, scope: !11778)
!11787 = !DILocation(line: 1824, column: 1, scope: !11759)
!11788 = distinct !DISubprogram(name: "z_dummy_thread_init", scope: !11789, file: !11789, line: 215, type: !11629, scopeLine: 216, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1596, retainedNodes: !223)
!11789 = !DIFile(filename: "zephyr/kernel/include/kswap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11790 = !DILocalVariable(name: "dummy_thread", arg: 1, scope: !11788, file: !11789, line: 215, type: !1692)
!11791 = !DILocation(line: 215, column: 57, scope: !11788)
!11792 = !DILocation(line: 217, column: 2, scope: !11788)
!11793 = !DILocation(line: 217, column: 16, scope: !11788)
!11794 = !DILocation(line: 217, column: 21, scope: !11788)
!11795 = !DILocation(line: 217, column: 34, scope: !11788)
!11796 = !DILocation(line: 221, column: 2, scope: !11788)
!11797 = !DILocation(line: 221, column: 16, scope: !11788)
!11798 = !DILocation(line: 221, column: 21, scope: !11788)
!11799 = !DILocation(line: 221, column: 34, scope: !11788)
!11800 = !DILocation(line: 232, column: 2, scope: !11788)
!11801 = !DILocation(line: 232, column: 16, scope: !11788)
!11802 = !DILocation(line: 232, column: 30, scope: !11788)
!11803 = !DILocation(line: 239, column: 26, scope: !11788)
!11804 = !DILocation(line: 239, column: 24, scope: !11788)
!11805 = !DILocation(line: 240, column: 1, scope: !11788)
!11806 = distinct !DISubprogram(name: "prepare_multithreading", scope: !1600, file: !1600, line: 399, type: !11807, scopeLine: 400, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1596, retainedNodes: !223)
!11807 = !DISubroutineType(types: !11808)
!11808 = !{!925}
!11809 = !DILocalVariable(name: "stack_ptr", scope: !11806, file: !1600, line: 401, type: !925)
!11810 = !DILocation(line: 401, column: 8, scope: !11806)
!11811 = !DILocation(line: 404, column: 2, scope: !11806)
!11812 = !DILocation(line: 416, column: 24, scope: !11806)
!11813 = !DILocation(line: 418, column: 14, scope: !11806)
!11814 = !DILocation(line: 418, column: 12, scope: !11806)
!11815 = !DILocation(line: 423, column: 2, scope: !11806)
!11816 = !DILocation(line: 424, column: 2, scope: !11806)
!11817 = !DILocation(line: 426, column: 2, scope: !11806)
!11818 = !DILocation(line: 428, column: 9, scope: !11806)
!11819 = !DILocation(line: 428, column: 2, scope: !11806)
!11820 = distinct !DISubprogram(name: "switch_to_main_thread", scope: !1600, file: !1600, line: 432, type: !11821, scopeLine: 433, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1596, retainedNodes: !223)
!11821 = !DISubroutineType(types: !11822)
!11822 = !{null, !925}
!11823 = !DILocalVariable(name: "stack_ptr", arg: 1, scope: !11820, file: !1600, line: 432, type: !925)
!11824 = !DILocation(line: 432, column: 55, scope: !11820)
!11825 = !DILocation(line: 435, column: 45, scope: !11820)
!11826 = !DILocation(line: 435, column: 2, scope: !11820)
!11827 = !DILocation(line: 445, column: 2, scope: !11820)
!11828 = distinct !DISubprogram(name: "bg_thread_main", scope: !1600, file: !1600, line: 277, type: !242, scopeLine: 278, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1596, retainedNodes: !223)
!11829 = !DILocalVariable(name: "unused1", arg: 1, scope: !11828, file: !1600, line: 277, type: !102)
!11830 = !DILocation(line: 277, column: 34, scope: !11828)
!11831 = !DILocalVariable(name: "unused2", arg: 2, scope: !11828, file: !1600, line: 277, type: !102)
!11832 = !DILocation(line: 277, column: 49, scope: !11828)
!11833 = !DILocalVariable(name: "unused3", arg: 3, scope: !11828, file: !1600, line: 277, type: !102)
!11834 = !DILocation(line: 277, column: 64, scope: !11828)
!11835 = !DILocation(line: 279, column: 2, scope: !11828)
!11836 = !DILocation(line: 280, column: 2, scope: !11828)
!11837 = !DILocation(line: 281, column: 2, scope: !11828)
!11838 = !DILocation(line: 291, column: 20, scope: !11828)
!11839 = !DILocation(line: 293, column: 2, scope: !11828)
!11840 = !DILocation(line: 297, column: 2, scope: !11828)
!11841 = !DILocation(line: 305, column: 2, scope: !11828)
!11842 = !DILocation(line: 307, column: 2, scope: !11828)
!11843 = !DILocation(line: 330, column: 8, scope: !11828)
!11844 = !DILocation(line: 333, column: 34, scope: !11828)
!11845 = !DILocation(line: 339, column: 1, scope: !11828)
!11846 = distinct !DISubprogram(name: "k_thread_foreach", scope: !1838, file: !1838, line: 45, type: !11847, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1936, retainedNodes: !223)
!11847 = !DISubroutineType(types: !11848)
!11848 = !{null, !11849, !102}
!11849 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_user_cb_t", file: !109, line: 103, baseType: !11850)
!11850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11851, size: 32)
!11851 = !DISubroutineType(types: !11852)
!11852 = !{null, !11853, !102}
!11853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11854, size: 32)
!11854 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1843)
!11855 = !DILocalVariable(name: "user_cb", arg: 1, scope: !11846, file: !1838, line: 45, type: !11849)
!11856 = !DILocation(line: 45, column: 42, scope: !11846)
!11857 = !DILocalVariable(name: "user_data", arg: 2, scope: !11846, file: !1838, line: 45, type: !102)
!11858 = !DILocation(line: 45, column: 57, scope: !11846)
!11859 = !DILocation(line: 71, column: 1, scope: !11846)
!11860 = distinct !DISubprogram(name: "k_thread_foreach_unlocked", scope: !1838, file: !1838, line: 73, type: !11847, scopeLine: 74, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1936, retainedNodes: !223)
!11861 = !DILocalVariable(name: "user_cb", arg: 1, scope: !11860, file: !1838, line: 73, type: !11849)
!11862 = !DILocation(line: 73, column: 51, scope: !11860)
!11863 = !DILocalVariable(name: "user_data", arg: 2, scope: !11860, file: !1838, line: 73, type: !102)
!11864 = !DILocation(line: 73, column: 66, scope: !11860)
!11865 = !DILocation(line: 95, column: 1, scope: !11860)
!11866 = distinct !DISubprogram(name: "k_is_in_isr", scope: !1838, file: !1838, line: 97, type: !2920, scopeLine: 98, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1936, retainedNodes: !223)
!11867 = !DILocalVariable(name: "result", scope: !11868, file: !5414, line: 1029, type: !173)
!11868 = distinct !DISubprogram(name: "__get_IPSR", scope: !5414, file: !5414, line: 1027, type: !5514, scopeLine: 1028, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1936, retainedNodes: !223)
!11869 = !DILocation(line: 1029, column: 12, scope: !11868, inlinedAt: !11870)
!11870 = distinct !DILocation(line: 48, column: 10, scope: !11871, inlinedAt: !11872)
!11871 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !6622, file: !6622, line: 46, type: !2920, scopeLine: 47, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1936, retainedNodes: !223)
!11872 = distinct !DILocation(line: 99, column: 9, scope: !11866)
!11873 = !DILocation(line: 1031, column: 3, scope: !11868, inlinedAt: !11870)
!11874 = !{i64 7012475}
!11875 = !DILocation(line: 1032, column: 10, scope: !11868, inlinedAt: !11870)
!11876 = !DILocation(line: 48, column: 9, scope: !11871, inlinedAt: !11872)
!11877 = !DILocation(line: 99, column: 2, scope: !11866)
!11878 = distinct !DISubprogram(name: "z_thread_essential_set", scope: !1838, file: !1838, line: 106, type: !253, scopeLine: 107, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1936, retainedNodes: !223)
!11879 = !DILocation(line: 108, column: 2, scope: !11878)
!11880 = !DILocation(line: 108, column: 12, scope: !11878)
!11881 = !DILocation(line: 108, column: 17, scope: !11878)
!11882 = !DILocation(line: 108, column: 30, scope: !11878)
!11883 = !DILocation(line: 109, column: 1, scope: !11878)
!11884 = distinct !DISubprogram(name: "z_thread_essential_clear", scope: !1838, file: !1838, line: 116, type: !253, scopeLine: 117, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1936, retainedNodes: !223)
!11885 = !DILocation(line: 118, column: 2, scope: !11884)
!11886 = !DILocation(line: 118, column: 12, scope: !11884)
!11887 = !DILocation(line: 118, column: 17, scope: !11884)
!11888 = !DILocation(line: 118, column: 30, scope: !11884)
!11889 = !DILocation(line: 119, column: 1, scope: !11884)
!11890 = distinct !DISubprogram(name: "z_is_thread_essential", scope: !1838, file: !1838, line: 126, type: !2920, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1936, retainedNodes: !223)
!11891 = !DILocation(line: 128, column: 10, scope: !11890)
!11892 = !DILocation(line: 128, column: 20, scope: !11890)
!11893 = !DILocation(line: 128, column: 25, scope: !11890)
!11894 = !DILocation(line: 128, column: 38, scope: !11890)
!11895 = !DILocation(line: 128, column: 53, scope: !11890)
!11896 = !DILocation(line: 128, column: 2, scope: !11890)
!11897 = distinct !DISubprogram(name: "z_impl_k_thread_name_set", scope: !1838, file: !1838, line: 187, type: !11898, scopeLine: 188, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1936, retainedNodes: !223)
!11898 = !DISubroutineType(types: !11899)
!11899 = !{!103, !1842, !256}
!11900 = !DILocalVariable(name: "thread", arg: 1, scope: !11897, file: !1838, line: 187, type: !1842)
!11901 = !DILocation(line: 187, column: 47, scope: !11897)
!11902 = !DILocalVariable(name: "value", arg: 2, scope: !11897, file: !1838, line: 187, type: !256)
!11903 = !DILocation(line: 187, column: 67, scope: !11897)
!11904 = !DILocation(line: 201, column: 2, scope: !11897)
!11905 = !DILocation(line: 202, column: 2, scope: !11897)
!11906 = !DILocation(line: 204, column: 2, scope: !11897)
!11907 = !DILocation(line: 204, column: 2, scope: !11908)
!11908 = distinct !DILexicalBlock(scope: !11897, file: !1838, line: 204, column: 2)
!11909 = !DILocation(line: 206, column: 2, scope: !11897)
!11910 = distinct !DISubprogram(name: "k_thread_name_get", scope: !1838, file: !1838, line: 238, type: !11911, scopeLine: 239, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1936, retainedNodes: !223)
!11911 = !DISubroutineType(types: !11912)
!11912 = !{!256, !1842}
!11913 = !DILocalVariable(name: "thread", arg: 1, scope: !11910, file: !1838, line: 238, type: !1842)
!11914 = !DILocation(line: 238, column: 48, scope: !11910)
!11915 = !DILocation(line: 243, column: 2, scope: !11910)
!11916 = !DILocation(line: 244, column: 2, scope: !11910)
!11917 = distinct !DISubprogram(name: "z_impl_k_thread_name_copy", scope: !1838, file: !1838, line: 248, type: !11918, scopeLine: 249, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1936, retainedNodes: !223)
!11918 = !DISubroutineType(types: !11919)
!11919 = !{!103, !1841, !925, !217}
!11920 = !DILocalVariable(name: "thread", arg: 1, scope: !11917, file: !1838, line: 248, type: !1841)
!11921 = !DILocation(line: 248, column: 39, scope: !11917)
!11922 = !DILocalVariable(name: "buf", arg: 2, scope: !11917, file: !1838, line: 248, type: !925)
!11923 = !DILocation(line: 248, column: 53, scope: !11917)
!11924 = !DILocalVariable(name: "size", arg: 3, scope: !11917, file: !1838, line: 248, type: !217)
!11925 = !DILocation(line: 248, column: 65, scope: !11917)
!11926 = !DILocation(line: 254, column: 2, scope: !11917)
!11927 = !DILocation(line: 255, column: 2, scope: !11917)
!11928 = !DILocation(line: 256, column: 2, scope: !11917)
!11929 = !DILocation(line: 257, column: 2, scope: !11917)
!11930 = !DILocalVariable(name: "thread_id", arg: 1, scope: !1837, file: !1838, line: 271, type: !1841)
!11931 = !DILocation(line: 271, column: 40, scope: !1837)
!11932 = !DILocalVariable(name: "buf", arg: 2, scope: !1837, file: !1838, line: 271, type: !925)
!11933 = !DILocation(line: 271, column: 57, scope: !1837)
!11934 = !DILocalVariable(name: "buf_size", arg: 3, scope: !1837, file: !1838, line: 271, type: !217)
!11935 = !DILocation(line: 271, column: 69, scope: !1837)
!11936 = !DILocalVariable(name: "off", scope: !1837, file: !1838, line: 273, type: !217)
!11937 = !DILocation(line: 273, column: 14, scope: !1837)
!11938 = !DILocalVariable(name: "bit", scope: !1837, file: !1838, line: 274, type: !156)
!11939 = !DILocation(line: 274, column: 14, scope: !1837)
!11940 = !DILocalVariable(name: "thread_state", scope: !1837, file: !1838, line: 275, type: !156)
!11941 = !DILocation(line: 275, column: 14, scope: !1837)
!11942 = !DILocation(line: 275, column: 29, scope: !1837)
!11943 = !DILocation(line: 275, column: 40, scope: !1837)
!11944 = !DILocation(line: 275, column: 45, scope: !1837)
!11945 = !DILocation(line: 281, column: 7, scope: !11946)
!11946 = distinct !DILexicalBlock(scope: !1837, file: !1838, line: 281, column: 6)
!11947 = !DILocation(line: 281, column: 11, scope: !11946)
!11948 = !DILocation(line: 281, column: 20, scope: !11946)
!11949 = !DILocation(line: 281, column: 24, scope: !11946)
!11950 = !DILocation(line: 281, column: 33, scope: !11946)
!11951 = !DILocation(line: 281, column: 6, scope: !1837)
!11952 = !DILocation(line: 282, column: 3, scope: !11953)
!11953 = distinct !DILexicalBlock(scope: !11946, file: !1838, line: 281, column: 40)
!11954 = !DILocation(line: 285, column: 10, scope: !1837)
!11955 = !DILocalVariable(name: "index", scope: !11956, file: !1838, line: 293, type: !156)
!11956 = distinct !DILexicalBlock(scope: !1837, file: !1838, line: 293, column: 2)
!11957 = !DILocation(line: 293, column: 15, scope: !11956)
!11958 = !DILocation(line: 293, column: 7, scope: !11956)
!11959 = !DILocation(line: 293, column: 26, scope: !11960)
!11960 = distinct !DILexicalBlock(scope: !11956, file: !1838, line: 293, column: 2)
!11961 = !DILocation(line: 293, column: 39, scope: !11960)
!11962 = !DILocation(line: 293, column: 2, scope: !11956)
!11963 = !DILocation(line: 294, column: 9, scope: !11964)
!11964 = distinct !DILexicalBlock(scope: !11960, file: !1838, line: 293, column: 54)
!11965 = !DILocation(line: 294, column: 7, scope: !11964)
!11966 = !DILocation(line: 295, column: 8, scope: !11967)
!11967 = distinct !DILexicalBlock(scope: !11964, file: !1838, line: 295, column: 7)
!11968 = !DILocation(line: 295, column: 23, scope: !11967)
!11969 = !DILocation(line: 295, column: 21, scope: !11967)
!11970 = !DILocation(line: 295, column: 28, scope: !11967)
!11971 = !DILocation(line: 295, column: 7, scope: !11964)
!11972 = !DILocation(line: 296, column: 4, scope: !11973)
!11973 = distinct !DILexicalBlock(scope: !11967, file: !1838, line: 295, column: 34)
!11974 = !DILocation(line: 299, column: 21, scope: !11964)
!11975 = !DILocation(line: 299, column: 27, scope: !11964)
!11976 = !DILocation(line: 299, column: 25, scope: !11964)
!11977 = !DILocation(line: 299, column: 32, scope: !11964)
!11978 = !DILocation(line: 299, column: 43, scope: !11964)
!11979 = !DILocation(line: 299, column: 41, scope: !11964)
!11980 = !DILocation(line: 300, column: 18, scope: !11964)
!11981 = !DILocation(line: 300, column: 7, scope: !11964)
!11982 = !DILocation(line: 300, column: 36, scope: !11964)
!11983 = !DILocation(line: 300, column: 26, scope: !11964)
!11984 = !DILocation(line: 299, column: 10, scope: !11964)
!11985 = !DILocation(line: 299, column: 7, scope: !11964)
!11986 = !DILocation(line: 302, column: 20, scope: !11964)
!11987 = !DILocation(line: 302, column: 19, scope: !11964)
!11988 = !DILocation(line: 302, column: 16, scope: !11964)
!11989 = !DILocation(line: 304, column: 7, scope: !11990)
!11990 = distinct !DILexicalBlock(scope: !11964, file: !1838, line: 304, column: 7)
!11991 = !DILocation(line: 304, column: 20, scope: !11990)
!11992 = !DILocation(line: 304, column: 7, scope: !11964)
!11993 = !DILocation(line: 305, column: 22, scope: !11994)
!11994 = distinct !DILexicalBlock(scope: !11990, file: !1838, line: 304, column: 26)
!11995 = !DILocation(line: 305, column: 28, scope: !11994)
!11996 = !DILocation(line: 305, column: 26, scope: !11994)
!11997 = !DILocation(line: 305, column: 33, scope: !11994)
!11998 = !DILocation(line: 305, column: 44, scope: !11994)
!11999 = !DILocation(line: 305, column: 42, scope: !11994)
!12000 = !DILocation(line: 305, column: 11, scope: !11994)
!12001 = !DILocation(line: 305, column: 8, scope: !11994)
!12002 = !DILocation(line: 306, column: 3, scope: !11994)
!12003 = !DILocation(line: 307, column: 2, scope: !11964)
!12004 = !DILocation(line: 293, column: 50, scope: !11960)
!12005 = !DILocation(line: 293, column: 2, scope: !11960)
!12006 = distinct !{!12006, !11962, !12007}
!12007 = !DILocation(line: 307, column: 2, scope: !11956)
!12008 = !DILocation(line: 309, column: 2, scope: !1837)
!12009 = !DILocation(line: 309, column: 6, scope: !1837)
!12010 = !DILocation(line: 309, column: 11, scope: !1837)
!12011 = !DILocation(line: 311, column: 23, scope: !1837)
!12012 = !DILocation(line: 311, column: 2, scope: !1837)
!12013 = !DILocation(line: 312, column: 1, scope: !1837)
!12014 = distinct !DISubprogram(name: "copy_bytes", scope: !1838, file: !1838, line: 261, type: !12015, scopeLine: 262, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1936, retainedNodes: !223)
!12015 = !DISubroutineType(types: !12016)
!12016 = !{!217, !925, !217, !256, !217}
!12017 = !DILocalVariable(name: "dest", arg: 1, scope: !12014, file: !1838, line: 261, type: !925)
!12018 = !DILocation(line: 261, column: 32, scope: !12014)
!12019 = !DILocalVariable(name: "dest_size", arg: 2, scope: !12014, file: !1838, line: 261, type: !217)
!12020 = !DILocation(line: 261, column: 45, scope: !12014)
!12021 = !DILocalVariable(name: "src", arg: 3, scope: !12014, file: !1838, line: 261, type: !256)
!12022 = !DILocation(line: 261, column: 68, scope: !12014)
!12023 = !DILocalVariable(name: "src_size", arg: 4, scope: !12014, file: !1838, line: 261, type: !217)
!12024 = !DILocation(line: 261, column: 80, scope: !12014)
!12025 = !DILocalVariable(name: "bytes_to_copy", scope: !12014, file: !1838, line: 263, type: !217)
!12026 = !DILocation(line: 263, column: 10, scope: !12014)
!12027 = !DILocation(line: 265, column: 18, scope: !12014)
!12028 = !DILocation(line: 265, column: 16, scope: !12014)
!12029 = !DILocation(line: 266, column: 9, scope: !12014)
!12030 = !DILocation(line: 266, column: 15, scope: !12014)
!12031 = !DILocation(line: 266, column: 20, scope: !12014)
!12032 = !DILocation(line: 266, column: 2, scope: !12014)
!12033 = !DILocation(line: 268, column: 9, scope: !12014)
!12034 = !DILocation(line: 268, column: 2, scope: !12014)
!12035 = distinct !DISubprogram(name: "z_impl_k_thread_start", scope: !1838, file: !1838, line: 383, type: !12036, scopeLine: 384, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1936, retainedNodes: !223)
!12036 = !DISubroutineType(types: !12037)
!12037 = !{null, !1842}
!12038 = !DILocalVariable(name: "thread", arg: 1, scope: !12035, file: !1838, line: 383, type: !1842)
!12039 = !DILocation(line: 383, column: 45, scope: !12035)
!12040 = !DILocation(line: 385, column: 2, scope: !12035)
!12041 = !DILocation(line: 385, column: 2, scope: !12042)
!12042 = distinct !DILexicalBlock(scope: !12035, file: !1838, line: 385, column: 2)
!12043 = !DILocation(line: 387, column: 16, scope: !12035)
!12044 = !DILocation(line: 387, column: 2, scope: !12035)
!12045 = !DILocation(line: 388, column: 1, scope: !12035)
!12046 = distinct !DISubprogram(name: "z_setup_new_thread", scope: !1838, file: !1838, line: 528, type: !12047, scopeLine: 533, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1936, retainedNodes: !223)
!12047 = !DISubroutineType(types: !12048)
!12048 = !{!925, !1842, !12049, !217, !240, !102, !102, !102, !103, !173, !256}
!12049 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12050, size: 32)
!12050 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !232, line: 44, baseType: !12051)
!12051 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !234, line: 47, size: 8, elements: !12052)
!12052 = !{!12053}
!12053 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !12051, file: !234, line: 48, baseType: !237, size: 8)
!12054 = !DILocalVariable(name: "new_thread", arg: 1, scope: !12046, file: !1838, line: 528, type: !1842)
!12055 = !DILocation(line: 528, column: 43, scope: !12046)
!12056 = !DILocalVariable(name: "stack", arg: 2, scope: !12046, file: !1838, line: 529, type: !12049)
!12057 = !DILocation(line: 529, column: 23, scope: !12046)
!12058 = !DILocalVariable(name: "stack_size", arg: 3, scope: !12046, file: !1838, line: 529, type: !217)
!12059 = !DILocation(line: 529, column: 37, scope: !12046)
!12060 = !DILocalVariable(name: "entry", arg: 4, scope: !12046, file: !1838, line: 530, type: !240)
!12061 = !DILocation(line: 530, column: 22, scope: !12046)
!12062 = !DILocalVariable(name: "p1", arg: 5, scope: !12046, file: !1838, line: 531, type: !102)
!12063 = !DILocation(line: 531, column: 11, scope: !12046)
!12064 = !DILocalVariable(name: "p2", arg: 6, scope: !12046, file: !1838, line: 531, type: !102)
!12065 = !DILocation(line: 531, column: 21, scope: !12046)
!12066 = !DILocalVariable(name: "p3", arg: 7, scope: !12046, file: !1838, line: 531, type: !102)
!12067 = !DILocation(line: 531, column: 31, scope: !12046)
!12068 = !DILocalVariable(name: "prio", arg: 8, scope: !12046, file: !1838, line: 532, type: !103)
!12069 = !DILocation(line: 532, column: 9, scope: !12046)
!12070 = !DILocalVariable(name: "options", arg: 9, scope: !12046, file: !1838, line: 532, type: !173)
!12071 = !DILocation(line: 532, column: 24, scope: !12046)
!12072 = !DILocalVariable(name: "name", arg: 10, scope: !12046, file: !1838, line: 532, type: !256)
!12073 = !DILocation(line: 532, column: 45, scope: !12046)
!12074 = !DILocalVariable(name: "stack_ptr", scope: !12046, file: !1838, line: 534, type: !925)
!12075 = !DILocation(line: 534, column: 8, scope: !12046)
!12076 = !DILocation(line: 536, column: 2, scope: !12046)
!12077 = !DILocation(line: 536, column: 2, scope: !12078)
!12078 = distinct !DILexicalBlock(scope: !12046, file: !1838, line: 536, column: 2)
!12079 = !DILocation(line: 550, column: 16, scope: !12046)
!12080 = !DILocation(line: 550, column: 28, scope: !12046)
!12081 = !DILocation(line: 550, column: 2, scope: !12046)
!12082 = !DILocation(line: 553, column: 22, scope: !12046)
!12083 = !DILocation(line: 553, column: 34, scope: !12046)
!12084 = !DILocation(line: 553, column: 40, scope: !12046)
!12085 = !DILocation(line: 553, column: 64, scope: !12046)
!12086 = !DILocation(line: 553, column: 2, scope: !12046)
!12087 = !DILocation(line: 554, column: 33, scope: !12046)
!12088 = !DILocation(line: 554, column: 45, scope: !12046)
!12089 = !DILocation(line: 554, column: 52, scope: !12046)
!12090 = !DILocation(line: 554, column: 14, scope: !12046)
!12091 = !DILocation(line: 554, column: 12, scope: !12046)
!12092 = !DILocation(line: 564, column: 18, scope: !12046)
!12093 = !DILocation(line: 564, column: 30, scope: !12046)
!12094 = !DILocation(line: 564, column: 37, scope: !12046)
!12095 = !DILocation(line: 564, column: 48, scope: !12046)
!12096 = !DILocation(line: 564, column: 55, scope: !12046)
!12097 = !DILocation(line: 564, column: 59, scope: !12046)
!12098 = !DILocation(line: 564, column: 63, scope: !12046)
!12099 = !DILocation(line: 564, column: 2, scope: !12046)
!12100 = !DILocation(line: 567, column: 2, scope: !12046)
!12101 = !DILocation(line: 567, column: 14, scope: !12046)
!12102 = !DILocation(line: 567, column: 24, scope: !12046)
!12103 = !DILocation(line: 612, column: 7, scope: !12104)
!12104 = distinct !DILexicalBlock(scope: !12046, file: !1838, line: 612, column: 6)
!12105 = !DILocation(line: 612, column: 6, scope: !12046)
!12106 = !DILocation(line: 613, column: 3, scope: !12107)
!12107 = distinct !DILexicalBlock(scope: !12104, file: !1838, line: 612, column: 17)
!12108 = !DILocation(line: 613, column: 15, scope: !12107)
!12109 = !DILocation(line: 613, column: 29, scope: !12107)
!12110 = !DILocation(line: 614, column: 10, scope: !12107)
!12111 = !DILocation(line: 614, column: 3, scope: !12107)
!12112 = !DILocation(line: 627, column: 30, scope: !12046)
!12113 = !DILocation(line: 627, column: 40, scope: !12046)
!12114 = !DILocation(line: 627, column: 2, scope: !12046)
!12115 = !DILocation(line: 627, column: 14, scope: !12046)
!12116 = !DILocation(line: 627, column: 28, scope: !12046)
!12117 = !DILocation(line: 635, column: 2, scope: !12046)
!12118 = !DILocation(line: 635, column: 2, scope: !12119)
!12119 = distinct !DILexicalBlock(scope: !12046, file: !1838, line: 635, column: 2)
!12120 = !DILocation(line: 637, column: 9, scope: !12046)
!12121 = !DILocation(line: 637, column: 2, scope: !12046)
!12122 = !DILocation(line: 638, column: 1, scope: !12046)
!12123 = distinct !DISubprogram(name: "z_waitq_init", scope: !12124, file: !12124, line: 47, type: !12125, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1936, retainedNodes: !223)
!12124 = !DIFile(filename: "zephyr/include/zephyr/wait_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12125 = !DISubroutineType(types: !12126)
!12126 = !{null, !1873}
!12127 = !DILocalVariable(name: "w", arg: 1, scope: !12123, file: !12124, line: 47, type: !1873)
!12128 = !DILocation(line: 47, column: 44, scope: !12123)
!12129 = !DILocation(line: 49, column: 18, scope: !12123)
!12130 = !DILocation(line: 49, column: 21, scope: !12123)
!12131 = !DILocation(line: 49, column: 2, scope: !12123)
!12132 = !DILocation(line: 50, column: 1, scope: !12123)
!12133 = distinct !DISubprogram(name: "z_init_thread_base", scope: !1838, file: !1838, line: 791, type: !12134, scopeLine: 793, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1936, retainedNodes: !223)
!12134 = !DISubroutineType(types: !12135)
!12135 = !{null, !12136, !103, !173, !32}
!12136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1846, size: 32)
!12137 = !DILocalVariable(name: "thread_base", arg: 1, scope: !12133, file: !1838, line: 791, type: !12136)
!12138 = !DILocation(line: 791, column: 46, scope: !12133)
!12139 = !DILocalVariable(name: "priority", arg: 2, scope: !12133, file: !1838, line: 791, type: !103)
!12140 = !DILocation(line: 791, column: 63, scope: !12133)
!12141 = !DILocalVariable(name: "initial_state", arg: 3, scope: !12133, file: !1838, line: 792, type: !173)
!12142 = !DILocation(line: 792, column: 19, scope: !12133)
!12143 = !DILocalVariable(name: "options", arg: 4, scope: !12133, file: !1838, line: 792, type: !32)
!12144 = !DILocation(line: 792, column: 47, scope: !12133)
!12145 = !DILocation(line: 795, column: 2, scope: !12133)
!12146 = !DILocation(line: 795, column: 15, scope: !12133)
!12147 = !DILocation(line: 795, column: 25, scope: !12133)
!12148 = !DILocation(line: 796, column: 39, scope: !12133)
!12149 = !DILocation(line: 796, column: 30, scope: !12133)
!12150 = !DILocation(line: 796, column: 2, scope: !12133)
!12151 = !DILocation(line: 796, column: 15, scope: !12133)
!12152 = !DILocation(line: 796, column: 28, scope: !12133)
!12153 = !DILocation(line: 797, column: 39, scope: !12133)
!12154 = !DILocation(line: 797, column: 30, scope: !12133)
!12155 = !DILocation(line: 797, column: 2, scope: !12133)
!12156 = !DILocation(line: 797, column: 15, scope: !12133)
!12157 = !DILocation(line: 797, column: 28, scope: !12133)
!12158 = !DILocation(line: 799, column: 22, scope: !12133)
!12159 = !DILocation(line: 799, column: 2, scope: !12133)
!12160 = !DILocation(line: 799, column: 15, scope: !12133)
!12161 = !DILocation(line: 799, column: 20, scope: !12133)
!12162 = !DILocation(line: 801, column: 2, scope: !12133)
!12163 = !DILocation(line: 801, column: 15, scope: !12133)
!12164 = !DILocation(line: 801, column: 28, scope: !12133)
!12165 = !DILocation(line: 814, column: 24, scope: !12133)
!12166 = !DILocation(line: 814, column: 2, scope: !12133)
!12167 = !DILocation(line: 815, column: 1, scope: !12133)
!12168 = distinct !DISubprogram(name: "setup_thread_stack", scope: !1838, file: !1838, line: 449, type: !12169, scopeLine: 451, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1936, retainedNodes: !223)
!12169 = !DISubroutineType(types: !12170)
!12170 = !{!925, !1842, !12049, !217}
!12171 = !DILocalVariable(name: "new_thread", arg: 1, scope: !12168, file: !1838, line: 449, type: !1842)
!12172 = !DILocation(line: 449, column: 50, scope: !12168)
!12173 = !DILocalVariable(name: "stack", arg: 2, scope: !12168, file: !1838, line: 450, type: !12049)
!12174 = !DILocation(line: 450, column: 23, scope: !12168)
!12175 = !DILocalVariable(name: "stack_size", arg: 3, scope: !12168, file: !1838, line: 450, type: !217)
!12176 = !DILocation(line: 450, column: 37, scope: !12168)
!12177 = !DILocalVariable(name: "stack_obj_size", scope: !12168, file: !1838, line: 452, type: !217)
!12178 = !DILocation(line: 452, column: 9, scope: !12168)
!12179 = !DILocalVariable(name: "stack_buf_size", scope: !12168, file: !1838, line: 452, type: !217)
!12180 = !DILocation(line: 452, column: 25, scope: !12168)
!12181 = !DILocalVariable(name: "stack_ptr", scope: !12168, file: !1838, line: 453, type: !925)
!12182 = !DILocation(line: 453, column: 8, scope: !12168)
!12183 = !DILocalVariable(name: "stack_buf_start", scope: !12168, file: !1838, line: 453, type: !925)
!12184 = !DILocation(line: 453, column: 20, scope: !12168)
!12185 = !DILocalVariable(name: "delta", scope: !12168, file: !1838, line: 454, type: !217)
!12186 = !DILocation(line: 454, column: 9, scope: !12168)
!12187 = !DILocation(line: 465, column: 20, scope: !12188)
!12188 = distinct !DILexicalBlock(scope: !12168, file: !1838, line: 463, column: 2)
!12189 = !DILocation(line: 465, column: 18, scope: !12188)
!12190 = !DILocation(line: 466, column: 43, scope: !12188)
!12191 = !DILocation(line: 466, column: 21, scope: !12188)
!12192 = !DILocation(line: 466, column: 19, scope: !12188)
!12193 = !DILocation(line: 467, column: 20, scope: !12188)
!12194 = !DILocation(line: 467, column: 35, scope: !12188)
!12195 = !DILocation(line: 467, column: 18, scope: !12188)
!12196 = !DILocation(line: 473, column: 22, scope: !12168)
!12197 = !DILocation(line: 473, column: 14, scope: !12168)
!12198 = !DILocation(line: 473, column: 30, scope: !12168)
!12199 = !DILocation(line: 473, column: 28, scope: !12168)
!12200 = !DILocation(line: 473, column: 12, scope: !12168)
!12201 = !DILocation(line: 475, column: 2, scope: !12168)
!12202 = !DILocation(line: 475, column: 2, scope: !12203)
!12203 = distinct !DILexicalBlock(scope: !12204, file: !1838, line: 475, column: 2)
!12204 = distinct !DILexicalBlock(scope: !12205, file: !1838, line: 475, column: 2)
!12205 = distinct !DILexicalBlock(scope: !12168, file: !1838, line: 475, column: 2)
!12206 = !DILocation(line: 505, column: 10, scope: !12168)
!12207 = !DILocation(line: 505, column: 8, scope: !12168)
!12208 = !DILocation(line: 518, column: 15, scope: !12168)
!12209 = !DILocation(line: 518, column: 12, scope: !12168)
!12210 = !DILocation(line: 520, column: 9, scope: !12168)
!12211 = !DILocation(line: 520, column: 2, scope: !12168)
!12212 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !234, file: !234, line: 331, type: !12213, scopeLine: 332, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1936, retainedNodes: !223)
!12213 = !DISubroutineType(types: !12214)
!12214 = !{!925, !12049}
!12215 = !DILocalVariable(name: "sym", arg: 1, scope: !12212, file: !234, line: 331, type: !12049)
!12216 = !DILocation(line: 331, column: 61, scope: !12212)
!12217 = !DILocation(line: 333, column: 17, scope: !12212)
!12218 = !DILocation(line: 333, column: 9, scope: !12212)
!12219 = !DILocation(line: 333, column: 21, scope: !12212)
!12220 = !DILocation(line: 333, column: 2, scope: !12212)
!12221 = distinct !DISubprogram(name: "z_init_thread_timeout", scope: !12222, file: !12222, line: 40, type: !12223, scopeLine: 41, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1936, retainedNodes: !223)
!12222 = !DIFile(filename: "zephyr/include/zephyr/timeout_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12223 = !DISubroutineType(types: !12224)
!12224 = !{null, !12136}
!12225 = !DILocalVariable(name: "thread_base", arg: 1, scope: !12221, file: !12222, line: 40, type: !12136)
!12226 = !DILocation(line: 40, column: 63, scope: !12221)
!12227 = !DILocation(line: 42, column: 18, scope: !12221)
!12228 = !DILocation(line: 42, column: 31, scope: !12221)
!12229 = !DILocation(line: 42, column: 2, scope: !12221)
!12230 = !DILocation(line: 43, column: 1, scope: !12221)
!12231 = distinct !DISubprogram(name: "z_init_timeout", scope: !12222, file: !12222, line: 25, type: !1899, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1936, retainedNodes: !223)
!12232 = !DILocalVariable(name: "to", arg: 1, scope: !12231, file: !12222, line: 25, type: !1901)
!12233 = !DILocation(line: 25, column: 52, scope: !12231)
!12234 = !DILocation(line: 27, column: 18, scope: !12231)
!12235 = !DILocation(line: 27, column: 22, scope: !12231)
!12236 = !DILocation(line: 27, column: 2, scope: !12231)
!12237 = !DILocation(line: 28, column: 1, scope: !12231)
!12238 = distinct !DISubprogram(name: "sys_dnode_init", scope: !124, file: !124, line: 211, type: !12239, scopeLine: 212, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1936, retainedNodes: !223)
!12239 = !DISubroutineType(types: !12240)
!12240 = !{null, !1939}
!12241 = !DILocalVariable(name: "node", arg: 1, scope: !12238, file: !124, line: 211, type: !1939)
!12242 = !DILocation(line: 211, column: 48, scope: !12238)
!12243 = !DILocation(line: 213, column: 2, scope: !12238)
!12244 = !DILocation(line: 213, column: 8, scope: !12238)
!12245 = !DILocation(line: 213, column: 13, scope: !12238)
!12246 = !DILocation(line: 214, column: 2, scope: !12238)
!12247 = !DILocation(line: 214, column: 8, scope: !12238)
!12248 = !DILocation(line: 214, column: 13, scope: !12238)
!12249 = !DILocation(line: 215, column: 1, scope: !12238)
!12250 = distinct !DISubprogram(name: "sys_dlist_init", scope: !124, file: !124, line: 197, type: !12251, scopeLine: 198, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1936, retainedNodes: !223)
!12251 = !DISubroutineType(types: !12252)
!12252 = !{null, !12253}
!12253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1878, size: 32)
!12254 = !DILocalVariable(name: "list", arg: 1, scope: !12250, file: !124, line: 197, type: !12253)
!12255 = !DILocation(line: 197, column: 48, scope: !12250)
!12256 = !DILocation(line: 199, column: 30, scope: !12250)
!12257 = !DILocation(line: 199, column: 2, scope: !12250)
!12258 = !DILocation(line: 199, column: 8, scope: !12250)
!12259 = !DILocation(line: 199, column: 13, scope: !12250)
!12260 = !DILocation(line: 200, column: 30, scope: !12250)
!12261 = !DILocation(line: 200, column: 2, scope: !12250)
!12262 = !DILocation(line: 200, column: 8, scope: !12250)
!12263 = !DILocation(line: 200, column: 13, scope: !12250)
!12264 = !DILocation(line: 201, column: 1, scope: !12250)
!12265 = distinct !DISubprogram(name: "z_impl_k_thread_create", scope: !1838, file: !1838, line: 641, type: !12266, scopeLine: 646, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1936, retainedNodes: !223)
!12266 = !DISubroutineType(types: !12267)
!12267 = !{!1841, !1842, !12049, !217, !240, !102, !102, !102, !103, !173, !12268}
!12268 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1443, line: 67, baseType: !12269)
!12269 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1443, line: 65, size: 64, elements: !12270)
!12270 = !{!12271}
!12271 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !12269, file: !1443, line: 66, baseType: !1442, size: 64)
!12272 = !DILocalVariable(name: "new_thread", arg: 1, scope: !12265, file: !1838, line: 641, type: !1842)
!12273 = !DILocation(line: 641, column: 49, scope: !12265)
!12274 = !DILocalVariable(name: "stack", arg: 2, scope: !12265, file: !1838, line: 642, type: !12049)
!12275 = !DILocation(line: 642, column: 28, scope: !12265)
!12276 = !DILocalVariable(name: "stack_size", arg: 3, scope: !12265, file: !1838, line: 643, type: !217)
!12277 = !DILocation(line: 643, column: 17, scope: !12265)
!12278 = !DILocalVariable(name: "entry", arg: 4, scope: !12265, file: !1838, line: 643, type: !240)
!12279 = !DILocation(line: 643, column: 46, scope: !12265)
!12280 = !DILocalVariable(name: "p1", arg: 5, scope: !12265, file: !1838, line: 644, type: !102)
!12281 = !DILocation(line: 644, column: 16, scope: !12265)
!12282 = !DILocalVariable(name: "p2", arg: 6, scope: !12265, file: !1838, line: 644, type: !102)
!12283 = !DILocation(line: 644, column: 26, scope: !12265)
!12284 = !DILocalVariable(name: "p3", arg: 7, scope: !12265, file: !1838, line: 644, type: !102)
!12285 = !DILocation(line: 644, column: 36, scope: !12265)
!12286 = !DILocalVariable(name: "prio", arg: 8, scope: !12265, file: !1838, line: 645, type: !103)
!12287 = !DILocation(line: 645, column: 14, scope: !12265)
!12288 = !DILocalVariable(name: "options", arg: 9, scope: !12265, file: !1838, line: 645, type: !173)
!12289 = !DILocation(line: 645, column: 29, scope: !12265)
!12290 = !DILocalVariable(name: "delay", arg: 10, scope: !12265, file: !1838, line: 645, type: !12268)
!12291 = !DILocation(line: 645, column: 50, scope: !12265)
!12292 = !DILocation(line: 649, column: 21, scope: !12265)
!12293 = !DILocation(line: 649, column: 33, scope: !12265)
!12294 = !DILocation(line: 649, column: 40, scope: !12265)
!12295 = !DILocation(line: 649, column: 52, scope: !12265)
!12296 = !DILocation(line: 649, column: 59, scope: !12265)
!12297 = !DILocation(line: 649, column: 63, scope: !12265)
!12298 = !DILocation(line: 649, column: 67, scope: !12265)
!12299 = !DILocation(line: 650, column: 6, scope: !12265)
!12300 = !DILocation(line: 650, column: 12, scope: !12265)
!12301 = !DILocation(line: 649, column: 2, scope: !12265)
!12302 = !DILocation(line: 652, column: 7, scope: !12303)
!12303 = distinct !DILexicalBlock(scope: !12265, file: !1838, line: 652, column: 6)
!12304 = !DILocation(line: 652, column: 6, scope: !12265)
!12305 = !DILocation(line: 653, column: 23, scope: !12306)
!12306 = distinct !DILexicalBlock(scope: !12303, file: !1838, line: 652, column: 39)
!12307 = !DILocation(line: 653, column: 3, scope: !12306)
!12308 = !DILocation(line: 654, column: 2, scope: !12306)
!12309 = !DILocation(line: 656, column: 9, scope: !12265)
!12310 = !DILocation(line: 656, column: 2, scope: !12265)
!12311 = distinct !DISubprogram(name: "schedule_new_thread", scope: !1838, file: !1838, line: 401, type: !12312, scopeLine: 402, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1936, retainedNodes: !223)
!12312 = !DISubroutineType(types: !12313)
!12313 = !{null, !1842, !12268}
!12314 = !DILocalVariable(name: "thread", arg: 1, scope: !12311, file: !1838, line: 401, type: !1842)
!12315 = !DILocation(line: 401, column: 50, scope: !12311)
!12316 = !DILocalVariable(name: "delay", arg: 2, scope: !12311, file: !1838, line: 401, type: !12268)
!12317 = !DILocation(line: 401, column: 70, scope: !12311)
!12318 = !DILocation(line: 404, column: 6, scope: !12319)
!12319 = distinct !DILexicalBlock(scope: !12311, file: !1838, line: 404, column: 6)
!12320 = !DILocation(line: 404, column: 6, scope: !12311)
!12321 = !DILocation(line: 405, column: 18, scope: !12322)
!12322 = distinct !DILexicalBlock(scope: !12319, file: !1838, line: 404, column: 38)
!12323 = !DILocation(line: 405, column: 3, scope: !12322)
!12324 = !DILocation(line: 406, column: 2, scope: !12322)
!12325 = !DILocation(line: 407, column: 24, scope: !12326)
!12326 = distinct !DILexicalBlock(scope: !12319, file: !1838, line: 406, column: 9)
!12327 = !DILocation(line: 407, column: 3, scope: !12326)
!12328 = !DILocation(line: 413, column: 1, scope: !12311)
!12329 = distinct !DISubprogram(name: "k_thread_start", scope: !2997, file: !2997, line: 205, type: !12330, scopeLine: 206, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1936, retainedNodes: !223)
!12330 = !DISubroutineType(types: !12331)
!12331 = !{null, !1841}
!12332 = !DILocalVariable(name: "thread", arg: 1, scope: !12329, file: !2997, line: 205, type: !1841)
!12333 = !DILocation(line: 205, column: 43, scope: !12329)
!12334 = !DILocation(line: 214, column: 2, scope: !12329)
!12335 = !DILocation(line: 214, column: 2, scope: !12336)
!12336 = distinct !DILexicalBlock(scope: !12329, file: !2997, line: 214, column: 2)
!12337 = !{i64 2151062239}
!12338 = !DILocation(line: 215, column: 24, scope: !12329)
!12339 = !DILocation(line: 215, column: 2, scope: !12329)
!12340 = !DILocation(line: 216, column: 1, scope: !12329)
!12341 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !12222, file: !12222, line: 47, type: !12312, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1936, retainedNodes: !223)
!12342 = !DILocalVariable(name: "thread", arg: 1, scope: !12341, file: !12222, line: 47, type: !1842)
!12343 = !DILocation(line: 47, column: 58, scope: !12341)
!12344 = !DILocalVariable(name: "ticks", arg: 2, scope: !12341, file: !12222, line: 47, type: !12268)
!12345 = !DILocation(line: 47, column: 78, scope: !12341)
!12346 = !DILocation(line: 49, column: 17, scope: !12341)
!12347 = !DILocation(line: 49, column: 25, scope: !12341)
!12348 = !DILocation(line: 49, column: 30, scope: !12341)
!12349 = !DILocation(line: 49, column: 2, scope: !12341)
!12350 = !DILocation(line: 50, column: 1, scope: !12341)
!12351 = distinct !DISubprogram(name: "z_init_static_threads", scope: !1838, file: !1838, line: 748, type: !253, scopeLine: 749, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1936, retainedNodes: !223)
!12352 = !DILocalVariable(name: "thread_data", scope: !12353, file: !1838, line: 750, type: !12354)
!12353 = distinct !DILexicalBlock(scope: !12351, file: !1838, line: 750, column: 2)
!12354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12355, size: 32)
!12355 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !109, line: 620, size: 384, elements: !12356)
!12356 = !{!12357, !12358, !12359, !12360, !12361, !12362, !12363, !12364, !12365, !12366, !12367, !12368}
!12357 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !12355, file: !109, line: 621, baseType: !1842, size: 32)
!12358 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !12355, file: !109, line: 622, baseType: !12049, size: 32, offset: 32)
!12359 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !12355, file: !109, line: 623, baseType: !32, size: 32, offset: 64)
!12360 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !12355, file: !109, line: 624, baseType: !240, size: 32, offset: 96)
!12361 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !12355, file: !109, line: 625, baseType: !102, size: 32, offset: 128)
!12362 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !12355, file: !109, line: 626, baseType: !102, size: 32, offset: 160)
!12363 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !12355, file: !109, line: 627, baseType: !102, size: 32, offset: 192)
!12364 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !12355, file: !109, line: 628, baseType: !103, size: 32, offset: 224)
!12365 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !12355, file: !109, line: 629, baseType: !173, size: 32, offset: 256)
!12366 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !12355, file: !109, line: 630, baseType: !250, size: 32, offset: 288)
!12367 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !12355, file: !109, line: 631, baseType: !252, size: 32, offset: 320)
!12368 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !12355, file: !109, line: 632, baseType: !256, size: 32, offset: 352)
!12369 = !DILocation(line: 750, column: 2, scope: !12353)
!12370 = !DILocation(line: 750, column: 2, scope: !12371)
!12371 = distinct !DILexicalBlock(scope: !12372, file: !1838, line: 750, column: 2)
!12372 = distinct !DILexicalBlock(scope: !12353, file: !1838, line: 750, column: 2)
!12373 = !DILocation(line: 750, column: 2, scope: !12374)
!12374 = distinct !DILexicalBlock(scope: !12371, file: !1838, line: 750, column: 2)
!12375 = !DILocation(line: 752, column: 4, scope: !12376)
!12376 = distinct !DILexicalBlock(scope: !12372, file: !1838, line: 750, column: 38)
!12377 = !DILocation(line: 752, column: 17, scope: !12376)
!12378 = !DILocation(line: 753, column: 4, scope: !12376)
!12379 = !DILocation(line: 753, column: 17, scope: !12376)
!12380 = !DILocation(line: 754, column: 4, scope: !12376)
!12381 = !DILocation(line: 754, column: 17, scope: !12376)
!12382 = !DILocation(line: 755, column: 4, scope: !12376)
!12383 = !DILocation(line: 755, column: 17, scope: !12376)
!12384 = !DILocation(line: 756, column: 4, scope: !12376)
!12385 = !DILocation(line: 756, column: 17, scope: !12376)
!12386 = !DILocation(line: 757, column: 4, scope: !12376)
!12387 = !DILocation(line: 757, column: 17, scope: !12376)
!12388 = !DILocation(line: 758, column: 4, scope: !12376)
!12389 = !DILocation(line: 758, column: 17, scope: !12376)
!12390 = !DILocation(line: 759, column: 4, scope: !12376)
!12391 = !DILocation(line: 759, column: 17, scope: !12376)
!12392 = !DILocation(line: 760, column: 4, scope: !12376)
!12393 = !DILocation(line: 760, column: 17, scope: !12376)
!12394 = !DILocation(line: 761, column: 4, scope: !12376)
!12395 = !DILocation(line: 761, column: 17, scope: !12376)
!12396 = !DILocation(line: 751, column: 3, scope: !12376)
!12397 = !DILocation(line: 763, column: 41, scope: !12376)
!12398 = !DILocation(line: 763, column: 3, scope: !12376)
!12399 = !DILocation(line: 763, column: 16, scope: !12376)
!12400 = !DILocation(line: 763, column: 29, scope: !12376)
!12401 = !DILocation(line: 763, column: 39, scope: !12376)
!12402 = !DILocation(line: 764, column: 2, scope: !12376)
!12403 = !DILocation(line: 750, column: 2, scope: !12372)
!12404 = distinct !{!12404, !12369, !12405}
!12405 = !DILocation(line: 764, column: 2, scope: !12353)
!12406 = !DILocation(line: 780, column: 2, scope: !12351)
!12407 = !DILocalVariable(name: "thread_data", scope: !12408, file: !1838, line: 781, type: !12354)
!12408 = distinct !DILexicalBlock(scope: !12351, file: !1838, line: 781, column: 2)
!12409 = !DILocation(line: 781, column: 2, scope: !12408)
!12410 = !DILocation(line: 781, column: 2, scope: !12411)
!12411 = distinct !DILexicalBlock(scope: !12412, file: !1838, line: 781, column: 2)
!12412 = distinct !DILexicalBlock(scope: !12408, file: !1838, line: 781, column: 2)
!12413 = !DILocation(line: 781, column: 2, scope: !12414)
!12414 = distinct !DILexicalBlock(scope: !12411, file: !1838, line: 781, column: 2)
!12415 = !DILocation(line: 782, column: 7, scope: !12416)
!12416 = distinct !DILexicalBlock(scope: !12417, file: !1838, line: 782, column: 7)
!12417 = distinct !DILexicalBlock(scope: !12412, file: !1838, line: 781, column: 38)
!12418 = !DILocation(line: 782, column: 20, scope: !12416)
!12419 = !DILocation(line: 782, column: 31, scope: !12416)
!12420 = !DILocation(line: 782, column: 7, scope: !12417)
!12421 = !DILocation(line: 783, column: 24, scope: !12422)
!12422 = distinct !DILexicalBlock(scope: !12416, file: !1838, line: 782, column: 51)
!12423 = !DILocation(line: 783, column: 37, scope: !12422)
!12424 = !DILocation(line: 784, column: 10, scope: !12422)
!12425 = !DILocation(line: 783, column: 4, scope: !12422)
!12426 = !DILocation(line: 785, column: 3, scope: !12422)
!12427 = !DILocation(line: 786, column: 2, scope: !12417)
!12428 = !DILocation(line: 781, column: 2, scope: !12412)
!12429 = distinct !{!12429, !12409, !12430}
!12430 = !DILocation(line: 786, column: 2, scope: !12408)
!12431 = !DILocation(line: 787, column: 2, scope: !12351)
!12432 = !DILocation(line: 788, column: 1, scope: !12351)
!12433 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !8763, file: !8763, line: 403, type: !12434, scopeLine: 404, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1936, retainedNodes: !223)
!12434 = !DISubroutineType(types: !12435)
!12435 = !{!1940, !1940}
!12436 = !DILocalVariable(name: "t", arg: 1, scope: !12433, file: !8763, line: 403, type: !1940)
!12437 = !DILocation(line: 403, column: 69, scope: !12433)
!12438 = !DILocation(line: 406, column: 17, scope: !12433)
!12439 = !DILocalVariable(name: "t", arg: 1, scope: !12440, file: !8763, line: 102, type: !1940)
!12440 = distinct !DISubprogram(name: "z_tmcvt", scope: !8763, file: !8763, line: 102, type: !12441, scopeLine: 106, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1936, retainedNodes: !223)
!12441 = !DISubroutineType(types: !12442)
!12442 = !{!1940, !1940, !173, !173, !743, !743, !743, !743}
!12443 = !DILocation(line: 102, column: 63, scope: !12440, inlinedAt: !12444)
!12444 = distinct !DILocation(line: 406, column: 9, scope: !12433)
!12445 = !DILocalVariable(name: "from_hz", arg: 2, scope: !12440, file: !8763, line: 102, type: !173)
!12446 = !DILocation(line: 102, column: 75, scope: !12440, inlinedAt: !12444)
!12447 = !DILocalVariable(name: "to_hz", arg: 3, scope: !12440, file: !8763, line: 103, type: !173)
!12448 = !DILocation(line: 103, column: 18, scope: !12440, inlinedAt: !12444)
!12449 = !DILocalVariable(name: "const_hz", arg: 4, scope: !12440, file: !8763, line: 103, type: !743)
!12450 = !DILocation(line: 103, column: 30, scope: !12440, inlinedAt: !12444)
!12451 = !DILocalVariable(name: "result32", arg: 5, scope: !12440, file: !8763, line: 104, type: !743)
!12452 = !DILocation(line: 104, column: 14, scope: !12440, inlinedAt: !12444)
!12453 = !DILocalVariable(name: "round_up", arg: 6, scope: !12440, file: !8763, line: 104, type: !743)
!12454 = !DILocation(line: 104, column: 29, scope: !12440, inlinedAt: !12444)
!12455 = !DILocalVariable(name: "round_off", arg: 7, scope: !12440, file: !8763, line: 105, type: !743)
!12456 = !DILocation(line: 105, column: 14, scope: !12440, inlinedAt: !12444)
!12457 = !DILocalVariable(name: "mul_ratio", scope: !12440, file: !8763, line: 107, type: !743)
!12458 = !DILocation(line: 107, column: 7, scope: !12440, inlinedAt: !12444)
!12459 = !DILocation(line: 107, column: 19, scope: !12440, inlinedAt: !12444)
!12460 = !DILocation(line: 107, column: 28, scope: !12440, inlinedAt: !12444)
!12461 = !DILocation(line: 108, column: 4, scope: !12440, inlinedAt: !12444)
!12462 = !DILocation(line: 108, column: 12, scope: !12440, inlinedAt: !12444)
!12463 = !DILocation(line: 108, column: 10, scope: !12440, inlinedAt: !12444)
!12464 = !DILocation(line: 108, column: 21, scope: !12440, inlinedAt: !12444)
!12465 = !DILocation(line: 108, column: 26, scope: !12440, inlinedAt: !12444)
!12466 = !DILocation(line: 108, column: 34, scope: !12440, inlinedAt: !12444)
!12467 = !DILocation(line: 108, column: 32, scope: !12440, inlinedAt: !12444)
!12468 = !DILocation(line: 108, column: 43, scope: !12440, inlinedAt: !12444)
!12469 = !DILocation(line: 0, scope: !12440, inlinedAt: !12444)
!12470 = !DILocalVariable(name: "div_ratio", scope: !12440, file: !8763, line: 109, type: !743)
!12471 = !DILocation(line: 109, column: 7, scope: !12440, inlinedAt: !12444)
!12472 = !DILocation(line: 109, column: 19, scope: !12440, inlinedAt: !12444)
!12473 = !DILocation(line: 109, column: 28, scope: !12440, inlinedAt: !12444)
!12474 = !DILocation(line: 110, column: 4, scope: !12440, inlinedAt: !12444)
!12475 = !DILocation(line: 110, column: 14, scope: !12440, inlinedAt: !12444)
!12476 = !DILocation(line: 110, column: 12, scope: !12440, inlinedAt: !12444)
!12477 = !DILocation(line: 110, column: 21, scope: !12440, inlinedAt: !12444)
!12478 = !DILocation(line: 110, column: 26, scope: !12440, inlinedAt: !12444)
!12479 = !DILocation(line: 110, column: 36, scope: !12440, inlinedAt: !12444)
!12480 = !DILocation(line: 110, column: 34, scope: !12440, inlinedAt: !12444)
!12481 = !DILocation(line: 110, column: 43, scope: !12440, inlinedAt: !12444)
!12482 = !DILocation(line: 112, column: 6, scope: !12483, inlinedAt: !12444)
!12483 = distinct !DILexicalBlock(scope: !12440, file: !8763, line: 112, column: 6)
!12484 = !DILocation(line: 112, column: 17, scope: !12483, inlinedAt: !12444)
!12485 = !DILocation(line: 112, column: 14, scope: !12483, inlinedAt: !12444)
!12486 = !DILocation(line: 112, column: 6, scope: !12440, inlinedAt: !12444)
!12487 = !DILocation(line: 113, column: 10, scope: !12488, inlinedAt: !12444)
!12488 = distinct !DILexicalBlock(scope: !12483, file: !8763, line: 112, column: 24)
!12489 = !DILocation(line: 113, column: 32, scope: !12488, inlinedAt: !12444)
!12490 = !DILocation(line: 113, column: 22, scope: !12488, inlinedAt: !12444)
!12491 = !DILocation(line: 113, column: 21, scope: !12488, inlinedAt: !12444)
!12492 = !DILocation(line: 113, column: 37, scope: !12488, inlinedAt: !12444)
!12493 = !DILocation(line: 113, column: 3, scope: !12488, inlinedAt: !12444)
!12494 = !DILocalVariable(name: "off", scope: !12440, file: !8763, line: 116, type: !1940)
!12495 = !DILocation(line: 116, column: 11, scope: !12440, inlinedAt: !12444)
!12496 = !DILocation(line: 118, column: 7, scope: !12497, inlinedAt: !12444)
!12497 = distinct !DILexicalBlock(scope: !12440, file: !8763, line: 118, column: 6)
!12498 = !DILocation(line: 118, column: 6, scope: !12440, inlinedAt: !12444)
!12499 = !DILocalVariable(name: "rdivisor", scope: !12500, file: !8763, line: 119, type: !173)
!12500 = distinct !DILexicalBlock(scope: !12497, file: !8763, line: 118, column: 18)
!12501 = !DILocation(line: 119, column: 12, scope: !12500, inlinedAt: !12444)
!12502 = !DILocation(line: 119, column: 23, scope: !12500, inlinedAt: !12444)
!12503 = !DILocation(line: 119, column: 36, scope: !12500, inlinedAt: !12444)
!12504 = !DILocation(line: 119, column: 46, scope: !12500, inlinedAt: !12444)
!12505 = !DILocation(line: 119, column: 44, scope: !12500, inlinedAt: !12444)
!12506 = !DILocation(line: 119, column: 55, scope: !12500, inlinedAt: !12444)
!12507 = !DILocation(line: 121, column: 7, scope: !12508, inlinedAt: !12444)
!12508 = distinct !DILexicalBlock(scope: !12500, file: !8763, line: 121, column: 7)
!12509 = !DILocation(line: 121, column: 7, scope: !12500, inlinedAt: !12444)
!12510 = !DILocation(line: 122, column: 10, scope: !12511, inlinedAt: !12444)
!12511 = distinct !DILexicalBlock(scope: !12508, file: !8763, line: 121, column: 17)
!12512 = !DILocation(line: 122, column: 19, scope: !12511, inlinedAt: !12444)
!12513 = !DILocation(line: 122, column: 8, scope: !12511, inlinedAt: !12444)
!12514 = !DILocation(line: 123, column: 3, scope: !12511, inlinedAt: !12444)
!12515 = !DILocation(line: 124, column: 7, scope: !12516, inlinedAt: !12444)
!12516 = distinct !DILexicalBlock(scope: !12500, file: !8763, line: 124, column: 7)
!12517 = !DILocation(line: 124, column: 7, scope: !12500, inlinedAt: !12444)
!12518 = !DILocation(line: 125, column: 10, scope: !12519, inlinedAt: !12444)
!12519 = distinct !DILexicalBlock(scope: !12516, file: !8763, line: 124, column: 18)
!12520 = !DILocation(line: 125, column: 19, scope: !12519, inlinedAt: !12444)
!12521 = !DILocation(line: 125, column: 8, scope: !12519, inlinedAt: !12444)
!12522 = !DILocation(line: 126, column: 3, scope: !12519, inlinedAt: !12444)
!12523 = !DILocation(line: 127, column: 2, scope: !12500, inlinedAt: !12444)
!12524 = !DILocation(line: 134, column: 6, scope: !12525, inlinedAt: !12444)
!12525 = distinct !DILexicalBlock(scope: !12440, file: !8763, line: 134, column: 6)
!12526 = !DILocation(line: 134, column: 6, scope: !12440, inlinedAt: !12444)
!12527 = !DILocation(line: 135, column: 8, scope: !12528, inlinedAt: !12444)
!12528 = distinct !DILexicalBlock(scope: !12525, file: !8763, line: 134, column: 17)
!12529 = !DILocation(line: 135, column: 5, scope: !12528, inlinedAt: !12444)
!12530 = !DILocation(line: 136, column: 7, scope: !12531, inlinedAt: !12444)
!12531 = distinct !DILexicalBlock(scope: !12528, file: !8763, line: 136, column: 7)
!12532 = !DILocation(line: 136, column: 16, scope: !12531, inlinedAt: !12444)
!12533 = !DILocation(line: 136, column: 20, scope: !12531, inlinedAt: !12444)
!12534 = !DILocation(line: 136, column: 22, scope: !12531, inlinedAt: !12444)
!12535 = !DILocation(line: 136, column: 7, scope: !12528, inlinedAt: !12444)
!12536 = !DILocation(line: 137, column: 22, scope: !12537, inlinedAt: !12444)
!12537 = distinct !DILexicalBlock(scope: !12531, file: !8763, line: 136, column: 36)
!12538 = !DILocation(line: 137, column: 12, scope: !12537, inlinedAt: !12444)
!12539 = !DILocation(line: 137, column: 28, scope: !12537, inlinedAt: !12444)
!12540 = !DILocation(line: 137, column: 38, scope: !12537, inlinedAt: !12444)
!12541 = !DILocation(line: 137, column: 36, scope: !12537, inlinedAt: !12444)
!12542 = !DILocation(line: 137, column: 25, scope: !12537, inlinedAt: !12444)
!12543 = !DILocation(line: 137, column: 11, scope: !12537, inlinedAt: !12444)
!12544 = !DILocation(line: 137, column: 4, scope: !12537, inlinedAt: !12444)
!12545 = !DILocation(line: 139, column: 11, scope: !12546, inlinedAt: !12444)
!12546 = distinct !DILexicalBlock(scope: !12531, file: !8763, line: 138, column: 10)
!12547 = !DILocation(line: 139, column: 26, scope: !12546, inlinedAt: !12444)
!12548 = !DILocation(line: 139, column: 16, scope: !12546, inlinedAt: !12444)
!12549 = !DILocation(line: 139, column: 36, scope: !12546, inlinedAt: !12444)
!12550 = !DILocation(line: 139, column: 34, scope: !12546, inlinedAt: !12444)
!12551 = !DILocation(line: 139, column: 13, scope: !12546, inlinedAt: !12444)
!12552 = !DILocation(line: 139, column: 4, scope: !12546, inlinedAt: !12444)
!12553 = !DILocation(line: 141, column: 13, scope: !12554, inlinedAt: !12444)
!12554 = distinct !DILexicalBlock(scope: !12525, file: !8763, line: 141, column: 13)
!12555 = !DILocation(line: 141, column: 13, scope: !12525, inlinedAt: !12444)
!12556 = !DILocation(line: 142, column: 7, scope: !12557, inlinedAt: !12444)
!12557 = distinct !DILexicalBlock(scope: !12558, file: !8763, line: 142, column: 7)
!12558 = distinct !DILexicalBlock(scope: !12554, file: !8763, line: 141, column: 24)
!12559 = !DILocation(line: 142, column: 7, scope: !12558, inlinedAt: !12444)
!12560 = !DILocation(line: 143, column: 22, scope: !12561, inlinedAt: !12444)
!12561 = distinct !DILexicalBlock(scope: !12557, file: !8763, line: 142, column: 17)
!12562 = !DILocation(line: 143, column: 12, scope: !12561, inlinedAt: !12444)
!12563 = !DILocation(line: 143, column: 28, scope: !12561, inlinedAt: !12444)
!12564 = !DILocation(line: 143, column: 36, scope: !12561, inlinedAt: !12444)
!12565 = !DILocation(line: 143, column: 34, scope: !12561, inlinedAt: !12444)
!12566 = !DILocation(line: 143, column: 25, scope: !12561, inlinedAt: !12444)
!12567 = !DILocation(line: 143, column: 11, scope: !12561, inlinedAt: !12444)
!12568 = !DILocation(line: 143, column: 4, scope: !12561, inlinedAt: !12444)
!12569 = !DILocation(line: 145, column: 11, scope: !12570, inlinedAt: !12444)
!12570 = distinct !DILexicalBlock(scope: !12557, file: !8763, line: 144, column: 10)
!12571 = !DILocation(line: 145, column: 26, scope: !12570, inlinedAt: !12444)
!12572 = !DILocation(line: 145, column: 16, scope: !12570, inlinedAt: !12444)
!12573 = !DILocation(line: 145, column: 34, scope: !12570, inlinedAt: !12444)
!12574 = !DILocation(line: 145, column: 32, scope: !12570, inlinedAt: !12444)
!12575 = !DILocation(line: 145, column: 13, scope: !12570, inlinedAt: !12444)
!12576 = !DILocation(line: 145, column: 4, scope: !12570, inlinedAt: !12444)
!12577 = !DILocation(line: 148, column: 7, scope: !12578, inlinedAt: !12444)
!12578 = distinct !DILexicalBlock(scope: !12579, file: !8763, line: 148, column: 7)
!12579 = distinct !DILexicalBlock(scope: !12554, file: !8763, line: 147, column: 9)
!12580 = !DILocation(line: 148, column: 7, scope: !12579, inlinedAt: !12444)
!12581 = !DILocation(line: 149, column: 23, scope: !12582, inlinedAt: !12444)
!12582 = distinct !DILexicalBlock(scope: !12578, file: !8763, line: 148, column: 17)
!12583 = !DILocation(line: 149, column: 27, scope: !12582, inlinedAt: !12444)
!12584 = !DILocation(line: 149, column: 25, scope: !12582, inlinedAt: !12444)
!12585 = !DILocation(line: 149, column: 35, scope: !12582, inlinedAt: !12444)
!12586 = !DILocation(line: 149, column: 33, scope: !12582, inlinedAt: !12444)
!12587 = !DILocation(line: 149, column: 42, scope: !12582, inlinedAt: !12444)
!12588 = !DILocation(line: 149, column: 40, scope: !12582, inlinedAt: !12444)
!12589 = !DILocation(line: 149, column: 11, scope: !12582, inlinedAt: !12444)
!12590 = !DILocation(line: 149, column: 4, scope: !12582, inlinedAt: !12444)
!12591 = !DILocation(line: 150, column: 14, scope: !12592, inlinedAt: !12444)
!12592 = distinct !DILexicalBlock(scope: !12578, file: !8763, line: 150, column: 14)
!12593 = !DILocation(line: 150, column: 23, scope: !12592, inlinedAt: !12444)
!12594 = !DILocation(line: 150, column: 26, scope: !12592, inlinedAt: !12444)
!12595 = !DILocation(line: 150, column: 14, scope: !12578, inlinedAt: !12444)
!12596 = !DILocation(line: 156, column: 13, scope: !12597, inlinedAt: !12444)
!12597 = distinct !DILexicalBlock(scope: !12592, file: !8763, line: 150, column: 65)
!12598 = !DILocation(line: 156, column: 17, scope: !12597, inlinedAt: !12444)
!12599 = !DILocation(line: 156, column: 15, scope: !12597, inlinedAt: !12444)
!12600 = !DILocation(line: 156, column: 25, scope: !12597, inlinedAt: !12444)
!12601 = !DILocation(line: 156, column: 23, scope: !12597, inlinedAt: !12444)
!12602 = !DILocation(line: 156, column: 32, scope: !12597, inlinedAt: !12444)
!12603 = !DILocation(line: 156, column: 30, scope: !12597, inlinedAt: !12444)
!12604 = !DILocation(line: 156, column: 4, scope: !12597, inlinedAt: !12444)
!12605 = !DILocation(line: 161, column: 12, scope: !12606, inlinedAt: !12444)
!12606 = distinct !DILexicalBlock(scope: !12592, file: !8763, line: 157, column: 10)
!12607 = !DILocation(line: 161, column: 16, scope: !12606, inlinedAt: !12444)
!12608 = !DILocation(line: 161, column: 14, scope: !12606, inlinedAt: !12444)
!12609 = !DILocation(line: 161, column: 27, scope: !12606, inlinedAt: !12444)
!12610 = !DILocation(line: 161, column: 25, scope: !12606, inlinedAt: !12444)
!12611 = !DILocation(line: 161, column: 37, scope: !12606, inlinedAt: !12444)
!12612 = !DILocation(line: 161, column: 41, scope: !12606, inlinedAt: !12444)
!12613 = !DILocation(line: 161, column: 39, scope: !12606, inlinedAt: !12444)
!12614 = !DILocation(line: 161, column: 52, scope: !12606, inlinedAt: !12444)
!12615 = !DILocation(line: 161, column: 50, scope: !12606, inlinedAt: !12444)
!12616 = !DILocation(line: 161, column: 60, scope: !12606, inlinedAt: !12444)
!12617 = !DILocation(line: 161, column: 58, scope: !12606, inlinedAt: !12444)
!12618 = !DILocation(line: 161, column: 67, scope: !12606, inlinedAt: !12444)
!12619 = !DILocation(line: 161, column: 65, scope: !12606, inlinedAt: !12444)
!12620 = !DILocation(line: 161, column: 33, scope: !12606, inlinedAt: !12444)
!12621 = !DILocation(line: 161, column: 4, scope: !12606, inlinedAt: !12444)
!12622 = !DILocation(line: 164, column: 1, scope: !12440, inlinedAt: !12444)
!12623 = !DILocation(line: 406, column: 2, scope: !12433)
!12624 = distinct !DISubprogram(name: "k_thread_user_mode_enter", scope: !1838, file: !1838, line: 817, type: !3161, scopeLine: 819, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagDefinition, unit: !1936, retainedNodes: !223)
!12625 = !DILocalVariable(name: "entry", arg: 1, scope: !12624, file: !1838, line: 817, type: !240)
!12626 = !DILocation(line: 817, column: 62, scope: !12624)
!12627 = !DILocalVariable(name: "p1", arg: 2, scope: !12624, file: !1838, line: 818, type: !102)
!12628 = !DILocation(line: 818, column: 16, scope: !12624)
!12629 = !DILocalVariable(name: "p2", arg: 3, scope: !12624, file: !1838, line: 818, type: !102)
!12630 = !DILocation(line: 818, column: 26, scope: !12624)
!12631 = !DILocalVariable(name: "p3", arg: 4, scope: !12624, file: !1838, line: 818, type: !102)
!12632 = !DILocation(line: 818, column: 36, scope: !12624)
!12633 = !DILocation(line: 820, column: 2, scope: !12624)
!12634 = !DILocation(line: 820, column: 2, scope: !12635)
!12635 = distinct !DILexicalBlock(scope: !12624, file: !1838, line: 820, column: 2)
!12636 = !DILocation(line: 822, column: 2, scope: !12624)
!12637 = !DILocation(line: 822, column: 12, scope: !12624)
!12638 = !DILocation(line: 822, column: 17, scope: !12624)
!12639 = !DILocation(line: 822, column: 30, scope: !12624)
!12640 = !DILocation(line: 823, column: 2, scope: !12624)
!12641 = !DILocation(line: 845, column: 17, scope: !12624)
!12642 = !DILocation(line: 845, column: 24, scope: !12624)
!12643 = !DILocation(line: 845, column: 28, scope: !12624)
!12644 = !DILocation(line: 845, column: 32, scope: !12624)
!12645 = !DILocation(line: 845, column: 2, scope: !12624)
!12646 = distinct !DISubprogram(name: "z_impl_k_float_disable", scope: !1838, file: !1838, line: 888, type: !12647, scopeLine: 889, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1936, retainedNodes: !223)
!12647 = !DISubroutineType(types: !12648)
!12648 = !{!103, !1842}
!12649 = !DILocalVariable(name: "thread", arg: 1, scope: !12646, file: !1838, line: 888, type: !1842)
!12650 = !DILocation(line: 888, column: 45, scope: !12646)
!12651 = !DILocation(line: 893, column: 2, scope: !12646)
!12652 = distinct !DISubprogram(name: "z_impl_k_float_enable", scope: !1838, file: !1838, line: 897, type: !12653, scopeLine: 898, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1936, retainedNodes: !223)
!12653 = !DISubroutineType(types: !12654)
!12654 = !{!103, !1842, !32}
!12655 = !DILocalVariable(name: "thread", arg: 1, scope: !12652, file: !1838, line: 897, type: !1842)
!12656 = !DILocation(line: 897, column: 44, scope: !12652)
!12657 = !DILocalVariable(name: "options", arg: 2, scope: !12652, file: !1838, line: 897, type: !32)
!12658 = !DILocation(line: 897, column: 65, scope: !12652)
!12659 = !DILocation(line: 902, column: 2, scope: !12652)
!12660 = distinct !DISubprogram(name: "k_thread_runtime_stats_get", scope: !1838, file: !1838, line: 1072, type: !12661, scopeLine: 1074, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1936, retainedNodes: !223)
!12661 = !DISubroutineType(types: !12662)
!12662 = !{!103, !1841, !12663}
!12663 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12664, size: 32)
!12664 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_runtime_stats_t", file: !114, line: 234, baseType: !12665)
!12665 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread_runtime_stats", file: !114, line: 192, elements: !223)
!12666 = !DILocalVariable(name: "thread", arg: 1, scope: !12660, file: !1838, line: 1072, type: !1841)
!12667 = !DILocation(line: 1072, column: 40, scope: !12660)
!12668 = !DILocalVariable(name: "stats", arg: 2, scope: !12660, file: !1838, line: 1073, type: !12663)
!12669 = !DILocation(line: 1073, column: 37, scope: !12660)
!12670 = !DILocation(line: 1075, column: 7, scope: !12671)
!12671 = distinct !DILexicalBlock(scope: !12660, file: !1838, line: 1075, column: 6)
!12672 = !DILocation(line: 1075, column: 14, scope: !12671)
!12673 = !DILocation(line: 1075, column: 23, scope: !12671)
!12674 = !DILocation(line: 1075, column: 27, scope: !12671)
!12675 = !DILocation(line: 1075, column: 33, scope: !12671)
!12676 = !DILocation(line: 1075, column: 6, scope: !12660)
!12677 = !DILocation(line: 1076, column: 3, scope: !12678)
!12678 = distinct !DILexicalBlock(scope: !12671, file: !1838, line: 1075, column: 43)
!12679 = !DILocation(line: 1082, column: 3, scope: !12660)
!12680 = !DILocation(line: 1082, column: 11, scope: !12660)
!12681 = !DILocation(line: 1085, column: 2, scope: !12660)
!12682 = !DILocation(line: 1086, column: 1, scope: !12660)
!12683 = distinct !DISubprogram(name: "k_thread_runtime_stats_all_get", scope: !1838, file: !1838, line: 1088, type: !12684, scopeLine: 1089, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1936, retainedNodes: !223)
!12684 = !DISubroutineType(types: !12685)
!12685 = !{!103, !12663}
!12686 = !DILocalVariable(name: "stats", arg: 1, scope: !12683, file: !1838, line: 1088, type: !12663)
!12687 = !DILocation(line: 1088, column: 62, scope: !12683)
!12688 = !DILocation(line: 1094, column: 6, scope: !12689)
!12689 = distinct !DILexicalBlock(scope: !12683, file: !1838, line: 1094, column: 6)
!12690 = !DILocation(line: 1094, column: 12, scope: !12689)
!12691 = !DILocation(line: 1094, column: 6, scope: !12683)
!12692 = !DILocation(line: 1095, column: 3, scope: !12693)
!12693 = distinct !DILexicalBlock(scope: !12689, file: !1838, line: 1094, column: 21)
!12694 = !DILocation(line: 1098, column: 3, scope: !12683)
!12695 = !DILocation(line: 1098, column: 11, scope: !12683)
!12696 = !DILocation(line: 1119, column: 2, scope: !12683)
!12697 = !DILocation(line: 1120, column: 1, scope: !12683)
!12698 = distinct !DISubprogram(name: "z_pm_save_idle_exit", scope: !12699, file: !12699, line: 20, type: !253, scopeLine: 21, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2708, retainedNodes: !223)
!12699 = !DIFile(filename: "zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12700 = !DILocation(line: 30, column: 2, scope: !12698)
!12701 = !DILocation(line: 31, column: 1, scope: !12698)
!12702 = distinct !DISubprogram(name: "idle", scope: !12699, file: !12699, line: 33, type: !242, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2708, retainedNodes: !223)
!12703 = !DILocalVariable(name: "unused1", arg: 1, scope: !12702, file: !12699, line: 33, type: !102)
!12704 = !DILocation(line: 33, column: 17, scope: !12702)
!12705 = !DILocalVariable(name: "unused2", arg: 2, scope: !12702, file: !12699, line: 33, type: !102)
!12706 = !DILocation(line: 33, column: 32, scope: !12702)
!12707 = !DILocalVariable(name: "unused3", arg: 3, scope: !12702, file: !12699, line: 33, type: !102)
!12708 = !DILocation(line: 33, column: 47, scope: !12702)
!12709 = !DILocation(line: 35, column: 2, scope: !12702)
!12710 = !DILocation(line: 36, column: 2, scope: !12702)
!12711 = !DILocation(line: 37, column: 2, scope: !12702)
!12712 = !DILocation(line: 41, column: 2, scope: !12702)
!12713 = !DILocalVariable(name: "key", scope: !12714, file: !5551, line: 44, type: !32)
!12714 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5551, file: !5551, line: 42, type: !7959, scopeLine: 43, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2708, retainedNodes: !223)
!12715 = !DILocation(line: 44, column: 15, scope: !12714, inlinedAt: !12716)
!12716 = distinct !DILocation(line: 62, column: 10, scope: !12717)
!12717 = distinct !DILexicalBlock(scope: !12702, file: !12699, line: 41, column: 15)
!12718 = !DILocalVariable(name: "tmp", scope: !12714, file: !5551, line: 53, type: !32)
!12719 = !DILocation(line: 53, column: 15, scope: !12714, inlinedAt: !12716)
!12720 = !DILocation(line: 55, column: 2, scope: !12714, inlinedAt: !12716)
!12721 = !{i64 2840807}
!12722 = !DILocation(line: 76, column: 9, scope: !12714, inlinedAt: !12716)
!12723 = !DILocation(line: 86, column: 3, scope: !12717)
!12724 = distinct !{!12724, !12712, !12725}
!12725 = !DILocation(line: 105, column: 2, scope: !12702)
!12726 = distinct !DISubprogram(name: "k_cpu_idle", scope: !109, file: !109, line: 5627, type: !253, scopeLine: 5628, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2708, retainedNodes: !223)
!12727 = !DILocation(line: 5629, column: 2, scope: !12726)
!12728 = !DILocation(line: 5630, column: 1, scope: !12726)
!12729 = distinct !DISubprogram(name: "z_sched_prio_cmp", scope: !2052, file: !2052, line: 93, type: !12730, scopeLine: 95, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1950, retainedNodes: !223)
!12730 = !DISubroutineType(types: !12731)
!12731 = !{!250, !1953, !1953}
!12732 = !DILocalVariable(name: "thread_1", arg: 1, scope: !12729, file: !2052, line: 93, type: !1953)
!12733 = !DILocation(line: 93, column: 43, scope: !12729)
!12734 = !DILocalVariable(name: "thread_2", arg: 2, scope: !12729, file: !2052, line: 94, type: !1953)
!12735 = !DILocation(line: 94, column: 19, scope: !12729)
!12736 = !DILocalVariable(name: "b1", scope: !12729, file: !2052, line: 97, type: !250)
!12737 = !DILocation(line: 97, column: 10, scope: !12729)
!12738 = !DILocation(line: 97, column: 15, scope: !12729)
!12739 = !DILocation(line: 97, column: 25, scope: !12729)
!12740 = !DILocation(line: 97, column: 30, scope: !12729)
!12741 = !DILocalVariable(name: "b2", scope: !12729, file: !2052, line: 98, type: !250)
!12742 = !DILocation(line: 98, column: 10, scope: !12729)
!12743 = !DILocation(line: 98, column: 15, scope: !12729)
!12744 = !DILocation(line: 98, column: 25, scope: !12729)
!12745 = !DILocation(line: 98, column: 30, scope: !12729)
!12746 = !DILocation(line: 100, column: 6, scope: !12747)
!12747 = distinct !DILexicalBlock(scope: !12729, file: !2052, line: 100, column: 6)
!12748 = !DILocation(line: 100, column: 12, scope: !12747)
!12749 = !DILocation(line: 100, column: 9, scope: !12747)
!12750 = !DILocation(line: 100, column: 6, scope: !12729)
!12751 = !DILocation(line: 101, column: 10, scope: !12752)
!12752 = distinct !DILexicalBlock(scope: !12747, file: !2052, line: 100, column: 16)
!12753 = !DILocation(line: 101, column: 15, scope: !12752)
!12754 = !DILocation(line: 101, column: 13, scope: !12752)
!12755 = !DILocation(line: 101, column: 3, scope: !12752)
!12756 = !DILocation(line: 124, column: 2, scope: !12729)
!12757 = !DILocation(line: 125, column: 1, scope: !12729)
!12758 = distinct !DISubprogram(name: "z_reset_time_slice", scope: !2052, file: !2052, line: 428, type: !12759, scopeLine: 429, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1950, retainedNodes: !223)
!12759 = !DISubroutineType(types: !12760)
!12760 = !{null, !1953}
!12761 = !DILocalVariable(name: "curr", arg: 1, scope: !12758, file: !2052, line: 428, type: !1953)
!12762 = !DILocation(line: 428, column: 42, scope: !12758)
!12763 = !DILocation(line: 434, column: 17, scope: !12764)
!12764 = distinct !DILexicalBlock(scope: !12758, file: !2052, line: 434, column: 6)
!12765 = !DILocation(line: 434, column: 6, scope: !12764)
!12766 = !DILocation(line: 434, column: 23, scope: !12764)
!12767 = !DILocation(line: 434, column: 6, scope: !12758)
!12768 = !DILocation(line: 435, column: 42, scope: !12769)
!12769 = distinct !DILexicalBlock(scope: !12764, file: !2052, line: 434, column: 29)
!12770 = !DILocation(line: 435, column: 31, scope: !12769)
!12771 = !DILocation(line: 435, column: 50, scope: !12769)
!12772 = !DILocation(line: 435, column: 48, scope: !12769)
!12773 = !DILocation(line: 435, column: 29, scope: !12769)
!12774 = !DILocation(line: 436, column: 35, scope: !12769)
!12775 = !DILocation(line: 436, column: 24, scope: !12769)
!12776 = !DILocation(line: 436, column: 3, scope: !12769)
!12777 = !DILocation(line: 437, column: 2, scope: !12769)
!12778 = !DILocation(line: 438, column: 1, scope: !12758)
!12779 = distinct !DISubprogram(name: "slice_time", scope: !2052, file: !2052, line: 407, type: !12780, scopeLine: 408, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1950, retainedNodes: !223)
!12780 = !DISubroutineType(types: !12781)
!12781 = !{!103, !1953}
!12782 = !DILocalVariable(name: "curr", arg: 1, scope: !12779, file: !2052, line: 407, type: !1953)
!12783 = !DILocation(line: 407, column: 47, scope: !12779)
!12784 = !DILocalVariable(name: "ret", scope: !12779, file: !2052, line: 409, type: !103)
!12785 = !DILocation(line: 409, column: 6, scope: !12779)
!12786 = !DILocation(line: 409, column: 12, scope: !12779)
!12787 = !DILocation(line: 416, column: 9, scope: !12779)
!12788 = !DILocation(line: 416, column: 2, scope: !12779)
!12789 = distinct !DISubprogram(name: "k_sched_time_slice_set", scope: !2052, file: !2052, line: 440, type: !12790, scopeLine: 441, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1950, retainedNodes: !223)
!12790 = !DISubroutineType(types: !12791)
!12791 = !{null, !250, !103}
!12792 = !DILocalVariable(name: "slice", arg: 1, scope: !12789, file: !2052, line: 440, type: !250)
!12793 = !DILocation(line: 440, column: 37, scope: !12789)
!12794 = !DILocalVariable(name: "prio", arg: 2, scope: !12789, file: !2052, line: 440, type: !103)
!12795 = !DILocation(line: 440, column: 48, scope: !12789)
!12796 = !DILocalVariable(name: "__i", scope: !12797, file: !2052, line: 442, type: !12798)
!12797 = distinct !DILexicalBlock(scope: !12789, file: !2052, line: 442, column: 2)
!12798 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !222, line: 106, baseType: !12799)
!12799 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !222, line: 32, size: 32, elements: !12800)
!12800 = !{!12801}
!12801 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !12799, file: !222, line: 33, baseType: !103, size: 32)
!12802 = !DILocation(line: 442, column: 2, scope: !12797)
!12803 = !DILocalVariable(name: "__key", scope: !12797, file: !2052, line: 442, type: !12798)
!12804 = !DILocalVariable(name: "l", arg: 1, scope: !12805, file: !222, line: 136, type: !12808)
!12805 = distinct !DISubprogram(name: "k_spin_lock", scope: !222, file: !222, line: 136, type: !12806, scopeLine: 137, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1950, retainedNodes: !223)
!12806 = !DISubroutineType(types: !12807)
!12807 = !{!12798, !12808}
!12808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2041, size: 32)
!12809 = !DILocation(line: 136, column: 70, scope: !12805, inlinedAt: !12810)
!12810 = distinct !DILocation(line: 442, column: 2, scope: !12797)
!12811 = !DILocation(line: 138, column: 2, scope: !12805, inlinedAt: !12810)
!12812 = !DILocalVariable(name: "k", scope: !12805, file: !222, line: 139, type: !12798)
!12813 = !DILocation(line: 139, column: 19, scope: !12805, inlinedAt: !12810)
!12814 = !DILocalVariable(name: "key", scope: !12815, file: !5551, line: 44, type: !32)
!12815 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5551, file: !5551, line: 42, type: !7959, scopeLine: 43, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1950, retainedNodes: !223)
!12816 = !DILocation(line: 44, column: 15, scope: !12815, inlinedAt: !12817)
!12817 = distinct !DILocation(line: 145, column: 10, scope: !12805, inlinedAt: !12810)
!12818 = !DILocalVariable(name: "tmp", scope: !12815, file: !5551, line: 53, type: !32)
!12819 = !DILocation(line: 53, column: 15, scope: !12815, inlinedAt: !12817)
!12820 = !DILocation(line: 55, column: 2, scope: !12815, inlinedAt: !12817)
!12821 = !{i64 2884778}
!12822 = !DILocation(line: 76, column: 9, scope: !12815, inlinedAt: !12817)
!12823 = !DILocation(line: 145, column: 4, scope: !12805, inlinedAt: !12810)
!12824 = !DILocation(line: 145, column: 8, scope: !12805, inlinedAt: !12810)
!12825 = !DILocation(line: 165, column: 2, scope: !12805, inlinedAt: !12810)
!12826 = !DILocation(line: 442, column: 2, scope: !12827)
!12827 = distinct !DILexicalBlock(scope: !12797, file: !2052, line: 442, column: 2)
!12828 = !DILocation(line: 443, column: 29, scope: !12829)
!12829 = distinct !DILexicalBlock(scope: !12827, file: !2052, line: 442, column: 26)
!12830 = !DILocation(line: 444, column: 38, scope: !12829)
!12831 = !DILocation(line: 444, column: 17, scope: !12829)
!12832 = !DILocation(line: 444, column: 15, scope: !12829)
!12833 = !DILocation(line: 445, column: 45, scope: !12834)
!12834 = distinct !DILexicalBlock(scope: !12829, file: !2052, line: 445, column: 7)
!12835 = !DILocation(line: 445, column: 51, scope: !12834)
!12836 = !DILocation(line: 445, column: 7, scope: !12829)
!12837 = !DILocation(line: 449, column: 18, scope: !12838)
!12838 = distinct !DILexicalBlock(scope: !12834, file: !2052, line: 445, column: 56)
!12839 = !DILocation(line: 449, column: 16, scope: !12838)
!12840 = !DILocation(line: 450, column: 3, scope: !12838)
!12841 = !DILocation(line: 451, column: 20, scope: !12829)
!12842 = !DILocation(line: 451, column: 18, scope: !12829)
!12843 = !DILocation(line: 452, column: 22, scope: !12829)
!12844 = !DILocation(line: 452, column: 3, scope: !12829)
!12845 = !DILocation(line: 453, column: 2, scope: !12829)
!12846 = !DILocalVariable(name: "l", arg: 1, scope: !12847, file: !222, line: 189, type: !12808)
!12847 = distinct !DISubprogram(name: "k_spin_unlock", scope: !222, file: !222, line: 189, type: !12848, scopeLine: 191, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1950, retainedNodes: !223)
!12848 = !DISubroutineType(types: !12849)
!12849 = !{null, !12808, !12798}
!12850 = !DILocation(line: 189, column: 60, scope: !12847, inlinedAt: !12851)
!12851 = distinct !DILocation(line: 442, column: 2, scope: !12827)
!12852 = !DILocalVariable(name: "key", arg: 2, scope: !12847, file: !222, line: 190, type: !12798)
!12853 = !DILocation(line: 190, column: 23, scope: !12847, inlinedAt: !12851)
!12854 = !DILocation(line: 192, column: 2, scope: !12847, inlinedAt: !12851)
!12855 = !DILocation(line: 215, column: 22, scope: !12847, inlinedAt: !12851)
!12856 = !DILocalVariable(name: "key", arg: 1, scope: !12857, file: !5551, line: 84, type: !32)
!12857 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5551, file: !5551, line: 84, type: !5361, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1950, retainedNodes: !223)
!12858 = !DILocation(line: 84, column: 56, scope: !12857, inlinedAt: !12859)
!12859 = distinct !DILocation(line: 215, column: 2, scope: !12847, inlinedAt: !12851)
!12860 = !DILocation(line: 98, column: 12, scope: !12857, inlinedAt: !12859)
!12861 = !DILocation(line: 95, column: 2, scope: !12857, inlinedAt: !12859)
!12862 = !{i64 2885595}
!12863 = distinct !{!12863, !12802, !12864}
!12864 = !DILocation(line: 453, column: 2, scope: !12797)
!12865 = !DILocation(line: 454, column: 1, scope: !12789)
!12866 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil32", scope: !8763, file: !8763, line: 389, type: !12867, scopeLine: 390, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1950, retainedNodes: !223)
!12867 = !DISubroutineType(types: !12868)
!12868 = !{!173, !173}
!12869 = !DILocalVariable(name: "t", arg: 1, scope: !12866, file: !8763, line: 389, type: !173)
!12870 = !DILocation(line: 389, column: 69, scope: !12866)
!12871 = !DILocation(line: 392, column: 17, scope: !12866)
!12872 = !DILocalVariable(name: "t", arg: 1, scope: !12873, file: !8763, line: 102, type: !1940)
!12873 = distinct !DISubprogram(name: "z_tmcvt", scope: !8763, file: !8763, line: 102, type: !12441, scopeLine: 106, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1950, retainedNodes: !223)
!12874 = !DILocation(line: 102, column: 63, scope: !12873, inlinedAt: !12875)
!12875 = distinct !DILocation(line: 392, column: 9, scope: !12866)
!12876 = !DILocalVariable(name: "from_hz", arg: 2, scope: !12873, file: !8763, line: 102, type: !173)
!12877 = !DILocation(line: 102, column: 75, scope: !12873, inlinedAt: !12875)
!12878 = !DILocalVariable(name: "to_hz", arg: 3, scope: !12873, file: !8763, line: 103, type: !173)
!12879 = !DILocation(line: 103, column: 18, scope: !12873, inlinedAt: !12875)
!12880 = !DILocalVariable(name: "const_hz", arg: 4, scope: !12873, file: !8763, line: 103, type: !743)
!12881 = !DILocation(line: 103, column: 30, scope: !12873, inlinedAt: !12875)
!12882 = !DILocalVariable(name: "result32", arg: 5, scope: !12873, file: !8763, line: 104, type: !743)
!12883 = !DILocation(line: 104, column: 14, scope: !12873, inlinedAt: !12875)
!12884 = !DILocalVariable(name: "round_up", arg: 6, scope: !12873, file: !8763, line: 104, type: !743)
!12885 = !DILocation(line: 104, column: 29, scope: !12873, inlinedAt: !12875)
!12886 = !DILocalVariable(name: "round_off", arg: 7, scope: !12873, file: !8763, line: 105, type: !743)
!12887 = !DILocation(line: 105, column: 14, scope: !12873, inlinedAt: !12875)
!12888 = !DILocalVariable(name: "mul_ratio", scope: !12873, file: !8763, line: 107, type: !743)
!12889 = !DILocation(line: 107, column: 7, scope: !12873, inlinedAt: !12875)
!12890 = !DILocation(line: 107, column: 19, scope: !12873, inlinedAt: !12875)
!12891 = !DILocation(line: 107, column: 28, scope: !12873, inlinedAt: !12875)
!12892 = !DILocation(line: 108, column: 4, scope: !12873, inlinedAt: !12875)
!12893 = !DILocation(line: 108, column: 12, scope: !12873, inlinedAt: !12875)
!12894 = !DILocation(line: 108, column: 10, scope: !12873, inlinedAt: !12875)
!12895 = !DILocation(line: 108, column: 21, scope: !12873, inlinedAt: !12875)
!12896 = !DILocation(line: 108, column: 26, scope: !12873, inlinedAt: !12875)
!12897 = !DILocation(line: 108, column: 34, scope: !12873, inlinedAt: !12875)
!12898 = !DILocation(line: 108, column: 32, scope: !12873, inlinedAt: !12875)
!12899 = !DILocation(line: 108, column: 43, scope: !12873, inlinedAt: !12875)
!12900 = !DILocation(line: 0, scope: !12873, inlinedAt: !12875)
!12901 = !DILocalVariable(name: "div_ratio", scope: !12873, file: !8763, line: 109, type: !743)
!12902 = !DILocation(line: 109, column: 7, scope: !12873, inlinedAt: !12875)
!12903 = !DILocation(line: 109, column: 19, scope: !12873, inlinedAt: !12875)
!12904 = !DILocation(line: 109, column: 28, scope: !12873, inlinedAt: !12875)
!12905 = !DILocation(line: 110, column: 4, scope: !12873, inlinedAt: !12875)
!12906 = !DILocation(line: 110, column: 14, scope: !12873, inlinedAt: !12875)
!12907 = !DILocation(line: 110, column: 12, scope: !12873, inlinedAt: !12875)
!12908 = !DILocation(line: 110, column: 21, scope: !12873, inlinedAt: !12875)
!12909 = !DILocation(line: 110, column: 26, scope: !12873, inlinedAt: !12875)
!12910 = !DILocation(line: 110, column: 36, scope: !12873, inlinedAt: !12875)
!12911 = !DILocation(line: 110, column: 34, scope: !12873, inlinedAt: !12875)
!12912 = !DILocation(line: 110, column: 43, scope: !12873, inlinedAt: !12875)
!12913 = !DILocation(line: 112, column: 6, scope: !12914, inlinedAt: !12875)
!12914 = distinct !DILexicalBlock(scope: !12873, file: !8763, line: 112, column: 6)
!12915 = !DILocation(line: 112, column: 17, scope: !12914, inlinedAt: !12875)
!12916 = !DILocation(line: 112, column: 14, scope: !12914, inlinedAt: !12875)
!12917 = !DILocation(line: 112, column: 6, scope: !12873, inlinedAt: !12875)
!12918 = !DILocation(line: 113, column: 10, scope: !12919, inlinedAt: !12875)
!12919 = distinct !DILexicalBlock(scope: !12914, file: !8763, line: 112, column: 24)
!12920 = !DILocation(line: 113, column: 32, scope: !12919, inlinedAt: !12875)
!12921 = !DILocation(line: 113, column: 22, scope: !12919, inlinedAt: !12875)
!12922 = !DILocation(line: 113, column: 21, scope: !12919, inlinedAt: !12875)
!12923 = !DILocation(line: 113, column: 37, scope: !12919, inlinedAt: !12875)
!12924 = !DILocation(line: 113, column: 3, scope: !12919, inlinedAt: !12875)
!12925 = !DILocalVariable(name: "off", scope: !12873, file: !8763, line: 116, type: !1940)
!12926 = !DILocation(line: 116, column: 11, scope: !12873, inlinedAt: !12875)
!12927 = !DILocation(line: 118, column: 7, scope: !12928, inlinedAt: !12875)
!12928 = distinct !DILexicalBlock(scope: !12873, file: !8763, line: 118, column: 6)
!12929 = !DILocation(line: 118, column: 6, scope: !12873, inlinedAt: !12875)
!12930 = !DILocalVariable(name: "rdivisor", scope: !12931, file: !8763, line: 119, type: !173)
!12931 = distinct !DILexicalBlock(scope: !12928, file: !8763, line: 118, column: 18)
!12932 = !DILocation(line: 119, column: 12, scope: !12931, inlinedAt: !12875)
!12933 = !DILocation(line: 119, column: 23, scope: !12931, inlinedAt: !12875)
!12934 = !DILocation(line: 119, column: 36, scope: !12931, inlinedAt: !12875)
!12935 = !DILocation(line: 119, column: 46, scope: !12931, inlinedAt: !12875)
!12936 = !DILocation(line: 119, column: 44, scope: !12931, inlinedAt: !12875)
!12937 = !DILocation(line: 119, column: 55, scope: !12931, inlinedAt: !12875)
!12938 = !DILocation(line: 121, column: 7, scope: !12939, inlinedAt: !12875)
!12939 = distinct !DILexicalBlock(scope: !12931, file: !8763, line: 121, column: 7)
!12940 = !DILocation(line: 121, column: 7, scope: !12931, inlinedAt: !12875)
!12941 = !DILocation(line: 122, column: 10, scope: !12942, inlinedAt: !12875)
!12942 = distinct !DILexicalBlock(scope: !12939, file: !8763, line: 121, column: 17)
!12943 = !DILocation(line: 122, column: 19, scope: !12942, inlinedAt: !12875)
!12944 = !DILocation(line: 122, column: 8, scope: !12942, inlinedAt: !12875)
!12945 = !DILocation(line: 123, column: 3, scope: !12942, inlinedAt: !12875)
!12946 = !DILocation(line: 124, column: 7, scope: !12947, inlinedAt: !12875)
!12947 = distinct !DILexicalBlock(scope: !12931, file: !8763, line: 124, column: 7)
!12948 = !DILocation(line: 124, column: 7, scope: !12931, inlinedAt: !12875)
!12949 = !DILocation(line: 125, column: 10, scope: !12950, inlinedAt: !12875)
!12950 = distinct !DILexicalBlock(scope: !12947, file: !8763, line: 124, column: 18)
!12951 = !DILocation(line: 125, column: 19, scope: !12950, inlinedAt: !12875)
!12952 = !DILocation(line: 125, column: 8, scope: !12950, inlinedAt: !12875)
!12953 = !DILocation(line: 126, column: 3, scope: !12950, inlinedAt: !12875)
!12954 = !DILocation(line: 127, column: 2, scope: !12931, inlinedAt: !12875)
!12955 = !DILocation(line: 134, column: 6, scope: !12956, inlinedAt: !12875)
!12956 = distinct !DILexicalBlock(scope: !12873, file: !8763, line: 134, column: 6)
!12957 = !DILocation(line: 134, column: 6, scope: !12873, inlinedAt: !12875)
!12958 = !DILocation(line: 135, column: 8, scope: !12959, inlinedAt: !12875)
!12959 = distinct !DILexicalBlock(scope: !12956, file: !8763, line: 134, column: 17)
!12960 = !DILocation(line: 135, column: 5, scope: !12959, inlinedAt: !12875)
!12961 = !DILocation(line: 136, column: 7, scope: !12962, inlinedAt: !12875)
!12962 = distinct !DILexicalBlock(scope: !12959, file: !8763, line: 136, column: 7)
!12963 = !DILocation(line: 136, column: 16, scope: !12962, inlinedAt: !12875)
!12964 = !DILocation(line: 136, column: 20, scope: !12962, inlinedAt: !12875)
!12965 = !DILocation(line: 136, column: 22, scope: !12962, inlinedAt: !12875)
!12966 = !DILocation(line: 136, column: 7, scope: !12959, inlinedAt: !12875)
!12967 = !DILocation(line: 137, column: 22, scope: !12968, inlinedAt: !12875)
!12968 = distinct !DILexicalBlock(scope: !12962, file: !8763, line: 136, column: 36)
!12969 = !DILocation(line: 137, column: 12, scope: !12968, inlinedAt: !12875)
!12970 = !DILocation(line: 137, column: 28, scope: !12968, inlinedAt: !12875)
!12971 = !DILocation(line: 137, column: 38, scope: !12968, inlinedAt: !12875)
!12972 = !DILocation(line: 137, column: 36, scope: !12968, inlinedAt: !12875)
!12973 = !DILocation(line: 137, column: 25, scope: !12968, inlinedAt: !12875)
!12974 = !DILocation(line: 137, column: 11, scope: !12968, inlinedAt: !12875)
!12975 = !DILocation(line: 137, column: 4, scope: !12968, inlinedAt: !12875)
!12976 = !DILocation(line: 139, column: 11, scope: !12977, inlinedAt: !12875)
!12977 = distinct !DILexicalBlock(scope: !12962, file: !8763, line: 138, column: 10)
!12978 = !DILocation(line: 139, column: 26, scope: !12977, inlinedAt: !12875)
!12979 = !DILocation(line: 139, column: 16, scope: !12977, inlinedAt: !12875)
!12980 = !DILocation(line: 139, column: 36, scope: !12977, inlinedAt: !12875)
!12981 = !DILocation(line: 139, column: 34, scope: !12977, inlinedAt: !12875)
!12982 = !DILocation(line: 139, column: 13, scope: !12977, inlinedAt: !12875)
!12983 = !DILocation(line: 139, column: 4, scope: !12977, inlinedAt: !12875)
!12984 = !DILocation(line: 141, column: 13, scope: !12985, inlinedAt: !12875)
!12985 = distinct !DILexicalBlock(scope: !12956, file: !8763, line: 141, column: 13)
!12986 = !DILocation(line: 141, column: 13, scope: !12956, inlinedAt: !12875)
!12987 = !DILocation(line: 142, column: 7, scope: !12988, inlinedAt: !12875)
!12988 = distinct !DILexicalBlock(scope: !12989, file: !8763, line: 142, column: 7)
!12989 = distinct !DILexicalBlock(scope: !12985, file: !8763, line: 141, column: 24)
!12990 = !DILocation(line: 142, column: 7, scope: !12989, inlinedAt: !12875)
!12991 = !DILocation(line: 143, column: 22, scope: !12992, inlinedAt: !12875)
!12992 = distinct !DILexicalBlock(scope: !12988, file: !8763, line: 142, column: 17)
!12993 = !DILocation(line: 143, column: 12, scope: !12992, inlinedAt: !12875)
!12994 = !DILocation(line: 143, column: 28, scope: !12992, inlinedAt: !12875)
!12995 = !DILocation(line: 143, column: 36, scope: !12992, inlinedAt: !12875)
!12996 = !DILocation(line: 143, column: 34, scope: !12992, inlinedAt: !12875)
!12997 = !DILocation(line: 143, column: 25, scope: !12992, inlinedAt: !12875)
!12998 = !DILocation(line: 143, column: 11, scope: !12992, inlinedAt: !12875)
!12999 = !DILocation(line: 143, column: 4, scope: !12992, inlinedAt: !12875)
!13000 = !DILocation(line: 145, column: 11, scope: !13001, inlinedAt: !12875)
!13001 = distinct !DILexicalBlock(scope: !12988, file: !8763, line: 144, column: 10)
!13002 = !DILocation(line: 145, column: 26, scope: !13001, inlinedAt: !12875)
!13003 = !DILocation(line: 145, column: 16, scope: !13001, inlinedAt: !12875)
!13004 = !DILocation(line: 145, column: 34, scope: !13001, inlinedAt: !12875)
!13005 = !DILocation(line: 145, column: 32, scope: !13001, inlinedAt: !12875)
!13006 = !DILocation(line: 145, column: 13, scope: !13001, inlinedAt: !12875)
!13007 = !DILocation(line: 145, column: 4, scope: !13001, inlinedAt: !12875)
!13008 = !DILocation(line: 148, column: 7, scope: !13009, inlinedAt: !12875)
!13009 = distinct !DILexicalBlock(scope: !13010, file: !8763, line: 148, column: 7)
!13010 = distinct !DILexicalBlock(scope: !12985, file: !8763, line: 147, column: 9)
!13011 = !DILocation(line: 148, column: 7, scope: !13010, inlinedAt: !12875)
!13012 = !DILocation(line: 149, column: 23, scope: !13013, inlinedAt: !12875)
!13013 = distinct !DILexicalBlock(scope: !13009, file: !8763, line: 148, column: 17)
!13014 = !DILocation(line: 149, column: 27, scope: !13013, inlinedAt: !12875)
!13015 = !DILocation(line: 149, column: 25, scope: !13013, inlinedAt: !12875)
!13016 = !DILocation(line: 149, column: 35, scope: !13013, inlinedAt: !12875)
!13017 = !DILocation(line: 149, column: 33, scope: !13013, inlinedAt: !12875)
!13018 = !DILocation(line: 149, column: 42, scope: !13013, inlinedAt: !12875)
!13019 = !DILocation(line: 149, column: 40, scope: !13013, inlinedAt: !12875)
!13020 = !DILocation(line: 149, column: 11, scope: !13013, inlinedAt: !12875)
!13021 = !DILocation(line: 149, column: 4, scope: !13013, inlinedAt: !12875)
!13022 = !DILocation(line: 150, column: 14, scope: !13023, inlinedAt: !12875)
!13023 = distinct !DILexicalBlock(scope: !13009, file: !8763, line: 150, column: 14)
!13024 = !DILocation(line: 150, column: 23, scope: !13023, inlinedAt: !12875)
!13025 = !DILocation(line: 150, column: 26, scope: !13023, inlinedAt: !12875)
!13026 = !DILocation(line: 150, column: 14, scope: !13009, inlinedAt: !12875)
!13027 = !DILocation(line: 156, column: 13, scope: !13028, inlinedAt: !12875)
!13028 = distinct !DILexicalBlock(scope: !13023, file: !8763, line: 150, column: 65)
!13029 = !DILocation(line: 156, column: 17, scope: !13028, inlinedAt: !12875)
!13030 = !DILocation(line: 156, column: 15, scope: !13028, inlinedAt: !12875)
!13031 = !DILocation(line: 156, column: 25, scope: !13028, inlinedAt: !12875)
!13032 = !DILocation(line: 156, column: 23, scope: !13028, inlinedAt: !12875)
!13033 = !DILocation(line: 156, column: 32, scope: !13028, inlinedAt: !12875)
!13034 = !DILocation(line: 156, column: 30, scope: !13028, inlinedAt: !12875)
!13035 = !DILocation(line: 156, column: 4, scope: !13028, inlinedAt: !12875)
!13036 = !DILocation(line: 161, column: 12, scope: !13037, inlinedAt: !12875)
!13037 = distinct !DILexicalBlock(scope: !13023, file: !8763, line: 157, column: 10)
!13038 = !DILocation(line: 161, column: 16, scope: !13037, inlinedAt: !12875)
!13039 = !DILocation(line: 161, column: 14, scope: !13037, inlinedAt: !12875)
!13040 = !DILocation(line: 161, column: 27, scope: !13037, inlinedAt: !12875)
!13041 = !DILocation(line: 161, column: 25, scope: !13037, inlinedAt: !12875)
!13042 = !DILocation(line: 161, column: 37, scope: !13037, inlinedAt: !12875)
!13043 = !DILocation(line: 161, column: 41, scope: !13037, inlinedAt: !12875)
!13044 = !DILocation(line: 161, column: 39, scope: !13037, inlinedAt: !12875)
!13045 = !DILocation(line: 161, column: 52, scope: !13037, inlinedAt: !12875)
!13046 = !DILocation(line: 161, column: 50, scope: !13037, inlinedAt: !12875)
!13047 = !DILocation(line: 161, column: 60, scope: !13037, inlinedAt: !12875)
!13048 = !DILocation(line: 161, column: 58, scope: !13037, inlinedAt: !12875)
!13049 = !DILocation(line: 161, column: 67, scope: !13037, inlinedAt: !12875)
!13050 = !DILocation(line: 161, column: 65, scope: !13037, inlinedAt: !12875)
!13051 = !DILocation(line: 161, column: 33, scope: !13037, inlinedAt: !12875)
!13052 = !DILocation(line: 161, column: 4, scope: !13037, inlinedAt: !12875)
!13053 = !DILocation(line: 164, column: 1, scope: !12873, inlinedAt: !12875)
!13054 = !DILocation(line: 392, column: 9, scope: !12866)
!13055 = !DILocation(line: 392, column: 2, scope: !12866)
!13056 = distinct !DISubprogram(name: "z_time_slice", scope: !2052, file: !2052, line: 502, type: !11567, scopeLine: 503, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1950, retainedNodes: !223)
!13057 = !DILocalVariable(name: "ticks", arg: 1, scope: !13056, file: !2052, line: 502, type: !103)
!13058 = !DILocation(line: 502, column: 23, scope: !13056)
!13059 = !DILocalVariable(name: "key", scope: !13056, file: !2052, line: 511, type: !12798)
!13060 = !DILocation(line: 511, column: 19, scope: !13056)
!13061 = !DILocation(line: 136, column: 70, scope: !12805, inlinedAt: !13062)
!13062 = distinct !DILocation(line: 511, column: 25, scope: !13056)
!13063 = !DILocation(line: 138, column: 2, scope: !12805, inlinedAt: !13062)
!13064 = !DILocation(line: 139, column: 19, scope: !12805, inlinedAt: !13062)
!13065 = !DILocation(line: 44, column: 15, scope: !12815, inlinedAt: !13066)
!13066 = distinct !DILocation(line: 145, column: 10, scope: !12805, inlinedAt: !13062)
!13067 = !DILocation(line: 53, column: 15, scope: !12815, inlinedAt: !13066)
!13068 = !DILocation(line: 55, column: 2, scope: !12815, inlinedAt: !13066)
!13069 = !DILocation(line: 76, column: 9, scope: !12815, inlinedAt: !13066)
!13070 = !DILocation(line: 145, column: 4, scope: !12805, inlinedAt: !13062)
!13071 = !DILocation(line: 145, column: 8, scope: !12805, inlinedAt: !13062)
!13072 = !DILocation(line: 165, column: 2, scope: !12805, inlinedAt: !13062)
!13073 = !DILocation(line: 511, column: 25, scope: !13056)
!13074 = !DILocation(line: 514, column: 6, scope: !13075)
!13075 = distinct !DILexicalBlock(scope: !13056, file: !2052, line: 514, column: 6)
!13076 = !DILocation(line: 514, column: 25, scope: !13075)
!13077 = !DILocation(line: 514, column: 22, scope: !13075)
!13078 = !DILocation(line: 514, column: 6, scope: !13056)
!13079 = !DILocation(line: 515, column: 22, scope: !13080)
!13080 = distinct !DILexicalBlock(scope: !13075, file: !2052, line: 514, column: 35)
!13081 = !DILocation(line: 515, column: 3, scope: !13080)
!13082 = !DILocation(line: 516, column: 3, scope: !13080)
!13083 = !DILocation(line: 189, column: 60, scope: !12847, inlinedAt: !13084)
!13084 = distinct !DILocation(line: 516, column: 3, scope: !13080)
!13085 = !DILocation(line: 190, column: 23, scope: !12847, inlinedAt: !13084)
!13086 = !DILocation(line: 192, column: 2, scope: !12847, inlinedAt: !13084)
!13087 = !DILocation(line: 215, column: 22, scope: !12847, inlinedAt: !13084)
!13088 = !DILocation(line: 84, column: 56, scope: !12857, inlinedAt: !13089)
!13089 = distinct !DILocation(line: 215, column: 2, scope: !12847, inlinedAt: !13084)
!13090 = !DILocation(line: 98, column: 12, scope: !12857, inlinedAt: !13089)
!13091 = !DILocation(line: 95, column: 2, scope: !12857, inlinedAt: !13089)
!13092 = !DILocation(line: 517, column: 3, scope: !13080)
!13093 = !DILocation(line: 519, column: 18, scope: !13056)
!13094 = !DILocation(line: 522, column: 17, scope: !13095)
!13095 = distinct !DILexicalBlock(scope: !13056, file: !2052, line: 522, column: 6)
!13096 = !DILocation(line: 522, column: 6, scope: !13095)
!13097 = !DILocation(line: 522, column: 27, scope: !13095)
!13098 = !DILocation(line: 522, column: 40, scope: !13095)
!13099 = !DILocation(line: 522, column: 30, scope: !13095)
!13100 = !DILocation(line: 522, column: 6, scope: !13056)
!13101 = !DILocation(line: 523, column: 7, scope: !13102)
!13102 = distinct !DILexicalBlock(scope: !13103, file: !2052, line: 523, column: 7)
!13103 = distinct !DILexicalBlock(scope: !13095, file: !2052, line: 522, column: 51)
!13104 = !DILocation(line: 523, column: 30, scope: !13102)
!13105 = !DILocation(line: 523, column: 13, scope: !13102)
!13106 = !DILocation(line: 523, column: 7, scope: !13103)
!13107 = !DILocation(line: 530, column: 10, scope: !13108)
!13108 = distinct !DILexicalBlock(scope: !13102, file: !2052, line: 523, column: 43)
!13109 = !DILocation(line: 531, column: 3, scope: !13108)
!13110 = !DILocation(line: 532, column: 33, scope: !13111)
!13111 = distinct !DILexicalBlock(scope: !13102, file: !2052, line: 531, column: 10)
!13112 = !DILocation(line: 532, column: 30, scope: !13111)
!13113 = !DILocation(line: 534, column: 2, scope: !13103)
!13114 = !DILocation(line: 535, column: 29, scope: !13115)
!13115 = distinct !DILexicalBlock(scope: !13095, file: !2052, line: 534, column: 9)
!13116 = !DILocation(line: 537, column: 2, scope: !13056)
!13117 = !DILocation(line: 189, column: 60, scope: !12847, inlinedAt: !13118)
!13118 = distinct !DILocation(line: 537, column: 2, scope: !13056)
!13119 = !DILocation(line: 190, column: 23, scope: !12847, inlinedAt: !13118)
!13120 = !DILocation(line: 192, column: 2, scope: !12847, inlinedAt: !13118)
!13121 = !DILocation(line: 215, column: 22, scope: !12847, inlinedAt: !13118)
!13122 = !DILocation(line: 84, column: 56, scope: !12857, inlinedAt: !13123)
!13123 = distinct !DILocation(line: 215, column: 2, scope: !12847, inlinedAt: !13118)
!13124 = !DILocation(line: 98, column: 12, scope: !12857, inlinedAt: !13123)
!13125 = !DILocation(line: 95, column: 2, scope: !12857, inlinedAt: !13123)
!13126 = !DILocation(line: 538, column: 1, scope: !13056)
!13127 = distinct !DISubprogram(name: "sliceable", scope: !2052, file: !2052, line: 468, type: !13128, scopeLine: 469, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1950, retainedNodes: !223)
!13128 = !DISubroutineType(types: !13129)
!13129 = !{!743, !1953}
!13130 = !DILocalVariable(name: "thread", arg: 1, scope: !13127, file: !2052, line: 468, type: !1953)
!13131 = !DILocation(line: 468, column: 47, scope: !13127)
!13132 = !DILocalVariable(name: "ret", scope: !13127, file: !2052, line: 470, type: !743)
!13133 = !DILocation(line: 470, column: 7, scope: !13127)
!13134 = !DILocation(line: 470, column: 24, scope: !13127)
!13135 = !DILocation(line: 470, column: 13, scope: !13127)
!13136 = !DILocation(line: 471, column: 3, scope: !13127)
!13137 = !DILocation(line: 471, column: 42, scope: !13127)
!13138 = !DILocation(line: 471, column: 7, scope: !13127)
!13139 = !DILocation(line: 472, column: 3, scope: !13127)
!13140 = !DILocation(line: 472, column: 24, scope: !13127)
!13141 = !DILocation(line: 472, column: 32, scope: !13127)
!13142 = !DILocation(line: 472, column: 37, scope: !13127)
!13143 = !DILocation(line: 472, column: 43, scope: !13127)
!13144 = !DILocation(line: 472, column: 7, scope: !13127)
!13145 = !DILocation(line: 473, column: 3, scope: !13127)
!13146 = !DILocation(line: 473, column: 31, scope: !13127)
!13147 = !DILocation(line: 473, column: 7, scope: !13127)
!13148 = !DILocation(line: 473, column: 6, scope: !13127)
!13149 = !DILocation(line: 0, scope: !13127)
!13150 = !DILocation(line: 479, column: 9, scope: !13127)
!13151 = !DILocation(line: 479, column: 2, scope: !13127)
!13152 = distinct !DISubprogram(name: "slice_expired_locked", scope: !2052, file: !2052, line: 482, type: !13153, scopeLine: 483, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1950, retainedNodes: !223)
!13153 = !DISubroutineType(types: !13154)
!13154 = !{!12798, !12798}
!13155 = !DILocalVariable(name: "sched_lock_key", arg: 1, scope: !13152, file: !2052, line: 482, type: !12798)
!13156 = !DILocation(line: 482, column: 63, scope: !13152)
!13157 = !DILocalVariable(name: "curr", scope: !13152, file: !2052, line: 484, type: !1953)
!13158 = !DILocation(line: 484, column: 19, scope: !13152)
!13159 = !DILocation(line: 484, column: 26, scope: !13152)
!13160 = !DILocation(line: 493, column: 42, scope: !13161)
!13161 = distinct !DILexicalBlock(scope: !13152, file: !2052, line: 493, column: 6)
!13162 = !DILocation(line: 493, column: 7, scope: !13161)
!13163 = !DILocation(line: 493, column: 6, scope: !13152)
!13164 = !DILocation(line: 494, column: 32, scope: !13165)
!13165 = distinct !DILexicalBlock(scope: !13161, file: !2052, line: 493, column: 49)
!13166 = !DILocation(line: 494, column: 3, scope: !13165)
!13167 = !DILocation(line: 495, column: 2, scope: !13165)
!13168 = !DILocation(line: 496, column: 21, scope: !13152)
!13169 = !DILocation(line: 496, column: 2, scope: !13152)
!13170 = !DILocation(line: 498, column: 9, scope: !13152)
!13171 = !DILocation(line: 498, column: 2, scope: !13152)
!13172 = distinct !DISubprogram(name: "z_is_thread_prevented_from_running", scope: !11628, file: !11628, line: 106, type: !13128, scopeLine: 107, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1950, retainedNodes: !223)
!13173 = !DILocalVariable(name: "thread", arg: 1, scope: !13172, file: !11628, line: 106, type: !1953)
!13174 = !DILocation(line: 106, column: 72, scope: !13172)
!13175 = !DILocalVariable(name: "state", scope: !13172, file: !11628, line: 108, type: !156)
!13176 = !DILocation(line: 108, column: 10, scope: !13172)
!13177 = !DILocation(line: 108, column: 18, scope: !13172)
!13178 = !DILocation(line: 108, column: 26, scope: !13172)
!13179 = !DILocation(line: 108, column: 31, scope: !13172)
!13180 = !DILocation(line: 110, column: 10, scope: !13172)
!13181 = !DILocation(line: 110, column: 16, scope: !13172)
!13182 = !DILocation(line: 111, column: 41, scope: !13172)
!13183 = !DILocation(line: 110, column: 2, scope: !13172)
!13184 = distinct !DISubprogram(name: "move_thread_to_end_of_prio_q", scope: !2052, file: !2052, line: 393, type: !12759, scopeLine: 394, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1950, retainedNodes: !223)
!13185 = !DILocalVariable(name: "thread", arg: 1, scope: !13184, file: !2052, line: 393, type: !1953)
!13186 = !DILocation(line: 393, column: 59, scope: !13184)
!13187 = !DILocation(line: 395, column: 25, scope: !13188)
!13188 = distinct !DILexicalBlock(scope: !13184, file: !2052, line: 395, column: 6)
!13189 = !DILocation(line: 395, column: 6, scope: !13188)
!13190 = !DILocation(line: 395, column: 6, scope: !13184)
!13191 = !DILocation(line: 396, column: 18, scope: !13192)
!13192 = distinct !DILexicalBlock(scope: !13188, file: !2052, line: 395, column: 34)
!13193 = !DILocalVariable(name: "thread", arg: 1, scope: !13194, file: !2052, line: 264, type: !1953)
!13194 = distinct !DISubprogram(name: "dequeue_thread", scope: !2052, file: !2052, line: 264, type: !12759, scopeLine: 265, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1950, retainedNodes: !223)
!13195 = !DILocation(line: 264, column: 59, scope: !13194, inlinedAt: !13196)
!13196 = distinct !DILocation(line: 396, column: 3, scope: !13192)
!13197 = !DILocation(line: 266, column: 2, scope: !13194, inlinedAt: !13196)
!13198 = !DILocation(line: 266, column: 10, scope: !13194, inlinedAt: !13196)
!13199 = !DILocation(line: 266, column: 15, scope: !13194, inlinedAt: !13196)
!13200 = !DILocation(line: 266, column: 28, scope: !13194, inlinedAt: !13196)
!13201 = !DILocation(line: 267, column: 26, scope: !13202, inlinedAt: !13196)
!13202 = distinct !DILexicalBlock(scope: !13194, file: !2052, line: 267, column: 6)
!13203 = !DILocation(line: 267, column: 6, scope: !13202, inlinedAt: !13196)
!13204 = !DILocation(line: 267, column: 6, scope: !13194, inlinedAt: !13196)
!13205 = !DILocation(line: 268, column: 15, scope: !13206, inlinedAt: !13196)
!13206 = distinct !DILexicalBlock(scope: !13202, file: !2052, line: 267, column: 35)
!13207 = !DILocalVariable(name: "thread", arg: 1, scope: !13208, file: !2052, line: 232, type: !1953)
!13208 = distinct !DISubprogram(name: "runq_remove", scope: !2052, file: !2052, line: 232, type: !12759, scopeLine: 233, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1950, retainedNodes: !223)
!13209 = !DILocation(line: 232, column: 56, scope: !13208, inlinedAt: !13210)
!13210 = distinct !DILocation(line: 268, column: 3, scope: !13206, inlinedAt: !13196)
!13211 = !DILocation(line: 234, column: 31, scope: !13208, inlinedAt: !13210)
!13212 = !DILocalVariable(name: "thread", arg: 1, scope: !13213, file: !2052, line: 199, type: !1953)
!13213 = distinct !DISubprogram(name: "thread_runq", scope: !2052, file: !2052, line: 199, type: !13214, scopeLine: 200, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1950, retainedNodes: !223)
!13214 = !DISubroutineType(types: !13215)
!13215 = !{!102, !1953}
!13216 = !DILocation(line: 199, column: 57, scope: !13213, inlinedAt: !13217)
!13217 = distinct !DILocation(line: 234, column: 19, scope: !13208, inlinedAt: !13210)
!13218 = !DILocation(line: 234, column: 19, scope: !13208, inlinedAt: !13210)
!13219 = !DILocation(line: 234, column: 40, scope: !13208, inlinedAt: !13210)
!13220 = !DILocation(line: 234, column: 2, scope: !13208, inlinedAt: !13210)
!13221 = !DILocation(line: 269, column: 2, scope: !13206, inlinedAt: !13196)
!13222 = !DILocation(line: 397, column: 2, scope: !13192)
!13223 = !DILocation(line: 398, column: 15, scope: !13184)
!13224 = !DILocalVariable(name: "thread", arg: 1, scope: !13225, file: !2052, line: 250, type: !1953)
!13225 = distinct !DISubprogram(name: "queue_thread", scope: !2052, file: !2052, line: 250, type: !12759, scopeLine: 251, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1950, retainedNodes: !223)
!13226 = !DILocation(line: 250, column: 57, scope: !13225, inlinedAt: !13227)
!13227 = distinct !DILocation(line: 398, column: 2, scope: !13184)
!13228 = !DILocation(line: 252, column: 2, scope: !13225, inlinedAt: !13227)
!13229 = !DILocation(line: 252, column: 10, scope: !13225, inlinedAt: !13227)
!13230 = !DILocation(line: 252, column: 15, scope: !13225, inlinedAt: !13227)
!13231 = !DILocation(line: 252, column: 28, scope: !13225, inlinedAt: !13227)
!13232 = !DILocation(line: 253, column: 26, scope: !13233, inlinedAt: !13227)
!13233 = distinct !DILexicalBlock(scope: !13225, file: !2052, line: 253, column: 6)
!13234 = !DILocation(line: 253, column: 6, scope: !13233, inlinedAt: !13227)
!13235 = !DILocation(line: 253, column: 6, scope: !13225, inlinedAt: !13227)
!13236 = !DILocation(line: 254, column: 12, scope: !13237, inlinedAt: !13227)
!13237 = distinct !DILexicalBlock(scope: !13233, file: !2052, line: 253, column: 35)
!13238 = !DILocalVariable(name: "thread", arg: 1, scope: !13239, file: !2052, line: 227, type: !1953)
!13239 = distinct !DISubprogram(name: "runq_add", scope: !2052, file: !2052, line: 227, type: !12759, scopeLine: 228, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1950, retainedNodes: !223)
!13240 = !DILocation(line: 227, column: 53, scope: !13239, inlinedAt: !13241)
!13241 = distinct !DILocation(line: 254, column: 3, scope: !13237, inlinedAt: !13227)
!13242 = !DILocation(line: 229, column: 28, scope: !13239, inlinedAt: !13241)
!13243 = !DILocation(line: 199, column: 57, scope: !13213, inlinedAt: !13244)
!13244 = distinct !DILocation(line: 229, column: 16, scope: !13239, inlinedAt: !13241)
!13245 = !DILocation(line: 229, column: 37, scope: !13239, inlinedAt: !13241)
!13246 = !DILocalVariable(name: "pq", arg: 1, scope: !13247, file: !2052, line: 181, type: !13250)
!13247 = distinct !DISubprogram(name: "z_priq_dumb_add", scope: !2052, file: !2052, line: 181, type: !13248, scopeLine: 183, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1950, retainedNodes: !223)
!13248 = !DISubroutineType(types: !13249)
!13249 = !{null, !13250, !1953}
!13250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1989, size: 32)
!13251 = !DILocation(line: 181, column: 56, scope: !13247, inlinedAt: !13252)
!13252 = distinct !DILocation(line: 229, column: 2, scope: !13239, inlinedAt: !13241)
!13253 = !DILocalVariable(name: "thread", arg: 2, scope: !13247, file: !2052, line: 182, type: !1953)
!13254 = !DILocation(line: 182, column: 25, scope: !13247, inlinedAt: !13252)
!13255 = !DILocalVariable(name: "t", scope: !13247, file: !2052, line: 184, type: !1953)
!13256 = !DILocation(line: 184, column: 19, scope: !13247, inlinedAt: !13252)
!13257 = !DILocation(line: 188, column: 2, scope: !13258, inlinedAt: !13252)
!13258 = distinct !DILexicalBlock(scope: !13247, file: !2052, line: 188, column: 2)
!13259 = !DILocation(line: 188, column: 2, scope: !13260, inlinedAt: !13252)
!13260 = distinct !DILexicalBlock(scope: !13258, file: !2052, line: 188, column: 2)
!13261 = !DILocation(line: 189, column: 24, scope: !13262, inlinedAt: !13252)
!13262 = distinct !DILexicalBlock(scope: !13263, file: !2052, line: 189, column: 7)
!13263 = distinct !DILexicalBlock(scope: !13260, file: !2052, line: 188, column: 56)
!13264 = !DILocation(line: 189, column: 32, scope: !13262, inlinedAt: !13252)
!13265 = !DILocation(line: 189, column: 7, scope: !13262, inlinedAt: !13252)
!13266 = !DILocation(line: 189, column: 35, scope: !13262, inlinedAt: !13252)
!13267 = !DILocation(line: 189, column: 7, scope: !13263, inlinedAt: !13252)
!13268 = !DILocation(line: 190, column: 22, scope: !13269, inlinedAt: !13252)
!13269 = distinct !DILexicalBlock(scope: !13262, file: !2052, line: 189, column: 40)
!13270 = !DILocation(line: 190, column: 25, scope: !13269, inlinedAt: !13252)
!13271 = !DILocation(line: 190, column: 30, scope: !13269, inlinedAt: !13252)
!13272 = !DILocation(line: 191, column: 8, scope: !13269, inlinedAt: !13252)
!13273 = !DILocation(line: 191, column: 16, scope: !13269, inlinedAt: !13252)
!13274 = !DILocation(line: 191, column: 21, scope: !13269, inlinedAt: !13252)
!13275 = !DILocation(line: 190, column: 4, scope: !13269, inlinedAt: !13252)
!13276 = !DILocation(line: 192, column: 4, scope: !13269, inlinedAt: !13252)
!13277 = distinct !{!13277, !13257, !13278}
!13278 = !DILocation(line: 194, column: 2, scope: !13258, inlinedAt: !13252)
!13279 = !DILocation(line: 196, column: 19, scope: !13247, inlinedAt: !13252)
!13280 = !DILocation(line: 196, column: 24, scope: !13247, inlinedAt: !13252)
!13281 = !DILocation(line: 196, column: 32, scope: !13247, inlinedAt: !13252)
!13282 = !DILocation(line: 196, column: 37, scope: !13247, inlinedAt: !13252)
!13283 = !DILocation(line: 196, column: 2, scope: !13247, inlinedAt: !13252)
!13284 = !DILocation(line: 197, column: 1, scope: !13247, inlinedAt: !13252)
!13285 = !DILocation(line: 255, column: 2, scope: !13237, inlinedAt: !13227)
!13286 = !DILocation(line: 399, column: 15, scope: !13184)
!13287 = !DILocation(line: 399, column: 25, scope: !13184)
!13288 = !DILocation(line: 399, column: 22, scope: !13184)
!13289 = !DILocation(line: 399, column: 2, scope: !13184)
!13290 = !DILocation(line: 400, column: 1, scope: !13184)
!13291 = distinct !DISubprogram(name: "z_is_thread_queued", scope: !11628, file: !11628, line: 136, type: !13128, scopeLine: 137, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1950, retainedNodes: !223)
!13292 = !DILocalVariable(name: "thread", arg: 1, scope: !13291, file: !11628, line: 136, type: !1953)
!13293 = !DILocation(line: 136, column: 56, scope: !13291)
!13294 = !DILocation(line: 138, column: 31, scope: !13291)
!13295 = !DILocation(line: 138, column: 9, scope: !13291)
!13296 = !DILocation(line: 138, column: 2, scope: !13291)
!13297 = distinct !DISubprogram(name: "should_queue_thread", scope: !2052, file: !2052, line: 245, type: !13128, scopeLine: 246, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1950, retainedNodes: !223)
!13298 = !DILocalVariable(name: "th", arg: 1, scope: !13297, file: !2052, line: 245, type: !1953)
!13299 = !DILocation(line: 245, column: 57, scope: !13297)
!13300 = !DILocation(line: 247, column: 2, scope: !13297)
!13301 = distinct !DISubprogram(name: "z_priq_dumb_remove", scope: !2052, file: !2052, line: 1137, type: !13248, scopeLine: 1138, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1950, retainedNodes: !223)
!13302 = !DILocalVariable(name: "pq", arg: 1, scope: !13301, file: !2052, line: 1137, type: !13250)
!13303 = !DILocation(line: 1137, column: 38, scope: !13301)
!13304 = !DILocalVariable(name: "thread", arg: 2, scope: !13301, file: !2052, line: 1137, type: !1953)
!13305 = !DILocation(line: 1137, column: 59, scope: !13301)
!13306 = !DILocation(line: 1141, column: 20, scope: !13301)
!13307 = !DILocation(line: 1141, column: 28, scope: !13301)
!13308 = !DILocation(line: 1141, column: 33, scope: !13301)
!13309 = !DILocation(line: 1141, column: 2, scope: !13301)
!13310 = !DILocation(line: 1142, column: 1, scope: !13301)
!13311 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !124, file: !124, line: 294, type: !13312, scopeLine: 295, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1950, retainedNodes: !223)
!13312 = !DISubroutineType(types: !13313)
!13313 = !{!2048, !13250}
!13314 = !DILocalVariable(name: "list", arg: 1, scope: !13311, file: !124, line: 294, type: !13250)
!13315 = !DILocation(line: 294, column: 61, scope: !13311)
!13316 = !DILocation(line: 296, column: 28, scope: !13311)
!13317 = !DILocation(line: 296, column: 9, scope: !13311)
!13318 = !DILocation(line: 296, column: 43, scope: !13311)
!13319 = !DILocation(line: 296, column: 49, scope: !13311)
!13320 = !DILocation(line: 296, column: 2, scope: !13311)
!13321 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !124, file: !124, line: 443, type: !13322, scopeLine: 444, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1950, retainedNodes: !223)
!13322 = !DISubroutineType(types: !13323)
!13323 = !{null, !2048, !2048}
!13324 = !DILocalVariable(name: "successor", arg: 1, scope: !13321, file: !124, line: 443, type: !2048)
!13325 = !DILocation(line: 443, column: 50, scope: !13321)
!13326 = !DILocalVariable(name: "node", arg: 2, scope: !13321, file: !124, line: 443, type: !2048)
!13327 = !DILocation(line: 443, column: 74, scope: !13321)
!13328 = !DILocalVariable(name: "prev", scope: !13321, file: !124, line: 445, type: !13329)
!13329 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2048)
!13330 = !DILocation(line: 445, column: 21, scope: !13321)
!13331 = !DILocation(line: 445, column: 28, scope: !13321)
!13332 = !DILocation(line: 445, column: 39, scope: !13321)
!13333 = !DILocation(line: 447, column: 15, scope: !13321)
!13334 = !DILocation(line: 447, column: 2, scope: !13321)
!13335 = !DILocation(line: 447, column: 8, scope: !13321)
!13336 = !DILocation(line: 447, column: 13, scope: !13321)
!13337 = !DILocation(line: 448, column: 15, scope: !13321)
!13338 = !DILocation(line: 448, column: 2, scope: !13321)
!13339 = !DILocation(line: 448, column: 8, scope: !13321)
!13340 = !DILocation(line: 448, column: 13, scope: !13321)
!13341 = !DILocation(line: 449, column: 15, scope: !13321)
!13342 = !DILocation(line: 449, column: 2, scope: !13321)
!13343 = !DILocation(line: 449, column: 8, scope: !13321)
!13344 = !DILocation(line: 449, column: 13, scope: !13321)
!13345 = !DILocation(line: 450, column: 20, scope: !13321)
!13346 = !DILocation(line: 450, column: 2, scope: !13321)
!13347 = !DILocation(line: 450, column: 13, scope: !13321)
!13348 = !DILocation(line: 450, column: 18, scope: !13321)
!13349 = !DILocation(line: 451, column: 1, scope: !13321)
!13350 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !124, file: !124, line: 341, type: !13351, scopeLine: 343, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1950, retainedNodes: !223)
!13351 = !DISubroutineType(types: !13352)
!13352 = !{!2048, !13250, !2048}
!13353 = !DILocalVariable(name: "list", arg: 1, scope: !13350, file: !124, line: 341, type: !13250)
!13354 = !DILocation(line: 341, column: 61, scope: !13350)
!13355 = !DILocalVariable(name: "node", arg: 2, scope: !13350, file: !124, line: 342, type: !2048)
!13356 = !DILocation(line: 342, column: 26, scope: !13350)
!13357 = !DILocation(line: 344, column: 10, scope: !13350)
!13358 = !DILocation(line: 344, column: 15, scope: !13350)
!13359 = !DILocation(line: 344, column: 9, scope: !13350)
!13360 = !DILocation(line: 344, column: 55, scope: !13350)
!13361 = !DILocation(line: 344, column: 61, scope: !13350)
!13362 = !DILocation(line: 344, column: 26, scope: !13350)
!13363 = !DILocation(line: 344, column: 2, scope: !13350)
!13364 = distinct !DISubprogram(name: "sys_dlist_append", scope: !124, file: !124, line: 404, type: !13365, scopeLine: 405, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1950, retainedNodes: !223)
!13365 = !DISubroutineType(types: !13366)
!13366 = !{null, !13250, !2048}
!13367 = !DILocalVariable(name: "list", arg: 1, scope: !13364, file: !124, line: 404, type: !13250)
!13368 = !DILocation(line: 404, column: 50, scope: !13364)
!13369 = !DILocalVariable(name: "node", arg: 2, scope: !13364, file: !124, line: 404, type: !2048)
!13370 = !DILocation(line: 404, column: 69, scope: !13364)
!13371 = !DILocalVariable(name: "tail", scope: !13364, file: !124, line: 406, type: !13329)
!13372 = !DILocation(line: 406, column: 21, scope: !13364)
!13373 = !DILocation(line: 406, column: 28, scope: !13364)
!13374 = !DILocation(line: 406, column: 34, scope: !13364)
!13375 = !DILocation(line: 408, column: 15, scope: !13364)
!13376 = !DILocation(line: 408, column: 2, scope: !13364)
!13377 = !DILocation(line: 408, column: 8, scope: !13364)
!13378 = !DILocation(line: 408, column: 13, scope: !13364)
!13379 = !DILocation(line: 409, column: 15, scope: !13364)
!13380 = !DILocation(line: 409, column: 2, scope: !13364)
!13381 = !DILocation(line: 409, column: 8, scope: !13364)
!13382 = !DILocation(line: 409, column: 13, scope: !13364)
!13383 = !DILocation(line: 411, column: 15, scope: !13364)
!13384 = !DILocation(line: 411, column: 2, scope: !13364)
!13385 = !DILocation(line: 411, column: 8, scope: !13364)
!13386 = !DILocation(line: 411, column: 13, scope: !13364)
!13387 = !DILocation(line: 412, column: 15, scope: !13364)
!13388 = !DILocation(line: 412, column: 2, scope: !13364)
!13389 = !DILocation(line: 412, column: 8, scope: !13364)
!13390 = !DILocation(line: 412, column: 13, scope: !13364)
!13391 = !DILocation(line: 413, column: 1, scope: !13364)
!13392 = distinct !DISubprogram(name: "update_cache", scope: !2052, file: !2052, line: 559, type: !11567, scopeLine: 560, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1950, retainedNodes: !223)
!13393 = !DILocalVariable(name: "preempt_ok", arg: 1, scope: !13392, file: !2052, line: 559, type: !103)
!13394 = !DILocation(line: 559, column: 30, scope: !13392)
!13395 = !DILocalVariable(name: "thread", scope: !13392, file: !2052, line: 562, type: !1953)
!13396 = !DILocation(line: 562, column: 19, scope: !13392)
!13397 = !DILocalVariable(name: "thread", scope: !13398, file: !2052, line: 314, type: !1953)
!13398 = distinct !DISubprogram(name: "next_up", scope: !2052, file: !2052, line: 312, type: !13399, scopeLine: 313, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1950, retainedNodes: !223)
!13399 = !DISubroutineType(types: !13400)
!13400 = !{!1953}
!13401 = !DILocation(line: 314, column: 19, scope: !13398, inlinedAt: !13402)
!13402 = distinct !DILocation(line: 562, column: 28, scope: !13392)
!13403 = !DILocation(line: 239, column: 24, scope: !13404, inlinedAt: !13405)
!13404 = distinct !DISubprogram(name: "runq_best", scope: !2052, file: !2052, line: 237, type: !13399, scopeLine: 238, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1950, retainedNodes: !223)
!13405 = distinct !DILocation(line: 314, column: 28, scope: !13398, inlinedAt: !13402)
!13406 = !DILocation(line: 239, column: 9, scope: !13404, inlinedAt: !13405)
!13407 = !DILocation(line: 340, column: 10, scope: !13398, inlinedAt: !13402)
!13408 = !DILocation(line: 340, column: 17, scope: !13398, inlinedAt: !13402)
!13409 = !DILocation(line: 340, column: 9, scope: !13398, inlinedAt: !13402)
!13410 = !DILocation(line: 340, column: 28, scope: !13398, inlinedAt: !13402)
!13411 = !DILocation(line: 340, column: 51, scope: !13398, inlinedAt: !13402)
!13412 = !DILocation(line: 564, column: 21, scope: !13413)
!13413 = distinct !DILexicalBlock(scope: !13392, file: !2052, line: 564, column: 6)
!13414 = !DILocation(line: 564, column: 29, scope: !13413)
!13415 = !DILocalVariable(name: "thread", arg: 1, scope: !13416, file: !2052, line: 127, type: !1953)
!13416 = distinct !DISubprogram(name: "should_preempt", scope: !2052, file: !2052, line: 127, type: !13417, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1950, retainedNodes: !223)
!13417 = !DISubroutineType(types: !13418)
!13418 = !{!743, !1953, !103}
!13419 = !DILocation(line: 127, column: 59, scope: !13416, inlinedAt: !13420)
!13420 = distinct !DILocation(line: 564, column: 6, scope: !13413)
!13421 = !DILocalVariable(name: "preempt_ok", arg: 2, scope: !13416, file: !2052, line: 128, type: !103)
!13422 = !DILocation(line: 128, column: 11, scope: !13416, inlinedAt: !13420)
!13423 = !DILocation(line: 133, column: 6, scope: !13424, inlinedAt: !13420)
!13424 = distinct !DILexicalBlock(scope: !13416, file: !2052, line: 133, column: 6)
!13425 = !DILocation(line: 133, column: 17, scope: !13424, inlinedAt: !13420)
!13426 = !DILocation(line: 133, column: 6, scope: !13416, inlinedAt: !13420)
!13427 = !DILocation(line: 134, column: 3, scope: !13428, inlinedAt: !13420)
!13428 = distinct !DILexicalBlock(scope: !13424, file: !2052, line: 133, column: 23)
!13429 = !DILocation(line: 140, column: 41, scope: !13430, inlinedAt: !13420)
!13430 = distinct !DILexicalBlock(scope: !13416, file: !2052, line: 140, column: 6)
!13431 = !DILocation(line: 140, column: 6, scope: !13430, inlinedAt: !13420)
!13432 = !DILocation(line: 140, column: 6, scope: !13416, inlinedAt: !13420)
!13433 = !DILocation(line: 141, column: 3, scope: !13434, inlinedAt: !13420)
!13434 = distinct !DILexicalBlock(scope: !13430, file: !2052, line: 140, column: 52)
!13435 = !DILocation(line: 150, column: 36, scope: !13436, inlinedAt: !13420)
!13436 = distinct !DILexicalBlock(scope: !13416, file: !2052, line: 149, column: 6)
!13437 = !DILocation(line: 150, column: 9, scope: !13436, inlinedAt: !13420)
!13438 = !DILocation(line: 149, column: 6, scope: !13416, inlinedAt: !13420)
!13439 = !DILocation(line: 151, column: 3, scope: !13440, inlinedAt: !13420)
!13440 = distinct !DILexicalBlock(scope: !13436, file: !2052, line: 150, column: 45)
!13441 = !DILocation(line: 157, column: 17, scope: !13442, inlinedAt: !13420)
!13442 = distinct !DILexicalBlock(scope: !13416, file: !2052, line: 157, column: 6)
!13443 = !DILocation(line: 157, column: 6, scope: !13442, inlinedAt: !13420)
!13444 = !DILocation(line: 157, column: 27, scope: !13442, inlinedAt: !13420)
!13445 = !DILocation(line: 157, column: 41, scope: !13442, inlinedAt: !13420)
!13446 = !DILocation(line: 157, column: 30, scope: !13442, inlinedAt: !13420)
!13447 = !DILocation(line: 157, column: 6, scope: !13416, inlinedAt: !13420)
!13448 = !DILocation(line: 158, column: 3, scope: !13449, inlinedAt: !13420)
!13449 = distinct !DILexicalBlock(scope: !13442, file: !2052, line: 157, column: 50)
!13450 = !DILocation(line: 161, column: 2, scope: !13416, inlinedAt: !13420)
!13451 = !DILocation(line: 162, column: 1, scope: !13416, inlinedAt: !13420)
!13452 = !DILocation(line: 564, column: 6, scope: !13392)
!13453 = !DILocation(line: 566, column: 7, scope: !13454)
!13454 = distinct !DILexicalBlock(scope: !13455, file: !2052, line: 566, column: 7)
!13455 = distinct !DILexicalBlock(scope: !13413, file: !2052, line: 564, column: 42)
!13456 = !DILocation(line: 566, column: 17, scope: !13454)
!13457 = !DILocation(line: 566, column: 14, scope: !13454)
!13458 = !DILocation(line: 566, column: 7, scope: !13455)
!13459 = !DILocation(line: 567, column: 23, scope: !13460)
!13460 = distinct !DILexicalBlock(scope: !13454, file: !2052, line: 566, column: 27)
!13461 = !DILocation(line: 567, column: 4, scope: !13460)
!13462 = !DILocation(line: 568, column: 3, scope: !13460)
!13463 = !DILocation(line: 570, column: 26, scope: !13455)
!13464 = !DILocation(line: 570, column: 3, scope: !13455)
!13465 = !DILocation(line: 571, column: 27, scope: !13455)
!13466 = !DILocation(line: 571, column: 25, scope: !13455)
!13467 = !DILocation(line: 572, column: 2, scope: !13455)
!13468 = !DILocation(line: 573, column: 27, scope: !13469)
!13469 = distinct !DILexicalBlock(scope: !13413, file: !2052, line: 572, column: 9)
!13470 = !DILocation(line: 573, column: 25, scope: !13469)
!13471 = !DILocation(line: 585, column: 1, scope: !13392)
!13472 = distinct !DISubprogram(name: "z_priq_dumb_best", scope: !2052, file: !2052, line: 1144, type: !13473, scopeLine: 1145, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1950, retainedNodes: !223)
!13473 = !DISubroutineType(types: !13474)
!13474 = !{!1953, !13250}
!13475 = !DILocalVariable(name: "pq", arg: 1, scope: !13472, file: !2052, line: 1144, type: !13250)
!13476 = !DILocation(line: 1144, column: 48, scope: !13472)
!13477 = !DILocalVariable(name: "thread", scope: !13472, file: !2052, line: 1146, type: !1953)
!13478 = !DILocation(line: 1146, column: 19, scope: !13472)
!13479 = !DILocalVariable(name: "n", scope: !13472, file: !2052, line: 1147, type: !2048)
!13480 = !DILocation(line: 1147, column: 15, scope: !13472)
!13481 = !DILocation(line: 1147, column: 39, scope: !13472)
!13482 = !DILocation(line: 1147, column: 19, scope: !13472)
!13483 = !DILocation(line: 1149, column: 6, scope: !13484)
!13484 = distinct !DILexicalBlock(scope: !13472, file: !2052, line: 1149, column: 6)
!13485 = !DILocation(line: 1149, column: 8, scope: !13484)
!13486 = !DILocation(line: 1149, column: 6, scope: !13472)
!13487 = !DILocation(line: 1150, column: 12, scope: !13488)
!13488 = distinct !DILexicalBlock(scope: !13484, file: !2052, line: 1149, column: 17)
!13489 = !DILocation(line: 1150, column: 10, scope: !13488)
!13490 = !DILocation(line: 1151, column: 2, scope: !13488)
!13491 = !DILocation(line: 1152, column: 9, scope: !13472)
!13492 = !DILocation(line: 1152, column: 2, scope: !13472)
!13493 = distinct !DISubprogram(name: "z_is_thread_timeout_active", scope: !11628, file: !11628, line: 115, type: !13128, scopeLine: 116, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1950, retainedNodes: !223)
!13494 = !DILocalVariable(name: "thread", arg: 1, scope: !13493, file: !11628, line: 115, type: !1953)
!13495 = !DILocation(line: 115, column: 64, scope: !13493)
!13496 = !DILocation(line: 117, column: 33, scope: !13493)
!13497 = !DILocation(line: 117, column: 41, scope: !13493)
!13498 = !DILocation(line: 117, column: 46, scope: !13493)
!13499 = !DILocation(line: 117, column: 10, scope: !13493)
!13500 = !DILocation(line: 117, column: 9, scope: !13493)
!13501 = !DILocation(line: 117, column: 2, scope: !13493)
!13502 = distinct !DISubprogram(name: "is_preempt", scope: !2052, file: !2052, line: 62, type: !12780, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1950, retainedNodes: !223)
!13503 = !DILocalVariable(name: "thread", arg: 1, scope: !13502, file: !2052, line: 62, type: !1953)
!13504 = !DILocation(line: 62, column: 47, scope: !13502)
!13505 = !DILocation(line: 65, column: 9, scope: !13502)
!13506 = !DILocation(line: 65, column: 17, scope: !13502)
!13507 = !DILocation(line: 65, column: 22, scope: !13502)
!13508 = !DILocation(line: 65, column: 30, scope: !13502)
!13509 = !DILocation(line: 65, column: 2, scope: !13502)
!13510 = distinct !DISubprogram(name: "is_metairq", scope: !2052, file: !2052, line: 68, type: !12780, scopeLine: 69, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1950, retainedNodes: !223)
!13511 = !DILocalVariable(name: "thread", arg: 1, scope: !13510, file: !2052, line: 68, type: !1953)
!13512 = !DILocation(line: 68, column: 47, scope: !13510)
!13513 = !DILocation(line: 74, column: 2, scope: !13510)
!13514 = distinct !DISubprogram(name: "update_metairq_preempt", scope: !2052, file: !2052, line: 545, type: !12759, scopeLine: 546, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1950, retainedNodes: !223)
!13515 = !DILocalVariable(name: "thread", arg: 1, scope: !13514, file: !2052, line: 545, type: !1953)
!13516 = !DILocation(line: 545, column: 53, scope: !13514)
!13517 = !DILocation(line: 557, column: 1, scope: !13514)
!13518 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !12222, file: !12222, line: 35, type: !13519, scopeLine: 36, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1950, retainedNodes: !223)
!13519 = !DISubroutineType(types: !13520)
!13520 = !{!743, !13521}
!13521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13522, size: 32)
!13522 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2004)
!13523 = !DILocalVariable(name: "to", arg: 1, scope: !13518, file: !12222, line: 35, type: !13521)
!13524 = !DILocation(line: 35, column: 65, scope: !13518)
!13525 = !DILocation(line: 37, column: 31, scope: !13518)
!13526 = !DILocation(line: 37, column: 35, scope: !13518)
!13527 = !DILocation(line: 37, column: 10, scope: !13518)
!13528 = !DILocation(line: 37, column: 9, scope: !13518)
!13529 = !DILocation(line: 37, column: 2, scope: !13518)
!13530 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !124, file: !124, line: 225, type: !13531, scopeLine: 226, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1950, retainedNodes: !223)
!13531 = !DISubroutineType(types: !13532)
!13532 = !{!743, !13533}
!13533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13534, size: 32)
!13534 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1963)
!13535 = !DILocalVariable(name: "node", arg: 1, scope: !13530, file: !124, line: 225, type: !13533)
!13536 = !DILocation(line: 225, column: 59, scope: !13530)
!13537 = !DILocation(line: 227, column: 9, scope: !13530)
!13538 = !DILocation(line: 227, column: 15, scope: !13530)
!13539 = !DILocation(line: 227, column: 20, scope: !13530)
!13540 = !DILocation(line: 227, column: 2, scope: !13530)
!13541 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !124, file: !124, line: 325, type: !13351, scopeLine: 327, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1950, retainedNodes: !223)
!13542 = !DILocalVariable(name: "list", arg: 1, scope: !13541, file: !124, line: 325, type: !13250)
!13543 = !DILocation(line: 325, column: 70, scope: !13541)
!13544 = !DILocalVariable(name: "node", arg: 2, scope: !13541, file: !124, line: 326, type: !2048)
!13545 = !DILocation(line: 326, column: 21, scope: !13541)
!13546 = !DILocation(line: 328, column: 10, scope: !13541)
!13547 = !DILocation(line: 328, column: 18, scope: !13541)
!13548 = !DILocation(line: 328, column: 24, scope: !13541)
!13549 = !DILocation(line: 328, column: 15, scope: !13541)
!13550 = !DILocation(line: 328, column: 9, scope: !13541)
!13551 = !DILocation(line: 328, column: 39, scope: !13541)
!13552 = !DILocation(line: 328, column: 45, scope: !13541)
!13553 = !DILocation(line: 328, column: 2, scope: !13541)
!13554 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !124, file: !124, line: 266, type: !13555, scopeLine: 267, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1950, retainedNodes: !223)
!13555 = !DISubroutineType(types: !13556)
!13556 = !{!743, !13250}
!13557 = !DILocalVariable(name: "list", arg: 1, scope: !13554, file: !124, line: 266, type: !13250)
!13558 = !DILocation(line: 266, column: 52, scope: !13554)
!13559 = !DILocation(line: 268, column: 9, scope: !13554)
!13560 = !DILocation(line: 268, column: 15, scope: !13554)
!13561 = !DILocation(line: 268, column: 23, scope: !13554)
!13562 = !DILocation(line: 268, column: 20, scope: !13554)
!13563 = !DILocation(line: 268, column: 2, scope: !13554)
!13564 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !124, file: !124, line: 496, type: !13565, scopeLine: 497, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1950, retainedNodes: !223)
!13565 = !DISubroutineType(types: !13566)
!13566 = !{null, !2048}
!13567 = !DILocalVariable(name: "node", arg: 1, scope: !13564, file: !124, line: 496, type: !2048)
!13568 = !DILocation(line: 496, column: 50, scope: !13564)
!13569 = !DILocalVariable(name: "prev", scope: !13564, file: !124, line: 498, type: !13329)
!13570 = !DILocation(line: 498, column: 21, scope: !13564)
!13571 = !DILocation(line: 498, column: 28, scope: !13564)
!13572 = !DILocation(line: 498, column: 34, scope: !13564)
!13573 = !DILocalVariable(name: "next", scope: !13564, file: !124, line: 499, type: !13329)
!13574 = !DILocation(line: 499, column: 21, scope: !13564)
!13575 = !DILocation(line: 499, column: 28, scope: !13564)
!13576 = !DILocation(line: 499, column: 34, scope: !13564)
!13577 = !DILocation(line: 501, column: 15, scope: !13564)
!13578 = !DILocation(line: 501, column: 2, scope: !13564)
!13579 = !DILocation(line: 501, column: 8, scope: !13564)
!13580 = !DILocation(line: 501, column: 13, scope: !13564)
!13581 = !DILocation(line: 502, column: 15, scope: !13564)
!13582 = !DILocation(line: 502, column: 2, scope: !13564)
!13583 = !DILocation(line: 502, column: 8, scope: !13564)
!13584 = !DILocation(line: 502, column: 13, scope: !13564)
!13585 = !DILocation(line: 503, column: 17, scope: !13564)
!13586 = !DILocation(line: 503, column: 2, scope: !13564)
!13587 = !DILocation(line: 504, column: 1, scope: !13564)
!13588 = distinct !DISubprogram(name: "sys_dnode_init", scope: !124, file: !124, line: 211, type: !13565, scopeLine: 212, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1950, retainedNodes: !223)
!13589 = !DILocalVariable(name: "node", arg: 1, scope: !13588, file: !124, line: 211, type: !2048)
!13590 = !DILocation(line: 211, column: 48, scope: !13588)
!13591 = !DILocation(line: 213, column: 2, scope: !13588)
!13592 = !DILocation(line: 213, column: 8, scope: !13588)
!13593 = !DILocation(line: 213, column: 13, scope: !13588)
!13594 = !DILocation(line: 214, column: 2, scope: !13588)
!13595 = !DILocation(line: 214, column: 8, scope: !13588)
!13596 = !DILocation(line: 214, column: 13, scope: !13588)
!13597 = !DILocation(line: 215, column: 1, scope: !13588)
!13598 = distinct !DISubprogram(name: "z_is_thread_state_set", scope: !11628, file: !11628, line: 131, type: !13599, scopeLine: 132, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1950, retainedNodes: !223)
!13599 = !DISubroutineType(types: !13600)
!13600 = !{!743, !1953, !173}
!13601 = !DILocalVariable(name: "thread", arg: 1, scope: !13598, file: !11628, line: 131, type: !1953)
!13602 = !DILocation(line: 131, column: 59, scope: !13598)
!13603 = !DILocalVariable(name: "state", arg: 2, scope: !13598, file: !11628, line: 131, type: !173)
!13604 = !DILocation(line: 131, column: 76, scope: !13598)
!13605 = !DILocation(line: 133, column: 10, scope: !13598)
!13606 = !DILocation(line: 133, column: 18, scope: !13598)
!13607 = !DILocation(line: 133, column: 23, scope: !13598)
!13608 = !DILocation(line: 133, column: 38, scope: !13598)
!13609 = !DILocation(line: 133, column: 36, scope: !13598)
!13610 = !DILocation(line: 133, column: 45, scope: !13598)
!13611 = !DILocation(line: 133, column: 2, scope: !13598)
!13612 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !11628, file: !11628, line: 211, type: !13613, scopeLine: 212, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1950, retainedNodes: !223)
!13613 = !DISubroutineType(types: !13614)
!13614 = !{!743, !103, !103}
!13615 = !DILocalVariable(name: "prio", arg: 1, scope: !13612, file: !11628, line: 211, type: !103)
!13616 = !DILocation(line: 211, column: 41, scope: !13612)
!13617 = !DILocalVariable(name: "test_prio", arg: 2, scope: !13612, file: !11628, line: 211, type: !103)
!13618 = !DILocation(line: 211, column: 51, scope: !13612)
!13619 = !DILocation(line: 213, column: 38, scope: !13612)
!13620 = !DILocation(line: 213, column: 44, scope: !13612)
!13621 = !DILocation(line: 213, column: 9, scope: !13612)
!13622 = !DILocation(line: 213, column: 2, scope: !13612)
!13623 = distinct !DISubprogram(name: "z_is_idle_thread_object", scope: !11628, file: !11628, line: 83, type: !13128, scopeLine: 84, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1950, retainedNodes: !223)
!13624 = !DILocalVariable(name: "thread", arg: 1, scope: !13623, file: !11628, line: 83, type: !1953)
!13625 = !DILocation(line: 83, column: 61, scope: !13623)
!13626 = !DILocation(line: 89, column: 9, scope: !13623)
!13627 = !DILocation(line: 89, column: 16, scope: !13623)
!13628 = !DILocation(line: 89, column: 2, scope: !13623)
!13629 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !11628, file: !11628, line: 206, type: !13613, scopeLine: 207, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1950, retainedNodes: !223)
!13630 = !DILocalVariable(name: "prio1", arg: 1, scope: !13629, file: !11628, line: 206, type: !103)
!13631 = !DILocation(line: 206, column: 53, scope: !13629)
!13632 = !DILocalVariable(name: "prio2", arg: 2, scope: !13629, file: !11628, line: 206, type: !103)
!13633 = !DILocation(line: 206, column: 64, scope: !13629)
!13634 = !DILocation(line: 208, column: 9, scope: !13629)
!13635 = !DILocation(line: 208, column: 17, scope: !13629)
!13636 = !DILocation(line: 208, column: 15, scope: !13629)
!13637 = !DILocation(line: 208, column: 2, scope: !13629)
!13638 = distinct !DISubprogram(name: "z_ready_thread", scope: !2052, file: !2052, line: 635, type: !12759, scopeLine: 636, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1950, retainedNodes: !223)
!13639 = !DILocalVariable(name: "thread", arg: 1, scope: !13638, file: !2052, line: 635, type: !1953)
!13640 = !DILocation(line: 635, column: 38, scope: !13638)
!13641 = !DILocalVariable(name: "__i", scope: !13642, file: !2052, line: 637, type: !12798)
!13642 = distinct !DILexicalBlock(scope: !13638, file: !2052, line: 637, column: 2)
!13643 = !DILocation(line: 637, column: 2, scope: !13642)
!13644 = !DILocalVariable(name: "__key", scope: !13642, file: !2052, line: 637, type: !12798)
!13645 = !DILocation(line: 136, column: 70, scope: !12805, inlinedAt: !13646)
!13646 = distinct !DILocation(line: 637, column: 2, scope: !13642)
!13647 = !DILocation(line: 138, column: 2, scope: !12805, inlinedAt: !13646)
!13648 = !DILocation(line: 139, column: 19, scope: !12805, inlinedAt: !13646)
!13649 = !DILocation(line: 44, column: 15, scope: !12815, inlinedAt: !13650)
!13650 = distinct !DILocation(line: 145, column: 10, scope: !12805, inlinedAt: !13646)
!13651 = !DILocation(line: 53, column: 15, scope: !12815, inlinedAt: !13650)
!13652 = !DILocation(line: 55, column: 2, scope: !12815, inlinedAt: !13650)
!13653 = !DILocation(line: 76, column: 9, scope: !12815, inlinedAt: !13650)
!13654 = !DILocation(line: 145, column: 4, scope: !12805, inlinedAt: !13646)
!13655 = !DILocation(line: 145, column: 8, scope: !12805, inlinedAt: !13646)
!13656 = !DILocation(line: 165, column: 2, scope: !12805, inlinedAt: !13646)
!13657 = !DILocation(line: 637, column: 2, scope: !13658)
!13658 = distinct !DILexicalBlock(scope: !13642, file: !2052, line: 637, column: 2)
!13659 = !DILocation(line: 638, column: 32, scope: !13660)
!13660 = distinct !DILexicalBlock(scope: !13661, file: !2052, line: 638, column: 7)
!13661 = distinct !DILexicalBlock(scope: !13658, file: !2052, line: 637, column: 26)
!13662 = !DILocation(line: 638, column: 8, scope: !13660)
!13663 = !DILocation(line: 638, column: 7, scope: !13661)
!13664 = !DILocation(line: 639, column: 17, scope: !13665)
!13665 = distinct !DILexicalBlock(scope: !13660, file: !2052, line: 638, column: 41)
!13666 = !DILocation(line: 639, column: 4, scope: !13665)
!13667 = !DILocation(line: 640, column: 3, scope: !13665)
!13668 = !DILocation(line: 641, column: 2, scope: !13661)
!13669 = !DILocation(line: 189, column: 60, scope: !12847, inlinedAt: !13670)
!13670 = distinct !DILocation(line: 637, column: 2, scope: !13658)
!13671 = !DILocation(line: 190, column: 23, scope: !12847, inlinedAt: !13670)
!13672 = !DILocation(line: 192, column: 2, scope: !12847, inlinedAt: !13670)
!13673 = !DILocation(line: 215, column: 22, scope: !12847, inlinedAt: !13670)
!13674 = !DILocation(line: 84, column: 56, scope: !12857, inlinedAt: !13675)
!13675 = distinct !DILocation(line: 215, column: 2, scope: !12847, inlinedAt: !13670)
!13676 = !DILocation(line: 98, column: 12, scope: !12857, inlinedAt: !13675)
!13677 = !DILocation(line: 95, column: 2, scope: !12857, inlinedAt: !13675)
!13678 = distinct !{!13678, !13643, !13679}
!13679 = !DILocation(line: 641, column: 2, scope: !13642)
!13680 = !DILocation(line: 642, column: 1, scope: !13638)
!13681 = distinct !DISubprogram(name: "thread_active_elsewhere", scope: !2052, file: !2052, line: 587, type: !13128, scopeLine: 588, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1950, retainedNodes: !223)
!13682 = !DILocalVariable(name: "thread", arg: 1, scope: !13681, file: !2052, line: 587, type: !1953)
!13683 = !DILocation(line: 587, column: 54, scope: !13681)
!13684 = !DILocation(line: 605, column: 2, scope: !13681)
!13685 = distinct !DISubprogram(name: "ready_thread", scope: !2052, file: !2052, line: 617, type: !12759, scopeLine: 618, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1950, retainedNodes: !223)
!13686 = !DILocalVariable(name: "thread", arg: 1, scope: !13685, file: !2052, line: 617, type: !1953)
!13687 = !DILocation(line: 617, column: 43, scope: !13685)
!13688 = !DILocation(line: 626, column: 26, scope: !13689)
!13689 = distinct !DILexicalBlock(scope: !13685, file: !2052, line: 626, column: 6)
!13690 = !DILocation(line: 626, column: 7, scope: !13689)
!13691 = !DILocation(line: 626, column: 34, scope: !13689)
!13692 = !DILocation(line: 626, column: 55, scope: !13689)
!13693 = !DILocation(line: 626, column: 37, scope: !13689)
!13694 = !DILocation(line: 626, column: 6, scope: !13685)
!13695 = !DILocation(line: 627, column: 3, scope: !13696)
!13696 = distinct !DILexicalBlock(scope: !13689, file: !2052, line: 626, column: 64)
!13697 = !DILocation(line: 627, column: 3, scope: !13698)
!13698 = distinct !DILexicalBlock(scope: !13696, file: !2052, line: 627, column: 3)
!13699 = !DILocation(line: 629, column: 16, scope: !13696)
!13700 = !DILocation(line: 250, column: 57, scope: !13225, inlinedAt: !13701)
!13701 = distinct !DILocation(line: 629, column: 3, scope: !13696)
!13702 = !DILocation(line: 252, column: 2, scope: !13225, inlinedAt: !13701)
!13703 = !DILocation(line: 252, column: 10, scope: !13225, inlinedAt: !13701)
!13704 = !DILocation(line: 252, column: 15, scope: !13225, inlinedAt: !13701)
!13705 = !DILocation(line: 252, column: 28, scope: !13225, inlinedAt: !13701)
!13706 = !DILocation(line: 253, column: 26, scope: !13233, inlinedAt: !13701)
!13707 = !DILocation(line: 253, column: 6, scope: !13233, inlinedAt: !13701)
!13708 = !DILocation(line: 253, column: 6, scope: !13225, inlinedAt: !13701)
!13709 = !DILocation(line: 254, column: 12, scope: !13237, inlinedAt: !13701)
!13710 = !DILocation(line: 227, column: 53, scope: !13239, inlinedAt: !13711)
!13711 = distinct !DILocation(line: 254, column: 3, scope: !13237, inlinedAt: !13701)
!13712 = !DILocation(line: 229, column: 28, scope: !13239, inlinedAt: !13711)
!13713 = !DILocation(line: 199, column: 57, scope: !13213, inlinedAt: !13714)
!13714 = distinct !DILocation(line: 229, column: 16, scope: !13239, inlinedAt: !13711)
!13715 = !DILocation(line: 229, column: 37, scope: !13239, inlinedAt: !13711)
!13716 = !DILocation(line: 181, column: 56, scope: !13247, inlinedAt: !13717)
!13717 = distinct !DILocation(line: 229, column: 2, scope: !13239, inlinedAt: !13711)
!13718 = !DILocation(line: 182, column: 25, scope: !13247, inlinedAt: !13717)
!13719 = !DILocation(line: 184, column: 19, scope: !13247, inlinedAt: !13717)
!13720 = !DILocation(line: 188, column: 2, scope: !13258, inlinedAt: !13717)
!13721 = !DILocation(line: 188, column: 2, scope: !13260, inlinedAt: !13717)
!13722 = !DILocation(line: 189, column: 24, scope: !13262, inlinedAt: !13717)
!13723 = !DILocation(line: 189, column: 32, scope: !13262, inlinedAt: !13717)
!13724 = !DILocation(line: 189, column: 7, scope: !13262, inlinedAt: !13717)
!13725 = !DILocation(line: 189, column: 35, scope: !13262, inlinedAt: !13717)
!13726 = !DILocation(line: 189, column: 7, scope: !13263, inlinedAt: !13717)
!13727 = !DILocation(line: 190, column: 22, scope: !13269, inlinedAt: !13717)
!13728 = !DILocation(line: 190, column: 25, scope: !13269, inlinedAt: !13717)
!13729 = !DILocation(line: 190, column: 30, scope: !13269, inlinedAt: !13717)
!13730 = !DILocation(line: 191, column: 8, scope: !13269, inlinedAt: !13717)
!13731 = !DILocation(line: 191, column: 16, scope: !13269, inlinedAt: !13717)
!13732 = !DILocation(line: 191, column: 21, scope: !13269, inlinedAt: !13717)
!13733 = !DILocation(line: 190, column: 4, scope: !13269, inlinedAt: !13717)
!13734 = !DILocation(line: 192, column: 4, scope: !13269, inlinedAt: !13717)
!13735 = distinct !{!13735, !13720, !13736}
!13736 = !DILocation(line: 194, column: 2, scope: !13258, inlinedAt: !13717)
!13737 = !DILocation(line: 196, column: 19, scope: !13247, inlinedAt: !13717)
!13738 = !DILocation(line: 196, column: 24, scope: !13247, inlinedAt: !13717)
!13739 = !DILocation(line: 196, column: 32, scope: !13247, inlinedAt: !13717)
!13740 = !DILocation(line: 196, column: 37, scope: !13247, inlinedAt: !13717)
!13741 = !DILocation(line: 196, column: 2, scope: !13247, inlinedAt: !13717)
!13742 = !DILocation(line: 197, column: 1, scope: !13247, inlinedAt: !13717)
!13743 = !DILocation(line: 255, column: 2, scope: !13237, inlinedAt: !13701)
!13744 = !DILocation(line: 630, column: 3, scope: !13696)
!13745 = !DILocation(line: 631, column: 3, scope: !13696)
!13746 = !DILocation(line: 632, column: 2, scope: !13696)
!13747 = !DILocation(line: 633, column: 1, scope: !13685)
!13748 = distinct !DISubprogram(name: "z_is_thread_ready", scope: !11628, file: !11628, line: 120, type: !13128, scopeLine: 121, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1950, retainedNodes: !223)
!13749 = !DILocalVariable(name: "thread", arg: 1, scope: !13748, file: !11628, line: 120, type: !1953)
!13750 = !DILocation(line: 120, column: 55, scope: !13748)
!13751 = !DILocation(line: 122, column: 47, scope: !13748)
!13752 = !DILocation(line: 122, column: 12, scope: !13748)
!13753 = !DILocation(line: 122, column: 11, scope: !13748)
!13754 = !DILocation(line: 122, column: 56, scope: !13748)
!13755 = !DILocation(line: 122, column: 62, scope: !13748)
!13756 = !DILocation(line: 123, column: 31, scope: !13748)
!13757 = !DILocation(line: 123, column: 4, scope: !13748)
!13758 = !DILocation(line: 122, column: 9, scope: !13748)
!13759 = !DILocation(line: 122, column: 2, scope: !13748)
!13760 = distinct !DISubprogram(name: "flag_ipi", scope: !2052, file: !2052, line: 608, type: !253, scopeLine: 609, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1950, retainedNodes: !223)
!13761 = !DILocation(line: 615, column: 1, scope: !13760)
!13762 = distinct !DISubprogram(name: "z_move_thread_to_end_of_prio_q", scope: !2052, file: !2052, line: 644, type: !12759, scopeLine: 645, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1950, retainedNodes: !223)
!13763 = !DILocalVariable(name: "thread", arg: 1, scope: !13762, file: !2052, line: 644, type: !1953)
!13764 = !DILocation(line: 644, column: 54, scope: !13762)
!13765 = !DILocalVariable(name: "__i", scope: !13766, file: !2052, line: 646, type: !12798)
!13766 = distinct !DILexicalBlock(scope: !13762, file: !2052, line: 646, column: 2)
!13767 = !DILocation(line: 646, column: 2, scope: !13766)
!13768 = !DILocalVariable(name: "__key", scope: !13766, file: !2052, line: 646, type: !12798)
!13769 = !DILocation(line: 136, column: 70, scope: !12805, inlinedAt: !13770)
!13770 = distinct !DILocation(line: 646, column: 2, scope: !13766)
!13771 = !DILocation(line: 138, column: 2, scope: !12805, inlinedAt: !13770)
!13772 = !DILocation(line: 139, column: 19, scope: !12805, inlinedAt: !13770)
!13773 = !DILocation(line: 44, column: 15, scope: !12815, inlinedAt: !13774)
!13774 = distinct !DILocation(line: 145, column: 10, scope: !12805, inlinedAt: !13770)
!13775 = !DILocation(line: 53, column: 15, scope: !12815, inlinedAt: !13774)
!13776 = !DILocation(line: 55, column: 2, scope: !12815, inlinedAt: !13774)
!13777 = !DILocation(line: 76, column: 9, scope: !12815, inlinedAt: !13774)
!13778 = !DILocation(line: 145, column: 4, scope: !12805, inlinedAt: !13770)
!13779 = !DILocation(line: 145, column: 8, scope: !12805, inlinedAt: !13770)
!13780 = !DILocation(line: 165, column: 2, scope: !12805, inlinedAt: !13770)
!13781 = !DILocation(line: 646, column: 2, scope: !13782)
!13782 = distinct !DILexicalBlock(scope: !13766, file: !2052, line: 646, column: 2)
!13783 = !DILocation(line: 647, column: 32, scope: !13784)
!13784 = distinct !DILexicalBlock(scope: !13782, file: !2052, line: 646, column: 26)
!13785 = !DILocation(line: 647, column: 3, scope: !13784)
!13786 = !DILocation(line: 648, column: 2, scope: !13784)
!13787 = !DILocation(line: 189, column: 60, scope: !12847, inlinedAt: !13788)
!13788 = distinct !DILocation(line: 646, column: 2, scope: !13782)
!13789 = !DILocation(line: 190, column: 23, scope: !12847, inlinedAt: !13788)
!13790 = !DILocation(line: 192, column: 2, scope: !12847, inlinedAt: !13788)
!13791 = !DILocation(line: 215, column: 22, scope: !12847, inlinedAt: !13788)
!13792 = !DILocation(line: 84, column: 56, scope: !12857, inlinedAt: !13793)
!13793 = distinct !DILocation(line: 215, column: 2, scope: !12847, inlinedAt: !13788)
!13794 = !DILocation(line: 98, column: 12, scope: !12857, inlinedAt: !13793)
!13795 = !DILocation(line: 95, column: 2, scope: !12857, inlinedAt: !13793)
!13796 = distinct !{!13796, !13767, !13797}
!13797 = !DILocation(line: 648, column: 2, scope: !13766)
!13798 = !DILocation(line: 649, column: 1, scope: !13762)
!13799 = distinct !DISubprogram(name: "z_sched_start", scope: !2052, file: !2052, line: 651, type: !12759, scopeLine: 652, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1950, retainedNodes: !223)
!13800 = !DILocalVariable(name: "thread", arg: 1, scope: !13799, file: !2052, line: 651, type: !1953)
!13801 = !DILocation(line: 651, column: 37, scope: !13799)
!13802 = !DILocalVariable(name: "key", scope: !13799, file: !2052, line: 653, type: !12798)
!13803 = !DILocation(line: 653, column: 19, scope: !13799)
!13804 = !DILocation(line: 136, column: 70, scope: !12805, inlinedAt: !13805)
!13805 = distinct !DILocation(line: 653, column: 25, scope: !13799)
!13806 = !DILocation(line: 138, column: 2, scope: !12805, inlinedAt: !13805)
!13807 = !DILocation(line: 139, column: 19, scope: !12805, inlinedAt: !13805)
!13808 = !DILocation(line: 44, column: 15, scope: !12815, inlinedAt: !13809)
!13809 = distinct !DILocation(line: 145, column: 10, scope: !12805, inlinedAt: !13805)
!13810 = !DILocation(line: 53, column: 15, scope: !12815, inlinedAt: !13809)
!13811 = !DILocation(line: 55, column: 2, scope: !12815, inlinedAt: !13809)
!13812 = !DILocation(line: 76, column: 9, scope: !12815, inlinedAt: !13809)
!13813 = !DILocation(line: 145, column: 4, scope: !12805, inlinedAt: !13805)
!13814 = !DILocation(line: 145, column: 8, scope: !12805, inlinedAt: !13805)
!13815 = !DILocation(line: 165, column: 2, scope: !12805, inlinedAt: !13805)
!13816 = !DILocation(line: 653, column: 25, scope: !13799)
!13817 = !DILocation(line: 655, column: 27, scope: !13818)
!13818 = distinct !DILexicalBlock(scope: !13799, file: !2052, line: 655, column: 6)
!13819 = !DILocation(line: 655, column: 6, scope: !13818)
!13820 = !DILocation(line: 655, column: 6, scope: !13799)
!13821 = !DILocation(line: 656, column: 3, scope: !13822)
!13822 = distinct !DILexicalBlock(scope: !13818, file: !2052, line: 655, column: 36)
!13823 = !DILocation(line: 189, column: 60, scope: !12847, inlinedAt: !13824)
!13824 = distinct !DILocation(line: 656, column: 3, scope: !13822)
!13825 = !DILocation(line: 190, column: 23, scope: !12847, inlinedAt: !13824)
!13826 = !DILocation(line: 192, column: 2, scope: !12847, inlinedAt: !13824)
!13827 = !DILocation(line: 215, column: 22, scope: !12847, inlinedAt: !13824)
!13828 = !DILocation(line: 84, column: 56, scope: !12857, inlinedAt: !13829)
!13829 = distinct !DILocation(line: 215, column: 2, scope: !12847, inlinedAt: !13824)
!13830 = !DILocation(line: 98, column: 12, scope: !12857, inlinedAt: !13829)
!13831 = !DILocation(line: 95, column: 2, scope: !12857, inlinedAt: !13829)
!13832 = !DILocation(line: 657, column: 3, scope: !13822)
!13833 = !DILocation(line: 660, column: 27, scope: !13799)
!13834 = !DILocation(line: 660, column: 2, scope: !13799)
!13835 = !DILocation(line: 661, column: 15, scope: !13799)
!13836 = !DILocation(line: 661, column: 2, scope: !13799)
!13837 = !DILocation(line: 662, column: 2, scope: !13799)
!13838 = !DILocation(line: 663, column: 1, scope: !13799)
!13839 = distinct !DISubprogram(name: "z_has_thread_started", scope: !11628, file: !11628, line: 126, type: !13128, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1950, retainedNodes: !223)
!13840 = !DILocalVariable(name: "thread", arg: 1, scope: !13839, file: !11628, line: 126, type: !1953)
!13841 = !DILocation(line: 126, column: 58, scope: !13839)
!13842 = !DILocation(line: 128, column: 10, scope: !13839)
!13843 = !DILocation(line: 128, column: 18, scope: !13839)
!13844 = !DILocation(line: 128, column: 23, scope: !13839)
!13845 = !DILocation(line: 128, column: 36, scope: !13839)
!13846 = !DILocation(line: 128, column: 56, scope: !13839)
!13847 = !DILocation(line: 128, column: 2, scope: !13839)
!13848 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !11628, file: !11628, line: 155, type: !12759, scopeLine: 156, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1950, retainedNodes: !223)
!13849 = !DILocalVariable(name: "thread", arg: 1, scope: !13848, file: !11628, line: 155, type: !1953)
!13850 = !DILocation(line: 155, column: 62, scope: !13848)
!13851 = !DILocation(line: 157, column: 2, scope: !13848)
!13852 = !DILocation(line: 157, column: 10, scope: !13848)
!13853 = !DILocation(line: 157, column: 15, scope: !13848)
!13854 = !DILocation(line: 157, column: 28, scope: !13848)
!13855 = !DILocation(line: 158, column: 1, scope: !13848)
!13856 = distinct !DISubprogram(name: "z_reschedule", scope: !2052, file: !2052, line: 967, type: !12848, scopeLine: 968, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1950, retainedNodes: !223)
!13857 = !DILocalVariable(name: "lock", arg: 1, scope: !13856, file: !2052, line: 967, type: !12808)
!13858 = !DILocation(line: 967, column: 38, scope: !13856)
!13859 = !DILocalVariable(name: "key", arg: 2, scope: !13856, file: !2052, line: 967, type: !12798)
!13860 = !DILocation(line: 967, column: 61, scope: !13856)
!13861 = !DILocation(line: 969, column: 18, scope: !13862)
!13862 = distinct !DILexicalBlock(scope: !13856, file: !2052, line: 969, column: 6)
!13863 = !DILocation(line: 969, column: 6, scope: !13862)
!13864 = !DILocation(line: 969, column: 23, scope: !13862)
!13865 = !DILocation(line: 969, column: 26, scope: !13862)
!13866 = !DILocation(line: 969, column: 6, scope: !13856)
!13867 = !DILocation(line: 970, column: 10, scope: !13868)
!13868 = distinct !DILexicalBlock(scope: !13862, file: !2052, line: 969, column: 39)
!13869 = !DILocation(line: 970, column: 3, scope: !13868)
!13870 = !DILocalVariable(name: "lock", arg: 1, scope: !13871, file: !11789, line: 193, type: !12808)
!13871 = distinct !DISubprogram(name: "z_swap", scope: !11789, file: !11789, line: 193, type: !13872, scopeLine: 194, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1950, retainedNodes: !223)
!13872 = !DISubroutineType(types: !13873)
!13873 = !{!103, !12808, !12798}
!13874 = !DILocation(line: 193, column: 52, scope: !13871, inlinedAt: !13875)
!13875 = distinct !DILocation(line: 970, column: 3, scope: !13868)
!13876 = !DILocalVariable(name: "key", arg: 2, scope: !13871, file: !11789, line: 193, type: !12798)
!13877 = !DILocation(line: 193, column: 75, scope: !13871, inlinedAt: !13875)
!13878 = !DILocation(line: 195, column: 17, scope: !13871, inlinedAt: !13875)
!13879 = !DILocalVariable(name: "l", arg: 1, scope: !13880, file: !222, line: 221, type: !12808)
!13880 = distinct !DISubprogram(name: "k_spin_release", scope: !222, file: !222, line: 221, type: !13881, scopeLine: 222, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1950, retainedNodes: !223)
!13881 = !DISubroutineType(types: !13882)
!13882 = !{null, !12808}
!13883 = !DILocation(line: 221, column: 61, scope: !13880, inlinedAt: !13884)
!13884 = distinct !DILocation(line: 195, column: 2, scope: !13871, inlinedAt: !13875)
!13885 = !DILocation(line: 223, column: 2, scope: !13880, inlinedAt: !13884)
!13886 = !DILocation(line: 196, column: 28, scope: !13871, inlinedAt: !13875)
!13887 = !DILocation(line: 196, column: 9, scope: !13871, inlinedAt: !13875)
!13888 = !DILocation(line: 971, column: 2, scope: !13868)
!13889 = !DILocation(line: 972, column: 17, scope: !13890)
!13890 = distinct !DILexicalBlock(scope: !13862, file: !2052, line: 971, column: 9)
!13891 = !DILocation(line: 972, column: 3, scope: !13890)
!13892 = !DILocation(line: 189, column: 60, scope: !12847, inlinedAt: !13893)
!13893 = distinct !DILocation(line: 972, column: 3, scope: !13890)
!13894 = !DILocation(line: 190, column: 23, scope: !12847, inlinedAt: !13893)
!13895 = !DILocation(line: 192, column: 2, scope: !12847, inlinedAt: !13893)
!13896 = !DILocation(line: 215, column: 22, scope: !12847, inlinedAt: !13893)
!13897 = !DILocation(line: 84, column: 56, scope: !12857, inlinedAt: !13898)
!13898 = distinct !DILocation(line: 215, column: 2, scope: !12847, inlinedAt: !13893)
!13899 = !DILocation(line: 98, column: 12, scope: !12857, inlinedAt: !13898)
!13900 = !DILocation(line: 95, column: 2, scope: !12857, inlinedAt: !13898)
!13901 = !DILocation(line: 973, column: 3, scope: !13890)
!13902 = !DILocation(line: 975, column: 1, scope: !13856)
!13903 = distinct !DISubprogram(name: "resched", scope: !2052, file: !2052, line: 940, type: !13904, scopeLine: 941, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1950, retainedNodes: !223)
!13904 = !DISubroutineType(types: !13905)
!13905 = !{!743, !173}
!13906 = !DILocalVariable(name: "key", arg: 1, scope: !13903, file: !2052, line: 940, type: !173)
!13907 = !DILocation(line: 940, column: 37, scope: !13903)
!13908 = !DILocation(line: 946, column: 27, scope: !13903)
!13909 = !DILocalVariable(name: "key", arg: 1, scope: !13910, file: !5551, line: 112, type: !32)
!13910 = distinct !DISubprogram(name: "arch_irq_unlocked", scope: !5551, file: !5551, line: 112, type: !13911, scopeLine: 113, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1950, retainedNodes: !223)
!13911 = !DISubroutineType(types: !13912)
!13912 = !{!743, !32}
!13913 = !DILocation(line: 112, column: 58, scope: !13910, inlinedAt: !13914)
!13914 = distinct !DILocation(line: 946, column: 9, scope: !13903)
!13915 = !DILocation(line: 115, column: 9, scope: !13910, inlinedAt: !13914)
!13916 = !DILocation(line: 115, column: 13, scope: !13910, inlinedAt: !13914)
!13917 = !DILocation(line: 946, column: 32, scope: !13903)
!13918 = !DILocalVariable(name: "result", scope: !13919, file: !5414, line: 1029, type: !173)
!13919 = distinct !DISubprogram(name: "__get_IPSR", scope: !5414, file: !5414, line: 1027, type: !5514, scopeLine: 1028, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1950, retainedNodes: !223)
!13920 = !DILocation(line: 1029, column: 12, scope: !13919, inlinedAt: !13921)
!13921 = distinct !DILocation(line: 48, column: 10, scope: !13922, inlinedAt: !13923)
!13922 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !6622, file: !6622, line: 46, type: !2920, scopeLine: 47, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1950, retainedNodes: !223)
!13923 = distinct !DILocation(line: 946, column: 36, scope: !13903)
!13924 = !DILocation(line: 1031, column: 3, scope: !13919, inlinedAt: !13921)
!13925 = !{i64 7007591}
!13926 = !DILocation(line: 1032, column: 10, scope: !13919, inlinedAt: !13921)
!13927 = !DILocation(line: 48, column: 9, scope: !13922, inlinedAt: !13923)
!13928 = !DILocation(line: 946, column: 35, scope: !13903)
!13929 = !DILocation(line: 0, scope: !13903)
!13930 = !DILocation(line: 946, column: 2, scope: !13903)
!13931 = distinct !DISubprogram(name: "need_swap", scope: !2052, file: !2052, line: 953, type: !2920, scopeLine: 954, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1950, retainedNodes: !223)
!13932 = !DILocalVariable(name: "new_thread", scope: !13931, file: !2052, line: 959, type: !1953)
!13933 = !DILocation(line: 959, column: 19, scope: !13931)
!13934 = !DILocation(line: 962, column: 31, scope: !13931)
!13935 = !DILocation(line: 962, column: 13, scope: !13931)
!13936 = !DILocation(line: 963, column: 9, scope: !13931)
!13937 = !DILocation(line: 963, column: 23, scope: !13931)
!13938 = !DILocation(line: 963, column: 20, scope: !13931)
!13939 = !DILocation(line: 963, column: 2, scope: !13931)
!13940 = distinct !DISubprogram(name: "z_swap_irqlock", scope: !11789, file: !11789, line: 181, type: !5424, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1950, retainedNodes: !223)
!13941 = !DILocalVariable(name: "key", arg: 1, scope: !13940, file: !11789, line: 181, type: !32)
!13942 = !DILocation(line: 181, column: 47, scope: !13940)
!13943 = !DILocalVariable(name: "ret", scope: !13940, file: !11789, line: 183, type: !103)
!13944 = !DILocation(line: 183, column: 6, scope: !13940)
!13945 = !DILocation(line: 185, column: 18, scope: !13940)
!13946 = !DILocation(line: 185, column: 8, scope: !13940)
!13947 = !DILocation(line: 185, column: 6, scope: !13940)
!13948 = !DILocation(line: 186, column: 9, scope: !13940)
!13949 = !DILocation(line: 186, column: 2, scope: !13940)
!13950 = distinct !DISubprogram(name: "signal_pending_ipi", scope: !2052, file: !2052, line: 272, type: !253, scopeLine: 273, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1950, retainedNodes: !223)
!13951 = !DILocation(line: 289, column: 1, scope: !13950)
!13952 = distinct !DISubprogram(name: "z_impl_k_thread_suspend", scope: !2052, file: !2052, line: 665, type: !12759, scopeLine: 666, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1950, retainedNodes: !223)
!13953 = !DILocalVariable(name: "thread", arg: 1, scope: !13952, file: !2052, line: 665, type: !1953)
!13954 = !DILocation(line: 665, column: 47, scope: !13952)
!13955 = !DILocation(line: 667, column: 2, scope: !13952)
!13956 = !DILocation(line: 667, column: 2, scope: !13957)
!13957 = distinct !DILexicalBlock(scope: !13952, file: !2052, line: 667, column: 2)
!13958 = !DILocation(line: 669, column: 31, scope: !13952)
!13959 = !DILocation(line: 669, column: 8, scope: !13952)
!13960 = !DILocalVariable(name: "__i", scope: !13961, file: !2052, line: 671, type: !12798)
!13961 = distinct !DILexicalBlock(scope: !13952, file: !2052, line: 671, column: 2)
!13962 = !DILocation(line: 671, column: 2, scope: !13961)
!13963 = !DILocalVariable(name: "__key", scope: !13961, file: !2052, line: 671, type: !12798)
!13964 = !DILocation(line: 136, column: 70, scope: !12805, inlinedAt: !13965)
!13965 = distinct !DILocation(line: 671, column: 2, scope: !13961)
!13966 = !DILocation(line: 138, column: 2, scope: !12805, inlinedAt: !13965)
!13967 = !DILocation(line: 139, column: 19, scope: !12805, inlinedAt: !13965)
!13968 = !DILocation(line: 44, column: 15, scope: !12815, inlinedAt: !13969)
!13969 = distinct !DILocation(line: 145, column: 10, scope: !12805, inlinedAt: !13965)
!13970 = !DILocation(line: 53, column: 15, scope: !12815, inlinedAt: !13969)
!13971 = !DILocation(line: 55, column: 2, scope: !12815, inlinedAt: !13969)
!13972 = !DILocation(line: 76, column: 9, scope: !12815, inlinedAt: !13969)
!13973 = !DILocation(line: 145, column: 4, scope: !12805, inlinedAt: !13965)
!13974 = !DILocation(line: 145, column: 8, scope: !12805, inlinedAt: !13965)
!13975 = !DILocation(line: 165, column: 2, scope: !12805, inlinedAt: !13965)
!13976 = !DILocation(line: 671, column: 2, scope: !13977)
!13977 = distinct !DILexicalBlock(scope: !13961, file: !2052, line: 671, column: 2)
!13978 = !DILocation(line: 672, column: 26, scope: !13979)
!13979 = distinct !DILexicalBlock(scope: !13980, file: !2052, line: 672, column: 7)
!13980 = distinct !DILexicalBlock(scope: !13977, file: !2052, line: 671, column: 26)
!13981 = !DILocation(line: 672, column: 7, scope: !13979)
!13982 = !DILocation(line: 672, column: 7, scope: !13980)
!13983 = !DILocation(line: 673, column: 19, scope: !13984)
!13984 = distinct !DILexicalBlock(scope: !13979, file: !2052, line: 672, column: 35)
!13985 = !DILocation(line: 264, column: 59, scope: !13194, inlinedAt: !13986)
!13986 = distinct !DILocation(line: 673, column: 4, scope: !13984)
!13987 = !DILocation(line: 266, column: 2, scope: !13194, inlinedAt: !13986)
!13988 = !DILocation(line: 266, column: 10, scope: !13194, inlinedAt: !13986)
!13989 = !DILocation(line: 266, column: 15, scope: !13194, inlinedAt: !13986)
!13990 = !DILocation(line: 266, column: 28, scope: !13194, inlinedAt: !13986)
!13991 = !DILocation(line: 267, column: 26, scope: !13202, inlinedAt: !13986)
!13992 = !DILocation(line: 267, column: 6, scope: !13202, inlinedAt: !13986)
!13993 = !DILocation(line: 267, column: 6, scope: !13194, inlinedAt: !13986)
!13994 = !DILocation(line: 268, column: 15, scope: !13206, inlinedAt: !13986)
!13995 = !DILocation(line: 232, column: 56, scope: !13208, inlinedAt: !13996)
!13996 = distinct !DILocation(line: 268, column: 3, scope: !13206, inlinedAt: !13986)
!13997 = !DILocation(line: 234, column: 31, scope: !13208, inlinedAt: !13996)
!13998 = !DILocation(line: 199, column: 57, scope: !13213, inlinedAt: !13999)
!13999 = distinct !DILocation(line: 234, column: 19, scope: !13208, inlinedAt: !13996)
!14000 = !DILocation(line: 234, column: 19, scope: !13208, inlinedAt: !13996)
!14001 = !DILocation(line: 234, column: 40, scope: !13208, inlinedAt: !13996)
!14002 = !DILocation(line: 234, column: 2, scope: !13208, inlinedAt: !13996)
!14003 = !DILocation(line: 269, column: 2, scope: !13206, inlinedAt: !13986)
!14004 = !DILocation(line: 674, column: 3, scope: !13984)
!14005 = !DILocation(line: 675, column: 30, scope: !13980)
!14006 = !DILocation(line: 675, column: 3, scope: !13980)
!14007 = !DILocation(line: 676, column: 16, scope: !13980)
!14008 = !DILocation(line: 676, column: 26, scope: !13980)
!14009 = !DILocation(line: 676, column: 23, scope: !13980)
!14010 = !DILocation(line: 676, column: 3, scope: !13980)
!14011 = !DILocation(line: 677, column: 2, scope: !13980)
!14012 = !DILocation(line: 189, column: 60, scope: !12847, inlinedAt: !14013)
!14013 = distinct !DILocation(line: 671, column: 2, scope: !13977)
!14014 = !DILocation(line: 190, column: 23, scope: !12847, inlinedAt: !14013)
!14015 = !DILocation(line: 192, column: 2, scope: !12847, inlinedAt: !14013)
!14016 = !DILocation(line: 215, column: 22, scope: !12847, inlinedAt: !14013)
!14017 = !DILocation(line: 84, column: 56, scope: !12857, inlinedAt: !14018)
!14018 = distinct !DILocation(line: 215, column: 2, scope: !12847, inlinedAt: !14013)
!14019 = !DILocation(line: 98, column: 12, scope: !12857, inlinedAt: !14018)
!14020 = !DILocation(line: 95, column: 2, scope: !12857, inlinedAt: !14018)
!14021 = distinct !{!14021, !13962, !14022}
!14022 = !DILocation(line: 677, column: 2, scope: !13961)
!14023 = !DILocation(line: 679, column: 6, scope: !14024)
!14024 = distinct !DILexicalBlock(scope: !13952, file: !2052, line: 679, column: 6)
!14025 = !DILocation(line: 679, column: 16, scope: !14024)
!14026 = !DILocation(line: 679, column: 13, scope: !14024)
!14027 = !DILocation(line: 679, column: 6, scope: !13952)
!14028 = !DILocation(line: 680, column: 3, scope: !14029)
!14029 = distinct !DILexicalBlock(scope: !14024, file: !2052, line: 679, column: 26)
!14030 = !DILocation(line: 681, column: 2, scope: !14029)
!14031 = !DILocation(line: 683, column: 2, scope: !13952)
!14032 = !DILocation(line: 683, column: 2, scope: !14033)
!14033 = distinct !DILexicalBlock(scope: !13952, file: !2052, line: 683, column: 2)
!14034 = !DILocation(line: 684, column: 1, scope: !13952)
!14035 = distinct !DISubprogram(name: "z_abort_thread_timeout", scope: !12222, file: !12222, line: 52, type: !12780, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1950, retainedNodes: !223)
!14036 = !DILocalVariable(name: "thread", arg: 1, scope: !14035, file: !12222, line: 52, type: !1953)
!14037 = !DILocation(line: 52, column: 59, scope: !14035)
!14038 = !DILocation(line: 54, column: 26, scope: !14035)
!14039 = !DILocation(line: 54, column: 34, scope: !14035)
!14040 = !DILocation(line: 54, column: 39, scope: !14035)
!14041 = !DILocation(line: 54, column: 9, scope: !14035)
!14042 = !DILocation(line: 54, column: 2, scope: !14035)
!14043 = distinct !DISubprogram(name: "z_mark_thread_as_suspended", scope: !11628, file: !11628, line: 141, type: !12759, scopeLine: 142, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1950, retainedNodes: !223)
!14044 = !DILocalVariable(name: "thread", arg: 1, scope: !14043, file: !11628, line: 141, type: !1953)
!14045 = !DILocation(line: 141, column: 64, scope: !14043)
!14046 = !DILocation(line: 143, column: 2, scope: !14043)
!14047 = !DILocation(line: 143, column: 10, scope: !14043)
!14048 = !DILocation(line: 143, column: 15, scope: !14043)
!14049 = !DILocation(line: 143, column: 28, scope: !14043)
!14050 = !DILocation(line: 145, column: 2, scope: !14043)
!14051 = !DILocation(line: 145, column: 2, scope: !14052)
!14052 = distinct !DILexicalBlock(scope: !14043, file: !11628, line: 145, column: 2)
!14053 = !DILocation(line: 146, column: 1, scope: !14043)
!14054 = distinct !DISubprogram(name: "z_reschedule_unlocked", scope: !11628, file: !11628, line: 73, type: !253, scopeLine: 74, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1950, retainedNodes: !223)
!14055 = !DILocation(line: 44, column: 15, scope: !12815, inlinedAt: !14056)
!14056 = distinct !DILocation(line: 75, column: 30, scope: !14054)
!14057 = !DILocation(line: 53, column: 15, scope: !12815, inlinedAt: !14056)
!14058 = !DILocation(line: 55, column: 2, scope: !12815, inlinedAt: !14056)
!14059 = !DILocation(line: 76, column: 9, scope: !12815, inlinedAt: !14056)
!14060 = !DILocation(line: 75, column: 9, scope: !14054)
!14061 = !DILocation(line: 76, column: 1, scope: !14054)
!14062 = distinct !DISubprogram(name: "z_reschedule_irqlock", scope: !2052, file: !2052, line: 977, type: !5524, scopeLine: 978, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1950, retainedNodes: !223)
!14063 = !DILocalVariable(name: "key", arg: 1, scope: !14062, file: !2052, line: 977, type: !173)
!14064 = !DILocation(line: 977, column: 36, scope: !14062)
!14065 = !DILocation(line: 979, column: 14, scope: !14066)
!14066 = distinct !DILexicalBlock(scope: !14062, file: !2052, line: 979, column: 6)
!14067 = !DILocation(line: 979, column: 6, scope: !14066)
!14068 = !DILocation(line: 979, column: 6, scope: !14062)
!14069 = !DILocation(line: 980, column: 18, scope: !14070)
!14070 = distinct !DILexicalBlock(scope: !14066, file: !2052, line: 979, column: 20)
!14071 = !DILocation(line: 980, column: 3, scope: !14070)
!14072 = !DILocation(line: 981, column: 2, scope: !14070)
!14073 = !DILocation(line: 982, column: 3, scope: !14074)
!14074 = distinct !DILexicalBlock(scope: !14066, file: !2052, line: 981, column: 9)
!14075 = !DILocation(line: 84, column: 56, scope: !12857, inlinedAt: !14076)
!14076 = distinct !DILocation(line: 982, column: 3, scope: !14074)
!14077 = !DILocation(line: 98, column: 12, scope: !12857, inlinedAt: !14076)
!14078 = !DILocation(line: 95, column: 2, scope: !12857, inlinedAt: !14076)
!14079 = !DILocation(line: 983, column: 3, scope: !14074)
!14080 = !DILocation(line: 985, column: 1, scope: !14062)
!14081 = distinct !DISubprogram(name: "z_impl_k_thread_resume", scope: !2052, file: !2052, line: 695, type: !12759, scopeLine: 696, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1950, retainedNodes: !223)
!14082 = !DILocalVariable(name: "thread", arg: 1, scope: !14081, file: !2052, line: 695, type: !1953)
!14083 = !DILocation(line: 695, column: 46, scope: !14081)
!14084 = !DILocation(line: 697, column: 2, scope: !14081)
!14085 = !DILocation(line: 697, column: 2, scope: !14086)
!14086 = distinct !DILexicalBlock(scope: !14081, file: !2052, line: 697, column: 2)
!14087 = !DILocalVariable(name: "key", scope: !14081, file: !2052, line: 699, type: !12798)
!14088 = !DILocation(line: 699, column: 19, scope: !14081)
!14089 = !DILocation(line: 136, column: 70, scope: !12805, inlinedAt: !14090)
!14090 = distinct !DILocation(line: 699, column: 25, scope: !14081)
!14091 = !DILocation(line: 138, column: 2, scope: !12805, inlinedAt: !14090)
!14092 = !DILocation(line: 139, column: 19, scope: !12805, inlinedAt: !14090)
!14093 = !DILocation(line: 44, column: 15, scope: !12815, inlinedAt: !14094)
!14094 = distinct !DILocation(line: 145, column: 10, scope: !12805, inlinedAt: !14090)
!14095 = !DILocation(line: 53, column: 15, scope: !12815, inlinedAt: !14094)
!14096 = !DILocation(line: 55, column: 2, scope: !12815, inlinedAt: !14094)
!14097 = !DILocation(line: 76, column: 9, scope: !12815, inlinedAt: !14094)
!14098 = !DILocation(line: 145, column: 4, scope: !12805, inlinedAt: !14090)
!14099 = !DILocation(line: 145, column: 8, scope: !12805, inlinedAt: !14090)
!14100 = !DILocation(line: 165, column: 2, scope: !12805, inlinedAt: !14090)
!14101 = !DILocation(line: 699, column: 25, scope: !14081)
!14102 = !DILocation(line: 702, column: 29, scope: !14103)
!14103 = distinct !DILexicalBlock(scope: !14081, file: !2052, line: 702, column: 6)
!14104 = !DILocation(line: 702, column: 7, scope: !14103)
!14105 = !DILocation(line: 702, column: 6, scope: !14081)
!14106 = !DILocation(line: 703, column: 3, scope: !14107)
!14107 = distinct !DILexicalBlock(scope: !14103, file: !2052, line: 702, column: 38)
!14108 = !DILocation(line: 189, column: 60, scope: !12847, inlinedAt: !14109)
!14109 = distinct !DILocation(line: 703, column: 3, scope: !14107)
!14110 = !DILocation(line: 190, column: 23, scope: !12847, inlinedAt: !14109)
!14111 = !DILocation(line: 192, column: 2, scope: !12847, inlinedAt: !14109)
!14112 = !DILocation(line: 215, column: 22, scope: !12847, inlinedAt: !14109)
!14113 = !DILocation(line: 84, column: 56, scope: !12857, inlinedAt: !14114)
!14114 = distinct !DILocation(line: 215, column: 2, scope: !12847, inlinedAt: !14109)
!14115 = !DILocation(line: 98, column: 12, scope: !12857, inlinedAt: !14114)
!14116 = !DILocation(line: 95, column: 2, scope: !12857, inlinedAt: !14114)
!14117 = !DILocation(line: 704, column: 3, scope: !14107)
!14118 = !DILocation(line: 707, column: 33, scope: !14081)
!14119 = !DILocation(line: 707, column: 2, scope: !14081)
!14120 = !DILocation(line: 708, column: 15, scope: !14081)
!14121 = !DILocation(line: 708, column: 2, scope: !14081)
!14122 = !DILocation(line: 710, column: 2, scope: !14081)
!14123 = !DILocation(line: 712, column: 2, scope: !14081)
!14124 = !DILocation(line: 712, column: 2, scope: !14125)
!14125 = distinct !DILexicalBlock(scope: !14081, file: !2052, line: 712, column: 2)
!14126 = !DILocation(line: 713, column: 1, scope: !14081)
!14127 = distinct !DISubprogram(name: "z_is_thread_suspended", scope: !11628, file: !11628, line: 96, type: !13128, scopeLine: 97, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1950, retainedNodes: !223)
!14128 = !DILocalVariable(name: "thread", arg: 1, scope: !14127, file: !11628, line: 96, type: !1953)
!14129 = !DILocation(line: 96, column: 59, scope: !14127)
!14130 = !DILocation(line: 98, column: 10, scope: !14127)
!14131 = !DILocation(line: 98, column: 18, scope: !14127)
!14132 = !DILocation(line: 98, column: 23, scope: !14127)
!14133 = !DILocation(line: 98, column: 36, scope: !14127)
!14134 = !DILocation(line: 98, column: 57, scope: !14127)
!14135 = !DILocation(line: 98, column: 2, scope: !14127)
!14136 = distinct !DISubprogram(name: "z_mark_thread_as_not_suspended", scope: !11628, file: !11628, line: 148, type: !12759, scopeLine: 149, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1950, retainedNodes: !223)
!14137 = !DILocalVariable(name: "thread", arg: 1, scope: !14136, file: !11628, line: 148, type: !1953)
!14138 = !DILocation(line: 148, column: 68, scope: !14136)
!14139 = !DILocation(line: 150, column: 2, scope: !14136)
!14140 = !DILocation(line: 150, column: 10, scope: !14136)
!14141 = !DILocation(line: 150, column: 15, scope: !14136)
!14142 = !DILocation(line: 150, column: 28, scope: !14136)
!14143 = !DILocation(line: 152, column: 2, scope: !14136)
!14144 = !DILocation(line: 152, column: 2, scope: !14145)
!14145 = distinct !DILexicalBlock(scope: !14136, file: !11628, line: 152, column: 2)
!14146 = !DILocation(line: 153, column: 1, scope: !14136)
!14147 = distinct !DISubprogram(name: "z_pend_thread", scope: !2052, file: !2052, line: 770, type: !14148, scopeLine: 772, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1950, retainedNodes: !223)
!14148 = !DISubroutineType(types: !14149)
!14149 = !{null, !1953, !1984, !14150}
!14150 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1443, line: 67, baseType: !14151)
!14151 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1443, line: 65, size: 64, elements: !14152)
!14152 = !{!14153}
!14153 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !14151, file: !1443, line: 66, baseType: !1442, size: 64)
!14154 = !DILocalVariable(name: "thread", arg: 1, scope: !14147, file: !2052, line: 770, type: !1953)
!14155 = !DILocation(line: 770, column: 37, scope: !14147)
!14156 = !DILocalVariable(name: "wait_q", arg: 2, scope: !14147, file: !2052, line: 770, type: !1984)
!14157 = !DILocation(line: 770, column: 56, scope: !14147)
!14158 = !DILocalVariable(name: "timeout", arg: 3, scope: !14147, file: !2052, line: 771, type: !14150)
!14159 = !DILocation(line: 771, column: 18, scope: !14147)
!14160 = !DILocalVariable(name: "__i", scope: !14161, file: !2052, line: 774, type: !12798)
!14161 = distinct !DILexicalBlock(scope: !14147, file: !2052, line: 774, column: 2)
!14162 = !DILocation(line: 774, column: 2, scope: !14161)
!14163 = !DILocalVariable(name: "__key", scope: !14161, file: !2052, line: 774, type: !12798)
!14164 = !DILocation(line: 136, column: 70, scope: !12805, inlinedAt: !14165)
!14165 = distinct !DILocation(line: 774, column: 2, scope: !14161)
!14166 = !DILocation(line: 138, column: 2, scope: !12805, inlinedAt: !14165)
!14167 = !DILocation(line: 139, column: 19, scope: !12805, inlinedAt: !14165)
!14168 = !DILocation(line: 44, column: 15, scope: !12815, inlinedAt: !14169)
!14169 = distinct !DILocation(line: 145, column: 10, scope: !12805, inlinedAt: !14165)
!14170 = !DILocation(line: 53, column: 15, scope: !12815, inlinedAt: !14169)
!14171 = !DILocation(line: 55, column: 2, scope: !12815, inlinedAt: !14169)
!14172 = !DILocation(line: 76, column: 9, scope: !12815, inlinedAt: !14169)
!14173 = !DILocation(line: 145, column: 4, scope: !12805, inlinedAt: !14165)
!14174 = !DILocation(line: 145, column: 8, scope: !12805, inlinedAt: !14165)
!14175 = !DILocation(line: 165, column: 2, scope: !12805, inlinedAt: !14165)
!14176 = !DILocation(line: 774, column: 2, scope: !14177)
!14177 = distinct !DILexicalBlock(scope: !14161, file: !2052, line: 774, column: 2)
!14178 = !DILocation(line: 775, column: 15, scope: !14179)
!14179 = distinct !DILexicalBlock(scope: !14177, file: !2052, line: 774, column: 26)
!14180 = !DILocation(line: 775, column: 23, scope: !14179)
!14181 = !DILocation(line: 775, column: 3, scope: !14179)
!14182 = !DILocation(line: 776, column: 2, scope: !14179)
!14183 = !DILocation(line: 189, column: 60, scope: !12847, inlinedAt: !14184)
!14184 = distinct !DILocation(line: 774, column: 2, scope: !14177)
!14185 = !DILocation(line: 190, column: 23, scope: !12847, inlinedAt: !14184)
!14186 = !DILocation(line: 192, column: 2, scope: !12847, inlinedAt: !14184)
!14187 = !DILocation(line: 215, column: 22, scope: !12847, inlinedAt: !14184)
!14188 = !DILocation(line: 84, column: 56, scope: !12857, inlinedAt: !14189)
!14189 = distinct !DILocation(line: 215, column: 2, scope: !12847, inlinedAt: !14184)
!14190 = !DILocation(line: 98, column: 12, scope: !12857, inlinedAt: !14189)
!14191 = !DILocation(line: 95, column: 2, scope: !12857, inlinedAt: !14189)
!14192 = distinct !{!14192, !14162, !14193}
!14193 = !DILocation(line: 776, column: 2, scope: !14161)
!14194 = !DILocation(line: 777, column: 1, scope: !14147)
!14195 = distinct !DISubprogram(name: "pend_locked", scope: !2052, file: !2052, line: 760, type: !14148, scopeLine: 762, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1950, retainedNodes: !223)
!14196 = !DILocalVariable(name: "thread", arg: 1, scope: !14195, file: !2052, line: 760, type: !1953)
!14197 = !DILocation(line: 760, column: 42, scope: !14195)
!14198 = !DILocalVariable(name: "wait_q", arg: 2, scope: !14195, file: !2052, line: 760, type: !1984)
!14199 = !DILocation(line: 760, column: 61, scope: !14195)
!14200 = !DILocalVariable(name: "timeout", arg: 3, scope: !14195, file: !2052, line: 761, type: !14150)
!14201 = !DILocation(line: 761, column: 16, scope: !14195)
!14202 = !DILocation(line: 766, column: 22, scope: !14195)
!14203 = !DILocation(line: 766, column: 30, scope: !14195)
!14204 = !DILocation(line: 766, column: 2, scope: !14195)
!14205 = !DILocation(line: 767, column: 21, scope: !14195)
!14206 = !DILocation(line: 767, column: 2, scope: !14195)
!14207 = !DILocation(line: 768, column: 1, scope: !14195)
!14208 = distinct !DISubprogram(name: "add_to_waitq_locked", scope: !2052, file: !2052, line: 740, type: !14209, scopeLine: 741, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1950, retainedNodes: !223)
!14209 = !DISubroutineType(types: !14210)
!14210 = !{null, !1953, !1984}
!14211 = !DILocalVariable(name: "thread", arg: 1, scope: !14208, file: !2052, line: 740, type: !1953)
!14212 = !DILocation(line: 740, column: 50, scope: !14208)
!14213 = !DILocalVariable(name: "wait_q", arg: 2, scope: !14208, file: !2052, line: 740, type: !1984)
!14214 = !DILocation(line: 740, column: 69, scope: !14208)
!14215 = !DILocation(line: 742, column: 17, scope: !14208)
!14216 = !DILocation(line: 742, column: 2, scope: !14208)
!14217 = !DILocation(line: 743, column: 27, scope: !14208)
!14218 = !DILocation(line: 743, column: 2, scope: !14208)
!14219 = !DILocation(line: 745, column: 2, scope: !14208)
!14220 = !DILocation(line: 745, column: 2, scope: !14221)
!14221 = distinct !DILexicalBlock(scope: !14208, file: !2052, line: 745, column: 2)
!14222 = !DILocation(line: 747, column: 6, scope: !14223)
!14223 = distinct !DILexicalBlock(scope: !14208, file: !2052, line: 747, column: 6)
!14224 = !DILocation(line: 747, column: 13, scope: !14223)
!14225 = !DILocation(line: 747, column: 6, scope: !14208)
!14226 = !DILocation(line: 748, column: 28, scope: !14227)
!14227 = distinct !DILexicalBlock(scope: !14223, file: !2052, line: 747, column: 22)
!14228 = !DILocation(line: 748, column: 3, scope: !14227)
!14229 = !DILocation(line: 748, column: 11, scope: !14227)
!14230 = !DILocation(line: 748, column: 16, scope: !14227)
!14231 = !DILocation(line: 748, column: 26, scope: !14227)
!14232 = !DILocation(line: 749, column: 20, scope: !14227)
!14233 = !DILocation(line: 749, column: 28, scope: !14227)
!14234 = !DILocation(line: 749, column: 35, scope: !14227)
!14235 = !DILocation(line: 181, column: 56, scope: !13247, inlinedAt: !14236)
!14236 = distinct !DILocation(line: 749, column: 3, scope: !14227)
!14237 = !DILocation(line: 182, column: 25, scope: !13247, inlinedAt: !14236)
!14238 = !DILocation(line: 184, column: 19, scope: !13247, inlinedAt: !14236)
!14239 = !DILocation(line: 188, column: 2, scope: !13258, inlinedAt: !14236)
!14240 = !DILocation(line: 188, column: 2, scope: !13260, inlinedAt: !14236)
!14241 = !DILocation(line: 189, column: 24, scope: !13262, inlinedAt: !14236)
!14242 = !DILocation(line: 189, column: 32, scope: !13262, inlinedAt: !14236)
!14243 = !DILocation(line: 189, column: 7, scope: !13262, inlinedAt: !14236)
!14244 = !DILocation(line: 189, column: 35, scope: !13262, inlinedAt: !14236)
!14245 = !DILocation(line: 189, column: 7, scope: !13263, inlinedAt: !14236)
!14246 = !DILocation(line: 190, column: 22, scope: !13269, inlinedAt: !14236)
!14247 = !DILocation(line: 190, column: 25, scope: !13269, inlinedAt: !14236)
!14248 = !DILocation(line: 190, column: 30, scope: !13269, inlinedAt: !14236)
!14249 = !DILocation(line: 191, column: 8, scope: !13269, inlinedAt: !14236)
!14250 = !DILocation(line: 191, column: 16, scope: !13269, inlinedAt: !14236)
!14251 = !DILocation(line: 191, column: 21, scope: !13269, inlinedAt: !14236)
!14252 = !DILocation(line: 190, column: 4, scope: !13269, inlinedAt: !14236)
!14253 = !DILocation(line: 192, column: 4, scope: !13269, inlinedAt: !14236)
!14254 = distinct !{!14254, !14239, !14255}
!14255 = !DILocation(line: 194, column: 2, scope: !13258, inlinedAt: !14236)
!14256 = !DILocation(line: 196, column: 19, scope: !13247, inlinedAt: !14236)
!14257 = !DILocation(line: 196, column: 24, scope: !13247, inlinedAt: !14236)
!14258 = !DILocation(line: 196, column: 32, scope: !13247, inlinedAt: !14236)
!14259 = !DILocation(line: 196, column: 37, scope: !13247, inlinedAt: !14236)
!14260 = !DILocation(line: 196, column: 2, scope: !13247, inlinedAt: !14236)
!14261 = !DILocation(line: 197, column: 1, scope: !13247, inlinedAt: !14236)
!14262 = !DILocation(line: 750, column: 2, scope: !14227)
!14263 = !DILocation(line: 751, column: 1, scope: !14208)
!14264 = distinct !DISubprogram(name: "add_thread_timeout", scope: !2052, file: !2052, line: 753, type: !14265, scopeLine: 754, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1950, retainedNodes: !223)
!14265 = !DISubroutineType(types: !14266)
!14266 = !{null, !1953, !14150}
!14267 = !DILocalVariable(name: "thread", arg: 1, scope: !14264, file: !2052, line: 753, type: !1953)
!14268 = !DILocation(line: 753, column: 49, scope: !14264)
!14269 = !DILocalVariable(name: "timeout", arg: 2, scope: !14264, file: !2052, line: 753, type: !14150)
!14270 = !DILocation(line: 753, column: 69, scope: !14264)
!14271 = !DILocation(line: 755, column: 7, scope: !14272)
!14272 = distinct !DILexicalBlock(scope: !14264, file: !2052, line: 755, column: 6)
!14273 = !DILocation(line: 755, column: 6, scope: !14264)
!14274 = !DILocation(line: 756, column: 24, scope: !14275)
!14275 = distinct !DILexicalBlock(scope: !14272, file: !2052, line: 755, column: 41)
!14276 = !DILocation(line: 756, column: 3, scope: !14275)
!14277 = !DILocation(line: 757, column: 2, scope: !14275)
!14278 = !DILocation(line: 758, column: 1, scope: !14264)
!14279 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !12222, file: !12222, line: 47, type: !14265, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1950, retainedNodes: !223)
!14280 = !DILocalVariable(name: "thread", arg: 1, scope: !14279, file: !12222, line: 47, type: !1953)
!14281 = !DILocation(line: 47, column: 58, scope: !14279)
!14282 = !DILocalVariable(name: "ticks", arg: 2, scope: !14279, file: !12222, line: 47, type: !14150)
!14283 = !DILocation(line: 47, column: 78, scope: !14279)
!14284 = !DILocation(line: 49, column: 17, scope: !14279)
!14285 = !DILocation(line: 49, column: 25, scope: !14279)
!14286 = !DILocation(line: 49, column: 30, scope: !14279)
!14287 = !DILocation(line: 49, column: 2, scope: !14279)
!14288 = !DILocation(line: 50, column: 1, scope: !14279)
!14289 = distinct !DISubprogram(name: "z_thread_timeout", scope: !2052, file: !2052, line: 795, type: !2010, scopeLine: 796, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1950, retainedNodes: !223)
!14290 = !DILocalVariable(name: "timeout", arg: 1, scope: !14289, file: !2052, line: 795, type: !2012)
!14291 = !DILocation(line: 795, column: 40, scope: !14289)
!14292 = !DILocalVariable(name: "thread", scope: !14289, file: !2052, line: 797, type: !1953)
!14293 = !DILocation(line: 797, column: 19, scope: !14289)
!14294 = !DILocation(line: 797, column: 28, scope: !14289)
!14295 = !DILocalVariable(name: "__i", scope: !14296, file: !2052, line: 800, type: !12798)
!14296 = distinct !DILexicalBlock(scope: !14289, file: !2052, line: 800, column: 2)
!14297 = !DILocation(line: 800, column: 2, scope: !14296)
!14298 = !DILocalVariable(name: "__key", scope: !14296, file: !2052, line: 800, type: !12798)
!14299 = !DILocation(line: 136, column: 70, scope: !12805, inlinedAt: !14300)
!14300 = distinct !DILocation(line: 800, column: 2, scope: !14296)
!14301 = !DILocation(line: 138, column: 2, scope: !12805, inlinedAt: !14300)
!14302 = !DILocation(line: 139, column: 19, scope: !12805, inlinedAt: !14300)
!14303 = !DILocation(line: 44, column: 15, scope: !12815, inlinedAt: !14304)
!14304 = distinct !DILocation(line: 145, column: 10, scope: !12805, inlinedAt: !14300)
!14305 = !DILocation(line: 53, column: 15, scope: !12815, inlinedAt: !14304)
!14306 = !DILocation(line: 55, column: 2, scope: !12815, inlinedAt: !14304)
!14307 = !DILocation(line: 76, column: 9, scope: !12815, inlinedAt: !14304)
!14308 = !DILocation(line: 145, column: 4, scope: !12805, inlinedAt: !14300)
!14309 = !DILocation(line: 145, column: 8, scope: !12805, inlinedAt: !14300)
!14310 = !DILocation(line: 165, column: 2, scope: !12805, inlinedAt: !14300)
!14311 = !DILocation(line: 800, column: 2, scope: !14312)
!14312 = distinct !DILexicalBlock(scope: !14296, file: !2052, line: 800, column: 2)
!14313 = !DILocalVariable(name: "killed", scope: !14314, file: !2052, line: 801, type: !743)
!14314 = distinct !DILexicalBlock(scope: !14312, file: !2052, line: 800, column: 26)
!14315 = !DILocation(line: 801, column: 8, scope: !14314)
!14316 = !DILocation(line: 801, column: 19, scope: !14314)
!14317 = !DILocation(line: 801, column: 27, scope: !14314)
!14318 = !DILocation(line: 801, column: 32, scope: !14314)
!14319 = !DILocation(line: 801, column: 45, scope: !14314)
!14320 = !DILocation(line: 801, column: 61, scope: !14314)
!14321 = !DILocation(line: 802, column: 12, scope: !14314)
!14322 = !DILocation(line: 802, column: 20, scope: !14314)
!14323 = !DILocation(line: 802, column: 25, scope: !14314)
!14324 = !DILocation(line: 802, column: 38, scope: !14314)
!14325 = !DILocation(line: 804, column: 8, scope: !14326)
!14326 = distinct !DILexicalBlock(scope: !14314, file: !2052, line: 804, column: 7)
!14327 = !DILocation(line: 804, column: 7, scope: !14314)
!14328 = !DILocation(line: 805, column: 8, scope: !14329)
!14329 = distinct !DILexicalBlock(scope: !14330, file: !2052, line: 805, column: 8)
!14330 = distinct !DILexicalBlock(scope: !14326, file: !2052, line: 804, column: 16)
!14331 = !DILocation(line: 805, column: 16, scope: !14329)
!14332 = !DILocation(line: 805, column: 21, scope: !14329)
!14333 = !DILocation(line: 805, column: 31, scope: !14329)
!14334 = !DILocation(line: 805, column: 8, scope: !14330)
!14335 = !DILocation(line: 806, column: 30, scope: !14336)
!14336 = distinct !DILexicalBlock(scope: !14329, file: !2052, line: 805, column: 40)
!14337 = !DILocation(line: 806, column: 5, scope: !14336)
!14338 = !DILocation(line: 807, column: 4, scope: !14336)
!14339 = !DILocation(line: 808, column: 29, scope: !14330)
!14340 = !DILocation(line: 808, column: 4, scope: !14330)
!14341 = !DILocation(line: 809, column: 35, scope: !14330)
!14342 = !DILocation(line: 809, column: 4, scope: !14330)
!14343 = !DILocation(line: 810, column: 17, scope: !14330)
!14344 = !DILocation(line: 810, column: 4, scope: !14330)
!14345 = !DILocation(line: 811, column: 3, scope: !14330)
!14346 = !DILocation(line: 812, column: 2, scope: !14314)
!14347 = !DILocation(line: 189, column: 60, scope: !12847, inlinedAt: !14348)
!14348 = distinct !DILocation(line: 800, column: 2, scope: !14312)
!14349 = !DILocation(line: 190, column: 23, scope: !12847, inlinedAt: !14348)
!14350 = !DILocation(line: 192, column: 2, scope: !12847, inlinedAt: !14348)
!14351 = !DILocation(line: 215, column: 22, scope: !12847, inlinedAt: !14348)
!14352 = !DILocation(line: 84, column: 56, scope: !12857, inlinedAt: !14353)
!14353 = distinct !DILocation(line: 215, column: 2, scope: !12847, inlinedAt: !14348)
!14354 = !DILocation(line: 98, column: 12, scope: !12857, inlinedAt: !14353)
!14355 = !DILocation(line: 95, column: 2, scope: !12857, inlinedAt: !14353)
!14356 = distinct !{!14356, !14297, !14357}
!14357 = !DILocation(line: 812, column: 2, scope: !14296)
!14358 = !DILocation(line: 813, column: 1, scope: !14289)
!14359 = distinct !DISubprogram(name: "unpend_thread_no_timeout", scope: !2052, file: !2052, line: 779, type: !12759, scopeLine: 780, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1950, retainedNodes: !223)
!14360 = !DILocalVariable(name: "thread", arg: 1, scope: !14359, file: !2052, line: 779, type: !1953)
!14361 = !DILocation(line: 779, column: 62, scope: !14359)
!14362 = !DILocation(line: 781, column: 38, scope: !14359)
!14363 = !DILocation(line: 781, column: 21, scope: !14359)
!14364 = !DILocation(line: 781, column: 47, scope: !14359)
!14365 = !DILocation(line: 781, column: 54, scope: !14359)
!14366 = !DILocation(line: 781, column: 2, scope: !14359)
!14367 = !DILocation(line: 782, column: 31, scope: !14359)
!14368 = !DILocation(line: 782, column: 2, scope: !14359)
!14369 = !DILocation(line: 783, column: 2, scope: !14359)
!14370 = !DILocation(line: 783, column: 10, scope: !14359)
!14371 = !DILocation(line: 783, column: 15, scope: !14359)
!14372 = !DILocation(line: 783, column: 25, scope: !14359)
!14373 = !DILocation(line: 784, column: 1, scope: !14359)
!14374 = distinct !DISubprogram(name: "pended_on_thread", scope: !2052, file: !2052, line: 724, type: !14375, scopeLine: 725, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1950, retainedNodes: !223)
!14375 = !DISubroutineType(types: !14376)
!14376 = !{!1984, !1953}
!14377 = !DILocalVariable(name: "thread", arg: 1, scope: !14374, file: !2052, line: 724, type: !1953)
!14378 = !DILocation(line: 724, column: 53, scope: !14374)
!14379 = !DILocation(line: 728, column: 9, scope: !14374)
!14380 = !DILocation(line: 728, column: 17, scope: !14374)
!14381 = !DILocation(line: 728, column: 22, scope: !14374)
!14382 = !DILocation(line: 728, column: 2, scope: !14374)
!14383 = distinct !DISubprogram(name: "z_mark_thread_as_not_pending", scope: !11628, file: !11628, line: 165, type: !12759, scopeLine: 166, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1950, retainedNodes: !223)
!14384 = !DILocalVariable(name: "thread", arg: 1, scope: !14383, file: !11628, line: 165, type: !1953)
!14385 = !DILocation(line: 165, column: 66, scope: !14383)
!14386 = !DILocation(line: 167, column: 2, scope: !14383)
!14387 = !DILocation(line: 167, column: 10, scope: !14383)
!14388 = !DILocation(line: 167, column: 15, scope: !14383)
!14389 = !DILocation(line: 167, column: 28, scope: !14383)
!14390 = !DILocation(line: 168, column: 1, scope: !14383)
!14391 = distinct !DISubprogram(name: "unready_thread", scope: !2052, file: !2052, line: 731, type: !12759, scopeLine: 732, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1950, retainedNodes: !223)
!14392 = !DILocalVariable(name: "thread", arg: 1, scope: !14391, file: !2052, line: 731, type: !1953)
!14393 = !DILocation(line: 731, column: 45, scope: !14391)
!14394 = !DILocation(line: 733, column: 25, scope: !14395)
!14395 = distinct !DILexicalBlock(scope: !14391, file: !2052, line: 733, column: 6)
!14396 = !DILocation(line: 733, column: 6, scope: !14395)
!14397 = !DILocation(line: 733, column: 6, scope: !14391)
!14398 = !DILocation(line: 734, column: 18, scope: !14399)
!14399 = distinct !DILexicalBlock(scope: !14395, file: !2052, line: 733, column: 34)
!14400 = !DILocation(line: 264, column: 59, scope: !13194, inlinedAt: !14401)
!14401 = distinct !DILocation(line: 734, column: 3, scope: !14399)
!14402 = !DILocation(line: 266, column: 2, scope: !13194, inlinedAt: !14401)
!14403 = !DILocation(line: 266, column: 10, scope: !13194, inlinedAt: !14401)
!14404 = !DILocation(line: 266, column: 15, scope: !13194, inlinedAt: !14401)
!14405 = !DILocation(line: 266, column: 28, scope: !13194, inlinedAt: !14401)
!14406 = !DILocation(line: 267, column: 26, scope: !13202, inlinedAt: !14401)
!14407 = !DILocation(line: 267, column: 6, scope: !13202, inlinedAt: !14401)
!14408 = !DILocation(line: 267, column: 6, scope: !13194, inlinedAt: !14401)
!14409 = !DILocation(line: 268, column: 15, scope: !13206, inlinedAt: !14401)
!14410 = !DILocation(line: 232, column: 56, scope: !13208, inlinedAt: !14411)
!14411 = distinct !DILocation(line: 268, column: 3, scope: !13206, inlinedAt: !14401)
!14412 = !DILocation(line: 234, column: 31, scope: !13208, inlinedAt: !14411)
!14413 = !DILocation(line: 199, column: 57, scope: !13213, inlinedAt: !14414)
!14414 = distinct !DILocation(line: 234, column: 19, scope: !13208, inlinedAt: !14411)
!14415 = !DILocation(line: 234, column: 19, scope: !13208, inlinedAt: !14411)
!14416 = !DILocation(line: 234, column: 40, scope: !13208, inlinedAt: !14411)
!14417 = !DILocation(line: 234, column: 2, scope: !13208, inlinedAt: !14411)
!14418 = !DILocation(line: 269, column: 2, scope: !13206, inlinedAt: !14401)
!14419 = !DILocation(line: 735, column: 2, scope: !14399)
!14420 = !DILocation(line: 736, column: 15, scope: !14391)
!14421 = !DILocation(line: 736, column: 25, scope: !14391)
!14422 = !DILocation(line: 736, column: 22, scope: !14391)
!14423 = !DILocation(line: 736, column: 2, scope: !14391)
!14424 = !DILocation(line: 737, column: 1, scope: !14391)
!14425 = distinct !DISubprogram(name: "z_mark_thread_as_pending", scope: !11628, file: !11628, line: 160, type: !12759, scopeLine: 161, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1950, retainedNodes: !223)
!14426 = !DILocalVariable(name: "thread", arg: 1, scope: !14425, file: !11628, line: 160, type: !1953)
!14427 = !DILocation(line: 160, column: 62, scope: !14425)
!14428 = !DILocation(line: 162, column: 2, scope: !14425)
!14429 = !DILocation(line: 162, column: 10, scope: !14425)
!14430 = !DILocation(line: 162, column: 15, scope: !14425)
!14431 = !DILocation(line: 162, column: 28, scope: !14425)
!14432 = !DILocation(line: 163, column: 1, scope: !14425)
!14433 = distinct !DISubprogram(name: "z_unpend_thread_no_timeout", scope: !2052, file: !2052, line: 786, type: !12759, scopeLine: 787, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1950, retainedNodes: !223)
!14434 = !DILocalVariable(name: "thread", arg: 1, scope: !14433, file: !2052, line: 786, type: !1953)
!14435 = !DILocation(line: 786, column: 64, scope: !14433)
!14436 = !DILocalVariable(name: "__i", scope: !14437, file: !2052, line: 788, type: !12798)
!14437 = distinct !DILexicalBlock(scope: !14433, file: !2052, line: 788, column: 2)
!14438 = !DILocation(line: 788, column: 2, scope: !14437)
!14439 = !DILocalVariable(name: "__key", scope: !14437, file: !2052, line: 788, type: !12798)
!14440 = !DILocation(line: 136, column: 70, scope: !12805, inlinedAt: !14441)
!14441 = distinct !DILocation(line: 788, column: 2, scope: !14437)
!14442 = !DILocation(line: 138, column: 2, scope: !12805, inlinedAt: !14441)
!14443 = !DILocation(line: 139, column: 19, scope: !12805, inlinedAt: !14441)
!14444 = !DILocation(line: 44, column: 15, scope: !12815, inlinedAt: !14445)
!14445 = distinct !DILocation(line: 145, column: 10, scope: !12805, inlinedAt: !14441)
!14446 = !DILocation(line: 53, column: 15, scope: !12815, inlinedAt: !14445)
!14447 = !DILocation(line: 55, column: 2, scope: !12815, inlinedAt: !14445)
!14448 = !DILocation(line: 76, column: 9, scope: !12815, inlinedAt: !14445)
!14449 = !DILocation(line: 145, column: 4, scope: !12805, inlinedAt: !14441)
!14450 = !DILocation(line: 145, column: 8, scope: !12805, inlinedAt: !14441)
!14451 = !DILocation(line: 165, column: 2, scope: !12805, inlinedAt: !14441)
!14452 = !DILocation(line: 788, column: 2, scope: !14453)
!14453 = distinct !DILexicalBlock(scope: !14437, file: !2052, line: 788, column: 2)
!14454 = !DILocation(line: 789, column: 28, scope: !14455)
!14455 = distinct !DILexicalBlock(scope: !14453, file: !2052, line: 788, column: 26)
!14456 = !DILocation(line: 789, column: 3, scope: !14455)
!14457 = !DILocation(line: 790, column: 2, scope: !14455)
!14458 = !DILocation(line: 189, column: 60, scope: !12847, inlinedAt: !14459)
!14459 = distinct !DILocation(line: 788, column: 2, scope: !14453)
!14460 = !DILocation(line: 190, column: 23, scope: !12847, inlinedAt: !14459)
!14461 = !DILocation(line: 192, column: 2, scope: !12847, inlinedAt: !14459)
!14462 = !DILocation(line: 215, column: 22, scope: !12847, inlinedAt: !14459)
!14463 = !DILocation(line: 84, column: 56, scope: !12857, inlinedAt: !14464)
!14464 = distinct !DILocation(line: 215, column: 2, scope: !12847, inlinedAt: !14459)
!14465 = !DILocation(line: 98, column: 12, scope: !12857, inlinedAt: !14464)
!14466 = !DILocation(line: 95, column: 2, scope: !12857, inlinedAt: !14464)
!14467 = distinct !{!14467, !14438, !14468}
!14468 = !DILocation(line: 790, column: 2, scope: !14437)
!14469 = !DILocation(line: 791, column: 1, scope: !14433)
!14470 = distinct !DISubprogram(name: "z_pend_curr_irqlock", scope: !2052, file: !2052, line: 816, type: !14471, scopeLine: 817, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1950, retainedNodes: !223)
!14471 = !DISubroutineType(types: !14472)
!14472 = !{!103, !173, !1984, !14150}
!14473 = !DILocalVariable(name: "key", arg: 1, scope: !14470, file: !2052, line: 816, type: !173)
!14474 = !DILocation(line: 816, column: 34, scope: !14470)
!14475 = !DILocalVariable(name: "wait_q", arg: 2, scope: !14470, file: !2052, line: 816, type: !1984)
!14476 = !DILocation(line: 816, column: 50, scope: !14470)
!14477 = !DILocalVariable(name: "timeout", arg: 3, scope: !14470, file: !2052, line: 816, type: !14150)
!14478 = !DILocation(line: 816, column: 70, scope: !14470)
!14479 = !DILocation(line: 823, column: 14, scope: !14470)
!14480 = !DILocation(line: 823, column: 24, scope: !14470)
!14481 = !DILocation(line: 823, column: 2, scope: !14470)
!14482 = !DILocation(line: 826, column: 20, scope: !14470)
!14483 = !DILocation(line: 826, column: 18, scope: !14470)
!14484 = !DILocalVariable(name: "ret", scope: !14470, file: !2052, line: 828, type: !103)
!14485 = !DILocation(line: 828, column: 6, scope: !14470)
!14486 = !DILocation(line: 828, column: 27, scope: !14470)
!14487 = !DILocation(line: 828, column: 12, scope: !14470)
!14488 = !DILocalVariable(name: "__i", scope: !14489, file: !2052, line: 829, type: !12798)
!14489 = distinct !DILexicalBlock(scope: !14470, file: !2052, line: 829, column: 2)
!14490 = !DILocation(line: 829, column: 2, scope: !14489)
!14491 = !DILocalVariable(name: "__key", scope: !14489, file: !2052, line: 829, type: !12798)
!14492 = !DILocation(line: 136, column: 70, scope: !12805, inlinedAt: !14493)
!14493 = distinct !DILocation(line: 829, column: 2, scope: !14489)
!14494 = !DILocation(line: 138, column: 2, scope: !12805, inlinedAt: !14493)
!14495 = !DILocation(line: 139, column: 19, scope: !12805, inlinedAt: !14493)
!14496 = !DILocation(line: 44, column: 15, scope: !12815, inlinedAt: !14497)
!14497 = distinct !DILocation(line: 145, column: 10, scope: !12805, inlinedAt: !14493)
!14498 = !DILocation(line: 53, column: 15, scope: !12815, inlinedAt: !14497)
!14499 = !DILocation(line: 55, column: 2, scope: !12815, inlinedAt: !14497)
!14500 = !DILocation(line: 76, column: 9, scope: !12815, inlinedAt: !14497)
!14501 = !DILocation(line: 145, column: 4, scope: !12805, inlinedAt: !14493)
!14502 = !DILocation(line: 145, column: 8, scope: !12805, inlinedAt: !14493)
!14503 = !DILocation(line: 165, column: 2, scope: !12805, inlinedAt: !14493)
!14504 = !DILocation(line: 829, column: 2, scope: !14505)
!14505 = distinct !DILexicalBlock(scope: !14489, file: !2052, line: 829, column: 2)
!14506 = !DILocation(line: 830, column: 7, scope: !14507)
!14507 = distinct !DILexicalBlock(scope: !14508, file: !2052, line: 830, column: 7)
!14508 = distinct !DILexicalBlock(scope: !14505, file: !2052, line: 829, column: 26)
!14509 = !DILocation(line: 830, column: 26, scope: !14507)
!14510 = !DILocation(line: 830, column: 23, scope: !14507)
!14511 = !DILocation(line: 830, column: 7, scope: !14508)
!14512 = !DILocation(line: 831, column: 20, scope: !14513)
!14513 = distinct !DILexicalBlock(scope: !14507, file: !2052, line: 830, column: 36)
!14514 = !DILocation(line: 832, column: 3, scope: !14513)
!14515 = !DILocation(line: 833, column: 2, scope: !14508)
!14516 = !DILocation(line: 189, column: 60, scope: !12847, inlinedAt: !14517)
!14517 = distinct !DILocation(line: 829, column: 2, scope: !14505)
!14518 = !DILocation(line: 190, column: 23, scope: !12847, inlinedAt: !14517)
!14519 = !DILocation(line: 192, column: 2, scope: !12847, inlinedAt: !14517)
!14520 = !DILocation(line: 215, column: 22, scope: !12847, inlinedAt: !14517)
!14521 = !DILocation(line: 84, column: 56, scope: !12857, inlinedAt: !14522)
!14522 = distinct !DILocation(line: 215, column: 2, scope: !12847, inlinedAt: !14517)
!14523 = !DILocation(line: 98, column: 12, scope: !12857, inlinedAt: !14522)
!14524 = !DILocation(line: 95, column: 2, scope: !12857, inlinedAt: !14522)
!14525 = distinct !{!14525, !14490, !14526}
!14526 = !DILocation(line: 833, column: 2, scope: !14489)
!14527 = !DILocation(line: 834, column: 9, scope: !14470)
!14528 = !DILocation(line: 834, column: 2, scope: !14470)
!14529 = distinct !DISubprogram(name: "z_pend_curr", scope: !2052, file: !2052, line: 840, type: !14530, scopeLine: 842, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1950, retainedNodes: !223)
!14530 = !DISubroutineType(types: !14531)
!14531 = !{!103, !12808, !12798, !1984, !14150}
!14532 = !DILocalVariable(name: "lock", arg: 1, scope: !14529, file: !2052, line: 840, type: !12808)
!14533 = !DILocation(line: 840, column: 36, scope: !14529)
!14534 = !DILocalVariable(name: "key", arg: 2, scope: !14529, file: !2052, line: 840, type: !12798)
!14535 = !DILocation(line: 840, column: 59, scope: !14529)
!14536 = !DILocalVariable(name: "wait_q", arg: 3, scope: !14529, file: !2052, line: 841, type: !1984)
!14537 = !DILocation(line: 841, column: 20, scope: !14529)
!14538 = !DILocalVariable(name: "timeout", arg: 4, scope: !14529, file: !2052, line: 841, type: !14150)
!14539 = !DILocation(line: 841, column: 40, scope: !14529)
!14540 = !DILocation(line: 844, column: 20, scope: !14529)
!14541 = !DILocation(line: 844, column: 18, scope: !14529)
!14542 = !DILocation(line: 136, column: 70, scope: !12805, inlinedAt: !14543)
!14543 = distinct !DILocation(line: 856, column: 9, scope: !14529)
!14544 = !DILocation(line: 138, column: 2, scope: !12805, inlinedAt: !14543)
!14545 = !DILocation(line: 139, column: 19, scope: !12805, inlinedAt: !14543)
!14546 = !DILocation(line: 44, column: 15, scope: !12815, inlinedAt: !14547)
!14547 = distinct !DILocation(line: 145, column: 10, scope: !12805, inlinedAt: !14543)
!14548 = !DILocation(line: 53, column: 15, scope: !12815, inlinedAt: !14547)
!14549 = !DILocation(line: 55, column: 2, scope: !12815, inlinedAt: !14547)
!14550 = !DILocation(line: 76, column: 9, scope: !12815, inlinedAt: !14547)
!14551 = !DILocation(line: 145, column: 4, scope: !12805, inlinedAt: !14543)
!14552 = !DILocation(line: 145, column: 8, scope: !12805, inlinedAt: !14543)
!14553 = !DILocation(line: 165, column: 2, scope: !12805, inlinedAt: !14543)
!14554 = !DILocation(line: 856, column: 9, scope: !14529)
!14555 = !DILocation(line: 857, column: 14, scope: !14529)
!14556 = !DILocation(line: 857, column: 24, scope: !14529)
!14557 = !DILocation(line: 857, column: 2, scope: !14529)
!14558 = !DILocation(line: 858, column: 17, scope: !14529)
!14559 = !DILocation(line: 221, column: 61, scope: !13880, inlinedAt: !14560)
!14560 = distinct !DILocation(line: 858, column: 2, scope: !14529)
!14561 = !DILocation(line: 223, column: 2, scope: !13880, inlinedAt: !14560)
!14562 = !DILocation(line: 859, column: 9, scope: !14529)
!14563 = !DILocation(line: 193, column: 52, scope: !13871, inlinedAt: !14564)
!14564 = distinct !DILocation(line: 859, column: 9, scope: !14529)
!14565 = !DILocation(line: 193, column: 75, scope: !13871, inlinedAt: !14564)
!14566 = !DILocation(line: 195, column: 17, scope: !13871, inlinedAt: !14564)
!14567 = !DILocation(line: 221, column: 61, scope: !13880, inlinedAt: !14568)
!14568 = distinct !DILocation(line: 195, column: 2, scope: !13871, inlinedAt: !14564)
!14569 = !DILocation(line: 223, column: 2, scope: !13880, inlinedAt: !14568)
!14570 = !DILocation(line: 196, column: 28, scope: !13871, inlinedAt: !14564)
!14571 = !DILocation(line: 196, column: 9, scope: !13871, inlinedAt: !14564)
!14572 = !DILocation(line: 859, column: 2, scope: !14529)
!14573 = distinct !DISubprogram(name: "z_unpend1_no_timeout", scope: !2052, file: !2052, line: 862, type: !14574, scopeLine: 863, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1950, retainedNodes: !223)
!14574 = !DISubroutineType(types: !14575)
!14575 = !{!1953, !1984}
!14576 = !DILocalVariable(name: "wait_q", arg: 1, scope: !14573, file: !2052, line: 862, type: !1984)
!14577 = !DILocation(line: 862, column: 50, scope: !14573)
!14578 = !DILocalVariable(name: "thread", scope: !14573, file: !2052, line: 864, type: !1953)
!14579 = !DILocation(line: 864, column: 19, scope: !14573)
!14580 = !DILocalVariable(name: "__i", scope: !14581, file: !2052, line: 866, type: !12798)
!14581 = distinct !DILexicalBlock(scope: !14573, file: !2052, line: 866, column: 2)
!14582 = !DILocation(line: 866, column: 2, scope: !14581)
!14583 = !DILocalVariable(name: "__key", scope: !14581, file: !2052, line: 866, type: !12798)
!14584 = !DILocation(line: 136, column: 70, scope: !12805, inlinedAt: !14585)
!14585 = distinct !DILocation(line: 866, column: 2, scope: !14581)
!14586 = !DILocation(line: 138, column: 2, scope: !12805, inlinedAt: !14585)
!14587 = !DILocation(line: 139, column: 19, scope: !12805, inlinedAt: !14585)
!14588 = !DILocation(line: 44, column: 15, scope: !12815, inlinedAt: !14589)
!14589 = distinct !DILocation(line: 145, column: 10, scope: !12805, inlinedAt: !14585)
!14590 = !DILocation(line: 53, column: 15, scope: !12815, inlinedAt: !14589)
!14591 = !DILocation(line: 55, column: 2, scope: !12815, inlinedAt: !14589)
!14592 = !DILocation(line: 76, column: 9, scope: !12815, inlinedAt: !14589)
!14593 = !DILocation(line: 145, column: 4, scope: !12805, inlinedAt: !14585)
!14594 = !DILocation(line: 145, column: 8, scope: !12805, inlinedAt: !14585)
!14595 = !DILocation(line: 165, column: 2, scope: !12805, inlinedAt: !14585)
!14596 = !DILocation(line: 866, column: 2, scope: !14597)
!14597 = distinct !DILexicalBlock(scope: !14581, file: !2052, line: 866, column: 2)
!14598 = !DILocation(line: 867, column: 29, scope: !14599)
!14599 = distinct !DILexicalBlock(scope: !14597, file: !2052, line: 866, column: 26)
!14600 = !DILocation(line: 867, column: 37, scope: !14599)
!14601 = !DILocation(line: 867, column: 12, scope: !14599)
!14602 = !DILocation(line: 867, column: 10, scope: !14599)
!14603 = !DILocation(line: 869, column: 7, scope: !14604)
!14604 = distinct !DILexicalBlock(scope: !14599, file: !2052, line: 869, column: 7)
!14605 = !DILocation(line: 869, column: 14, scope: !14604)
!14606 = !DILocation(line: 869, column: 7, scope: !14599)
!14607 = !DILocation(line: 870, column: 29, scope: !14608)
!14608 = distinct !DILexicalBlock(scope: !14604, file: !2052, line: 869, column: 23)
!14609 = !DILocation(line: 870, column: 4, scope: !14608)
!14610 = !DILocation(line: 871, column: 3, scope: !14608)
!14611 = !DILocation(line: 872, column: 2, scope: !14599)
!14612 = !DILocation(line: 189, column: 60, scope: !12847, inlinedAt: !14613)
!14613 = distinct !DILocation(line: 866, column: 2, scope: !14597)
!14614 = !DILocation(line: 190, column: 23, scope: !12847, inlinedAt: !14613)
!14615 = !DILocation(line: 192, column: 2, scope: !12847, inlinedAt: !14613)
!14616 = !DILocation(line: 215, column: 22, scope: !12847, inlinedAt: !14613)
!14617 = !DILocation(line: 84, column: 56, scope: !12857, inlinedAt: !14618)
!14618 = distinct !DILocation(line: 215, column: 2, scope: !12847, inlinedAt: !14613)
!14619 = !DILocation(line: 98, column: 12, scope: !12857, inlinedAt: !14618)
!14620 = !DILocation(line: 95, column: 2, scope: !12857, inlinedAt: !14618)
!14621 = distinct !{!14621, !14582, !14622}
!14622 = !DILocation(line: 872, column: 2, scope: !14581)
!14623 = !DILocation(line: 874, column: 9, scope: !14573)
!14624 = !DILocation(line: 874, column: 2, scope: !14573)
!14625 = distinct !DISubprogram(name: "z_unpend_first_thread", scope: !2052, file: !2052, line: 877, type: !14574, scopeLine: 878, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1950, retainedNodes: !223)
!14626 = !DILocalVariable(name: "wait_q", arg: 1, scope: !14625, file: !2052, line: 877, type: !1984)
!14627 = !DILocation(line: 877, column: 51, scope: !14625)
!14628 = !DILocalVariable(name: "thread", scope: !14625, file: !2052, line: 879, type: !1953)
!14629 = !DILocation(line: 879, column: 19, scope: !14625)
!14630 = !DILocalVariable(name: "__i", scope: !14631, file: !2052, line: 881, type: !12798)
!14631 = distinct !DILexicalBlock(scope: !14625, file: !2052, line: 881, column: 2)
!14632 = !DILocation(line: 881, column: 2, scope: !14631)
!14633 = !DILocalVariable(name: "__key", scope: !14631, file: !2052, line: 881, type: !12798)
!14634 = !DILocation(line: 136, column: 70, scope: !12805, inlinedAt: !14635)
!14635 = distinct !DILocation(line: 881, column: 2, scope: !14631)
!14636 = !DILocation(line: 138, column: 2, scope: !12805, inlinedAt: !14635)
!14637 = !DILocation(line: 139, column: 19, scope: !12805, inlinedAt: !14635)
!14638 = !DILocation(line: 44, column: 15, scope: !12815, inlinedAt: !14639)
!14639 = distinct !DILocation(line: 145, column: 10, scope: !12805, inlinedAt: !14635)
!14640 = !DILocation(line: 53, column: 15, scope: !12815, inlinedAt: !14639)
!14641 = !DILocation(line: 55, column: 2, scope: !12815, inlinedAt: !14639)
!14642 = !DILocation(line: 76, column: 9, scope: !12815, inlinedAt: !14639)
!14643 = !DILocation(line: 145, column: 4, scope: !12805, inlinedAt: !14635)
!14644 = !DILocation(line: 145, column: 8, scope: !12805, inlinedAt: !14635)
!14645 = !DILocation(line: 165, column: 2, scope: !12805, inlinedAt: !14635)
!14646 = !DILocation(line: 881, column: 2, scope: !14647)
!14647 = distinct !DILexicalBlock(scope: !14631, file: !2052, line: 881, column: 2)
!14648 = !DILocation(line: 882, column: 29, scope: !14649)
!14649 = distinct !DILexicalBlock(scope: !14647, file: !2052, line: 881, column: 26)
!14650 = !DILocation(line: 882, column: 37, scope: !14649)
!14651 = !DILocation(line: 882, column: 12, scope: !14649)
!14652 = !DILocation(line: 882, column: 10, scope: !14649)
!14653 = !DILocation(line: 884, column: 7, scope: !14654)
!14654 = distinct !DILexicalBlock(scope: !14649, file: !2052, line: 884, column: 7)
!14655 = !DILocation(line: 884, column: 14, scope: !14654)
!14656 = !DILocation(line: 884, column: 7, scope: !14649)
!14657 = !DILocation(line: 885, column: 29, scope: !14658)
!14658 = distinct !DILexicalBlock(scope: !14654, file: !2052, line: 884, column: 23)
!14659 = !DILocation(line: 885, column: 4, scope: !14658)
!14660 = !DILocation(line: 886, column: 33, scope: !14658)
!14661 = !DILocation(line: 886, column: 10, scope: !14658)
!14662 = !DILocation(line: 887, column: 3, scope: !14658)
!14663 = !DILocation(line: 888, column: 2, scope: !14649)
!14664 = !DILocation(line: 189, column: 60, scope: !12847, inlinedAt: !14665)
!14665 = distinct !DILocation(line: 881, column: 2, scope: !14647)
!14666 = !DILocation(line: 190, column: 23, scope: !12847, inlinedAt: !14665)
!14667 = !DILocation(line: 192, column: 2, scope: !12847, inlinedAt: !14665)
!14668 = !DILocation(line: 215, column: 22, scope: !12847, inlinedAt: !14665)
!14669 = !DILocation(line: 84, column: 56, scope: !12857, inlinedAt: !14670)
!14670 = distinct !DILocation(line: 215, column: 2, scope: !12847, inlinedAt: !14665)
!14671 = !DILocation(line: 98, column: 12, scope: !12857, inlinedAt: !14670)
!14672 = !DILocation(line: 95, column: 2, scope: !12857, inlinedAt: !14670)
!14673 = distinct !{!14673, !14632, !14674}
!14674 = !DILocation(line: 888, column: 2, scope: !14631)
!14675 = !DILocation(line: 890, column: 9, scope: !14625)
!14676 = !DILocation(line: 890, column: 2, scope: !14625)
!14677 = distinct !DISubprogram(name: "z_unpend_thread", scope: !2052, file: !2052, line: 893, type: !12759, scopeLine: 894, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1950, retainedNodes: !223)
!14678 = !DILocalVariable(name: "thread", arg: 1, scope: !14677, file: !2052, line: 893, type: !1953)
!14679 = !DILocation(line: 893, column: 39, scope: !14677)
!14680 = !DILocation(line: 895, column: 29, scope: !14677)
!14681 = !DILocation(line: 786, column: 64, scope: !14433, inlinedAt: !14682)
!14682 = distinct !DILocation(line: 895, column: 2, scope: !14677)
!14683 = !DILocation(line: 788, column: 2, scope: !14437, inlinedAt: !14682)
!14684 = !DILocation(line: 136, column: 70, scope: !12805, inlinedAt: !14685)
!14685 = distinct !DILocation(line: 788, column: 2, scope: !14437, inlinedAt: !14682)
!14686 = !DILocation(line: 138, column: 2, scope: !12805, inlinedAt: !14685)
!14687 = !DILocation(line: 139, column: 19, scope: !12805, inlinedAt: !14685)
!14688 = !DILocation(line: 44, column: 15, scope: !12815, inlinedAt: !14689)
!14689 = distinct !DILocation(line: 145, column: 10, scope: !12805, inlinedAt: !14685)
!14690 = !DILocation(line: 53, column: 15, scope: !12815, inlinedAt: !14689)
!14691 = !DILocation(line: 55, column: 2, scope: !12815, inlinedAt: !14689)
!14692 = !DILocation(line: 76, column: 9, scope: !12815, inlinedAt: !14689)
!14693 = !DILocation(line: 145, column: 4, scope: !12805, inlinedAt: !14685)
!14694 = !DILocation(line: 145, column: 8, scope: !12805, inlinedAt: !14685)
!14695 = !DILocation(line: 165, column: 2, scope: !12805, inlinedAt: !14685)
!14696 = !DILocation(line: 788, column: 2, scope: !14453, inlinedAt: !14682)
!14697 = !DILocation(line: 789, column: 28, scope: !14455, inlinedAt: !14682)
!14698 = !DILocation(line: 789, column: 3, scope: !14455, inlinedAt: !14682)
!14699 = !DILocation(line: 189, column: 60, scope: !12847, inlinedAt: !14700)
!14700 = distinct !DILocation(line: 788, column: 2, scope: !14453, inlinedAt: !14682)
!14701 = !DILocation(line: 190, column: 23, scope: !12847, inlinedAt: !14700)
!14702 = !DILocation(line: 192, column: 2, scope: !12847, inlinedAt: !14700)
!14703 = !DILocation(line: 215, column: 22, scope: !12847, inlinedAt: !14700)
!14704 = !DILocation(line: 84, column: 56, scope: !12857, inlinedAt: !14705)
!14705 = distinct !DILocation(line: 215, column: 2, scope: !12847, inlinedAt: !14700)
!14706 = !DILocation(line: 98, column: 12, scope: !12857, inlinedAt: !14705)
!14707 = !DILocation(line: 95, column: 2, scope: !12857, inlinedAt: !14705)
!14708 = distinct !{!14708, !14683, !14709}
!14709 = !DILocation(line: 790, column: 2, scope: !14437, inlinedAt: !14682)
!14710 = !DILocation(line: 896, column: 31, scope: !14677)
!14711 = !DILocation(line: 896, column: 8, scope: !14677)
!14712 = !DILocation(line: 897, column: 1, scope: !14677)
!14713 = distinct !DISubprogram(name: "z_set_prio", scope: !2052, file: !2052, line: 902, type: !13417, scopeLine: 903, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1950, retainedNodes: !223)
!14714 = !DILocalVariable(name: "thread", arg: 1, scope: !14713, file: !2052, line: 902, type: !1953)
!14715 = !DILocation(line: 902, column: 34, scope: !14713)
!14716 = !DILocalVariable(name: "prio", arg: 2, scope: !14713, file: !2052, line: 902, type: !103)
!14717 = !DILocation(line: 902, column: 46, scope: !14713)
!14718 = !DILocalVariable(name: "need_sched", scope: !14713, file: !2052, line: 904, type: !743)
!14719 = !DILocation(line: 904, column: 7, scope: !14713)
!14720 = !DILocalVariable(name: "__i", scope: !14721, file: !2052, line: 906, type: !12798)
!14721 = distinct !DILexicalBlock(scope: !14713, file: !2052, line: 906, column: 2)
!14722 = !DILocation(line: 906, column: 2, scope: !14721)
!14723 = !DILocalVariable(name: "__key", scope: !14721, file: !2052, line: 906, type: !12798)
!14724 = !DILocation(line: 136, column: 70, scope: !12805, inlinedAt: !14725)
!14725 = distinct !DILocation(line: 906, column: 2, scope: !14721)
!14726 = !DILocation(line: 138, column: 2, scope: !12805, inlinedAt: !14725)
!14727 = !DILocation(line: 139, column: 19, scope: !12805, inlinedAt: !14725)
!14728 = !DILocation(line: 44, column: 15, scope: !12815, inlinedAt: !14729)
!14729 = distinct !DILocation(line: 145, column: 10, scope: !12805, inlinedAt: !14725)
!14730 = !DILocation(line: 53, column: 15, scope: !12815, inlinedAt: !14729)
!14731 = !DILocation(line: 55, column: 2, scope: !12815, inlinedAt: !14729)
!14732 = !DILocation(line: 76, column: 9, scope: !12815, inlinedAt: !14729)
!14733 = !DILocation(line: 145, column: 4, scope: !12805, inlinedAt: !14725)
!14734 = !DILocation(line: 145, column: 8, scope: !12805, inlinedAt: !14725)
!14735 = !DILocation(line: 165, column: 2, scope: !12805, inlinedAt: !14725)
!14736 = !DILocation(line: 906, column: 2, scope: !14737)
!14737 = distinct !DILexicalBlock(scope: !14721, file: !2052, line: 906, column: 2)
!14738 = !DILocation(line: 907, column: 34, scope: !14739)
!14739 = distinct !DILexicalBlock(scope: !14737, file: !2052, line: 906, column: 26)
!14740 = !DILocation(line: 907, column: 16, scope: !14739)
!14741 = !DILocation(line: 907, column: 14, scope: !14739)
!14742 = !DILocation(line: 909, column: 7, scope: !14743)
!14743 = distinct !DILexicalBlock(scope: !14739, file: !2052, line: 909, column: 7)
!14744 = !DILocation(line: 909, column: 7, scope: !14739)
!14745 = !DILocation(line: 912, column: 20, scope: !14746)
!14746 = distinct !DILexicalBlock(scope: !14747, file: !2052, line: 911, column: 63)
!14747 = distinct !DILexicalBlock(scope: !14748, file: !2052, line: 911, column: 8)
!14748 = distinct !DILexicalBlock(scope: !14743, file: !2052, line: 909, column: 19)
!14749 = !DILocation(line: 264, column: 59, scope: !13194, inlinedAt: !14750)
!14750 = distinct !DILocation(line: 912, column: 5, scope: !14746)
!14751 = !DILocation(line: 266, column: 2, scope: !13194, inlinedAt: !14750)
!14752 = !DILocation(line: 266, column: 10, scope: !13194, inlinedAt: !14750)
!14753 = !DILocation(line: 266, column: 15, scope: !13194, inlinedAt: !14750)
!14754 = !DILocation(line: 266, column: 28, scope: !13194, inlinedAt: !14750)
!14755 = !DILocation(line: 267, column: 26, scope: !13202, inlinedAt: !14750)
!14756 = !DILocation(line: 267, column: 6, scope: !13202, inlinedAt: !14750)
!14757 = !DILocation(line: 267, column: 6, scope: !13194, inlinedAt: !14750)
!14758 = !DILocation(line: 268, column: 15, scope: !13206, inlinedAt: !14750)
!14759 = !DILocation(line: 232, column: 56, scope: !13208, inlinedAt: !14760)
!14760 = distinct !DILocation(line: 268, column: 3, scope: !13206, inlinedAt: !14750)
!14761 = !DILocation(line: 234, column: 31, scope: !13208, inlinedAt: !14760)
!14762 = !DILocation(line: 199, column: 57, scope: !13213, inlinedAt: !14763)
!14763 = distinct !DILocation(line: 234, column: 19, scope: !13208, inlinedAt: !14760)
!14764 = !DILocation(line: 234, column: 19, scope: !13208, inlinedAt: !14760)
!14765 = !DILocation(line: 234, column: 40, scope: !13208, inlinedAt: !14760)
!14766 = !DILocation(line: 234, column: 2, scope: !13208, inlinedAt: !14760)
!14767 = !DILocation(line: 269, column: 2, scope: !13206, inlinedAt: !14750)
!14768 = !DILocation(line: 913, column: 25, scope: !14746)
!14769 = !DILocation(line: 913, column: 5, scope: !14746)
!14770 = !DILocation(line: 913, column: 13, scope: !14746)
!14771 = !DILocation(line: 913, column: 18, scope: !14746)
!14772 = !DILocation(line: 913, column: 23, scope: !14746)
!14773 = !DILocation(line: 914, column: 18, scope: !14746)
!14774 = !DILocation(line: 250, column: 57, scope: !13225, inlinedAt: !14775)
!14775 = distinct !DILocation(line: 914, column: 5, scope: !14746)
!14776 = !DILocation(line: 252, column: 2, scope: !13225, inlinedAt: !14775)
!14777 = !DILocation(line: 252, column: 10, scope: !13225, inlinedAt: !14775)
!14778 = !DILocation(line: 252, column: 15, scope: !13225, inlinedAt: !14775)
!14779 = !DILocation(line: 252, column: 28, scope: !13225, inlinedAt: !14775)
!14780 = !DILocation(line: 253, column: 26, scope: !13233, inlinedAt: !14775)
!14781 = !DILocation(line: 253, column: 6, scope: !13233, inlinedAt: !14775)
!14782 = !DILocation(line: 253, column: 6, scope: !13225, inlinedAt: !14775)
!14783 = !DILocation(line: 254, column: 12, scope: !13237, inlinedAt: !14775)
!14784 = !DILocation(line: 227, column: 53, scope: !13239, inlinedAt: !14785)
!14785 = distinct !DILocation(line: 254, column: 3, scope: !13237, inlinedAt: !14775)
!14786 = !DILocation(line: 229, column: 28, scope: !13239, inlinedAt: !14785)
!14787 = !DILocation(line: 199, column: 57, scope: !13213, inlinedAt: !14788)
!14788 = distinct !DILocation(line: 229, column: 16, scope: !13239, inlinedAt: !14785)
!14789 = !DILocation(line: 229, column: 37, scope: !13239, inlinedAt: !14785)
!14790 = !DILocation(line: 181, column: 56, scope: !13247, inlinedAt: !14791)
!14791 = distinct !DILocation(line: 229, column: 2, scope: !13239, inlinedAt: !14785)
!14792 = !DILocation(line: 182, column: 25, scope: !13247, inlinedAt: !14791)
!14793 = !DILocation(line: 184, column: 19, scope: !13247, inlinedAt: !14791)
!14794 = !DILocation(line: 188, column: 2, scope: !13258, inlinedAt: !14791)
!14795 = !DILocation(line: 188, column: 2, scope: !13260, inlinedAt: !14791)
!14796 = !DILocation(line: 189, column: 24, scope: !13262, inlinedAt: !14791)
!14797 = !DILocation(line: 189, column: 32, scope: !13262, inlinedAt: !14791)
!14798 = !DILocation(line: 189, column: 7, scope: !13262, inlinedAt: !14791)
!14799 = !DILocation(line: 189, column: 35, scope: !13262, inlinedAt: !14791)
!14800 = !DILocation(line: 189, column: 7, scope: !13263, inlinedAt: !14791)
!14801 = !DILocation(line: 190, column: 22, scope: !13269, inlinedAt: !14791)
!14802 = !DILocation(line: 190, column: 25, scope: !13269, inlinedAt: !14791)
!14803 = !DILocation(line: 190, column: 30, scope: !13269, inlinedAt: !14791)
!14804 = !DILocation(line: 191, column: 8, scope: !13269, inlinedAt: !14791)
!14805 = !DILocation(line: 191, column: 16, scope: !13269, inlinedAt: !14791)
!14806 = !DILocation(line: 191, column: 21, scope: !13269, inlinedAt: !14791)
!14807 = !DILocation(line: 190, column: 4, scope: !13269, inlinedAt: !14791)
!14808 = !DILocation(line: 192, column: 4, scope: !13269, inlinedAt: !14791)
!14809 = distinct !{!14809, !14794, !14810}
!14810 = !DILocation(line: 194, column: 2, scope: !13258, inlinedAt: !14791)
!14811 = !DILocation(line: 196, column: 19, scope: !13247, inlinedAt: !14791)
!14812 = !DILocation(line: 196, column: 24, scope: !13247, inlinedAt: !14791)
!14813 = !DILocation(line: 196, column: 32, scope: !13247, inlinedAt: !14791)
!14814 = !DILocation(line: 196, column: 37, scope: !13247, inlinedAt: !14791)
!14815 = !DILocation(line: 196, column: 2, scope: !13247, inlinedAt: !14791)
!14816 = !DILocation(line: 197, column: 1, scope: !13247, inlinedAt: !14791)
!14817 = !DILocation(line: 255, column: 2, scope: !13237, inlinedAt: !14775)
!14818 = !DILocation(line: 918, column: 4, scope: !14748)
!14819 = !DILocation(line: 919, column: 3, scope: !14748)
!14820 = !DILocation(line: 920, column: 24, scope: !14821)
!14821 = distinct !DILexicalBlock(scope: !14743, file: !2052, line: 919, column: 10)
!14822 = !DILocation(line: 920, column: 4, scope: !14821)
!14823 = !DILocation(line: 920, column: 12, scope: !14821)
!14824 = !DILocation(line: 920, column: 17, scope: !14821)
!14825 = !DILocation(line: 920, column: 22, scope: !14821)
!14826 = !DILocation(line: 922, column: 2, scope: !14739)
!14827 = !DILocation(line: 189, column: 60, scope: !12847, inlinedAt: !14828)
!14828 = distinct !DILocation(line: 906, column: 2, scope: !14737)
!14829 = !DILocation(line: 190, column: 23, scope: !12847, inlinedAt: !14828)
!14830 = !DILocation(line: 192, column: 2, scope: !12847, inlinedAt: !14828)
!14831 = !DILocation(line: 215, column: 22, scope: !12847, inlinedAt: !14828)
!14832 = !DILocation(line: 84, column: 56, scope: !12857, inlinedAt: !14833)
!14833 = distinct !DILocation(line: 215, column: 2, scope: !12847, inlinedAt: !14828)
!14834 = !DILocation(line: 98, column: 12, scope: !12857, inlinedAt: !14833)
!14835 = !DILocation(line: 95, column: 2, scope: !12857, inlinedAt: !14833)
!14836 = distinct !{!14836, !14722, !14837}
!14837 = !DILocation(line: 922, column: 2, scope: !14721)
!14838 = !DILocation(line: 924, column: 2, scope: !14713)
!14839 = !DILocation(line: 924, column: 2, scope: !14840)
!14840 = distinct !DILexicalBlock(scope: !14713, file: !2052, line: 924, column: 2)
!14841 = !DILocation(line: 926, column: 9, scope: !14713)
!14842 = !DILocation(line: 926, column: 2, scope: !14713)
!14843 = distinct !DISubprogram(name: "z_thread_priority_set", scope: !2052, file: !2052, line: 929, type: !14844, scopeLine: 930, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1950, retainedNodes: !223)
!14844 = !DISubroutineType(types: !14845)
!14845 = !{null, !1953, !103}
!14846 = !DILocalVariable(name: "thread", arg: 1, scope: !14843, file: !2052, line: 929, type: !1953)
!14847 = !DILocation(line: 929, column: 45, scope: !14843)
!14848 = !DILocalVariable(name: "prio", arg: 2, scope: !14843, file: !2052, line: 929, type: !103)
!14849 = !DILocation(line: 929, column: 57, scope: !14843)
!14850 = !DILocalVariable(name: "need_sched", scope: !14843, file: !2052, line: 931, type: !743)
!14851 = !DILocation(line: 931, column: 7, scope: !14843)
!14852 = !DILocation(line: 931, column: 31, scope: !14843)
!14853 = !DILocation(line: 931, column: 39, scope: !14843)
!14854 = !DILocation(line: 931, column: 20, scope: !14843)
!14855 = !DILocation(line: 933, column: 2, scope: !14843)
!14856 = !DILocation(line: 935, column: 6, scope: !14857)
!14857 = distinct !DILexicalBlock(scope: !14843, file: !2052, line: 935, column: 6)
!14858 = !DILocation(line: 935, column: 17, scope: !14857)
!14859 = !DILocation(line: 935, column: 20, scope: !14857)
!14860 = !DILocation(line: 935, column: 30, scope: !14857)
!14861 = !DILocation(line: 935, column: 35, scope: !14857)
!14862 = !DILocation(line: 935, column: 48, scope: !14857)
!14863 = !DILocation(line: 935, column: 6, scope: !14843)
!14864 = !DILocation(line: 936, column: 3, scope: !14865)
!14865 = distinct !DILexicalBlock(scope: !14857, file: !2052, line: 935, column: 55)
!14866 = !DILocation(line: 937, column: 2, scope: !14865)
!14867 = !DILocation(line: 938, column: 1, scope: !14843)
!14868 = distinct !DISubprogram(name: "k_sched_lock", scope: !2052, file: !2052, line: 987, type: !253, scopeLine: 988, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1950, retainedNodes: !223)
!14869 = !DILocalVariable(name: "__i", scope: !14870, file: !2052, line: 989, type: !12798)
!14870 = distinct !DILexicalBlock(scope: !14868, file: !2052, line: 989, column: 2)
!14871 = !DILocation(line: 989, column: 2, scope: !14870)
!14872 = !DILocalVariable(name: "__key", scope: !14870, file: !2052, line: 989, type: !12798)
!14873 = !DILocation(line: 136, column: 70, scope: !12805, inlinedAt: !14874)
!14874 = distinct !DILocation(line: 989, column: 2, scope: !14870)
!14875 = !DILocation(line: 138, column: 2, scope: !12805, inlinedAt: !14874)
!14876 = !DILocation(line: 139, column: 19, scope: !12805, inlinedAt: !14874)
!14877 = !DILocation(line: 44, column: 15, scope: !12815, inlinedAt: !14878)
!14878 = distinct !DILocation(line: 145, column: 10, scope: !12805, inlinedAt: !14874)
!14879 = !DILocation(line: 53, column: 15, scope: !12815, inlinedAt: !14878)
!14880 = !DILocation(line: 55, column: 2, scope: !12815, inlinedAt: !14878)
!14881 = !DILocation(line: 76, column: 9, scope: !12815, inlinedAt: !14878)
!14882 = !DILocation(line: 145, column: 4, scope: !12805, inlinedAt: !14874)
!14883 = !DILocation(line: 145, column: 8, scope: !12805, inlinedAt: !14874)
!14884 = !DILocation(line: 165, column: 2, scope: !12805, inlinedAt: !14874)
!14885 = !DILocation(line: 989, column: 2, scope: !14886)
!14886 = distinct !DILexicalBlock(scope: !14870, file: !2052, line: 989, column: 2)
!14887 = !DILocation(line: 990, column: 3, scope: !14888)
!14888 = distinct !DILexicalBlock(scope: !14886, file: !2052, line: 989, column: 26)
!14889 = !DILocation(line: 990, column: 3, scope: !14890)
!14890 = distinct !DILexicalBlock(scope: !14888, file: !2052, line: 990, column: 3)
!14891 = !DILocation(line: 992, column: 3, scope: !14888)
!14892 = !DILocation(line: 993, column: 2, scope: !14888)
!14893 = !DILocation(line: 189, column: 60, scope: !12847, inlinedAt: !14894)
!14894 = distinct !DILocation(line: 989, column: 2, scope: !14886)
!14895 = !DILocation(line: 190, column: 23, scope: !12847, inlinedAt: !14894)
!14896 = !DILocation(line: 192, column: 2, scope: !12847, inlinedAt: !14894)
!14897 = !DILocation(line: 215, column: 22, scope: !12847, inlinedAt: !14894)
!14898 = !DILocation(line: 84, column: 56, scope: !12857, inlinedAt: !14899)
!14899 = distinct !DILocation(line: 215, column: 2, scope: !12847, inlinedAt: !14894)
!14900 = !DILocation(line: 98, column: 12, scope: !12857, inlinedAt: !14899)
!14901 = !DILocation(line: 95, column: 2, scope: !12857, inlinedAt: !14899)
!14902 = distinct !{!14902, !14871, !14903}
!14903 = !DILocation(line: 993, column: 2, scope: !14870)
!14904 = !DILocation(line: 994, column: 1, scope: !14868)
!14905 = distinct !DISubprogram(name: "z_sched_lock", scope: !11628, file: !11628, line: 251, type: !253, scopeLine: 252, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1950, retainedNodes: !223)
!14906 = !DILocation(line: 256, column: 4, scope: !14905)
!14907 = !DILocation(line: 256, column: 14, scope: !14905)
!14908 = !DILocation(line: 256, column: 19, scope: !14905)
!14909 = !DILocation(line: 256, column: 2, scope: !14905)
!14910 = !DILocation(line: 258, column: 2, scope: !14905)
!14911 = !DILocation(line: 258, column: 2, scope: !14912)
!14912 = distinct !DILexicalBlock(scope: !14905, file: !11628, line: 258, column: 2)
!14913 = !{i64 2154790190}
!14914 = !DILocation(line: 259, column: 1, scope: !14905)
!14915 = distinct !DISubprogram(name: "k_sched_unlock", scope: !2052, file: !2052, line: 996, type: !253, scopeLine: 997, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1950, retainedNodes: !223)
!14916 = !DILocalVariable(name: "__i", scope: !14917, file: !2052, line: 998, type: !12798)
!14917 = distinct !DILexicalBlock(scope: !14915, file: !2052, line: 998, column: 2)
!14918 = !DILocation(line: 998, column: 2, scope: !14917)
!14919 = !DILocalVariable(name: "__key", scope: !14917, file: !2052, line: 998, type: !12798)
!14920 = !DILocation(line: 136, column: 70, scope: !12805, inlinedAt: !14921)
!14921 = distinct !DILocation(line: 998, column: 2, scope: !14917)
!14922 = !DILocation(line: 138, column: 2, scope: !12805, inlinedAt: !14921)
!14923 = !DILocation(line: 139, column: 19, scope: !12805, inlinedAt: !14921)
!14924 = !DILocation(line: 44, column: 15, scope: !12815, inlinedAt: !14925)
!14925 = distinct !DILocation(line: 145, column: 10, scope: !12805, inlinedAt: !14921)
!14926 = !DILocation(line: 53, column: 15, scope: !12815, inlinedAt: !14925)
!14927 = !DILocation(line: 55, column: 2, scope: !12815, inlinedAt: !14925)
!14928 = !DILocation(line: 76, column: 9, scope: !12815, inlinedAt: !14925)
!14929 = !DILocation(line: 145, column: 4, scope: !12805, inlinedAt: !14921)
!14930 = !DILocation(line: 145, column: 8, scope: !12805, inlinedAt: !14921)
!14931 = !DILocation(line: 165, column: 2, scope: !12805, inlinedAt: !14921)
!14932 = !DILocation(line: 998, column: 2, scope: !14933)
!14933 = distinct !DILexicalBlock(scope: !14917, file: !2052, line: 998, column: 2)
!14934 = !DILocation(line: 1002, column: 5, scope: !14935)
!14935 = distinct !DILexicalBlock(scope: !14933, file: !2052, line: 998, column: 26)
!14936 = !DILocation(line: 1002, column: 15, scope: !14935)
!14937 = !DILocation(line: 1002, column: 20, scope: !14935)
!14938 = !DILocation(line: 1002, column: 3, scope: !14935)
!14939 = !DILocation(line: 1003, column: 3, scope: !14935)
!14940 = !DILocation(line: 1004, column: 2, scope: !14935)
!14941 = !DILocation(line: 189, column: 60, scope: !12847, inlinedAt: !14942)
!14942 = distinct !DILocation(line: 998, column: 2, scope: !14933)
!14943 = !DILocation(line: 190, column: 23, scope: !12847, inlinedAt: !14942)
!14944 = !DILocation(line: 192, column: 2, scope: !12847, inlinedAt: !14942)
!14945 = !DILocation(line: 215, column: 22, scope: !12847, inlinedAt: !14942)
!14946 = !DILocation(line: 84, column: 56, scope: !12857, inlinedAt: !14947)
!14947 = distinct !DILocation(line: 215, column: 2, scope: !12847, inlinedAt: !14942)
!14948 = !DILocation(line: 98, column: 12, scope: !12857, inlinedAt: !14947)
!14949 = !DILocation(line: 95, column: 2, scope: !12857, inlinedAt: !14947)
!14950 = distinct !{!14950, !14918, !14951}
!14951 = !DILocation(line: 1004, column: 2, scope: !14917)
!14952 = !DILocation(line: 1006, column: 2, scope: !14915)
!14953 = !DILocation(line: 1006, column: 2, scope: !14954)
!14954 = distinct !DILexicalBlock(scope: !14955, file: !2052, line: 1006, column: 2)
!14955 = distinct !DILexicalBlock(scope: !14956, file: !2052, line: 1006, column: 2)
!14956 = distinct !DILexicalBlock(scope: !14915, file: !2052, line: 1006, column: 2)
!14957 = !DILocation(line: 1009, column: 2, scope: !14915)
!14958 = !DILocation(line: 1009, column: 2, scope: !14959)
!14959 = distinct !DILexicalBlock(scope: !14915, file: !2052, line: 1009, column: 2)
!14960 = !DILocation(line: 1011, column: 2, scope: !14915)
!14961 = !DILocation(line: 1012, column: 1, scope: !14915)
!14962 = distinct !DISubprogram(name: "z_swap_next_thread", scope: !2052, file: !2052, line: 1014, type: !13399, scopeLine: 1015, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1950, retainedNodes: !223)
!14963 = !DILocation(line: 1028, column: 25, scope: !14962)
!14964 = !DILocation(line: 1028, column: 2, scope: !14962)
!14965 = distinct !DISubprogram(name: "z_priq_rb_lessthan", scope: !2052, file: !2052, line: 1155, type: !14966, scopeLine: 1156, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1950, retainedNodes: !223)
!14966 = !DISubroutineType(types: !14967)
!14967 = !{!743, !1982, !1982}
!14968 = !DILocalVariable(name: "a", arg: 1, scope: !14965, file: !2052, line: 1155, type: !1982)
!14969 = !DILocation(line: 1155, column: 40, scope: !14965)
!14970 = !DILocalVariable(name: "b", arg: 2, scope: !14965, file: !2052, line: 1155, type: !1982)
!14971 = !DILocation(line: 1155, column: 58, scope: !14965)
!14972 = !DILocalVariable(name: "thread_a", scope: !14965, file: !2052, line: 1157, type: !1953)
!14973 = !DILocation(line: 1157, column: 19, scope: !14965)
!14974 = !DILocalVariable(name: "thread_b", scope: !14965, file: !2052, line: 1157, type: !1953)
!14975 = !DILocation(line: 1157, column: 30, scope: !14965)
!14976 = !DILocalVariable(name: "cmp", scope: !14965, file: !2052, line: 1158, type: !250)
!14977 = !DILocation(line: 1158, column: 10, scope: !14965)
!14978 = !DILocation(line: 1160, column: 13, scope: !14965)
!14979 = !DILocation(line: 1160, column: 11, scope: !14965)
!14980 = !DILocation(line: 1161, column: 13, scope: !14965)
!14981 = !DILocation(line: 1161, column: 11, scope: !14965)
!14982 = !DILocation(line: 1163, column: 25, scope: !14965)
!14983 = !DILocation(line: 1163, column: 35, scope: !14965)
!14984 = !DILocation(line: 1163, column: 8, scope: !14965)
!14985 = !DILocation(line: 1163, column: 6, scope: !14965)
!14986 = !DILocation(line: 1165, column: 6, scope: !14987)
!14987 = distinct !DILexicalBlock(scope: !14965, file: !2052, line: 1165, column: 6)
!14988 = !DILocation(line: 1165, column: 10, scope: !14987)
!14989 = !DILocation(line: 1165, column: 6, scope: !14965)
!14990 = !DILocation(line: 1166, column: 3, scope: !14991)
!14991 = distinct !DILexicalBlock(scope: !14987, file: !2052, line: 1165, column: 15)
!14992 = !DILocation(line: 1167, column: 13, scope: !14993)
!14993 = distinct !DILexicalBlock(scope: !14987, file: !2052, line: 1167, column: 13)
!14994 = !DILocation(line: 1167, column: 17, scope: !14993)
!14995 = !DILocation(line: 1167, column: 13, scope: !14987)
!14996 = !DILocation(line: 1168, column: 3, scope: !14997)
!14997 = distinct !DILexicalBlock(scope: !14993, file: !2052, line: 1167, column: 22)
!14998 = !DILocation(line: 1170, column: 10, scope: !14999)
!14999 = distinct !DILexicalBlock(scope: !14993, file: !2052, line: 1169, column: 9)
!15000 = !DILocation(line: 1170, column: 20, scope: !14999)
!15001 = !DILocation(line: 1170, column: 25, scope: !14999)
!15002 = !DILocation(line: 1170, column: 37, scope: !14999)
!15003 = !DILocation(line: 1170, column: 47, scope: !14999)
!15004 = !DILocation(line: 1170, column: 52, scope: !14999)
!15005 = !DILocation(line: 1170, column: 35, scope: !14999)
!15006 = !DILocation(line: 1170, column: 3, scope: !14999)
!15007 = !DILocation(line: 1173, column: 1, scope: !14965)
!15008 = distinct !DISubprogram(name: "z_priq_rb_add", scope: !2052, file: !2052, line: 1175, type: !15009, scopeLine: 1176, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1950, retainedNodes: !223)
!15009 = !DISubroutineType(types: !15010)
!15010 = !{null, !15011, !1953}
!15011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15012, size: 32)
!15012 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_rb", file: !15013, line: 37, size: 128, elements: !15014)
!15013 = !DIFile(filename: "zephyr/include/zephyr/kernel/sched_priq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15014 = !{!15015, !15023}
!15015 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !15012, file: !15013, line: 38, baseType: !15016, size: 96)
!15016 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbtree", file: !140, line: 83, size: 96, elements: !15017)
!15017 = !{!15018, !15019, !15022}
!15018 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !15016, file: !140, line: 84, baseType: !1982, size: 32)
!15019 = !DIDerivedType(tag: DW_TAG_member, name: "lessthan_fn", scope: !15016, file: !140, line: 85, baseType: !15020, size: 32, offset: 32)
!15020 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_lessthan_t", file: !140, line: 81, baseType: !15021)
!15021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14966, size: 32)
!15022 = !DIDerivedType(tag: DW_TAG_member, name: "max_depth", scope: !15016, file: !140, line: 86, baseType: !103, size: 32, offset: 64)
!15023 = !DIDerivedType(tag: DW_TAG_member, name: "next_order_key", scope: !15012, file: !15013, line: 39, baseType: !103, size: 32, offset: 96)
!15024 = !DILocalVariable(name: "pq", arg: 1, scope: !15008, file: !2052, line: 1175, type: !15011)
!15025 = !DILocation(line: 1175, column: 37, scope: !15008)
!15026 = !DILocalVariable(name: "thread", arg: 2, scope: !15008, file: !2052, line: 1175, type: !1953)
!15027 = !DILocation(line: 1175, column: 58, scope: !15008)
!15028 = !DILocalVariable(name: "t", scope: !15008, file: !2052, line: 1177, type: !1953)
!15029 = !DILocation(line: 1177, column: 19, scope: !15008)
!15030 = !DILocation(line: 1181, column: 27, scope: !15008)
!15031 = !DILocation(line: 1181, column: 31, scope: !15008)
!15032 = !DILocation(line: 1181, column: 45, scope: !15008)
!15033 = !DILocation(line: 1181, column: 2, scope: !15008)
!15034 = !DILocation(line: 1181, column: 10, scope: !15008)
!15035 = !DILocation(line: 1181, column: 15, scope: !15008)
!15036 = !DILocation(line: 1181, column: 25, scope: !15008)
!15037 = !DILocation(line: 1189, column: 7, scope: !15038)
!15038 = distinct !DILexicalBlock(scope: !15008, file: !2052, line: 1189, column: 6)
!15039 = !DILocation(line: 1189, column: 11, scope: !15038)
!15040 = !DILocation(line: 1189, column: 6, scope: !15008)
!15041 = !DILocalVariable(name: "__f", scope: !15042, file: !2052, line: 1190, type: !15044)
!15042 = distinct !DILexicalBlock(scope: !15043, file: !2052, line: 1190, column: 3)
!15043 = distinct !DILexicalBlock(scope: !15038, file: !2052, line: 1189, column: 27)
!15044 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rb_foreach", file: !140, line: 155, size: 96, elements: !15045)
!15045 = !{!15046, !15047, !15048}
!15046 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !15044, file: !140, line: 156, baseType: !2047, size: 32)
!15047 = !DIDerivedType(tag: DW_TAG_member, name: "is_left", scope: !15044, file: !140, line: 157, baseType: !788, size: 32, offset: 32)
!15048 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !15044, file: !140, line: 158, baseType: !250, size: 32, offset: 64)
!15049 = !DILocation(line: 1190, column: 3, scope: !15042)
!15050 = !DILocalVariable(name: "n", scope: !15051, file: !2052, line: 1190, type: !1982)
!15051 = distinct !DILexicalBlock(scope: !15052, file: !2052, line: 1190, column: 3)
!15052 = distinct !DILexicalBlock(scope: !15042, file: !2052, line: 1190, column: 3)
!15053 = !DILocation(line: 1190, column: 3, scope: !15051)
!15054 = !DILocation(line: 1190, column: 3, scope: !15052)
!15055 = !DILocation(line: 1191, column: 24, scope: !15056)
!15056 = distinct !DILexicalBlock(scope: !15052, file: !2052, line: 1190, column: 54)
!15057 = !DILocation(line: 1191, column: 28, scope: !15056)
!15058 = !DILocation(line: 1191, column: 42, scope: !15056)
!15059 = !DILocation(line: 1191, column: 4, scope: !15056)
!15060 = !DILocation(line: 1191, column: 7, scope: !15056)
!15061 = !DILocation(line: 1191, column: 12, scope: !15056)
!15062 = !DILocation(line: 1191, column: 22, scope: !15056)
!15063 = distinct !{!15063, !15049, !15064}
!15064 = !DILocation(line: 1192, column: 3, scope: !15042)
!15065 = !DILocation(line: 1193, column: 2, scope: !15043)
!15066 = !DILocation(line: 1195, column: 13, scope: !15008)
!15067 = !DILocation(line: 1195, column: 17, scope: !15008)
!15068 = !DILocation(line: 1195, column: 24, scope: !15008)
!15069 = !DILocation(line: 1195, column: 32, scope: !15008)
!15070 = !DILocation(line: 1195, column: 37, scope: !15008)
!15071 = !DILocation(line: 1195, column: 2, scope: !15008)
!15072 = !DILocation(line: 1196, column: 1, scope: !15008)
!15073 = distinct !DISubprogram(name: "z_priq_rb_remove", scope: !2052, file: !2052, line: 1198, type: !15009, scopeLine: 1199, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1950, retainedNodes: !223)
!15074 = !DILocalVariable(name: "pq", arg: 1, scope: !15073, file: !2052, line: 1198, type: !15011)
!15075 = !DILocation(line: 1198, column: 40, scope: !15073)
!15076 = !DILocalVariable(name: "thread", arg: 2, scope: !15073, file: !2052, line: 1198, type: !1953)
!15077 = !DILocation(line: 1198, column: 61, scope: !15073)
!15078 = !DILocation(line: 1202, column: 13, scope: !15073)
!15079 = !DILocation(line: 1202, column: 17, scope: !15073)
!15080 = !DILocation(line: 1202, column: 24, scope: !15073)
!15081 = !DILocation(line: 1202, column: 32, scope: !15073)
!15082 = !DILocation(line: 1202, column: 37, scope: !15073)
!15083 = !DILocation(line: 1202, column: 2, scope: !15073)
!15084 = !DILocation(line: 1204, column: 7, scope: !15085)
!15085 = distinct !DILexicalBlock(scope: !15073, file: !2052, line: 1204, column: 6)
!15086 = !DILocation(line: 1204, column: 11, scope: !15085)
!15087 = !DILocation(line: 1204, column: 16, scope: !15085)
!15088 = !DILocation(line: 1204, column: 6, scope: !15073)
!15089 = !DILocation(line: 1205, column: 3, scope: !15090)
!15090 = distinct !DILexicalBlock(scope: !15085, file: !2052, line: 1204, column: 22)
!15091 = !DILocation(line: 1205, column: 7, scope: !15090)
!15092 = !DILocation(line: 1205, column: 22, scope: !15090)
!15093 = !DILocation(line: 1206, column: 2, scope: !15090)
!15094 = !DILocation(line: 1207, column: 1, scope: !15073)
!15095 = distinct !DISubprogram(name: "z_priq_rb_best", scope: !2052, file: !2052, line: 1209, type: !15096, scopeLine: 1210, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1950, retainedNodes: !223)
!15096 = !DISubroutineType(types: !15097)
!15097 = !{!1953, !15011}
!15098 = !DILocalVariable(name: "pq", arg: 1, scope: !15095, file: !2052, line: 1209, type: !15011)
!15099 = !DILocation(line: 1209, column: 50, scope: !15095)
!15100 = !DILocalVariable(name: "thread", scope: !15095, file: !2052, line: 1211, type: !1953)
!15101 = !DILocation(line: 1211, column: 19, scope: !15095)
!15102 = !DILocalVariable(name: "n", scope: !15095, file: !2052, line: 1212, type: !1982)
!15103 = !DILocation(line: 1212, column: 17, scope: !15095)
!15104 = !DILocation(line: 1212, column: 33, scope: !15095)
!15105 = !DILocation(line: 1212, column: 37, scope: !15095)
!15106 = !DILocation(line: 1212, column: 21, scope: !15095)
!15107 = !DILocation(line: 1214, column: 6, scope: !15108)
!15108 = distinct !DILexicalBlock(scope: !15095, file: !2052, line: 1214, column: 6)
!15109 = !DILocation(line: 1214, column: 8, scope: !15108)
!15110 = !DILocation(line: 1214, column: 6, scope: !15095)
!15111 = !DILocation(line: 1215, column: 12, scope: !15112)
!15112 = distinct !DILexicalBlock(scope: !15108, file: !2052, line: 1214, column: 17)
!15113 = !DILocation(line: 1215, column: 10, scope: !15112)
!15114 = !DILocation(line: 1216, column: 2, scope: !15112)
!15115 = !DILocation(line: 1217, column: 9, scope: !15095)
!15116 = !DILocation(line: 1217, column: 2, scope: !15095)
!15117 = distinct !DISubprogram(name: "rb_get_min", scope: !140, file: !140, line: 115, type: !15118, scopeLine: 116, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1950, retainedNodes: !223)
!15118 = !DISubroutineType(types: !15119)
!15119 = !{!1982, !15120}
!15120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15016, size: 32)
!15121 = !DILocalVariable(name: "tree", arg: 1, scope: !15117, file: !140, line: 115, type: !15120)
!15122 = !DILocation(line: 115, column: 56, scope: !15117)
!15123 = !DILocation(line: 117, column: 25, scope: !15117)
!15124 = !DILocation(line: 117, column: 9, scope: !15117)
!15125 = !DILocation(line: 117, column: 2, scope: !15117)
!15126 = distinct !DISubprogram(name: "z_priq_mq_best", scope: !2052, file: !2052, line: 1246, type: !15127, scopeLine: 1247, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1950, retainedNodes: !223)
!15127 = !DISubroutineType(types: !15128)
!15128 = !{!1953, !15129}
!15129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15130, size: 32)
!15130 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_mq", file: !15013, line: 53, size: 2080, elements: !15131)
!15131 = !{!15132, !15134}
!15132 = !DIDerivedType(tag: DW_TAG_member, name: "queues", scope: !15130, file: !15013, line: 54, baseType: !15133, size: 2048)
!15133 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1989, size: 2048, elements: !644)
!15134 = !DIDerivedType(tag: DW_TAG_member, name: "bitmask", scope: !15130, file: !15013, line: 55, baseType: !32, size: 32, offset: 2048)
!15135 = !DILocalVariable(name: "pq", arg: 1, scope: !15126, file: !2052, line: 1246, type: !15129)
!15136 = !DILocation(line: 1246, column: 50, scope: !15126)
!15137 = !DILocation(line: 1248, column: 7, scope: !15138)
!15138 = distinct !DILexicalBlock(scope: !15126, file: !2052, line: 1248, column: 6)
!15139 = !DILocation(line: 1248, column: 11, scope: !15138)
!15140 = !DILocation(line: 1248, column: 6, scope: !15126)
!15141 = !DILocation(line: 1249, column: 3, scope: !15142)
!15142 = distinct !DILexicalBlock(scope: !15138, file: !2052, line: 1248, column: 20)
!15143 = !DILocalVariable(name: "thread", scope: !15126, file: !2052, line: 1252, type: !1953)
!15144 = !DILocation(line: 1252, column: 19, scope: !15126)
!15145 = !DILocalVariable(name: "l", scope: !15126, file: !2052, line: 1253, type: !13250)
!15146 = !DILocation(line: 1253, column: 15, scope: !15126)
!15147 = !DILocation(line: 1253, column: 20, scope: !15126)
!15148 = !DILocation(line: 1253, column: 24, scope: !15126)
!15149 = !DILocation(line: 1253, column: 45, scope: !15126)
!15150 = !DILocation(line: 1253, column: 49, scope: !15126)
!15151 = !DILocation(line: 1253, column: 31, scope: !15126)
!15152 = !DILocalVariable(name: "n", scope: !15126, file: !2052, line: 1254, type: !2048)
!15153 = !DILocation(line: 1254, column: 15, scope: !15126)
!15154 = !DILocation(line: 1254, column: 39, scope: !15126)
!15155 = !DILocation(line: 1254, column: 19, scope: !15126)
!15156 = !DILocation(line: 1256, column: 6, scope: !15157)
!15157 = distinct !DILexicalBlock(scope: !15126, file: !2052, line: 1256, column: 6)
!15158 = !DILocation(line: 1256, column: 8, scope: !15157)
!15159 = !DILocation(line: 1256, column: 6, scope: !15126)
!15160 = !DILocation(line: 1257, column: 12, scope: !15161)
!15161 = distinct !DILexicalBlock(scope: !15157, file: !2052, line: 1256, column: 17)
!15162 = !DILocation(line: 1257, column: 10, scope: !15161)
!15163 = !DILocation(line: 1258, column: 2, scope: !15161)
!15164 = !DILocation(line: 1259, column: 9, scope: !15126)
!15165 = !DILocation(line: 1259, column: 2, scope: !15126)
!15166 = !DILocation(line: 1260, column: 1, scope: !15126)
!15167 = distinct !DISubprogram(name: "z_unpend_all", scope: !2052, file: !2052, line: 1262, type: !15168, scopeLine: 1263, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1950, retainedNodes: !223)
!15168 = !DISubroutineType(types: !15169)
!15169 = !{!103, !1984}
!15170 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15167, file: !2052, line: 1262, type: !1984)
!15171 = !DILocation(line: 1262, column: 29, scope: !15167)
!15172 = !DILocalVariable(name: "need_sched", scope: !15167, file: !2052, line: 1264, type: !103)
!15173 = !DILocation(line: 1264, column: 6, scope: !15167)
!15174 = !DILocalVariable(name: "thread", scope: !15167, file: !2052, line: 1265, type: !1953)
!15175 = !DILocation(line: 1265, column: 19, scope: !15167)
!15176 = !DILocation(line: 1267, column: 2, scope: !15167)
!15177 = !DILocation(line: 1267, column: 32, scope: !15167)
!15178 = !DILocation(line: 1267, column: 19, scope: !15167)
!15179 = !DILocation(line: 1267, column: 17, scope: !15167)
!15180 = !DILocation(line: 1267, column: 41, scope: !15167)
!15181 = !DILocation(line: 1268, column: 19, scope: !15182)
!15182 = distinct !DILexicalBlock(scope: !15167, file: !2052, line: 1267, column: 50)
!15183 = !DILocation(line: 1268, column: 3, scope: !15182)
!15184 = !DILocation(line: 1269, column: 18, scope: !15182)
!15185 = !DILocation(line: 1269, column: 3, scope: !15182)
!15186 = !DILocation(line: 1270, column: 14, scope: !15182)
!15187 = distinct !{!15187, !15176, !15188}
!15188 = !DILocation(line: 1271, column: 2, scope: !15167)
!15189 = !DILocation(line: 1273, column: 9, scope: !15167)
!15190 = !DILocation(line: 1273, column: 2, scope: !15167)
!15191 = distinct !DISubprogram(name: "z_waitq_head", scope: !12124, file: !12124, line: 52, type: !14574, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1950, retainedNodes: !223)
!15192 = !DILocalVariable(name: "w", arg: 1, scope: !15191, file: !12124, line: 52, type: !1984)
!15193 = !DILocation(line: 52, column: 56, scope: !15191)
!15194 = !DILocation(line: 54, column: 49, scope: !15191)
!15195 = !DILocation(line: 54, column: 52, scope: !15191)
!15196 = !DILocation(line: 54, column: 28, scope: !15191)
!15197 = !DILocation(line: 54, column: 9, scope: !15191)
!15198 = !DILocation(line: 54, column: 2, scope: !15191)
!15199 = distinct !DISubprogram(name: "init_ready_q", scope: !2052, file: !2052, line: 1276, type: !15200, scopeLine: 1277, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1950, retainedNodes: !223)
!15200 = !DISubroutineType(types: !15201)
!15201 = !{null, !15202}
!15202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15203, size: 32)
!15203 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !150, line: 83, size: 96, elements: !15204)
!15204 = !{!15205, !15206}
!15205 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !15203, file: !150, line: 86, baseType: !1953, size: 32)
!15206 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !15203, file: !150, line: 90, baseType: !1989, size: 64, offset: 32)
!15207 = !DILocalVariable(name: "rq", arg: 1, scope: !15199, file: !2052, line: 1276, type: !15202)
!15208 = !DILocation(line: 1276, column: 36, scope: !15199)
!15209 = !DILocation(line: 1289, column: 18, scope: !15199)
!15210 = !DILocation(line: 1289, column: 22, scope: !15199)
!15211 = !DILocation(line: 1289, column: 2, scope: !15199)
!15212 = !DILocation(line: 1291, column: 1, scope: !15199)
!15213 = distinct !DISubprogram(name: "sys_dlist_init", scope: !124, file: !124, line: 197, type: !15214, scopeLine: 198, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1950, retainedNodes: !223)
!15214 = !DISubroutineType(types: !15215)
!15215 = !{null, !13250}
!15216 = !DILocalVariable(name: "list", arg: 1, scope: !15213, file: !124, line: 197, type: !13250)
!15217 = !DILocation(line: 197, column: 48, scope: !15213)
!15218 = !DILocation(line: 199, column: 30, scope: !15213)
!15219 = !DILocation(line: 199, column: 2, scope: !15213)
!15220 = !DILocation(line: 199, column: 8, scope: !15213)
!15221 = !DILocation(line: 199, column: 13, scope: !15213)
!15222 = !DILocation(line: 200, column: 30, scope: !15213)
!15223 = !DILocation(line: 200, column: 2, scope: !15213)
!15224 = !DILocation(line: 200, column: 8, scope: !15213)
!15225 = !DILocation(line: 200, column: 13, scope: !15213)
!15226 = !DILocation(line: 201, column: 1, scope: !15213)
!15227 = distinct !DISubprogram(name: "z_sched_init", scope: !2052, file: !2052, line: 1293, type: !253, scopeLine: 1294, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1950, retainedNodes: !223)
!15228 = !DILocation(line: 1302, column: 2, scope: !15227)
!15229 = !DILocation(line: 1306, column: 2, scope: !15227)
!15230 = !DILocation(line: 1309, column: 1, scope: !15227)
!15231 = distinct !DISubprogram(name: "z_impl_k_thread_priority_get", scope: !2052, file: !2052, line: 1311, type: !15232, scopeLine: 1312, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1950, retainedNodes: !223)
!15232 = !DISubroutineType(types: !15233)
!15233 = !{!103, !15234}
!15234 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !114, line: 347, baseType: !1953)
!15235 = !DILocalVariable(name: "thread", arg: 1, scope: !15231, file: !2052, line: 1311, type: !15234)
!15236 = !DILocation(line: 1311, column: 42, scope: !15231)
!15237 = !DILocation(line: 1313, column: 9, scope: !15231)
!15238 = !DILocation(line: 1313, column: 17, scope: !15231)
!15239 = !DILocation(line: 1313, column: 22, scope: !15231)
!15240 = !DILocation(line: 1313, column: 2, scope: !15231)
!15241 = distinct !DISubprogram(name: "z_impl_k_thread_priority_set", scope: !2052, file: !2052, line: 1325, type: !15242, scopeLine: 1326, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1950, retainedNodes: !223)
!15242 = !DISubroutineType(types: !15243)
!15243 = !{null, !15234, !103}
!15244 = !DILocalVariable(name: "thread", arg: 1, scope: !15241, file: !2052, line: 1325, type: !15234)
!15245 = !DILocation(line: 1325, column: 43, scope: !15241)
!15246 = !DILocalVariable(name: "prio", arg: 2, scope: !15241, file: !2052, line: 1325, type: !103)
!15247 = !DILocation(line: 1325, column: 55, scope: !15241)
!15248 = !DILocation(line: 1331, column: 2, scope: !15241)
!15249 = !DILocation(line: 1331, column: 2, scope: !15250)
!15250 = distinct !DILexicalBlock(scope: !15241, file: !2052, line: 1331, column: 2)
!15251 = !DILocalVariable(name: "th", scope: !15241, file: !2052, line: 1334, type: !1953)
!15252 = !DILocation(line: 1334, column: 19, scope: !15241)
!15253 = !DILocation(line: 1334, column: 43, scope: !15241)
!15254 = !DILocation(line: 1336, column: 24, scope: !15241)
!15255 = !DILocation(line: 1336, column: 28, scope: !15241)
!15256 = !DILocation(line: 1336, column: 2, scope: !15241)
!15257 = !DILocation(line: 1337, column: 1, scope: !15241)
!15258 = distinct !DISubprogram(name: "k_can_yield", scope: !2052, file: !2052, line: 1384, type: !2920, scopeLine: 1385, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1950, retainedNodes: !223)
!15259 = !DILocation(line: 1386, column: 11, scope: !15258)
!15260 = !DILocation(line: 1386, column: 29, scope: !15258)
!15261 = !DILocation(line: 1386, column: 32, scope: !15258)
!15262 = !DILocation(line: 1386, column: 46, scope: !15258)
!15263 = !DILocation(line: 1387, column: 28, scope: !15258)
!15264 = !DILocation(line: 1387, column: 4, scope: !15258)
!15265 = !DILocation(line: 1386, column: 9, scope: !15258)
!15266 = !DILocation(line: 1386, column: 2, scope: !15258)
!15267 = distinct !DISubprogram(name: "k_is_pre_kernel", scope: !109, file: !109, line: 989, type: !2920, scopeLine: 990, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1950, retainedNodes: !223)
!15268 = !DILocation(line: 993, column: 10, scope: !15267)
!15269 = !DILocation(line: 993, column: 9, scope: !15267)
!15270 = !DILocation(line: 993, column: 2, scope: !15267)
!15271 = distinct !DISubprogram(name: "z_impl_k_yield", scope: !2052, file: !2052, line: 1390, type: !253, scopeLine: 1391, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1950, retainedNodes: !223)
!15272 = !DILocation(line: 1394, column: 2, scope: !15271)
!15273 = !DILocation(line: 1394, column: 2, scope: !15274)
!15274 = distinct !DILexicalBlock(scope: !15271, file: !2052, line: 1394, column: 2)
!15275 = !DILocalVariable(name: "key", scope: !15271, file: !2052, line: 1396, type: !12798)
!15276 = !DILocation(line: 1396, column: 19, scope: !15271)
!15277 = !DILocation(line: 136, column: 70, scope: !12805, inlinedAt: !15278)
!15278 = distinct !DILocation(line: 1396, column: 25, scope: !15271)
!15279 = !DILocation(line: 138, column: 2, scope: !12805, inlinedAt: !15278)
!15280 = !DILocation(line: 139, column: 19, scope: !12805, inlinedAt: !15278)
!15281 = !DILocation(line: 44, column: 15, scope: !12815, inlinedAt: !15282)
!15282 = distinct !DILocation(line: 145, column: 10, scope: !12805, inlinedAt: !15278)
!15283 = !DILocation(line: 53, column: 15, scope: !12815, inlinedAt: !15282)
!15284 = !DILocation(line: 55, column: 2, scope: !12815, inlinedAt: !15282)
!15285 = !DILocation(line: 76, column: 9, scope: !12815, inlinedAt: !15282)
!15286 = !DILocation(line: 145, column: 4, scope: !12805, inlinedAt: !15278)
!15287 = !DILocation(line: 145, column: 8, scope: !12805, inlinedAt: !15278)
!15288 = !DILocation(line: 165, column: 2, scope: !12805, inlinedAt: !15278)
!15289 = !DILocation(line: 1396, column: 25, scope: !15271)
!15290 = !DILocation(line: 1400, column: 18, scope: !15291)
!15291 = distinct !DILexicalBlock(scope: !15292, file: !2052, line: 1399, column: 36)
!15292 = distinct !DILexicalBlock(scope: !15271, file: !2052, line: 1398, column: 6)
!15293 = !DILocation(line: 264, column: 59, scope: !13194, inlinedAt: !15294)
!15294 = distinct !DILocation(line: 1400, column: 3, scope: !15291)
!15295 = !DILocation(line: 266, column: 2, scope: !13194, inlinedAt: !15294)
!15296 = !DILocation(line: 266, column: 10, scope: !13194, inlinedAt: !15294)
!15297 = !DILocation(line: 266, column: 15, scope: !13194, inlinedAt: !15294)
!15298 = !DILocation(line: 266, column: 28, scope: !13194, inlinedAt: !15294)
!15299 = !DILocation(line: 267, column: 26, scope: !13202, inlinedAt: !15294)
!15300 = !DILocation(line: 267, column: 6, scope: !13202, inlinedAt: !15294)
!15301 = !DILocation(line: 267, column: 6, scope: !13194, inlinedAt: !15294)
!15302 = !DILocation(line: 268, column: 15, scope: !13206, inlinedAt: !15294)
!15303 = !DILocation(line: 232, column: 56, scope: !13208, inlinedAt: !15304)
!15304 = distinct !DILocation(line: 268, column: 3, scope: !13206, inlinedAt: !15294)
!15305 = !DILocation(line: 234, column: 31, scope: !13208, inlinedAt: !15304)
!15306 = !DILocation(line: 199, column: 57, scope: !13213, inlinedAt: !15307)
!15307 = distinct !DILocation(line: 234, column: 19, scope: !13208, inlinedAt: !15304)
!15308 = !DILocation(line: 234, column: 19, scope: !13208, inlinedAt: !15304)
!15309 = !DILocation(line: 234, column: 40, scope: !13208, inlinedAt: !15304)
!15310 = !DILocation(line: 234, column: 2, scope: !13208, inlinedAt: !15304)
!15311 = !DILocation(line: 269, column: 2, scope: !13206, inlinedAt: !15294)
!15312 = !DILocation(line: 1402, column: 15, scope: !15271)
!15313 = !DILocation(line: 250, column: 57, scope: !13225, inlinedAt: !15314)
!15314 = distinct !DILocation(line: 1402, column: 2, scope: !15271)
!15315 = !DILocation(line: 252, column: 2, scope: !13225, inlinedAt: !15314)
!15316 = !DILocation(line: 252, column: 10, scope: !13225, inlinedAt: !15314)
!15317 = !DILocation(line: 252, column: 15, scope: !13225, inlinedAt: !15314)
!15318 = !DILocation(line: 252, column: 28, scope: !13225, inlinedAt: !15314)
!15319 = !DILocation(line: 253, column: 26, scope: !13233, inlinedAt: !15314)
!15320 = !DILocation(line: 253, column: 6, scope: !13233, inlinedAt: !15314)
!15321 = !DILocation(line: 253, column: 6, scope: !13225, inlinedAt: !15314)
!15322 = !DILocation(line: 254, column: 12, scope: !13237, inlinedAt: !15314)
!15323 = !DILocation(line: 227, column: 53, scope: !13239, inlinedAt: !15324)
!15324 = distinct !DILocation(line: 254, column: 3, scope: !13237, inlinedAt: !15314)
!15325 = !DILocation(line: 229, column: 28, scope: !13239, inlinedAt: !15324)
!15326 = !DILocation(line: 199, column: 57, scope: !13213, inlinedAt: !15327)
!15327 = distinct !DILocation(line: 229, column: 16, scope: !13239, inlinedAt: !15324)
!15328 = !DILocation(line: 229, column: 37, scope: !13239, inlinedAt: !15324)
!15329 = !DILocation(line: 181, column: 56, scope: !13247, inlinedAt: !15330)
!15330 = distinct !DILocation(line: 229, column: 2, scope: !13239, inlinedAt: !15324)
!15331 = !DILocation(line: 182, column: 25, scope: !13247, inlinedAt: !15330)
!15332 = !DILocation(line: 184, column: 19, scope: !13247, inlinedAt: !15330)
!15333 = !DILocation(line: 188, column: 2, scope: !13258, inlinedAt: !15330)
!15334 = !DILocation(line: 188, column: 2, scope: !13260, inlinedAt: !15330)
!15335 = !DILocation(line: 189, column: 24, scope: !13262, inlinedAt: !15330)
!15336 = !DILocation(line: 189, column: 32, scope: !13262, inlinedAt: !15330)
!15337 = !DILocation(line: 189, column: 7, scope: !13262, inlinedAt: !15330)
!15338 = !DILocation(line: 189, column: 35, scope: !13262, inlinedAt: !15330)
!15339 = !DILocation(line: 189, column: 7, scope: !13263, inlinedAt: !15330)
!15340 = !DILocation(line: 190, column: 22, scope: !13269, inlinedAt: !15330)
!15341 = !DILocation(line: 190, column: 25, scope: !13269, inlinedAt: !15330)
!15342 = !DILocation(line: 190, column: 30, scope: !13269, inlinedAt: !15330)
!15343 = !DILocation(line: 191, column: 8, scope: !13269, inlinedAt: !15330)
!15344 = !DILocation(line: 191, column: 16, scope: !13269, inlinedAt: !15330)
!15345 = !DILocation(line: 191, column: 21, scope: !13269, inlinedAt: !15330)
!15346 = !DILocation(line: 190, column: 4, scope: !13269, inlinedAt: !15330)
!15347 = !DILocation(line: 192, column: 4, scope: !13269, inlinedAt: !15330)
!15348 = distinct !{!15348, !15333, !15349}
!15349 = !DILocation(line: 194, column: 2, scope: !13258, inlinedAt: !15330)
!15350 = !DILocation(line: 196, column: 19, scope: !13247, inlinedAt: !15330)
!15351 = !DILocation(line: 196, column: 24, scope: !13247, inlinedAt: !15330)
!15352 = !DILocation(line: 196, column: 32, scope: !13247, inlinedAt: !15330)
!15353 = !DILocation(line: 196, column: 37, scope: !13247, inlinedAt: !15330)
!15354 = !DILocation(line: 196, column: 2, scope: !13247, inlinedAt: !15330)
!15355 = !DILocation(line: 197, column: 1, scope: !13247, inlinedAt: !15330)
!15356 = !DILocation(line: 255, column: 2, scope: !13237, inlinedAt: !15314)
!15357 = !DILocation(line: 1403, column: 2, scope: !15271)
!15358 = !DILocation(line: 1404, column: 2, scope: !15271)
!15359 = !DILocation(line: 193, column: 52, scope: !13871, inlinedAt: !15360)
!15360 = distinct !DILocation(line: 1404, column: 2, scope: !15271)
!15361 = !DILocation(line: 193, column: 75, scope: !13871, inlinedAt: !15360)
!15362 = !DILocation(line: 195, column: 17, scope: !13871, inlinedAt: !15360)
!15363 = !DILocation(line: 221, column: 61, scope: !13880, inlinedAt: !15364)
!15364 = distinct !DILocation(line: 195, column: 2, scope: !13871, inlinedAt: !15360)
!15365 = !DILocation(line: 223, column: 2, scope: !13880, inlinedAt: !15364)
!15366 = !DILocation(line: 196, column: 28, scope: !13871, inlinedAt: !15360)
!15367 = !DILocation(line: 196, column: 9, scope: !13871, inlinedAt: !15360)
!15368 = !DILocation(line: 1405, column: 1, scope: !15271)
!15369 = distinct !DISubprogram(name: "z_impl_k_sleep", scope: !2052, file: !2052, line: 1459, type: !15370, scopeLine: 1460, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1950, retainedNodes: !223)
!15370 = !DISubroutineType(types: !15371)
!15371 = !{!250, !14150}
!15372 = !DILocalVariable(name: "timeout", arg: 1, scope: !15369, file: !2052, line: 1459, type: !14150)
!15373 = !DILocation(line: 1459, column: 36, scope: !15369)
!15374 = !DILocalVariable(name: "ticks", scope: !15369, file: !2052, line: 1461, type: !1442)
!15375 = !DILocation(line: 1461, column: 12, scope: !15369)
!15376 = !DILocation(line: 1465, column: 2, scope: !15369)
!15377 = !DILocation(line: 1465, column: 2, scope: !15378)
!15378 = distinct !DILexicalBlock(scope: !15369, file: !2052, line: 1465, column: 2)
!15379 = !DILocation(line: 1468, column: 6, scope: !15380)
!15380 = distinct !DILexicalBlock(scope: !15369, file: !2052, line: 1468, column: 6)
!15381 = !DILocation(line: 1468, column: 6, scope: !15369)
!15382 = !DILocation(line: 1469, column: 20, scope: !15383)
!15383 = distinct !DILexicalBlock(scope: !15380, file: !2052, line: 1468, column: 40)
!15384 = !DILocation(line: 1469, column: 3, scope: !15383)
!15385 = !DILocation(line: 1471, column: 3, scope: !15383)
!15386 = !DILocation(line: 1471, column: 3, scope: !15387)
!15387 = distinct !DILexicalBlock(scope: !15383, file: !2052, line: 1471, column: 3)
!15388 = !DILocation(line: 1473, column: 3, scope: !15383)
!15389 = !DILocation(line: 1476, column: 18, scope: !15369)
!15390 = !DILocation(line: 1476, column: 8, scope: !15369)
!15391 = !DILocation(line: 1478, column: 23, scope: !15369)
!15392 = !DILocation(line: 1478, column: 10, scope: !15369)
!15393 = !DILocation(line: 1478, column: 8, scope: !15369)
!15394 = !DILocalVariable(name: "ret", scope: !15369, file: !2052, line: 1480, type: !250)
!15395 = !DILocation(line: 1480, column: 10, scope: !15369)
!15396 = !DILocation(line: 1480, column: 38, scope: !15369)
!15397 = !DILocation(line: 1480, column: 16, scope: !15369)
!15398 = !DILocation(line: 1482, column: 2, scope: !15369)
!15399 = !DILocation(line: 1482, column: 2, scope: !15400)
!15400 = distinct !DILexicalBlock(scope: !15369, file: !2052, line: 1482, column: 2)
!15401 = !DILocation(line: 1484, column: 9, scope: !15369)
!15402 = !DILocation(line: 1484, column: 2, scope: !15369)
!15403 = !DILocation(line: 1485, column: 1, scope: !15369)
!15404 = distinct !DISubprogram(name: "k_thread_suspend", scope: !2997, file: !2997, line: 310, type: !15405, scopeLine: 311, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1950, retainedNodes: !223)
!15405 = !DISubroutineType(types: !15406)
!15406 = !{null, !15234}
!15407 = !DILocalVariable(name: "thread", arg: 1, scope: !15404, file: !2997, line: 310, type: !15234)
!15408 = !DILocation(line: 310, column: 45, scope: !15404)
!15409 = !DILocation(line: 319, column: 2, scope: !15404)
!15410 = !DILocation(line: 319, column: 2, scope: !15411)
!15411 = distinct !DILexicalBlock(scope: !15404, file: !2997, line: 319, column: 2)
!15412 = !{i64 2151079804}
!15413 = !DILocation(line: 320, column: 26, scope: !15404)
!15414 = !DILocation(line: 320, column: 2, scope: !15404)
!15415 = !DILocation(line: 321, column: 1, scope: !15404)
!15416 = distinct !DISubprogram(name: "z_tick_sleep", scope: !2052, file: !2052, line: 1415, type: !15417, scopeLine: 1416, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1950, retainedNodes: !223)
!15417 = !DISubroutineType(types: !15418)
!15418 = !{!250, !1442}
!15419 = !DILocalVariable(name: "ticks", arg: 1, scope: !15416, file: !2052, line: 1415, type: !1442)
!15420 = !DILocation(line: 1415, column: 39, scope: !15416)
!15421 = !DILocalVariable(name: "expected_wakeup_ticks", scope: !15416, file: !2052, line: 1418, type: !173)
!15422 = !DILocation(line: 1418, column: 11, scope: !15416)
!15423 = !DILocation(line: 1422, column: 2, scope: !15416)
!15424 = !DILocation(line: 1422, column: 2, scope: !15425)
!15425 = distinct !DILexicalBlock(scope: !15426, file: !2052, line: 1422, column: 2)
!15426 = distinct !DILexicalBlock(scope: !15427, file: !2052, line: 1422, column: 2)
!15427 = distinct !DILexicalBlock(scope: !15416, file: !2052, line: 1422, column: 2)
!15428 = !DILocation(line: 1425, column: 6, scope: !15429)
!15429 = distinct !DILexicalBlock(scope: !15416, file: !2052, line: 1425, column: 6)
!15430 = !DILocation(line: 1425, column: 12, scope: !15429)
!15431 = !DILocation(line: 1425, column: 6, scope: !15416)
!15432 = !DILocation(line: 1426, column: 3, scope: !15433)
!15433 = distinct !DILexicalBlock(scope: !15429, file: !2052, line: 1425, column: 18)
!15434 = !DILocation(line: 1427, column: 3, scope: !15433)
!15435 = !DILocalVariable(name: "timeout", scope: !15416, file: !2052, line: 1430, type: !14150)
!15436 = !DILocation(line: 1430, column: 14, scope: !15416)
!15437 = !DILocation(line: 1430, column: 24, scope: !15416)
!15438 = !DILocation(line: 1431, column: 6, scope: !15439)
!15439 = distinct !DILexicalBlock(scope: !15416, file: !2052, line: 1431, column: 6)
!15440 = !DILocation(line: 1431, column: 24, scope: !15439)
!15441 = !DILocation(line: 1431, column: 6, scope: !15416)
!15442 = !DILocation(line: 1432, column: 27, scope: !15443)
!15443 = distinct !DILexicalBlock(scope: !15439, file: !2052, line: 1431, column: 30)
!15444 = !DILocation(line: 1432, column: 35, scope: !15443)
!15445 = !DILocation(line: 1432, column: 33, scope: !15443)
!15446 = !DILocation(line: 1432, column: 25, scope: !15443)
!15447 = !DILocation(line: 1433, column: 2, scope: !15443)
!15448 = !DILocation(line: 1434, column: 27, scope: !15449)
!15449 = distinct !DILexicalBlock(scope: !15439, file: !2052, line: 1433, column: 9)
!15450 = !DILocation(line: 1434, column: 25, scope: !15449)
!15451 = !DILocalVariable(name: "key", scope: !15416, file: !2052, line: 1437, type: !12798)
!15452 = !DILocation(line: 1437, column: 19, scope: !15416)
!15453 = !DILocation(line: 136, column: 70, scope: !12805, inlinedAt: !15454)
!15454 = distinct !DILocation(line: 1437, column: 25, scope: !15416)
!15455 = !DILocation(line: 138, column: 2, scope: !12805, inlinedAt: !15454)
!15456 = !DILocation(line: 139, column: 19, scope: !12805, inlinedAt: !15454)
!15457 = !DILocation(line: 44, column: 15, scope: !12815, inlinedAt: !15458)
!15458 = distinct !DILocation(line: 145, column: 10, scope: !12805, inlinedAt: !15454)
!15459 = !DILocation(line: 53, column: 15, scope: !12815, inlinedAt: !15458)
!15460 = !DILocation(line: 55, column: 2, scope: !12815, inlinedAt: !15458)
!15461 = !DILocation(line: 76, column: 9, scope: !12815, inlinedAt: !15458)
!15462 = !DILocation(line: 145, column: 4, scope: !12805, inlinedAt: !15454)
!15463 = !DILocation(line: 145, column: 8, scope: !12805, inlinedAt: !15454)
!15464 = !DILocation(line: 165, column: 2, scope: !12805, inlinedAt: !15454)
!15465 = !DILocation(line: 1437, column: 25, scope: !15416)
!15466 = !DILocation(line: 1440, column: 20, scope: !15416)
!15467 = !DILocation(line: 1440, column: 18, scope: !15416)
!15468 = !DILocation(line: 1442, column: 17, scope: !15416)
!15469 = !DILocation(line: 1442, column: 2, scope: !15416)
!15470 = !DILocation(line: 1443, column: 23, scope: !15416)
!15471 = !DILocation(line: 1443, column: 2, scope: !15416)
!15472 = !DILocation(line: 1444, column: 29, scope: !15416)
!15473 = !DILocation(line: 1444, column: 2, scope: !15416)
!15474 = !DILocation(line: 1446, column: 8, scope: !15416)
!15475 = !DILocation(line: 193, column: 52, scope: !13871, inlinedAt: !15476)
!15476 = distinct !DILocation(line: 1446, column: 8, scope: !15416)
!15477 = !DILocation(line: 193, column: 75, scope: !13871, inlinedAt: !15476)
!15478 = !DILocation(line: 195, column: 17, scope: !13871, inlinedAt: !15476)
!15479 = !DILocation(line: 221, column: 61, scope: !13880, inlinedAt: !15480)
!15480 = distinct !DILocation(line: 195, column: 2, scope: !13871, inlinedAt: !15476)
!15481 = !DILocation(line: 223, column: 2, scope: !13880, inlinedAt: !15480)
!15482 = !DILocation(line: 196, column: 28, scope: !13871, inlinedAt: !15476)
!15483 = !DILocation(line: 196, column: 9, scope: !13871, inlinedAt: !15476)
!15484 = !DILocation(line: 1450, column: 21, scope: !15416)
!15485 = !DILocation(line: 1450, column: 10, scope: !15416)
!15486 = !DILocation(line: 1450, column: 45, scope: !15416)
!15487 = !DILocation(line: 1450, column: 43, scope: !15416)
!15488 = !DILocation(line: 1450, column: 8, scope: !15416)
!15489 = !DILocation(line: 1451, column: 6, scope: !15490)
!15490 = distinct !DILexicalBlock(scope: !15416, file: !2052, line: 1451, column: 6)
!15491 = !DILocation(line: 1451, column: 12, scope: !15490)
!15492 = !DILocation(line: 1451, column: 6, scope: !15416)
!15493 = !DILocation(line: 1452, column: 10, scope: !15494)
!15494 = distinct !DILexicalBlock(scope: !15490, file: !2052, line: 1451, column: 17)
!15495 = !DILocation(line: 1452, column: 3, scope: !15494)
!15496 = !DILocation(line: 1456, column: 2, scope: !15416)
!15497 = !DILocation(line: 1457, column: 1, scope: !15416)
!15498 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !8763, file: !8763, line: 1103, type: !12434, scopeLine: 1104, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1950, retainedNodes: !223)
!15499 = !DILocalVariable(name: "t", arg: 1, scope: !15498, file: !8763, line: 1103, type: !1940)
!15500 = !DILocation(line: 1103, column: 70, scope: !15498)
!15501 = !DILocation(line: 1106, column: 17, scope: !15498)
!15502 = !DILocation(line: 102, column: 63, scope: !12873, inlinedAt: !15503)
!15503 = distinct !DILocation(line: 1106, column: 9, scope: !15498)
!15504 = !DILocation(line: 102, column: 75, scope: !12873, inlinedAt: !15503)
!15505 = !DILocation(line: 103, column: 18, scope: !12873, inlinedAt: !15503)
!15506 = !DILocation(line: 103, column: 30, scope: !12873, inlinedAt: !15503)
!15507 = !DILocation(line: 104, column: 14, scope: !12873, inlinedAt: !15503)
!15508 = !DILocation(line: 104, column: 29, scope: !12873, inlinedAt: !15503)
!15509 = !DILocation(line: 105, column: 14, scope: !12873, inlinedAt: !15503)
!15510 = !DILocation(line: 107, column: 7, scope: !12873, inlinedAt: !15503)
!15511 = !DILocation(line: 107, column: 19, scope: !12873, inlinedAt: !15503)
!15512 = !DILocation(line: 107, column: 28, scope: !12873, inlinedAt: !15503)
!15513 = !DILocation(line: 108, column: 4, scope: !12873, inlinedAt: !15503)
!15514 = !DILocation(line: 108, column: 12, scope: !12873, inlinedAt: !15503)
!15515 = !DILocation(line: 108, column: 10, scope: !12873, inlinedAt: !15503)
!15516 = !DILocation(line: 108, column: 21, scope: !12873, inlinedAt: !15503)
!15517 = !DILocation(line: 108, column: 26, scope: !12873, inlinedAt: !15503)
!15518 = !DILocation(line: 108, column: 34, scope: !12873, inlinedAt: !15503)
!15519 = !DILocation(line: 108, column: 32, scope: !12873, inlinedAt: !15503)
!15520 = !DILocation(line: 108, column: 43, scope: !12873, inlinedAt: !15503)
!15521 = !DILocation(line: 0, scope: !12873, inlinedAt: !15503)
!15522 = !DILocation(line: 109, column: 7, scope: !12873, inlinedAt: !15503)
!15523 = !DILocation(line: 109, column: 19, scope: !12873, inlinedAt: !15503)
!15524 = !DILocation(line: 109, column: 28, scope: !12873, inlinedAt: !15503)
!15525 = !DILocation(line: 110, column: 4, scope: !12873, inlinedAt: !15503)
!15526 = !DILocation(line: 110, column: 14, scope: !12873, inlinedAt: !15503)
!15527 = !DILocation(line: 110, column: 12, scope: !12873, inlinedAt: !15503)
!15528 = !DILocation(line: 110, column: 21, scope: !12873, inlinedAt: !15503)
!15529 = !DILocation(line: 110, column: 26, scope: !12873, inlinedAt: !15503)
!15530 = !DILocation(line: 110, column: 36, scope: !12873, inlinedAt: !15503)
!15531 = !DILocation(line: 110, column: 34, scope: !12873, inlinedAt: !15503)
!15532 = !DILocation(line: 110, column: 43, scope: !12873, inlinedAt: !15503)
!15533 = !DILocation(line: 112, column: 6, scope: !12914, inlinedAt: !15503)
!15534 = !DILocation(line: 112, column: 17, scope: !12914, inlinedAt: !15503)
!15535 = !DILocation(line: 112, column: 14, scope: !12914, inlinedAt: !15503)
!15536 = !DILocation(line: 112, column: 6, scope: !12873, inlinedAt: !15503)
!15537 = !DILocation(line: 113, column: 10, scope: !12919, inlinedAt: !15503)
!15538 = !DILocation(line: 113, column: 32, scope: !12919, inlinedAt: !15503)
!15539 = !DILocation(line: 113, column: 22, scope: !12919, inlinedAt: !15503)
!15540 = !DILocation(line: 113, column: 21, scope: !12919, inlinedAt: !15503)
!15541 = !DILocation(line: 113, column: 37, scope: !12919, inlinedAt: !15503)
!15542 = !DILocation(line: 113, column: 3, scope: !12919, inlinedAt: !15503)
!15543 = !DILocation(line: 116, column: 11, scope: !12873, inlinedAt: !15503)
!15544 = !DILocation(line: 118, column: 7, scope: !12928, inlinedAt: !15503)
!15545 = !DILocation(line: 118, column: 6, scope: !12873, inlinedAt: !15503)
!15546 = !DILocation(line: 119, column: 12, scope: !12931, inlinedAt: !15503)
!15547 = !DILocation(line: 119, column: 23, scope: !12931, inlinedAt: !15503)
!15548 = !DILocation(line: 119, column: 36, scope: !12931, inlinedAt: !15503)
!15549 = !DILocation(line: 119, column: 46, scope: !12931, inlinedAt: !15503)
!15550 = !DILocation(line: 119, column: 44, scope: !12931, inlinedAt: !15503)
!15551 = !DILocation(line: 119, column: 55, scope: !12931, inlinedAt: !15503)
!15552 = !DILocation(line: 121, column: 7, scope: !12939, inlinedAt: !15503)
!15553 = !DILocation(line: 121, column: 7, scope: !12931, inlinedAt: !15503)
!15554 = !DILocation(line: 122, column: 10, scope: !12942, inlinedAt: !15503)
!15555 = !DILocation(line: 122, column: 19, scope: !12942, inlinedAt: !15503)
!15556 = !DILocation(line: 122, column: 8, scope: !12942, inlinedAt: !15503)
!15557 = !DILocation(line: 123, column: 3, scope: !12942, inlinedAt: !15503)
!15558 = !DILocation(line: 124, column: 7, scope: !12947, inlinedAt: !15503)
!15559 = !DILocation(line: 124, column: 7, scope: !12931, inlinedAt: !15503)
!15560 = !DILocation(line: 125, column: 10, scope: !12950, inlinedAt: !15503)
!15561 = !DILocation(line: 125, column: 19, scope: !12950, inlinedAt: !15503)
!15562 = !DILocation(line: 125, column: 8, scope: !12950, inlinedAt: !15503)
!15563 = !DILocation(line: 126, column: 3, scope: !12950, inlinedAt: !15503)
!15564 = !DILocation(line: 127, column: 2, scope: !12931, inlinedAt: !15503)
!15565 = !DILocation(line: 134, column: 6, scope: !12956, inlinedAt: !15503)
!15566 = !DILocation(line: 134, column: 6, scope: !12873, inlinedAt: !15503)
!15567 = !DILocation(line: 135, column: 8, scope: !12959, inlinedAt: !15503)
!15568 = !DILocation(line: 135, column: 5, scope: !12959, inlinedAt: !15503)
!15569 = !DILocation(line: 136, column: 7, scope: !12962, inlinedAt: !15503)
!15570 = !DILocation(line: 136, column: 16, scope: !12962, inlinedAt: !15503)
!15571 = !DILocation(line: 136, column: 20, scope: !12962, inlinedAt: !15503)
!15572 = !DILocation(line: 136, column: 22, scope: !12962, inlinedAt: !15503)
!15573 = !DILocation(line: 136, column: 7, scope: !12959, inlinedAt: !15503)
!15574 = !DILocation(line: 137, column: 22, scope: !12968, inlinedAt: !15503)
!15575 = !DILocation(line: 137, column: 12, scope: !12968, inlinedAt: !15503)
!15576 = !DILocation(line: 137, column: 28, scope: !12968, inlinedAt: !15503)
!15577 = !DILocation(line: 137, column: 38, scope: !12968, inlinedAt: !15503)
!15578 = !DILocation(line: 137, column: 36, scope: !12968, inlinedAt: !15503)
!15579 = !DILocation(line: 137, column: 25, scope: !12968, inlinedAt: !15503)
!15580 = !DILocation(line: 137, column: 11, scope: !12968, inlinedAt: !15503)
!15581 = !DILocation(line: 137, column: 4, scope: !12968, inlinedAt: !15503)
!15582 = !DILocation(line: 139, column: 11, scope: !12977, inlinedAt: !15503)
!15583 = !DILocation(line: 139, column: 26, scope: !12977, inlinedAt: !15503)
!15584 = !DILocation(line: 139, column: 16, scope: !12977, inlinedAt: !15503)
!15585 = !DILocation(line: 139, column: 36, scope: !12977, inlinedAt: !15503)
!15586 = !DILocation(line: 139, column: 34, scope: !12977, inlinedAt: !15503)
!15587 = !DILocation(line: 139, column: 13, scope: !12977, inlinedAt: !15503)
!15588 = !DILocation(line: 139, column: 4, scope: !12977, inlinedAt: !15503)
!15589 = !DILocation(line: 141, column: 13, scope: !12985, inlinedAt: !15503)
!15590 = !DILocation(line: 141, column: 13, scope: !12956, inlinedAt: !15503)
!15591 = !DILocation(line: 142, column: 7, scope: !12988, inlinedAt: !15503)
!15592 = !DILocation(line: 142, column: 7, scope: !12989, inlinedAt: !15503)
!15593 = !DILocation(line: 143, column: 22, scope: !12992, inlinedAt: !15503)
!15594 = !DILocation(line: 143, column: 12, scope: !12992, inlinedAt: !15503)
!15595 = !DILocation(line: 143, column: 28, scope: !12992, inlinedAt: !15503)
!15596 = !DILocation(line: 143, column: 36, scope: !12992, inlinedAt: !15503)
!15597 = !DILocation(line: 143, column: 34, scope: !12992, inlinedAt: !15503)
!15598 = !DILocation(line: 143, column: 25, scope: !12992, inlinedAt: !15503)
!15599 = !DILocation(line: 143, column: 11, scope: !12992, inlinedAt: !15503)
!15600 = !DILocation(line: 143, column: 4, scope: !12992, inlinedAt: !15503)
!15601 = !DILocation(line: 145, column: 11, scope: !13001, inlinedAt: !15503)
!15602 = !DILocation(line: 145, column: 26, scope: !13001, inlinedAt: !15503)
!15603 = !DILocation(line: 145, column: 16, scope: !13001, inlinedAt: !15503)
!15604 = !DILocation(line: 145, column: 34, scope: !13001, inlinedAt: !15503)
!15605 = !DILocation(line: 145, column: 32, scope: !13001, inlinedAt: !15503)
!15606 = !DILocation(line: 145, column: 13, scope: !13001, inlinedAt: !15503)
!15607 = !DILocation(line: 145, column: 4, scope: !13001, inlinedAt: !15503)
!15608 = !DILocation(line: 148, column: 7, scope: !13009, inlinedAt: !15503)
!15609 = !DILocation(line: 148, column: 7, scope: !13010, inlinedAt: !15503)
!15610 = !DILocation(line: 149, column: 23, scope: !13013, inlinedAt: !15503)
!15611 = !DILocation(line: 149, column: 27, scope: !13013, inlinedAt: !15503)
!15612 = !DILocation(line: 149, column: 25, scope: !13013, inlinedAt: !15503)
!15613 = !DILocation(line: 149, column: 35, scope: !13013, inlinedAt: !15503)
!15614 = !DILocation(line: 149, column: 33, scope: !13013, inlinedAt: !15503)
!15615 = !DILocation(line: 149, column: 42, scope: !13013, inlinedAt: !15503)
!15616 = !DILocation(line: 149, column: 40, scope: !13013, inlinedAt: !15503)
!15617 = !DILocation(line: 149, column: 11, scope: !13013, inlinedAt: !15503)
!15618 = !DILocation(line: 149, column: 4, scope: !13013, inlinedAt: !15503)
!15619 = !DILocation(line: 150, column: 14, scope: !13023, inlinedAt: !15503)
!15620 = !DILocation(line: 150, column: 23, scope: !13023, inlinedAt: !15503)
!15621 = !DILocation(line: 150, column: 26, scope: !13023, inlinedAt: !15503)
!15622 = !DILocation(line: 150, column: 14, scope: !13009, inlinedAt: !15503)
!15623 = !DILocation(line: 156, column: 13, scope: !13028, inlinedAt: !15503)
!15624 = !DILocation(line: 156, column: 17, scope: !13028, inlinedAt: !15503)
!15625 = !DILocation(line: 156, column: 15, scope: !13028, inlinedAt: !15503)
!15626 = !DILocation(line: 156, column: 25, scope: !13028, inlinedAt: !15503)
!15627 = !DILocation(line: 156, column: 23, scope: !13028, inlinedAt: !15503)
!15628 = !DILocation(line: 156, column: 32, scope: !13028, inlinedAt: !15503)
!15629 = !DILocation(line: 156, column: 30, scope: !13028, inlinedAt: !15503)
!15630 = !DILocation(line: 156, column: 4, scope: !13028, inlinedAt: !15503)
!15631 = !DILocation(line: 161, column: 12, scope: !13037, inlinedAt: !15503)
!15632 = !DILocation(line: 161, column: 16, scope: !13037, inlinedAt: !15503)
!15633 = !DILocation(line: 161, column: 14, scope: !13037, inlinedAt: !15503)
!15634 = !DILocation(line: 161, column: 27, scope: !13037, inlinedAt: !15503)
!15635 = !DILocation(line: 161, column: 25, scope: !13037, inlinedAt: !15503)
!15636 = !DILocation(line: 161, column: 37, scope: !13037, inlinedAt: !15503)
!15637 = !DILocation(line: 161, column: 41, scope: !13037, inlinedAt: !15503)
!15638 = !DILocation(line: 161, column: 39, scope: !13037, inlinedAt: !15503)
!15639 = !DILocation(line: 161, column: 52, scope: !13037, inlinedAt: !15503)
!15640 = !DILocation(line: 161, column: 50, scope: !13037, inlinedAt: !15503)
!15641 = !DILocation(line: 161, column: 60, scope: !13037, inlinedAt: !15503)
!15642 = !DILocation(line: 161, column: 58, scope: !13037, inlinedAt: !15503)
!15643 = !DILocation(line: 161, column: 67, scope: !13037, inlinedAt: !15503)
!15644 = !DILocation(line: 161, column: 65, scope: !13037, inlinedAt: !15503)
!15645 = !DILocation(line: 161, column: 33, scope: !13037, inlinedAt: !15503)
!15646 = !DILocation(line: 161, column: 4, scope: !13037, inlinedAt: !15503)
!15647 = !DILocation(line: 164, column: 1, scope: !12873, inlinedAt: !15503)
!15648 = !DILocation(line: 1106, column: 2, scope: !15498)
!15649 = distinct !DISubprogram(name: "k_yield", scope: !2997, file: !2997, line: 140, type: !253, scopeLine: 141, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1950, retainedNodes: !223)
!15650 = !DILocation(line: 148, column: 2, scope: !15649)
!15651 = !DILocation(line: 148, column: 2, scope: !15652)
!15652 = distinct !DILexicalBlock(scope: !15649, file: !2997, line: 148, column: 2)
!15653 = !{i64 2151079124}
!15654 = !DILocation(line: 149, column: 2, scope: !15649)
!15655 = !DILocation(line: 150, column: 1, scope: !15649)
!15656 = distinct !DISubprogram(name: "z_impl_k_usleep", scope: !2052, file: !2052, line: 1495, type: !15657, scopeLine: 1496, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1950, retainedNodes: !223)
!15657 = !DISubroutineType(types: !15658)
!15658 = !{!250, !103}
!15659 = !DILocalVariable(name: "us", arg: 1, scope: !15656, file: !2052, line: 1495, type: !103)
!15660 = !DILocation(line: 1495, column: 29, scope: !15656)
!15661 = !DILocalVariable(name: "ticks", scope: !15656, file: !2052, line: 1497, type: !250)
!15662 = !DILocation(line: 1497, column: 10, scope: !15656)
!15663 = !DILocation(line: 1499, column: 2, scope: !15656)
!15664 = !DILocation(line: 1499, column: 2, scope: !15665)
!15665 = distinct !DILexicalBlock(scope: !15656, file: !2052, line: 1499, column: 2)
!15666 = !DILocation(line: 1501, column: 31, scope: !15656)
!15667 = !DILocation(line: 1501, column: 10, scope: !15656)
!15668 = !DILocation(line: 1501, column: 8, scope: !15656)
!15669 = !DILocation(line: 1502, column: 23, scope: !15656)
!15670 = !DILocation(line: 1502, column: 10, scope: !15656)
!15671 = !DILocation(line: 1502, column: 8, scope: !15656)
!15672 = !DILocation(line: 1504, column: 2, scope: !15656)
!15673 = !DILocation(line: 1504, column: 2, scope: !15674)
!15674 = distinct !DILexicalBlock(scope: !15656, file: !2052, line: 1504, column: 2)
!15675 = !DILocation(line: 1506, column: 31, scope: !15656)
!15676 = !DILocation(line: 1506, column: 9, scope: !15656)
!15677 = !DILocation(line: 1506, column: 2, scope: !15656)
!15678 = distinct !DISubprogram(name: "k_us_to_ticks_ceil64", scope: !8763, file: !8763, line: 571, type: !12434, scopeLine: 572, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1950, retainedNodes: !223)
!15679 = !DILocalVariable(name: "t", arg: 1, scope: !15678, file: !8763, line: 571, type: !1940)
!15680 = !DILocation(line: 571, column: 69, scope: !15678)
!15681 = !DILocation(line: 574, column: 17, scope: !15678)
!15682 = !DILocation(line: 102, column: 63, scope: !12873, inlinedAt: !15683)
!15683 = distinct !DILocation(line: 574, column: 9, scope: !15678)
!15684 = !DILocation(line: 102, column: 75, scope: !12873, inlinedAt: !15683)
!15685 = !DILocation(line: 103, column: 18, scope: !12873, inlinedAt: !15683)
!15686 = !DILocation(line: 103, column: 30, scope: !12873, inlinedAt: !15683)
!15687 = !DILocation(line: 104, column: 14, scope: !12873, inlinedAt: !15683)
!15688 = !DILocation(line: 104, column: 29, scope: !12873, inlinedAt: !15683)
!15689 = !DILocation(line: 105, column: 14, scope: !12873, inlinedAt: !15683)
!15690 = !DILocation(line: 107, column: 7, scope: !12873, inlinedAt: !15683)
!15691 = !DILocation(line: 107, column: 19, scope: !12873, inlinedAt: !15683)
!15692 = !DILocation(line: 107, column: 28, scope: !12873, inlinedAt: !15683)
!15693 = !DILocation(line: 108, column: 4, scope: !12873, inlinedAt: !15683)
!15694 = !DILocation(line: 108, column: 12, scope: !12873, inlinedAt: !15683)
!15695 = !DILocation(line: 108, column: 10, scope: !12873, inlinedAt: !15683)
!15696 = !DILocation(line: 108, column: 21, scope: !12873, inlinedAt: !15683)
!15697 = !DILocation(line: 108, column: 26, scope: !12873, inlinedAt: !15683)
!15698 = !DILocation(line: 108, column: 34, scope: !12873, inlinedAt: !15683)
!15699 = !DILocation(line: 108, column: 32, scope: !12873, inlinedAt: !15683)
!15700 = !DILocation(line: 108, column: 43, scope: !12873, inlinedAt: !15683)
!15701 = !DILocation(line: 0, scope: !12873, inlinedAt: !15683)
!15702 = !DILocation(line: 109, column: 7, scope: !12873, inlinedAt: !15683)
!15703 = !DILocation(line: 109, column: 19, scope: !12873, inlinedAt: !15683)
!15704 = !DILocation(line: 109, column: 28, scope: !12873, inlinedAt: !15683)
!15705 = !DILocation(line: 110, column: 4, scope: !12873, inlinedAt: !15683)
!15706 = !DILocation(line: 110, column: 14, scope: !12873, inlinedAt: !15683)
!15707 = !DILocation(line: 110, column: 12, scope: !12873, inlinedAt: !15683)
!15708 = !DILocation(line: 110, column: 21, scope: !12873, inlinedAt: !15683)
!15709 = !DILocation(line: 110, column: 26, scope: !12873, inlinedAt: !15683)
!15710 = !DILocation(line: 110, column: 36, scope: !12873, inlinedAt: !15683)
!15711 = !DILocation(line: 110, column: 34, scope: !12873, inlinedAt: !15683)
!15712 = !DILocation(line: 110, column: 43, scope: !12873, inlinedAt: !15683)
!15713 = !DILocation(line: 112, column: 6, scope: !12914, inlinedAt: !15683)
!15714 = !DILocation(line: 112, column: 17, scope: !12914, inlinedAt: !15683)
!15715 = !DILocation(line: 112, column: 14, scope: !12914, inlinedAt: !15683)
!15716 = !DILocation(line: 112, column: 6, scope: !12873, inlinedAt: !15683)
!15717 = !DILocation(line: 113, column: 10, scope: !12919, inlinedAt: !15683)
!15718 = !DILocation(line: 113, column: 32, scope: !12919, inlinedAt: !15683)
!15719 = !DILocation(line: 113, column: 22, scope: !12919, inlinedAt: !15683)
!15720 = !DILocation(line: 113, column: 21, scope: !12919, inlinedAt: !15683)
!15721 = !DILocation(line: 113, column: 37, scope: !12919, inlinedAt: !15683)
!15722 = !DILocation(line: 113, column: 3, scope: !12919, inlinedAt: !15683)
!15723 = !DILocation(line: 116, column: 11, scope: !12873, inlinedAt: !15683)
!15724 = !DILocation(line: 118, column: 7, scope: !12928, inlinedAt: !15683)
!15725 = !DILocation(line: 118, column: 6, scope: !12873, inlinedAt: !15683)
!15726 = !DILocation(line: 119, column: 12, scope: !12931, inlinedAt: !15683)
!15727 = !DILocation(line: 119, column: 23, scope: !12931, inlinedAt: !15683)
!15728 = !DILocation(line: 119, column: 36, scope: !12931, inlinedAt: !15683)
!15729 = !DILocation(line: 119, column: 46, scope: !12931, inlinedAt: !15683)
!15730 = !DILocation(line: 119, column: 44, scope: !12931, inlinedAt: !15683)
!15731 = !DILocation(line: 119, column: 55, scope: !12931, inlinedAt: !15683)
!15732 = !DILocation(line: 121, column: 7, scope: !12939, inlinedAt: !15683)
!15733 = !DILocation(line: 121, column: 7, scope: !12931, inlinedAt: !15683)
!15734 = !DILocation(line: 122, column: 10, scope: !12942, inlinedAt: !15683)
!15735 = !DILocation(line: 122, column: 19, scope: !12942, inlinedAt: !15683)
!15736 = !DILocation(line: 122, column: 8, scope: !12942, inlinedAt: !15683)
!15737 = !DILocation(line: 123, column: 3, scope: !12942, inlinedAt: !15683)
!15738 = !DILocation(line: 124, column: 7, scope: !12947, inlinedAt: !15683)
!15739 = !DILocation(line: 124, column: 7, scope: !12931, inlinedAt: !15683)
!15740 = !DILocation(line: 125, column: 10, scope: !12950, inlinedAt: !15683)
!15741 = !DILocation(line: 125, column: 19, scope: !12950, inlinedAt: !15683)
!15742 = !DILocation(line: 125, column: 8, scope: !12950, inlinedAt: !15683)
!15743 = !DILocation(line: 126, column: 3, scope: !12950, inlinedAt: !15683)
!15744 = !DILocation(line: 127, column: 2, scope: !12931, inlinedAt: !15683)
!15745 = !DILocation(line: 134, column: 6, scope: !12956, inlinedAt: !15683)
!15746 = !DILocation(line: 134, column: 6, scope: !12873, inlinedAt: !15683)
!15747 = !DILocation(line: 135, column: 8, scope: !12959, inlinedAt: !15683)
!15748 = !DILocation(line: 135, column: 5, scope: !12959, inlinedAt: !15683)
!15749 = !DILocation(line: 136, column: 7, scope: !12962, inlinedAt: !15683)
!15750 = !DILocation(line: 136, column: 16, scope: !12962, inlinedAt: !15683)
!15751 = !DILocation(line: 136, column: 20, scope: !12962, inlinedAt: !15683)
!15752 = !DILocation(line: 136, column: 22, scope: !12962, inlinedAt: !15683)
!15753 = !DILocation(line: 136, column: 7, scope: !12959, inlinedAt: !15683)
!15754 = !DILocation(line: 137, column: 22, scope: !12968, inlinedAt: !15683)
!15755 = !DILocation(line: 137, column: 12, scope: !12968, inlinedAt: !15683)
!15756 = !DILocation(line: 137, column: 28, scope: !12968, inlinedAt: !15683)
!15757 = !DILocation(line: 137, column: 38, scope: !12968, inlinedAt: !15683)
!15758 = !DILocation(line: 137, column: 36, scope: !12968, inlinedAt: !15683)
!15759 = !DILocation(line: 137, column: 25, scope: !12968, inlinedAt: !15683)
!15760 = !DILocation(line: 137, column: 11, scope: !12968, inlinedAt: !15683)
!15761 = !DILocation(line: 137, column: 4, scope: !12968, inlinedAt: !15683)
!15762 = !DILocation(line: 139, column: 11, scope: !12977, inlinedAt: !15683)
!15763 = !DILocation(line: 139, column: 26, scope: !12977, inlinedAt: !15683)
!15764 = !DILocation(line: 139, column: 16, scope: !12977, inlinedAt: !15683)
!15765 = !DILocation(line: 139, column: 36, scope: !12977, inlinedAt: !15683)
!15766 = !DILocation(line: 139, column: 34, scope: !12977, inlinedAt: !15683)
!15767 = !DILocation(line: 139, column: 13, scope: !12977, inlinedAt: !15683)
!15768 = !DILocation(line: 139, column: 4, scope: !12977, inlinedAt: !15683)
!15769 = !DILocation(line: 141, column: 13, scope: !12985, inlinedAt: !15683)
!15770 = !DILocation(line: 141, column: 13, scope: !12956, inlinedAt: !15683)
!15771 = !DILocation(line: 142, column: 7, scope: !12988, inlinedAt: !15683)
!15772 = !DILocation(line: 142, column: 7, scope: !12989, inlinedAt: !15683)
!15773 = !DILocation(line: 143, column: 22, scope: !12992, inlinedAt: !15683)
!15774 = !DILocation(line: 143, column: 12, scope: !12992, inlinedAt: !15683)
!15775 = !DILocation(line: 143, column: 28, scope: !12992, inlinedAt: !15683)
!15776 = !DILocation(line: 143, column: 36, scope: !12992, inlinedAt: !15683)
!15777 = !DILocation(line: 143, column: 34, scope: !12992, inlinedAt: !15683)
!15778 = !DILocation(line: 143, column: 25, scope: !12992, inlinedAt: !15683)
!15779 = !DILocation(line: 143, column: 11, scope: !12992, inlinedAt: !15683)
!15780 = !DILocation(line: 143, column: 4, scope: !12992, inlinedAt: !15683)
!15781 = !DILocation(line: 145, column: 11, scope: !13001, inlinedAt: !15683)
!15782 = !DILocation(line: 145, column: 26, scope: !13001, inlinedAt: !15683)
!15783 = !DILocation(line: 145, column: 16, scope: !13001, inlinedAt: !15683)
!15784 = !DILocation(line: 145, column: 34, scope: !13001, inlinedAt: !15683)
!15785 = !DILocation(line: 145, column: 32, scope: !13001, inlinedAt: !15683)
!15786 = !DILocation(line: 145, column: 13, scope: !13001, inlinedAt: !15683)
!15787 = !DILocation(line: 145, column: 4, scope: !13001, inlinedAt: !15683)
!15788 = !DILocation(line: 148, column: 7, scope: !13009, inlinedAt: !15683)
!15789 = !DILocation(line: 148, column: 7, scope: !13010, inlinedAt: !15683)
!15790 = !DILocation(line: 149, column: 23, scope: !13013, inlinedAt: !15683)
!15791 = !DILocation(line: 149, column: 27, scope: !13013, inlinedAt: !15683)
!15792 = !DILocation(line: 149, column: 25, scope: !13013, inlinedAt: !15683)
!15793 = !DILocation(line: 149, column: 35, scope: !13013, inlinedAt: !15683)
!15794 = !DILocation(line: 149, column: 33, scope: !13013, inlinedAt: !15683)
!15795 = !DILocation(line: 149, column: 42, scope: !13013, inlinedAt: !15683)
!15796 = !DILocation(line: 149, column: 40, scope: !13013, inlinedAt: !15683)
!15797 = !DILocation(line: 149, column: 11, scope: !13013, inlinedAt: !15683)
!15798 = !DILocation(line: 149, column: 4, scope: !13013, inlinedAt: !15683)
!15799 = !DILocation(line: 150, column: 14, scope: !13023, inlinedAt: !15683)
!15800 = !DILocation(line: 150, column: 23, scope: !13023, inlinedAt: !15683)
!15801 = !DILocation(line: 150, column: 26, scope: !13023, inlinedAt: !15683)
!15802 = !DILocation(line: 150, column: 14, scope: !13009, inlinedAt: !15683)
!15803 = !DILocation(line: 156, column: 13, scope: !13028, inlinedAt: !15683)
!15804 = !DILocation(line: 156, column: 17, scope: !13028, inlinedAt: !15683)
!15805 = !DILocation(line: 156, column: 15, scope: !13028, inlinedAt: !15683)
!15806 = !DILocation(line: 156, column: 25, scope: !13028, inlinedAt: !15683)
!15807 = !DILocation(line: 156, column: 23, scope: !13028, inlinedAt: !15683)
!15808 = !DILocation(line: 156, column: 32, scope: !13028, inlinedAt: !15683)
!15809 = !DILocation(line: 156, column: 30, scope: !13028, inlinedAt: !15683)
!15810 = !DILocation(line: 156, column: 4, scope: !13028, inlinedAt: !15683)
!15811 = !DILocation(line: 161, column: 12, scope: !13037, inlinedAt: !15683)
!15812 = !DILocation(line: 161, column: 16, scope: !13037, inlinedAt: !15683)
!15813 = !DILocation(line: 161, column: 14, scope: !13037, inlinedAt: !15683)
!15814 = !DILocation(line: 161, column: 27, scope: !13037, inlinedAt: !15683)
!15815 = !DILocation(line: 161, column: 25, scope: !13037, inlinedAt: !15683)
!15816 = !DILocation(line: 161, column: 37, scope: !13037, inlinedAt: !15683)
!15817 = !DILocation(line: 161, column: 41, scope: !13037, inlinedAt: !15683)
!15818 = !DILocation(line: 161, column: 39, scope: !13037, inlinedAt: !15683)
!15819 = !DILocation(line: 161, column: 52, scope: !13037, inlinedAt: !15683)
!15820 = !DILocation(line: 161, column: 50, scope: !13037, inlinedAt: !15683)
!15821 = !DILocation(line: 161, column: 60, scope: !13037, inlinedAt: !15683)
!15822 = !DILocation(line: 161, column: 58, scope: !13037, inlinedAt: !15683)
!15823 = !DILocation(line: 161, column: 67, scope: !13037, inlinedAt: !15683)
!15824 = !DILocation(line: 161, column: 65, scope: !13037, inlinedAt: !15683)
!15825 = !DILocation(line: 161, column: 33, scope: !13037, inlinedAt: !15683)
!15826 = !DILocation(line: 161, column: 4, scope: !13037, inlinedAt: !15683)
!15827 = !DILocation(line: 164, column: 1, scope: !12873, inlinedAt: !15683)
!15828 = !DILocation(line: 574, column: 2, scope: !15678)
!15829 = distinct !DISubprogram(name: "k_ticks_to_us_floor64", scope: !8763, file: !8763, line: 1187, type: !12434, scopeLine: 1188, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1950, retainedNodes: !223)
!15830 = !DILocalVariable(name: "t", arg: 1, scope: !15829, file: !8763, line: 1187, type: !1940)
!15831 = !DILocation(line: 1187, column: 70, scope: !15829)
!15832 = !DILocation(line: 1190, column: 17, scope: !15829)
!15833 = !DILocation(line: 102, column: 63, scope: !12873, inlinedAt: !15834)
!15834 = distinct !DILocation(line: 1190, column: 9, scope: !15829)
!15835 = !DILocation(line: 102, column: 75, scope: !12873, inlinedAt: !15834)
!15836 = !DILocation(line: 103, column: 18, scope: !12873, inlinedAt: !15834)
!15837 = !DILocation(line: 103, column: 30, scope: !12873, inlinedAt: !15834)
!15838 = !DILocation(line: 104, column: 14, scope: !12873, inlinedAt: !15834)
!15839 = !DILocation(line: 104, column: 29, scope: !12873, inlinedAt: !15834)
!15840 = !DILocation(line: 105, column: 14, scope: !12873, inlinedAt: !15834)
!15841 = !DILocation(line: 107, column: 7, scope: !12873, inlinedAt: !15834)
!15842 = !DILocation(line: 107, column: 19, scope: !12873, inlinedAt: !15834)
!15843 = !DILocation(line: 107, column: 28, scope: !12873, inlinedAt: !15834)
!15844 = !DILocation(line: 108, column: 4, scope: !12873, inlinedAt: !15834)
!15845 = !DILocation(line: 108, column: 12, scope: !12873, inlinedAt: !15834)
!15846 = !DILocation(line: 108, column: 10, scope: !12873, inlinedAt: !15834)
!15847 = !DILocation(line: 108, column: 21, scope: !12873, inlinedAt: !15834)
!15848 = !DILocation(line: 108, column: 26, scope: !12873, inlinedAt: !15834)
!15849 = !DILocation(line: 108, column: 34, scope: !12873, inlinedAt: !15834)
!15850 = !DILocation(line: 108, column: 32, scope: !12873, inlinedAt: !15834)
!15851 = !DILocation(line: 108, column: 43, scope: !12873, inlinedAt: !15834)
!15852 = !DILocation(line: 0, scope: !12873, inlinedAt: !15834)
!15853 = !DILocation(line: 109, column: 7, scope: !12873, inlinedAt: !15834)
!15854 = !DILocation(line: 109, column: 19, scope: !12873, inlinedAt: !15834)
!15855 = !DILocation(line: 109, column: 28, scope: !12873, inlinedAt: !15834)
!15856 = !DILocation(line: 110, column: 4, scope: !12873, inlinedAt: !15834)
!15857 = !DILocation(line: 110, column: 14, scope: !12873, inlinedAt: !15834)
!15858 = !DILocation(line: 110, column: 12, scope: !12873, inlinedAt: !15834)
!15859 = !DILocation(line: 110, column: 21, scope: !12873, inlinedAt: !15834)
!15860 = !DILocation(line: 110, column: 26, scope: !12873, inlinedAt: !15834)
!15861 = !DILocation(line: 110, column: 36, scope: !12873, inlinedAt: !15834)
!15862 = !DILocation(line: 110, column: 34, scope: !12873, inlinedAt: !15834)
!15863 = !DILocation(line: 110, column: 43, scope: !12873, inlinedAt: !15834)
!15864 = !DILocation(line: 112, column: 6, scope: !12914, inlinedAt: !15834)
!15865 = !DILocation(line: 112, column: 17, scope: !12914, inlinedAt: !15834)
!15866 = !DILocation(line: 112, column: 14, scope: !12914, inlinedAt: !15834)
!15867 = !DILocation(line: 112, column: 6, scope: !12873, inlinedAt: !15834)
!15868 = !DILocation(line: 113, column: 10, scope: !12919, inlinedAt: !15834)
!15869 = !DILocation(line: 113, column: 32, scope: !12919, inlinedAt: !15834)
!15870 = !DILocation(line: 113, column: 22, scope: !12919, inlinedAt: !15834)
!15871 = !DILocation(line: 113, column: 21, scope: !12919, inlinedAt: !15834)
!15872 = !DILocation(line: 113, column: 37, scope: !12919, inlinedAt: !15834)
!15873 = !DILocation(line: 113, column: 3, scope: !12919, inlinedAt: !15834)
!15874 = !DILocation(line: 116, column: 11, scope: !12873, inlinedAt: !15834)
!15875 = !DILocation(line: 118, column: 7, scope: !12928, inlinedAt: !15834)
!15876 = !DILocation(line: 118, column: 6, scope: !12873, inlinedAt: !15834)
!15877 = !DILocation(line: 119, column: 12, scope: !12931, inlinedAt: !15834)
!15878 = !DILocation(line: 119, column: 23, scope: !12931, inlinedAt: !15834)
!15879 = !DILocation(line: 119, column: 36, scope: !12931, inlinedAt: !15834)
!15880 = !DILocation(line: 119, column: 46, scope: !12931, inlinedAt: !15834)
!15881 = !DILocation(line: 119, column: 44, scope: !12931, inlinedAt: !15834)
!15882 = !DILocation(line: 119, column: 55, scope: !12931, inlinedAt: !15834)
!15883 = !DILocation(line: 121, column: 7, scope: !12939, inlinedAt: !15834)
!15884 = !DILocation(line: 121, column: 7, scope: !12931, inlinedAt: !15834)
!15885 = !DILocation(line: 122, column: 10, scope: !12942, inlinedAt: !15834)
!15886 = !DILocation(line: 122, column: 19, scope: !12942, inlinedAt: !15834)
!15887 = !DILocation(line: 122, column: 8, scope: !12942, inlinedAt: !15834)
!15888 = !DILocation(line: 123, column: 3, scope: !12942, inlinedAt: !15834)
!15889 = !DILocation(line: 124, column: 7, scope: !12947, inlinedAt: !15834)
!15890 = !DILocation(line: 124, column: 7, scope: !12931, inlinedAt: !15834)
!15891 = !DILocation(line: 125, column: 10, scope: !12950, inlinedAt: !15834)
!15892 = !DILocation(line: 125, column: 19, scope: !12950, inlinedAt: !15834)
!15893 = !DILocation(line: 125, column: 8, scope: !12950, inlinedAt: !15834)
!15894 = !DILocation(line: 126, column: 3, scope: !12950, inlinedAt: !15834)
!15895 = !DILocation(line: 127, column: 2, scope: !12931, inlinedAt: !15834)
!15896 = !DILocation(line: 134, column: 6, scope: !12956, inlinedAt: !15834)
!15897 = !DILocation(line: 134, column: 6, scope: !12873, inlinedAt: !15834)
!15898 = !DILocation(line: 135, column: 8, scope: !12959, inlinedAt: !15834)
!15899 = !DILocation(line: 135, column: 5, scope: !12959, inlinedAt: !15834)
!15900 = !DILocation(line: 136, column: 7, scope: !12962, inlinedAt: !15834)
!15901 = !DILocation(line: 136, column: 16, scope: !12962, inlinedAt: !15834)
!15902 = !DILocation(line: 136, column: 20, scope: !12962, inlinedAt: !15834)
!15903 = !DILocation(line: 136, column: 22, scope: !12962, inlinedAt: !15834)
!15904 = !DILocation(line: 136, column: 7, scope: !12959, inlinedAt: !15834)
!15905 = !DILocation(line: 137, column: 22, scope: !12968, inlinedAt: !15834)
!15906 = !DILocation(line: 137, column: 12, scope: !12968, inlinedAt: !15834)
!15907 = !DILocation(line: 137, column: 28, scope: !12968, inlinedAt: !15834)
!15908 = !DILocation(line: 137, column: 38, scope: !12968, inlinedAt: !15834)
!15909 = !DILocation(line: 137, column: 36, scope: !12968, inlinedAt: !15834)
!15910 = !DILocation(line: 137, column: 25, scope: !12968, inlinedAt: !15834)
!15911 = !DILocation(line: 137, column: 11, scope: !12968, inlinedAt: !15834)
!15912 = !DILocation(line: 137, column: 4, scope: !12968, inlinedAt: !15834)
!15913 = !DILocation(line: 139, column: 11, scope: !12977, inlinedAt: !15834)
!15914 = !DILocation(line: 139, column: 26, scope: !12977, inlinedAt: !15834)
!15915 = !DILocation(line: 139, column: 16, scope: !12977, inlinedAt: !15834)
!15916 = !DILocation(line: 139, column: 36, scope: !12977, inlinedAt: !15834)
!15917 = !DILocation(line: 139, column: 34, scope: !12977, inlinedAt: !15834)
!15918 = !DILocation(line: 139, column: 13, scope: !12977, inlinedAt: !15834)
!15919 = !DILocation(line: 139, column: 4, scope: !12977, inlinedAt: !15834)
!15920 = !DILocation(line: 141, column: 13, scope: !12985, inlinedAt: !15834)
!15921 = !DILocation(line: 141, column: 13, scope: !12956, inlinedAt: !15834)
!15922 = !DILocation(line: 142, column: 7, scope: !12988, inlinedAt: !15834)
!15923 = !DILocation(line: 142, column: 7, scope: !12989, inlinedAt: !15834)
!15924 = !DILocation(line: 143, column: 22, scope: !12992, inlinedAt: !15834)
!15925 = !DILocation(line: 143, column: 12, scope: !12992, inlinedAt: !15834)
!15926 = !DILocation(line: 143, column: 28, scope: !12992, inlinedAt: !15834)
!15927 = !DILocation(line: 143, column: 36, scope: !12992, inlinedAt: !15834)
!15928 = !DILocation(line: 143, column: 34, scope: !12992, inlinedAt: !15834)
!15929 = !DILocation(line: 143, column: 25, scope: !12992, inlinedAt: !15834)
!15930 = !DILocation(line: 143, column: 11, scope: !12992, inlinedAt: !15834)
!15931 = !DILocation(line: 143, column: 4, scope: !12992, inlinedAt: !15834)
!15932 = !DILocation(line: 145, column: 11, scope: !13001, inlinedAt: !15834)
!15933 = !DILocation(line: 145, column: 26, scope: !13001, inlinedAt: !15834)
!15934 = !DILocation(line: 145, column: 16, scope: !13001, inlinedAt: !15834)
!15935 = !DILocation(line: 145, column: 34, scope: !13001, inlinedAt: !15834)
!15936 = !DILocation(line: 145, column: 32, scope: !13001, inlinedAt: !15834)
!15937 = !DILocation(line: 145, column: 13, scope: !13001, inlinedAt: !15834)
!15938 = !DILocation(line: 145, column: 4, scope: !13001, inlinedAt: !15834)
!15939 = !DILocation(line: 148, column: 7, scope: !13009, inlinedAt: !15834)
!15940 = !DILocation(line: 148, column: 7, scope: !13010, inlinedAt: !15834)
!15941 = !DILocation(line: 149, column: 23, scope: !13013, inlinedAt: !15834)
!15942 = !DILocation(line: 149, column: 27, scope: !13013, inlinedAt: !15834)
!15943 = !DILocation(line: 149, column: 25, scope: !13013, inlinedAt: !15834)
!15944 = !DILocation(line: 149, column: 35, scope: !13013, inlinedAt: !15834)
!15945 = !DILocation(line: 149, column: 33, scope: !13013, inlinedAt: !15834)
!15946 = !DILocation(line: 149, column: 42, scope: !13013, inlinedAt: !15834)
!15947 = !DILocation(line: 149, column: 40, scope: !13013, inlinedAt: !15834)
!15948 = !DILocation(line: 149, column: 11, scope: !13013, inlinedAt: !15834)
!15949 = !DILocation(line: 149, column: 4, scope: !13013, inlinedAt: !15834)
!15950 = !DILocation(line: 150, column: 14, scope: !13023, inlinedAt: !15834)
!15951 = !DILocation(line: 150, column: 23, scope: !13023, inlinedAt: !15834)
!15952 = !DILocation(line: 150, column: 26, scope: !13023, inlinedAt: !15834)
!15953 = !DILocation(line: 150, column: 14, scope: !13009, inlinedAt: !15834)
!15954 = !DILocation(line: 156, column: 13, scope: !13028, inlinedAt: !15834)
!15955 = !DILocation(line: 156, column: 17, scope: !13028, inlinedAt: !15834)
!15956 = !DILocation(line: 156, column: 15, scope: !13028, inlinedAt: !15834)
!15957 = !DILocation(line: 156, column: 25, scope: !13028, inlinedAt: !15834)
!15958 = !DILocation(line: 156, column: 23, scope: !13028, inlinedAt: !15834)
!15959 = !DILocation(line: 156, column: 32, scope: !13028, inlinedAt: !15834)
!15960 = !DILocation(line: 156, column: 30, scope: !13028, inlinedAt: !15834)
!15961 = !DILocation(line: 156, column: 4, scope: !13028, inlinedAt: !15834)
!15962 = !DILocation(line: 161, column: 12, scope: !13037, inlinedAt: !15834)
!15963 = !DILocation(line: 161, column: 16, scope: !13037, inlinedAt: !15834)
!15964 = !DILocation(line: 161, column: 14, scope: !13037, inlinedAt: !15834)
!15965 = !DILocation(line: 161, column: 27, scope: !13037, inlinedAt: !15834)
!15966 = !DILocation(line: 161, column: 25, scope: !13037, inlinedAt: !15834)
!15967 = !DILocation(line: 161, column: 37, scope: !13037, inlinedAt: !15834)
!15968 = !DILocation(line: 161, column: 41, scope: !13037, inlinedAt: !15834)
!15969 = !DILocation(line: 161, column: 39, scope: !13037, inlinedAt: !15834)
!15970 = !DILocation(line: 161, column: 52, scope: !13037, inlinedAt: !15834)
!15971 = !DILocation(line: 161, column: 50, scope: !13037, inlinedAt: !15834)
!15972 = !DILocation(line: 161, column: 60, scope: !13037, inlinedAt: !15834)
!15973 = !DILocation(line: 161, column: 58, scope: !13037, inlinedAt: !15834)
!15974 = !DILocation(line: 161, column: 67, scope: !13037, inlinedAt: !15834)
!15975 = !DILocation(line: 161, column: 65, scope: !13037, inlinedAt: !15834)
!15976 = !DILocation(line: 161, column: 33, scope: !13037, inlinedAt: !15834)
!15977 = !DILocation(line: 161, column: 4, scope: !13037, inlinedAt: !15834)
!15978 = !DILocation(line: 164, column: 1, scope: !12873, inlinedAt: !15834)
!15979 = !DILocation(line: 1190, column: 2, scope: !15829)
!15980 = distinct !DISubprogram(name: "z_impl_k_wakeup", scope: !2052, file: !2052, line: 1517, type: !15405, scopeLine: 1518, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1950, retainedNodes: !223)
!15981 = !DILocalVariable(name: "thread", arg: 1, scope: !15980, file: !2052, line: 1517, type: !15234)
!15982 = !DILocation(line: 1517, column: 30, scope: !15980)
!15983 = !DILocation(line: 1519, column: 2, scope: !15980)
!15984 = !DILocation(line: 1519, column: 2, scope: !15985)
!15985 = distinct !DILexicalBlock(scope: !15980, file: !2052, line: 1519, column: 2)
!15986 = !DILocation(line: 1521, column: 26, scope: !15987)
!15987 = distinct !DILexicalBlock(scope: !15980, file: !2052, line: 1521, column: 6)
!15988 = !DILocation(line: 1521, column: 6, scope: !15987)
!15989 = !DILocation(line: 1521, column: 6, scope: !15980)
!15990 = !DILocation(line: 1522, column: 3, scope: !15991)
!15991 = distinct !DILexicalBlock(scope: !15987, file: !2052, line: 1521, column: 35)
!15992 = !DILocation(line: 1525, column: 29, scope: !15993)
!15993 = distinct !DILexicalBlock(scope: !15980, file: !2052, line: 1525, column: 6)
!15994 = !DILocation(line: 1525, column: 6, scope: !15993)
!15995 = !DILocation(line: 1525, column: 37, scope: !15993)
!15996 = !DILocation(line: 1525, column: 6, scope: !15980)
!15997 = !DILocation(line: 1527, column: 7, scope: !15998)
!15998 = distinct !DILexicalBlock(scope: !15999, file: !2052, line: 1527, column: 7)
!15999 = distinct !DILexicalBlock(scope: !15993, file: !2052, line: 1525, column: 42)
!16000 = !DILocation(line: 1527, column: 15, scope: !15998)
!16001 = !DILocation(line: 1527, column: 20, scope: !15998)
!16002 = !DILocation(line: 1527, column: 33, scope: !15998)
!16003 = !DILocation(line: 1527, column: 7, scope: !15999)
!16004 = !DILocation(line: 1528, column: 4, scope: !16005)
!16005 = distinct !DILexicalBlock(scope: !15998, file: !2052, line: 1527, column: 55)
!16006 = !DILocation(line: 1530, column: 2, scope: !15999)
!16007 = !DILocation(line: 1532, column: 33, scope: !15980)
!16008 = !DILocation(line: 1532, column: 2, scope: !15980)
!16009 = !DILocation(line: 1533, column: 17, scope: !15980)
!16010 = !DILocation(line: 1533, column: 2, scope: !15980)
!16011 = !DILocation(line: 1535, column: 2, scope: !15980)
!16012 = !DILocation(line: 1029, column: 12, scope: !13919, inlinedAt: !16013)
!16013 = distinct !DILocation(line: 48, column: 10, scope: !13922, inlinedAt: !16014)
!16014 = distinct !DILocation(line: 1537, column: 7, scope: !16015)
!16015 = distinct !DILexicalBlock(scope: !15980, file: !2052, line: 1537, column: 6)
!16016 = !DILocation(line: 1031, column: 3, scope: !13919, inlinedAt: !16013)
!16017 = !DILocation(line: 1032, column: 10, scope: !13919, inlinedAt: !16013)
!16018 = !DILocation(line: 48, column: 9, scope: !13922, inlinedAt: !16014)
!16019 = !DILocation(line: 1537, column: 6, scope: !15980)
!16020 = !DILocation(line: 1538, column: 3, scope: !16021)
!16021 = distinct !DILexicalBlock(scope: !16015, file: !2052, line: 1537, column: 25)
!16022 = !DILocation(line: 1539, column: 2, scope: !16021)
!16023 = !DILocation(line: 1540, column: 1, scope: !15980)
!16024 = distinct !DISubprogram(name: "z_is_thread_pending", scope: !11628, file: !11628, line: 101, type: !13128, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1950, retainedNodes: !223)
!16025 = !DILocalVariable(name: "thread", arg: 1, scope: !16024, file: !11628, line: 101, type: !1953)
!16026 = !DILocation(line: 101, column: 57, scope: !16024)
!16027 = !DILocation(line: 103, column: 10, scope: !16024)
!16028 = !DILocation(line: 103, column: 18, scope: !16024)
!16029 = !DILocation(line: 103, column: 23, scope: !16024)
!16030 = !DILocation(line: 103, column: 36, scope: !16024)
!16031 = !DILocation(line: 103, column: 55, scope: !16024)
!16032 = !DILocation(line: 103, column: 2, scope: !16024)
!16033 = distinct !DISubprogram(name: "z_impl_z_current_get", scope: !2052, file: !2052, line: 1567, type: !16034, scopeLine: 1568, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1950, retainedNodes: !223)
!16034 = !DISubroutineType(types: !16035)
!16035 = !{!15234}
!16036 = !DILocalVariable(name: "ret", scope: !16033, file: !2052, line: 1577, type: !15234)
!16037 = !DILocation(line: 1577, column: 10, scope: !16033)
!16038 = !DILocation(line: 1577, column: 30, scope: !16033)
!16039 = !DILocation(line: 1582, column: 9, scope: !16033)
!16040 = !DILocation(line: 1582, column: 2, scope: !16033)
!16041 = distinct !DISubprogram(name: "z_impl_k_is_preempt_thread", scope: !2052, file: !2052, line: 1593, type: !2844, scopeLine: 1594, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1950, retainedNodes: !223)
!16042 = !DILocation(line: 1029, column: 12, scope: !13919, inlinedAt: !16043)
!16043 = distinct !DILocation(line: 48, column: 10, scope: !13922, inlinedAt: !16044)
!16044 = distinct !DILocation(line: 1595, column: 10, scope: !16041)
!16045 = !DILocation(line: 1031, column: 3, scope: !13919, inlinedAt: !16043)
!16046 = !DILocation(line: 1032, column: 10, scope: !13919, inlinedAt: !16043)
!16047 = !DILocation(line: 48, column: 9, scope: !13922, inlinedAt: !16044)
!16048 = !DILocation(line: 1595, column: 27, scope: !16041)
!16049 = !DILocation(line: 1595, column: 41, scope: !16041)
!16050 = !DILocation(line: 1595, column: 30, scope: !16041)
!16051 = !DILocation(line: 0, scope: !16041)
!16052 = !DILocation(line: 1595, column: 2, scope: !16041)
!16053 = distinct !DISubprogram(name: "z_thread_abort", scope: !2052, file: !2052, line: 1725, type: !12759, scopeLine: 1726, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1950, retainedNodes: !223)
!16054 = !DILocalVariable(name: "thread", arg: 1, scope: !16053, file: !2052, line: 1725, type: !1953)
!16055 = !DILocation(line: 1725, column: 38, scope: !16053)
!16056 = !DILocalVariable(name: "key", scope: !16053, file: !2052, line: 1727, type: !12798)
!16057 = !DILocation(line: 1727, column: 19, scope: !16053)
!16058 = !DILocation(line: 136, column: 70, scope: !12805, inlinedAt: !16059)
!16059 = distinct !DILocation(line: 1727, column: 25, scope: !16053)
!16060 = !DILocation(line: 138, column: 2, scope: !12805, inlinedAt: !16059)
!16061 = !DILocation(line: 139, column: 19, scope: !12805, inlinedAt: !16059)
!16062 = !DILocation(line: 44, column: 15, scope: !12815, inlinedAt: !16063)
!16063 = distinct !DILocation(line: 145, column: 10, scope: !12805, inlinedAt: !16059)
!16064 = !DILocation(line: 53, column: 15, scope: !12815, inlinedAt: !16063)
!16065 = !DILocation(line: 55, column: 2, scope: !12815, inlinedAt: !16063)
!16066 = !DILocation(line: 76, column: 9, scope: !12815, inlinedAt: !16063)
!16067 = !DILocation(line: 145, column: 4, scope: !12805, inlinedAt: !16059)
!16068 = !DILocation(line: 145, column: 8, scope: !12805, inlinedAt: !16059)
!16069 = !DILocation(line: 165, column: 2, scope: !12805, inlinedAt: !16059)
!16070 = !DILocation(line: 1727, column: 25, scope: !16053)
!16071 = !DILocation(line: 1729, column: 7, scope: !16072)
!16072 = distinct !DILexicalBlock(scope: !16053, file: !2052, line: 1729, column: 6)
!16073 = !DILocation(line: 1729, column: 15, scope: !16072)
!16074 = !DILocation(line: 1729, column: 20, scope: !16072)
!16075 = !DILocation(line: 1729, column: 33, scope: !16072)
!16076 = !DILocation(line: 1729, column: 48, scope: !16072)
!16077 = !DILocation(line: 1729, column: 6, scope: !16053)
!16078 = !DILocation(line: 1730, column: 3, scope: !16079)
!16079 = distinct !DILexicalBlock(scope: !16072, file: !2052, line: 1729, column: 54)
!16080 = !DILocation(line: 189, column: 60, scope: !12847, inlinedAt: !16081)
!16081 = distinct !DILocation(line: 1730, column: 3, scope: !16079)
!16082 = !DILocation(line: 190, column: 23, scope: !12847, inlinedAt: !16081)
!16083 = !DILocation(line: 192, column: 2, scope: !12847, inlinedAt: !16081)
!16084 = !DILocation(line: 215, column: 22, scope: !12847, inlinedAt: !16081)
!16085 = !DILocation(line: 84, column: 56, scope: !12857, inlinedAt: !16086)
!16086 = distinct !DILocation(line: 215, column: 2, scope: !12847, inlinedAt: !16081)
!16087 = !DILocation(line: 98, column: 12, scope: !12857, inlinedAt: !16086)
!16088 = !DILocation(line: 95, column: 2, scope: !12857, inlinedAt: !16086)
!16089 = !DILocation(line: 1732, column: 3, scope: !16079)
!16090 = !DILocation(line: 1732, column: 3, scope: !16091)
!16091 = distinct !DILexicalBlock(scope: !16079, file: !2052, line: 1732, column: 3)
!16092 = !{i64 2155440933, i64 2155440949, i64 2155440975, i64 2155441003, i64 2155441023}
!16093 = !DILocation(line: 1733, column: 3, scope: !16079)
!16094 = !DILocation(line: 1736, column: 7, scope: !16095)
!16095 = distinct !DILexicalBlock(scope: !16053, file: !2052, line: 1736, column: 6)
!16096 = !DILocation(line: 1736, column: 15, scope: !16095)
!16097 = !DILocation(line: 1736, column: 20, scope: !16095)
!16098 = !DILocation(line: 1736, column: 33, scope: !16095)
!16099 = !DILocation(line: 1736, column: 49, scope: !16095)
!16100 = !DILocation(line: 1736, column: 6, scope: !16053)
!16101 = !DILocation(line: 1737, column: 3, scope: !16102)
!16102 = distinct !DILexicalBlock(scope: !16095, file: !2052, line: 1736, column: 56)
!16103 = !DILocation(line: 189, column: 60, scope: !12847, inlinedAt: !16104)
!16104 = distinct !DILocation(line: 1737, column: 3, scope: !16102)
!16105 = !DILocation(line: 190, column: 23, scope: !12847, inlinedAt: !16104)
!16106 = !DILocation(line: 192, column: 2, scope: !12847, inlinedAt: !16104)
!16107 = !DILocation(line: 215, column: 22, scope: !12847, inlinedAt: !16104)
!16108 = !DILocation(line: 84, column: 56, scope: !12857, inlinedAt: !16109)
!16109 = distinct !DILocation(line: 215, column: 2, scope: !12847, inlinedAt: !16104)
!16110 = !DILocation(line: 98, column: 12, scope: !12857, inlinedAt: !16109)
!16111 = !DILocation(line: 95, column: 2, scope: !12857, inlinedAt: !16109)
!16112 = !DILocation(line: 1738, column: 3, scope: !16102)
!16113 = !DILocation(line: 1775, column: 13, scope: !16053)
!16114 = !DILocation(line: 1775, column: 2, scope: !16053)
!16115 = !DILocation(line: 1776, column: 6, scope: !16116)
!16116 = distinct !DILexicalBlock(scope: !16053, file: !2052, line: 1776, column: 6)
!16117 = !DILocation(line: 1776, column: 16, scope: !16116)
!16118 = !DILocation(line: 1776, column: 13, scope: !16116)
!16119 = !DILocation(line: 1776, column: 25, scope: !16116)
!16120 = !DILocation(line: 1029, column: 12, scope: !13919, inlinedAt: !16121)
!16121 = distinct !DILocation(line: 48, column: 10, scope: !13922, inlinedAt: !16122)
!16122 = distinct !DILocation(line: 1776, column: 29, scope: !16116)
!16123 = !DILocation(line: 1031, column: 3, scope: !13919, inlinedAt: !16121)
!16124 = !DILocation(line: 1032, column: 10, scope: !13919, inlinedAt: !16121)
!16125 = !DILocation(line: 48, column: 9, scope: !13922, inlinedAt: !16122)
!16126 = !DILocation(line: 1776, column: 6, scope: !16053)
!16127 = !DILocation(line: 1777, column: 3, scope: !16128)
!16128 = distinct !DILexicalBlock(scope: !16116, file: !2052, line: 1776, column: 47)
!16129 = !DILocation(line: 193, column: 52, scope: !13871, inlinedAt: !16130)
!16130 = distinct !DILocation(line: 1777, column: 3, scope: !16128)
!16131 = !DILocation(line: 193, column: 75, scope: !13871, inlinedAt: !16130)
!16132 = !DILocation(line: 195, column: 17, scope: !13871, inlinedAt: !16130)
!16133 = !DILocation(line: 221, column: 61, scope: !13880, inlinedAt: !16134)
!16134 = distinct !DILocation(line: 195, column: 2, scope: !13871, inlinedAt: !16130)
!16135 = !DILocation(line: 223, column: 2, scope: !13880, inlinedAt: !16134)
!16136 = !DILocation(line: 196, column: 28, scope: !13871, inlinedAt: !16130)
!16137 = !DILocation(line: 196, column: 9, scope: !13871, inlinedAt: !16130)
!16138 = !DILocation(line: 1779, column: 2, scope: !16128)
!16139 = !DILocation(line: 1780, column: 2, scope: !16053)
!16140 = !DILocation(line: 189, column: 60, scope: !12847, inlinedAt: !16141)
!16141 = distinct !DILocation(line: 1780, column: 2, scope: !16053)
!16142 = !DILocation(line: 190, column: 23, scope: !12847, inlinedAt: !16141)
!16143 = !DILocation(line: 192, column: 2, scope: !12847, inlinedAt: !16141)
!16144 = !DILocation(line: 215, column: 22, scope: !12847, inlinedAt: !16141)
!16145 = !DILocation(line: 84, column: 56, scope: !12857, inlinedAt: !16146)
!16146 = distinct !DILocation(line: 215, column: 2, scope: !12847, inlinedAt: !16141)
!16147 = !DILocation(line: 98, column: 12, scope: !12857, inlinedAt: !16146)
!16148 = !DILocation(line: 95, column: 2, scope: !12857, inlinedAt: !16146)
!16149 = !DILocation(line: 1781, column: 1, scope: !16053)
!16150 = distinct !DISubprogram(name: "end_thread", scope: !2052, file: !2052, line: 1690, type: !12759, scopeLine: 1691, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1950, retainedNodes: !223)
!16151 = !DILocalVariable(name: "thread", arg: 1, scope: !16150, file: !2052, line: 1690, type: !1953)
!16152 = !DILocation(line: 1690, column: 41, scope: !16150)
!16153 = !DILocation(line: 1695, column: 7, scope: !16154)
!16154 = distinct !DILexicalBlock(scope: !16150, file: !2052, line: 1695, column: 6)
!16155 = !DILocation(line: 1695, column: 15, scope: !16154)
!16156 = !DILocation(line: 1695, column: 20, scope: !16154)
!16157 = !DILocation(line: 1695, column: 33, scope: !16154)
!16158 = !DILocation(line: 1695, column: 49, scope: !16154)
!16159 = !DILocation(line: 1695, column: 6, scope: !16150)
!16160 = !DILocation(line: 1696, column: 3, scope: !16161)
!16161 = distinct !DILexicalBlock(scope: !16154, file: !2052, line: 1695, column: 56)
!16162 = !DILocation(line: 1696, column: 11, scope: !16161)
!16163 = !DILocation(line: 1696, column: 16, scope: !16161)
!16164 = !DILocation(line: 1696, column: 29, scope: !16161)
!16165 = !DILocation(line: 1697, column: 3, scope: !16161)
!16166 = !DILocation(line: 1697, column: 11, scope: !16161)
!16167 = !DILocation(line: 1697, column: 16, scope: !16161)
!16168 = !DILocation(line: 1697, column: 29, scope: !16161)
!16169 = !DILocation(line: 1698, column: 26, scope: !16170)
!16170 = distinct !DILexicalBlock(scope: !16161, file: !2052, line: 1698, column: 7)
!16171 = !DILocation(line: 1698, column: 7, scope: !16170)
!16172 = !DILocation(line: 1698, column: 7, scope: !16161)
!16173 = !DILocation(line: 1699, column: 19, scope: !16174)
!16174 = distinct !DILexicalBlock(scope: !16170, file: !2052, line: 1698, column: 35)
!16175 = !DILocation(line: 264, column: 59, scope: !13194, inlinedAt: !16176)
!16176 = distinct !DILocation(line: 1699, column: 4, scope: !16174)
!16177 = !DILocation(line: 266, column: 2, scope: !13194, inlinedAt: !16176)
!16178 = !DILocation(line: 266, column: 10, scope: !13194, inlinedAt: !16176)
!16179 = !DILocation(line: 266, column: 15, scope: !13194, inlinedAt: !16176)
!16180 = !DILocation(line: 266, column: 28, scope: !13194, inlinedAt: !16176)
!16181 = !DILocation(line: 267, column: 26, scope: !13202, inlinedAt: !16176)
!16182 = !DILocation(line: 267, column: 6, scope: !13202, inlinedAt: !16176)
!16183 = !DILocation(line: 267, column: 6, scope: !13194, inlinedAt: !16176)
!16184 = !DILocation(line: 268, column: 15, scope: !13206, inlinedAt: !16176)
!16185 = !DILocation(line: 232, column: 56, scope: !13208, inlinedAt: !16186)
!16186 = distinct !DILocation(line: 268, column: 3, scope: !13206, inlinedAt: !16176)
!16187 = !DILocation(line: 234, column: 31, scope: !13208, inlinedAt: !16186)
!16188 = !DILocation(line: 199, column: 57, scope: !13213, inlinedAt: !16189)
!16189 = distinct !DILocation(line: 234, column: 19, scope: !13208, inlinedAt: !16186)
!16190 = !DILocation(line: 234, column: 19, scope: !13208, inlinedAt: !16186)
!16191 = !DILocation(line: 234, column: 40, scope: !13208, inlinedAt: !16186)
!16192 = !DILocation(line: 234, column: 2, scope: !13208, inlinedAt: !16186)
!16193 = !DILocation(line: 269, column: 2, scope: !13206, inlinedAt: !16176)
!16194 = !DILocation(line: 1700, column: 3, scope: !16174)
!16195 = !DILocation(line: 1701, column: 7, scope: !16196)
!16196 = distinct !DILexicalBlock(scope: !16161, file: !2052, line: 1701, column: 7)
!16197 = !DILocation(line: 1701, column: 15, scope: !16196)
!16198 = !DILocation(line: 1701, column: 20, scope: !16196)
!16199 = !DILocation(line: 1701, column: 30, scope: !16196)
!16200 = !DILocation(line: 1701, column: 7, scope: !16161)
!16201 = !DILocation(line: 1702, column: 29, scope: !16202)
!16202 = distinct !DILexicalBlock(scope: !16196, file: !2052, line: 1701, column: 39)
!16203 = !DILocation(line: 1702, column: 4, scope: !16202)
!16204 = !DILocation(line: 1703, column: 3, scope: !16202)
!16205 = !DILocation(line: 1704, column: 32, scope: !16161)
!16206 = !DILocation(line: 1704, column: 9, scope: !16161)
!16207 = !DILocation(line: 1705, column: 15, scope: !16161)
!16208 = !DILocation(line: 1705, column: 23, scope: !16161)
!16209 = !DILocation(line: 1705, column: 3, scope: !16161)
!16210 = !DILocation(line: 1706, column: 3, scope: !16161)
!16211 = !DILocation(line: 1708, column: 3, scope: !16161)
!16212 = !DILocation(line: 1708, column: 3, scope: !16213)
!16213 = distinct !DILexicalBlock(scope: !16161, file: !2052, line: 1708, column: 3)
!16214 = !DILocation(line: 1710, column: 3, scope: !16161)
!16215 = !DILocation(line: 1710, column: 3, scope: !16216)
!16216 = distinct !DILexicalBlock(scope: !16161, file: !2052, line: 1710, column: 3)
!16217 = !DILocation(line: 1722, column: 2, scope: !16161)
!16218 = !DILocation(line: 1723, column: 1, scope: !16150)
!16219 = distinct !DISubprogram(name: "unpend_all", scope: !2052, file: !2052, line: 1674, type: !16220, scopeLine: 1675, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1950, retainedNodes: !223)
!16220 = !DISubroutineType(types: !16221)
!16221 = !{null, !1984}
!16222 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16219, file: !2052, line: 1674, type: !1984)
!16223 = !DILocation(line: 1674, column: 42, scope: !16219)
!16224 = !DILocalVariable(name: "thread", scope: !16219, file: !2052, line: 1676, type: !1953)
!16225 = !DILocation(line: 1676, column: 19, scope: !16219)
!16226 = !DILocation(line: 1678, column: 2, scope: !16219)
!16227 = !DILocation(line: 1678, column: 32, scope: !16219)
!16228 = !DILocation(line: 1678, column: 19, scope: !16219)
!16229 = !DILocation(line: 1678, column: 17, scope: !16219)
!16230 = !DILocation(line: 1678, column: 41, scope: !16219)
!16231 = !DILocation(line: 1679, column: 28, scope: !16232)
!16232 = distinct !DILexicalBlock(scope: !16219, file: !2052, line: 1678, column: 50)
!16233 = !DILocation(line: 1679, column: 3, scope: !16232)
!16234 = !DILocation(line: 1680, column: 32, scope: !16232)
!16235 = !DILocation(line: 1680, column: 9, scope: !16232)
!16236 = !DILocation(line: 1681, column: 32, scope: !16232)
!16237 = !DILocalVariable(name: "thread", arg: 1, scope: !16238, file: !11647, line: 65, type: !1953)
!16238 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !11647, file: !11647, line: 65, type: !16239, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1950, retainedNodes: !223)
!16239 = !DISubroutineType(types: !16240)
!16240 = !{null, !1953, !32}
!16241 = !DILocation(line: 65, column: 47, scope: !16238, inlinedAt: !16242)
!16242 = distinct !DILocation(line: 1681, column: 3, scope: !16232)
!16243 = !DILocalVariable(name: "value", arg: 2, scope: !16238, file: !11647, line: 65, type: !32)
!16244 = !DILocation(line: 65, column: 68, scope: !16238, inlinedAt: !16242)
!16245 = !DILocation(line: 67, column: 35, scope: !16238, inlinedAt: !16242)
!16246 = !DILocation(line: 67, column: 2, scope: !16238, inlinedAt: !16242)
!16247 = !DILocation(line: 67, column: 10, scope: !16238, inlinedAt: !16242)
!16248 = !DILocation(line: 67, column: 15, scope: !16238, inlinedAt: !16242)
!16249 = !DILocation(line: 67, column: 33, scope: !16238, inlinedAt: !16242)
!16250 = !DILocation(line: 1682, column: 16, scope: !16232)
!16251 = !DILocation(line: 1682, column: 3, scope: !16232)
!16252 = distinct !{!16252, !16226, !16253}
!16253 = !DILocation(line: 1683, column: 2, scope: !16219)
!16254 = !DILocation(line: 1684, column: 1, scope: !16219)
!16255 = distinct !DISubprogram(name: "z_impl_k_thread_join", scope: !2052, file: !2052, line: 1794, type: !16256, scopeLine: 1795, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1950, retainedNodes: !223)
!16256 = !DISubroutineType(types: !16257)
!16257 = !{!103, !1953, !14150}
!16258 = !DILocalVariable(name: "thread", arg: 1, scope: !16255, file: !2052, line: 1794, type: !1953)
!16259 = !DILocation(line: 1794, column: 43, scope: !16255)
!16260 = !DILocalVariable(name: "timeout", arg: 2, scope: !16255, file: !2052, line: 1794, type: !14150)
!16261 = !DILocation(line: 1794, column: 63, scope: !16255)
!16262 = !DILocalVariable(name: "key", scope: !16255, file: !2052, line: 1796, type: !12798)
!16263 = !DILocation(line: 1796, column: 19, scope: !16255)
!16264 = !DILocation(line: 136, column: 70, scope: !12805, inlinedAt: !16265)
!16265 = distinct !DILocation(line: 1796, column: 25, scope: !16255)
!16266 = !DILocation(line: 138, column: 2, scope: !12805, inlinedAt: !16265)
!16267 = !DILocation(line: 139, column: 19, scope: !12805, inlinedAt: !16265)
!16268 = !DILocation(line: 44, column: 15, scope: !12815, inlinedAt: !16269)
!16269 = distinct !DILocation(line: 145, column: 10, scope: !12805, inlinedAt: !16265)
!16270 = !DILocation(line: 53, column: 15, scope: !12815, inlinedAt: !16269)
!16271 = !DILocation(line: 55, column: 2, scope: !12815, inlinedAt: !16269)
!16272 = !DILocation(line: 76, column: 9, scope: !12815, inlinedAt: !16269)
!16273 = !DILocation(line: 145, column: 4, scope: !12805, inlinedAt: !16265)
!16274 = !DILocation(line: 145, column: 8, scope: !12805, inlinedAt: !16265)
!16275 = !DILocation(line: 165, column: 2, scope: !12805, inlinedAt: !16265)
!16276 = !DILocation(line: 1796, column: 25, scope: !16255)
!16277 = !DILocalVariable(name: "ret", scope: !16255, file: !2052, line: 1797, type: !103)
!16278 = !DILocation(line: 1797, column: 6, scope: !16255)
!16279 = !DILocation(line: 1799, column: 2, scope: !16255)
!16280 = !DILocation(line: 1799, column: 2, scope: !16281)
!16281 = distinct !DILexicalBlock(scope: !16255, file: !2052, line: 1799, column: 2)
!16282 = !DILocation(line: 1801, column: 7, scope: !16283)
!16283 = distinct !DILexicalBlock(scope: !16255, file: !2052, line: 1801, column: 6)
!16284 = !DILocation(line: 1801, column: 15, scope: !16283)
!16285 = !DILocation(line: 1801, column: 20, scope: !16283)
!16286 = !DILocation(line: 1801, column: 33, scope: !16283)
!16287 = !DILocation(line: 1801, column: 49, scope: !16283)
!16288 = !DILocation(line: 1801, column: 6, scope: !16255)
!16289 = !DILocation(line: 1802, column: 7, scope: !16290)
!16290 = distinct !DILexicalBlock(scope: !16283, file: !2052, line: 1801, column: 56)
!16291 = !DILocation(line: 1803, column: 2, scope: !16290)
!16292 = !DILocation(line: 1803, column: 13, scope: !16293)
!16293 = distinct !DILexicalBlock(scope: !16283, file: !2052, line: 1803, column: 13)
!16294 = !DILocation(line: 1803, column: 13, scope: !16283)
!16295 = !DILocation(line: 1804, column: 7, scope: !16296)
!16296 = distinct !DILexicalBlock(scope: !16293, file: !2052, line: 1803, column: 47)
!16297 = !DILocation(line: 1805, column: 2, scope: !16296)
!16298 = !DILocation(line: 1805, column: 14, scope: !16299)
!16299 = distinct !DILexicalBlock(scope: !16293, file: !2052, line: 1805, column: 13)
!16300 = !DILocation(line: 1805, column: 24, scope: !16299)
!16301 = !DILocation(line: 1805, column: 21, scope: !16299)
!16302 = !DILocation(line: 1805, column: 34, scope: !16299)
!16303 = !DILocation(line: 1806, column: 7, scope: !16299)
!16304 = !DILocation(line: 1806, column: 15, scope: !16299)
!16305 = !DILocation(line: 1806, column: 20, scope: !16299)
!16306 = !DILocation(line: 1806, column: 34, scope: !16299)
!16307 = !DILocation(line: 1806, column: 44, scope: !16299)
!16308 = !DILocation(line: 1806, column: 30, scope: !16299)
!16309 = !DILocation(line: 1805, column: 13, scope: !16293)
!16310 = !DILocation(line: 1807, column: 7, scope: !16311)
!16311 = distinct !DILexicalBlock(scope: !16299, file: !2052, line: 1806, column: 57)
!16312 = !DILocation(line: 1808, column: 2, scope: !16311)
!16313 = !DILocation(line: 1810, column: 23, scope: !16314)
!16314 = distinct !DILexicalBlock(scope: !16299, file: !2052, line: 1808, column: 9)
!16315 = !DILocation(line: 1810, column: 34, scope: !16314)
!16316 = !DILocation(line: 1810, column: 42, scope: !16314)
!16317 = !DILocation(line: 1810, column: 3, scope: !16314)
!16318 = !DILocation(line: 1811, column: 22, scope: !16314)
!16319 = !DILocation(line: 1811, column: 3, scope: !16314)
!16320 = !DILocation(line: 1813, column: 3, scope: !16314)
!16321 = !DILocation(line: 1813, column: 3, scope: !16322)
!16322 = distinct !DILexicalBlock(scope: !16314, file: !2052, line: 1813, column: 3)
!16323 = !DILocation(line: 1814, column: 9, scope: !16314)
!16324 = !DILocation(line: 193, column: 52, scope: !13871, inlinedAt: !16325)
!16325 = distinct !DILocation(line: 1814, column: 9, scope: !16314)
!16326 = !DILocation(line: 193, column: 75, scope: !13871, inlinedAt: !16325)
!16327 = !DILocation(line: 195, column: 17, scope: !13871, inlinedAt: !16325)
!16328 = !DILocation(line: 221, column: 61, scope: !13880, inlinedAt: !16329)
!16329 = distinct !DILocation(line: 195, column: 2, scope: !13871, inlinedAt: !16325)
!16330 = !DILocation(line: 223, column: 2, scope: !13880, inlinedAt: !16329)
!16331 = !DILocation(line: 196, column: 28, scope: !13871, inlinedAt: !16325)
!16332 = !DILocation(line: 196, column: 9, scope: !13871, inlinedAt: !16325)
!16333 = !DILocation(line: 1814, column: 7, scope: !16314)
!16334 = !DILocation(line: 1815, column: 3, scope: !16314)
!16335 = !DILocation(line: 1815, column: 3, scope: !16336)
!16336 = distinct !DILexicalBlock(scope: !16314, file: !2052, line: 1815, column: 3)
!16337 = !DILocation(line: 1817, column: 10, scope: !16314)
!16338 = !DILocation(line: 1817, column: 3, scope: !16314)
!16339 = !DILocation(line: 1820, column: 2, scope: !16255)
!16340 = !DILocation(line: 1820, column: 2, scope: !16341)
!16341 = distinct !DILexicalBlock(scope: !16255, file: !2052, line: 1820, column: 2)
!16342 = !DILocation(line: 1822, column: 2, scope: !16255)
!16343 = !DILocation(line: 189, column: 60, scope: !12847, inlinedAt: !16344)
!16344 = distinct !DILocation(line: 1822, column: 2, scope: !16255)
!16345 = !DILocation(line: 190, column: 23, scope: !12847, inlinedAt: !16344)
!16346 = !DILocation(line: 192, column: 2, scope: !12847, inlinedAt: !16344)
!16347 = !DILocation(line: 215, column: 22, scope: !12847, inlinedAt: !16344)
!16348 = !DILocation(line: 84, column: 56, scope: !12857, inlinedAt: !16349)
!16349 = distinct !DILocation(line: 215, column: 2, scope: !12847, inlinedAt: !16344)
!16350 = !DILocation(line: 98, column: 12, scope: !12857, inlinedAt: !16349)
!16351 = !DILocation(line: 95, column: 2, scope: !12857, inlinedAt: !16349)
!16352 = !DILocation(line: 1823, column: 9, scope: !16255)
!16353 = !DILocation(line: 1823, column: 2, scope: !16255)
!16354 = !DILocation(line: 1824, column: 1, scope: !16255)
!16355 = distinct !DISubprogram(name: "z_sched_wake", scope: !2052, file: !2052, line: 1882, type: !16356, scopeLine: 1883, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1950, retainedNodes: !223)
!16356 = !DISubroutineType(types: !16357)
!16357 = !{!743, !1984, !103, !102}
!16358 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16355, file: !2052, line: 1882, type: !1984)
!16359 = !DILocation(line: 1882, column: 30, scope: !16355)
!16360 = !DILocalVariable(name: "swap_retval", arg: 2, scope: !16355, file: !2052, line: 1882, type: !103)
!16361 = !DILocation(line: 1882, column: 42, scope: !16355)
!16362 = !DILocalVariable(name: "swap_data", arg: 3, scope: !16355, file: !2052, line: 1882, type: !102)
!16363 = !DILocation(line: 1882, column: 61, scope: !16355)
!16364 = !DILocalVariable(name: "thread", scope: !16355, file: !2052, line: 1884, type: !1953)
!16365 = !DILocation(line: 1884, column: 19, scope: !16355)
!16366 = !DILocalVariable(name: "ret", scope: !16355, file: !2052, line: 1885, type: !743)
!16367 = !DILocation(line: 1885, column: 7, scope: !16355)
!16368 = !DILocalVariable(name: "__i", scope: !16369, file: !2052, line: 1887, type: !12798)
!16369 = distinct !DILexicalBlock(scope: !16355, file: !2052, line: 1887, column: 2)
!16370 = !DILocation(line: 1887, column: 2, scope: !16369)
!16371 = !DILocalVariable(name: "__key", scope: !16369, file: !2052, line: 1887, type: !12798)
!16372 = !DILocation(line: 136, column: 70, scope: !12805, inlinedAt: !16373)
!16373 = distinct !DILocation(line: 1887, column: 2, scope: !16369)
!16374 = !DILocation(line: 138, column: 2, scope: !12805, inlinedAt: !16373)
!16375 = !DILocation(line: 139, column: 19, scope: !12805, inlinedAt: !16373)
!16376 = !DILocation(line: 44, column: 15, scope: !12815, inlinedAt: !16377)
!16377 = distinct !DILocation(line: 145, column: 10, scope: !12805, inlinedAt: !16373)
!16378 = !DILocation(line: 53, column: 15, scope: !12815, inlinedAt: !16377)
!16379 = !DILocation(line: 55, column: 2, scope: !12815, inlinedAt: !16377)
!16380 = !DILocation(line: 76, column: 9, scope: !12815, inlinedAt: !16377)
!16381 = !DILocation(line: 145, column: 4, scope: !12805, inlinedAt: !16373)
!16382 = !DILocation(line: 145, column: 8, scope: !12805, inlinedAt: !16373)
!16383 = !DILocation(line: 165, column: 2, scope: !12805, inlinedAt: !16373)
!16384 = !DILocation(line: 1887, column: 2, scope: !16385)
!16385 = distinct !DILexicalBlock(scope: !16369, file: !2052, line: 1887, column: 2)
!16386 = !DILocation(line: 1888, column: 29, scope: !16387)
!16387 = distinct !DILexicalBlock(scope: !16385, file: !2052, line: 1887, column: 26)
!16388 = !DILocation(line: 1888, column: 37, scope: !16387)
!16389 = !DILocation(line: 1888, column: 12, scope: !16387)
!16390 = !DILocation(line: 1888, column: 10, scope: !16387)
!16391 = !DILocation(line: 1890, column: 7, scope: !16392)
!16392 = distinct !DILexicalBlock(scope: !16387, file: !2052, line: 1890, column: 7)
!16393 = !DILocation(line: 1890, column: 14, scope: !16392)
!16394 = !DILocation(line: 1890, column: 7, scope: !16387)
!16395 = !DILocation(line: 1891, column: 40, scope: !16396)
!16396 = distinct !DILexicalBlock(scope: !16392, file: !2052, line: 1890, column: 23)
!16397 = !DILocation(line: 1892, column: 12, scope: !16396)
!16398 = !DILocation(line: 1893, column: 12, scope: !16396)
!16399 = !DILocalVariable(name: "thread", arg: 1, scope: !16400, file: !16401, line: 134, type: !1953)
!16400 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !16401, file: !16401, line: 134, type: !16402, scopeLine: 137, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1950, retainedNodes: !223)
!16401 = !DIFile(filename: "zephyr/kernel/include/kernel_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16402 = !DISubroutineType(types: !16403)
!16403 = !{null, !1953, !32, !102}
!16404 = !DILocation(line: 134, column: 54, scope: !16400, inlinedAt: !16405)
!16405 = distinct !DILocation(line: 1891, column: 4, scope: !16396)
!16406 = !DILocalVariable(name: "value", arg: 2, scope: !16400, file: !16401, line: 135, type: !32)
!16407 = !DILocation(line: 135, column: 21, scope: !16400, inlinedAt: !16405)
!16408 = !DILocalVariable(name: "data", arg: 3, scope: !16400, file: !16401, line: 136, type: !102)
!16409 = !DILocation(line: 136, column: 14, scope: !16400, inlinedAt: !16405)
!16410 = !DILocation(line: 138, column: 31, scope: !16400, inlinedAt: !16405)
!16411 = !DILocation(line: 138, column: 39, scope: !16400, inlinedAt: !16405)
!16412 = !DILocation(line: 65, column: 47, scope: !16238, inlinedAt: !16413)
!16413 = distinct !DILocation(line: 138, column: 2, scope: !16400, inlinedAt: !16405)
!16414 = !DILocation(line: 65, column: 68, scope: !16238, inlinedAt: !16413)
!16415 = !DILocation(line: 67, column: 35, scope: !16238, inlinedAt: !16413)
!16416 = !DILocation(line: 67, column: 2, scope: !16238, inlinedAt: !16413)
!16417 = !DILocation(line: 67, column: 10, scope: !16238, inlinedAt: !16413)
!16418 = !DILocation(line: 67, column: 15, scope: !16238, inlinedAt: !16413)
!16419 = !DILocation(line: 67, column: 33, scope: !16238, inlinedAt: !16413)
!16420 = !DILocation(line: 139, column: 27, scope: !16400, inlinedAt: !16405)
!16421 = !DILocation(line: 139, column: 2, scope: !16400, inlinedAt: !16405)
!16422 = !DILocation(line: 139, column: 10, scope: !16400, inlinedAt: !16405)
!16423 = !DILocation(line: 139, column: 15, scope: !16400, inlinedAt: !16405)
!16424 = !DILocation(line: 139, column: 25, scope: !16400, inlinedAt: !16405)
!16425 = !DILocation(line: 1894, column: 29, scope: !16396)
!16426 = !DILocation(line: 1894, column: 4, scope: !16396)
!16427 = !DILocation(line: 1895, column: 33, scope: !16396)
!16428 = !DILocation(line: 1895, column: 10, scope: !16396)
!16429 = !DILocation(line: 1896, column: 17, scope: !16396)
!16430 = !DILocation(line: 1896, column: 4, scope: !16396)
!16431 = !DILocation(line: 1897, column: 8, scope: !16396)
!16432 = !DILocation(line: 1898, column: 3, scope: !16396)
!16433 = !DILocation(line: 1899, column: 2, scope: !16387)
!16434 = !DILocation(line: 189, column: 60, scope: !12847, inlinedAt: !16435)
!16435 = distinct !DILocation(line: 1887, column: 2, scope: !16385)
!16436 = !DILocation(line: 190, column: 23, scope: !12847, inlinedAt: !16435)
!16437 = !DILocation(line: 192, column: 2, scope: !12847, inlinedAt: !16435)
!16438 = !DILocation(line: 215, column: 22, scope: !12847, inlinedAt: !16435)
!16439 = !DILocation(line: 84, column: 56, scope: !12857, inlinedAt: !16440)
!16440 = distinct !DILocation(line: 215, column: 2, scope: !12847, inlinedAt: !16435)
!16441 = !DILocation(line: 98, column: 12, scope: !12857, inlinedAt: !16440)
!16442 = !DILocation(line: 95, column: 2, scope: !12857, inlinedAt: !16440)
!16443 = distinct !{!16443, !16370, !16444}
!16444 = !DILocation(line: 1899, column: 2, scope: !16369)
!16445 = !DILocation(line: 1901, column: 9, scope: !16355)
!16446 = !DILocation(line: 1901, column: 2, scope: !16355)
!16447 = distinct !DISubprogram(name: "z_sched_wait", scope: !2052, file: !2052, line: 1904, type: !16448, scopeLine: 1906, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1950, retainedNodes: !223)
!16448 = !DISubroutineType(types: !16449)
!16449 = !{!103, !12808, !12798, !1984, !14150, !16450}
!16450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !102, size: 32)
!16451 = !DILocalVariable(name: "lock", arg: 1, scope: !16447, file: !2052, line: 1904, type: !12808)
!16452 = !DILocation(line: 1904, column: 37, scope: !16447)
!16453 = !DILocalVariable(name: "key", arg: 2, scope: !16447, file: !2052, line: 1904, type: !12798)
!16454 = !DILocation(line: 1904, column: 60, scope: !16447)
!16455 = !DILocalVariable(name: "wait_q", arg: 3, scope: !16447, file: !2052, line: 1905, type: !1984)
!16456 = !DILocation(line: 1905, column: 15, scope: !16447)
!16457 = !DILocalVariable(name: "timeout", arg: 4, scope: !16447, file: !2052, line: 1905, type: !14150)
!16458 = !DILocation(line: 1905, column: 35, scope: !16447)
!16459 = !DILocalVariable(name: "data", arg: 5, scope: !16447, file: !2052, line: 1905, type: !16450)
!16460 = !DILocation(line: 1905, column: 51, scope: !16447)
!16461 = !DILocalVariable(name: "ret", scope: !16447, file: !2052, line: 1907, type: !103)
!16462 = !DILocation(line: 1907, column: 6, scope: !16447)
!16463 = !DILocation(line: 1907, column: 24, scope: !16447)
!16464 = !DILocation(line: 1907, column: 35, scope: !16447)
!16465 = !DILocation(line: 1907, column: 12, scope: !16447)
!16466 = !DILocation(line: 1909, column: 6, scope: !16467)
!16467 = distinct !DILexicalBlock(scope: !16447, file: !2052, line: 1909, column: 6)
!16468 = !DILocation(line: 1909, column: 11, scope: !16467)
!16469 = !DILocation(line: 1909, column: 6, scope: !16447)
!16470 = !DILocation(line: 1910, column: 11, scope: !16471)
!16471 = distinct !DILexicalBlock(scope: !16467, file: !2052, line: 1909, column: 20)
!16472 = !DILocation(line: 1910, column: 21, scope: !16471)
!16473 = !DILocation(line: 1910, column: 26, scope: !16471)
!16474 = !DILocation(line: 1910, column: 4, scope: !16471)
!16475 = !DILocation(line: 1910, column: 9, scope: !16471)
!16476 = !DILocation(line: 1911, column: 2, scope: !16471)
!16477 = !DILocation(line: 1912, column: 9, scope: !16447)
!16478 = !DILocation(line: 1912, column: 2, scope: !16447)
!16479 = distinct !DISubprogram(name: "z_data_copy", scope: !16480, file: !16480, line: 22, type: !253, scopeLine: 23, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2710, retainedNodes: !223)
!16480 = !DIFile(filename: "zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16481 = !DILocation(line: 24, column: 2, scope: !16479)
!16482 = !DILocation(line: 27, column: 2, scope: !16479)
!16483 = !DILocation(line: 71, column: 1, scope: !16479)
!16484 = distinct !DISubprogram(name: "z_add_timeout", scope: !2089, file: !2089, line: 88, type: !16485, scopeLine: 90, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2059, retainedNodes: !223)
!16485 = !DISubroutineType(types: !16486)
!16486 = !{null, !2062, !2081, !16487}
!16487 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1443, line: 67, baseType: !16488)
!16488 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1443, line: 65, size: 64, elements: !16489)
!16489 = !{!16490}
!16490 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !16488, file: !1443, line: 66, baseType: !1442, size: 64)
!16491 = !DILocalVariable(name: "to", arg: 1, scope: !16484, file: !2089, line: 88, type: !2062)
!16492 = !DILocation(line: 88, column: 37, scope: !16484)
!16493 = !DILocalVariable(name: "fn", arg: 2, scope: !16484, file: !2089, line: 88, type: !2081)
!16494 = !DILocation(line: 88, column: 57, scope: !16484)
!16495 = !DILocalVariable(name: "timeout", arg: 3, scope: !16484, file: !2089, line: 89, type: !16487)
!16496 = !DILocation(line: 89, column: 18, scope: !16484)
!16497 = !DILocation(line: 91, column: 6, scope: !16498)
!16498 = distinct !DILexicalBlock(scope: !16484, file: !2089, line: 91, column: 6)
!16499 = !DILocation(line: 91, column: 6, scope: !16484)
!16500 = !DILocation(line: 92, column: 3, scope: !16501)
!16501 = distinct !DILexicalBlock(scope: !16498, file: !2089, line: 91, column: 40)
!16502 = !DILocation(line: 100, column: 11, scope: !16484)
!16503 = !DILocation(line: 100, column: 2, scope: !16484)
!16504 = !DILocation(line: 100, column: 6, scope: !16484)
!16505 = !DILocation(line: 100, column: 9, scope: !16484)
!16506 = !DILocalVariable(name: "__i", scope: !16507, file: !2089, line: 102, type: !16508)
!16507 = distinct !DILexicalBlock(scope: !16484, file: !2089, line: 102, column: 2)
!16508 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !222, line: 106, baseType: !16509)
!16509 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !222, line: 32, size: 32, elements: !16510)
!16510 = !{!16511}
!16511 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !16509, file: !222, line: 33, baseType: !103, size: 32)
!16512 = !DILocation(line: 102, column: 2, scope: !16507)
!16513 = !DILocalVariable(name: "__key", scope: !16507, file: !2089, line: 102, type: !16508)
!16514 = !DILocalVariable(name: "l", arg: 1, scope: !16515, file: !222, line: 136, type: !16518)
!16515 = distinct !DISubprogram(name: "k_spin_lock", scope: !222, file: !222, line: 136, type: !16516, scopeLine: 137, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2059, retainedNodes: !223)
!16516 = !DISubroutineType(types: !16517)
!16517 = !{!16508, !16518}
!16518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2095, size: 32)
!16519 = !DILocation(line: 136, column: 70, scope: !16515, inlinedAt: !16520)
!16520 = distinct !DILocation(line: 102, column: 2, scope: !16507)
!16521 = !DILocation(line: 138, column: 2, scope: !16515, inlinedAt: !16520)
!16522 = !DILocalVariable(name: "k", scope: !16515, file: !222, line: 139, type: !16508)
!16523 = !DILocation(line: 139, column: 19, scope: !16515, inlinedAt: !16520)
!16524 = !DILocalVariable(name: "key", scope: !16525, file: !5551, line: 44, type: !32)
!16525 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5551, file: !5551, line: 42, type: !7959, scopeLine: 43, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2059, retainedNodes: !223)
!16526 = !DILocation(line: 44, column: 15, scope: !16525, inlinedAt: !16527)
!16527 = distinct !DILocation(line: 145, column: 10, scope: !16515, inlinedAt: !16520)
!16528 = !DILocalVariable(name: "tmp", scope: !16525, file: !5551, line: 53, type: !32)
!16529 = !DILocation(line: 53, column: 15, scope: !16525, inlinedAt: !16527)
!16530 = !DILocation(line: 55, column: 2, scope: !16525, inlinedAt: !16527)
!16531 = !{i64 2846320}
!16532 = !DILocation(line: 76, column: 9, scope: !16525, inlinedAt: !16527)
!16533 = !DILocation(line: 145, column: 4, scope: !16515, inlinedAt: !16520)
!16534 = !DILocation(line: 145, column: 8, scope: !16515, inlinedAt: !16520)
!16535 = !DILocation(line: 165, column: 2, scope: !16515, inlinedAt: !16520)
!16536 = !DILocation(line: 102, column: 2, scope: !16537)
!16537 = distinct !DILexicalBlock(scope: !16507, file: !2089, line: 102, column: 2)
!16538 = !DILocalVariable(name: "t", scope: !16539, file: !2089, line: 103, type: !2062)
!16539 = distinct !DILexicalBlock(scope: !16537, file: !2089, line: 102, column: 24)
!16540 = !DILocation(line: 103, column: 20, scope: !16539)
!16541 = !DILocation(line: 106, column: 7, scope: !16542)
!16542 = distinct !DILexicalBlock(scope: !16539, file: !2089, line: 105, column: 7)
!16543 = !DILocation(line: 106, column: 33, scope: !16542)
!16544 = !DILocation(line: 105, column: 7, scope: !16539)
!16545 = !DILocalVariable(name: "ticks", scope: !16546, file: !2089, line: 107, type: !1442)
!16546 = distinct !DILexicalBlock(scope: !16542, file: !2089, line: 106, column: 39)
!16547 = !DILocation(line: 107, column: 14, scope: !16546)
!16548 = !DILocation(line: 107, column: 22, scope: !16546)
!16549 = !DILocation(line: 107, column: 50, scope: !16546)
!16550 = !DILocation(line: 107, column: 48, scope: !16546)
!16551 = !DILocation(line: 109, column: 17, scope: !16546)
!16552 = !DILocation(line: 109, column: 4, scope: !16546)
!16553 = !DILocation(line: 109, column: 8, scope: !16546)
!16554 = !DILocation(line: 109, column: 15, scope: !16546)
!16555 = !DILocation(line: 110, column: 3, scope: !16546)
!16556 = !DILocation(line: 111, column: 25, scope: !16557)
!16557 = distinct !DILexicalBlock(scope: !16542, file: !2089, line: 110, column: 10)
!16558 = !DILocation(line: 111, column: 31, scope: !16557)
!16559 = !DILocation(line: 111, column: 37, scope: !16557)
!16560 = !DILocation(line: 111, column: 35, scope: !16557)
!16561 = !DILocation(line: 111, column: 4, scope: !16557)
!16562 = !DILocation(line: 111, column: 8, scope: !16557)
!16563 = !DILocation(line: 111, column: 15, scope: !16557)
!16564 = !DILocation(line: 114, column: 12, scope: !16565)
!16565 = distinct !DILexicalBlock(scope: !16539, file: !2089, line: 114, column: 3)
!16566 = !DILocation(line: 114, column: 10, scope: !16565)
!16567 = !DILocation(line: 114, column: 8, scope: !16565)
!16568 = !DILocation(line: 114, column: 21, scope: !16569)
!16569 = distinct !DILexicalBlock(scope: !16565, file: !2089, line: 114, column: 3)
!16570 = !DILocation(line: 114, column: 23, scope: !16569)
!16571 = !DILocation(line: 114, column: 3, scope: !16565)
!16572 = !DILocation(line: 115, column: 8, scope: !16573)
!16573 = distinct !DILexicalBlock(scope: !16574, file: !2089, line: 115, column: 8)
!16574 = distinct !DILexicalBlock(scope: !16569, file: !2089, line: 114, column: 45)
!16575 = !DILocation(line: 115, column: 11, scope: !16573)
!16576 = !DILocation(line: 115, column: 20, scope: !16573)
!16577 = !DILocation(line: 115, column: 24, scope: !16573)
!16578 = !DILocation(line: 115, column: 18, scope: !16573)
!16579 = !DILocation(line: 115, column: 8, scope: !16574)
!16580 = !DILocation(line: 116, column: 18, scope: !16581)
!16581 = distinct !DILexicalBlock(scope: !16573, file: !2089, line: 115, column: 32)
!16582 = !DILocation(line: 116, column: 22, scope: !16581)
!16583 = !DILocation(line: 116, column: 5, scope: !16581)
!16584 = !DILocation(line: 116, column: 8, scope: !16581)
!16585 = !DILocation(line: 116, column: 15, scope: !16581)
!16586 = !DILocation(line: 117, column: 23, scope: !16581)
!16587 = !DILocation(line: 117, column: 26, scope: !16581)
!16588 = !DILocation(line: 117, column: 33, scope: !16581)
!16589 = !DILocation(line: 117, column: 37, scope: !16581)
!16590 = !DILocation(line: 117, column: 5, scope: !16581)
!16591 = !DILocation(line: 118, column: 5, scope: !16581)
!16592 = !DILocation(line: 120, column: 18, scope: !16574)
!16593 = !DILocation(line: 120, column: 21, scope: !16574)
!16594 = !DILocation(line: 120, column: 4, scope: !16574)
!16595 = !DILocation(line: 120, column: 8, scope: !16574)
!16596 = !DILocation(line: 120, column: 15, scope: !16574)
!16597 = !DILocation(line: 121, column: 3, scope: !16574)
!16598 = !DILocation(line: 114, column: 41, scope: !16569)
!16599 = !DILocation(line: 114, column: 36, scope: !16569)
!16600 = !DILocation(line: 114, column: 34, scope: !16569)
!16601 = !DILocation(line: 114, column: 3, scope: !16569)
!16602 = distinct !{!16602, !16571, !16603}
!16603 = !DILocation(line: 121, column: 3, scope: !16565)
!16604 = !DILocation(line: 123, column: 7, scope: !16605)
!16605 = distinct !DILexicalBlock(scope: !16539, file: !2089, line: 123, column: 7)
!16606 = !DILocation(line: 123, column: 9, scope: !16605)
!16607 = !DILocation(line: 123, column: 7, scope: !16539)
!16608 = !DILocation(line: 124, column: 37, scope: !16609)
!16609 = distinct !DILexicalBlock(scope: !16605, file: !2089, line: 123, column: 18)
!16610 = !DILocation(line: 124, column: 41, scope: !16609)
!16611 = !DILocation(line: 124, column: 4, scope: !16609)
!16612 = !DILocation(line: 125, column: 3, scope: !16609)
!16613 = !DILocation(line: 127, column: 7, scope: !16614)
!16614 = distinct !DILexicalBlock(scope: !16539, file: !2089, line: 127, column: 7)
!16615 = !DILocation(line: 127, column: 13, scope: !16614)
!16616 = !DILocation(line: 127, column: 10, scope: !16614)
!16617 = !DILocation(line: 127, column: 7, scope: !16539)
!16618 = !DILocalVariable(name: "next_time", scope: !16619, file: !2089, line: 137, type: !250)
!16619 = distinct !DILexicalBlock(scope: !16614, file: !2089, line: 127, column: 22)
!16620 = !DILocation(line: 137, column: 12, scope: !16619)
!16621 = !DILocation(line: 137, column: 24, scope: !16619)
!16622 = !DILocation(line: 139, column: 8, scope: !16623)
!16623 = distinct !DILexicalBlock(scope: !16619, file: !2089, line: 139, column: 8)
!16624 = !DILocation(line: 139, column: 18, scope: !16623)
!16625 = !DILocation(line: 139, column: 23, scope: !16623)
!16626 = !DILocation(line: 140, column: 22, scope: !16623)
!16627 = !DILocation(line: 140, column: 37, scope: !16623)
!16628 = !DILocation(line: 140, column: 34, scope: !16623)
!16629 = !DILocation(line: 139, column: 8, scope: !16619)
!16630 = !DILocation(line: 141, column: 27, scope: !16631)
!16631 = distinct !DILexicalBlock(scope: !16623, file: !2089, line: 140, column: 48)
!16632 = !DILocation(line: 141, column: 5, scope: !16631)
!16633 = !DILocation(line: 142, column: 4, scope: !16631)
!16634 = !DILocation(line: 146, column: 3, scope: !16619)
!16635 = !DILocation(line: 147, column: 2, scope: !16539)
!16636 = !DILocalVariable(name: "l", arg: 1, scope: !16637, file: !222, line: 189, type: !16518)
!16637 = distinct !DISubprogram(name: "k_spin_unlock", scope: !222, file: !222, line: 189, type: !16638, scopeLine: 191, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2059, retainedNodes: !223)
!16638 = !DISubroutineType(types: !16639)
!16639 = !{null, !16518, !16508}
!16640 = !DILocation(line: 189, column: 60, scope: !16637, inlinedAt: !16641)
!16641 = distinct !DILocation(line: 102, column: 2, scope: !16537)
!16642 = !DILocalVariable(name: "key", arg: 2, scope: !16637, file: !222, line: 190, type: !16508)
!16643 = !DILocation(line: 190, column: 23, scope: !16637, inlinedAt: !16641)
!16644 = !DILocation(line: 192, column: 2, scope: !16637, inlinedAt: !16641)
!16645 = !DILocation(line: 215, column: 22, scope: !16637, inlinedAt: !16641)
!16646 = !DILocalVariable(name: "key", arg: 1, scope: !16647, file: !5551, line: 84, type: !32)
!16647 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5551, file: !5551, line: 84, type: !5361, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2059, retainedNodes: !223)
!16648 = !DILocation(line: 84, column: 56, scope: !16647, inlinedAt: !16649)
!16649 = distinct !DILocation(line: 215, column: 2, scope: !16637, inlinedAt: !16641)
!16650 = !DILocation(line: 98, column: 12, scope: !16647, inlinedAt: !16649)
!16651 = !DILocation(line: 95, column: 2, scope: !16647, inlinedAt: !16649)
!16652 = !{i64 2847137}
!16653 = distinct !{!16653, !16512, !16654}
!16654 = !DILocation(line: 147, column: 2, scope: !16507)
!16655 = !DILocation(line: 148, column: 1, scope: !16484)
!16656 = distinct !DISubprogram(name: "elapsed", scope: !2089, file: !2089, line: 62, type: !16657, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2059, retainedNodes: !223)
!16657 = !DISubroutineType(types: !16658)
!16658 = !{!250}
!16659 = !DILocation(line: 64, column: 9, scope: !16656)
!16660 = !DILocation(line: 64, column: 28, scope: !16656)
!16661 = !DILocation(line: 64, column: 35, scope: !16656)
!16662 = !DILocation(line: 64, column: 2, scope: !16656)
!16663 = distinct !DISubprogram(name: "first", scope: !2089, file: !2089, line: 39, type: !16664, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2059, retainedNodes: !223)
!16664 = !DISubroutineType(types: !16665)
!16665 = !{!2062}
!16666 = !DILocalVariable(name: "t", scope: !16663, file: !2089, line: 41, type: !16667)
!16667 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2066, size: 32)
!16668 = !DILocation(line: 41, column: 15, scope: !16663)
!16669 = !DILocation(line: 41, column: 19, scope: !16663)
!16670 = !DILocation(line: 43, column: 9, scope: !16663)
!16671 = !DILocation(line: 43, column: 11, scope: !16663)
!16672 = !DILocation(line: 43, column: 28, scope: !16663)
!16673 = !DILocation(line: 43, column: 2, scope: !16663)
!16674 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !124, file: !124, line: 443, type: !16675, scopeLine: 444, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2059, retainedNodes: !223)
!16675 = !DISubroutineType(types: !16676)
!16676 = !{null, !16667, !16667}
!16677 = !DILocalVariable(name: "successor", arg: 1, scope: !16674, file: !124, line: 443, type: !16667)
!16678 = !DILocation(line: 443, column: 50, scope: !16674)
!16679 = !DILocalVariable(name: "node", arg: 2, scope: !16674, file: !124, line: 443, type: !16667)
!16680 = !DILocation(line: 443, column: 74, scope: !16674)
!16681 = !DILocalVariable(name: "prev", scope: !16674, file: !124, line: 445, type: !16682)
!16682 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !16667)
!16683 = !DILocation(line: 445, column: 21, scope: !16674)
!16684 = !DILocation(line: 445, column: 28, scope: !16674)
!16685 = !DILocation(line: 445, column: 39, scope: !16674)
!16686 = !DILocation(line: 447, column: 15, scope: !16674)
!16687 = !DILocation(line: 447, column: 2, scope: !16674)
!16688 = !DILocation(line: 447, column: 8, scope: !16674)
!16689 = !DILocation(line: 447, column: 13, scope: !16674)
!16690 = !DILocation(line: 448, column: 15, scope: !16674)
!16691 = !DILocation(line: 448, column: 2, scope: !16674)
!16692 = !DILocation(line: 448, column: 8, scope: !16674)
!16693 = !DILocation(line: 448, column: 13, scope: !16674)
!16694 = !DILocation(line: 449, column: 15, scope: !16674)
!16695 = !DILocation(line: 449, column: 2, scope: !16674)
!16696 = !DILocation(line: 449, column: 8, scope: !16674)
!16697 = !DILocation(line: 449, column: 13, scope: !16674)
!16698 = !DILocation(line: 450, column: 20, scope: !16674)
!16699 = !DILocation(line: 450, column: 2, scope: !16674)
!16700 = !DILocation(line: 450, column: 13, scope: !16674)
!16701 = !DILocation(line: 450, column: 18, scope: !16674)
!16702 = !DILocation(line: 451, column: 1, scope: !16674)
!16703 = distinct !DISubprogram(name: "next", scope: !2089, file: !2089, line: 46, type: !16704, scopeLine: 47, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2059, retainedNodes: !223)
!16704 = !DISubroutineType(types: !16705)
!16705 = !{!2062, !2062}
!16706 = !DILocalVariable(name: "t", arg: 1, scope: !16703, file: !2089, line: 46, type: !2062)
!16707 = !DILocation(line: 46, column: 47, scope: !16703)
!16708 = !DILocalVariable(name: "n", scope: !16703, file: !2089, line: 48, type: !16667)
!16709 = !DILocation(line: 48, column: 15, scope: !16703)
!16710 = !DILocation(line: 48, column: 55, scope: !16703)
!16711 = !DILocation(line: 48, column: 58, scope: !16703)
!16712 = !DILocation(line: 48, column: 19, scope: !16703)
!16713 = !DILocation(line: 50, column: 9, scope: !16703)
!16714 = !DILocation(line: 50, column: 11, scope: !16703)
!16715 = !DILocation(line: 50, column: 28, scope: !16703)
!16716 = !DILocation(line: 50, column: 2, scope: !16703)
!16717 = distinct !DISubprogram(name: "sys_dlist_append", scope: !124, file: !124, line: 404, type: !16718, scopeLine: 405, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2059, retainedNodes: !223)
!16718 = !DISubroutineType(types: !16719)
!16719 = !{null, !16720, !16667}
!16720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2094, size: 32)
!16721 = !DILocalVariable(name: "list", arg: 1, scope: !16717, file: !124, line: 404, type: !16720)
!16722 = !DILocation(line: 404, column: 50, scope: !16717)
!16723 = !DILocalVariable(name: "node", arg: 2, scope: !16717, file: !124, line: 404, type: !16667)
!16724 = !DILocation(line: 404, column: 69, scope: !16717)
!16725 = !DILocalVariable(name: "tail", scope: !16717, file: !124, line: 406, type: !16682)
!16726 = !DILocation(line: 406, column: 21, scope: !16717)
!16727 = !DILocation(line: 406, column: 28, scope: !16717)
!16728 = !DILocation(line: 406, column: 34, scope: !16717)
!16729 = !DILocation(line: 408, column: 15, scope: !16717)
!16730 = !DILocation(line: 408, column: 2, scope: !16717)
!16731 = !DILocation(line: 408, column: 8, scope: !16717)
!16732 = !DILocation(line: 408, column: 13, scope: !16717)
!16733 = !DILocation(line: 409, column: 15, scope: !16717)
!16734 = !DILocation(line: 409, column: 2, scope: !16717)
!16735 = !DILocation(line: 409, column: 8, scope: !16717)
!16736 = !DILocation(line: 409, column: 13, scope: !16717)
!16737 = !DILocation(line: 411, column: 15, scope: !16717)
!16738 = !DILocation(line: 411, column: 2, scope: !16717)
!16739 = !DILocation(line: 411, column: 8, scope: !16717)
!16740 = !DILocation(line: 411, column: 13, scope: !16717)
!16741 = !DILocation(line: 412, column: 15, scope: !16717)
!16742 = !DILocation(line: 412, column: 2, scope: !16717)
!16743 = !DILocation(line: 412, column: 8, scope: !16717)
!16744 = !DILocation(line: 412, column: 13, scope: !16717)
!16745 = !DILocation(line: 413, column: 1, scope: !16717)
!16746 = distinct !DISubprogram(name: "next_timeout", scope: !2089, file: !2089, line: 67, type: !16657, scopeLine: 68, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2059, retainedNodes: !223)
!16747 = !DILocalVariable(name: "to", scope: !16746, file: !2089, line: 69, type: !2062)
!16748 = !DILocation(line: 69, column: 19, scope: !16746)
!16749 = !DILocation(line: 69, column: 24, scope: !16746)
!16750 = !DILocalVariable(name: "ticks_elapsed", scope: !16746, file: !2089, line: 70, type: !250)
!16751 = !DILocation(line: 70, column: 10, scope: !16746)
!16752 = !DILocation(line: 70, column: 26, scope: !16746)
!16753 = !DILocalVariable(name: "ret", scope: !16746, file: !2089, line: 71, type: !250)
!16754 = !DILocation(line: 71, column: 10, scope: !16746)
!16755 = !DILocation(line: 73, column: 7, scope: !16756)
!16756 = distinct !DILexicalBlock(scope: !16746, file: !2089, line: 73, column: 6)
!16757 = !DILocation(line: 73, column: 10, scope: !16756)
!16758 = !DILocation(line: 73, column: 19, scope: !16756)
!16759 = !DILocation(line: 74, column: 17, scope: !16756)
!16760 = !DILocation(line: 74, column: 21, scope: !16756)
!16761 = !DILocation(line: 74, column: 30, scope: !16756)
!16762 = !DILocation(line: 74, column: 28, scope: !16756)
!16763 = !DILocation(line: 74, column: 45, scope: !16756)
!16764 = !DILocation(line: 73, column: 6, scope: !16746)
!16765 = !DILocation(line: 75, column: 7, scope: !16766)
!16766 = distinct !DILexicalBlock(scope: !16756, file: !2089, line: 74, column: 66)
!16767 = !DILocation(line: 76, column: 2, scope: !16766)
!16768 = !DILocation(line: 77, column: 9, scope: !16769)
!16769 = distinct !DILexicalBlock(scope: !16756, file: !2089, line: 76, column: 9)
!16770 = !DILocation(line: 77, column: 7, scope: !16769)
!16771 = !DILocation(line: 81, column: 20, scope: !16772)
!16772 = distinct !DILexicalBlock(scope: !16746, file: !2089, line: 81, column: 6)
!16773 = !DILocation(line: 81, column: 6, scope: !16772)
!16774 = !DILocation(line: 81, column: 32, scope: !16772)
!16775 = !DILocation(line: 81, column: 49, scope: !16772)
!16776 = !DILocation(line: 81, column: 63, scope: !16772)
!16777 = !DILocation(line: 81, column: 61, scope: !16772)
!16778 = !DILocation(line: 81, column: 6, scope: !16746)
!16779 = !DILocation(line: 82, column: 23, scope: !16780)
!16780 = distinct !DILexicalBlock(scope: !16772, file: !2089, line: 81, column: 68)
!16781 = !DILocation(line: 82, column: 7, scope: !16780)
!16782 = !DILocation(line: 83, column: 2, scope: !16780)
!16783 = !DILocation(line: 85, column: 9, scope: !16746)
!16784 = !DILocation(line: 85, column: 2, scope: !16746)
!16785 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !124, file: !124, line: 341, type: !16786, scopeLine: 343, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2059, retainedNodes: !223)
!16786 = !DISubroutineType(types: !16787)
!16787 = !{!16667, !16720, !16667}
!16788 = !DILocalVariable(name: "list", arg: 1, scope: !16785, file: !124, line: 341, type: !16720)
!16789 = !DILocation(line: 341, column: 61, scope: !16785)
!16790 = !DILocalVariable(name: "node", arg: 2, scope: !16785, file: !124, line: 342, type: !16667)
!16791 = !DILocation(line: 342, column: 26, scope: !16785)
!16792 = !DILocation(line: 344, column: 10, scope: !16785)
!16793 = !DILocation(line: 344, column: 15, scope: !16785)
!16794 = !DILocation(line: 344, column: 9, scope: !16785)
!16795 = !DILocation(line: 344, column: 55, scope: !16785)
!16796 = !DILocation(line: 344, column: 61, scope: !16785)
!16797 = !DILocation(line: 344, column: 26, scope: !16785)
!16798 = !DILocation(line: 344, column: 2, scope: !16785)
!16799 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !124, file: !124, line: 325, type: !16786, scopeLine: 327, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2059, retainedNodes: !223)
!16800 = !DILocalVariable(name: "list", arg: 1, scope: !16799, file: !124, line: 325, type: !16720)
!16801 = !DILocation(line: 325, column: 70, scope: !16799)
!16802 = !DILocalVariable(name: "node", arg: 2, scope: !16799, file: !124, line: 326, type: !16667)
!16803 = !DILocation(line: 326, column: 21, scope: !16799)
!16804 = !DILocation(line: 328, column: 10, scope: !16799)
!16805 = !DILocation(line: 328, column: 18, scope: !16799)
!16806 = !DILocation(line: 328, column: 24, scope: !16799)
!16807 = !DILocation(line: 328, column: 15, scope: !16799)
!16808 = !DILocation(line: 328, column: 9, scope: !16799)
!16809 = !DILocation(line: 328, column: 39, scope: !16799)
!16810 = !DILocation(line: 328, column: 45, scope: !16799)
!16811 = !DILocation(line: 328, column: 2, scope: !16799)
!16812 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !124, file: !124, line: 294, type: !16813, scopeLine: 295, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2059, retainedNodes: !223)
!16813 = !DISubroutineType(types: !16814)
!16814 = !{!16667, !16720}
!16815 = !DILocalVariable(name: "list", arg: 1, scope: !16812, file: !124, line: 294, type: !16720)
!16816 = !DILocation(line: 294, column: 61, scope: !16812)
!16817 = !DILocation(line: 296, column: 28, scope: !16812)
!16818 = !DILocation(line: 296, column: 9, scope: !16812)
!16819 = !DILocation(line: 296, column: 43, scope: !16812)
!16820 = !DILocation(line: 296, column: 49, scope: !16812)
!16821 = !DILocation(line: 296, column: 2, scope: !16812)
!16822 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !124, file: !124, line: 266, type: !16823, scopeLine: 267, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2059, retainedNodes: !223)
!16823 = !DISubroutineType(types: !16824)
!16824 = !{!743, !16720}
!16825 = !DILocalVariable(name: "list", arg: 1, scope: !16822, file: !124, line: 266, type: !16720)
!16826 = !DILocation(line: 266, column: 52, scope: !16822)
!16827 = !DILocation(line: 268, column: 9, scope: !16822)
!16828 = !DILocation(line: 268, column: 15, scope: !16822)
!16829 = !DILocation(line: 268, column: 23, scope: !16822)
!16830 = !DILocation(line: 268, column: 20, scope: !16822)
!16831 = !DILocation(line: 268, column: 2, scope: !16822)
!16832 = distinct !DISubprogram(name: "z_abort_timeout", scope: !2089, file: !2089, line: 150, type: !16833, scopeLine: 151, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2059, retainedNodes: !223)
!16833 = !DISubroutineType(types: !16834)
!16834 = !{!103, !2062}
!16835 = !DILocalVariable(name: "to", arg: 1, scope: !16832, file: !2089, line: 150, type: !2062)
!16836 = !DILocation(line: 150, column: 38, scope: !16832)
!16837 = !DILocalVariable(name: "ret", scope: !16832, file: !2089, line: 152, type: !103)
!16838 = !DILocation(line: 152, column: 6, scope: !16832)
!16839 = !DILocalVariable(name: "__i", scope: !16840, file: !2089, line: 154, type: !16508)
!16840 = distinct !DILexicalBlock(scope: !16832, file: !2089, line: 154, column: 2)
!16841 = !DILocation(line: 154, column: 2, scope: !16840)
!16842 = !DILocalVariable(name: "__key", scope: !16840, file: !2089, line: 154, type: !16508)
!16843 = !DILocation(line: 136, column: 70, scope: !16515, inlinedAt: !16844)
!16844 = distinct !DILocation(line: 154, column: 2, scope: !16840)
!16845 = !DILocation(line: 138, column: 2, scope: !16515, inlinedAt: !16844)
!16846 = !DILocation(line: 139, column: 19, scope: !16515, inlinedAt: !16844)
!16847 = !DILocation(line: 44, column: 15, scope: !16525, inlinedAt: !16848)
!16848 = distinct !DILocation(line: 145, column: 10, scope: !16515, inlinedAt: !16844)
!16849 = !DILocation(line: 53, column: 15, scope: !16525, inlinedAt: !16848)
!16850 = !DILocation(line: 55, column: 2, scope: !16525, inlinedAt: !16848)
!16851 = !DILocation(line: 76, column: 9, scope: !16525, inlinedAt: !16848)
!16852 = !DILocation(line: 145, column: 4, scope: !16515, inlinedAt: !16844)
!16853 = !DILocation(line: 145, column: 8, scope: !16515, inlinedAt: !16844)
!16854 = !DILocation(line: 165, column: 2, scope: !16515, inlinedAt: !16844)
!16855 = !DILocation(line: 154, column: 2, scope: !16856)
!16856 = distinct !DILexicalBlock(scope: !16840, file: !2089, line: 154, column: 2)
!16857 = !DILocation(line: 155, column: 28, scope: !16858)
!16858 = distinct !DILexicalBlock(scope: !16859, file: !2089, line: 155, column: 7)
!16859 = distinct !DILexicalBlock(scope: !16856, file: !2089, line: 154, column: 24)
!16860 = !DILocation(line: 155, column: 32, scope: !16858)
!16861 = !DILocation(line: 155, column: 7, scope: !16858)
!16862 = !DILocation(line: 155, column: 7, scope: !16859)
!16863 = !DILocation(line: 156, column: 19, scope: !16864)
!16864 = distinct !DILexicalBlock(scope: !16858, file: !2089, line: 155, column: 39)
!16865 = !DILocation(line: 156, column: 4, scope: !16864)
!16866 = !DILocation(line: 157, column: 8, scope: !16864)
!16867 = !DILocation(line: 158, column: 3, scope: !16864)
!16868 = !DILocation(line: 159, column: 2, scope: !16859)
!16869 = !DILocation(line: 189, column: 60, scope: !16637, inlinedAt: !16870)
!16870 = distinct !DILocation(line: 154, column: 2, scope: !16856)
!16871 = !DILocation(line: 190, column: 23, scope: !16637, inlinedAt: !16870)
!16872 = !DILocation(line: 192, column: 2, scope: !16637, inlinedAt: !16870)
!16873 = !DILocation(line: 215, column: 22, scope: !16637, inlinedAt: !16870)
!16874 = !DILocation(line: 84, column: 56, scope: !16647, inlinedAt: !16875)
!16875 = distinct !DILocation(line: 215, column: 2, scope: !16637, inlinedAt: !16870)
!16876 = !DILocation(line: 98, column: 12, scope: !16647, inlinedAt: !16875)
!16877 = !DILocation(line: 95, column: 2, scope: !16647, inlinedAt: !16875)
!16878 = distinct !{!16878, !16841, !16879}
!16879 = !DILocation(line: 159, column: 2, scope: !16840)
!16880 = !DILocation(line: 161, column: 9, scope: !16832)
!16881 = !DILocation(line: 161, column: 2, scope: !16832)
!16882 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !124, file: !124, line: 225, type: !16883, scopeLine: 226, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2059, retainedNodes: !223)
!16883 = !DISubroutineType(types: !16884)
!16884 = !{!743, !16885}
!16885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16886, size: 32)
!16886 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2066)
!16887 = !DILocalVariable(name: "node", arg: 1, scope: !16882, file: !124, line: 225, type: !16885)
!16888 = !DILocation(line: 225, column: 59, scope: !16882)
!16889 = !DILocation(line: 227, column: 9, scope: !16882)
!16890 = !DILocation(line: 227, column: 15, scope: !16882)
!16891 = !DILocation(line: 227, column: 20, scope: !16882)
!16892 = !DILocation(line: 227, column: 2, scope: !16882)
!16893 = distinct !DISubprogram(name: "remove_timeout", scope: !2089, file: !2089, line: 53, type: !2083, scopeLine: 54, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2059, retainedNodes: !223)
!16894 = !DILocalVariable(name: "t", arg: 1, scope: !16893, file: !2089, line: 53, type: !2062)
!16895 = !DILocation(line: 53, column: 45, scope: !16893)
!16896 = !DILocation(line: 55, column: 11, scope: !16897)
!16897 = distinct !DILexicalBlock(scope: !16893, file: !2089, line: 55, column: 6)
!16898 = !DILocation(line: 55, column: 6, scope: !16897)
!16899 = !DILocation(line: 55, column: 14, scope: !16897)
!16900 = !DILocation(line: 55, column: 6, scope: !16893)
!16901 = !DILocation(line: 56, column: 22, scope: !16902)
!16902 = distinct !DILexicalBlock(scope: !16897, file: !2089, line: 55, column: 23)
!16903 = !DILocation(line: 56, column: 25, scope: !16902)
!16904 = !DILocation(line: 56, column: 8, scope: !16902)
!16905 = !DILocation(line: 56, column: 3, scope: !16902)
!16906 = !DILocation(line: 56, column: 12, scope: !16902)
!16907 = !DILocation(line: 56, column: 19, scope: !16902)
!16908 = !DILocation(line: 57, column: 2, scope: !16902)
!16909 = !DILocation(line: 59, column: 20, scope: !16893)
!16910 = !DILocation(line: 59, column: 23, scope: !16893)
!16911 = !DILocation(line: 59, column: 2, scope: !16893)
!16912 = !DILocation(line: 60, column: 1, scope: !16893)
!16913 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !124, file: !124, line: 496, type: !16914, scopeLine: 497, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2059, retainedNodes: !223)
!16914 = !DISubroutineType(types: !16915)
!16915 = !{null, !16667}
!16916 = !DILocalVariable(name: "node", arg: 1, scope: !16913, file: !124, line: 496, type: !16667)
!16917 = !DILocation(line: 496, column: 50, scope: !16913)
!16918 = !DILocalVariable(name: "prev", scope: !16913, file: !124, line: 498, type: !16682)
!16919 = !DILocation(line: 498, column: 21, scope: !16913)
!16920 = !DILocation(line: 498, column: 28, scope: !16913)
!16921 = !DILocation(line: 498, column: 34, scope: !16913)
!16922 = !DILocalVariable(name: "next", scope: !16913, file: !124, line: 499, type: !16682)
!16923 = !DILocation(line: 499, column: 21, scope: !16913)
!16924 = !DILocation(line: 499, column: 28, scope: !16913)
!16925 = !DILocation(line: 499, column: 34, scope: !16913)
!16926 = !DILocation(line: 501, column: 15, scope: !16913)
!16927 = !DILocation(line: 501, column: 2, scope: !16913)
!16928 = !DILocation(line: 501, column: 8, scope: !16913)
!16929 = !DILocation(line: 501, column: 13, scope: !16913)
!16930 = !DILocation(line: 502, column: 15, scope: !16913)
!16931 = !DILocation(line: 502, column: 2, scope: !16913)
!16932 = !DILocation(line: 502, column: 8, scope: !16913)
!16933 = !DILocation(line: 502, column: 13, scope: !16913)
!16934 = !DILocation(line: 503, column: 17, scope: !16913)
!16935 = !DILocation(line: 503, column: 2, scope: !16913)
!16936 = !DILocation(line: 504, column: 1, scope: !16913)
!16937 = distinct !DISubprogram(name: "sys_dnode_init", scope: !124, file: !124, line: 211, type: !16914, scopeLine: 212, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2059, retainedNodes: !223)
!16938 = !DILocalVariable(name: "node", arg: 1, scope: !16937, file: !124, line: 211, type: !16667)
!16939 = !DILocation(line: 211, column: 48, scope: !16937)
!16940 = !DILocation(line: 213, column: 2, scope: !16937)
!16941 = !DILocation(line: 213, column: 8, scope: !16937)
!16942 = !DILocation(line: 213, column: 13, scope: !16937)
!16943 = !DILocation(line: 214, column: 2, scope: !16937)
!16944 = !DILocation(line: 214, column: 8, scope: !16937)
!16945 = !DILocation(line: 214, column: 13, scope: !16937)
!16946 = !DILocation(line: 215, column: 1, scope: !16937)
!16947 = distinct !DISubprogram(name: "z_timeout_remaining", scope: !2089, file: !2089, line: 183, type: !16948, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2059, retainedNodes: !223)
!16948 = !DISubroutineType(types: !16949)
!16949 = !{!1442, !16950}
!16950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16951, size: 32)
!16951 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2063)
!16952 = !DILocalVariable(name: "timeout", arg: 1, scope: !16947, file: !2089, line: 183, type: !16950)
!16953 = !DILocation(line: 183, column: 54, scope: !16947)
!16954 = !DILocalVariable(name: "ticks", scope: !16947, file: !2089, line: 185, type: !1442)
!16955 = !DILocation(line: 185, column: 12, scope: !16947)
!16956 = !DILocalVariable(name: "__i", scope: !16957, file: !2089, line: 187, type: !16508)
!16957 = distinct !DILexicalBlock(scope: !16947, file: !2089, line: 187, column: 2)
!16958 = !DILocation(line: 187, column: 2, scope: !16957)
!16959 = !DILocalVariable(name: "__key", scope: !16957, file: !2089, line: 187, type: !16508)
!16960 = !DILocation(line: 136, column: 70, scope: !16515, inlinedAt: !16961)
!16961 = distinct !DILocation(line: 187, column: 2, scope: !16957)
!16962 = !DILocation(line: 138, column: 2, scope: !16515, inlinedAt: !16961)
!16963 = !DILocation(line: 139, column: 19, scope: !16515, inlinedAt: !16961)
!16964 = !DILocation(line: 44, column: 15, scope: !16525, inlinedAt: !16965)
!16965 = distinct !DILocation(line: 145, column: 10, scope: !16515, inlinedAt: !16961)
!16966 = !DILocation(line: 53, column: 15, scope: !16525, inlinedAt: !16965)
!16967 = !DILocation(line: 55, column: 2, scope: !16525, inlinedAt: !16965)
!16968 = !DILocation(line: 76, column: 9, scope: !16525, inlinedAt: !16965)
!16969 = !DILocation(line: 145, column: 4, scope: !16515, inlinedAt: !16961)
!16970 = !DILocation(line: 145, column: 8, scope: !16515, inlinedAt: !16961)
!16971 = !DILocation(line: 165, column: 2, scope: !16515, inlinedAt: !16961)
!16972 = !DILocation(line: 187, column: 2, scope: !16973)
!16973 = distinct !DILexicalBlock(scope: !16957, file: !2089, line: 187, column: 2)
!16974 = !DILocation(line: 188, column: 23, scope: !16975)
!16975 = distinct !DILexicalBlock(scope: !16973, file: !2089, line: 187, column: 24)
!16976 = !DILocation(line: 188, column: 11, scope: !16975)
!16977 = !DILocation(line: 188, column: 9, scope: !16975)
!16978 = !DILocation(line: 189, column: 2, scope: !16975)
!16979 = !DILocation(line: 189, column: 60, scope: !16637, inlinedAt: !16980)
!16980 = distinct !DILocation(line: 187, column: 2, scope: !16973)
!16981 = !DILocation(line: 190, column: 23, scope: !16637, inlinedAt: !16980)
!16982 = !DILocation(line: 192, column: 2, scope: !16637, inlinedAt: !16980)
!16983 = !DILocation(line: 215, column: 22, scope: !16637, inlinedAt: !16980)
!16984 = !DILocation(line: 84, column: 56, scope: !16647, inlinedAt: !16985)
!16985 = distinct !DILocation(line: 215, column: 2, scope: !16637, inlinedAt: !16980)
!16986 = !DILocation(line: 98, column: 12, scope: !16647, inlinedAt: !16985)
!16987 = !DILocation(line: 95, column: 2, scope: !16647, inlinedAt: !16985)
!16988 = distinct !{!16988, !16958, !16989}
!16989 = !DILocation(line: 189, column: 2, scope: !16957)
!16990 = !DILocation(line: 191, column: 9, scope: !16947)
!16991 = !DILocation(line: 191, column: 2, scope: !16947)
!16992 = distinct !DISubprogram(name: "timeout_rem", scope: !2089, file: !2089, line: 165, type: !16948, scopeLine: 166, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2059, retainedNodes: !223)
!16993 = !DILocalVariable(name: "timeout", arg: 1, scope: !16992, file: !2089, line: 165, type: !16950)
!16994 = !DILocation(line: 165, column: 53, scope: !16992)
!16995 = !DILocalVariable(name: "ticks", scope: !16992, file: !2089, line: 167, type: !1442)
!16996 = !DILocation(line: 167, column: 12, scope: !16992)
!16997 = !DILocation(line: 169, column: 28, scope: !16998)
!16998 = distinct !DILexicalBlock(scope: !16992, file: !2089, line: 169, column: 6)
!16999 = !DILocation(line: 169, column: 6, scope: !16998)
!17000 = !DILocation(line: 169, column: 6, scope: !16992)
!17001 = !DILocation(line: 170, column: 3, scope: !17002)
!17002 = distinct !DILexicalBlock(scope: !16998, file: !2089, line: 169, column: 38)
!17003 = !DILocalVariable(name: "t", scope: !17004, file: !2089, line: 173, type: !2062)
!17004 = distinct !DILexicalBlock(scope: !16992, file: !2089, line: 173, column: 2)
!17005 = !DILocation(line: 173, column: 24, scope: !17004)
!17006 = !DILocation(line: 173, column: 28, scope: !17004)
!17007 = !DILocation(line: 173, column: 7, scope: !17004)
!17008 = !DILocation(line: 173, column: 37, scope: !17009)
!17009 = distinct !DILexicalBlock(scope: !17004, file: !2089, line: 173, column: 2)
!17010 = !DILocation(line: 173, column: 39, scope: !17009)
!17011 = !DILocation(line: 173, column: 2, scope: !17004)
!17012 = !DILocation(line: 174, column: 12, scope: !17013)
!17013 = distinct !DILexicalBlock(scope: !17009, file: !2089, line: 173, column: 61)
!17014 = !DILocation(line: 174, column: 15, scope: !17013)
!17015 = !DILocation(line: 174, column: 9, scope: !17013)
!17016 = !DILocation(line: 175, column: 7, scope: !17017)
!17017 = distinct !DILexicalBlock(scope: !17013, file: !2089, line: 175, column: 7)
!17018 = !DILocation(line: 175, column: 18, scope: !17017)
!17019 = !DILocation(line: 175, column: 15, scope: !17017)
!17020 = !DILocation(line: 175, column: 7, scope: !17013)
!17021 = !DILocation(line: 176, column: 4, scope: !17022)
!17022 = distinct !DILexicalBlock(scope: !17017, file: !2089, line: 175, column: 21)
!17023 = !DILocation(line: 178, column: 2, scope: !17013)
!17024 = !DILocation(line: 173, column: 57, scope: !17009)
!17025 = !DILocation(line: 173, column: 52, scope: !17009)
!17026 = !DILocation(line: 173, column: 50, scope: !17009)
!17027 = !DILocation(line: 173, column: 2, scope: !17009)
!17028 = distinct !{!17028, !17011, !17029}
!17029 = !DILocation(line: 178, column: 2, scope: !17004)
!17030 = !DILocation(line: 180, column: 9, scope: !16992)
!17031 = !DILocation(line: 180, column: 17, scope: !16992)
!17032 = !DILocation(line: 180, column: 15, scope: !16992)
!17033 = !DILocation(line: 180, column: 2, scope: !16992)
!17034 = !DILocation(line: 181, column: 1, scope: !16992)
!17035 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !12222, file: !12222, line: 35, type: !17036, scopeLine: 36, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2059, retainedNodes: !223)
!17036 = !DISubroutineType(types: !17037)
!17037 = !{!743, !16950}
!17038 = !DILocalVariable(name: "to", arg: 1, scope: !17035, file: !12222, line: 35, type: !16950)
!17039 = !DILocation(line: 35, column: 65, scope: !17035)
!17040 = !DILocation(line: 37, column: 31, scope: !17035)
!17041 = !DILocation(line: 37, column: 35, scope: !17035)
!17042 = !DILocation(line: 37, column: 10, scope: !17035)
!17043 = !DILocation(line: 37, column: 9, scope: !17035)
!17044 = !DILocation(line: 37, column: 2, scope: !17035)
!17045 = distinct !DISubprogram(name: "z_timeout_expires", scope: !2089, file: !2089, line: 194, type: !16948, scopeLine: 195, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2059, retainedNodes: !223)
!17046 = !DILocalVariable(name: "timeout", arg: 1, scope: !17045, file: !2089, line: 194, type: !16950)
!17047 = !DILocation(line: 194, column: 52, scope: !17045)
!17048 = !DILocalVariable(name: "ticks", scope: !17045, file: !2089, line: 196, type: !1442)
!17049 = !DILocation(line: 196, column: 12, scope: !17045)
!17050 = !DILocalVariable(name: "__i", scope: !17051, file: !2089, line: 198, type: !16508)
!17051 = distinct !DILexicalBlock(scope: !17045, file: !2089, line: 198, column: 2)
!17052 = !DILocation(line: 198, column: 2, scope: !17051)
!17053 = !DILocalVariable(name: "__key", scope: !17051, file: !2089, line: 198, type: !16508)
!17054 = !DILocation(line: 136, column: 70, scope: !16515, inlinedAt: !17055)
!17055 = distinct !DILocation(line: 198, column: 2, scope: !17051)
!17056 = !DILocation(line: 138, column: 2, scope: !16515, inlinedAt: !17055)
!17057 = !DILocation(line: 139, column: 19, scope: !16515, inlinedAt: !17055)
!17058 = !DILocation(line: 44, column: 15, scope: !16525, inlinedAt: !17059)
!17059 = distinct !DILocation(line: 145, column: 10, scope: !16515, inlinedAt: !17055)
!17060 = !DILocation(line: 53, column: 15, scope: !16525, inlinedAt: !17059)
!17061 = !DILocation(line: 55, column: 2, scope: !16525, inlinedAt: !17059)
!17062 = !DILocation(line: 76, column: 9, scope: !16525, inlinedAt: !17059)
!17063 = !DILocation(line: 145, column: 4, scope: !16515, inlinedAt: !17055)
!17064 = !DILocation(line: 145, column: 8, scope: !16515, inlinedAt: !17055)
!17065 = !DILocation(line: 165, column: 2, scope: !16515, inlinedAt: !17055)
!17066 = !DILocation(line: 198, column: 2, scope: !17067)
!17067 = distinct !DILexicalBlock(scope: !17051, file: !2089, line: 198, column: 2)
!17068 = !DILocation(line: 199, column: 11, scope: !17069)
!17069 = distinct !DILexicalBlock(scope: !17067, file: !2089, line: 198, column: 24)
!17070 = !DILocation(line: 199, column: 35, scope: !17069)
!17071 = !DILocation(line: 199, column: 23, scope: !17069)
!17072 = !DILocation(line: 199, column: 21, scope: !17069)
!17073 = !DILocation(line: 199, column: 9, scope: !17069)
!17074 = !DILocation(line: 200, column: 2, scope: !17069)
!17075 = !DILocation(line: 189, column: 60, scope: !16637, inlinedAt: !17076)
!17076 = distinct !DILocation(line: 198, column: 2, scope: !17067)
!17077 = !DILocation(line: 190, column: 23, scope: !16637, inlinedAt: !17076)
!17078 = !DILocation(line: 192, column: 2, scope: !16637, inlinedAt: !17076)
!17079 = !DILocation(line: 215, column: 22, scope: !16637, inlinedAt: !17076)
!17080 = !DILocation(line: 84, column: 56, scope: !16647, inlinedAt: !17081)
!17081 = distinct !DILocation(line: 215, column: 2, scope: !16637, inlinedAt: !17076)
!17082 = !DILocation(line: 98, column: 12, scope: !16647, inlinedAt: !17081)
!17083 = !DILocation(line: 95, column: 2, scope: !16647, inlinedAt: !17081)
!17084 = distinct !{!17084, !17052, !17085}
!17085 = !DILocation(line: 200, column: 2, scope: !17051)
!17086 = !DILocation(line: 202, column: 9, scope: !17045)
!17087 = !DILocation(line: 202, column: 2, scope: !17045)
!17088 = distinct !DISubprogram(name: "z_get_next_timeout_expiry", scope: !2089, file: !2089, line: 205, type: !16657, scopeLine: 206, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2059, retainedNodes: !223)
!17089 = !DILocalVariable(name: "ret", scope: !17088, file: !2089, line: 207, type: !250)
!17090 = !DILocation(line: 207, column: 10, scope: !17088)
!17091 = !DILocalVariable(name: "__i", scope: !17092, file: !2089, line: 209, type: !16508)
!17092 = distinct !DILexicalBlock(scope: !17088, file: !2089, line: 209, column: 2)
!17093 = !DILocation(line: 209, column: 2, scope: !17092)
!17094 = !DILocalVariable(name: "__key", scope: !17092, file: !2089, line: 209, type: !16508)
!17095 = !DILocation(line: 136, column: 70, scope: !16515, inlinedAt: !17096)
!17096 = distinct !DILocation(line: 209, column: 2, scope: !17092)
!17097 = !DILocation(line: 138, column: 2, scope: !16515, inlinedAt: !17096)
!17098 = !DILocation(line: 139, column: 19, scope: !16515, inlinedAt: !17096)
!17099 = !DILocation(line: 44, column: 15, scope: !16525, inlinedAt: !17100)
!17100 = distinct !DILocation(line: 145, column: 10, scope: !16515, inlinedAt: !17096)
!17101 = !DILocation(line: 53, column: 15, scope: !16525, inlinedAt: !17100)
!17102 = !DILocation(line: 55, column: 2, scope: !16525, inlinedAt: !17100)
!17103 = !DILocation(line: 76, column: 9, scope: !16525, inlinedAt: !17100)
!17104 = !DILocation(line: 145, column: 4, scope: !16515, inlinedAt: !17096)
!17105 = !DILocation(line: 145, column: 8, scope: !16515, inlinedAt: !17096)
!17106 = !DILocation(line: 165, column: 2, scope: !16515, inlinedAt: !17096)
!17107 = !DILocation(line: 209, column: 2, scope: !17108)
!17108 = distinct !DILexicalBlock(scope: !17092, file: !2089, line: 209, column: 2)
!17109 = !DILocation(line: 210, column: 9, scope: !17110)
!17110 = distinct !DILexicalBlock(scope: !17108, file: !2089, line: 209, column: 24)
!17111 = !DILocation(line: 210, column: 7, scope: !17110)
!17112 = !DILocation(line: 211, column: 2, scope: !17110)
!17113 = !DILocation(line: 189, column: 60, scope: !16637, inlinedAt: !17114)
!17114 = distinct !DILocation(line: 209, column: 2, scope: !17108)
!17115 = !DILocation(line: 190, column: 23, scope: !16637, inlinedAt: !17114)
!17116 = !DILocation(line: 192, column: 2, scope: !16637, inlinedAt: !17114)
!17117 = !DILocation(line: 215, column: 22, scope: !16637, inlinedAt: !17114)
!17118 = !DILocation(line: 84, column: 56, scope: !16647, inlinedAt: !17119)
!17119 = distinct !DILocation(line: 215, column: 2, scope: !16637, inlinedAt: !17114)
!17120 = !DILocation(line: 98, column: 12, scope: !16647, inlinedAt: !17119)
!17121 = !DILocation(line: 95, column: 2, scope: !16647, inlinedAt: !17119)
!17122 = distinct !{!17122, !17093, !17123}
!17123 = !DILocation(line: 211, column: 2, scope: !17092)
!17124 = !DILocation(line: 212, column: 9, scope: !17088)
!17125 = !DILocation(line: 212, column: 2, scope: !17088)
!17126 = distinct !DISubprogram(name: "z_set_timeout_expiry", scope: !2089, file: !2089, line: 215, type: !8821, scopeLine: 216, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2059, retainedNodes: !223)
!17127 = !DILocalVariable(name: "ticks", arg: 1, scope: !17126, file: !2089, line: 215, type: !250)
!17128 = !DILocation(line: 215, column: 35, scope: !17126)
!17129 = !DILocalVariable(name: "is_idle", arg: 2, scope: !17126, file: !2089, line: 215, type: !743)
!17130 = !DILocation(line: 215, column: 47, scope: !17126)
!17131 = !DILocalVariable(name: "__i", scope: !17132, file: !2089, line: 217, type: !16508)
!17132 = distinct !DILexicalBlock(scope: !17126, file: !2089, line: 217, column: 2)
!17133 = !DILocation(line: 217, column: 2, scope: !17132)
!17134 = !DILocalVariable(name: "__key", scope: !17132, file: !2089, line: 217, type: !16508)
!17135 = !DILocation(line: 136, column: 70, scope: !16515, inlinedAt: !17136)
!17136 = distinct !DILocation(line: 217, column: 2, scope: !17132)
!17137 = !DILocation(line: 138, column: 2, scope: !16515, inlinedAt: !17136)
!17138 = !DILocation(line: 139, column: 19, scope: !16515, inlinedAt: !17136)
!17139 = !DILocation(line: 44, column: 15, scope: !16525, inlinedAt: !17140)
!17140 = distinct !DILocation(line: 145, column: 10, scope: !16515, inlinedAt: !17136)
!17141 = !DILocation(line: 53, column: 15, scope: !16525, inlinedAt: !17140)
!17142 = !DILocation(line: 55, column: 2, scope: !16525, inlinedAt: !17140)
!17143 = !DILocation(line: 76, column: 9, scope: !16525, inlinedAt: !17140)
!17144 = !DILocation(line: 145, column: 4, scope: !16515, inlinedAt: !17136)
!17145 = !DILocation(line: 145, column: 8, scope: !16515, inlinedAt: !17136)
!17146 = !DILocation(line: 165, column: 2, scope: !16515, inlinedAt: !17136)
!17147 = !DILocation(line: 217, column: 2, scope: !17148)
!17148 = distinct !DILexicalBlock(scope: !17132, file: !2089, line: 217, column: 2)
!17149 = !DILocalVariable(name: "next_to", scope: !17150, file: !2089, line: 218, type: !103)
!17150 = distinct !DILexicalBlock(scope: !17148, file: !2089, line: 217, column: 24)
!17151 = !DILocation(line: 218, column: 7, scope: !17150)
!17152 = !DILocation(line: 218, column: 17, scope: !17150)
!17153 = !DILocalVariable(name: "sooner", scope: !17150, file: !2089, line: 219, type: !743)
!17154 = !DILocation(line: 219, column: 8, scope: !17150)
!17155 = !DILocation(line: 219, column: 18, scope: !17150)
!17156 = !DILocation(line: 219, column: 26, scope: !17150)
!17157 = !DILocation(line: 220, column: 10, scope: !17150)
!17158 = !DILocation(line: 220, column: 14, scope: !17150)
!17159 = !DILocation(line: 220, column: 23, scope: !17150)
!17160 = !DILocation(line: 220, column: 20, scope: !17150)
!17161 = !DILocalVariable(name: "imminent", scope: !17150, file: !2089, line: 221, type: !743)
!17162 = !DILocation(line: 221, column: 8, scope: !17150)
!17163 = !DILocation(line: 221, column: 19, scope: !17150)
!17164 = !DILocation(line: 221, column: 27, scope: !17150)
!17165 = !DILocation(line: 233, column: 8, scope: !17166)
!17166 = distinct !DILexicalBlock(scope: !17150, file: !2089, line: 233, column: 7)
!17167 = !DILocation(line: 233, column: 17, scope: !17166)
!17168 = !DILocation(line: 233, column: 21, scope: !17166)
!17169 = !DILocation(line: 233, column: 7, scope: !17150)
!17170 = !DILocation(line: 234, column: 26, scope: !17171)
!17171 = distinct !DILexicalBlock(scope: !17166, file: !2089, line: 233, column: 56)
!17172 = !DILocation(line: 234, column: 47, scope: !17171)
!17173 = !DILocation(line: 234, column: 4, scope: !17171)
!17174 = !DILocation(line: 235, column: 3, scope: !17171)
!17175 = !DILocation(line: 236, column: 2, scope: !17150)
!17176 = !DILocation(line: 189, column: 60, scope: !16637, inlinedAt: !17177)
!17177 = distinct !DILocation(line: 217, column: 2, scope: !17148)
!17178 = !DILocation(line: 190, column: 23, scope: !16637, inlinedAt: !17177)
!17179 = !DILocation(line: 192, column: 2, scope: !16637, inlinedAt: !17177)
!17180 = !DILocation(line: 215, column: 22, scope: !16637, inlinedAt: !17177)
!17181 = !DILocation(line: 84, column: 56, scope: !16647, inlinedAt: !17182)
!17182 = distinct !DILocation(line: 215, column: 2, scope: !16637, inlinedAt: !17177)
!17183 = !DILocation(line: 98, column: 12, scope: !16647, inlinedAt: !17182)
!17184 = !DILocation(line: 95, column: 2, scope: !16647, inlinedAt: !17182)
!17185 = distinct !{!17185, !17133, !17186}
!17186 = !DILocation(line: 236, column: 2, scope: !17132)
!17187 = !DILocation(line: 237, column: 1, scope: !17126)
!17188 = distinct !DISubprogram(name: "sys_clock_announce", scope: !2089, file: !2089, line: 239, type: !17189, scopeLine: 240, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2059, retainedNodes: !223)
!17189 = !DISubroutineType(types: !17190)
!17190 = !{null, !250}
!17191 = !DILocalVariable(name: "ticks", arg: 1, scope: !17188, file: !2089, line: 239, type: !250)
!17192 = !DILocation(line: 239, column: 33, scope: !17188)
!17193 = !DILocation(line: 242, column: 15, scope: !17188)
!17194 = !DILocation(line: 242, column: 2, scope: !17188)
!17195 = !DILocalVariable(name: "key", scope: !17188, file: !2089, line: 245, type: !16508)
!17196 = !DILocation(line: 245, column: 19, scope: !17188)
!17197 = !DILocation(line: 136, column: 70, scope: !16515, inlinedAt: !17198)
!17198 = distinct !DILocation(line: 245, column: 25, scope: !17188)
!17199 = !DILocation(line: 138, column: 2, scope: !16515, inlinedAt: !17198)
!17200 = !DILocation(line: 139, column: 19, scope: !16515, inlinedAt: !17198)
!17201 = !DILocation(line: 44, column: 15, scope: !16525, inlinedAt: !17202)
!17202 = distinct !DILocation(line: 145, column: 10, scope: !16515, inlinedAt: !17198)
!17203 = !DILocation(line: 53, column: 15, scope: !16525, inlinedAt: !17202)
!17204 = !DILocation(line: 55, column: 2, scope: !16525, inlinedAt: !17202)
!17205 = !DILocation(line: 76, column: 9, scope: !16525, inlinedAt: !17202)
!17206 = !DILocation(line: 145, column: 4, scope: !16515, inlinedAt: !17198)
!17207 = !DILocation(line: 145, column: 8, scope: !16515, inlinedAt: !17198)
!17208 = !DILocation(line: 165, column: 2, scope: !16515, inlinedAt: !17198)
!17209 = !DILocation(line: 245, column: 25, scope: !17188)
!17210 = !DILocation(line: 259, column: 23, scope: !17188)
!17211 = !DILocation(line: 259, column: 21, scope: !17188)
!17212 = !DILocation(line: 261, column: 2, scope: !17188)
!17213 = !DILocation(line: 261, column: 9, scope: !17188)
!17214 = !DILocation(line: 261, column: 17, scope: !17188)
!17215 = !DILocation(line: 261, column: 25, scope: !17188)
!17216 = !DILocation(line: 261, column: 28, scope: !17188)
!17217 = !DILocation(line: 261, column: 37, scope: !17188)
!17218 = !DILocation(line: 261, column: 47, scope: !17188)
!17219 = !DILocation(line: 261, column: 44, scope: !17188)
!17220 = !DILocation(line: 0, scope: !17188)
!17221 = !DILocalVariable(name: "t", scope: !17222, file: !2089, line: 262, type: !2062)
!17222 = distinct !DILexicalBlock(scope: !17188, file: !2089, line: 261, column: 67)
!17223 = !DILocation(line: 262, column: 20, scope: !17222)
!17224 = !DILocation(line: 262, column: 24, scope: !17222)
!17225 = !DILocalVariable(name: "dt", scope: !17222, file: !2089, line: 263, type: !103)
!17226 = !DILocation(line: 263, column: 7, scope: !17222)
!17227 = !DILocation(line: 263, column: 12, scope: !17222)
!17228 = !DILocation(line: 263, column: 15, scope: !17222)
!17229 = !DILocation(line: 265, column: 16, scope: !17222)
!17230 = !DILocation(line: 265, column: 13, scope: !17222)
!17231 = !DILocation(line: 266, column: 3, scope: !17222)
!17232 = !DILocation(line: 266, column: 6, scope: !17222)
!17233 = !DILocation(line: 266, column: 13, scope: !17222)
!17234 = !DILocation(line: 267, column: 18, scope: !17222)
!17235 = !DILocation(line: 267, column: 3, scope: !17222)
!17236 = !DILocation(line: 269, column: 3, scope: !17222)
!17237 = !DILocation(line: 189, column: 60, scope: !16637, inlinedAt: !17238)
!17238 = distinct !DILocation(line: 269, column: 3, scope: !17222)
!17239 = !DILocation(line: 190, column: 23, scope: !16637, inlinedAt: !17238)
!17240 = !DILocation(line: 192, column: 2, scope: !16637, inlinedAt: !17238)
!17241 = !DILocation(line: 215, column: 22, scope: !16637, inlinedAt: !17238)
!17242 = !DILocation(line: 84, column: 56, scope: !16647, inlinedAt: !17243)
!17243 = distinct !DILocation(line: 215, column: 2, scope: !16637, inlinedAt: !17238)
!17244 = !DILocation(line: 98, column: 12, scope: !16647, inlinedAt: !17243)
!17245 = !DILocation(line: 95, column: 2, scope: !16647, inlinedAt: !17243)
!17246 = !DILocation(line: 270, column: 3, scope: !17222)
!17247 = !DILocation(line: 270, column: 6, scope: !17222)
!17248 = !DILocation(line: 270, column: 9, scope: !17222)
!17249 = !DILocation(line: 136, column: 70, scope: !16515, inlinedAt: !17250)
!17250 = distinct !DILocation(line: 271, column: 9, scope: !17222)
!17251 = !DILocation(line: 138, column: 2, scope: !16515, inlinedAt: !17250)
!17252 = !DILocation(line: 139, column: 19, scope: !16515, inlinedAt: !17250)
!17253 = !DILocation(line: 44, column: 15, scope: !16525, inlinedAt: !17254)
!17254 = distinct !DILocation(line: 145, column: 10, scope: !16515, inlinedAt: !17250)
!17255 = !DILocation(line: 53, column: 15, scope: !16525, inlinedAt: !17254)
!17256 = !DILocation(line: 55, column: 2, scope: !16525, inlinedAt: !17254)
!17257 = !DILocation(line: 76, column: 9, scope: !16525, inlinedAt: !17254)
!17258 = !DILocation(line: 145, column: 4, scope: !16515, inlinedAt: !17250)
!17259 = !DILocation(line: 145, column: 8, scope: !16515, inlinedAt: !17250)
!17260 = !DILocation(line: 165, column: 2, scope: !16515, inlinedAt: !17250)
!17261 = !DILocation(line: 271, column: 9, scope: !17222)
!17262 = !DILocation(line: 272, column: 25, scope: !17222)
!17263 = !DILocation(line: 272, column: 22, scope: !17222)
!17264 = distinct !{!17264, !17212, !17265}
!17265 = !DILocation(line: 273, column: 2, scope: !17188)
!17266 = !DILocation(line: 275, column: 6, scope: !17267)
!17267 = distinct !DILexicalBlock(scope: !17188, file: !2089, line: 275, column: 6)
!17268 = !DILocation(line: 275, column: 14, scope: !17267)
!17269 = !DILocation(line: 275, column: 6, scope: !17188)
!17270 = !DILocation(line: 276, column: 22, scope: !17271)
!17271 = distinct !DILexicalBlock(scope: !17267, file: !2089, line: 275, column: 23)
!17272 = !DILocation(line: 276, column: 3, scope: !17271)
!17273 = !DILocation(line: 276, column: 12, scope: !17271)
!17274 = !DILocation(line: 276, column: 19, scope: !17271)
!17275 = !DILocation(line: 277, column: 2, scope: !17271)
!17276 = !DILocation(line: 279, column: 15, scope: !17188)
!17277 = !DILocation(line: 279, column: 12, scope: !17188)
!17278 = !DILocation(line: 280, column: 21, scope: !17188)
!17279 = !DILocation(line: 282, column: 24, scope: !17188)
!17280 = !DILocation(line: 282, column: 2, scope: !17188)
!17281 = !DILocation(line: 284, column: 2, scope: !17188)
!17282 = !DILocation(line: 189, column: 60, scope: !16637, inlinedAt: !17283)
!17283 = distinct !DILocation(line: 284, column: 2, scope: !17188)
!17284 = !DILocation(line: 190, column: 23, scope: !16637, inlinedAt: !17283)
!17285 = !DILocation(line: 192, column: 2, scope: !16637, inlinedAt: !17283)
!17286 = !DILocation(line: 215, column: 22, scope: !16637, inlinedAt: !17283)
!17287 = !DILocation(line: 84, column: 56, scope: !16647, inlinedAt: !17288)
!17288 = distinct !DILocation(line: 215, column: 2, scope: !16637, inlinedAt: !17283)
!17289 = !DILocation(line: 98, column: 12, scope: !16647, inlinedAt: !17288)
!17290 = !DILocation(line: 95, column: 2, scope: !16647, inlinedAt: !17288)
!17291 = !DILocation(line: 285, column: 1, scope: !17188)
!17292 = distinct !DISubprogram(name: "sys_clock_tick_get", scope: !2089, file: !2089, line: 287, type: !17293, scopeLine: 288, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2059, retainedNodes: !223)
!17293 = !DISubroutineType(types: !17294)
!17294 = !{!186}
!17295 = !DILocalVariable(name: "t", scope: !17292, file: !2089, line: 289, type: !1940)
!17296 = !DILocation(line: 289, column: 11, scope: !17292)
!17297 = !DILocalVariable(name: "__i", scope: !17298, file: !2089, line: 291, type: !16508)
!17298 = distinct !DILexicalBlock(scope: !17292, file: !2089, line: 291, column: 2)
!17299 = !DILocation(line: 291, column: 2, scope: !17298)
!17300 = !DILocalVariable(name: "__key", scope: !17298, file: !2089, line: 291, type: !16508)
!17301 = !DILocation(line: 136, column: 70, scope: !16515, inlinedAt: !17302)
!17302 = distinct !DILocation(line: 291, column: 2, scope: !17298)
!17303 = !DILocation(line: 138, column: 2, scope: !16515, inlinedAt: !17302)
!17304 = !DILocation(line: 139, column: 19, scope: !16515, inlinedAt: !17302)
!17305 = !DILocation(line: 44, column: 15, scope: !16525, inlinedAt: !17306)
!17306 = distinct !DILocation(line: 145, column: 10, scope: !16515, inlinedAt: !17302)
!17307 = !DILocation(line: 53, column: 15, scope: !16525, inlinedAt: !17306)
!17308 = !DILocation(line: 55, column: 2, scope: !16525, inlinedAt: !17306)
!17309 = !DILocation(line: 76, column: 9, scope: !16525, inlinedAt: !17306)
!17310 = !DILocation(line: 145, column: 4, scope: !16515, inlinedAt: !17302)
!17311 = !DILocation(line: 145, column: 8, scope: !16515, inlinedAt: !17302)
!17312 = !DILocation(line: 165, column: 2, scope: !16515, inlinedAt: !17302)
!17313 = !DILocation(line: 291, column: 2, scope: !17314)
!17314 = distinct !DILexicalBlock(scope: !17298, file: !2089, line: 291, column: 2)
!17315 = !DILocation(line: 292, column: 7, scope: !17316)
!17316 = distinct !DILexicalBlock(scope: !17314, file: !2089, line: 291, column: 24)
!17317 = !DILocation(line: 292, column: 19, scope: !17316)
!17318 = !DILocation(line: 292, column: 17, scope: !17316)
!17319 = !DILocation(line: 292, column: 5, scope: !17316)
!17320 = !DILocation(line: 293, column: 2, scope: !17316)
!17321 = !DILocation(line: 189, column: 60, scope: !16637, inlinedAt: !17322)
!17322 = distinct !DILocation(line: 291, column: 2, scope: !17314)
!17323 = !DILocation(line: 190, column: 23, scope: !16637, inlinedAt: !17322)
!17324 = !DILocation(line: 192, column: 2, scope: !16637, inlinedAt: !17322)
!17325 = !DILocation(line: 215, column: 22, scope: !16637, inlinedAt: !17322)
!17326 = !DILocation(line: 84, column: 56, scope: !16647, inlinedAt: !17327)
!17327 = distinct !DILocation(line: 215, column: 2, scope: !16637, inlinedAt: !17322)
!17328 = !DILocation(line: 98, column: 12, scope: !16647, inlinedAt: !17327)
!17329 = !DILocation(line: 95, column: 2, scope: !16647, inlinedAt: !17327)
!17330 = distinct !{!17330, !17299, !17331}
!17331 = !DILocation(line: 293, column: 2, scope: !17298)
!17332 = !DILocation(line: 294, column: 9, scope: !17292)
!17333 = !DILocation(line: 294, column: 2, scope: !17292)
!17334 = distinct !DISubprogram(name: "sys_clock_tick_get_32", scope: !2089, file: !2089, line: 297, type: !5514, scopeLine: 298, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2059, retainedNodes: !223)
!17335 = !DILocation(line: 300, column: 19, scope: !17334)
!17336 = !DILocation(line: 300, column: 9, scope: !17334)
!17337 = !DILocation(line: 300, column: 2, scope: !17334)
!17338 = distinct !DISubprogram(name: "z_impl_k_uptime_ticks", scope: !2089, file: !2089, line: 306, type: !17293, scopeLine: 307, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2059, retainedNodes: !223)
!17339 = !DILocation(line: 308, column: 9, scope: !17338)
!17340 = !DILocation(line: 308, column: 2, scope: !17338)
!17341 = distinct !DISubprogram(name: "z_impl_k_busy_wait", scope: !2089, file: !2089, line: 319, type: !5524, scopeLine: 320, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2059, retainedNodes: !223)
!17342 = !DILocalVariable(name: "usec_to_wait", arg: 1, scope: !17341, file: !2089, line: 319, type: !173)
!17343 = !DILocation(line: 319, column: 34, scope: !17341)
!17344 = !DILocation(line: 321, column: 2, scope: !17341)
!17345 = !DILocation(line: 321, column: 2, scope: !17346)
!17346 = distinct !DILexicalBlock(scope: !17341, file: !2089, line: 321, column: 2)
!17347 = !DILocation(line: 322, column: 6, scope: !17348)
!17348 = distinct !DILexicalBlock(scope: !17341, file: !2089, line: 322, column: 6)
!17349 = !DILocation(line: 322, column: 19, scope: !17348)
!17350 = !DILocation(line: 322, column: 6, scope: !17341)
!17351 = !DILocation(line: 323, column: 3, scope: !17352)
!17352 = distinct !DILexicalBlock(scope: !17348, file: !2089, line: 322, column: 26)
!17353 = !DILocation(line: 323, column: 3, scope: !17354)
!17354 = distinct !DILexicalBlock(scope: !17352, file: !2089, line: 323, column: 3)
!17355 = !DILocation(line: 324, column: 3, scope: !17352)
!17356 = !DILocalVariable(name: "start_cycles", scope: !17341, file: !2089, line: 328, type: !173)
!17357 = !DILocation(line: 328, column: 11, scope: !17341)
!17358 = !DILocation(line: 328, column: 26, scope: !17341)
!17359 = !DILocalVariable(name: "cycles_to_wait", scope: !17341, file: !2089, line: 331, type: !173)
!17360 = !DILocation(line: 331, column: 11, scope: !17341)
!17361 = !DILocation(line: 332, column: 13, scope: !17341)
!17362 = !DILocation(line: 332, column: 3, scope: !17341)
!17363 = !DILocation(line: 333, column: 13, scope: !17341)
!17364 = !DILocation(line: 333, column: 3, scope: !17341)
!17365 = !DILocation(line: 332, column: 26, scope: !17341)
!17366 = !DILocation(line: 333, column: 43, scope: !17341)
!17367 = !DILocation(line: 331, column: 28, scope: !17341)
!17368 = !DILocation(line: 337, column: 2, scope: !17341)
!17369 = !DILocalVariable(name: "current_cycles", scope: !17370, file: !2089, line: 338, type: !173)
!17370 = distinct !DILexicalBlock(scope: !17371, file: !2089, line: 337, column: 11)
!17371 = distinct !DILexicalBlock(scope: !17372, file: !2089, line: 337, column: 2)
!17372 = distinct !DILexicalBlock(scope: !17341, file: !2089, line: 337, column: 2)
!17373 = !DILocation(line: 338, column: 12, scope: !17370)
!17374 = !DILocation(line: 338, column: 29, scope: !17370)
!17375 = !DILocation(line: 341, column: 8, scope: !17376)
!17376 = distinct !DILexicalBlock(scope: !17370, file: !2089, line: 341, column: 7)
!17377 = !DILocation(line: 341, column: 25, scope: !17376)
!17378 = !DILocation(line: 341, column: 23, scope: !17376)
!17379 = !DILocation(line: 341, column: 42, scope: !17376)
!17380 = !DILocation(line: 341, column: 39, scope: !17376)
!17381 = !DILocation(line: 341, column: 7, scope: !17370)
!17382 = !DILocation(line: 342, column: 4, scope: !17383)
!17383 = distinct !DILexicalBlock(scope: !17376, file: !2089, line: 341, column: 58)
!17384 = !DILocation(line: 337, column: 2, scope: !17371)
!17385 = distinct !{!17385, !17386, !17387}
!17386 = !DILocation(line: 337, column: 2, scope: !17372)
!17387 = !DILocation(line: 344, column: 2, scope: !17372)
!17388 = !DILocation(line: 348, column: 2, scope: !17341)
!17389 = !DILocation(line: 348, column: 2, scope: !17390)
!17390 = distinct !DILexicalBlock(scope: !17341, file: !2089, line: 348, column: 2)
!17391 = !DILocation(line: 349, column: 1, scope: !17341)
!17392 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !109, file: !109, line: 1675, type: !5514, scopeLine: 1676, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2059, retainedNodes: !223)
!17393 = !DILocation(line: 1677, column: 9, scope: !17392)
!17394 = !DILocation(line: 1677, column: 2, scope: !17392)
!17395 = distinct !DISubprogram(name: "sys_clock_hw_cycles_per_sec", scope: !8763, file: !8763, line: 59, type: !2844, scopeLine: 60, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2059, retainedNodes: !223)
!17396 = !DILocation(line: 64, column: 2, scope: !17395)
!17397 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !17398, file: !17398, line: 24, type: !5514, scopeLine: 25, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2059, retainedNodes: !223)
!17398 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/misc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17399 = !DILocation(line: 26, column: 9, scope: !17397)
!17400 = !DILocation(line: 26, column: 2, scope: !17397)
!17401 = distinct !DISubprogram(name: "sys_clock_timeout_end_calc", scope: !2089, file: !2089, line: 364, type: !17402, scopeLine: 365, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2059, retainedNodes: !223)
!17402 = !DISubroutineType(types: !17403)
!17403 = !{!1940, !16487}
!17404 = !DILocalVariable(name: "timeout", arg: 1, scope: !17401, file: !2089, line: 364, type: !16487)
!17405 = !DILocation(line: 364, column: 49, scope: !17401)
!17406 = !DILocalVariable(name: "dt", scope: !17401, file: !2089, line: 366, type: !1442)
!17407 = !DILocation(line: 366, column: 12, scope: !17401)
!17408 = !DILocation(line: 368, column: 6, scope: !17409)
!17409 = distinct !DILexicalBlock(scope: !17401, file: !2089, line: 368, column: 6)
!17410 = !DILocation(line: 368, column: 6, scope: !17401)
!17411 = !DILocation(line: 369, column: 3, scope: !17412)
!17412 = distinct !DILexicalBlock(scope: !17409, file: !2089, line: 368, column: 40)
!17413 = !DILocation(line: 370, column: 13, scope: !17414)
!17414 = distinct !DILexicalBlock(scope: !17409, file: !2089, line: 370, column: 13)
!17415 = !DILocation(line: 370, column: 13, scope: !17409)
!17416 = !DILocation(line: 371, column: 10, scope: !17417)
!17417 = distinct !DILexicalBlock(scope: !17414, file: !2089, line: 370, column: 47)
!17418 = !DILocation(line: 371, column: 3, scope: !17417)
!17419 = !DILocation(line: 374, column: 16, scope: !17420)
!17420 = distinct !DILexicalBlock(scope: !17414, file: !2089, line: 372, column: 9)
!17421 = !DILocation(line: 374, column: 6, scope: !17420)
!17422 = !DILocation(line: 376, column: 43, scope: !17423)
!17423 = distinct !DILexicalBlock(scope: !17420, file: !2089, line: 376, column: 7)
!17424 = !DILocation(line: 376, column: 58, scope: !17423)
!17425 = !DILocation(line: 376, column: 7, scope: !17420)
!17426 = !DILocation(line: 377, column: 11, scope: !17427)
!17427 = distinct !DILexicalBlock(scope: !17423, file: !2089, line: 376, column: 64)
!17428 = !DILocation(line: 377, column: 4, scope: !17427)
!17429 = !DILocation(line: 379, column: 10, scope: !17420)
!17430 = !DILocation(line: 379, column: 33, scope: !17420)
!17431 = !DILocation(line: 379, column: 31, scope: !17420)
!17432 = !DILocation(line: 379, column: 3, scope: !17420)
!17433 = !DILocation(line: 381, column: 1, scope: !17401)
!17434 = distinct !DISubprogram(name: "boot_banner", scope: !17435, file: !17435, line: 26, type: !253, scopeLine: 27, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2713, retainedNodes: !223)
!17435 = !DIFile(filename: "zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17436 = !DILocation(line: 34, column: 2, scope: !17434)
!17437 = !DILocation(line: 36, column: 1, scope: !17434)
