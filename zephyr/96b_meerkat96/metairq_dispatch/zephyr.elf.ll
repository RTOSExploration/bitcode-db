; ModuleID = 'build/96b_meerkat96/metairq_dispatch/zephyr/zephyr.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7em-none-unknown-eabi"

%struct._isr_table_entry = type { i8*, void (i8*)* }
%struct.log_source_const_data = type { i8*, i8 }
%struct.k_thread = type { %struct._thread_base, %struct._callee_saved, i8*, %union.anon, i32, %struct.k_heap*, %struct._thread_arch }
%struct._thread_base = type { %union.anon, %union.anon*, i8, i8, %union.anon.2, i32, i8*, %struct._timeout }
%union.anon.2 = type { i16 }
%struct._timeout = type { %struct._dnode, void (%struct._timeout*)*, i64 }
%struct._dnode = type { %union.anon.0, %union.anon.0 }
%union.anon.0 = type { %struct._dnode* }
%struct._callee_saved = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%union.anon = type { %struct._dnode }
%struct.k_heap = type { %struct.sys_heap, %union.anon, %struct.k_spinlock }
%struct.sys_heap = type { %struct.z_heap*, i8*, i32 }
%struct.z_heap = type { [2 x i32], i32, i32, [0 x %struct.k_spinlock] }
%struct.k_spinlock = type { i32 }
%struct._thread_arch = type { i32, i32 }
%struct.z_thread_stack_element = type { i8 }
%struct._static_thread_data = type { %struct.k_thread*, %struct.z_thread_stack_element*, i32, void (i8*, i8*, i8*)*, i8*, i8*, i8*, i32, i32, i32, void ()*, i8* }
%struct.k_sem = type { %union.anon, i32, i32 }
%struct.thread_rec = type { %struct.k_thread, %struct.k_msgq, [16 x %struct.msg] }
%struct.k_msgq = type { %union.anon, %struct.k_spinlock, i32, i32, i8*, i8*, i8*, i8*, i32, i8 }
%struct.msg = type { i32, i32, i32, i32, i32 }
%struct.anon.3 = type { i32, [40 x i32], [4 x %struct.anon.4] }
%struct.anon.4 = type { i32, [20 x i32] }
%struct.init_entry = type { i32 (%struct.device*)*, %struct.device* }
%struct.device = type { i8*, i8*, i8*, %struct.device_state*, i8*, i16* }
%struct.device_state = type { i8, i8 }
%struct.pinctrl_soc_pinmux = type { i32, i32, i32, i8 }
%struct.imx_gpio_config = type { %struct.k_spinlock, %struct.GPIO_Type*, %struct.pinctrl_soc_pinmux*, i8 }
%struct.GPIO_Type = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.gpio_driver_api = type { i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i32*)*, i32 (%struct.device*, i32, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i8, i32, i32)*, i32 (%struct.device*, %struct.gpio_callback*, i1)*, i32 (%struct.device*)* }
%struct.gpio_callback = type { %struct._snode, void (%struct.device*, %struct.gpio_callback*, i32)*, i32 }
%struct._snode = type { %struct._snode* }
%struct.imx_gpio_data = type { %struct.k_spinlock, %struct._slist }
%struct._slist = type { %struct._snode*, %struct._snode* }
%struct._isr_list = type { i32, i32, i8*, i8* }
%struct.imx_uart_config = type { %struct.UART_Type*, i32, i8, %struct.pinctrl_dev_config*, void (%struct.device*)* }
%struct.UART_Type = type { i32, [60 x i8], i32, [60 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.pinctrl_dev_config = type { %struct.pinctrl_state*, i8 }
%struct.pinctrl_state = type { %struct.pinctrl_soc_pin*, i8, i8 }
%struct.pinctrl_soc_pin = type { %struct.pinctrl_soc_pinmux, i32 }
%struct.uart_driver_api = type { i32 (%struct.device*, i8*)*, void (%struct.device*, i8)*, i32 (%struct.device*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, i8*, i32)*, i32 (%struct.device*, i8*, i32)*, void (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*, void (%struct.device*, i8*)*, i8*)* }
%struct.uart_config = type { i32, i8, i8, i8, i8 }
%struct.imx_uart_data = type { void (%struct.device*, i8*)*, i8* }
%struct.z_kernel = type { [1 x %struct._cpu], %struct._ready_q }
%struct._cpu = type { i32, i8*, %struct.k_thread*, %struct.k_thread*, %struct.k_thread*, i32, i8, %struct._cpu_arch }
%struct._cpu_arch = type {}
%struct._ready_q = type { %struct.k_thread*, %struct._dnode }
%struct.__va_list = type { i8* }
%struct.cbprintf_package_desc = type { i8, i8, i8, i8 }
%struct.str_context = type { i8*, i32, i32 }
%struct.chunk_unit_t = type { [8 x i8] }
%struct.anon = type { %union.argument_value, %struct.conversion }
%union.argument_value = type { i64 }
%struct.conversion = type { [3 x i8], i8, %struct.k_spinlock, %struct.k_spinlock }
%struct.CCM_Type = type { i32, i32, i32, i32, [2032 x i8], [33 x %struct.anon.26], [13808 x i8], [191 x %struct.anon.26], [13328 x i8], [125 x %struct.anon.1] }
%struct.anon.26 = type { i32, i32, i32, i32 }
%struct.anon.1 = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [48 x i8], i32, i32, i32, i32 }
%struct.RDC_Type = type { i32, [32 x i8], i32, i32, i32, [464 x i8], [27 x i32], [404 x i8], [118 x i32], [552 x i8], [52 x %struct.anon.26] }
%struct.WDOG_Type = type { i16, i16, i16, i16, i16 }
%struct.__esf = type { %struct.__basic_sf }
%struct.__basic_sf = type { %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, i32 }
%struct.k_fifo = type { %struct.k_queue }
%struct.k_queue = type { %struct._sflist, %struct.k_spinlock, %union.anon }
%struct._sflist = type { %struct.k_spinlock*, %struct.k_spinlock* }
%struct._uart_init_config = type { i32, i32, i32, i32, i32, i32 }
%struct.CCM_ANALOG_Type = type { [96 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, [12 x i8], i32, [12 x i8], i32, [12 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [12 x i8], i32, [12 x i8], i32, [12 x i8], i32, i32, i32, i32, i32, [12 x i8], i32, [12 x i8], i32, [12 x i8], i32, i32, i32, i32 }
%struct._gpio_init_config = type { i32, i32, i32 }
%struct.GPT_Type = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.ECSPI_Type = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, [28 x i8], i32 }
%struct.CAN_Type = type { i32, i32, i32, [4 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [8 x i8], i32, i32, i32, [48 x i8], [64 x %struct.anon.26], [1024 x i8], [64 x i32], [96 x i8], i32 }
%struct.I2C_Type = type { i16, [2 x i8], i16, [2 x i8], i16, [2 x i8], i16, [2 x i8], i16 }
%struct.rbnode = type { [2 x %struct.rbnode*] }
%struct._priq_rb = type { %struct.rbtree, i32 }
%struct.rbtree = type { %struct.rbnode*, i1 (%struct.rbnode*, %struct.rbnode*)*, i32 }
%struct._rb_foreach = type { %struct.rbnode**, i8*, i32 }
%struct._priq_mq = type { [32 x %struct._dnode], i32 }

@_irq_vector_table = dso_local local_unnamed_addr global [127 x i32] [i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32)], section ".gnu.linkonce.irq_vector_table", align 4, !dbg !0
@_sw_isr_table = dso_local local_unnamed_addr global [127 x %struct._isr_table_entry] [%struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 536857128 to i8*), void (i8*)* inttoptr (i32 536856433 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 536857104 to i8*), void (i8*)* inttoptr (i32 536845181 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 536857104 to i8*), void (i8*)* inttoptr (i32 536845181 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }], section ".gnu.linkonce.sw_isr_table", align 4, !dbg !5
@llvm.compiler.used = appending global [18 x i8*] [i8* bitcast (%struct._static_thread_data* @_k_thread_data_metairq_thread to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_main to i8*), i8* bitcast (%struct.k_sem* @report_cookie to i8*), i8* bitcast (%struct.k_msgq* @hw_msgs to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_cbprintf_package to i8*), i8* bitcast (%struct.init_entry* @__init_nxp_mcimx7_init to i8*), i8* bitcast (%struct.init_entry* @__init_uart_console_init to i8*), i8* bitcast (%struct.device* @__device_dts_ord_25 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_25 to i8*), i8* bitcast (%struct._isr_list* @imx_gpio_0_init.__isr_imx_gpio_port_isr_irq_0 to i8*), i8* bitcast (%struct._isr_list* @imx_gpio_0_init.__isr_imx_gpio_port_isr_irq_1 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_198 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_198 to i8*), i8* bitcast (%struct._isr_list* @irq_config_func_0.__isr_uart_imx_isr_irq_0 to i8*), i8* bitcast (%struct.init_entry* @__init_sys_clock_driver_init to i8*), i8* bitcast (%struct.init_entry* @__init_imx_pinctrl_init to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_os to i8*), i8* bitcast (%struct.init_entry* @__init_statics_init_pre to i8*)], section "llvm.metadata"
@.str = private unnamed_addr constant [5 x i8] c"main\00", align 1
@log_const_main = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0), i8 3 }, section ".log_const_main", align 4, !dbg !25
@_k_thread_obj_metairq_thread = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !318
@_k_thread_stack_metairq_thread = dso_local global [2048 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22CMAKE_SOURCE_DIR/src/main.c\22.1", align 8, !dbg !314
@.str.1 = private unnamed_addr constant [15 x i8] c"metairq_thread\00", align 1
@_k_thread_data_metairq_thread = dso_local global %struct._static_thread_data { %struct.k_thread* @_k_thread_obj_metairq_thread, %struct.z_thread_stack_element* getelementptr inbounds ([2048 x %struct.z_thread_stack_element], [2048 x %struct.z_thread_stack_element]* @_k_thread_stack_metairq_thread, i32 0, i32 0), i32 2048, void (i8*, i8*, i8*)* @metairq_fn, i8* null, i8* null, i8* null, i32 -16, i32 0, i32 0, void ()* null, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i32 0, i32 0) }, section ".__static_thread_data.static._k_thread_data_metairq_thread", align 4, !dbg !118
@metairq_thread = dso_local local_unnamed_addr constant %struct.k_thread* @_k_thread_obj_metairq_thread, align 4, !dbg !265
@report_cookie = dso_local global %struct.k_sem { %union.anon { %struct._dnode { %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_sem, %struct.k_sem* @report_cookie, i32 0, i32 0, i32 0) }, %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_sem, %struct.k_sem* @report_cookie, i32 0, i32 0, i32 0) } } }, i32 1, i32 1 }, section "._k_sem.static.report_cookie", align 4, !dbg !269
@threads = internal global [4 x %struct.thread_rec] zeroinitializer, align 8, !dbg !276
@thread_stacks = dso_local global [4 x [2048 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22CMAKE_SOURCE_DIR/src/main.c\22.0", align 8, !dbg !309
@stats = dso_local global %struct.anon.3 zeroinitializer, align 4, !dbg !320
@.str.2 = private unnamed_addr constant [46 x i8] c"%c: Thread %d queue full, message %d dropped\0A\00", align 1
@.str.3 = private unnamed_addr constant [38 x i8] c"%c: Starting Thread%d at priority %d\0A\00", align 1
@.str.4 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.5 = private unnamed_addr constant [9 x i8] c"ret == 0\00", align 1
@.str.6 = private unnamed_addr constant [28 x i8] c"CMAKE_SOURCE_DIR/src/main.c\00", align 1
@.str.7 = private unnamed_addr constant [45 x i8] c"%c: M%d T%d mirq %d disp %d proc %d real %d\0A\00", align 1
@.str.8 = private unnamed_addr constant [49 x i8] c"%c:         ---------- Latency (cyc) ----------\0A\00", align 1
@.str.9 = private unnamed_addr constant [49 x i8] c"%c:             Best    Worst     Mean    Stdev\0A\00", align 1
@.str.10 = private unnamed_addr constant [29 x i8] c"%c: MetaIRQ %8d %8d %8d %8d\0A\00", align 1
@.str.11 = private unnamed_addr constant [29 x i8] c"%c: No events for thread %d\0A\00", align 1
@.str.12 = private unnamed_addr constant [30 x i8] c"%c: Thread%d %8d %8d %8d %8d\0A\00", align 1
@.str.13 = private unnamed_addr constant [27 x i8] c"%c: MetaIRQ Test Complete\0A\00", align 1
@hw_msgs = dso_local global %struct.k_msgq { %union.anon { %struct._dnode { %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_msgq, %struct.k_msgq* @hw_msgs, i32 0, i32 0, i32 0) }, %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_msgq, %struct.k_msgq* @hw_msgs, i32 0, i32 0, i32 0) } } }, %struct.k_spinlock zeroinitializer, i32 20, i32 2, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @_k_fifo_buf_hw_msgs, i32 0, i32 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @_k_fifo_buf_hw_msgs, i64 1, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @_k_fifo_buf_hw_msgs, i32 0, i32 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @_k_fifo_buf_hw_msgs, i32 0, i32 0), i32 0, i8 0 }, section "._k_msgq.static.hw_msgs", align 4, !dbg !346
@_k_fifo_buf_hw_msgs = internal global [40 x i8] zeroinitializer, section ".noinit.\22CMAKE_SOURCE_DIR/src/msgdev.c\22.0", align 4, !dbg !383
@max_duty_cyc = dso_local local_unnamed_addr global i32 0, align 4, !dbg !379
@timeout = internal global %struct._timeout zeroinitializer, align 8, !dbg !352
@.str.14 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.24 = private unnamed_addr constant [9 x i8] c"ret == 0\00", align 1
@.str.2.16 = private unnamed_addr constant [30 x i8] c"CMAKE_SOURCE_DIR/src/msgdev.c\00", align 1
@msg_seq = dso_local local_unnamed_addr global i32 0, align 4, !dbg !381
@.str.3.15 = private unnamed_addr constant [14 x i8] c"t == &timeout\00", align 1
@.str.4.19 = private unnamed_addr constant [35 x i8] c"ERROR: Queue full, event dropped!\0A\00", align 1
@rand32.state = internal unnamed_addr global i64 0, align 8, !dbg !386
@.str.25 = private unnamed_addr constant [17 x i8] c"cbprintf_package\00", align 1
@log_const_cbprintf_package = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.25, i32 0, i32 0), i8 3 }, section ".log_const_cbprintf_package", align 4, !dbg !412
@.str.1.27 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.2.28 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.3.29 = private unnamed_addr constant [39 x i8] c"ZEPHYR_BASE/lib/os/cbprintf_packaged.c\00", align 1
@.str.4.30 = private unnamed_addr constant [33 x i8] c"\09String with too many arguments\0A\00", align 1
@.str.5.31 = private unnamed_addr constant [26 x i8] c"\09str_ptr_pos[] too small\0A\00", align 1
@.str.6.32 = private unnamed_addr constant [21 x i8] c"\09unexpected size %u\0A\00", align 1
@.str.7.33 = private unnamed_addr constant [23 x i8] c"\09too many format args\0A\00", align 1
@.str.8.34 = private unnamed_addr constant [27 x i8] c"in_packaged != ((void *)0)\00", align 1
@.str.9.35 = private unnamed_addr constant [168 x i8] c"%c: (unsigned) char * used for %%p argument. It's recommended to cast it to void * because it may cause misbehavior in certain configurations. String:\22%s\22 argument:%d\0A\00", align 1
@.str.10.36 = private unnamed_addr constant [31 x i8] c"scpy_cnt < sizeof(cpy_str_pos)\00", align 1
@.str.11.37 = private unnamed_addr constant [32 x i8] c"keep_cnt < sizeof(keep_str_pos)\00", align 1
@__rodata_region_start = external dso_local global [0 x i8], align 1
@__rodata_region_end = external dso_local global [0 x i8], align 1
@.str.12.38 = private unnamed_addr constant [24 x i8] c"packaged != ((void *)0)\00", align 1
@_char_out = dso_local local_unnamed_addr global i32 (i32)* @arch_printk_char_out, align 4, !dbg !434
@.str.43 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.44 = private unnamed_addr constant [17 x i8] c"chunk_used(h, c)\00", align 1
@.str.2.45 = private unnamed_addr constant [26 x i8] c"ZEPHYR_BASE/lib/os/heap.c\00", align 1
@.str.3.46 = private unnamed_addr constant [56 x i8] c"\09unexpected heap state (double-free?) for memory at %p\0A\00", align 1
@.str.4.47 = private unnamed_addr constant [38 x i8] c"left_chunk(h, right_chunk(h, c)) == c\00", align 1
@.str.5.48 = private unnamed_addr constant [60 x i8] c"\09corrupted heap bounds (buffer overflow?) for memory at %p\0A\00", align 1
@.str.6.49 = private unnamed_addr constant [27 x i8] c"(align & (align - 1)) == 0\00", align 1
@.str.7.50 = private unnamed_addr constant [29 x i8] c"\09align must be a power of 2\0A\00", align 1
@.str.8.51 = private unnamed_addr constant [22 x i8] c"bytes / 8U <= 0x7fffU\00", align 1
@.str.9.52 = private unnamed_addr constant [23 x i8] c"\09heap size is too big\0A\00", align 1
@.str.10.53 = private unnamed_addr constant [33 x i8] c"bytes > heap_footer_bytes(bytes)\00", align 1
@.str.11.54 = private unnamed_addr constant [25 x i8] c"\09heap size is too small\0A\00", align 1
@.str.12.55 = private unnamed_addr constant [41 x i8] c"heap_sz > chunksz(sizeof(struct z_heap))\00", align 1
@.str.13.56 = private unnamed_addr constant [43 x i8] c"chunk0_size + min_chunk_size(h) <= heap_sz\00", align 1
@.str.59 = private unnamed_addr constant [6 x i8] c"(nil)\00", align 1
@__init_nxp_mcimx7_init = internal constant %struct.init_entry { i32 (%struct.device*)* @nxp_mcimx7_init, %struct.device* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !444
@.str.68 = private unnamed_addr constant [5 x i8] c"%c: \00", align 1
@.str.1.70 = private unnamed_addr constant [6 x i8] c"%02x \00", align 1
@.str.2.71 = private unnamed_addr constant [4 x i8] c"   \00", align 1
@.str.3.69 = private unnamed_addr constant [2 x i8] c"|\00", align 1
@.str.4.73 = private unnamed_addr constant [3 x i8] c"%c\00", align 1
@.str.5.74 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.6.72 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.75 = private unnamed_addr constant [52 x i8] c"%c: r0/a1:  0x%08x  r1/a2:  0x%08x  r2/a3:  0x%08x\0A\00", align 1
@.str.1.76 = private unnamed_addr constant [52 x i8] c"%c: r3/a4:  0x%08x r12/ip:  0x%08x r14/lr:  0x%08x\0A\00", align 1
@.str.2.77 = private unnamed_addr constant [20 x i8] c"%c:  xpsr:  0x%08x\0A\00", align 1
@.str.3.78 = private unnamed_addr constant [51 x i8] c"%c: Faulting instruction address (r15/pc): 0x%08x\0A\00", align 1
@.str.79 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.80 = private unnamed_addr constant [27 x i8] c"prio <= ((1UL << (4)) - 1)\00", align 1
@.str.2.81 = private unnamed_addr constant [47 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/irq_manage.c\00", align 1
@.str.3.82 = private unnamed_addr constant [64 x i8] c"\09invalid priority %d for %d irq! values must be less than %lu\0A\0A\00", align 1
@_vector_start = external dso_local global [0 x i8], align 1
@.str.85 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.86 = private unnamed_addr constant [19 x i8] c"esf != ((void *)0)\00", align 1
@.str.2.87 = private unnamed_addr constant [51 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/cortex_m/fault.c\00", align 1
@.str.3.88 = private unnamed_addr constant [62 x i8] c"\09ESF could not be retrieved successfully. Shall never occur.\0A\00", align 1
@.str.4.100 = private unnamed_addr constant [48 x i8] c"%c: SPSEL in thread mode does not indicate PSP\0A\00", align 1
@.str.5.92 = private unnamed_addr constant [28 x i8] c"%c: ***** HARD FAULT *****\0A\00", align 1
@.str.6.93 = private unnamed_addr constant [38 x i8] c"%c:   Bus fault on vector table read\0A\00", align 1
@.str.7.94 = private unnamed_addr constant [19 x i8] c"%c:   Debug event\0A\00", align 1
@.str.8.95 = private unnamed_addr constant [36 x i8] c"%c:   Fault escalation (see below)\0A\00", align 1
@.str.9.96 = private unnamed_addr constant [33 x i8] c"%c: ARCH_EXCEPT with reason %x\0A\0A\00", align 1
@.str.10.97 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.11.98 = private unnamed_addr constant [36 x i8] c"\09Fault escalation without FSR info\0A\00", align 1
@.str.12.99 = private unnamed_addr constant [48 x i8] c"\09HardFault without HFSR info Shall never occur\0A\00", align 1
@.str.13.90 = private unnamed_addr constant [27 x i8] c"%c: ***** MPU FAULT *****\0A\00", align 1
@.str.14.91 = private unnamed_addr constant [56 x i8] c"%c:   Stacking error (context area might be not valid)\0A\00", align 1
@.str.15 = private unnamed_addr constant [24 x i8] c"%c:   Unstacking error\0A\00", align 1
@.str.16 = private unnamed_addr constant [29 x i8] c"%c:   Data Access Violation\0A\00", align 1
@.str.17 = private unnamed_addr constant [27 x i8] c"%c:   MMFAR Address: 0x%x\0A\00", align 1
@.str.18 = private unnamed_addr constant [36 x i8] c"%c:   Instruction Access Violation\0A\00", align 1
@.str.19 = private unnamed_addr constant [52 x i8] c"%c:   Floating-point lazy state preservation error\0A\00", align 1
@.str.20 = private unnamed_addr constant [74 x i8] c"!(((SCB_Type *) ((0xE000E000UL) + 0x0D00UL) )->CFSR & (1UL << (0U + 4U)))\00", align 1
@.str.21 = private unnamed_addr constant [100 x i8] c"\09Stacking or Data Access Violation error without stack guard, user-mode or null-pointer detection\0A\0A\00", align 1
@.str.22 = private unnamed_addr constant [27 x i8] c"%c: ***** BUS FAULT *****\0A\00", align 1
@.str.23 = private unnamed_addr constant [22 x i8] c"%c:   Stacking error\0A\00", align 1
@.str.24 = private unnamed_addr constant [30 x i8] c"%c:   Precise data bus error\0A\00", align 1
@.str.25.89 = private unnamed_addr constant [26 x i8] c"%c:   BFAR Address: 0x%x\0A\00", align 1
@.str.26 = private unnamed_addr constant [32 x i8] c"%c:   Imprecise data bus error\0A\00", align 1
@.str.27 = private unnamed_addr constant [29 x i8] c"%c:   Instruction bus error\0A\00", align 1
@.str.28 = private unnamed_addr constant [29 x i8] c"%c: ***** USAGE FAULT *****\0A\00", align 1
@.str.29 = private unnamed_addr constant [24 x i8] c"%c:   Division by zero\0A\00", align 1
@.str.30 = private unnamed_addr constant [31 x i8] c"%c:   Unaligned memory access\0A\00", align 1
@.str.31 = private unnamed_addr constant [35 x i8] c"%c:   No coprocessor instructions\0A\00", align 1
@.str.32 = private unnamed_addr constant [42 x i8] c"%c:   Illegal load of EXC_RETURN into PC\0A\00", align 1
@.str.33 = private unnamed_addr constant [31 x i8] c"%c:   Illegal use of the EPSR\0A\00", align 1
@.str.34 = private unnamed_addr constant [48 x i8] c"%c:   Attempt to execute undefined instruction\0A\00", align 1
@.str.35 = private unnamed_addr constant [41 x i8] c"%c: ***** Debug monitor exception *****\0A\00", align 1
@.str.36 = private unnamed_addr constant [24 x i8] c"%c: ***** %s %d) *****\0A\00", align 1
@.str.37 = private unnamed_addr constant [21 x i8] c"Reserved Exception (\00", align 1
@.str.38 = private unnamed_addr constant [25 x i8] c"Spurious interrupt (IRQ \00", align 1
@_stdout_hook = internal unnamed_addr global i32 (i32)* @_stdout_hook_default, align 4, !dbg !873
@__init_uart_console_init = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_console_init, %struct.device* null }, section ".z_init_PRE_KERNEL_160_", align 4, !dbg !883
@mcux_igpio_pinmux_0 = dso_local constant [16 x %struct.pinctrl_soc_pinmux] [%struct.pinctrl_soc_pinmux { i32 808189952, i32 808190000, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808189956, i32 808190004, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808189960, i32 808190008, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808189964, i32 808190012, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808189968, i32 808190016, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808189972, i32 808190020, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808189976, i32 808190024, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808189980, i32 808190028, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808648724, i32 808649324, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808648728, i32 808649328, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808648732, i32 808649332, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808648736, i32 808649336, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808648740, i32 808649340, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808648744, i32 808649344, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808648748, i32 808649348, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808648752, i32 808649352, i32 0, i8 0 }], align 4, !dbg !989
@__devicehdl_dts_ord_25 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !1172
@.str.113 = private unnamed_addr constant [14 x i8] c"gpio@30200000\00", align 1
@imx_gpio_0_config = internal constant %struct.imx_gpio_config { %struct.k_spinlock { i32 -1 }, %struct.GPIO_Type* inttoptr (i32 807403520 to %struct.GPIO_Type*), %struct.pinctrl_soc_pinmux* getelementptr inbounds ([16 x %struct.pinctrl_soc_pinmux], [16 x %struct.pinctrl_soc_pinmux]* @mcux_igpio_pinmux_0, i32 0, i32 0), i8 16 }, align 4, !dbg !1125
@imx_gpio_driver_api = internal constant %struct.gpio_driver_api { i32 (%struct.device*, i8, i32)* @imx_gpio_configure, i32 (%struct.device*, i32*)* @imx_gpio_port_get_raw, i32 (%struct.device*, i32, i32)* @imx_gpio_port_set_masked_raw, i32 (%struct.device*, i32)* @imx_gpio_port_set_bits_raw, i32 (%struct.device*, i32)* @imx_gpio_port_clear_bits_raw, i32 (%struct.device*, i32)* @imx_gpio_port_toggle_bits, i32 (%struct.device*, i8, i32, i32)* @imx_gpio_pin_interrupt_configure, i32 (%struct.device*, %struct.gpio_callback*, i1)* @imx_gpio_manage_callback, i32 (%struct.device*)* null }, align 4, !dbg !1156
@__devstate_dts_ord_25 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1123
@imx_gpio_0_data = internal global %struct.imx_gpio_data zeroinitializer, align 4, !dbg !1111
@__device_dts_ord_25 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.113, i32 0, i32 0), i8* bitcast (%struct.imx_gpio_config* @imx_gpio_0_config to i8*), i8* bitcast (%struct.gpio_driver_api* @imx_gpio_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_25, i8* bitcast (%struct.imx_gpio_data* @imx_gpio_0_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_25, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1099
@__init___device_dts_ord_25 = internal constant %struct.init_entry { i32 (%struct.device*)* @imx_gpio_0_init, %struct.device* @__device_dts_ord_25 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1101
@.str.1.114 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.24.120 = private unnamed_addr constant [24 x i8] c"pin < config->mux_count\00", align 1
@.str.25.121 = private unnamed_addr constant [36 x i8] c"ZEPHYR_BASE/drivers/gpio/gpio_imx.c\00", align 1
@.str.26.115 = private unnamed_addr constant [9 x i8] c"callback\00", align 1
@.str.27.116 = private unnamed_addr constant [53 x i8] c"ZEPHYR_BASE/include/zephyr/drivers/gpio/gpio_utils.h\00", align 1
@.str.28.117 = private unnamed_addr constant [15 x i8] c"\09No callback!\0A\00", align 1
@.str.29.118 = private unnamed_addr constant [18 x i8] c"callback->handler\00", align 1
@.str.30.119 = private unnamed_addr constant [23 x i8] c"\09No callback handler!\0A\00", align 1
@imx_gpio_0_init.__isr_imx_gpio_port_isr_irq_0 = internal global %struct._isr_list { i32 64, i32 0, i8* bitcast (void (%struct.device*)* @imx_gpio_port_isr to i8*), i8* bitcast (%struct.device* @__device_dts_ord_25 to i8*) }, section ".intList", align 4, !dbg !1158
@imx_gpio_0_init.__isr_imx_gpio_port_isr_irq_1 = internal global %struct._isr_list { i32 65, i32 0, i8* bitcast (void (%struct.device*)* @imx_gpio_port_isr to i8*), i8* bitcast (%struct.device* @__device_dts_ord_25 to i8*) }, section ".intList", align 4, !dbg !1169
@.str.31.123 = private unnamed_addr constant [12 x i8] c"cb->handler\00", align 1
@__devicehdl_dts_ord_198 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !1177
@.str.126 = private unnamed_addr constant [14 x i8] c"uart@30860000\00", align 1
@imx_uart_0_config = internal constant %struct.imx_uart_config { %struct.UART_Type* inttoptr (i32 814088192 to %struct.UART_Type*), i32 115200, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_198, void (%struct.device*)* @irq_config_func_0 }, align 4, !dbg !1183
@uart_imx_driver_api = internal constant %struct.uart_driver_api { i32 (%struct.device*, i8*)* @uart_imx_poll_in, void (%struct.device*, i8)* @uart_imx_poll_out, i32 (%struct.device*)* null, i32 (%struct.device*, %struct.uart_config*)* null, i32 (%struct.device*, %struct.uart_config*)* null, i32 (%struct.device*, i8*, i32)* @uart_imx_fifo_fill, i32 (%struct.device*, i8*, i32)* @uart_imx_fifo_read, void (%struct.device*)* @uart_imx_irq_tx_enable, void (%struct.device*)* @uart_imx_irq_tx_disable, i32 (%struct.device*)* @uart_imx_irq_tx_ready, void (%struct.device*)* @uart_imx_irq_rx_enable, void (%struct.device*)* @uart_imx_irq_rx_disable, i32 (%struct.device*)* null, i32 (%struct.device*)* @uart_imx_irq_rx_ready, void (%struct.device*)* @uart_imx_irq_err_enable, void (%struct.device*)* @uart_imx_irq_err_disable, i32 (%struct.device*)* @uart_imx_irq_is_pending, i32 (%struct.device*)* @uart_imx_irq_update, void (%struct.device*, void (%struct.device*, i8*)*, i8*)* @uart_imx_irq_callback_set }, align 4, !dbg !1441
@__devstate_dts_ord_198 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1439
@imx_uart_0_data = internal global %struct.imx_uart_data zeroinitializer, align 4, !dbg !1433
@__device_dts_ord_198 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.126, i32 0, i32 0), i8* bitcast (%struct.imx_uart_config* @imx_uart_0_config to i8*), i8* bitcast (%struct.uart_driver_api* @uart_imx_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_198, i8* bitcast (%struct.imx_uart_data* @imx_uart_0_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_198, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1424
@__init___device_dts_ord_198 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_imx_init, %struct.device* @__device_dts_ord_198 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1426
@__pinctrl_dev_config__device_dts_ord_198 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_198, i32 0, i32 0), i8 1 }, align 4, !dbg !1443
@__pinctrl_states__device_dts_ord_198 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct.pinctrl_soc_pin* getelementptr inbounds ([2 x %struct.pinctrl_soc_pin], [2 x %struct.pinctrl_soc_pin]* @__pinctrl_state_pins_0__device_dts_ord_198, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1445
@__pinctrl_state_pins_0__device_dts_ord_198 = internal constant [2 x %struct.pinctrl_soc_pin] [%struct.pinctrl_soc_pin { %struct.pinctrl_soc_pinmux { i32 808649000, i32 808649624, i32 0, i8 0 }, i32 124 }, %struct.pinctrl_soc_pin { %struct.pinctrl_soc_pinmux { i32 808649004, i32 808649628, i32 808650484, i8 16 }, i32 124 }], align 4, !dbg !1450
@irq_config_func_0.__isr_uart_imx_isr_irq_0 = internal global %struct._isr_list { i32 26, i32 0, i8* bitcast (void (%struct.device*)* @uart_imx_isr to i8*), i8* bitcast (%struct.device* @__device_dts_ord_198 to i8*) }, section ".intList", align 4, !dbg !1453
@overflow_cyc = internal global i32 0, align 4, !dbg !1464
@cycle_count = internal unnamed_addr global i32 0, align 4, !dbg !1720
@announced_cycles = internal unnamed_addr global i32 0, align 4, !dbg !1722
@last_load = internal unnamed_addr global i32 0, align 4, !dbg !1718
@lock = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !1713
@__init_sys_clock_driver_init = internal constant %struct.init_entry { i32 (%struct.device*)* @sys_clock_driver_init, %struct.device* null }, section ".z_init_PRE_KERNEL_20_", align 4, !dbg !1687
@.str.130 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.131 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.2.132 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.3.133 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.4.134 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.5.135 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@__init_imx_pinctrl_init = internal constant %struct.init_entry { i32 (%struct.device*)* @imx_pinctrl_init, %struct.device* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !1724
@.str.143 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.144 = private unnamed_addr constant [8 x i8] c"pre < 8\00", align 1
@.str.2.145 = private unnamed_addr constant [52 x i8] c"WEST_TOPDIR/modules/hal/nxp/imx/drivers/ccm_imx7d.c\00", align 1
@.str.3.146 = private unnamed_addr constant [10 x i8] c"post < 64\00", align 1
@.str.4.147 = private unnamed_addr constant [12 x i8] c"pre && post\00", align 1
@.str.150 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.151 = private unnamed_addr constant [56 x i8] c"!CCM_ANALOG_IsPllBypassed(base, ccmAnalogPll480Control)\00", align 1
@.str.2.152 = private unnamed_addr constant [59 x i8] c"WEST_TOPDIR/modules/hal/nxp/imx/drivers/ccm_analog_imx7d.c\00", align 1
@switch.table.CCM_ANALOG_GetVideoPllFreq = private unnamed_addr constant [4 x i32] [i32 0, i32 1, i32 0, i32 2], align 4
@switch.table.CCM_ANALOG_GetVideoPllFreq.4 = private unnamed_addr constant [4 x i32] [i32 2, i32 1, i32 0, i32 0], align 4
@.str.155 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.156 = private unnamed_addr constant [9 x i8] c"pin < 32\00", align 1
@.str.2.157 = private unnamed_addr constant [51 x i8] c"WEST_TOPDIR/modules/hal/nxp/imx/drivers/gpio_imx.c\00", align 1
@.str.164 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.165 = private unnamed_addr constant [11 x i8] c"initConfig\00", align 1
@.str.2.166 = private unnamed_addr constant [51 x i8] c"WEST_TOPDIR/modules/hal/nxp/imx/drivers/uart_imx.c\00", align 1
@.str.3.167 = private unnamed_addr constant [63 x i8] c"(direction & uartDirectionTx) || (direction & uartDirectionRx)\00", align 1
@.str.4.174 = private unnamed_addr constant [57 x i8] c"(mode == uartModemModeDce) || (mode == uartModemModeDte)\00", align 1
@.str.5.175 = private unnamed_addr constant [14 x i8] c"data <= 0x1FF\00", align 1
@.str.6.176 = private unnamed_addr constant [86 x i8] c"(voteClock == uartIrdaVoteClockSampling) || (voteClock == uartIrdaVoteClockReference)\00", align 1
@switch.table.UART_SetBaudRate = private unnamed_addr constant [6 x i32] [i32 512, i32 384, i32 256, i32 128, i32 0, i32 768], align 4
@__device_start = external dso_local constant [0 x %struct.device], align 4
@__device_end = external dso_local constant [0 x %struct.device], align 4
@_k_neg_eagain = dso_local local_unnamed_addr constant i32 -11, align 4, !dbg !1754
@.str.183 = private unnamed_addr constant [20 x i8] c"%c: Halting system\0A\00", align 1
@.str.1.187 = private unnamed_addr constant [45 x i8] c"%c: >>> ZEPHYR FATAL ERROR %d: %s on CPU %d\0A\00", align 1
@.str.2.188 = private unnamed_addr constant [38 x i8] c"%c: Fault during interrupt handling\0A\0A\00", align 1
@.str.3.189 = private unnamed_addr constant [29 x i8] c"%c: Current thread: %p (%s)\0A\00", align 1
@.str.4.190 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.5.191 = private unnamed_addr constant [29 x i8] c"reason != K_ERR_KERNEL_PANIC\00", align 1
@.str.6.192 = private unnamed_addr constant [27 x i8] c"ZEPHYR_BASE/kernel/fatal.c\00", align 1
@.str.7.193 = private unnamed_addr constant [53 x i8] c"\09Attempted to recover from a kernel panic condition\0A\00", align 1
@.str.8.197 = private unnamed_addr constant [14 x i8] c"CPU exception\00", align 1
@.str.9.198 = private unnamed_addr constant [20 x i8] c"Unhandled interrupt\00", align 1
@.str.10.199 = private unnamed_addr constant [15 x i8] c"Stack overflow\00", align 1
@.str.11.200 = private unnamed_addr constant [12 x i8] c"Kernel oops\00", align 1
@.str.12.201 = private unnamed_addr constant [13 x i8] c"Kernel panic\00", align 1
@.str.13.196 = private unnamed_addr constant [14 x i8] c"Unknown error\00", align 1
@.str.14.195 = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@switch.table.reason_to_str = private unnamed_addr constant [5 x i8*] [i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.8.197, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.9.198, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.10.199, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.11.200, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.12.201, i32 0, i32 0)], align 4
@.str.203 = private unnamed_addr constant [3 x i8] c"os\00", align 1
@log_const_os = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.203, i32 0, i32 0), i8 3 }, section ".log_const_os", align 4, !dbg !1760
@__bss_start = external dso_local global [0 x i8], align 1
@__bss_end = external dso_local global [0 x i8], align 1
@z_interrupt_stacks = dso_local global [1 x [2048 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.2", align 8, !dbg !1979
@z_main_stack = dso_local global [1024 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.0", align 8, !dbg !1966
@z_main_thread = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !1974
@z_idle_stacks = internal global [1 x [320 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.1", align 8, !dbg !1985
@z_sys_init_run_level.levels = internal unnamed_addr constant [6 x %struct.init_entry*] [%struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_EARLY_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_1_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_2_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_POST_KERNEL_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_APPLICATION_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_end, i32 0, i32 0)], align 4, !dbg !1990
@__init_EARLY_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_1_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_2_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_POST_KERNEL_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_APPLICATION_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_end = external dso_local constant [0 x %struct.init_entry], align 4
@.str.5.212 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@k_thread_state_str.states_str = internal unnamed_addr constant [8 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.217, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.218, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.219, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.220, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.221, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5.222, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.216, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7.223, i32 0, i32 0)], align 4, !dbg !2018
@.str.217 = private unnamed_addr constant [6 x i8] c"dummy\00", align 1
@.str.1.218 = private unnamed_addr constant [8 x i8] c"pending\00", align 1
@.str.2.219 = private unnamed_addr constant [9 x i8] c"prestart\00", align 1
@.str.3.220 = private unnamed_addr constant [5 x i8] c"dead\00", align 1
@.str.4.221 = private unnamed_addr constant [10 x i8] c"suspended\00", align 1
@.str.5.222 = private unnamed_addr constant [9 x i8] c"aborting\00", align 1
@.str.6.216 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.7.223 = private unnamed_addr constant [7 x i8] c"queued\00", align 1
@k_thread_state_str.states_sz = internal unnamed_addr constant [8 x i32] [i32 5, i32 7, i32 8, i32 4, i32 9, i32 8, i32 0, i32 6], align 4, !dbg !2126
@.str.8.215 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@.str.9.226 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.10.227 = private unnamed_addr constant [128 x i8] c"((((prio)) == 15 && z_is_idle_thread_entry((entry))) || (((15 - 1) >= ((-16))) && ((prio)) >= ((-16)) && ((prio)) <= (15 - 1)))\00", align 1
@.str.11.228 = private unnamed_addr constant [28 x i8] c"ZEPHYR_BASE/kernel/thread.c\00", align 1
@.str.12.229 = private unnamed_addr constant [49 x i8] c"\09invalid priority (%d); allowed range: %d to %d\0A\00", align 1
@.str.13.232 = private unnamed_addr constant [18 x i8] c"!arch_is_in_isr()\00", align 1
@.str.14.233 = private unnamed_addr constant [37 x i8] c"\09Threads may not be created in ISRs\0A\00", align 1
@__static_thread_data_list_start = external dso_local global [0 x %struct._static_thread_data], align 4
@__static_thread_data_list_end = external dso_local global [0 x %struct._static_thread_data], align 4
@.str.15.236 = private unnamed_addr constant [45 x i8] c"thread_data <= __static_thread_data_list_end\00", align 1
@.str.16.237 = private unnamed_addr constant [31 x i8] c"\09unexpected list end location\0A\00", align 1
@.str.246 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.247 = private unnamed_addr constant [40 x i8] c"_kernel.cpus[0].current->base.prio >= 0\00", align 1
@.str.2.248 = private unnamed_addr constant [26 x i8] c"ZEPHYR_BASE/kernel/idle.c\00", align 1
@.str.255 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.256 = private unnamed_addr constant [70 x i8] c"!arch_is_in_isr() || ((timeout).ticks == (((k_timeout_t) {0})).ticks)\00", align 1
@.str.2.257 = private unnamed_addr constant [27 x i8] c"ZEPHYR_BASE/kernel/msg_q.c\00", align 1
@.str.3.258 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@.str.4.259 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.5.260 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.6.261 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.7.262 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.8.263 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@lock.268 = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !2140
@.str.269 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.275 = private unnamed_addr constant [78 x i8] c"((arch_is_in_isr() == 0) || ((timeout).ticks == (((k_timeout_t) {0})).ticks))\00", align 1
@.str.2.276 = private unnamed_addr constant [25 x i8] c"ZEPHYR_BASE/kernel/sem.c\00", align 1
@.str.3.277 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@.str.4.270 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.5.271 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.6.272 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.7.278 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.8.279 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@sched_spinlock = dso_local global %struct.k_spinlock zeroinitializer, align 4, !dbg !2165
@slice_ticks = internal unnamed_addr global i32 0, align 4, !dbg !2269
@slice_max_prio = internal unnamed_addr global i32 0, align 4, !dbg !2272
@pending_current = internal unnamed_addr global %struct.k_thread* null, align 4, !dbg !2274
@.str.280 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.300 = private unnamed_addr constant [61 x i8] c"thread == _kernel.cpus[0].current || is_thread_dummy(thread)\00", align 1
@.str.2.287 = private unnamed_addr constant [27 x i8] c"ZEPHYR_BASE/kernel/sched.c\00", align 1
@.str.3.307 = private unnamed_addr constant [55 x i8] c"sizeof(sched_spinlock) == 0 || lock != &sched_spinlock\00", align 1
@.str.4.317 = private unnamed_addr constant [49 x i8] c"_kernel.cpus[0].current->base.sched_locked != 0U\00", align 1
@.str.5.290 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@.str.6.312 = private unnamed_addr constant [18 x i8] c"!arch_is_in_isr()\00", align 1
@.str.7.286 = private unnamed_addr constant [33 x i8] c"!z_is_idle_thread_object(thread)\00", align 1
@.str.8.324 = private unnamed_addr constant [134 x i8] c"((((prio)) == 15 && z_is_idle_thread_entry((((void *)0)))) || (((15 - 1) >= ((-16))) && ((prio)) >= ((-16)) && ((prio)) <= (15 - 1)))\00", align 1
@.str.9.325 = private unnamed_addr constant [49 x i8] c"\09invalid priority (%d); allowed range: %d to %d\0A\00", align 1
@.str.10.333 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.11.334 = private unnamed_addr constant [31 x i8] c"\09aborting essential thread %p\0A\00", align 1
@.str.12.335 = private unnamed_addr constant [34 x i8] c"\09aborted _current back from dead\0A\00", align 1
@.str.13.336 = private unnamed_addr constant [21 x i8] c"\09cannot join in ISR\0A\00", align 1
@.str.14.281 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.15.282 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.16.283 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.17.284 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.18.285 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@.str.19.289 = private unnamed_addr constant [39 x i8] c"_kernel.cpus[0].current != ((void *)0)\00", align 1
@.str.20.304 = private unnamed_addr constant [23 x i8] c"thread->base.pended_on\00", align 1
@.str.21.313 = private unnamed_addr constant [36 x i8] c"ZEPHYR_BASE/kernel/include/ksched.h\00", align 1
@.str.22.314 = private unnamed_addr constant [49 x i8] c"_kernel.cpus[0].current->base.sched_locked != 1U\00", align 1
@z_idle_threads = dso_local global [1 x %struct.k_thread] zeroinitializer, align 8, !dbg !1976
@z_sys_post_kernel = dso_local local_unnamed_addr global i8 0, align 1, !dbg !1983
@.str.23.328 = private unnamed_addr constant [64 x i8] c"!z_is_thread_state_set(_kernel.cpus[0].current, ((1UL << (4))))\00", align 1
@__data_region_start = external dso_local global [0 x i8], align 1
@__data_region_load_start = external dso_local global [0 x i8], align 1
@__data_region_end = external dso_local global [0 x i8], align 1
@__ramfunc_start = external dso_local global [0 x i8], align 1
@__ramfunc_load_start = external dso_local global [0 x i8], align 1
@__ramfunc_size = external dso_local global [0 x i8], align 1
@.str.342 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.343 = private unnamed_addr constant [32 x i8] c"!sys_dnode_is_linked(&to->node)\00", align 1
@.str.2.344 = private unnamed_addr constant [29 x i8] c"ZEPHYR_BASE/kernel/timeout.c\00", align 1
@.str.3.345 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@timeout_lock = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !2276
@curr_tick = internal unnamed_addr global i64 0, align 8, !dbg !2306
@timeout_list = internal global %struct._dnode { %union.anon.0 { %struct._dnode* @timeout_list }, %union.anon.0 { %struct._dnode* @timeout_list } }, align 4, !dbg !2311
@_kernel = dso_local global %struct.z_kernel zeroinitializer, align 4, !dbg !1847
@announce_remaining = internal unnamed_addr global i32 0, align 4, !dbg !2309
@.str.4.346 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.5.347 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.6.348 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.7.352 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.8.353 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@.str.373 = private unnamed_addr constant [66 x i8] c"*** Booting Zephyr OS build zephyr-v3.2.0-2126-gffed8388e7cb ***\0A\00", align 1
@__init_statics_init_pre = internal constant %struct.init_entry { i32 (%struct.device*)* @statics_init, %struct.device* null }, section ".z_init_PRE_KERNEL_130_", align 4, !dbg !2317
@.str.375 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.384 = private unnamed_addr constant [70 x i8] c"!arch_is_in_isr() || ((timeout).ticks == (((k_timeout_t) {0})).ticks)\00", align 1
@.str.2.377 = private unnamed_addr constant [27 x i8] c"ZEPHYR_BASE/kernel/kheap.c\00", align 1
@.str.3.385 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@_k_heap_list_start = external dso_local global [0 x %struct.k_heap], align 4
@_k_heap_list_end = external dso_local global [0 x %struct.k_heap], align 4
@.str.4.376 = private unnamed_addr constant [22 x i8] c"h <= _k_heap_list_end\00", align 1
@.str.5.378 = private unnamed_addr constant [31 x i8] c"\09unexpected list end location\0A\00", align 1
@.str.6.381 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.7.382 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.8.383 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.9.386 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.10.387 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1

; Function Attrs: optsize
declare dso_local void @_isr_wrapper() #0

; Function Attrs: noinline nounwind optsize
define dso_local void @_OffsetAbsSyms() local_unnamed_addr #1 !dbg !3101 {
  tail call void asm sideeffect ".globl\09___cpu_t_current_OFFSET\0A\09.equ\09___cpu_t_current_OFFSET,${0:B}\0A\09.type\09___cpu_t_current_OFFSET,%object", "n"(i32 -9) #24, !dbg !3103, !srcloc !3104
  tail call void asm sideeffect ".globl\09___cpu_t_nested_OFFSET\0A\09.equ\09___cpu_t_nested_OFFSET,${0:B}\0A\09.type\09___cpu_t_nested_OFFSET,%object", "n"(i32 -1) #24, !dbg !3105, !srcloc !3106
  tail call void asm sideeffect ".globl\09___cpu_t_irq_stack_OFFSET\0A\09.equ\09___cpu_t_irq_stack_OFFSET,${0:B}\0A\09.type\09___cpu_t_irq_stack_OFFSET,%object", "n"(i32 -5) #24, !dbg !3107, !srcloc !3108
  tail call void asm sideeffect ".globl\09___cpu_t_arch_OFFSET\0A\09.equ\09___cpu_t_arch_OFFSET,${0:B}\0A\09.type\09___cpu_t_arch_OFFSET,%object", "n"(i32 -26) #24, !dbg !3109, !srcloc !3110
  tail call void asm sideeffect ".globl\09___cpu_t_SIZEOF\0A\09.equ\09___cpu_t_SIZEOF,${0:B}\0A\09.type\09___cpu_t_SIZEOF,%object", "n"(i32 -29) #24, !dbg !3111, !srcloc !3112
  tail call void asm sideeffect ".globl\09___kernel_t_cpus_OFFSET\0A\09.equ\09___kernel_t_cpus_OFFSET,${0:B}\0A\09.type\09___kernel_t_cpus_OFFSET,%object", "n"(i32 -1) #24, !dbg !3113, !srcloc !3114
  tail call void asm sideeffect ".globl\09___kernel_t_ready_q_OFFSET\0A\09.equ\09___kernel_t_ready_q_OFFSET,${0:B}\0A\09.type\09___kernel_t_ready_q_OFFSET,%object", "n"(i32 -29) #24, !dbg !3115, !srcloc !3116
  tail call void asm sideeffect ".globl\09___ready_q_t_cache_OFFSET\0A\09.equ\09___ready_q_t_cache_OFFSET,${0:B}\0A\09.type\09___ready_q_t_cache_OFFSET,%object", "n"(i32 -1) #24, !dbg !3117, !srcloc !3118
  tail call void asm sideeffect ".globl\09_STRUCT_KERNEL_SIZE\0A\09.equ\09_STRUCT_KERNEL_SIZE,${0:B}\0A\09.type\09_STRUCT_KERNEL_SIZE,%object", "n"(i32 -41) #24, !dbg !3119, !srcloc !3120
  tail call void asm sideeffect ".globl\09___thread_base_t_user_options_OFFSET\0A\09.equ\09___thread_base_t_user_options_OFFSET,${0:B}\0A\09.type\09___thread_base_t_user_options_OFFSET,%object", "n"(i32 -13) #24, !dbg !3121, !srcloc !3122
  tail call void asm sideeffect ".globl\09___thread_base_t_thread_state_OFFSET\0A\09.equ\09___thread_base_t_thread_state_OFFSET,${0:B}\0A\09.type\09___thread_base_t_thread_state_OFFSET,%object", "n"(i32 -14) #24, !dbg !3123, !srcloc !3124
  tail call void asm sideeffect ".globl\09___thread_base_t_prio_OFFSET\0A\09.equ\09___thread_base_t_prio_OFFSET,${0:B}\0A\09.type\09___thread_base_t_prio_OFFSET,%object", "n"(i32 -15) #24, !dbg !3125, !srcloc !3126
  tail call void asm sideeffect ".globl\09___thread_base_t_sched_locked_OFFSET\0A\09.equ\09___thread_base_t_sched_locked_OFFSET,${0:B}\0A\09.type\09___thread_base_t_sched_locked_OFFSET,%object", "n"(i32 -16) #24, !dbg !3127, !srcloc !3128
  tail call void asm sideeffect ".globl\09___thread_base_t_preempt_OFFSET\0A\09.equ\09___thread_base_t_preempt_OFFSET,${0:B}\0A\09.type\09___thread_base_t_preempt_OFFSET,%object", "n"(i32 -15) #24, !dbg !3129, !srcloc !3130
  tail call void asm sideeffect ".globl\09___thread_base_t_swap_data_OFFSET\0A\09.equ\09___thread_base_t_swap_data_OFFSET,${0:B}\0A\09.type\09___thread_base_t_swap_data_OFFSET,%object", "n"(i32 -21) #24, !dbg !3131, !srcloc !3132
  tail call void asm sideeffect ".globl\09___thread_t_base_OFFSET\0A\09.equ\09___thread_t_base_OFFSET,${0:B}\0A\09.type\09___thread_t_base_OFFSET,%object", "n"(i32 -1) #24, !dbg !3133, !srcloc !3134
  tail call void asm sideeffect ".globl\09___thread_t_callee_saved_OFFSET\0A\09.equ\09___thread_t_callee_saved_OFFSET,${0:B}\0A\09.type\09___thread_t_callee_saved_OFFSET,%object", "n"(i32 -49) #24, !dbg !3135, !srcloc !3136
  tail call void asm sideeffect ".globl\09___thread_t_arch_OFFSET\0A\09.equ\09___thread_t_arch_OFFSET,${0:B}\0A\09.type\09___thread_t_arch_OFFSET,%object", "n"(i32 -105) #24, !dbg !3137, !srcloc !3138
  tail call void asm sideeffect ".globl\09K_THREAD_SIZEOF\0A\09.equ\09K_THREAD_SIZEOF,${0:B}\0A\09.type\09K_THREAD_SIZEOF,%object", "n"(i32 -113) #24, !dbg !3139, !srcloc !3140
  tail call void asm sideeffect ".globl\09__z_interrupt_stack_SIZEOF\0A\09.equ\09__z_interrupt_stack_SIZEOF,${0:B}\0A\09.type\09__z_interrupt_stack_SIZEOF,%object", "n"(i32 -2049) #24, !dbg !3141, !srcloc !3142
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_SIZEOF\0A\09.equ\09_DEVICE_STRUCT_SIZEOF,${0:B}\0A\09.type\09_DEVICE_STRUCT_SIZEOF,%object", "n"(i32 -25) #24, !dbg !3143, !srcloc !3144
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_HANDLES_OFFSET\0A\09.equ\09_DEVICE_STRUCT_HANDLES_OFFSET,${0:B}\0A\09.type\09_DEVICE_STRUCT_HANDLES_OFFSET,%object", "n"(i32 -21) #24, !dbg !3145, !srcloc !3146
  tail call void asm sideeffect ".globl\09_PM_DEVICE_STRUCT_FLAGS_OFFSET\0A\09.equ\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,${0:B}\0A\09.type\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,%object", "n"(i32 -1) #24, !dbg !3147, !srcloc !3148
  tail call void asm sideeffect ".globl\09_PM_DEVICE_FLAG_PD\0A\09.equ\09_PM_DEVICE_FLAG_PD,${0:B}\0A\09.type\09_PM_DEVICE_FLAG_PD,%object", "n"(i32 -7) #24, !dbg !3149, !srcloc !3150
  tail call void asm sideeffect ".globl\09___thread_arch_t_basepri_OFFSET\0A\09.equ\09___thread_arch_t_basepri_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_basepri_OFFSET,%object", "n"(i32 -1) #24, !dbg !3151, !srcloc !3154
  tail call void asm sideeffect ".globl\09___thread_arch_t_swap_return_value_OFFSET\0A\09.equ\09___thread_arch_t_swap_return_value_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_swap_return_value_OFFSET,%object", "n"(i32 -5) #24, !dbg !3155, !srcloc !3156
  tail call void asm sideeffect ".globl\09___basic_sf_t_a1_OFFSET\0A\09.equ\09___basic_sf_t_a1_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a1_OFFSET,%object", "n"(i32 -1) #24, !dbg !3157, !srcloc !3158
  tail call void asm sideeffect ".globl\09___basic_sf_t_a2_OFFSET\0A\09.equ\09___basic_sf_t_a2_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a2_OFFSET,%object", "n"(i32 -5) #24, !dbg !3159, !srcloc !3160
  tail call void asm sideeffect ".globl\09___basic_sf_t_a3_OFFSET\0A\09.equ\09___basic_sf_t_a3_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a3_OFFSET,%object", "n"(i32 -9) #24, !dbg !3161, !srcloc !3162
  tail call void asm sideeffect ".globl\09___basic_sf_t_a4_OFFSET\0A\09.equ\09___basic_sf_t_a4_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a4_OFFSET,%object", "n"(i32 -13) #24, !dbg !3163, !srcloc !3164
  tail call void asm sideeffect ".globl\09___basic_sf_t_ip_OFFSET\0A\09.equ\09___basic_sf_t_ip_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_ip_OFFSET,%object", "n"(i32 -17) #24, !dbg !3165, !srcloc !3166
  tail call void asm sideeffect ".globl\09___basic_sf_t_lr_OFFSET\0A\09.equ\09___basic_sf_t_lr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_lr_OFFSET,%object", "n"(i32 -21) #24, !dbg !3167, !srcloc !3168
  tail call void asm sideeffect ".globl\09___basic_sf_t_pc_OFFSET\0A\09.equ\09___basic_sf_t_pc_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_pc_OFFSET,%object", "n"(i32 -25) #24, !dbg !3169, !srcloc !3170
  tail call void asm sideeffect ".globl\09___basic_sf_t_xpsr_OFFSET\0A\09.equ\09___basic_sf_t_xpsr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_xpsr_OFFSET,%object", "n"(i32 -29) #24, !dbg !3171, !srcloc !3172
  tail call void asm sideeffect ".globl\09___basic_sf_t_SIZEOF\0A\09.equ\09___basic_sf_t_SIZEOF,${0:B}\0A\09.type\09___basic_sf_t_SIZEOF,%object", "n"(i32 -33) #24, !dbg !3173, !srcloc !3174
  tail call void asm sideeffect ".globl\09___esf_t_SIZEOF\0A\09.equ\09___esf_t_SIZEOF,${0:B}\0A\09.type\09___esf_t_SIZEOF,%object", "n"(i32 -33) #24, !dbg !3175, !srcloc !3176
  tail call void asm sideeffect ".globl\09___callee_saved_t_v1_OFFSET\0A\09.equ\09___callee_saved_t_v1_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v1_OFFSET,%object", "n"(i32 -1) #24, !dbg !3177, !srcloc !3178
  tail call void asm sideeffect ".globl\09___callee_saved_t_v2_OFFSET\0A\09.equ\09___callee_saved_t_v2_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v2_OFFSET,%object", "n"(i32 -5) #24, !dbg !3179, !srcloc !3180
  tail call void asm sideeffect ".globl\09___callee_saved_t_v3_OFFSET\0A\09.equ\09___callee_saved_t_v3_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v3_OFFSET,%object", "n"(i32 -9) #24, !dbg !3181, !srcloc !3182
  tail call void asm sideeffect ".globl\09___callee_saved_t_v4_OFFSET\0A\09.equ\09___callee_saved_t_v4_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v4_OFFSET,%object", "n"(i32 -13) #24, !dbg !3183, !srcloc !3184
  tail call void asm sideeffect ".globl\09___callee_saved_t_v5_OFFSET\0A\09.equ\09___callee_saved_t_v5_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v5_OFFSET,%object", "n"(i32 -17) #24, !dbg !3185, !srcloc !3186
  tail call void asm sideeffect ".globl\09___callee_saved_t_v6_OFFSET\0A\09.equ\09___callee_saved_t_v6_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v6_OFFSET,%object", "n"(i32 -21) #24, !dbg !3187, !srcloc !3188
  tail call void asm sideeffect ".globl\09___callee_saved_t_v7_OFFSET\0A\09.equ\09___callee_saved_t_v7_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v7_OFFSET,%object", "n"(i32 -25) #24, !dbg !3189, !srcloc !3190
  tail call void asm sideeffect ".globl\09___callee_saved_t_v8_OFFSET\0A\09.equ\09___callee_saved_t_v8_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v8_OFFSET,%object", "n"(i32 -29) #24, !dbg !3191, !srcloc !3192
  tail call void asm sideeffect ".globl\09___callee_saved_t_psp_OFFSET\0A\09.equ\09___callee_saved_t_psp_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_psp_OFFSET,%object", "n"(i32 -33) #24, !dbg !3193, !srcloc !3194
  tail call void asm sideeffect ".globl\09___callee_saved_t_SIZEOF\0A\09.equ\09___callee_saved_t_SIZEOF,${0:B}\0A\09.type\09___callee_saved_t_SIZEOF,%object", "n"(i32 -37) #24, !dbg !3195, !srcloc !3196
  tail call void asm sideeffect ".globl\09_K_THREAD_NO_FLOAT_SIZEOF\0A\09.equ\09_K_THREAD_NO_FLOAT_SIZEOF,${0:B}\0A\09.type\09_K_THREAD_NO_FLOAT_SIZEOF,%object", "n"(i32 -113) #24, !dbg !3197, !srcloc !3198
  ret void, !dbg !3199
}

; Function Attrs: noinline noreturn nounwind optsize
define internal void @metairq_fn(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #2 !dbg !3202 {
  %4 = alloca %struct.msg, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3204, metadata !DIExpression()), !dbg !3210
  call void @llvm.dbg.value(metadata i8* %1, metadata !3205, metadata !DIExpression()), !dbg !3210
  call void @llvm.dbg.value(metadata i8* %2, metadata !3206, metadata !DIExpression()), !dbg !3210
  %5 = bitcast %struct.msg* %4 to i8*
  %6 = getelementptr inbounds %struct.msg, %struct.msg* %4, i32 0, i32 1
  %7 = getelementptr inbounds %struct.msg, %struct.msg* %4, i32 0, i32 4
  %8 = getelementptr inbounds %struct.msg, %struct.msg* %4, i32 0, i32 2
  %9 = getelementptr inbounds %struct.msg, %struct.msg* %4, i32 0, i32 0
  br label %10, !dbg !3211

10:                                               ; preds = %3, %23
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %5) #24, !dbg !3212
  call void @llvm.dbg.declare(metadata %struct.msg* %4, metadata !3207, metadata !DIExpression()), !dbg !3213
  call void @message_dev_fetch(%struct.msg* noundef nonnull %4) #25, !dbg !3214
  %11 = call fastcc i32 @k_cycle_get_32() #26, !dbg !3215
  %12 = load i32, i32* %6, align 4, !dbg !3216
  %13 = sub i32 %11, %12, !dbg !3217
  store i32 %13, i32* %7, align 4, !dbg !3218
  %14 = load i32, i32* %8, align 4, !dbg !3219
  %15 = getelementptr inbounds [4 x %struct.thread_rec], [4 x %struct.thread_rec]* @threads, i32 0, i32 %14, i32 1, !dbg !3220
  %16 = call fastcc i32 @k_msgq_put(%struct.k_msgq* noundef nonnull %15, i8* noundef nonnull %5) #26, !dbg !3221
  call void @llvm.dbg.value(metadata i32 %16, metadata !3209, metadata !DIExpression()), !dbg !3222
  %17 = icmp eq i32 %16, 0, !dbg !3223
  br i1 %17, label %23, label %18, !dbg !3225

18:                                               ; preds = %10
  %19 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 3) #26, !dbg !3226
  %20 = zext i8 %19 to i32, !dbg !3226
  %21 = load i32, i32* %8, align 4, !dbg !3226
  %22 = load i32, i32* %9, align 4, !dbg !3226
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([46 x i8], [46 x i8]* @.str.2, i32 0, i32 0), i32 noundef %20, i32 noundef %21, i32 noundef %22) #25, !dbg !3226
  br label %23, !dbg !3232

23:                                               ; preds = %18, %10
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %5) #24, !dbg !3233
  br label %10, !dbg !3211, !llvm.loop !3234
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #3

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #3

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32() unnamed_addr #1 !dbg !3235 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32() #26, !dbg !3236
  ret i32 %1, !dbg !3237
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_msgq_put(%struct.k_msgq* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !3238 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3250, metadata !DIExpression()), !dbg !3251
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !3248, metadata !DIExpression()), !dbg !3251
  call void @llvm.dbg.value(metadata i8* %1, metadata !3249, metadata !DIExpression()), !dbg !3251
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !3252, !srcloc !3254
  %3 = tail call i32 @z_impl_k_msgq_put(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] zeroinitializer) #25, !dbg !3255
  ret i32 %3, !dbg !3256
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef %0) unnamed_addr #5 !dbg !3257 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3262, metadata !DIExpression()), !dbg !3263
  %2 = icmp eq i32 %0, 2, !dbg !3264
  %3 = select i1 %2, i8 87, i8 63, !dbg !3264
  %4 = icmp eq i32 %0, 3, !dbg !3264
  %5 = select i1 %4, i8 73, i8 %3, !dbg !3264
  ret i8 %5, !dbg !3265
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32() unnamed_addr #1 !dbg !3266 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #25, !dbg !3268
  ret i32 %1, !dbg !3269
}

; Function Attrs: noinline nounwind optsize
define dso_local void @main() local_unnamed_addr #1 !dbg !3270 {
  call void @llvm.dbg.value(metadata i32 0, metadata !3272, metadata !DIExpression()), !dbg !3277
  br label %2, !dbg !3278

1:                                                ; preds = %2
  tail call void @message_dev_init() #25, !dbg !3279
  ret void, !dbg !3280

2:                                                ; preds = %0, %2
  %3 = phi i32 [ 0, %0 ], [ %11, %2 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !3272, metadata !DIExpression()), !dbg !3277
  %4 = add nsw i32 %3, -2, !dbg !3281
  call void @llvm.dbg.value(metadata i32 %4, metadata !3274, metadata !DIExpression()), !dbg !3282
  %5 = getelementptr inbounds [4 x %struct.thread_rec], [4 x %struct.thread_rec]* @threads, i32 0, i32 %3, i32 1, !dbg !3283
  %6 = getelementptr inbounds [4 x %struct.thread_rec], [4 x %struct.thread_rec]* @threads, i32 0, i32 %3, i32 2, i32 0, !dbg !3284
  %7 = bitcast %struct.msg* %6 to i8*, !dbg !3285
  tail call void @k_msgq_init(%struct.k_msgq* noundef nonnull %5, i8* noundef nonnull %7, i32 noundef 20, i32 noundef 16) #25, !dbg !3286
  %8 = getelementptr inbounds [4 x %struct.thread_rec], [4 x %struct.thread_rec]* @threads, i32 0, i32 %3, i32 0, !dbg !3287
  %9 = getelementptr inbounds [4 x [2048 x %struct.z_thread_stack_element]], [4 x [2048 x %struct.z_thread_stack_element]]* @thread_stacks, i32 0, i32 %3, i32 0, !dbg !3288
  %10 = inttoptr i32 %3 to i8*, !dbg !3289
  tail call fastcc void @k_thread_create(%struct.k_thread* noundef nonnull %8, %struct.z_thread_stack_element* noundef nonnull %9, i8* noundef %10, i32 noundef %4) #26, !dbg !3290
  %11 = add nuw nsw i32 %3, 1, !dbg !3291
  call void @llvm.dbg.value(metadata i32 %11, metadata !3272, metadata !DIExpression()), !dbg !3277
  %12 = icmp eq i32 %11, 4, !dbg !3292
  br i1 %12, label %1, label %2, !dbg !3278, !llvm.loop !3293
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_create(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !3295 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3308, metadata !DIExpression()), !dbg !3309
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !3299, metadata !DIExpression()), !dbg !3309
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !3300, metadata !DIExpression()), !dbg !3309
  call void @llvm.dbg.value(metadata i32 2048, metadata !3301, metadata !DIExpression()), !dbg !3309
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* @thread_fn, metadata !3302, metadata !DIExpression()), !dbg !3309
  call void @llvm.dbg.value(metadata i8* %2, metadata !3303, metadata !DIExpression()), !dbg !3309
  call void @llvm.dbg.value(metadata i8* null, metadata !3304, metadata !DIExpression()), !dbg !3309
  call void @llvm.dbg.value(metadata i8* null, metadata !3305, metadata !DIExpression()), !dbg !3309
  call void @llvm.dbg.value(metadata i32 %3, metadata !3306, metadata !DIExpression()), !dbg !3309
  call void @llvm.dbg.value(metadata i32 0, metadata !3307, metadata !DIExpression()), !dbg !3309
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !3310, !srcloc !3312
  %5 = tail call %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef 2048, void (i8*, i8*, i8*)* noundef nonnull @thread_fn, i8* noundef %2, i8* noundef null, i8* noundef null, i32 noundef %3, i32 noundef 0, [1 x i64] zeroinitializer) #25, !dbg !3313
  ret void, !dbg !3314
}

; Function Attrs: noinline noreturn nounwind optsize
define internal void @thread_fn(i8* noundef %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #2 !dbg !3315 {
  %4 = alloca %struct.msg, align 4
  %5 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3317, metadata !DIExpression()), !dbg !3330
  call void @llvm.dbg.value(metadata i8* %1, metadata !3318, metadata !DIExpression()), !dbg !3330
  call void @llvm.dbg.value(metadata i8* %2, metadata !3319, metadata !DIExpression()), !dbg !3330
  %6 = ptrtoint i8* %0 to i32, !dbg !3331
  call void @llvm.dbg.value(metadata i32 %6, metadata !3320, metadata !DIExpression()), !dbg !3330
  %7 = bitcast %struct.msg* %4 to i8*, !dbg !3332
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %7) #24, !dbg !3332
  call void @llvm.dbg.declare(metadata %struct.msg* %4, metadata !3321, metadata !DIExpression()), !dbg !3333
  %8 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 3) #26, !dbg !3334
  %9 = zext i8 %8 to i32, !dbg !3334
  %10 = tail call fastcc %struct.k_thread* @k_current_get() #27, !dbg !3334
  %11 = tail call fastcc i32 @k_thread_priority_get(%struct.k_thread* noundef %10) #26, !dbg !3334
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.3, i32 0, i32 0), i32 noundef %9, i32 noundef %6, i32 noundef %11) #25, !dbg !3334
  %12 = getelementptr inbounds [4 x %struct.thread_rec], [4 x %struct.thread_rec]* @threads, i32 0, i32 %6, i32 1
  %13 = call fastcc i32 @k_msgq_get(%struct.k_msgq* noundef nonnull %12, i8* noundef nonnull %7) #26, !dbg !3339
  call void @llvm.dbg.value(metadata i32 %13, metadata !3322, metadata !DIExpression()), !dbg !3340
  %14 = call fastcc i32 @k_cycle_get_32() #26, !dbg !3341
  call void @llvm.dbg.value(metadata i32 %14, metadata !3324, metadata !DIExpression()), !dbg !3340
  %15 = icmp eq i32 %13, 0, !dbg !3342
  br i1 %15, label %16, label %28, !dbg !3345

16:                                               ; preds = %3
  %17 = getelementptr inbounds %struct.msg, %struct.msg* %4, i32 0, i32 3
  %18 = getelementptr inbounds %struct.msg, %struct.msg* %4, i32 0, i32 0
  %19 = getelementptr inbounds %struct.msg, %struct.msg* %4, i32 0, i32 4
  %20 = getelementptr inbounds %struct.msg, %struct.msg* %4, i32 0, i32 1
  %21 = bitcast i32* %5 to i8*
  br label %22, !dbg !3345

22:                                               ; preds = %16, %42
  %23 = phi i32 [ %14, %16 ], [ %53, %42 ]
  %24 = call fastcc i32 @k_cycle_get_32() #26, !dbg !3346
  %25 = sub i32 %24, %23, !dbg !3347
  %26 = load i32, i32* %17, align 4, !dbg !3348
  %27 = icmp ult i32 %25, %26, !dbg !3349
  br i1 %27, label %29, label %42, !dbg !3350

28:                                               ; preds = %42, %3
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.6, i32 0, i32 0), i32 noundef 191) #25, !dbg !3351
  call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.6, i32 0, i32 0), i32 noundef 191) #25, !dbg !3351
  unreachable, !dbg !3351

29:                                               ; preds = %22, %32
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %21), !dbg !3353
  call void @llvm.dbg.declare(metadata i32* %5, metadata !3325, metadata !DIExpression()), !dbg !3354
  store volatile i32 0, i32* %5, align 4, !dbg !3354
  %30 = load volatile i32, i32* %5, align 4, !dbg !3355
  %31 = icmp slt i32 %30, 100, !dbg !3357
  br i1 %31, label %37, label %32, !dbg !3358

32:                                               ; preds = %37, %29
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %21), !dbg !3359
  %33 = call fastcc i32 @k_cycle_get_32() #26, !dbg !3346
  %34 = sub i32 %33, %23, !dbg !3347
  %35 = load i32, i32* %17, align 4, !dbg !3348
  %36 = icmp ult i32 %34, %35, !dbg !3349
  br i1 %36, label %29, label %42, !dbg !3350, !llvm.loop !3360

37:                                               ; preds = %29, %37
  %38 = load volatile i32, i32* %5, align 4, !dbg !3362
  %39 = add nsw i32 %38, 1, !dbg !3362
  store volatile i32 %39, i32* %5, align 4, !dbg !3362
  %40 = load volatile i32, i32* %5, align 4, !dbg !3355
  %41 = icmp slt i32 %40, 100, !dbg !3357
  br i1 %41, label %37, label %32, !dbg !3358, !llvm.loop !3363

42:                                               ; preds = %32, %22
  %43 = call fastcc i32 @k_cycle_get_32() #26, !dbg !3365
  %44 = sub i32 %43, %23, !dbg !3366
  call void @llvm.dbg.value(metadata i32 %44, metadata !3329, metadata !DIExpression()), !dbg !3340
  %45 = load i32, i32* %18, align 4, !dbg !3367
  %46 = load i32, i32* %19, align 4, !dbg !3367
  %47 = load i32, i32* %20, align 4, !dbg !3367
  %48 = sub i32 %23, %47, !dbg !3367
  %49 = load i32, i32* %17, align 4, !dbg !3367
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.7, i32 0, i32 0), i32 noundef %9, i32 noundef %45, i32 noundef %6, i32 noundef %46, i32 noundef %48, i32 noundef %49, i32 noundef %44) #25, !dbg !3367
  %50 = load i32, i32* %20, align 4, !dbg !3372
  %51 = sub i32 %23, %50, !dbg !3373
  call fastcc void @record_latencies(%struct.msg* noundef nonnull %4, i32 noundef %51) #26, !dbg !3374
  %52 = call fastcc i32 @k_msgq_get(%struct.k_msgq* noundef nonnull %12, i8* noundef nonnull %7) #26, !dbg !3339
  call void @llvm.dbg.value(metadata i32 %52, metadata !3322, metadata !DIExpression()), !dbg !3340
  %53 = call fastcc i32 @k_cycle_get_32() #26, !dbg !3341
  call void @llvm.dbg.value(metadata i32 %53, metadata !3324, metadata !DIExpression()), !dbg !3340
  %54 = icmp eq i32 %52, 0, !dbg !3342
  br i1 %54, label %22, label %28, !dbg !3345, !llvm.loop !3375
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get() unnamed_addr #6 !dbg !3378 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get() #27, !dbg !3381
  ret %struct.k_thread* %1, !dbg !3382
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_thread_priority_get(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !3383 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !3387, metadata !DIExpression()), !dbg !3388
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !3389, !srcloc !3391
  %2 = tail call i32 @z_impl_k_thread_priority_get(%struct.k_thread* noundef %0) #25, !dbg !3392
  ret i32 %2, !dbg !3393
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_msgq_get(%struct.k_msgq* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !3394 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3400, metadata !DIExpression()), !dbg !3401
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !3398, metadata !DIExpression()), !dbg !3401
  call void @llvm.dbg.value(metadata i8* %1, metadata !3399, metadata !DIExpression()), !dbg !3401
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !3402, !srcloc !3404
  %3 = tail call i32 @z_impl_k_msgq_get(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] [i64 -1]) #25, !dbg !3405
  ret i32 %3, !dbg !3406
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @record_latencies(%struct.msg* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !3407 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.msg* %0, metadata !3412, metadata !DIExpression()), !dbg !3425
  call void @llvm.dbg.value(metadata i32 %1, metadata !3413, metadata !DIExpression()), !dbg !3425
  %7 = getelementptr inbounds %struct.msg, %struct.msg* %0, i32 0, i32 0, !dbg !3426
  %8 = load i32, i32* %7, align 4, !dbg !3426
  %9 = icmp ugt i32 %8, 39, !dbg !3428
  br i1 %9, label %60, label %10, !dbg !3429

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.msg, %struct.msg* %0, i32 0, i32 2, !dbg !3430
  %12 = load i32, i32* %11, align 4, !dbg !3430
  call void @llvm.dbg.value(metadata i32 %12, metadata !3414, metadata !DIExpression()), !dbg !3425
  %13 = getelementptr inbounds %struct.anon.3, %struct.anon.3* @stats, i32 0, i32 2, i32 %12, i32 0, !dbg !3431
  %14 = load i32, i32* %13, align 4, !dbg !3432
  %15 = add i32 %14, 1, !dbg !3432
  store i32 %15, i32* %13, align 4, !dbg !3432
  call void @llvm.dbg.value(metadata i32 %14, metadata !3415, metadata !DIExpression()), !dbg !3425
  %16 = icmp ult i32 %14, 20, !dbg !3433
  br i1 %16, label %17, label %19, !dbg !3435

17:                                               ; preds = %10
  %18 = getelementptr inbounds %struct.anon.3, %struct.anon.3* @stats, i32 0, i32 2, i32 %12, i32 1, i32 %14, !dbg !3436
  store i32 %1, i32* %18, align 4, !dbg !3438
  br label %19, !dbg !3439

19:                                               ; preds = %17, %10
  %20 = getelementptr inbounds %struct.msg, %struct.msg* %0, i32 0, i32 4, !dbg !3440
  %21 = load i32, i32* %20, align 4, !dbg !3440
  %22 = tail call fastcc i32 @atomic_inc() #26, !dbg !3441
  %23 = getelementptr inbounds %struct.anon.3, %struct.anon.3* @stats, i32 0, i32 1, i32 %22, !dbg !3442
  store i32 %21, i32* %23, align 4, !dbg !3443
  %24 = load i32, i32* %7, align 4, !dbg !3444
  %25 = icmp eq i32 %24, 39, !dbg !3445
  br i1 %25, label %26, label %60, !dbg !3446

26:                                               ; preds = %19
  %27 = bitcast i32* %3 to i8*, !dbg !3447
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %27) #24, !dbg !3447
  %28 = bitcast i32* %4 to i8*, !dbg !3447
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %28) #24, !dbg !3447
  %29 = bitcast i32* %5 to i8*, !dbg !3447
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %29) #24, !dbg !3447
  %30 = bitcast i32* %6 to i8*, !dbg !3447
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %30) #24, !dbg !3447
  %31 = tail call fastcc i32 @k_sem_take() #26, !dbg !3448
  call void @llvm.dbg.value(metadata i32 %31, metadata !3422, metadata !DIExpression()), !dbg !3449
  %32 = icmp eq i32 %31, 0, !dbg !3450
  br i1 %32, label %34, label %33, !dbg !3453

33:                                               ; preds = %26
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.6, i32 0, i32 0), i32 noundef 148) #25, !dbg !3454
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.6, i32 0, i32 0), i32 noundef 148) #25, !dbg !3454
  unreachable, !dbg !3454

34:                                               ; preds = %26
  tail call fastcc void @k_msleep() #26, !dbg !3456
  %35 = load i32, i32* getelementptr inbounds (%struct.anon.3, %struct.anon.3* @stats, i32 0, i32 0), align 4, !dbg !3457
  call void @llvm.dbg.value(metadata i32* %3, metadata !3416, metadata !DIExpression(DW_OP_deref)), !dbg !3449
  call void @llvm.dbg.value(metadata i32* %4, metadata !3419, metadata !DIExpression(DW_OP_deref)), !dbg !3449
  call void @llvm.dbg.value(metadata i32* %5, metadata !3420, metadata !DIExpression(DW_OP_deref)), !dbg !3449
  call void @llvm.dbg.value(metadata i32* %6, metadata !3421, metadata !DIExpression(DW_OP_deref)), !dbg !3449
  call fastcc void @calc_stats(i32* noundef getelementptr inbounds (%struct.anon.3, %struct.anon.3* @stats, i32 0, i32 1, i32 0), i32 noundef %35, i32* noundef nonnull %4, i32* noundef nonnull %3, i32* noundef nonnull %5, i32* noundef nonnull %6) #26, !dbg !3458
  %36 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 3) #26, !dbg !3459
  %37 = zext i8 %36 to i32, !dbg !3459
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.8, i32 0, i32 0), i32 noundef %37) #25, !dbg !3459
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.9, i32 0, i32 0), i32 noundef %37) #25, !dbg !3464
  %38 = load i32, i32* %4, align 4, !dbg !3469
  call void @llvm.dbg.value(metadata i32 %38, metadata !3419, metadata !DIExpression()), !dbg !3449
  %39 = load i32, i32* %3, align 4, !dbg !3469
  call void @llvm.dbg.value(metadata i32 %39, metadata !3416, metadata !DIExpression()), !dbg !3449
  %40 = load i32, i32* %5, align 4, !dbg !3469
  call void @llvm.dbg.value(metadata i32 %40, metadata !3420, metadata !DIExpression()), !dbg !3449
  %41 = load i32, i32* %6, align 4, !dbg !3469
  call void @llvm.dbg.value(metadata i32 %41, metadata !3421, metadata !DIExpression()), !dbg !3449
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.10, i32 0, i32 0), i32 noundef %37, i32 noundef %38, i32 noundef %39, i32 noundef %40, i32 noundef %41) #25, !dbg !3469
  call void @llvm.dbg.value(metadata i32 0, metadata !3423, metadata !DIExpression()), !dbg !3474
  br label %43, !dbg !3475

42:                                               ; preds = %57
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.13, i32 0, i32 0), i32 noundef %37) #25, !dbg !3476
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %30) #24, !dbg !3481
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %29) #24, !dbg !3481
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %28) #24, !dbg !3481
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %27) #24, !dbg !3481
  br label %60, !dbg !3482

43:                                               ; preds = %34, %57
  %44 = phi i32 [ 0, %34 ], [ %58, %57 ]
  call void @llvm.dbg.value(metadata i32 %44, metadata !3423, metadata !DIExpression()), !dbg !3474
  %45 = getelementptr inbounds %struct.anon.3, %struct.anon.3* @stats, i32 0, i32 2, i32 %44, i32 0, !dbg !3483
  %46 = load i32, i32* %45, align 4, !dbg !3483
  %47 = icmp eq i32 %46, 0, !dbg !3487
  br i1 %47, label %48, label %51, !dbg !3488

48:                                               ; preds = %43
  %49 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 2) #26, !dbg !3489
  %50 = zext i8 %49 to i32, !dbg !3489
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.11, i32 0, i32 0), i32 noundef %50, i32 noundef %44) #25, !dbg !3489
  br label %57, !dbg !3495

51:                                               ; preds = %43
  %52 = getelementptr inbounds %struct.anon.3, %struct.anon.3* @stats, i32 0, i32 2, i32 %44, i32 1, i32 0, !dbg !3496
  call void @llvm.dbg.value(metadata i32* %3, metadata !3416, metadata !DIExpression(DW_OP_deref)), !dbg !3449
  call void @llvm.dbg.value(metadata i32* %4, metadata !3419, metadata !DIExpression(DW_OP_deref)), !dbg !3449
  call void @llvm.dbg.value(metadata i32* %5, metadata !3420, metadata !DIExpression(DW_OP_deref)), !dbg !3449
  call void @llvm.dbg.value(metadata i32* %6, metadata !3421, metadata !DIExpression(DW_OP_deref)), !dbg !3449
  call fastcc void @calc_stats(i32* noundef nonnull %52, i32 noundef %46, i32* noundef nonnull %4, i32* noundef nonnull %3, i32* noundef nonnull %5, i32* noundef nonnull %6) #26, !dbg !3497
  %53 = load i32, i32* %4, align 4, !dbg !3498
  call void @llvm.dbg.value(metadata i32 %53, metadata !3419, metadata !DIExpression()), !dbg !3449
  %54 = load i32, i32* %3, align 4, !dbg !3498
  call void @llvm.dbg.value(metadata i32 %54, metadata !3416, metadata !DIExpression()), !dbg !3449
  %55 = load i32, i32* %5, align 4, !dbg !3498
  call void @llvm.dbg.value(metadata i32 %55, metadata !3420, metadata !DIExpression()), !dbg !3449
  %56 = load i32, i32* %6, align 4, !dbg !3498
  call void @llvm.dbg.value(metadata i32 %56, metadata !3421, metadata !DIExpression()), !dbg !3449
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.12, i32 0, i32 0), i32 noundef %37, i32 noundef %44, i32 noundef %53, i32 noundef %54, i32 noundef %55, i32 noundef %56) #25, !dbg !3498
  br label %57, !dbg !3503

57:                                               ; preds = %51, %48
  %58 = add nuw nsw i32 %44, 1, !dbg !3504
  call void @llvm.dbg.value(metadata i32 %58, metadata !3423, metadata !DIExpression()), !dbg !3474
  %59 = icmp eq i32 %58, 4, !dbg !3505
  br i1 %59, label %42, label %43, !dbg !3475, !llvm.loop !3506

60:                                               ; preds = %19, %42, %2
  ret void, !dbg !3508
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @atomic_inc() unnamed_addr #7 !dbg !3509 {
  call void @llvm.dbg.value(metadata i32* getelementptr inbounds (%struct.anon.3, %struct.anon.3* @stats, i32 0, i32 0), metadata !3516, metadata !DIExpression()), !dbg !3517
  %1 = tail call fastcc i32 @atomic_add() #26, !dbg !3518
  ret i32 %1, !dbg !3519
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_sem_take() unnamed_addr #1 !dbg !3520 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3526, metadata !DIExpression()), !dbg !3527
  call void @llvm.dbg.value(metadata %struct.k_sem* @report_cookie, metadata !3525, metadata !DIExpression()), !dbg !3527
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !3528, !srcloc !3530
  %1 = tail call i32 @z_impl_k_sem_take(%struct.k_sem* noundef nonnull @report_cookie, [1 x i64] [i64 -1]) #25, !dbg !3531
  ret i32 %1, !dbg !3532
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_msleep() unnamed_addr #1 !dbg !3533 {
  call void @llvm.dbg.value(metadata i32 100, metadata !3537, metadata !DIExpression()), !dbg !3538
  tail call fastcc void @k_sleep([1 x i64] [i64 1000]) #26, !dbg !3539
  ret void, !dbg !3540
}

; Function Attrs: nofree noinline nosync nounwind optsize
define internal fastcc void @calc_stats(i32* nocapture noundef readonly %0, i32 noundef %1, i32* nocapture noundef %2, i32* nocapture noundef %3, i32* nocapture noundef %4, i32* nocapture noundef writeonly %5) unnamed_addr #8 !dbg !3541 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !3547, metadata !DIExpression()), !dbg !3562
  call void @llvm.dbg.value(metadata i32 %1, metadata !3548, metadata !DIExpression()), !dbg !3562
  call void @llvm.dbg.value(metadata i32* %2, metadata !3549, metadata !DIExpression()), !dbg !3562
  call void @llvm.dbg.value(metadata i32* %3, metadata !3550, metadata !DIExpression()), !dbg !3562
  call void @llvm.dbg.value(metadata i32* %4, metadata !3551, metadata !DIExpression()), !dbg !3562
  call void @llvm.dbg.value(metadata i32* %5, metadata !3552, metadata !DIExpression()), !dbg !3562
  call void @llvm.dbg.value(metadata i64 0, metadata !3553, metadata !DIExpression()), !dbg !3562
  call void @llvm.dbg.value(metadata i64 0, metadata !3554, metadata !DIExpression()), !dbg !3562
  store i32 2147483647, i32* %2, align 4, !dbg !3563
  store i32 0, i32* %3, align 4, !dbg !3564
  call void @llvm.dbg.value(metadata i32 0, metadata !3555, metadata !DIExpression()), !dbg !3565
  call void @llvm.dbg.value(metadata i64 0, metadata !3553, metadata !DIExpression()), !dbg !3562
  %7 = icmp eq i32 %1, 0, !dbg !3566
  br i1 %7, label %8, label %21, !dbg !3568

8:                                                ; preds = %6
  %9 = lshr i32 %1, 1, !dbg !3569
  %10 = trunc i32 %9 to i8, !dbg !3570
  %11 = trunc i32 %1 to i8, !dbg !3570
  %12 = udiv i8 %10, %11, !dbg !3570
  %13 = zext i8 %12 to i32, !dbg !3571
  store i32 %13, i32* %4, align 4, !dbg !3572
  call void @llvm.dbg.value(metadata i32 0, metadata !3557, metadata !DIExpression()), !dbg !3573
  call void @llvm.dbg.value(metadata i64 0, metadata !3554, metadata !DIExpression()), !dbg !3562
  br label %38, !dbg !3574

14:                                               ; preds = %21
  %15 = lshr i32 %1, 1, !dbg !3569
  %16 = zext i32 %15 to i64, !dbg !3575
  %17 = add i64 %35, %16, !dbg !3576
  %18 = zext i32 %1 to i64, !dbg !3577
  %19 = udiv i64 %17, %18, !dbg !3570
  %20 = trunc i64 %19 to i32, !dbg !3571
  store i32 %20, i32* %4, align 4, !dbg !3572
  call void @llvm.dbg.value(metadata i32 0, metadata !3557, metadata !DIExpression()), !dbg !3573
  call void @llvm.dbg.value(metadata i64 0, metadata !3554, metadata !DIExpression()), !dbg !3562
  br i1 %7, label %38, label %45, !dbg !3574

21:                                               ; preds = %6, %21
  %22 = phi i64 [ %35, %21 ], [ 0, %6 ]
  %23 = phi i32 [ %36, %21 ], [ 0, %6 ]
  call void @llvm.dbg.value(metadata i64 %22, metadata !3553, metadata !DIExpression()), !dbg !3562
  call void @llvm.dbg.value(metadata i32 %23, metadata !3555, metadata !DIExpression()), !dbg !3565
  %24 = load i32, i32* %2, align 4, !dbg !3578
  %25 = getelementptr inbounds i32, i32* %0, i32 %23, !dbg !3578
  %26 = load i32, i32* %25, align 4, !dbg !3578
  %27 = icmp ult i32 %24, %26, !dbg !3578
  %28 = select i1 %27, i32 %24, i32 %26, !dbg !3578
  store i32 %28, i32* %2, align 4, !dbg !3580
  %29 = load i32, i32* %3, align 4, !dbg !3581
  %30 = load i32, i32* %25, align 4, !dbg !3581
  %31 = icmp ugt i32 %29, %30, !dbg !3581
  %32 = select i1 %31, i32 %29, i32 %30, !dbg !3581
  store i32 %32, i32* %3, align 4, !dbg !3582
  %33 = load i32, i32* %25, align 4, !dbg !3583
  %34 = zext i32 %33 to i64, !dbg !3583
  %35 = add i64 %22, %34, !dbg !3584
  call void @llvm.dbg.value(metadata i64 %35, metadata !3553, metadata !DIExpression()), !dbg !3562
  %36 = add nuw nsw i32 %23, 1, !dbg !3585
  call void @llvm.dbg.value(metadata i32 %36, metadata !3555, metadata !DIExpression()), !dbg !3565
  %37 = icmp eq i32 %36, %1, !dbg !3566
  br i1 %37, label %14, label %21, !dbg !3568, !llvm.loop !3586

38:                                               ; preds = %45, %8, %14
  %39 = phi i64 [ 0, %14 ], [ 0, %8 ], [ %18, %45 ]
  %40 = phi i64 [ %16, %14 ], [ 0, %8 ], [ %16, %45 ]
  %41 = phi i64 [ 0, %14 ], [ 0, %8 ], [ %53, %45 ], !dbg !3562
  %42 = add i64 %41, %40, !dbg !3588
  %43 = udiv i64 %42, %39, !dbg !3589
  %44 = tail call fastcc i32 @isqrt(i64 noundef %43) #26, !dbg !3590
  store i32 %44, i32* %5, align 4, !dbg !3591
  ret void, !dbg !3592

45:                                               ; preds = %14, %45
  %46 = phi i32 [ %54, %45 ], [ 0, %14 ]
  %47 = phi i64 [ %53, %45 ], [ 0, %14 ]
  call void @llvm.dbg.value(metadata i32 %46, metadata !3557, metadata !DIExpression()), !dbg !3573
  call void @llvm.dbg.value(metadata i64 %47, metadata !3554, metadata !DIExpression()), !dbg !3562
  %48 = getelementptr inbounds i32, i32* %0, i32 %46, !dbg !3593
  %49 = load i32, i32* %48, align 4, !dbg !3593
  %50 = sub i32 %49, %20, !dbg !3594
  %51 = sext i32 %50 to i64, !dbg !3595
  call void @llvm.dbg.value(metadata i64 %51, metadata !3559, metadata !DIExpression()), !dbg !3596
  %52 = mul nsw i64 %51, %51, !dbg !3597
  %53 = add i64 %52, %47, !dbg !3598
  call void @llvm.dbg.value(metadata i64 %53, metadata !3554, metadata !DIExpression()), !dbg !3562
  %54 = add nuw nsw i32 %46, 1, !dbg !3599
  call void @llvm.dbg.value(metadata i32 %54, metadata !3557, metadata !DIExpression()), !dbg !3573
  %55 = icmp eq i32 %54, %1, !dbg !3600
  br i1 %55, label %38, label %45, !dbg !3574, !llvm.loop !3601
}

; Function Attrs: nofree noinline nosync nounwind optsize readnone
define internal fastcc i32 @isqrt(i64 noundef %0) unnamed_addr #9 !dbg !3603 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !3607, metadata !DIExpression()), !dbg !3612
  %2 = icmp ugt i64 %0, 1, !dbg !3613
  %3 = trunc i64 %0 to i32, !dbg !3614
  br i1 %2, label %6, label %4, !dbg !3614

4:                                                ; preds = %1, %6
  %5 = phi i32 [ %15, %6 ], [ %3, %1 ]
  ret i32 %5, !dbg !3615

6:                                                ; preds = %1
  %7 = lshr i64 %0, 2, !dbg !3616
  %8 = tail call fastcc i32 @isqrt(i64 noundef %7) #26, !dbg !3617
  %9 = shl i32 %8, 1, !dbg !3618
  %10 = zext i32 %9 to i64, !dbg !3617
  call void @llvm.dbg.value(metadata i64 %10, metadata !3608, metadata !DIExpression()), !dbg !3619
  %11 = or i64 %10, 1, !dbg !3620
  call void @llvm.dbg.value(metadata i64 %11, metadata !3611, metadata !DIExpression()), !dbg !3619
  %12 = mul nuw i64 %11, %11, !dbg !3621
  %13 = icmp ugt i64 %12, %0, !dbg !3622
  %14 = select i1 %13, i64 %10, i64 %11, !dbg !3623
  %15 = trunc i64 %14 to i32
  br label %4
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_sleep([1 x i64] %0) unnamed_addr #1 !dbg !3624 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3628, metadata !DIExpression()), !dbg !3629
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !3630, !srcloc !3632
  %2 = tail call i32 @z_impl_k_sleep([1 x i64] %0) #25, !dbg !3633
  ret void, !dbg !3634
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @atomic_add() unnamed_addr #7 !dbg !3635 {
  call void @llvm.dbg.value(metadata i32* getelementptr inbounds (%struct.anon.3, %struct.anon.3* @stats, i32 0, i32 0), metadata !3639, metadata !DIExpression()), !dbg !3641
  call void @llvm.dbg.value(metadata i32 1, metadata !3640, metadata !DIExpression()), !dbg !3641
  %1 = atomicrmw add i32* getelementptr inbounds (%struct.anon.3, %struct.anon.3* @stats, i32 0, i32 0), i32 1 seq_cst, align 4, !dbg !3642
  ret i32 %1, !dbg !3643
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get() unnamed_addr #6 !dbg !3644 {
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !3645, !srcloc !3647
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #25, !dbg !3648
  ret %struct.k_thread* %1, !dbg !3649
}

; Function Attrs: noinline nounwind optsize
define dso_local void @message_dev_init() local_unnamed_addr #1 !dbg !3650 {
  call void @llvm.dbg.value(metadata i64 20000, metadata !3652, metadata !DIExpression()), !dbg !3655
  call void @llvm.dbg.value(metadata i64 4, metadata !3653, metadata !DIExpression()), !dbg !3655
  call void @llvm.dbg.value(metadata i64 80000, metadata !3654, metadata !DIExpression()), !dbg !3655
  store i32 96000, i32* @max_duty_cyc, align 4, !dbg !3656
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull @timeout, void (%struct._timeout*)* noundef nonnull @dev_timer_expired, [1 x i64] zeroinitializer) #25, !dbg !3657
  ret void, !dbg !3658
}

; Function Attrs: noinline nounwind optsize
define internal void @dev_timer_expired(%struct._timeout* noundef readnone %0) #1 !dbg !3659 {
  %2 = alloca %struct.msg, align 4
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !3661, metadata !DIExpression()), !dbg !3672
  %3 = icmp eq %struct._timeout* %0, @timeout, !dbg !3673
  br i1 %3, label %5, label %4, !dbg !3676

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.14, i32 0, i32 0), i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.15, i32 0, i32 0), i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.2.16, i32 0, i32 0), i32 noundef 56) #25, !dbg !3677
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.2.16, i32 0, i32 0), i32 noundef 56) #25, !dbg !3677
  unreachable, !dbg !3677

5:                                                ; preds = %1
  %6 = tail call fastcc i32 @k_cycle_get_32.17() #26, !dbg !3679
  call void @llvm.dbg.value(metadata i32 %6, metadata !3662, metadata !DIExpression()), !dbg !3672
  %7 = bitcast %struct.msg* %2 to i8*, !dbg !3680
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %7) #24, !dbg !3680
  call void @llvm.dbg.declare(metadata %struct.msg* %2, metadata !3663, metadata !DIExpression()), !dbg !3681
  %8 = load i32, i32* @msg_seq, align 4, !dbg !3682
  %9 = add i32 %8, 1, !dbg !3682
  store i32 %9, i32* @msg_seq, align 4, !dbg !3682
  %10 = getelementptr inbounds %struct.msg, %struct.msg* %2, i32 0, i32 0, !dbg !3683
  store i32 %8, i32* %10, align 4, !dbg !3684
  %11 = getelementptr inbounds %struct.msg, %struct.msg* %2, i32 0, i32 1, !dbg !3685
  store i32 %6, i32* %11, align 4, !dbg !3686
  %12 = tail call fastcc i32 @rand32() #26, !dbg !3687
  %13 = and i32 %12, 3, !dbg !3688
  %14 = getelementptr inbounds %struct.msg, %struct.msg* %2, i32 0, i32 2, !dbg !3689
  store i32 %13, i32* %14, align 4, !dbg !3690
  %15 = tail call fastcc i32 @rand32() #26, !dbg !3691
  %16 = load i32, i32* @max_duty_cyc, align 4, !dbg !3692
  %17 = urem i32 %15, %16, !dbg !3693
  %18 = getelementptr inbounds %struct.msg, %struct.msg* %2, i32 0, i32 3, !dbg !3694
  store i32 %17, i32* %18, align 4, !dbg !3695
  %19 = call fastcc i32 @k_msgq_put.18(i8* noundef nonnull %7) #26, !dbg !3696
  call void @llvm.dbg.value(metadata i32 %19, metadata !3671, metadata !DIExpression()), !dbg !3672
  %20 = icmp eq i32 %19, 0, !dbg !3697
  br i1 %20, label %22, label %21, !dbg !3699

21:                                               ; preds = %5
  call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.4.19, i32 0, i32 0)) #25, !dbg !3700
  br label %22, !dbg !3702

22:                                               ; preds = %21, %5
  %23 = load i32, i32* %10, align 4, !dbg !3703
  %24 = icmp ult i32 %23, 40, !dbg !3705
  br i1 %24, label %25, label %26, !dbg !3706

25:                                               ; preds = %22
  call fastcc void @timeout_reset() #26, !dbg !3707
  br label %26, !dbg !3709

26:                                               ; preds = %25, %22
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %7) #24, !dbg !3710
  ret void, !dbg !3710
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32.17() unnamed_addr #1 !dbg !3711 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32.20() #26, !dbg !3712
  ret i32 %1, !dbg !3713
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @rand32() unnamed_addr #1 !dbg !388 {
  %1 = load i64, i64* @rand32.state, align 8, !dbg !3714
  %2 = icmp eq i64 %1, 0, !dbg !3714
  br i1 %2, label %3, label %7, !dbg !3716

3:                                                ; preds = %0
  %4 = tail call fastcc i32 @k_cycle_get_32.17() #26, !dbg !3717
  %5 = zext i32 %4 to i64, !dbg !3719
  %6 = shl nuw nsw i64 %5, 16, !dbg !3720
  br label %7, !dbg !3721

7:                                                ; preds = %3, %0
  %8 = phi i64 [ %6, %3 ], [ %1, %0 ], !dbg !3722
  %9 = mul i64 %8, 6364136223846793005, !dbg !3723
  %10 = add i64 %9, 1442695040888963407, !dbg !3724
  store i64 %10, i64* @rand32.state, align 8, !dbg !3725
  %11 = lshr i64 %10, 32, !dbg !3726
  %12 = trunc i64 %11 to i32, !dbg !3727
  ret i32 %12, !dbg !3728
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_msgq_put.18(i8* noundef %0) unnamed_addr #1 !dbg !3729 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3740, metadata !DIExpression()), !dbg !3741
  call void @llvm.dbg.value(metadata %struct.k_msgq* @hw_msgs, metadata !3738, metadata !DIExpression()), !dbg !3741
  call void @llvm.dbg.value(metadata i8* %0, metadata !3739, metadata !DIExpression()), !dbg !3741
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !3742, !srcloc !3744
  %2 = tail call i32 @z_impl_k_msgq_put(%struct.k_msgq* noundef nonnull @hw_msgs, i8* noundef %0, [1 x i64] zeroinitializer) #25, !dbg !3745
  ret i32 %2, !dbg !3746
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @timeout_reset() unnamed_addr #1 !dbg !3747 {
  %1 = tail call fastcc i32 @rand32() #26, !dbg !3750
  %2 = and i32 %1, 7, !dbg !3751
  call void @llvm.dbg.value(metadata i32 %2, metadata !3749, metadata !DIExpression()), !dbg !3752
  %3 = zext i32 %2 to i64, !dbg !3753
  %4 = insertvalue [1 x i64] poison, i64 %3, 0, !dbg !3754
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull @timeout, void (%struct._timeout*)* noundef nonnull @dev_timer_expired, [1 x i64] %4) #25, !dbg !3754
  ret void, !dbg !3755
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32.20() unnamed_addr #1 !dbg !3756 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #25, !dbg !3757
  ret i32 %1, !dbg !3758
}

; Function Attrs: noinline nounwind optsize
define dso_local void @message_dev_fetch(%struct.msg* noundef %0) local_unnamed_addr #1 !dbg !3759 {
  call void @llvm.dbg.value(metadata %struct.msg* %0, metadata !3764, metadata !DIExpression()), !dbg !3766
  %2 = bitcast %struct.msg* %0 to i8*, !dbg !3767
  %3 = tail call fastcc i32 @k_msgq_get.23(i8* noundef %2) #26, !dbg !3768
  call void @llvm.dbg.value(metadata i32 %3, metadata !3765, metadata !DIExpression()), !dbg !3766
  %4 = icmp eq i32 %3, 0, !dbg !3769
  br i1 %4, label %6, label %5, !dbg !3772

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.14, i32 0, i32 0), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1.24, i32 0, i32 0), i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.2.16, i32 0, i32 0), i32 noundef 103) #25, !dbg !3773
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.2.16, i32 0, i32 0), i32 noundef 103) #25, !dbg !3773
  unreachable, !dbg !3773

6:                                                ; preds = %1
  ret void, !dbg !3775
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_msgq_get.23(i8* noundef %0) unnamed_addr #1 !dbg !3776 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3782, metadata !DIExpression()), !dbg !3783
  call void @llvm.dbg.value(metadata %struct.k_msgq* @hw_msgs, metadata !3780, metadata !DIExpression()), !dbg !3783
  call void @llvm.dbg.value(metadata i8* %0, metadata !3781, metadata !DIExpression()), !dbg !3783
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !3784, !srcloc !3786
  %2 = tail call i32 @z_impl_k_msgq_get(%struct.k_msgq* noundef nonnull @hw_msgs, i8* noundef %0, [1 x i64] [i64 -1]) #25, !dbg !3787
  ret i32 %2, !dbg !3788
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbvprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %4) local_unnamed_addr #1 !dbg !3789 {
  %6 = alloca [16 x i8], align 1
  %7 = alloca [16 x i8], align 1
  %8 = extractvalue [1 x i32] %4, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !3804, metadata !DIExpression()), !dbg !3867
  call void @llvm.dbg.value(metadata i8* %0, metadata !3800, metadata !DIExpression()), !dbg !3867
  call void @llvm.dbg.value(metadata i32 %1, metadata !3801, metadata !DIExpression()), !dbg !3867
  call void @llvm.dbg.value(metadata i32 %2, metadata !3802, metadata !DIExpression()), !dbg !3867
  call void @llvm.dbg.value(metadata i8* %3, metadata !3803, metadata !DIExpression()), !dbg !3867
  call void @llvm.dbg.value(metadata i8* %0, metadata !3805, metadata !DIExpression()), !dbg !3867
  call void @llvm.dbg.value(metadata i8* %0, metadata !3806, metadata !DIExpression()), !dbg !3867
  %10 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 0, !dbg !3868
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #24, !dbg !3868
  call void @llvm.dbg.declare(metadata [16 x i8]* %6, metadata !3809, metadata !DIExpression()), !dbg !3869
  %11 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 0, !dbg !3870
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #24, !dbg !3870
  call void @llvm.dbg.declare(metadata [16 x i8]* %7, metadata !3811, metadata !DIExpression()), !dbg !3871
  call void @llvm.dbg.value(metadata i32 0, metadata !3812, metadata !DIExpression()), !dbg !3867
  call void @llvm.dbg.value(metadata i32 0, metadata !3813, metadata !DIExpression()), !dbg !3867
  call void @llvm.dbg.value(metadata i32 0, metadata !3814, metadata !DIExpression()), !dbg !3867
  call void @llvm.dbg.value(metadata i32 -1, metadata !3815, metadata !DIExpression()), !dbg !3867
  call void @llvm.dbg.value(metadata i8 0, metadata !3818, metadata !DIExpression()), !dbg !3867
  %12 = and i32 %2, 4, !dbg !3872
  %13 = icmp eq i32 %12, 0, !dbg !3873
  call void @llvm.dbg.value(metadata i1 %13, metadata !3819, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3867
  %14 = lshr i32 %2, 3, !dbg !3874
  %15 = and i32 %14, 7, !dbg !3874
  %16 = add nuw nsw i32 %15, 1, !dbg !3875
  call void @llvm.dbg.value(metadata i32 %16, metadata !3820, metadata !DIExpression()), !dbg !3867
  call void @llvm.dbg.value(metadata i8 0, metadata !3821, metadata !DIExpression()), !dbg !3867
  call void @llvm.dbg.value(metadata i8* %0, metadata !3822, metadata !DIExpression()), !dbg !3867
  %17 = ptrtoint i8* %0 to i32, !dbg !3876
  %18 = and i32 %17, 3, !dbg !3878
  %19 = icmp eq i32 %18, 0, !dbg !3878
  br i1 %19, label %20, label %320, !dbg !3879

20:                                               ; preds = %5
  %21 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !3880
  call void @llvm.dbg.value(metadata i8* %21, metadata !3806, metadata !DIExpression()), !dbg !3867
  %22 = icmp eq i8* %0, null, !dbg !3881
  %23 = and i32 %1, 7, !dbg !3883
  %24 = sub nuw nsw i32 8, %23, !dbg !3883
  %25 = select i1 %22, i32 %23, i32 0, !dbg !3883
  %26 = getelementptr i8, i8* %21, i32 %25, !dbg !3883
  %27 = select i1 %22, i32 %24, i32 %1, !dbg !3883
  call void @llvm.dbg.value(metadata i32 %27, metadata !3801, metadata !DIExpression()), !dbg !3867
  call void @llvm.dbg.value(metadata i8* %26, metadata !3806, metadata !DIExpression()), !dbg !3867
  br i1 %22, label %33, label %28, !dbg !3884

28:                                               ; preds = %20
  %29 = ptrtoint i8* %26 to i32, !dbg !3886
  %30 = sub i32 4, %17, !dbg !3886
  %31 = add i32 %30, %29, !dbg !3887
  %32 = icmp ugt i32 %31, %27, !dbg !3888
  br i1 %32, label %320, label %33, !dbg !3889

33:                                               ; preds = %28, %20
  %34 = getelementptr inbounds i8, i8* %3, i32 -1, !dbg !3890
  call void @llvm.dbg.value(metadata i8* %34, metadata !3803, metadata !DIExpression()), !dbg !3867
  call void @llvm.dbg.value(metadata i8* %3, metadata !3817, metadata !DIExpression()), !dbg !3867
  call void @llvm.dbg.value(metadata i32 4, metadata !3808, metadata !DIExpression()), !dbg !3867
  call void @llvm.dbg.value(metadata i32 4, metadata !3807, metadata !DIExpression()), !dbg !3867
  %35 = and i32 %2, 2
  %36 = icmp ne i32 %35, 0
  %37 = sub i32 8, %17
  br label %130, !dbg !3891

38:                                               ; preds = %63, %219
  %39 = phi i8 [ %224, %219 ], [ %64, %63 ]
  %40 = phi i8* [ %223, %219 ], [ %65, %63 ]
  %41 = phi i8* [ %221, %219 ], [ %66, %63 ]
  %42 = phi i8* [ %40, %219 ], [ %67, %63 ]
  %43 = phi i8* [ %222, %219 ], [ %68, %63 ]
  %44 = phi i32 [ %113, %219 ], [ %69, %63 ]
  %45 = phi i32 [ %112, %219 ], [ %70, %63 ]
  %46 = phi i1 [ %110, %219 ], [ %71, %63 ]
  call void @llvm.dbg.value(metadata i8* %41, metadata !3804, metadata !DIExpression()), !dbg !3867
  call void @llvm.dbg.value(metadata i8* %42, metadata !3803, metadata !DIExpression()), !dbg !3867
  call void @llvm.dbg.value(metadata i8* %43, metadata !3806, metadata !DIExpression()), !dbg !3867
  call void @llvm.dbg.value(metadata i32 %44, metadata !3807, metadata !DIExpression()), !dbg !3867
  call void @llvm.dbg.value(metadata i32 %45, metadata !3808, metadata !DIExpression()), !dbg !3867
  call void @llvm.dbg.value(metadata i32 %72, metadata !3815, metadata !DIExpression()), !dbg !3867
  br i1 %46, label %73, label %47, !dbg !3892

47:                                               ; preds = %38
  %48 = icmp eq i8 %39, 37, !dbg !3893
  %49 = zext i1 %48 to i32, !dbg !3897
  %50 = add nsw i32 %72, %49, !dbg !3897
  %51 = select i1 %48, i32 4, i32 %45, !dbg !3897
  %52 = select i1 %48, i32 4, i32 %44, !dbg !3897
  call void @llvm.dbg.value(metadata i32 %52, metadata !3807, metadata !DIExpression()), !dbg !3867
  call void @llvm.dbg.value(metadata i32 %51, metadata !3808, metadata !DIExpression()), !dbg !3867
  call void @llvm.dbg.value(metadata i8 poison, metadata !3818, metadata !DIExpression()), !dbg !3867
  call void @llvm.dbg.value(metadata i32 %50, metadata !3815, metadata !DIExpression()), !dbg !3867
  br label %53, !dbg !3898

53:                                               ; preds = %73, %47, %74, %76, %77, %78, %106, %104
  %54 = phi i32 [ %72, %106 ], [ %72, %104 ], [ %72, %78 ], [ %72, %77 ], [ %72, %76 ], [ %75, %74 ], [ %50, %47 ], [ %72, %73 ]
  %55 = phi i1 [ false, %106 ], [ false, %104 ], [ true, %78 ], [ true, %77 ], [ true, %76 ], [ false, %74 ], [ %48, %47 ], [ true, %73 ]
  %56 = phi i32 [ %45, %106 ], [ 8, %104 ], [ 4, %78 ], [ 4, %77 ], [ %45, %76 ], [ %45, %74 ], [ %51, %47 ], [ 8, %73 ]
  %57 = phi i32 [ %44, %106 ], [ 8, %104 ], [ 4, %78 ], [ 4, %77 ], [ %44, %76 ], [ %44, %74 ], [ %52, %47 ], [ 8, %73 ]
  %58 = phi i8* [ %43, %106 ], [ %105, %104 ], [ %43, %78 ], [ %43, %77 ], [ %43, %76 ], [ %43, %74 ], [ %43, %47 ], [ %43, %73 ]
  %59 = phi i8* [ %41, %106 ], [ %93, %104 ], [ %41, %78 ], [ %41, %77 ], [ %41, %76 ], [ %41, %74 ], [ %41, %47 ], [ %41, %73 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !3804, metadata !DIExpression()), !dbg !3867
  call void @llvm.dbg.value(metadata i8* %40, metadata !3803, metadata !DIExpression()), !dbg !3867
  call void @llvm.dbg.value(metadata i8* %58, metadata !3806, metadata !DIExpression()), !dbg !3867
  call void @llvm.dbg.value(metadata i32 %57, metadata !3807, metadata !DIExpression()), !dbg !3867
  call void @llvm.dbg.value(metadata i32 %56, metadata !3808, metadata !DIExpression()), !dbg !3867
  call void @llvm.dbg.value(metadata i8 poison, metadata !3818, metadata !DIExpression()), !dbg !3867
  call void @llvm.dbg.value(metadata i32 %54, metadata !3815, metadata !DIExpression()), !dbg !3867
  %60 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !3899
  call void @llvm.dbg.value(metadata i8* %60, metadata !3803, metadata !DIExpression()), !dbg !3867
  %61 = load i8, i8* %60, align 1, !dbg !3901
  %62 = icmp eq i8 %61, 0, !dbg !3902
  br i1 %62, label %226, label %63, !dbg !3903, !llvm.loop !3904

63:                                               ; preds = %192, %53
  %64 = phi i8 [ %61, %53 ], [ %199, %192 ]
  %65 = phi i8* [ %60, %53 ], [ %198, %192 ]
  %66 = phi i8* [ %59, %53 ], [ %143, %192 ]
  %67 = phi i8* [ %40, %53 ], [ %141, %192 ]
  %68 = phi i8* [ %58, %53 ], [ %197, %192 ]
  %69 = phi i32 [ %57, %53 ], [ %139, %192 ]
  %70 = phi i32 [ %56, %53 ], [ %138, %192 ]
  %71 = phi i1 [ %55, %53 ], [ %134, %192 ]
  %72 = phi i32 [ %54, %53 ], [ %132, %192 ]
  br label %38, !dbg !3892

73:                                               ; preds = %38
  switch i8 %39, label %106 [
    i8 37, label %74
    i8 35, label %76
    i8 45, label %76
    i8 43, label %76
    i8 32, label %76
    i8 48, label %76
    i8 49, label %76
    i8 50, label %76
    i8 51, label %76
    i8 52, label %76
    i8 53, label %76
    i8 54, label %76
    i8 55, label %76
    i8 56, label %76
    i8 57, label %76
    i8 46, label %76
    i8 104, label %76
    i8 108, label %76
    i8 76, label %76
    i8 42, label %108
    i8 106, label %53
    i8 122, label %77
    i8 116, label %78
    i8 99, label %79
    i8 100, label %79
    i8 105, label %79
    i8 111, label %79
    i8 117, label %79
    i8 120, label %79
    i8 88, label %79
    i8 115, label %109
    i8 112, label %107
    i8 110, label %107
    i8 97, label %87
    i8 65, label %87
    i8 101, label %87
    i8 69, label %87
    i8 102, label %87
    i8 70, label %87
    i8 103, label %87
    i8 71, label %87
  ], !dbg !3907

74:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i8 0, metadata !3818, metadata !DIExpression()), !dbg !3867
  %75 = add nsw i32 %72, -1, !dbg !3908
  call void @llvm.dbg.value(metadata i32 %75, metadata !3815, metadata !DIExpression()), !dbg !3867
  br label %53, !dbg !3909

76:                                               ; preds = %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73
  br label %53, !dbg !3910

77:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i32 4, metadata !3808, metadata !DIExpression()), !dbg !3867
  call void @llvm.dbg.value(metadata i32 4, metadata !3807, metadata !DIExpression()), !dbg !3867
  br label %53, !dbg !3911

78:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i32 4, metadata !3808, metadata !DIExpression()), !dbg !3867
  call void @llvm.dbg.value(metadata i32 4, metadata !3807, metadata !DIExpression()), !dbg !3867
  br label %53, !dbg !3912

79:                                               ; preds = %73, %73, %73, %73, %73, %73, %73
  %80 = load i8, i8* %42, align 1, !dbg !3913
  %81 = icmp eq i8 %80, 108, !dbg !3915
  br i1 %81, label %82, label %109, !dbg !3916

82:                                               ; preds = %79
  %83 = getelementptr inbounds i8, i8* %42, i32 -1, !dbg !3917
  %84 = load i8, i8* %83, align 1, !dbg !3917
  %85 = icmp eq i8 %84, 108, !dbg !3920
  %86 = select i1 %85, i32 8, i32 4
  br label %109

87:                                               ; preds = %73, %73, %73, %73, %73, %73, %73, %73
  %88 = ptrtoint i8* %41 to i32, !dbg !3921
  %89 = add i32 %88, 7, !dbg !3921
  %90 = and i32 %89, -8, !dbg !3921
  %91 = inttoptr i32 %90 to i8*, !dbg !3921
  %92 = inttoptr i32 %90 to double*, !dbg !3921
  %93 = getelementptr inbounds i8, i8* %91, i32 8, !dbg !3921
  %94 = load double, double* %92, align 8, !dbg !3921
  call void @llvm.dbg.value(metadata i8* %93, metadata !3804, metadata !DIExpression()), !dbg !3867
  call void @llvm.dbg.value(metadata i32 8, metadata !3807, metadata !DIExpression()), !dbg !3867
  call void @llvm.dbg.value(metadata i32 8, metadata !3808, metadata !DIExpression()), !dbg !3867
  call void @llvm.dbg.value(metadata double %94, metadata !3835, metadata !DIExpression()), !dbg !3923
  %95 = ptrtoint i8* %43 to i32, !dbg !3924
  %96 = add i32 %95, 7, !dbg !3924
  %97 = and i32 %96, -8, !dbg !3924
  %98 = inttoptr i32 %97 to i8*, !dbg !3925
  call void @llvm.dbg.value(metadata i8* %98, metadata !3806, metadata !DIExpression()), !dbg !3867
  br i1 %22, label %104, label %99, !dbg !3926

99:                                               ; preds = %87
  %100 = add i32 %37, %97, !dbg !3927
  %101 = icmp ugt i32 %100, %196, !dbg !3931
  br i1 %101, label %320, label %102, !dbg !3932

102:                                              ; preds = %99
  %103 = inttoptr i32 %97 to double*, !dbg !3933
  store double %94, double* %103, align 8, !dbg !3933
  br label %104

104:                                              ; preds = %102, %87
  %105 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !3936
  call void @llvm.dbg.value(metadata i8* %105, metadata !3806, metadata !DIExpression()), !dbg !3867
  call void @llvm.dbg.value(metadata i8 poison, metadata !3818, metadata !DIExpression()), !dbg !3867
  br label %53

106:                                              ; preds = %73
  call void @llvm.dbg.value(metadata i8 0, metadata !3818, metadata !DIExpression()), !dbg !3867
  br label %53, !dbg !3937

107:                                              ; preds = %73, %73
  br label %109, !dbg !3938

108:                                              ; preds = %73
  br label %109, !dbg !3938

109:                                              ; preds = %73, %108, %107, %79, %82
  %110 = phi i1 [ false, %82 ], [ false, %79 ], [ false, %107 ], [ true, %108 ], [ false, %73 ]
  %111 = phi i1 [ false, %82 ], [ false, %79 ], [ false, %107 ], [ false, %108 ], [ true, %73 ]
  %112 = phi i32 [ %86, %82 ], [ %45, %79 ], [ 4, %107 ], [ %45, %108 ], [ 4, %73 ], !dbg !3867
  %113 = phi i32 [ %86, %82 ], [ %44, %79 ], [ 4, %107 ], [ %44, %108 ], [ 4, %73 ], !dbg !3867
  call void @llvm.dbg.value(metadata i32 %113, metadata !3807, metadata !DIExpression()), !dbg !3867
  call void @llvm.dbg.value(metadata i32 %112, metadata !3808, metadata !DIExpression()), !dbg !3867
  call void @llvm.dbg.value(metadata i8 poison, metadata !3821, metadata !DIExpression()), !dbg !3867
  call void @llvm.dbg.value(metadata i8 poison, metadata !3818, metadata !DIExpression()), !dbg !3867
  %114 = ptrtoint i8* %43 to i32, !dbg !3938
  %115 = add i32 %114, -1, !dbg !3938
  %116 = add i32 %115, %112, !dbg !3938
  %117 = sub i32 0, %112, !dbg !3938
  %118 = and i32 %116, %117, !dbg !3938
  %119 = inttoptr i32 %118 to i8*, !dbg !3939
  call void @llvm.dbg.value(metadata i8* %119, metadata !3806, metadata !DIExpression()), !dbg !3867
  br i1 %22, label %124, label %120, !dbg !3940

120:                                              ; preds = %109
  %121 = sub i32 %113, %17, !dbg !3942
  %122 = add i32 %121, %118, !dbg !3943
  %123 = icmp ugt i32 %122, %196, !dbg !3944
  br i1 %123, label %320, label %124, !dbg !3945

124:                                              ; preds = %120, %109
  br i1 %111, label %125, label %201, !dbg !3946

125:                                              ; preds = %124
  %126 = inttoptr i32 %118 to i8*, !dbg !3939
  %127 = getelementptr inbounds i8, i8* %41, i32 4, !dbg !3947
  call void @llvm.dbg.value(metadata i8* %127, metadata !3804, metadata !DIExpression()), !dbg !3867
  %128 = bitcast i8* %41 to i8**, !dbg !3947
  %129 = load i8*, i8** %128, align 4, !dbg !3947
  call void @llvm.dbg.value(metadata i8* %129, metadata !3817, metadata !DIExpression()), !dbg !3867
  br label %130, !dbg !3948

130:                                              ; preds = %125, %33
  %131 = phi i32 [ 0, %33 ], [ %193, %125 ], !dbg !3867
  %132 = phi i32 [ -1, %33 ], [ %72, %125 ], !dbg !3949
  %133 = phi i8* [ %3, %33 ], [ %129, %125 ], !dbg !3867
  %134 = phi i1 [ false, %33 ], [ %110, %125 ]
  %135 = phi i32 [ 0, %33 ], [ %194, %125 ], !dbg !3950
  %136 = phi i32 [ %16, %33 ], [ %147, %125 ], !dbg !3867
  %137 = phi i32 [ 0, %33 ], [ %195, %125 ], !dbg !3867
  %138 = phi i32 [ 4, %33 ], [ %112, %125 ], !dbg !3867
  %139 = phi i32 [ 4, %33 ], [ %113, %125 ], !dbg !3867
  %140 = phi i8* [ %26, %33 ], [ %126, %125 ], !dbg !3867
  %141 = phi i8* [ %34, %33 ], [ %40, %125 ], !dbg !3867
  %142 = phi i32 [ %27, %33 ], [ %196, %125 ], !dbg !3951
  %143 = phi i8* [ %9, %33 ], [ %127, %125 ]
  call void @llvm.dbg.value(metadata i8* %143, metadata !3804, metadata !DIExpression()), !dbg !3867
  call void @llvm.dbg.value(metadata i32 %142, metadata !3801, metadata !DIExpression()), !dbg !3867
  call void @llvm.dbg.value(metadata i8* %141, metadata !3803, metadata !DIExpression()), !dbg !3867
  call void @llvm.dbg.value(metadata i8* %140, metadata !3806, metadata !DIExpression()), !dbg !3867
  call void @llvm.dbg.value(metadata i32 %139, metadata !3807, metadata !DIExpression()), !dbg !3867
  call void @llvm.dbg.value(metadata i32 %138, metadata !3808, metadata !DIExpression()), !dbg !3867
  call void @llvm.dbg.value(metadata i32 %137, metadata !3812, metadata !DIExpression()), !dbg !3867
  call void @llvm.dbg.value(metadata i32 %136, metadata !3820, metadata !DIExpression()), !dbg !3867
  call void @llvm.dbg.value(metadata i32 %135, metadata !3813, metadata !DIExpression()), !dbg !3867
  call void @llvm.dbg.value(metadata i8 poison, metadata !3818, metadata !DIExpression()), !dbg !3867
  call void @llvm.dbg.value(metadata i8* %133, metadata !3817, metadata !DIExpression()), !dbg !3867
  call void @llvm.dbg.value(metadata i32 %132, metadata !3815, metadata !DIExpression()), !dbg !3867
  call void @llvm.dbg.value(metadata i32 %131, metadata !3814, metadata !DIExpression()), !dbg !3867
  call void @llvm.dbg.label(metadata !3866), !dbg !3953
  br i1 %22, label %146, label %144, !dbg !3954

144:                                              ; preds = %130
  %145 = bitcast i8* %140 to i8**, !dbg !3955
  store i8* %133, i8** %145, align 4, !dbg !3958
  br label %146, !dbg !3959

146:                                              ; preds = %144, %130
  %147 = add nsw i32 %136, -1, !dbg !3960
  call void @llvm.dbg.value(metadata i32 %147, metadata !3820, metadata !DIExpression()), !dbg !3867
  %148 = icmp sgt i32 %136, 0, !dbg !3961
  br i1 %148, label %152, label %149, !dbg !3962

149:                                              ; preds = %146
  %150 = tail call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %133) #26, !dbg !3963
  %151 = zext i1 %150 to i32, !dbg !3963
  br label %152, !dbg !3962

152:                                              ; preds = %146, %149
  %153 = phi i32 [ %151, %149 ], [ 1, %146 ], !dbg !3962
  %154 = icmp eq i32 %153, 0, !dbg !3962
  call void @llvm.dbg.value(metadata i1 %154, metadata !3844, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3964
  call void @llvm.dbg.value(metadata i1 %36, metadata !3847, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3964
  %155 = or i1 %36, %154, !dbg !3965
  br i1 %155, label %156, label %192, !dbg !3965

156:                                              ; preds = %152
  %157 = ptrtoint i8* %140 to i32, !dbg !3966
  %158 = sub i32 %157, %17, !dbg !3966
  %159 = lshr i32 %158, 2, !dbg !3967
  call void @llvm.dbg.value(metadata i32 %159, metadata !3848, metadata !DIExpression()), !dbg !3968
  %160 = icmp ugt i32 %158, 511
  %161 = select i1 %36, i1 %160, i1 false, !dbg !3969
  br i1 %161, label %162, label %163, !dbg !3969

162:                                              ; preds = %156
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.27, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.28, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 635) #25, !dbg !3971
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.4.30, i32 0, i32 0)) #25, !dbg !3971
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 635) #25, !dbg !3971
  unreachable, !dbg !3971

163:                                              ; preds = %156
  %164 = icmp ugt i32 %137, 15, !dbg !3976
  br i1 %164, label %165, label %166, !dbg !3978

165:                                              ; preds = %163
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.27, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.28, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 640) #25, !dbg !3979
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.5.31, i32 0, i32 0)) #25, !dbg !3979
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 640) #25, !dbg !3979
  unreachable, !dbg !3979

166:                                              ; preds = %163
  br i1 %22, label %177, label %167, !dbg !3984

167:                                              ; preds = %166
  %168 = trunc i32 %159 to i8, !dbg !3985
  %169 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %137, !dbg !3988
  store i8 %168, i8* %169, align 1, !dbg !3989
  %170 = trunc i32 %132 to i8, !dbg !3990
  %171 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %137, !dbg !3991
  store i8 %170, i8* %171, align 1, !dbg !3992
  br i1 %154, label %175, label %172, !dbg !3993

172:                                              ; preds = %167
  %173 = or i8 %168, -128, !dbg !3994
  store i8 %173, i8* %169, align 1, !dbg !3994
  %174 = add i32 %131, 1, !dbg !3997
  call void @llvm.dbg.value(metadata i32 %174, metadata !3814, metadata !DIExpression()), !dbg !3867
  br label %187, !dbg !3998

175:                                              ; preds = %167
  %176 = add i32 %135, 1, !dbg !3999
  call void @llvm.dbg.value(metadata i32 %176, metadata !3813, metadata !DIExpression()), !dbg !3867
  br label %187

177:                                              ; preds = %166
  br i1 %154, label %180, label %178, !dbg !4001

178:                                              ; preds = %177
  %179 = add i32 %142, 1, !dbg !4002
  call void @llvm.dbg.value(metadata i32 %179, metadata !3801, metadata !DIExpression()), !dbg !3867
  br label %187, !dbg !4005

180:                                              ; preds = %177
  br i1 %13, label %183, label %181, !dbg !4006

181:                                              ; preds = %180
  %182 = add i32 %142, 2, !dbg !4007
  call void @llvm.dbg.value(metadata i32 %182, metadata !3801, metadata !DIExpression()), !dbg !3867
  br label %187, !dbg !4010

183:                                              ; preds = %180
  %184 = tail call i32 @strlen(i8* noundef %133) #25, !dbg !4011
  %185 = add i32 %142, 2, !dbg !4013
  %186 = add i32 %185, %184, !dbg !4014
  call void @llvm.dbg.value(metadata i32 %186, metadata !3801, metadata !DIExpression()), !dbg !3867
  br label %187

187:                                              ; preds = %178, %183, %181, %172, %175
  %188 = phi i32 [ %174, %172 ], [ %131, %175 ], [ %131, %178 ], [ %131, %181 ], [ %131, %183 ], !dbg !3867
  %189 = phi i32 [ %135, %172 ], [ %176, %175 ], [ %135, %178 ], [ %135, %181 ], [ %135, %183 ], !dbg !3867
  %190 = phi i32 [ %142, %172 ], [ %142, %175 ], [ %179, %178 ], [ %182, %181 ], [ %186, %183 ], !dbg !3867
  call void @llvm.dbg.value(metadata i32 %190, metadata !3801, metadata !DIExpression()), !dbg !3867
  call void @llvm.dbg.value(metadata i32 %189, metadata !3813, metadata !DIExpression()), !dbg !3867
  call void @llvm.dbg.value(metadata i32 %188, metadata !3814, metadata !DIExpression()), !dbg !3867
  %191 = add nuw nsw i32 %137, 1, !dbg !4015
  call void @llvm.dbg.value(metadata i32 %191, metadata !3812, metadata !DIExpression()), !dbg !3867
  br label %192

192:                                              ; preds = %152, %187
  %193 = phi i32 [ %188, %187 ], [ %131, %152 ], !dbg !3867
  %194 = phi i32 [ %189, %187 ], [ %135, %152 ], !dbg !3950
  %195 = phi i32 [ %191, %187 ], [ %137, %152 ], !dbg !3867
  %196 = phi i32 [ %190, %187 ], [ %142, %152 ], !dbg !3951
  call void @llvm.dbg.value(metadata i32 %196, metadata !3801, metadata !DIExpression()), !dbg !3867
  call void @llvm.dbg.value(metadata i32 %195, metadata !3812, metadata !DIExpression()), !dbg !3867
  call void @llvm.dbg.value(metadata i32 %194, metadata !3813, metadata !DIExpression()), !dbg !3867
  call void @llvm.dbg.value(metadata i32 %193, metadata !3814, metadata !DIExpression()), !dbg !3867
  %197 = getelementptr inbounds i8, i8* %140, i32 4, !dbg !4016
  call void @llvm.dbg.value(metadata i8* %197, metadata !3806, metadata !DIExpression()), !dbg !3867
  call void @llvm.dbg.value(metadata i8* %143, metadata !3804, metadata !DIExpression()), !dbg !3867
  call void @llvm.dbg.value(metadata i8* %141, metadata !3803, metadata !DIExpression()), !dbg !3867
  call void @llvm.dbg.value(metadata i32 %139, metadata !3807, metadata !DIExpression()), !dbg !3867
  call void @llvm.dbg.value(metadata i32 %138, metadata !3808, metadata !DIExpression()), !dbg !3867
  call void @llvm.dbg.value(metadata i8 poison, metadata !3821, metadata !DIExpression()), !dbg !3867
  call void @llvm.dbg.value(metadata i8 poison, metadata !3818, metadata !DIExpression()), !dbg !3867
  call void @llvm.dbg.value(metadata i32 %132, metadata !3815, metadata !DIExpression()), !dbg !3867
  %198 = getelementptr inbounds i8, i8* %141, i32 1, !dbg !3899
  call void @llvm.dbg.value(metadata i8* %198, metadata !3803, metadata !DIExpression()), !dbg !3867
  %199 = load i8, i8* %198, align 1, !dbg !3901
  %200 = icmp eq i8 %199, 0, !dbg !3902
  br i1 %200, label %226, label %63, !dbg !3903

201:                                              ; preds = %124
  switch i32 %113, label %218 [
    i32 4, label %202
    i32 8, label %208
  ], !dbg !4017

202:                                              ; preds = %201
  %203 = getelementptr inbounds i8, i8* %41, i32 4, !dbg !4018
  call void @llvm.dbg.value(metadata i8* %203, metadata !3804, metadata !DIExpression()), !dbg !3867
  call void @llvm.dbg.value(metadata i32 undef, metadata !3851, metadata !DIExpression()), !dbg !4019
  br i1 %22, label %219, label %204, !dbg !4020

204:                                              ; preds = %202
  %205 = bitcast i8* %41 to i32*, !dbg !4018
  %206 = load i32, i32* %205, align 4, !dbg !4018
  call void @llvm.dbg.value(metadata i32 %206, metadata !3851, metadata !DIExpression()), !dbg !4019
  %207 = inttoptr i32 %118 to i32*, !dbg !4021
  store i32 %206, i32* %207, align 4, !dbg !4024
  br label %219, !dbg !4025

208:                                              ; preds = %201
  %209 = ptrtoint i8* %41 to i32, !dbg !4026
  %210 = add i32 %209, 7, !dbg !4026
  %211 = and i32 %210, -8, !dbg !4026
  %212 = inttoptr i32 %211 to i8*, !dbg !4026
  %213 = getelementptr inbounds i8, i8* %212, i32 8, !dbg !4026
  call void @llvm.dbg.value(metadata i8* %213, metadata !3804, metadata !DIExpression()), !dbg !3867
  call void @llvm.dbg.value(metadata i64 undef, metadata !3857, metadata !DIExpression()), !dbg !4027
  br i1 %22, label %219, label %214, !dbg !4028

214:                                              ; preds = %208
  %215 = inttoptr i32 %211 to i64*, !dbg !4026
  %216 = load i64, i64* %215, align 8, !dbg !4026
  call void @llvm.dbg.value(metadata i64 %216, metadata !3857, metadata !DIExpression()), !dbg !4027
  %217 = inttoptr i32 %118 to i64*, !dbg !4029
  store i64 %216, i64* %217, align 8, !dbg !4034
  br label %219, !dbg !4035

218:                                              ; preds = %201
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.27, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.28, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 709) #25, !dbg !4036
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6.32, i32 0, i32 0), i32 noundef %113) #25, !dbg !4036
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 709) #25, !dbg !4036
  unreachable, !dbg !4036

219:                                              ; preds = %208, %214, %202, %204
  %220 = phi i32 [ 4, %204 ], [ 4, %202 ], [ 8, %214 ], [ 8, %208 ]
  %221 = phi i8* [ %203, %204 ], [ %203, %202 ], [ %213, %214 ], [ %213, %208 ], !dbg !4041
  %222 = getelementptr inbounds i8, i8* %119, i32 %220, !dbg !4041
  call void @llvm.dbg.value(metadata i8* %221, metadata !3804, metadata !DIExpression()), !dbg !3867
  call void @llvm.dbg.value(metadata i8* %40, metadata !3803, metadata !DIExpression()), !dbg !3867
  call void @llvm.dbg.value(metadata i8* %222, metadata !3806, metadata !DIExpression()), !dbg !3867
  call void @llvm.dbg.value(metadata i32 %113, metadata !3807, metadata !DIExpression()), !dbg !3867
  call void @llvm.dbg.value(metadata i32 %112, metadata !3808, metadata !DIExpression()), !dbg !3867
  call void @llvm.dbg.value(metadata i8 poison, metadata !3821, metadata !DIExpression()), !dbg !3867
  call void @llvm.dbg.value(metadata i8 poison, metadata !3818, metadata !DIExpression()), !dbg !3867
  call void @llvm.dbg.value(metadata i32 %72, metadata !3815, metadata !DIExpression()), !dbg !3867
  %223 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !3899
  call void @llvm.dbg.value(metadata i8* %223, metadata !3803, metadata !DIExpression()), !dbg !3867
  %224 = load i8, i8* %223, align 1, !dbg !3901
  %225 = icmp eq i8 %224, 0, !dbg !3902
  br i1 %225, label %226, label %38, !dbg !3903

226:                                              ; preds = %192, %219, %53
  %227 = phi i8* [ %222, %219 ], [ %58, %53 ], [ %197, %192 ], !dbg !4042
  %228 = ptrtoint i8* %227 to i32, !dbg !4043
  %229 = sub i32 %228, %17, !dbg !4043
  %230 = lshr i32 %229, 2, !dbg !4045
  %231 = icmp ugt i32 %229, 1023, !dbg !4046
  br i1 %231, label %232, label %233, !dbg !4047

232:                                              ; preds = %226
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.27, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.28, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 721) #25, !dbg !4048
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.33, i32 0, i32 0)) #25, !dbg !4048
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 721) #25, !dbg !4048
  unreachable, !dbg !4048

233:                                              ; preds = %226
  br i1 %22, label %234, label %237, !dbg !4053

234:                                              ; preds = %233
  %235 = add i32 %196, -8, !dbg !4054
  %236 = add i32 %235, %229, !dbg !4057
  br label %320, !dbg !4058

237:                                              ; preds = %233
  %238 = trunc i32 %230 to i8, !dbg !4059
  store i8 %238, i8* %0, align 1, !dbg !4060
  %239 = trunc i32 %194 to i8, !dbg !4061
  %240 = select i1 %13, i8 %239, i8 0
  %241 = select i1 %13, i8 0, i8 %239
  %242 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !4063
  store i8 %240, i8* %242, align 1, !dbg !4065
  %243 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !4066
  store i8 %241, i8* %243, align 1, !dbg !4067
  %244 = trunc i32 %193 to i8, !dbg !4068
  %245 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !4069
  store i8 %244, i8* %245, align 1, !dbg !4070
  %246 = icmp eq i32 %193, 0, !dbg !4071
  %247 = xor i1 %246, true, !dbg !4072
  %248 = icmp ne i32 %195, 0
  %249 = select i1 %247, i1 %248, i1 false, !dbg !4072
  call void @llvm.dbg.value(metadata i8* %227, metadata !3806, metadata !DIExpression()), !dbg !3867
  call void @llvm.dbg.value(metadata i32 0, metadata !3816, metadata !DIExpression()), !dbg !3867
  br i1 %249, label %250, label %269, !dbg !4072

250:                                              ; preds = %237
  %251 = sub i32 1, %17
  br label %252, !dbg !4073

252:                                              ; preds = %250, %265
  %253 = phi i8* [ %227, %250 ], [ %266, %265 ]
  %254 = phi i32 [ 0, %250 ], [ %267, %265 ]
  call void @llvm.dbg.value(metadata i8* %253, metadata !3806, metadata !DIExpression()), !dbg !3867
  call void @llvm.dbg.value(metadata i32 %254, metadata !3816, metadata !DIExpression()), !dbg !3867
  %255 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %254, !dbg !4074
  %256 = load i8, i8* %255, align 1, !dbg !4074
  %257 = icmp sgt i8 %256, -1, !dbg !4076
  br i1 %257, label %265, label %258, !dbg !4077

258:                                              ; preds = %252
  call void @llvm.dbg.value(metadata i8 %256, metadata !3860, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 127, DW_OP_and, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4078
  %259 = ptrtoint i8* %253 to i32, !dbg !4079
  %260 = add i32 %251, %259, !dbg !4081
  %261 = icmp ugt i32 %260, %196, !dbg !4082
  br i1 %261, label %320, label %262, !dbg !4083

262:                                              ; preds = %258
  %263 = and i8 %256, 127, !dbg !4084
  call void @llvm.dbg.value(metadata i8 %263, metadata !3860, metadata !DIExpression()), !dbg !4078
  %264 = getelementptr inbounds i8, i8* %253, i32 1, !dbg !4085
  call void @llvm.dbg.value(metadata i8* %264, metadata !3806, metadata !DIExpression()), !dbg !3867
  store i8 %263, i8* %253, align 1, !dbg !4086
  br label %265

265:                                              ; preds = %262, %252
  %266 = phi i8* [ %264, %262 ], [ %253, %252 ], !dbg !4016
  call void @llvm.dbg.value(metadata i8* %266, metadata !3806, metadata !DIExpression()), !dbg !3867
  %267 = add nuw i32 %254, 1, !dbg !4087
  call void @llvm.dbg.value(metadata i32 %267, metadata !3816, metadata !DIExpression()), !dbg !3867
  %268 = icmp eq i32 %267, %195, !dbg !4088
  br i1 %268, label %269, label %252, !dbg !4073, !llvm.loop !4089

269:                                              ; preds = %265, %237
  %270 = phi i8* [ %227, %237 ], [ %266, %265 ], !dbg !4016
  call void @llvm.dbg.value(metadata i8* %270, metadata !3806, metadata !DIExpression()), !dbg !3867
  call void @llvm.dbg.value(metadata i32 0, metadata !3816, metadata !DIExpression()), !dbg !3867
  call void @llvm.dbg.value(metadata i8* %133, metadata !3817, metadata !DIExpression()), !dbg !3867
  %271 = icmp eq i32 %195, 0, !dbg !4091
  br i1 %271, label %316, label %272, !dbg !4094

272:                                              ; preds = %269
  %273 = sub i32 1, %17
  br label %274, !dbg !4094

274:                                              ; preds = %272, %311
  %275 = phi i8* [ %270, %272 ], [ %313, %311 ]
  %276 = phi i8* [ %133, %272 ], [ %312, %311 ]
  %277 = phi i32 [ 0, %272 ], [ %314, %311 ]
  call void @llvm.dbg.value(metadata i8* %275, metadata !3806, metadata !DIExpression()), !dbg !3867
  call void @llvm.dbg.value(metadata i8* %276, metadata !3817, metadata !DIExpression()), !dbg !3867
  call void @llvm.dbg.value(metadata i32 %277, metadata !3816, metadata !DIExpression()), !dbg !3867
  br i1 %246, label %282, label %278, !dbg !4095

278:                                              ; preds = %274
  %279 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %277, !dbg !4098
  %280 = load i8, i8* %279, align 1, !dbg !4098
  %281 = icmp sgt i8 %280, -1, !dbg !4099
  br i1 %281, label %282, label %311, !dbg !4100

282:                                              ; preds = %278, %274
  br i1 %13, label %287, label %283, !dbg !4101

283:                                              ; preds = %282
  call void @llvm.dbg.value(metadata i32 0, metadata !3807, metadata !DIExpression()), !dbg !3867
  %284 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %277, !dbg !4102
  %285 = load i8, i8* %284, align 1, !dbg !4102
  %286 = getelementptr inbounds i8, i8* %275, i32 1, !dbg !4105
  call void @llvm.dbg.value(metadata i8* %286, metadata !3806, metadata !DIExpression()), !dbg !3867
  store i8 %285, i8* %275, align 1, !dbg !4106
  br label %297, !dbg !4107

287:                                              ; preds = %282
  %288 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %277, !dbg !4108
  %289 = load i8, i8* %288, align 1, !dbg !4108
  %290 = zext i8 %289 to i32, !dbg !4108
  %291 = shl nuw nsw i32 %290, 2, !dbg !4110
  %292 = getelementptr inbounds i8, i8* %0, i32 %291, !dbg !4111
  %293 = bitcast i8* %292 to i8**, !dbg !4112
  %294 = load i8*, i8** %293, align 4, !dbg !4112
  call void @llvm.dbg.value(metadata i8* %294, metadata !3817, metadata !DIExpression()), !dbg !3867
  store i8* null, i8** %293, align 4, !dbg !4113
  %295 = tail call i32 @strlen(i8* noundef %294) #25, !dbg !4114
  %296 = add i32 %295, 1, !dbg !4115
  call void @llvm.dbg.value(metadata i32 %296, metadata !3807, metadata !DIExpression()), !dbg !3867
  br label %297

297:                                              ; preds = %287, %283
  %298 = phi i8* [ %276, %283 ], [ %294, %287 ], !dbg !3867
  %299 = phi i32 [ 0, %283 ], [ %296, %287 ], !dbg !4116
  %300 = phi i8* [ %286, %283 ], [ %275, %287 ], !dbg !3867
  call void @llvm.dbg.value(metadata i8* %300, metadata !3806, metadata !DIExpression()), !dbg !3867
  call void @llvm.dbg.value(metadata i32 %299, metadata !3807, metadata !DIExpression()), !dbg !3867
  call void @llvm.dbg.value(metadata i8* %298, metadata !3817, metadata !DIExpression()), !dbg !3867
  %301 = ptrtoint i8* %300 to i32, !dbg !4117
  %302 = add i32 %273, %299, !dbg !4119
  %303 = add i32 %302, %301, !dbg !4120
  %304 = icmp ugt i32 %303, %196, !dbg !4121
  br i1 %304, label %320, label %305, !dbg !4122

305:                                              ; preds = %297
  %306 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %277, !dbg !4123
  %307 = load i8, i8* %306, align 1, !dbg !4123
  %308 = getelementptr inbounds i8, i8* %300, i32 1, !dbg !4124
  call void @llvm.dbg.value(metadata i8* %308, metadata !3806, metadata !DIExpression()), !dbg !3867
  store i8 %307, i8* %300, align 1, !dbg !4125
  %309 = tail call i8* @memcpy(i8* noundef nonnull %308, i8* noundef %298, i32 noundef %299) #25, !dbg !4126
  %310 = getelementptr inbounds i8, i8* %308, i32 %299, !dbg !4127
  call void @llvm.dbg.value(metadata i8* %310, metadata !3806, metadata !DIExpression()), !dbg !3867
  br label %311, !dbg !4128

311:                                              ; preds = %278, %305
  %312 = phi i8* [ %276, %278 ], [ %298, %305 ], !dbg !4129
  %313 = phi i8* [ %275, %278 ], [ %310, %305 ], !dbg !3867
  call void @llvm.dbg.value(metadata i8* %313, metadata !3806, metadata !DIExpression()), !dbg !3867
  call void @llvm.dbg.value(metadata i8* %312, metadata !3817, metadata !DIExpression()), !dbg !3867
  %314 = add nuw i32 %277, 1, !dbg !4130
  call void @llvm.dbg.value(metadata i32 %314, metadata !3816, metadata !DIExpression()), !dbg !3867
  %315 = icmp eq i32 %314, %195, !dbg !4091
  br i1 %315, label %316, label %274, !dbg !4094, !llvm.loop !4131

316:                                              ; preds = %311, %269
  %317 = phi i8* [ %270, %269 ], [ %313, %311 ], !dbg !4016
  %318 = ptrtoint i8* %317 to i32, !dbg !4133
  %319 = sub i32 %318, %17, !dbg !4133
  br label %320, !dbg !4134

320:                                              ; preds = %120, %99, %258, %297, %28, %5, %316, %234
  %321 = phi i32 [ %236, %234 ], [ %319, %316 ], [ -14, %5 ], [ -28, %28 ], [ -28, %297 ], [ -28, %258 ], [ -28, %99 ], [ -28, %120 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #24, !dbg !4135
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #24, !dbg !4135
  ret i32 %321, !dbg !4135
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @ptr_in_rodata(i8* noundef readnone %0) unnamed_addr #5 !dbg !4136 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4140, metadata !DIExpression()), !dbg !4141
  %2 = tail call fastcc zeroext i1 @linker_is_in_rodata(i8* noundef %0) #26, !dbg !4142
  ret i1 %2, !dbg !4143
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @linker_is_in_rodata(i8* noundef readnone %0) unnamed_addr #5 !dbg !4144 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4149, metadata !DIExpression()), !dbg !4150
  %2 = icmp uge i8* %0, getelementptr inbounds ([0 x i8], [0 x i8]* @__rodata_region_start, i32 0, i32 0), !dbg !4151
  %3 = icmp ult i8* %0, getelementptr inbounds ([0 x i8], [0 x i8]* @__rodata_region_end, i32 0, i32 0), !dbg !4152
  %4 = and i1 %2, %3, !dbg !4152
  ret i1 %4, !dbg !4153
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, ...) local_unnamed_addr #1 !dbg !4154 {
  %5 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4158, metadata !DIExpression()), !dbg !4164
  call void @llvm.dbg.value(metadata i32 %1, metadata !4159, metadata !DIExpression()), !dbg !4164
  call void @llvm.dbg.value(metadata i32 %2, metadata !4160, metadata !DIExpression()), !dbg !4164
  call void @llvm.dbg.value(metadata i8* %3, metadata !4161, metadata !DIExpression()), !dbg !4164
  %6 = bitcast %struct.__va_list* %5 to i8*, !dbg !4165
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #24, !dbg !4165
  call void @llvm.dbg.declare(metadata %struct.__va_list* %5, metadata !4162, metadata !DIExpression()), !dbg !4166
  call void @llvm.va_start(i8* nonnull %6), !dbg !4167
  %7 = bitcast %struct.__va_list* %5 to i32*, !dbg !4168
  %8 = load i32, i32* %7, align 4, !dbg !4168
  %9 = insertvalue [1 x i32] poison, i32 %8, 0, !dbg !4168
  %10 = call i32 @cbvprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %9) #26, !dbg !4168
  call void @llvm.dbg.value(metadata i32 %10, metadata !4163, metadata !DIExpression()), !dbg !4164
  call void @llvm.va_end(i8* nonnull %6), !dbg !4169
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #24, !dbg !4170
  ret i32 %10, !dbg !4171
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #10

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #10

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbpprintf_external(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* nocapture noundef readonly %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #1 !dbg !4172 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4184, metadata !DIExpression()), !dbg !4203
  call void @llvm.dbg.value(metadata i32 (i32 (...)*, i8*, i8*, [1 x i32])* %1, metadata !4185, metadata !DIExpression()), !dbg !4203
  call void @llvm.dbg.value(metadata i8* %2, metadata !4186, metadata !DIExpression()), !dbg !4203
  call void @llvm.dbg.value(metadata i8* %3, metadata !4187, metadata !DIExpression()), !dbg !4203
  call void @llvm.dbg.value(metadata i8* %3, metadata !4188, metadata !DIExpression()), !dbg !4203
  call void @llvm.dbg.value(metadata i8* %3, metadata !4189, metadata !DIExpression()), !dbg !4203
  %5 = icmp eq i8* %3, null, !dbg !4204
  br i1 %5, label %45, label %6, !dbg !4206

6:                                                ; preds = %4
  call void @llvm.dbg.value(metadata i8 undef, metadata !4198, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !4203
  %7 = getelementptr inbounds i8, i8* %3, i32 1, !dbg !4207
  %8 = load i8, i8* %7, align 1, !dbg !4207
  %9 = zext i8 %8 to i32, !dbg !4208
  call void @llvm.dbg.value(metadata i32 %9, metadata !4199, metadata !DIExpression()), !dbg !4203
  call void @llvm.dbg.value(metadata i8 undef, metadata !4200, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4203
  call void @llvm.dbg.value(metadata i8 undef, metadata !4201, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4203
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i8 undef), metadata !4195, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4203
  call void @llvm.dbg.value(metadata i32 0, metadata !4197, metadata !DIExpression()), !dbg !4203
  %10 = icmp eq i8 %8, 0, !dbg !4209
  br i1 %10, label %39, label %11, !dbg !4212

11:                                               ; preds = %6
  %12 = load i8, i8* %3, align 1, !dbg !4213
  call void @llvm.dbg.value(metadata i8 %12, metadata !4198, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !4203
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i8 %12), metadata !4195, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4203
  %13 = zext i8 %12 to i32, !dbg !4214
  call void @llvm.dbg.value(metadata i32 %13, metadata !4198, metadata !DIExpression(DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !4203
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i32 %13), metadata !4195, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4203
  %14 = shl nuw nsw i32 %13, 2, !dbg !4215
  call void @llvm.dbg.value(metadata i32 %14, metadata !4198, metadata !DIExpression()), !dbg !4203
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i32 %14), metadata !4195, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4203
  %15 = getelementptr inbounds i8, i8* %3, i32 %14, !dbg !4216
  call void @llvm.dbg.value(metadata !DIArgList(i8* %15, i8 undef, i8 undef), metadata !4195, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4203
  %16 = getelementptr inbounds i8, i8* %3, i32 2, !dbg !4217
  %17 = load i8, i8* %16, align 1, !dbg !4217
  call void @llvm.dbg.value(metadata i8 %17, metadata !4200, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4203
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 %17, i8 undef), metadata !4195, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4203
  %18 = zext i8 %17 to i32, !dbg !4218
  call void @llvm.dbg.value(metadata i32 %18, metadata !4200, metadata !DIExpression()), !dbg !4203
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i32 %18, i8 undef), metadata !4195, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4203
  %19 = getelementptr inbounds i8, i8* %15, i32 %18, !dbg !4219
  call void @llvm.dbg.value(metadata !DIArgList(i8* %19, i8 undef), metadata !4195, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4203
  %20 = getelementptr inbounds i8, i8* %3, i32 3, !dbg !4220
  %21 = load i8, i8* %20, align 1, !dbg !4220
  call void @llvm.dbg.value(metadata i8 %21, metadata !4201, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4203
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 %21, i8 undef, i8 undef), metadata !4195, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4203
  %22 = zext i8 %21 to i32, !dbg !4221
  call void @llvm.dbg.value(metadata i32 %22, metadata !4201, metadata !DIExpression()), !dbg !4203
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i32 %22, i8 undef, i8 undef), metadata !4195, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4203
  %23 = shl nuw nsw i32 %22, 1, !dbg !4222
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i32 %23, i8 undef, i8 undef), metadata !4195, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4203
  %24 = getelementptr inbounds i8, i8* %19, i32 %23, !dbg !4223
  call void @llvm.dbg.value(metadata i8* %24, metadata !4195, metadata !DIExpression()), !dbg !4203
  br label %25, !dbg !4212

25:                                               ; preds = %11, %25
  %26 = phi i8* [ %36, %25 ], [ %24, %11 ]
  %27 = phi i32 [ %37, %25 ], [ 0, %11 ]
  call void @llvm.dbg.value(metadata i8* %26, metadata !4195, metadata !DIExpression()), !dbg !4203
  call void @llvm.dbg.value(metadata i32 %27, metadata !4197, metadata !DIExpression()), !dbg !4203
  %28 = getelementptr inbounds i8, i8* %26, i32 1, !dbg !4224
  call void @llvm.dbg.value(metadata i8* %28, metadata !4195, metadata !DIExpression()), !dbg !4203
  %29 = load i8, i8* %26, align 1, !dbg !4226
  %30 = zext i8 %29 to i32, !dbg !4226
  call void @llvm.dbg.value(metadata i32 %30, metadata !4202, metadata !DIExpression()), !dbg !4203
  %31 = shl nuw nsw i32 %30, 2, !dbg !4227
  %32 = getelementptr inbounds i8, i8* %3, i32 %31, !dbg !4228
  %33 = bitcast i8* %32 to i8**, !dbg !4229
  call void @llvm.dbg.value(metadata i8** %33, metadata !4196, metadata !DIExpression()), !dbg !4203
  store i8* %28, i8** %33, align 4, !dbg !4230
  %34 = tail call i32 @strlen(i8* noundef nonnull %28) #25, !dbg !4231
  %35 = add i32 %34, 1, !dbg !4232
  %36 = getelementptr inbounds i8, i8* %28, i32 %35, !dbg !4233
  call void @llvm.dbg.value(metadata i8* %36, metadata !4195, metadata !DIExpression()), !dbg !4203
  %37 = add nuw nsw i32 %27, 1, !dbg !4234
  call void @llvm.dbg.value(metadata i32 %37, metadata !4197, metadata !DIExpression()), !dbg !4203
  %38 = icmp eq i32 %37, %9, !dbg !4209
  br i1 %38, label %39, label %25, !dbg !4212, !llvm.loop !4235

39:                                               ; preds = %25, %6
  %40 = getelementptr inbounds i8, i8* %3, i32 8, !dbg !4237
  call void @llvm.dbg.value(metadata i8* %40, metadata !4188, metadata !DIExpression()), !dbg !4203
  %41 = getelementptr inbounds i8, i8* %3, i32 4, !dbg !4238
  %42 = bitcast i8* %41 to i8**, !dbg !4238
  %43 = load i8*, i8** %42, align 1, !dbg !4238
  %44 = tail call fastcc i32 @cbprintf_via_va_list(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* noundef %1, i8* noundef %2, i8* noundef %43, i8* noundef nonnull %40) #26, !dbg !4239
  br label %45, !dbg !4240

45:                                               ; preds = %4, %39
  %46 = phi i32 [ %44, %39 ], [ -22, %4 ], !dbg !4203
  ret i32 %46, !dbg !4241
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @cbprintf_via_va_list(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* nocapture noundef readonly %1, i8* noundef %2, i8* noundef %3, i8* noundef %4) unnamed_addr #1 !dbg !4242 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4246, metadata !DIExpression()), !dbg !4256
  call void @llvm.dbg.value(metadata i32 (i32 (...)*, i8*, i8*, [1 x i32])* %1, metadata !4247, metadata !DIExpression()), !dbg !4256
  call void @llvm.dbg.value(metadata i8* %2, metadata !4248, metadata !DIExpression()), !dbg !4256
  call void @llvm.dbg.value(metadata i8* %3, metadata !4249, metadata !DIExpression()), !dbg !4256
  call void @llvm.dbg.value(metadata i8* %4, metadata !4250, metadata !DIExpression()), !dbg !4256
  call void @llvm.dbg.value(metadata i8* %4, metadata !4251, metadata !DIExpression()), !dbg !4256
  %6 = ptrtoint i8* %4 to i32, !dbg !4257
  %7 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !4257
  %8 = tail call i32 %1(i32 (...)* noundef %0, i8* noundef %2, i8* noundef %3, [1 x i32] %7) #25, !dbg !4257
  ret i32 %8, !dbg !4258
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local zeroext i1 @is_ptr(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #11 !dbg !4259 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4263, metadata !DIExpression()), !dbg !4268
  call void @llvm.dbg.value(metadata i32 %1, metadata !4264, metadata !DIExpression()), !dbg !4268
  call void @llvm.dbg.value(metadata i8 0, metadata !4266, metadata !DIExpression()), !dbg !4268
  call void @llvm.dbg.value(metadata i32 0, metadata !4267, metadata !DIExpression()), !dbg !4268
  call void @llvm.dbg.value(metadata i8 poison, metadata !4266, metadata !DIExpression()), !dbg !4268
  call void @llvm.dbg.value(metadata i8* %0, metadata !4263, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4268
  %3 = load i8, i8* %0, align 1, !dbg !4269
  call void @llvm.dbg.value(metadata i8 %3, metadata !4265, metadata !DIExpression()), !dbg !4268
  %4 = icmp eq i8 %3, 0, !dbg !4270
  br i1 %4, label %29, label %5, !dbg !4271

5:                                                ; preds = %2, %22
  %6 = phi i8 [ %27, %22 ], [ %3, %2 ]
  %7 = phi i8* [ %10, %22 ], [ %0, %2 ]
  %8 = phi i32 [ %24, %22 ], [ 0, %2 ]
  %9 = phi i1 [ %26, %22 ], [ false, %2 ]
  %10 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !4272
  call void @llvm.dbg.value(metadata i32 %8, metadata !4267, metadata !DIExpression()), !dbg !4268
  br i1 %9, label %11, label %22, !dbg !4273

11:                                               ; preds = %5
  %12 = icmp eq i32 %8, %1, !dbg !4275
  br i1 %12, label %13, label %17, !dbg !4279

13:                                               ; preds = %11
  %14 = icmp eq i8 %6, 112, !dbg !4280
  br i1 %14, label %29, label %15, !dbg !4283

15:                                               ; preds = %13
  %16 = tail call fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %6) #26, !dbg !4284
  br i1 %16, label %29, label %22, !dbg !4286

17:                                               ; preds = %11
  %18 = tail call fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %6) #26, !dbg !4287
  %19 = xor i1 %18, true, !dbg !4289
  %20 = zext i1 %18 to i32, !dbg !4289
  %21 = add nsw i32 %8, %20, !dbg !4289
  br label %22, !dbg !4289

22:                                               ; preds = %17, %15, %5
  %23 = phi i1 [ true, %15 ], [ false, %5 ], [ %19, %17 ]
  %24 = phi i32 [ %1, %15 ], [ %8, %5 ], [ %21, %17 ], !dbg !4268
  call void @llvm.dbg.value(metadata i32 %24, metadata !4267, metadata !DIExpression()), !dbg !4268
  call void @llvm.dbg.value(metadata i8 poison, metadata !4266, metadata !DIExpression()), !dbg !4268
  %25 = icmp eq i8 %6, 37, !dbg !4290
  %26 = xor i1 %25, %23, !dbg !4292
  call void @llvm.dbg.value(metadata i8* %10, metadata !4263, metadata !DIExpression()), !dbg !4268
  call void @llvm.dbg.value(metadata i8* %10, metadata !4263, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4268
  %27 = load i8, i8* %10, align 1, !dbg !4269
  call void @llvm.dbg.value(metadata i8 %27, metadata !4265, metadata !DIExpression()), !dbg !4268
  %28 = icmp eq i8 %27, 0, !dbg !4270
  br i1 %28, label %29, label %5, !dbg !4271, !llvm.loop !4293

29:                                               ; preds = %13, %15, %22, %2
  %30 = phi i1 [ false, %2 ], [ false, %22 ], [ false, %15 ], [ true, %13 ], !dbg !4268
  ret i1 %30, !dbg !4295
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %0) unnamed_addr #5 !dbg !4296 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !4300, metadata !DIExpression()), !dbg !4301
  %2 = add i8 %0, -64, !dbg !4302
  %3 = icmp ult i8 %2, 59, !dbg !4302
  ret i1 %3, !dbg !4303
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbprintf_package_convert(i8* noundef %0, i32 noundef %1, i32 (i8*, i32, i8*)* noundef %2, i8* noundef %3, i32 noundef %4, i16* noundef %5, i32 noundef %6) local_unnamed_addr #1 !dbg !4304 {
  %8 = alloca [16 x i8], align 1
  %9 = alloca [16 x i8], align 1
  %10 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !4312, metadata !DIExpression()), !dbg !4381
  call void @llvm.dbg.value(metadata i32 %1, metadata !4313, metadata !DIExpression()), !dbg !4381
  call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %2, metadata !4314, metadata !DIExpression()), !dbg !4381
  call void @llvm.dbg.value(metadata i8* %3, metadata !4315, metadata !DIExpression()), !dbg !4381
  call void @llvm.dbg.value(metadata i32 %4, metadata !4316, metadata !DIExpression()), !dbg !4381
  call void @llvm.dbg.value(metadata i16* %5, metadata !4317, metadata !DIExpression()), !dbg !4381
  call void @llvm.dbg.value(metadata i32 %6, metadata !4318, metadata !DIExpression()), !dbg !4381
  %11 = icmp eq i8* %0, null, !dbg !4382
  br i1 %11, label %12, label %13, !dbg !4385

12:                                               ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.27, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.8.34, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 916) #25, !dbg !4386
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 916) #25, !dbg !4386
  unreachable, !dbg !4386

13:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i8* %0, metadata !4319, metadata !DIExpression()), !dbg !4381
  %14 = bitcast i8* %0 to i32*, !dbg !4388
  call void @llvm.dbg.value(metadata i32* %14, metadata !4320, metadata !DIExpression()), !dbg !4381
  %15 = and i32 %4, 8, !dbg !4389
  %16 = icmp eq i32 %15, 0, !dbg !4390
  call void @llvm.dbg.value(metadata i1 %16, metadata !4324, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4381
  call void @llvm.dbg.value(metadata i8* %0, metadata !4327, metadata !DIExpression()), !dbg !4381
  %17 = icmp eq i32 %1, 0, !dbg !4391
  br i1 %17, label %18, label %20, !dbg !4392

18:                                               ; preds = %13
  %19 = tail call fastcc i32 @get_package_len(i8* noundef nonnull %0) #26, !dbg !4393
  br label %20, !dbg !4392

20:                                               ; preds = %13, %18
  %21 = phi i32 [ %19, %18 ], [ %1, %13 ], !dbg !4392
  call void @llvm.dbg.value(metadata i32 %21, metadata !4313, metadata !DIExpression()), !dbg !4381
  %22 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !4394
  %23 = load i8, i8* %22, align 1, !dbg !4394
  %24 = zext i8 %23 to i32, !dbg !4395
  call void @llvm.dbg.value(metadata i32 %24, metadata !4322, metadata !DIExpression()), !dbg !4381
  %25 = icmp ne i8 %23, 0, !dbg !4396
  %26 = and i32 %4, 1, !dbg !4397
  %27 = icmp ne i32 %26, 0, !dbg !4397
  %28 = and i1 %27, %25, !dbg !4397
  call void @llvm.dbg.value(metadata i1 %28, metadata !4326, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4381
  %29 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !4398
  %30 = load i8, i8* %29, align 1, !dbg !4398
  %31 = zext i8 %30 to i32, !dbg !4399
  call void @llvm.dbg.value(metadata i32 %31, metadata !4323, metadata !DIExpression()), !dbg !4381
  %32 = icmp ne i8 %30, 0, !dbg !4400
  %33 = and i32 %4, 2, !dbg !4401
  %34 = icmp ne i32 %33, 0, !dbg !4401
  %35 = and i1 %34, %32, !dbg !4401
  call void @llvm.dbg.value(metadata i1 %35, metadata !4325, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4381
  %36 = select i1 %35, i1 true, i1 %28, !dbg !4402
  br i1 %36, label %41, label %37, !dbg !4402

37:                                               ; preds = %20
  %38 = icmp eq i32 (i8*, i32, i8*)* %2, null, !dbg !4404
  br i1 %38, label %287, label %39, !dbg !4407

39:                                               ; preds = %37
  %40 = tail call i32 %2(i8* noundef nonnull %0, i32 noundef %21, i8* noundef %3) #25, !dbg !4408
  br label %287, !dbg !4410

41:                                               ; preds = %20
  %42 = load i8, i8* %0, align 1, !dbg !4411
  %43 = zext i8 %42 to i32, !dbg !4412
  %44 = shl nuw nsw i32 %43, 2, !dbg !4413
  call void @llvm.dbg.value(metadata i32 %44, metadata !4321, metadata !DIExpression()), !dbg !4381
  %45 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !4414
  %46 = bitcast i8* %45 to i8**, !dbg !4415
  %47 = load i8*, i8** %46, align 4, !dbg !4415
  call void @llvm.dbg.value(metadata i8* %47, metadata !4330, metadata !DIExpression()), !dbg !4381
  %48 = getelementptr inbounds i8, i8* %0, i32 %44, !dbg !4416
  call void @llvm.dbg.value(metadata i8* %48, metadata !4331, metadata !DIExpression()), !dbg !4381
  call void @llvm.dbg.value(metadata i32 0, metadata !4332, metadata !DIExpression()), !dbg !4381
  %49 = icmp eq i32 (i8*, i32, i8*)* %2, null, !dbg !4417
  br i1 %49, label %50, label %135, !dbg !4418

50:                                               ; preds = %41
  call void @llvm.dbg.value(metadata i32 %21, metadata !4329, metadata !DIExpression()), !dbg !4381
  br i1 %28, label %51, label %76, !dbg !4419

51:                                               ; preds = %50
  call void @llvm.dbg.value(metadata i32 %21, metadata !4329, metadata !DIExpression()), !dbg !4381
  call void @llvm.dbg.value(metadata i8* %48, metadata !4331, metadata !DIExpression()), !dbg !4381
  call void @llvm.dbg.value(metadata i32 0, metadata !4332, metadata !DIExpression()), !dbg !4381
  call void @llvm.dbg.value(metadata i32 0, metadata !4333, metadata !DIExpression()), !dbg !4420
  %52 = icmp ne i16* %5, null
  br label %53, !dbg !4421

53:                                               ; preds = %51, %70
  %54 = phi i32 [ %21, %51 ], [ %72, %70 ]
  %55 = phi i8* [ %48, %51 ], [ %73, %70 ]
  %56 = phi i32 [ 0, %51 ], [ %71, %70 ]
  %57 = phi i32 [ 0, %51 ], [ %74, %70 ]
  call void @llvm.dbg.value(metadata i32 %54, metadata !4329, metadata !DIExpression()), !dbg !4381
  call void @llvm.dbg.value(metadata i8* %55, metadata !4331, metadata !DIExpression()), !dbg !4381
  call void @llvm.dbg.value(metadata i32 %56, metadata !4332, metadata !DIExpression()), !dbg !4381
  call void @llvm.dbg.value(metadata i32 %57, metadata !4333, metadata !DIExpression()), !dbg !4420
  %58 = load i8, i8* %55, align 1, !dbg !4422
  %59 = zext i8 %58 to i32, !dbg !4423
  %60 = getelementptr inbounds i32, i32* %14, i32 %59, !dbg !4423
  %61 = bitcast i32* %60 to i8**, !dbg !4424
  %62 = load i8*, i8** %61, align 4, !dbg !4424
  call void @llvm.dbg.value(metadata i8* %62, metadata !4339, metadata !DIExpression()), !dbg !4425
  %63 = tail call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef null, i8* noundef null, i8* noundef %62, i16 noundef zeroext 0) #26, !dbg !4426
  call void @llvm.dbg.value(metadata i32 %63, metadata !4342, metadata !DIExpression()), !dbg !4425
  %64 = icmp ult i32 %56, %6
  %65 = select i1 %52, i1 %64, i1 false, !dbg !4427
  br i1 %65, label %66, label %70, !dbg !4427

66:                                               ; preds = %53
  %67 = trunc i32 %63 to i16, !dbg !4429
  %68 = add nuw i32 %56, 1, !dbg !4431
  call void @llvm.dbg.value(metadata i32 %68, metadata !4332, metadata !DIExpression()), !dbg !4381
  %69 = getelementptr inbounds i16, i16* %5, i32 %56, !dbg !4432
  store i16 %67, i16* %69, align 2, !dbg !4433
  br label %70, !dbg !4434

70:                                               ; preds = %66, %53
  %71 = phi i32 [ %68, %66 ], [ %56, %53 ], !dbg !4381
  call void @llvm.dbg.value(metadata i32 %71, metadata !4332, metadata !DIExpression()), !dbg !4381
  %72 = add nsw i32 %63, %54, !dbg !4435
  call void @llvm.dbg.value(metadata i32 %72, metadata !4329, metadata !DIExpression()), !dbg !4381
  %73 = getelementptr inbounds i8, i8* %55, i32 1, !dbg !4436
  call void @llvm.dbg.value(metadata i8* %73, metadata !4331, metadata !DIExpression()), !dbg !4381
  %74 = add nuw nsw i32 %57, 1, !dbg !4437
  call void @llvm.dbg.value(metadata i32 %74, metadata !4333, metadata !DIExpression()), !dbg !4420
  %75 = icmp eq i32 %74, %24, !dbg !4438
  br i1 %75, label %82, label %53, !dbg !4421, !llvm.loop !4439

76:                                               ; preds = %50
  %77 = and i32 %4, 4
  %78 = icmp ne i32 %77, 0
  %79 = and i1 %78, %25, !dbg !4441
  %80 = select i1 %79, i32 %24, i32 0, !dbg !4441
  %81 = getelementptr i8, i8* %48, i32 %80, !dbg !4441
  br label %82, !dbg !4441

82:                                               ; preds = %70, %76
  %83 = phi i32 [ 0, %76 ], [ %71, %70 ], !dbg !4444
  %84 = phi i8* [ %81, %76 ], [ %73, %70 ], !dbg !4381
  %85 = phi i32 [ %21, %76 ], [ %72, %70 ], !dbg !4445
  call void @llvm.dbg.value(metadata i1 undef, metadata !4343, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4446
  call void @llvm.dbg.value(metadata i32 0, metadata !4344, metadata !DIExpression()), !dbg !4447
  call void @llvm.dbg.value(metadata i32 %85, metadata !4329, metadata !DIExpression()), !dbg !4381
  call void @llvm.dbg.value(metadata i8* %84, metadata !4331, metadata !DIExpression()), !dbg !4381
  call void @llvm.dbg.value(metadata i32 %83, metadata !4332, metadata !DIExpression()), !dbg !4381
  %86 = icmp eq i8 %30, 0, !dbg !4448
  br i1 %86, label %287, label %87, !dbg !4449

87:                                               ; preds = %82
  %88 = and i32 %4, 5, !dbg !4450
  %89 = icmp eq i32 %88, 0, !dbg !4451
  call void @llvm.dbg.value(metadata i1 %89, metadata !4343, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4446
  %90 = icmp eq i32 %33, 0
  %91 = icmp eq i32 %26, 0
  %92 = icmp ne i16* %5, null
  %93 = select i1 %89, i32 -2, i32 -1
  br label %94, !dbg !4449

94:                                               ; preds = %87, %130
  %95 = phi i32 [ %85, %87 ], [ %132, %130 ]
  %96 = phi i8* [ %84, %87 ], [ %100, %130 ]
  %97 = phi i32 [ %83, %87 ], [ %131, %130 ]
  %98 = phi i32 [ 0, %87 ], [ %133, %130 ]
  call void @llvm.dbg.value(metadata i32 %95, metadata !4329, metadata !DIExpression()), !dbg !4381
  call void @llvm.dbg.value(metadata i8* %96, metadata !4331, metadata !DIExpression()), !dbg !4381
  call void @llvm.dbg.value(metadata i32 %97, metadata !4332, metadata !DIExpression()), !dbg !4381
  call void @llvm.dbg.value(metadata i32 %98, metadata !4344, metadata !DIExpression()), !dbg !4447
  %99 = getelementptr inbounds i8, i8* %96, i32 1, !dbg !4452
  call void @llvm.dbg.value(metadata i8* %99, metadata !4331, metadata !DIExpression()), !dbg !4381
  call void @llvm.dbg.value(metadata i8 undef, metadata !4346, metadata !DIExpression()), !dbg !4453
  %100 = getelementptr inbounds i8, i8* %96, i32 2, !dbg !4454
  call void @llvm.dbg.value(metadata i8* %100, metadata !4331, metadata !DIExpression()), !dbg !4381
  %101 = load i8, i8* %99, align 1, !dbg !4455
  call void @llvm.dbg.value(metadata i8 %101, metadata !4349, metadata !DIExpression()), !dbg !4453
  %102 = zext i8 %101 to i32, !dbg !4456
  %103 = getelementptr inbounds i32, i32* %14, i32 %102, !dbg !4456
  %104 = bitcast i32* %103 to i8**, !dbg !4457
  %105 = load i8*, i8** %104, align 4, !dbg !4457
  call void @llvm.dbg.value(metadata i8* %105, metadata !4350, metadata !DIExpression()), !dbg !4453
  %106 = tail call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %105) #26, !dbg !4458
  call void @llvm.dbg.value(metadata i1 %106, metadata !4351, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4453
  br i1 %16, label %113, label %107, !dbg !4459

107:                                              ; preds = %94
  %108 = load i8, i8* %96, align 1, !dbg !4461
  call void @llvm.dbg.value(metadata i8 %108, metadata !4346, metadata !DIExpression()), !dbg !4453
  %109 = zext i8 %108 to i32, !dbg !4462
  %110 = tail call zeroext i1 @is_ptr(i8* noundef %47, i32 noundef %109) #26, !dbg !4463
  br i1 %110, label %111, label %113, !dbg !4464

111:                                              ; preds = %107
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([168 x i8], [168 x i8]* @.str.9.35, i32 0, i32 0), i32 noundef 87, i8* noundef %47, i32 noundef %109) #25, !dbg !4465
  %112 = add nsw i32 %95, -2, !dbg !4471
  call void @llvm.dbg.value(metadata i32 %112, metadata !4329, metadata !DIExpression()), !dbg !4381
  br label %130, !dbg !4472

113:                                              ; preds = %107, %94
  br i1 %106, label %114, label %117, !dbg !4473

114:                                              ; preds = %113
  br i1 %91, label %115, label %118, !dbg !4474

115:                                              ; preds = %114
  %116 = add i32 %95, %93, !dbg !4476
  call void @llvm.dbg.value(metadata i32 %116, metadata !4329, metadata !DIExpression()), !dbg !4381
  br label %130, !dbg !4479

117:                                              ; preds = %113
  br i1 %90, label %130, label %118, !dbg !4480

118:                                              ; preds = %117, %114
  call void @llvm.dbg.label(metadata !4377), !dbg !4481
  %119 = tail call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef null, i8* noundef null, i8* noundef %105, i16 noundef zeroext 0) #26, !dbg !4482
  call void @llvm.dbg.value(metadata i32 %119, metadata !4352, metadata !DIExpression()), !dbg !4453
  %120 = icmp ult i32 %97, %6
  %121 = select i1 %92, i1 %120, i1 false, !dbg !4483
  br i1 %121, label %122, label %126, !dbg !4483

122:                                              ; preds = %118
  %123 = trunc i32 %119 to i16, !dbg !4485
  %124 = add nuw i32 %97, 1, !dbg !4487
  call void @llvm.dbg.value(metadata i32 %124, metadata !4332, metadata !DIExpression()), !dbg !4381
  %125 = getelementptr inbounds i16, i16* %5, i32 %97, !dbg !4488
  store i16 %123, i16* %125, align 2, !dbg !4489
  br label %126, !dbg !4490

126:                                              ; preds = %122, %118
  %127 = phi i32 [ %124, %122 ], [ %97, %118 ], !dbg !4381
  call void @llvm.dbg.value(metadata i32 %127, metadata !4332, metadata !DIExpression()), !dbg !4381
  %128 = add i32 %95, -1, !dbg !4491
  %129 = add i32 %128, %119, !dbg !4492
  call void @llvm.dbg.value(metadata i32 %129, metadata !4329, metadata !DIExpression()), !dbg !4381
  br label %130, !dbg !4493

130:                                              ; preds = %115, %126, %117, %111
  %131 = phi i32 [ %97, %111 ], [ %127, %126 ], [ %97, %115 ], [ %97, %117 ], !dbg !4381
  %132 = phi i32 [ %112, %111 ], [ %129, %126 ], [ %116, %115 ], [ %95, %117 ], !dbg !4453
  call void @llvm.dbg.value(metadata i32 %132, metadata !4329, metadata !DIExpression()), !dbg !4381
  call void @llvm.dbg.value(metadata i32 %131, metadata !4332, metadata !DIExpression()), !dbg !4381
  %133 = add nuw nsw i32 %98, 1, !dbg !4494
  call void @llvm.dbg.value(metadata i8* %100, metadata !4331, metadata !DIExpression()), !dbg !4381
  call void @llvm.dbg.value(metadata i32 %133, metadata !4344, metadata !DIExpression()), !dbg !4447
  %134 = icmp eq i32 %133, %31, !dbg !4448
  br i1 %134, label %287, label %94, !dbg !4449, !llvm.loop !4495

135:                                              ; preds = %41
  call void @llvm.dbg.declare(metadata [16 x i8]* %8, metadata !4354, metadata !DIExpression()), !dbg !4497
  call void @llvm.dbg.declare(metadata [16 x i8]* %9, metadata !4355, metadata !DIExpression()), !dbg !4498
  br i1 %28, label %136, label %138, !dbg !4499

136:                                              ; preds = %135
  call void @llvm.dbg.value(metadata i8 %23, metadata !4356, metadata !DIExpression()), !dbg !4381
  call void @llvm.dbg.value(metadata i8 0, metadata !4357, metadata !DIExpression()), !dbg !4381
  %137 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 0, !dbg !4500
  call void @llvm.dbg.value(metadata i8* %137, metadata !4358, metadata !DIExpression()), !dbg !4381
  br label %143, !dbg !4503

138:                                              ; preds = %135
  %139 = and i32 %4, 4
  %140 = icmp ne i32 %139, 0
  %141 = and i1 %140, %25, !dbg !4504
  %142 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0
  br i1 %141, label %143, label %148, !dbg !4504

143:                                              ; preds = %136, %138
  %144 = phi i8 [ 0, %138 ], [ %23, %136 ]
  %145 = phi i8 [ %23, %138 ], [ 0, %136 ]
  %146 = phi i8* [ %142, %138 ], [ %137, %136 ]
  call void @llvm.dbg.value(metadata i8* null, metadata !4358, metadata !DIExpression()), !dbg !4381
  call void @llvm.dbg.value(metadata i8 undef, metadata !4357, metadata !DIExpression()), !dbg !4381
  call void @llvm.dbg.value(metadata i8 0, metadata !4356, metadata !DIExpression()), !dbg !4381
  %147 = call i8* @memcpy(i8* noundef nonnull %146, i8* noundef nonnull %48, i32 noundef %24) #25, !dbg !4506
  br label %148, !dbg !4509

148:                                              ; preds = %138, %143
  %149 = phi i8 [ %145, %143 ], [ 0, %138 ]
  %150 = phi i8 [ %144, %143 ], [ 0, %138 ]
  %151 = getelementptr inbounds i8, i8* %48, i32 %24, !dbg !4510
  call void @llvm.dbg.value(metadata i8* %151, metadata !4331, metadata !DIExpression()), !dbg !4381
  call void @llvm.dbg.value(metadata i32 0, metadata !4360, metadata !DIExpression()), !dbg !4511
  call void @llvm.dbg.value(metadata i8 %149, metadata !4357, metadata !DIExpression()), !dbg !4381
  call void @llvm.dbg.value(metadata i8 %150, metadata !4356, metadata !DIExpression()), !dbg !4381
  %152 = icmp eq i8 %30, 0, !dbg !4512
  br i1 %152, label %153, label %155, !dbg !4513

153:                                              ; preds = %148
  %154 = and i32 %4, 4, !dbg !4514
  br label %160, !dbg !4513

155:                                              ; preds = %148
  %156 = icmp eq i32 %33, 0
  %157 = icmp eq i32 %26, 0
  %158 = and i32 %4, 4
  %159 = icmp eq i32 %158, 0
  br label %179, !dbg !4513

160:                                              ; preds = %235, %153
  %161 = phi i32 [ %154, %153 ], [ %158, %235 ], !dbg !4514
  %162 = phi i8 [ %150, %153 ], [ %236, %235 ], !dbg !4515
  %163 = phi i8 [ %149, %153 ], [ %237, %235 ], !dbg !4516
  %164 = phi i8* [ %151, %153 ], [ %186, %235 ], !dbg !4381
  call void @llvm.dbg.value(metadata i8 undef, metadata !4353, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 8)), !dbg !4381
  %165 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !4517
  %166 = load i8, i8* %165, align 1, !dbg !4517
  %167 = zext i8 %162 to i32, !dbg !4518
  %168 = add i8 %166, %162, !dbg !4519
  call void @llvm.dbg.value(metadata i8 %168, metadata !4353, metadata !DIExpression(DW_OP_LLVM_fragment, 8, 8)), !dbg !4381
  %169 = icmp eq i32 %33, 0, !dbg !4520
  %170 = lshr i8 %163, 1, !dbg !4521
  %171 = select i1 %169, i8 %170, i8 0, !dbg !4521
  call void @llvm.dbg.value(metadata i8 %171, metadata !4353, metadata !DIExpression(DW_OP_LLVM_fragment, 24, 8)), !dbg !4381
  %172 = icmp eq i32 %26, 0, !dbg !4522
  %173 = icmp eq i32 %161, 0, !dbg !4514
  %174 = select i1 %173, i8 0, i8 %163, !dbg !4514
  %175 = select i1 %172, i8 %174, i8 0, !dbg !4514
  call void @llvm.dbg.value(metadata i8 %175, metadata !4353, metadata !DIExpression(DW_OP_LLVM_fragment, 16, 8)), !dbg !4381
  call void @llvm.dbg.declare(metadata %struct.cbprintf_package_desc* undef, metadata !4368, metadata !DIExpression()), !dbg !4523
  %176 = load i32, i32* %14, align 1, !dbg !4524
  store i8 %168, i8* %165, align 1, !dbg !4525
  store i8 %175, i8* %22, align 1, !dbg !4525
  store i8 %171, i8* %29, align 1, !dbg !4525
  %177 = call i32 %2(i8* noundef nonnull %0, i32 noundef %44, i8* noundef %3) #25, !dbg !4526
  call void @llvm.dbg.value(metadata i32 %177, metadata !4359, metadata !DIExpression()), !dbg !4381
  %178 = icmp slt i32 %177, 0, !dbg !4527
  br i1 %178, label %287, label %240, !dbg !4529

179:                                              ; preds = %155, %235
  %180 = phi i8* [ %151, %155 ], [ %186, %235 ]
  %181 = phi i32 [ 0, %155 ], [ %238, %235 ]
  %182 = phi i8 [ %149, %155 ], [ %237, %235 ]
  %183 = phi i8 [ %150, %155 ], [ %236, %235 ]
  call void @llvm.dbg.value(metadata i8* %180, metadata !4331, metadata !DIExpression()), !dbg !4381
  call void @llvm.dbg.value(metadata i32 %181, metadata !4360, metadata !DIExpression()), !dbg !4511
  call void @llvm.dbg.value(metadata i8 %182, metadata !4357, metadata !DIExpression()), !dbg !4381
  call void @llvm.dbg.value(metadata i8 %183, metadata !4356, metadata !DIExpression()), !dbg !4381
  %184 = getelementptr inbounds i8, i8* %180, i32 1, !dbg !4530
  call void @llvm.dbg.value(metadata i8* %184, metadata !4331, metadata !DIExpression()), !dbg !4381
  %185 = load i8, i8* %180, align 1, !dbg !4531
  call void @llvm.dbg.value(metadata i8 %185, metadata !4362, metadata !DIExpression()), !dbg !4532
  %186 = getelementptr inbounds i8, i8* %180, i32 2, !dbg !4533
  call void @llvm.dbg.value(metadata i8* %186, metadata !4331, metadata !DIExpression()), !dbg !4381
  %187 = load i8, i8* %184, align 1, !dbg !4534
  call void @llvm.dbg.value(metadata i8 %187, metadata !4365, metadata !DIExpression()), !dbg !4532
  %188 = zext i8 %187 to i32, !dbg !4535
  %189 = getelementptr inbounds i32, i32* %14, i32 %188, !dbg !4535
  %190 = bitcast i32* %189 to i8**, !dbg !4536
  %191 = load i8*, i8** %190, align 4, !dbg !4536
  call void @llvm.dbg.value(metadata i8* %191, metadata !4366, metadata !DIExpression()), !dbg !4532
  %192 = call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %191) #26, !dbg !4537
  call void @llvm.dbg.value(metadata i1 %192, metadata !4367, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4532
  br i1 %16, label %196, label %193, !dbg !4538

193:                                              ; preds = %179
  %194 = zext i8 %185 to i32, !dbg !4540
  %195 = call zeroext i1 @is_ptr(i8* noundef %47, i32 noundef %194) #26, !dbg !4541
  br i1 %195, label %235, label %196, !dbg !4542

196:                                              ; preds = %193, %179
  br i1 %192, label %197, label %213, !dbg !4543

197:                                              ; preds = %196
  br i1 %157, label %205, label %198, !dbg !4544

198:                                              ; preds = %197
  %199 = icmp ult i8 %183, 16, !dbg !4547
  br i1 %199, label %201, label %200, !dbg !4552

200:                                              ; preds = %198
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.27, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.10.36, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 1086) #25, !dbg !4553
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 1086) #25, !dbg !4553
  unreachable, !dbg !4553

201:                                              ; preds = %198
  %202 = zext i8 %183 to i32, !dbg !4547
  %203 = add nuw nsw i8 %183, 1, !dbg !4555
  call void @llvm.dbg.value(metadata i8 %203, metadata !4356, metadata !DIExpression()), !dbg !4381
  %204 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %202, !dbg !4556
  br label %231, !dbg !4557

205:                                              ; preds = %197
  br i1 %159, label %235, label %206, !dbg !4558

206:                                              ; preds = %205
  %207 = icmp ult i8 %182, 16, !dbg !4559
  br i1 %207, label %209, label %208, !dbg !4564

208:                                              ; preds = %206
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.27, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.11.37, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 1089) #25, !dbg !4565
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 1089) #25, !dbg !4565
  unreachable, !dbg !4565

209:                                              ; preds = %206
  %210 = zext i8 %182 to i32, !dbg !4559
  %211 = add nuw nsw i8 %182, 1, !dbg !4567
  call void @llvm.dbg.value(metadata i8 %211, metadata !4357, metadata !DIExpression()), !dbg !4381
  %212 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %210, !dbg !4568
  br label %231, !dbg !4569

213:                                              ; preds = %196
  br i1 %156, label %221, label %214, !dbg !4570

214:                                              ; preds = %213
  %215 = icmp ult i8 %183, 16, !dbg !4572
  br i1 %215, label %217, label %216, !dbg !4577

216:                                              ; preds = %214
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.27, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.10.36, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 1096) #25, !dbg !4578
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 1096) #25, !dbg !4578
  unreachable, !dbg !4578

217:                                              ; preds = %214
  %218 = zext i8 %183 to i32, !dbg !4572
  %219 = add nuw nsw i8 %183, 1, !dbg !4580
  call void @llvm.dbg.value(metadata i8 %219, metadata !4356, metadata !DIExpression()), !dbg !4381
  %220 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %218, !dbg !4581
  br label %231, !dbg !4582

221:                                              ; preds = %213
  %222 = icmp ult i8 %182, 16, !dbg !4583
  br i1 %222, label %224, label %223, !dbg !4587

223:                                              ; preds = %221
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.27, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.11.37, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 1099) #25, !dbg !4588
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 1099) #25, !dbg !4588
  unreachable, !dbg !4588

224:                                              ; preds = %221
  %225 = zext i8 %182 to i32, !dbg !4583
  %226 = add nuw nsw i8 %182, 1, !dbg !4590
  call void @llvm.dbg.value(metadata i8 %226, metadata !4357, metadata !DIExpression()), !dbg !4381
  %227 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %225, !dbg !4591
  store i8 %185, i8* %227, align 1, !dbg !4592
  %228 = add nuw nsw i8 %182, 2, !dbg !4593
  call void @llvm.dbg.value(metadata i8 %228, metadata !4357, metadata !DIExpression()), !dbg !4381
  %229 = zext i8 %226 to i32, !dbg !4594
  %230 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %229, !dbg !4594
  br label %231

231:                                              ; preds = %217, %224, %201, %209
  %232 = phi i8* [ %212, %209 ], [ %204, %201 ], [ %230, %224 ], [ %220, %217 ]
  %233 = phi i8 [ %183, %209 ], [ %203, %201 ], [ %183, %224 ], [ %219, %217 ]
  %234 = phi i8 [ %211, %209 ], [ %182, %201 ], [ %228, %224 ], [ %182, %217 ]
  store i8 %187, i8* %232, align 1, !dbg !4595
  br label %235, !dbg !4596

235:                                              ; preds = %231, %205, %193
  %236 = phi i8 [ %183, %193 ], [ %183, %205 ], [ %233, %231 ], !dbg !4381
  %237 = phi i8 [ %182, %193 ], [ %182, %205 ], [ %234, %231 ], !dbg !4516
  call void @llvm.dbg.value(metadata i8 %237, metadata !4357, metadata !DIExpression()), !dbg !4381
  call void @llvm.dbg.value(metadata i8 %236, metadata !4356, metadata !DIExpression()), !dbg !4381
  %238 = add nuw nsw i32 %181, 1, !dbg !4596
  call void @llvm.dbg.value(metadata i8* %186, metadata !4331, metadata !DIExpression()), !dbg !4381
  call void @llvm.dbg.value(metadata i32 %238, metadata !4360, metadata !DIExpression()), !dbg !4511
  %239 = icmp eq i32 %238, %31, !dbg !4512
  br i1 %239, label %160, label %179, !dbg !4513, !llvm.loop !4597

240:                                              ; preds = %160
  %241 = zext i8 %163 to i32, !dbg !4521
  call void @llvm.dbg.value(metadata i32 %177, metadata !4329, metadata !DIExpression()), !dbg !4381
  store i32 %176, i32* %14, align 1, !dbg !4599
  %242 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0, !dbg !4600
  %243 = call i32 %2(i8* noundef nonnull %242, i32 noundef %241, i8* noundef %3) #25, !dbg !4601
  call void @llvm.dbg.value(metadata i32 %243, metadata !4359, metadata !DIExpression()), !dbg !4381
  %244 = icmp slt i32 %243, 0, !dbg !4602
  br i1 %244, label %287, label %245, !dbg !4604

245:                                              ; preds = %240
  call void @llvm.dbg.value(metadata !DIArgList(i32 %177, i32 %243), metadata !4329, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4381
  %246 = mul nsw i32 %31, -2
  %247 = add i32 %21, %246, !dbg !4605
  %248 = add nuw nsw i32 %44, %24, !dbg !4605
  %249 = sub i32 %247, %248, !dbg !4605
  call void @llvm.dbg.value(metadata i32 %249, metadata !4369, metadata !DIExpression()), !dbg !4381
  %250 = call i32 %2(i8* noundef %164, i32 noundef %249, i8* noundef %3) #25, !dbg !4606
  call void @llvm.dbg.value(metadata i32 %250, metadata !4359, metadata !DIExpression()), !dbg !4381
  %251 = icmp slt i32 %250, 0, !dbg !4607
  br i1 %251, label %287, label %252, !dbg !4609

252:                                              ; preds = %245
  %253 = add nuw nsw i32 %243, %177, !dbg !4610
  call void @llvm.dbg.value(metadata i32 %253, metadata !4329, metadata !DIExpression()), !dbg !4381
  %254 = add nuw nsw i32 %253, %250, !dbg !4611
  call void @llvm.dbg.value(metadata i32 %254, metadata !4329, metadata !DIExpression()), !dbg !4381
  call void @llvm.dbg.value(metadata i32 0, metadata !4370, metadata !DIExpression()), !dbg !4612
  %255 = icmp eq i8 %162, 0, !dbg !4613
  br i1 %255, label %284, label %256, !dbg !4614

256:                                              ; preds = %252
  %257 = icmp eq i16* %5, null
  br label %258, !dbg !4614

258:                                              ; preds = %256, %279
  %259 = phi i32 [ 0, %256 ], [ %282, %279 ]
  %260 = phi i32 [ %254, %256 ], [ %281, %279 ]
  call void @llvm.dbg.value(metadata i32 %259, metadata !4370, metadata !DIExpression()), !dbg !4612
  call void @llvm.dbg.value(metadata i32 %260, metadata !4329, metadata !DIExpression()), !dbg !4381
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10) #24, !dbg !4615
  %261 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %259, !dbg !4616
  %262 = load i8, i8* %261, align 1, !dbg !4616
  call void @llvm.dbg.value(metadata i8 %262, metadata !4372, metadata !DIExpression()), !dbg !4617
  store i8 %262, i8* %10, align 1, !dbg !4618
  %263 = zext i8 %262 to i32, !dbg !4619
  %264 = getelementptr inbounds i32, i32* %14, i32 %263, !dbg !4619
  %265 = bitcast i32* %264 to i8**, !dbg !4620
  %266 = load i8*, i8** %265, align 4, !dbg !4620
  call void @llvm.dbg.value(metadata i8* %266, metadata !4375, metadata !DIExpression()), !dbg !4617
  br i1 %257, label %270, label %267, !dbg !4621

267:                                              ; preds = %258
  %268 = getelementptr inbounds i16, i16* %5, i32 %259, !dbg !4622
  %269 = load i16, i16* %268, align 2, !dbg !4622
  br label %270, !dbg !4621

270:                                              ; preds = %258, %267
  %271 = phi i16 [ %269, %267 ], [ 0, %258 ], !dbg !4621
  call void @llvm.dbg.value(metadata i32 undef, metadata !4376, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4617
  call void @llvm.dbg.value(metadata i8* %10, metadata !4372, metadata !DIExpression(DW_OP_deref)), !dbg !4617
  %272 = call i32 %2(i8* noundef nonnull %10, i32 noundef 1, i8* noundef %3) #25, !dbg !4623
  call void @llvm.dbg.value(metadata i32 %272, metadata !4359, metadata !DIExpression()), !dbg !4381
  %273 = icmp slt i32 %272, 0, !dbg !4624
  br i1 %273, label %277, label %274, !dbg !4626

274:                                              ; preds = %270
  call void @llvm.dbg.value(metadata i16 %271, metadata !4376, metadata !DIExpression()), !dbg !4617
  call void @llvm.dbg.value(metadata !DIArgList(i32 %260, i32 %272), metadata !4329, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4381
  %275 = call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef nonnull %2, i8* noundef %3, i8* noundef %266, i16 noundef zeroext %271) #26, !dbg !4627
  call void @llvm.dbg.value(metadata i32 %275, metadata !4359, metadata !DIExpression()), !dbg !4381
  %276 = icmp slt i32 %275, 0, !dbg !4628
  br i1 %276, label %277, label %279, !dbg !4630

277:                                              ; preds = %274, %270
  %278 = phi i32 [ %275, %274 ], [ %272, %270 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !4329, metadata !DIExpression()), !dbg !4381
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #24, !dbg !4631
  call void @llvm.dbg.value(metadata i32 undef, metadata !4329, metadata !DIExpression()), !dbg !4381
  br label %287

279:                                              ; preds = %274
  %280 = add nsw i32 %272, %260, !dbg !4632
  call void @llvm.dbg.value(metadata i32 %280, metadata !4329, metadata !DIExpression()), !dbg !4381
  %281 = add nsw i32 %280, %275, !dbg !4633
  call void @llvm.dbg.value(metadata i32 %281, metadata !4329, metadata !DIExpression()), !dbg !4381
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #24, !dbg !4631
  %282 = add nuw nsw i32 %259, 1, !dbg !4634
  call void @llvm.dbg.value(metadata i32 %282, metadata !4370, metadata !DIExpression()), !dbg !4612
  %283 = icmp eq i32 %282, %167, !dbg !4613
  br i1 %283, label %284, label %258, !dbg !4614, !llvm.loop !4635

284:                                              ; preds = %279, %252
  %285 = phi i32 [ %254, %252 ], [ %281, %279 ], !dbg !4611
  call void @llvm.dbg.value(metadata i32 %285, metadata !4329, metadata !DIExpression()), !dbg !4381
  %286 = call i32 %2(i8* noundef null, i32 noundef 0, i8* noundef %3) #25, !dbg !4637
  br label %287, !dbg !4638

287:                                              ; preds = %130, %82, %277, %284, %160, %240, %245, %37, %39
  %288 = phi i32 [ %21, %39 ], [ %21, %37 ], [ %285, %284 ], [ %177, %160 ], [ %243, %240 ], [ %250, %245 ], [ %278, %277 ], [ %85, %82 ], [ %132, %130 ], !dbg !4381
  ret i32 %288, !dbg !4639
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @get_package_len(i8* noundef %0) unnamed_addr #1 !dbg !4640 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4644, metadata !DIExpression()), !dbg !4652
  %2 = icmp eq i8* %0, null, !dbg !4653
  br i1 %2, label %3, label %4, !dbg !4656

3:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.27, i32 0, i32 0), i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.12.38, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 198) #25, !dbg !4657
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.29, i32 0, i32 0), i32 noundef 198) #25, !dbg !4657
  unreachable, !dbg !4657

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i8* %0, metadata !4645, metadata !DIExpression()), !dbg !4652
  call void @llvm.dbg.value(metadata i8* %0, metadata !4646, metadata !DIExpression()), !dbg !4652
  %5 = load i8, i8* %0, align 1, !dbg !4659
  %6 = zext i8 %5 to i32, !dbg !4659
  %7 = shl nuw nsw i32 %6, 2, !dbg !4660
  call void @llvm.dbg.value(metadata i32 %7, metadata !4647, metadata !DIExpression()), !dbg !4652
  %8 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !4661
  %9 = load i8, i8* %8, align 1, !dbg !4661
  %10 = zext i8 %9 to i32, !dbg !4661
  call void @llvm.dbg.value(metadata i32 %10, metadata !4648, metadata !DIExpression()), !dbg !4652
  %11 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !4662
  %12 = load i8, i8* %11, align 1, !dbg !4662
  %13 = zext i8 %12 to i32, !dbg !4662
  call void @llvm.dbg.value(metadata i32 %13, metadata !4649, metadata !DIExpression()), !dbg !4652
  %14 = getelementptr inbounds i8, i8* %0, i32 %7, !dbg !4663
  call void @llvm.dbg.value(metadata i8* %14, metadata !4645, metadata !DIExpression()), !dbg !4652
  %15 = getelementptr inbounds i8, i8* %14, i32 %13, !dbg !4664
  call void @llvm.dbg.value(metadata i8* %15, metadata !4645, metadata !DIExpression()), !dbg !4652
  call void @llvm.dbg.value(metadata i32 0, metadata !4650, metadata !DIExpression()), !dbg !4665
  %16 = icmp eq i8 %9, 0, !dbg !4666
  br i1 %16, label %17, label %22, !dbg !4668

17:                                               ; preds = %22, %4
  %18 = phi i8* [ %15, %4 ], [ %28, %22 ], !dbg !4652
  %19 = ptrtoint i8* %18 to i32, !dbg !4669
  %20 = ptrtoint i8* %0 to i32, !dbg !4669
  %21 = sub i32 %19, %20, !dbg !4669
  ret i32 %21, !dbg !4670

22:                                               ; preds = %4, %22
  %23 = phi i32 [ %29, %22 ], [ 0, %4 ]
  %24 = phi i8* [ %28, %22 ], [ %15, %4 ]
  call void @llvm.dbg.value(metadata i32 %23, metadata !4650, metadata !DIExpression()), !dbg !4665
  call void @llvm.dbg.value(metadata i8* %24, metadata !4645, metadata !DIExpression()), !dbg !4652
  %25 = getelementptr inbounds i8, i8* %24, i32 1, !dbg !4671
  call void @llvm.dbg.value(metadata i8* %25, metadata !4645, metadata !DIExpression()), !dbg !4652
  %26 = tail call i32 @strlen(i8* noundef nonnull %25) #25, !dbg !4673
  %27 = add i32 %26, 1, !dbg !4674
  %28 = getelementptr inbounds i8, i8* %25, i32 %27, !dbg !4675
  call void @llvm.dbg.value(metadata i8* %28, metadata !4645, metadata !DIExpression()), !dbg !4652
  %29 = add nuw nsw i32 %23, 1, !dbg !4676
  call void @llvm.dbg.value(metadata i32 %29, metadata !4650, metadata !DIExpression()), !dbg !4665
  %30 = icmp eq i32 %29, %10, !dbg !4666
  br i1 %30, label %17, label %22, !dbg !4668, !llvm.loop !4677
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef readonly %0, i8* noundef %1, i8* noundef %2, i16 noundef zeroext %3) unnamed_addr #1 !dbg !4679 {
  call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %0, metadata !4683, metadata !DIExpression()), !dbg !4687
  call void @llvm.dbg.value(metadata i8* %1, metadata !4684, metadata !DIExpression()), !dbg !4687
  call void @llvm.dbg.value(metadata i8* %2, metadata !4685, metadata !DIExpression()), !dbg !4687
  call void @llvm.dbg.value(metadata i16 %3, metadata !4686, metadata !DIExpression()), !dbg !4687
  %5 = icmp eq i32 (i8*, i32, i8*)* %0, null, !dbg !4688
  br i1 %5, label %6, label %9, !dbg !4690

6:                                                ; preds = %4
  %7 = tail call i32 @strlen(i8* noundef %2) #25, !dbg !4691
  %8 = add i32 %7, 1, !dbg !4693
  br label %20, !dbg !4694

9:                                                ; preds = %4
  %10 = icmp eq i16 %3, 0, !dbg !4695
  br i1 %10, label %13, label %11, !dbg !4696

11:                                               ; preds = %9
  %12 = zext i16 %3 to i32, !dbg !4696
  br label %16, !dbg !4696

13:                                               ; preds = %9
  %14 = tail call i32 @strlen(i8* noundef %2) #25, !dbg !4697
  %15 = add i32 %14, 1, !dbg !4698
  br label %16, !dbg !4696

16:                                               ; preds = %13, %11
  %17 = phi i32 [ %12, %11 ], [ %15, %13 ], !dbg !4696
  %18 = and i32 %17, 65535, !dbg !4699
  call void @llvm.dbg.value(metadata i32 %17, metadata !4686, metadata !DIExpression()), !dbg !4687
  %19 = tail call i32 %0(i8* noundef %2, i32 noundef %18, i8* noundef %1) #25, !dbg !4700
  br label %20, !dbg !4701

20:                                               ; preds = %16, %6
  %21 = phi i32 [ %8, %6 ], [ %19, %16 ], !dbg !4687
  ret i32 %21, !dbg !4702
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @arch_printk_char_out(i32 noundef %0) #1 !dbg !4703 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4705, metadata !DIExpression()), !dbg !4706
  ret i32 0, !dbg !4707
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__printk_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #12 !dbg !4708 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !4712, metadata !DIExpression()), !dbg !4713
  store i32 (i32)* %0, i32 (i32)** @_char_out, align 4, !dbg !4714
  ret void, !dbg !4715
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i8* @__printk_get_hook() local_unnamed_addr #13 !dbg !4716 {
  %1 = load i8*, i8** bitcast (i32 (i32)** @_char_out to i8**), align 4, !dbg !4719
  ret i8* %1, !dbg !4720
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !4721 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !4732, metadata !DIExpression()), !dbg !4741
  call void @llvm.dbg.value(metadata i8* %0, metadata !4731, metadata !DIExpression()), !dbg !4741
  tail call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, i8*)* @char_out to i32 (...)*), i8* noundef null, i8* noundef %0, [1 x i32] %1) #26, !dbg !4742
  ret void, !dbg !4744
}

; Function Attrs: noinline nounwind optsize
define internal i32 @char_out(i32 noundef %0, i8* nocapture noundef readnone %1) #1 !dbg !4745 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4749, metadata !DIExpression()), !dbg !4751
  call void @llvm.dbg.value(metadata i8* %1, metadata !4750, metadata !DIExpression()), !dbg !4751
  %3 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !4752
  %4 = tail call i32 %3(i32 noundef %0) #25, !dbg !4752
  ret i32 %4, !dbg !4753
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cbvprintf(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3) unnamed_addr #1 !dbg !4754 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !4761, metadata !DIExpression()), !dbg !4762
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4758, metadata !DIExpression()), !dbg !4762
  call void @llvm.dbg.value(metadata i8* %1, metadata !4759, metadata !DIExpression()), !dbg !4762
  call void @llvm.dbg.value(metadata i8* %2, metadata !4760, metadata !DIExpression()), !dbg !4762
  %5 = tail call i32 @z_cbvprintf_impl(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef 0) #25, !dbg !4763
  ret void, !dbg !4764
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_str_out(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !4765 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4769, metadata !DIExpression()), !dbg !4772
  call void @llvm.dbg.value(metadata i32 %1, metadata !4770, metadata !DIExpression()), !dbg !4772
  call void @llvm.dbg.value(metadata i32 0, metadata !4771, metadata !DIExpression()), !dbg !4772
  %3 = icmp eq i32 %1, 0, !dbg !4773
  br i1 %3, label %13, label %4, !dbg !4776

4:                                                ; preds = %2, %4
  %5 = phi i32 [ %11, %4 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !4771, metadata !DIExpression()), !dbg !4772
  %6 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !4777
  %7 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !4779
  %8 = load i8, i8* %7, align 1, !dbg !4779
  %9 = zext i8 %8 to i32, !dbg !4779
  %10 = tail call i32 %6(i32 noundef %9) #25, !dbg !4777
  %11 = add nuw i32 %5, 1, !dbg !4780
  call void @llvm.dbg.value(metadata i32 %11, metadata !4771, metadata !DIExpression()), !dbg !4772
  %12 = icmp eq i32 %11, %1, !dbg !4773
  br i1 %12, label %13, label %4, !dbg !4776, !llvm.loop !4781

13:                                               ; preds = %4, %2
  ret void, !dbg !4783
}

; Function Attrs: noinline nounwind optsize
define dso_local void @printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !4784 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4788, metadata !DIExpression()), !dbg !4790
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !4791
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #24, !dbg !4791
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !4789, metadata !DIExpression()), !dbg !4792
  call void @llvm.va_start(i8* nonnull %3), !dbg !4793
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !4794
  %5 = load i32, i32* %4, align 4, !dbg !4794
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !4794
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #26, !dbg !4794
  call void @llvm.va_end(i8* nonnull %3), !dbg !4795
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #24, !dbg !4796
  ret void, !dbg !4796
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @snprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #1 !dbg !4797 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4801, metadata !DIExpression()), !dbg !4806
  call void @llvm.dbg.value(metadata i32 %1, metadata !4802, metadata !DIExpression()), !dbg !4806
  call void @llvm.dbg.value(metadata i8* %2, metadata !4803, metadata !DIExpression()), !dbg !4806
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !4807
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #24, !dbg !4807
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !4804, metadata !DIExpression()), !dbg !4808
  call void @llvm.va_start(i8* nonnull %5), !dbg !4809
  %6 = bitcast %struct.__va_list* %4 to i32*, !dbg !4810
  %7 = load i32, i32* %6, align 4, !dbg !4810
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !4810
  %9 = call i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %8) #26, !dbg !4810
  call void @llvm.dbg.value(metadata i32 %9, metadata !4805, metadata !DIExpression()), !dbg !4806
  call void @llvm.va_end(i8* nonnull %5), !dbg !4811
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #24, !dbg !4812
  ret i32 %9, !dbg !4813
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %3) local_unnamed_addr #1 !dbg !4814 {
  %5 = alloca %struct.str_context, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !4821, metadata !DIExpression()), !dbg !4828
  call void @llvm.dbg.value(metadata i8* %0, metadata !4818, metadata !DIExpression()), !dbg !4828
  call void @llvm.dbg.value(metadata i32 %1, metadata !4819, metadata !DIExpression()), !dbg !4828
  call void @llvm.dbg.value(metadata i8* %2, metadata !4820, metadata !DIExpression()), !dbg !4828
  %6 = bitcast %struct.str_context* %5 to i8*, !dbg !4829
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %6) #24, !dbg !4829
  call void @llvm.dbg.declare(metadata %struct.str_context* %5, metadata !4822, metadata !DIExpression()), !dbg !4830
  %7 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 0, !dbg !4831
  store i8* %0, i8** %7, align 4, !dbg !4831
  %8 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 1, !dbg !4831
  store i32 %1, i32* %8, align 4, !dbg !4831
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 2, !dbg !4831
  store i32 0, i32* %9, align 4, !dbg !4831
  call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, %struct.str_context*)* @str_out to i32 (...)*), i8* noundef nonnull %6, i8* noundef %2, [1 x i32] %3) #26, !dbg !4832
  %10 = load i32, i32* %9, align 4, !dbg !4833
  %11 = load i32, i32* %8, align 4, !dbg !4835
  %12 = icmp slt i32 %10, %11, !dbg !4836
  br i1 %12, label %13, label %15, !dbg !4837

13:                                               ; preds = %4
  %14 = getelementptr inbounds i8, i8* %0, i32 %10, !dbg !4838
  store i8 0, i8* %14, align 1, !dbg !4840
  br label %15, !dbg !4841

15:                                               ; preds = %13, %4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %6) #24, !dbg !4842
  ret i32 %10, !dbg !4843
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @str_out(i32 noundef returned %0, %struct.str_context* nocapture noundef %1) #14 !dbg !4844 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4849, metadata !DIExpression()), !dbg !4851
  call void @llvm.dbg.value(metadata %struct.str_context* %1, metadata !4850, metadata !DIExpression()), !dbg !4851
  %3 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 0, !dbg !4852
  %4 = load i8*, i8** %3, align 4, !dbg !4852
  %5 = icmp eq i8* %4, null, !dbg !4854
  %6 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2
  %7 = load i32, i32* %6, align 4, !dbg !4855
  br i1 %5, label %12, label %8, !dbg !4856

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 1, !dbg !4857
  %10 = load i32, i32* %9, align 4, !dbg !4857
  %11 = icmp slt i32 %7, %10, !dbg !4858
  br i1 %11, label %15, label %12, !dbg !4859

12:                                               ; preds = %2, %8
  %13 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2, !dbg !4860
  %14 = add nsw i32 %7, 1, !dbg !4862
  store i32 %14, i32* %13, align 4, !dbg !4862
  br label %25, !dbg !4863

15:                                               ; preds = %8
  %16 = add nsw i32 %10, -1, !dbg !4864
  %17 = icmp eq i32 %7, %16, !dbg !4866
  br i1 %17, label %18, label %21, !dbg !4867

18:                                               ; preds = %15
  %19 = add nsw i32 %7, 1, !dbg !4868
  store i32 %19, i32* %6, align 4, !dbg !4868
  %20 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !4870
  store i8 0, i8* %20, align 1, !dbg !4871
  br label %25, !dbg !4872

21:                                               ; preds = %15
  %22 = trunc i32 %0 to i8, !dbg !4873
  %23 = add nsw i32 %7, 1, !dbg !4875
  store i32 %23, i32* %6, align 4, !dbg !4875
  %24 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !4876
  store i8 %22, i8* %24, align 1, !dbg !4877
  br label %25

25:                                               ; preds = %18, %21, %12
  ret i32 %0, !dbg !4878
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_thread_entry(void (i8*, i8*, i8*)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #2 !dbg !4879 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !4884, metadata !DIExpression()), !dbg !4888
  call void @llvm.dbg.value(metadata i8* %1, metadata !4885, metadata !DIExpression()), !dbg !4888
  call void @llvm.dbg.value(metadata i8* %2, metadata !4886, metadata !DIExpression()), !dbg !4888
  call void @llvm.dbg.value(metadata i8* %3, metadata !4887, metadata !DIExpression()), !dbg !4888
  tail call void %0(i8* noundef %1, i8* noundef %2, i8* noundef %3) #25, !dbg !4889
  %5 = tail call fastcc %struct.k_thread* @k_current_get.41() #27, !dbg !4890
  tail call fastcc void @k_thread_abort(%struct.k_thread* noundef %5) #26, !dbg !4891
  unreachable, !dbg !4892
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.41() unnamed_addr #6 !dbg !4893 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.42() #27, !dbg !4993
  ret %struct.k_thread* %1, !dbg !4994
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !4995 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !4999, metadata !DIExpression()), !dbg !5000
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !5001, !srcloc !5003
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !5004
  ret void, !dbg !5005
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.42() unnamed_addr #6 !dbg !5006 {
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !5007, !srcloc !5009
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #25, !dbg !5010
  ret %struct.k_thread* %1, !dbg !5011
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_heap_free(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #1 !dbg !5012 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !5023, metadata !DIExpression()), !dbg !5027
  call void @llvm.dbg.value(metadata i8* %1, metadata !5024, metadata !DIExpression()), !dbg !5027
  %3 = icmp eq i8* %1, null, !dbg !5028
  br i1 %3, label %16, label %4, !dbg !5030

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !5031
  %6 = load %struct.z_heap*, %struct.z_heap** %5, align 4, !dbg !5031
  call void @llvm.dbg.value(metadata %struct.z_heap* %6, metadata !5025, metadata !DIExpression()), !dbg !5027
  %7 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %6, i8* noundef nonnull %1) #26, !dbg !5032, !range !5033
  call void @llvm.dbg.value(metadata i32 %7, metadata !5026, metadata !DIExpression()), !dbg !5027
  %8 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %6, i32 noundef %7) #26, !dbg !5034
  br i1 %8, label %10, label %9, !dbg !5037

9:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.43, i32 0, i32 0), i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1.44, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.45, i32 0, i32 0), i32 noundef 176) #25, !dbg !5038
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([56 x i8], [56 x i8]* @.str.3.46, i32 0, i32 0), i8* noundef nonnull %1) #25, !dbg !5038
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.45, i32 0, i32 0), i32 noundef 176) #25, !dbg !5038
  unreachable, !dbg !5038

10:                                               ; preds = %4
  %11 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %6, i32 noundef %7) #26, !dbg !5040
  %12 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %6, i32 noundef %11) #26, !dbg !5040
  %13 = icmp eq i32 %12, %7, !dbg !5040
  br i1 %13, label %15, label %14, !dbg !5043

14:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.43, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.4.47, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.45, i32 0, i32 0), i32 noundef 185) #25, !dbg !5044
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.5.48, i32 0, i32 0), i8* noundef nonnull %1) #25, !dbg !5044
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.45, i32 0, i32 0), i32 noundef 185) #25, !dbg !5044
  unreachable, !dbg !5044

15:                                               ; preds = %10
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %7, i1 noundef zeroext false) #26, !dbg !5046
  tail call fastcc void @free_chunk(%struct.z_heap* noundef %6, i32 noundef %7) #26, !dbg !5047
  br label %16

16:                                               ; preds = %2, %15
  ret void, !dbg !5048
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %0, i8* noundef %1) unnamed_addr #5 !dbg !5049 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5053, metadata !DIExpression()), !dbg !5057
  call void @llvm.dbg.value(metadata i8* %1, metadata !5054, metadata !DIExpression()), !dbg !5057
  call void @llvm.dbg.value(metadata i8* %1, metadata !5055, metadata !DIExpression()), !dbg !5057
  %3 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !5058
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %3, metadata !5056, metadata !DIExpression()), !dbg !5057
  %4 = getelementptr inbounds i8, i8* %1, i32 -4, !dbg !5059
  %5 = ptrtoint i8* %4 to i32, !dbg !5060
  %6 = ptrtoint %struct.chunk_unit_t* %3 to i32, !dbg !5060
  %7 = sub i32 %5, %6, !dbg !5060
  %8 = lshr i32 %7, 3, !dbg !5061
  ret i32 %8, !dbg !5062
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !5063 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5067, metadata !DIExpression()), !dbg !5069
  call void @llvm.dbg.value(metadata i32 %1, metadata !5068, metadata !DIExpression()), !dbg !5069
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #26, !dbg !5070
  %4 = and i32 %3, 1, !dbg !5071
  %5 = icmp ne i32 %4, 0, !dbg !5070
  ret i1 %5, !dbg !5072
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !5073 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5077, metadata !DIExpression()), !dbg !5079
  call void @llvm.dbg.value(metadata i32 %1, metadata !5078, metadata !DIExpression()), !dbg !5079
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !5080
  %4 = add i32 %3, %1, !dbg !5081
  ret i32 %4, !dbg !5082
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !5083 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5085, metadata !DIExpression()), !dbg !5087
  call void @llvm.dbg.value(metadata i32 %1, metadata !5086, metadata !DIExpression()), !dbg !5087
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 0) #26, !dbg !5088
  %4 = sub i32 %1, %3, !dbg !5089
  ret i32 %4, !dbg !5090
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @set_chunk_used(%struct.z_heap* noundef %0, i32 noundef %1, i1 noundef zeroext %2) unnamed_addr #14 !dbg !5091 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5095, metadata !DIExpression()), !dbg !5100
  call void @llvm.dbg.value(metadata i32 %1, metadata !5096, metadata !DIExpression()), !dbg !5100
  call void @llvm.dbg.value(metadata i1 %2, metadata !5097, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5100
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !5101
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !5098, metadata !DIExpression()), !dbg !5100
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !5099, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !5100
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 2, !dbg !5102
  %6 = bitcast i8* %5 to i16*, !dbg !5102
  %7 = load i16, i16* %6, align 2, !dbg !5102
  %8 = and i16 %7, -2, !dbg !5106
  %9 = zext i1 %2 to i16, !dbg !5106
  %10 = or i16 %8, %9, !dbg !5106
  store i16 %10, i16* %6, align 2, !dbg !5102
  ret void, !dbg !5107
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !5108 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5112, metadata !DIExpression()), !dbg !5114
  call void @llvm.dbg.value(metadata i32 %1, metadata !5113, metadata !DIExpression()), !dbg !5114
  %3 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !5115
  %4 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %3) #26, !dbg !5117
  br i1 %4, label %7, label %5, !dbg !5118

5:                                                ; preds = %2
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %3) #26, !dbg !5119
  %6 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !5121
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %6) #26, !dbg !5122
  br label %7, !dbg !5123

7:                                                ; preds = %5, %2
  %8 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !5124
  %9 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %8) #26, !dbg !5126
  br i1 %9, label %13, label %10, !dbg !5127

10:                                               ; preds = %7
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %8) #26, !dbg !5128
  %11 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !5130
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %11, i32 noundef %1) #26, !dbg !5131
  %12 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !5132
  call void @llvm.dbg.value(metadata i32 %12, metadata !5113, metadata !DIExpression()), !dbg !5114
  br label %13, !dbg !5133

13:                                               ; preds = %10, %7
  %14 = phi i32 [ %1, %7 ], [ %12, %10 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !5113, metadata !DIExpression()), !dbg !5114
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %0, i32 noundef %14) #26, !dbg !5134
  ret void, !dbg !5135
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !5136 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5138, metadata !DIExpression()), !dbg !5143
  call void @llvm.dbg.value(metadata i32 %1, metadata !5139, metadata !DIExpression()), !dbg !5143
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !5144, !range !5145
  %4 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %3) #26, !dbg !5146
  call void @llvm.dbg.value(metadata i32 %4, metadata !5140, metadata !DIExpression()), !dbg !5147
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %4) #26, !dbg !5148
  ret void, !dbg !5149
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #14 !dbg !5150 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5154, metadata !DIExpression()), !dbg !5159
  call void @llvm.dbg.value(metadata i32 %1, metadata !5155, metadata !DIExpression()), !dbg !5159
  call void @llvm.dbg.value(metadata i32 %2, metadata !5156, metadata !DIExpression()), !dbg !5159
  %4 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !5160
  %5 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %2) #26, !dbg !5161
  %6 = add i32 %5, %4, !dbg !5162
  call void @llvm.dbg.value(metadata i32 %6, metadata !5157, metadata !DIExpression()), !dbg !5159
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %6) #26, !dbg !5163
  %7 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %2) #26, !dbg !5164
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %7, i32 noundef %6) #26, !dbg !5165
  ret void, !dbg !5166
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_list_add(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !5167 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5169, metadata !DIExpression()), !dbg !5174
  call void @llvm.dbg.value(metadata i32 %1, metadata !5170, metadata !DIExpression()), !dbg !5174
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !5175, !range !5145
  %4 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %3) #26, !dbg !5176
  call void @llvm.dbg.value(metadata i32 %4, metadata !5171, metadata !DIExpression()), !dbg !5177
  tail call fastcc void @free_list_add_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %4) #26, !dbg !5178
  ret void, !dbg !5179
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !5180 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5184, metadata !DIExpression()), !dbg !5186
  call void @llvm.dbg.value(metadata i32 %1, metadata !5185, metadata !DIExpression()), !dbg !5186
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #26, !dbg !5187
  %4 = lshr i32 %3, 1, !dbg !5188
  ret i32 %4, !dbg !5189
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @bucket_idx(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #6 !dbg !5190 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5194, metadata !DIExpression()), !dbg !5197
  call void @llvm.dbg.value(metadata i32 %1, metadata !5195, metadata !DIExpression()), !dbg !5197
  %3 = tail call fastcc i32 @min_chunk_size(%struct.z_heap* noundef %0) #26, !dbg !5198
  %4 = add i32 %1, 1, !dbg !5199
  %5 = sub i32 %4, %3, !dbg !5200
  call void @llvm.dbg.value(metadata i32 %5, metadata !5196, metadata !DIExpression()), !dbg !5197
  %6 = tail call i32 @llvm.ctlz.i32(i32 %5, i1 false), !dbg !5201, !range !5202
  %7 = sub nsw i32 31, %6, !dbg !5203
  ret i32 %7, !dbg !5204
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @free_list_add_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #14 !dbg !5205 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5209, metadata !DIExpression()), !dbg !5218
  call void @llvm.dbg.value(metadata i32 %1, metadata !5210, metadata !DIExpression()), !dbg !5218
  call void @llvm.dbg.value(metadata i32 %2, metadata !5211, metadata !DIExpression()), !dbg !5218
  call void @llvm.dbg.value(metadata !DIArgList(%struct.z_heap* %0, i32 %2), metadata !5212, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 16, DW_OP_stack_value)), !dbg !5218
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %2, i32 0, !dbg !5219
  %5 = load i32, i32* %4, align 4, !dbg !5219
  %6 = icmp eq i32 %5, 0, !dbg !5220
  br i1 %6, label %7, label %12, !dbg !5221

7:                                                ; preds = %3
  %8 = shl nuw i32 1, %2, !dbg !5222
  %9 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !5224
  %10 = load i32, i32* %9, align 4, !dbg !5225
  %11 = or i32 %10, %8, !dbg !5225
  store i32 %11, i32* %9, align 4, !dbg !5225
  store i32 %1, i32* %4, align 4, !dbg !5226
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %1) #26, !dbg !5227
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %1) #26, !dbg !5228
  br label %14, !dbg !5229

12:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 %5, metadata !5214, metadata !DIExpression()), !dbg !5230
  %13 = tail call fastcc i32 @prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %5) #26, !dbg !5231, !range !5232
  call void @llvm.dbg.value(metadata i32 %13, metadata !5217, metadata !DIExpression()), !dbg !5230
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %13) #26, !dbg !5233
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %5) #26, !dbg !5234
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %13, i32 noundef %1) #26, !dbg !5235
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %5, i32 noundef %1) #26, !dbg !5236
  br label %14

14:                                               ; preds = %12, %7
  ret void, !dbg !5237
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #12 !dbg !5238 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5240, metadata !DIExpression()), !dbg !5243
  call void @llvm.dbg.value(metadata i32 %1, metadata !5241, metadata !DIExpression()), !dbg !5243
  call void @llvm.dbg.value(metadata i32 %2, metadata !5242, metadata !DIExpression()), !dbg !5243
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 2, i32 noundef %2) #26, !dbg !5244
  ret void, !dbg !5245
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #12 !dbg !5246 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5248, metadata !DIExpression()), !dbg !5251
  call void @llvm.dbg.value(metadata i32 %1, metadata !5249, metadata !DIExpression()), !dbg !5251
  call void @llvm.dbg.value(metadata i32 %2, metadata !5250, metadata !DIExpression()), !dbg !5251
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 3, i32 noundef %2) #26, !dbg !5252
  ret void, !dbg !5253
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @prev_free_chunk(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #13 !dbg !5254 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5256, metadata !DIExpression()), !dbg !5258
  call void @llvm.dbg.value(metadata i32 %1, metadata !5257, metadata !DIExpression()), !dbg !5258
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 2) #26, !dbg !5259
  ret i32 %3, !dbg !5260
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_field(%struct.z_heap* noundef readonly %0, i32 noundef %1, i32 noundef %2) unnamed_addr #13 !dbg !5261 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5265, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 %1, metadata !5266, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 %2, metadata !5267, metadata !DIExpression()), !dbg !5270
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !5271
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !5268, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !5269, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !5270
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !5269, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !5270
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 0, !dbg !5272
  call void @llvm.dbg.value(metadata i8* %5, metadata !5269, metadata !DIExpression()), !dbg !5270
  %6 = bitcast i8* %5 to i16*, !dbg !5273
  %7 = getelementptr inbounds i16, i16* %6, i32 %2, !dbg !5276
  %8 = load i16, i16* %7, align 2, !dbg !5276
  %9 = zext i16 %8 to i32, !dbg !5276
  ret i32 %9, !dbg !5277
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef readnone %0) unnamed_addr #5 !dbg !5278 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5282, metadata !DIExpression()), !dbg !5283
  %2 = bitcast %struct.z_heap* %0 to %struct.chunk_unit_t*, !dbg !5284
  ret %struct.chunk_unit_t* %2, !dbg !5285
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @chunk_set(%struct.z_heap* noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #12 !dbg !5286 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5290, metadata !DIExpression()), !dbg !5296
  call void @llvm.dbg.value(metadata i32 %1, metadata !5291, metadata !DIExpression()), !dbg !5296
  call void @llvm.dbg.value(metadata i32 %2, metadata !5292, metadata !DIExpression()), !dbg !5296
  call void @llvm.dbg.value(metadata i32 %3, metadata !5293, metadata !DIExpression()), !dbg !5296
  %5 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !5297
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %5, metadata !5294, metadata !DIExpression()), !dbg !5296
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %5, i32 %1), metadata !5295, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !5296
  %6 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %5, i32 %1, i32 0, i32 0, !dbg !5298
  call void @llvm.dbg.value(metadata i8* %6, metadata !5295, metadata !DIExpression()), !dbg !5296
  %7 = trunc i32 %3 to i16, !dbg !5299
  %8 = bitcast i8* %6 to i16*, !dbg !5302
  %9 = getelementptr inbounds i16, i16* %8, i32 %2, !dbg !5303
  store i16 %7, i16* %9, align 2, !dbg !5304
  ret void, !dbg !5305
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @min_chunk_size(%struct.z_heap* nocapture noundef readnone %0) unnamed_addr #5 !dbg !5306 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5310, metadata !DIExpression()), !dbg !5311
  %2 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %0, i32 noundef 1) #26, !dbg !5312
  ret i32 %2, !dbg !5313
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @bytes_to_chunksz(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #5 !dbg !5314 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5318, metadata !DIExpression()), !dbg !5320
  call void @llvm.dbg.value(metadata i32 %1, metadata !5319, metadata !DIExpression()), !dbg !5320
  %3 = add i32 %1, 4, !dbg !5321
  %4 = tail call fastcc i32 @chunksz(i32 noundef %3) #26, !dbg !5322
  ret i32 %4, !dbg !5323
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @chunksz(i32 noundef %0) unnamed_addr #5 !dbg !5324 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5328, metadata !DIExpression()), !dbg !5329
  %2 = add i32 %0, 7, !dbg !5330
  %3 = lshr i32 %2, 3, !dbg !5331
  ret i32 %3, !dbg !5332
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #12 !dbg !5333 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5337, metadata !DIExpression()), !dbg !5340
  call void @llvm.dbg.value(metadata i32 %1, metadata !5338, metadata !DIExpression()), !dbg !5340
  call void @llvm.dbg.value(metadata i32 %2, metadata !5339, metadata !DIExpression()), !dbg !5340
  %4 = shl i32 %2, 1, !dbg !5341
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1, i32 noundef %4) #26, !dbg !5342
  ret void, !dbg !5343
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #12 !dbg !5344 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5346, metadata !DIExpression()), !dbg !5349
  call void @llvm.dbg.value(metadata i32 %1, metadata !5347, metadata !DIExpression()), !dbg !5349
  call void @llvm.dbg.value(metadata i32 %2, metadata !5348, metadata !DIExpression()), !dbg !5349
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 0, i32 noundef %2) #26, !dbg !5350
  ret void, !dbg !5351
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @free_list_remove_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #14 !dbg !5352 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5354, metadata !DIExpression()), !dbg !5362
  call void @llvm.dbg.value(metadata i32 %1, metadata !5355, metadata !DIExpression()), !dbg !5362
  call void @llvm.dbg.value(metadata i32 %2, metadata !5356, metadata !DIExpression()), !dbg !5362
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %2, !dbg !5363
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %4, metadata !5357, metadata !DIExpression()), !dbg !5362
  %5 = tail call fastcc i32 @next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !5364
  %6 = icmp eq i32 %5, %1, !dbg !5365
  br i1 %6, label %7, label %14, !dbg !5366

7:                                                ; preds = %3
  %8 = shl nuw i32 1, %2, !dbg !5367
  %9 = xor i32 %8, -1, !dbg !5369
  %10 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !5370
  %11 = load i32, i32* %10, align 4, !dbg !5371
  %12 = and i32 %11, %9, !dbg !5371
  store i32 %12, i32* %10, align 4, !dbg !5371
  %13 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %4, i32 0, i32 0, !dbg !5372
  store i32 0, i32* %13, align 4, !dbg !5373
  br label %17, !dbg !5374

14:                                               ; preds = %3
  %15 = tail call fastcc i32 @prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !5375
  call void @llvm.dbg.value(metadata i32 %15, metadata !5358, metadata !DIExpression()), !dbg !5376
  call void @llvm.dbg.value(metadata i32 %5, metadata !5361, metadata !DIExpression()), !dbg !5376
  %16 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %4, i32 0, i32 0, !dbg !5377
  store i32 %5, i32* %16, align 4, !dbg !5378
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %15, i32 noundef %5) #26, !dbg !5379
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %5, i32 noundef %15) #26, !dbg !5380
  br label %17

17:                                               ; preds = %14, %7
  ret void, !dbg !5381
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @next_free_chunk(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #13 !dbg !5382 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5384, metadata !DIExpression()), !dbg !5386
  call void @llvm.dbg.value(metadata i32 %1, metadata !5385, metadata !DIExpression()), !dbg !5386
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 3) #26, !dbg !5387
  ret i32 %3, !dbg !5388
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @sys_heap_usable_size(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #13 !dbg !5389 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !5393, metadata !DIExpression()), !dbg !5400
  call void @llvm.dbg.value(metadata i8* %1, metadata !5394, metadata !DIExpression()), !dbg !5400
  %3 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !5401
  %4 = load %struct.z_heap*, %struct.z_heap** %3, align 4, !dbg !5401
  call void @llvm.dbg.value(metadata %struct.z_heap* %4, metadata !5395, metadata !DIExpression()), !dbg !5400
  %5 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %4, i8* noundef %1) #26, !dbg !5402
  call void @llvm.dbg.value(metadata i32 %5, metadata !5396, metadata !DIExpression()), !dbg !5400
  %6 = ptrtoint i8* %1 to i32, !dbg !5403
  call void @llvm.dbg.value(metadata i32 %6, metadata !5397, metadata !DIExpression()), !dbg !5400
  %7 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %4) #26, !dbg !5404
  %8 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %7, i32 %5, !dbg !5404
  %9 = ptrtoint %struct.chunk_unit_t* %8 to i32, !dbg !5405
  call void @llvm.dbg.value(metadata i32 %9, metadata !5398, metadata !DIExpression()), !dbg !5400
  %10 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %4, i32 noundef %5) #26, !dbg !5406
  %11 = shl i32 %10, 3, !dbg !5407
  call void @llvm.dbg.value(metadata i32 %11, metadata !5399, metadata !DIExpression()), !dbg !5400
  %12 = sub i32 %9, %6, !dbg !5408
  %13 = add i32 %12, %11, !dbg !5409
  ret i32 %13, !dbg !5410
}

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local i8* @sys_heap_alloc(%struct.sys_heap* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #8 !dbg !5411 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !5415, metadata !DIExpression()), !dbg !5421
  call void @llvm.dbg.value(metadata i32 %1, metadata !5416, metadata !DIExpression()), !dbg !5421
  %3 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !5422
  %4 = load %struct.z_heap*, %struct.z_heap** %3, align 4, !dbg !5422
  call void @llvm.dbg.value(metadata %struct.z_heap* %4, metadata !5417, metadata !DIExpression()), !dbg !5421
  %5 = icmp eq i32 %1, 0, !dbg !5423
  br i1 %5, label %19, label %6, !dbg !5425

6:                                                ; preds = %2
  %7 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %4, i32 noundef %1) #26, !dbg !5426
  br i1 %7, label %19, label %8, !dbg !5427

8:                                                ; preds = %6
  %9 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %4, i32 noundef %1) #26, !dbg !5428, !range !5033
  call void @llvm.dbg.value(metadata i32 %9, metadata !5419, metadata !DIExpression()), !dbg !5421
  %10 = tail call fastcc i32 @alloc_chunk(%struct.z_heap* noundef %4, i32 noundef %9) #26, !dbg !5429
  call void @llvm.dbg.value(metadata i32 %10, metadata !5420, metadata !DIExpression()), !dbg !5421
  %11 = icmp eq i32 %10, 0, !dbg !5430
  br i1 %11, label %19, label %12, !dbg !5432

12:                                               ; preds = %8
  %13 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %4, i32 noundef %10) #26, !dbg !5433
  %14 = icmp ugt i32 %13, %9, !dbg !5435
  br i1 %14, label %15, label %17, !dbg !5436

15:                                               ; preds = %12
  %16 = add i32 %10, %9, !dbg !5437
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %4, i32 noundef %10, i32 noundef %16) #26, !dbg !5439
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %4, i32 noundef %16) #26, !dbg !5440
  br label %17, !dbg !5441

17:                                               ; preds = %15, %12
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %4, i32 noundef %10, i1 noundef zeroext true) #26, !dbg !5442
  %18 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %4, i32 noundef %10) #26, !dbg !5443
  call void @llvm.dbg.value(metadata i8* %18, metadata !5418, metadata !DIExpression()), !dbg !5421
  br label %19, !dbg !5444

19:                                               ; preds = %17, %8, %2, %6
  %20 = phi i8* [ null, %6 ], [ null, %2 ], [ %18, %17 ], [ null, %8 ], !dbg !5421
  ret i8* %20, !dbg !5445
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @size_too_big(%struct.z_heap* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #13 !dbg !5446 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5450, metadata !DIExpression()), !dbg !5452
  call void @llvm.dbg.value(metadata i32 %1, metadata !5451, metadata !DIExpression()), !dbg !5452
  %3 = lshr i32 %1, 3, !dbg !5453
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 1, !dbg !5454
  %5 = load i32, i32* %4, align 4, !dbg !5454
  %6 = icmp uge i32 %3, %5, !dbg !5455
  ret i1 %6, !dbg !5456
}

; Function Attrs: nofree noinline nosync nounwind optsize
define internal fastcc i32 @alloc_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #8 !dbg !5457 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5461, metadata !DIExpression()), !dbg !5476
  call void @llvm.dbg.value(metadata i32 %1, metadata !5462, metadata !DIExpression()), !dbg !5476
  %3 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !5477
  call void @llvm.dbg.value(metadata i32 %3, metadata !5463, metadata !DIExpression()), !dbg !5476
  call void @llvm.dbg.value(metadata !DIArgList(%struct.z_heap* %0, i32 %3), metadata !5464, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 16, DW_OP_stack_value)), !dbg !5476
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %3, i32 0, !dbg !5478
  %5 = load i32, i32* %4, align 4, !dbg !5478
  %6 = icmp eq i32 %5, 0, !dbg !5479
  br i1 %6, label %19, label %7, !dbg !5480

7:                                                ; preds = %2, %13
  %8 = phi i32 [ %14, %13 ], [ %5, %2 ], !dbg !5481
  %9 = phi i32 [ %15, %13 ], [ 3, %2 ], !dbg !5482
  call void @llvm.dbg.value(metadata i32 %9, metadata !5468, metadata !DIExpression()), !dbg !5482
  call void @llvm.dbg.value(metadata i32 %8, metadata !5469, metadata !DIExpression()), !dbg !5483
  %10 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef nonnull %0, i32 noundef %8) #26, !dbg !5484
  %11 = icmp ult i32 %10, %1, !dbg !5486
  br i1 %11, label %13, label %12, !dbg !5487

12:                                               ; preds = %7
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef nonnull %0, i32 noundef %8, i32 noundef %3) #26, !dbg !5488
  br label %30

13:                                               ; preds = %7
  %14 = tail call fastcc i32 @next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %8) #26, !dbg !5490
  store i32 %14, i32* %4, align 4, !dbg !5491
  %15 = add nsw i32 %9, -1, !dbg !5492
  call void @llvm.dbg.value(metadata i32 %15, metadata !5468, metadata !DIExpression()), !dbg !5482
  %16 = icmp eq i32 %15, 0, !dbg !5492
  %17 = icmp eq i32 %14, %5
  %18 = select i1 %16, i1 true, i1 %17, !dbg !5493
  br i1 %18, label %19, label %7, !dbg !5493, !llvm.loop !5494

19:                                               ; preds = %13, %2
  %20 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !5497
  %21 = load i32, i32* %20, align 4, !dbg !5497
  %22 = add nsw i32 %3, 1, !dbg !5498
  %23 = shl nsw i32 -1, %22, !dbg !5498
  %24 = and i32 %21, %23, !dbg !5499
  call void @llvm.dbg.value(metadata i32 %24, metadata !5471, metadata !DIExpression()), !dbg !5476
  %25 = icmp eq i32 %24, 0, !dbg !5500
  br i1 %25, label %30, label %26, !dbg !5501

26:                                               ; preds = %19
  %27 = tail call i32 @llvm.cttz.i32(i32 %24, i1 true), !dbg !5502, !range !5202
  call void @llvm.dbg.value(metadata i32 %27, metadata !5472, metadata !DIExpression()), !dbg !5503
  %28 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %27, i32 0, !dbg !5504
  %29 = load i32, i32* %28, align 4, !dbg !5504
  call void @llvm.dbg.value(metadata i32 %29, metadata !5475, metadata !DIExpression()), !dbg !5503
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef nonnull %0, i32 noundef %29, i32 noundef %27) #26, !dbg !5505
  br label %30

30:                                               ; preds = %12, %26, %19
  %31 = phi i32 [ %29, %26 ], [ 0, %19 ], [ %8, %12 ], !dbg !5476
  ret i32 %31, !dbg !5506
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @split_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #14 !dbg !5507 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5509, metadata !DIExpression()), !dbg !5515
  call void @llvm.dbg.value(metadata i32 %1, metadata !5510, metadata !DIExpression()), !dbg !5515
  call void @llvm.dbg.value(metadata i32 %2, metadata !5511, metadata !DIExpression()), !dbg !5515
  %4 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !5516
  call void @llvm.dbg.value(metadata i32 %4, metadata !5512, metadata !DIExpression()), !dbg !5515
  %5 = sub i32 %2, %1, !dbg !5517
  call void @llvm.dbg.value(metadata i32 %5, metadata !5513, metadata !DIExpression()), !dbg !5515
  %6 = sub i32 %4, %5, !dbg !5518
  call void @llvm.dbg.value(metadata i32 %6, metadata !5514, metadata !DIExpression()), !dbg !5515
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %5) #26, !dbg !5519
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %2, i32 noundef %6) #26, !dbg !5520
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %2, i32 noundef %5) #26, !dbg !5521
  %7 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %2) #26, !dbg !5522
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %7, i32 noundef %6) #26, !dbg !5523
  ret void, !dbg !5524
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @chunk_mem(%struct.z_heap* noundef readnone %0, i32 noundef %1) unnamed_addr #5 !dbg !5525 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5529, metadata !DIExpression()), !dbg !5533
  call void @llvm.dbg.value(metadata i32 %1, metadata !5530, metadata !DIExpression()), !dbg !5533
  %3 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !5534
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %3, metadata !5531, metadata !DIExpression()), !dbg !5533
  %4 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %3, i32 %1, i32 0, i32 4, !dbg !5535
  call void @llvm.dbg.value(metadata i8* %4, metadata !5532, metadata !DIExpression()), !dbg !5533
  ret i8* %4, !dbg !5536
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.cttz.i32(i32, i1 immarg) #3

; Function Attrs: noinline nounwind optsize
define dso_local i8* @sys_heap_aligned_alloc(%struct.sys_heap* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !5537 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !5541, metadata !DIExpression()), !dbg !5553
  call void @llvm.dbg.value(metadata i32 %1, metadata !5542, metadata !DIExpression()), !dbg !5553
  call void @llvm.dbg.value(metadata i32 %2, metadata !5543, metadata !DIExpression()), !dbg !5553
  %4 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !5554
  %5 = load %struct.z_heap*, %struct.z_heap** %4, align 4, !dbg !5554
  call void @llvm.dbg.value(metadata %struct.z_heap* %5, metadata !5544, metadata !DIExpression()), !dbg !5553
  %6 = sub i32 0, %1, !dbg !5555
  %7 = and i32 %6, %1, !dbg !5556
  call void @llvm.dbg.value(metadata i32 %7, metadata !5546, metadata !DIExpression()), !dbg !5553
  %8 = icmp eq i32 %7, %1, !dbg !5557
  br i1 %8, label %13, label %9, !dbg !5559

9:                                                ; preds = %3
  %10 = sub i32 %1, %7, !dbg !5560
  call void @llvm.dbg.value(metadata i32 %10, metadata !5542, metadata !DIExpression()), !dbg !5553
  %11 = icmp ult i32 %7, 4, !dbg !5562
  %12 = select i1 %11, i32 %7, i32 4, !dbg !5562
  br label %17, !dbg !5562

13:                                               ; preds = %3
  %14 = icmp ult i32 %1, 5, !dbg !5563
  br i1 %14, label %15, label %17, !dbg !5566

15:                                               ; preds = %13
  %16 = tail call i8* @sys_heap_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2) #26, !dbg !5567
  br label %61, !dbg !5569

17:                                               ; preds = %9, %13
  %18 = phi i32 [ 0, %13 ], [ %7, %9 ], !dbg !5553
  %19 = phi i32 [ 4, %13 ], [ %12, %9 ], !dbg !5570
  %20 = phi i32 [ %1, %13 ], [ %10, %9 ]
  call void @llvm.dbg.value(metadata i32 %20, metadata !5542, metadata !DIExpression()), !dbg !5553
  call void @llvm.dbg.value(metadata i32 %19, metadata !5545, metadata !DIExpression()), !dbg !5553
  call void @llvm.dbg.value(metadata i32 %18, metadata !5546, metadata !DIExpression()), !dbg !5553
  %21 = add i32 %20, -1, !dbg !5571
  %22 = tail call i32 @llvm.ctpop.i32(i32 %20), !dbg !5571, !range !5202
  %23 = icmp ult i32 %22, 2, !dbg !5571
  br i1 %23, label %25, label %24, !dbg !5574

24:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.43, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.6.49, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.45, i32 0, i32 0), i32 noundef 324) #25, !dbg !5575
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.7.50, i32 0, i32 0)) #25, !dbg !5575
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.45, i32 0, i32 0), i32 noundef 324) #25, !dbg !5575
  unreachable, !dbg !5575

25:                                               ; preds = %17
  %26 = icmp eq i32 %2, 0, !dbg !5577
  br i1 %26, label %61, label %27, !dbg !5579

27:                                               ; preds = %25
  %28 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %5, i32 noundef %2) #26, !dbg !5580
  br i1 %28, label %61, label %29, !dbg !5581

29:                                               ; preds = %27
  %30 = sub i32 %2, %19, !dbg !5582
  %31 = add i32 %30, %20, !dbg !5583
  %32 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %5, i32 noundef %31) #26, !dbg !5584, !range !5033
  call void @llvm.dbg.value(metadata i32 %32, metadata !5547, metadata !DIExpression()), !dbg !5553
  %33 = tail call fastcc i32 @alloc_chunk(%struct.z_heap* noundef %5, i32 noundef %32) #26, !dbg !5585
  call void @llvm.dbg.value(metadata i32 %33, metadata !5548, metadata !DIExpression()), !dbg !5553
  %34 = icmp eq i32 %33, 0, !dbg !5586
  br i1 %34, label %61, label %35, !dbg !5588

35:                                               ; preds = %29
  %36 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %5, i32 noundef %33) #26, !dbg !5589
  call void @llvm.dbg.value(metadata i8* %36, metadata !5549, metadata !DIExpression()), !dbg !5553
  %37 = getelementptr inbounds i8, i8* %36, i32 %18, !dbg !5590
  %38 = ptrtoint i8* %37 to i32, !dbg !5590
  %39 = add i32 %21, %38, !dbg !5590
  %40 = sub i32 0, %20, !dbg !5590
  %41 = and i32 %39, %40, !dbg !5590
  %42 = inttoptr i32 %41 to i8*, !dbg !5591
  %43 = sub i32 0, %18, !dbg !5592
  %44 = getelementptr inbounds i8, i8* %42, i32 %43, !dbg !5592
  call void @llvm.dbg.value(metadata i8* %44, metadata !5549, metadata !DIExpression()), !dbg !5553
  %45 = getelementptr inbounds i8, i8* %44, i32 %2, !dbg !5593
  %46 = ptrtoint i8* %45 to i32, !dbg !5593
  %47 = add i32 %46, 7, !dbg !5593
  %48 = and i32 %47, -8, !dbg !5593
  call void @llvm.dbg.value(metadata i32 %48, metadata !5550, metadata !DIExpression()), !dbg !5553
  %49 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %5, i8* noundef %44) #26, !dbg !5594
  call void @llvm.dbg.value(metadata i32 %49, metadata !5551, metadata !DIExpression()), !dbg !5553
  %50 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %5) #26, !dbg !5595
  %51 = ptrtoint %struct.chunk_unit_t* %50 to i32, !dbg !5596
  %52 = sub i32 %48, %51, !dbg !5596
  %53 = ashr exact i32 %52, 3, !dbg !5596
  call void @llvm.dbg.value(metadata i32 %53, metadata !5552, metadata !DIExpression()), !dbg !5553
  %54 = icmp ugt i32 %49, %33, !dbg !5597
  br i1 %54, label %55, label %56, !dbg !5599

55:                                               ; preds = %35
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %5, i32 noundef %33, i32 noundef %49) #26, !dbg !5600
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %5, i32 noundef %33) #26, !dbg !5602
  br label %56, !dbg !5603

56:                                               ; preds = %55, %35
  %57 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %5, i32 noundef %49) #26, !dbg !5604
  %58 = icmp ugt i32 %57, %53, !dbg !5606
  br i1 %58, label %59, label %60, !dbg !5607

59:                                               ; preds = %56
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %5, i32 noundef %49, i32 noundef %53) #26, !dbg !5608
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %5, i32 noundef %53) #26, !dbg !5610
  br label %60, !dbg !5611

60:                                               ; preds = %59, %56
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %5, i32 noundef %49, i1 noundef zeroext true) #26, !dbg !5612
  br label %61

61:                                               ; preds = %60, %29, %25, %27, %15
  %62 = phi i8* [ %16, %15 ], [ null, %27 ], [ null, %25 ], [ %44, %60 ], [ null, %29 ], !dbg !5553
  ret i8* %62, !dbg !5613
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctpop.i32(i32) #3

; Function Attrs: noinline nounwind optsize
define dso_local i8* @sys_heap_aligned_realloc(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !5614 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !5618, metadata !DIExpression()), !dbg !5637
  call void @llvm.dbg.value(metadata i8* %1, metadata !5619, metadata !DIExpression()), !dbg !5637
  call void @llvm.dbg.value(metadata i32 %2, metadata !5620, metadata !DIExpression()), !dbg !5637
  call void @llvm.dbg.value(metadata i32 %3, metadata !5621, metadata !DIExpression()), !dbg !5637
  %5 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !5638
  %6 = load %struct.z_heap*, %struct.z_heap** %5, align 4, !dbg !5638
  call void @llvm.dbg.value(metadata %struct.z_heap* %6, metadata !5622, metadata !DIExpression()), !dbg !5637
  %7 = icmp eq i8* %1, null, !dbg !5639
  br i1 %7, label %8, label %10, !dbg !5641

8:                                                ; preds = %4
  %9 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2, i32 noundef %3) #26, !dbg !5642
  br label %63, !dbg !5644

10:                                               ; preds = %4
  %11 = icmp eq i32 %3, 0, !dbg !5645
  br i1 %11, label %12, label %13, !dbg !5647

12:                                               ; preds = %10
  tail call void @sys_heap_free(%struct.sys_heap* noundef nonnull %0, i8* noundef nonnull %1) #26, !dbg !5648
  br label %63, !dbg !5650

13:                                               ; preds = %10
  %14 = add i32 %2, -1, !dbg !5651
  %15 = tail call i32 @llvm.ctpop.i32(i32 %2), !dbg !5651, !range !5202
  %16 = icmp ult i32 %15, 2, !dbg !5651
  br i1 %16, label %18, label %17, !dbg !5654

17:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.43, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.6.49, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.45, i32 0, i32 0), i32 noundef 393) #25, !dbg !5655
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.7.50, i32 0, i32 0)) #25, !dbg !5655
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.45, i32 0, i32 0), i32 noundef 393) #25, !dbg !5655
  unreachable, !dbg !5655

18:                                               ; preds = %13
  %19 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %6, i32 noundef %3) #26, !dbg !5657
  br i1 %19, label %63, label %20, !dbg !5659

20:                                               ; preds = %18
  %21 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %6, i8* noundef nonnull %1) #26, !dbg !5660, !range !5033
  call void @llvm.dbg.value(metadata i32 %21, metadata !5623, metadata !DIExpression()), !dbg !5637
  %22 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %6, i32 noundef %21) #26, !dbg !5661
  call void @llvm.dbg.value(metadata i32 %22, metadata !5624, metadata !DIExpression()), !dbg !5637
  %23 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %6, i32 noundef %21) #26, !dbg !5662
  %24 = ptrtoint i8* %1 to i32, !dbg !5663
  %25 = ptrtoint i8* %23 to i32, !dbg !5663
  %26 = sub i32 %24, %25, !dbg !5663
  call void @llvm.dbg.value(metadata i32 %26, metadata !5625, metadata !DIExpression()), !dbg !5637
  %27 = add i32 %26, %3, !dbg !5664
  %28 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %6, i32 noundef %27) #26, !dbg !5665
  call void @llvm.dbg.value(metadata i32 %28, metadata !5626, metadata !DIExpression()), !dbg !5637
  %29 = icmp eq i32 %2, 0, !dbg !5666
  %30 = and i32 %14, %24
  %31 = icmp eq i32 %30, 0
  %32 = or i1 %29, %31, !dbg !5667
  br i1 %32, label %33, label %53, !dbg !5667

33:                                               ; preds = %20
  %34 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %21) #26, !dbg !5668
  %35 = icmp eq i32 %28, %34, !dbg !5669
  br i1 %35, label %63, label %36, !dbg !5670

36:                                               ; preds = %33
  %37 = icmp ult i32 %28, %34, !dbg !5671
  br i1 %37, label %38, label %40, !dbg !5672

38:                                               ; preds = %36
  %39 = add i32 %28, %21, !dbg !5673
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %6, i32 noundef %21, i32 noundef %39) #26, !dbg !5675
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %21, i1 noundef zeroext true) #26, !dbg !5676
  tail call fastcc void @free_chunk(%struct.z_heap* noundef %6, i32 noundef %39) #26, !dbg !5677
  br label %63, !dbg !5678

40:                                               ; preds = %36
  %41 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %6, i32 noundef %22) #26, !dbg !5679
  br i1 %41, label %53, label %42, !dbg !5680

42:                                               ; preds = %40
  %43 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %22) #26, !dbg !5681
  %44 = add i32 %43, %34, !dbg !5682
  %45 = icmp ult i32 %44, %28, !dbg !5683
  br i1 %45, label %53, label %46, !dbg !5684

46:                                               ; preds = %42
  %47 = sub i32 %28, %34, !dbg !5685
  call void @llvm.dbg.value(metadata i32 %47, metadata !5627, metadata !DIExpression()), !dbg !5686
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %6, i32 noundef %22) #26, !dbg !5687
  %48 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %22) #26, !dbg !5688
  %49 = icmp ult i32 %47, %48, !dbg !5690
  br i1 %49, label %50, label %52, !dbg !5691

50:                                               ; preds = %46
  %51 = add i32 %47, %22, !dbg !5692
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %6, i32 noundef %22, i32 noundef %51) #26, !dbg !5694
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %6, i32 noundef %51) #26, !dbg !5695
  br label %52, !dbg !5696

52:                                               ; preds = %50, %46
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %6, i32 noundef %21, i32 noundef %22) #26, !dbg !5697
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %21, i1 noundef zeroext true) #26, !dbg !5698
  br label %63

53:                                               ; preds = %20, %42, %40
  %54 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2, i32 noundef %3) #26, !dbg !5699
  call void @llvm.dbg.value(metadata i8* %54, metadata !5633, metadata !DIExpression()), !dbg !5637
  %55 = icmp eq i8* %54, null, !dbg !5700
  br i1 %55, label %63, label %56, !dbg !5701

56:                                               ; preds = %53
  %57 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %21) #26, !dbg !5702, !range !5145
  %58 = tail call fastcc i32 @chunksz_to_bytes(%struct.z_heap* noundef %6, i32 noundef %57) #26, !dbg !5703
  %59 = sub i32 %58, %26, !dbg !5704
  call void @llvm.dbg.value(metadata i32 %59, metadata !5634, metadata !DIExpression()), !dbg !5705
  %60 = icmp ult i32 %59, %3, !dbg !5706
  %61 = select i1 %60, i32 %59, i32 %3, !dbg !5706
  %62 = tail call i8* @memcpy(i8* noundef nonnull %54, i8* noundef nonnull %1, i32 noundef %61) #25, !dbg !5707
  tail call void @sys_heap_free(%struct.sys_heap* noundef nonnull %0, i8* noundef nonnull %1) #26, !dbg !5708
  br label %63, !dbg !5709

63:                                               ; preds = %38, %52, %33, %56, %53, %18, %12, %8
  %64 = phi i8* [ %9, %8 ], [ null, %12 ], [ null, %18 ], [ %1, %38 ], [ %1, %52 ], [ %1, %33 ], [ %54, %56 ], [ null, %53 ], !dbg !5637
  ret i8* %64, !dbg !5710
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @chunksz_to_bytes(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #5 !dbg !5711 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5715, metadata !DIExpression()), !dbg !5717
  call void @llvm.dbg.value(metadata i32 %1, metadata !5716, metadata !DIExpression()), !dbg !5717
  %3 = shl i32 %1, 3, !dbg !5718
  %4 = add i32 %3, -4, !dbg !5719
  ret i32 %4, !dbg !5720
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_heap_init(%struct.sys_heap* nocapture noundef writeonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !5721 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !5725, metadata !DIExpression()), !dbg !5736
  call void @llvm.dbg.value(metadata i8* %1, metadata !5726, metadata !DIExpression()), !dbg !5736
  call void @llvm.dbg.value(metadata i32 %2, metadata !5727, metadata !DIExpression()), !dbg !5736
  %4 = icmp ult i32 %2, 262144, !dbg !5737
  br i1 %4, label %6, label %5, !dbg !5742

5:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.43, i32 0, i32 0), i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.8.51, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.45, i32 0, i32 0), i32 noundef 491) #25, !dbg !5743
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9.52, i32 0, i32 0)) #25, !dbg !5743
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.45, i32 0, i32 0), i32 noundef 491) #25, !dbg !5743
  unreachable, !dbg !5743

6:                                                ; preds = %3
  %7 = icmp ugt i32 %2, 4, !dbg !5745
  br i1 %7, label %9, label %8, !dbg !5748

8:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.43, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.10.53, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.45, i32 0, i32 0), i32 noundef 498) #25, !dbg !5749
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.11.54, i32 0, i32 0)) #25, !dbg !5749
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.45, i32 0, i32 0), i32 noundef 498) #25, !dbg !5749
  unreachable, !dbg !5749

9:                                                ; preds = %6
  %10 = add nsw i32 %2, -4, !dbg !5751
  call void @llvm.dbg.value(metadata i32 %10, metadata !5727, metadata !DIExpression()), !dbg !5736
  %11 = ptrtoint i8* %1 to i32, !dbg !5752
  %12 = add i32 %11, 7, !dbg !5752
  %13 = and i32 %12, -8, !dbg !5752
  call void @llvm.dbg.value(metadata i32 %13, metadata !5728, metadata !DIExpression()), !dbg !5736
  %14 = getelementptr inbounds i8, i8* %1, i32 %10, !dbg !5753
  %15 = ptrtoint i8* %14 to i32, !dbg !5753
  %16 = and i32 %15, -8, !dbg !5753
  call void @llvm.dbg.value(metadata i32 %16, metadata !5729, metadata !DIExpression()), !dbg !5736
  %17 = sub i32 %16, %13, !dbg !5754
  %18 = lshr exact i32 %17, 3, !dbg !5755
  call void @llvm.dbg.value(metadata i32 %18, metadata !5730, metadata !DIExpression()), !dbg !5736
  %19 = tail call fastcc i32 @chunksz(i32 noundef 16) #26, !dbg !5756
  %20 = icmp ugt i32 %18, %19, !dbg !5756
  br i1 %20, label %22, label %21, !dbg !5759

21:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.43, i32 0, i32 0), i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.12.55, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.45, i32 0, i32 0), i32 noundef 507) #25, !dbg !5760
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.11.54, i32 0, i32 0)) #25, !dbg !5760
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.45, i32 0, i32 0), i32 noundef 507) #25, !dbg !5760
  unreachable, !dbg !5760

22:                                               ; preds = %9
  %23 = inttoptr i32 %13 to %struct.z_heap*, !dbg !5762
  call void @llvm.dbg.value(metadata %struct.z_heap* %23, metadata !5731, metadata !DIExpression()), !dbg !5736
  %24 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !5763
  store %struct.z_heap* %23, %struct.z_heap** %24, align 4, !dbg !5764
  %25 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %23, i32 0, i32 1, !dbg !5765
  store i32 %18, i32* %25, align 8, !dbg !5766
  %26 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %23, i32 0, i32 2, !dbg !5767
  store i32 0, i32* %26, align 4, !dbg !5768
  %27 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %23, i32 noundef %18) #26, !dbg !5769
  call void @llvm.dbg.value(metadata i32 %27, metadata !5732, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5736
  %28 = shl i32 %27, 2, !dbg !5770
  %29 = add i32 %28, 20, !dbg !5771
  %30 = tail call fastcc i32 @chunksz(i32 noundef %29) #26, !dbg !5772
  call void @llvm.dbg.value(metadata i32 %30, metadata !5733, metadata !DIExpression()), !dbg !5736
  %31 = tail call fastcc i32 @min_chunk_size(%struct.z_heap* noundef %23) #26, !dbg !5773
  %32 = add i32 %31, %30, !dbg !5773
  %33 = icmp ugt i32 %32, %18, !dbg !5773
  br i1 %33, label %36, label %34, !dbg !5776

34:                                               ; preds = %22
  call void @llvm.dbg.value(metadata i32 0, metadata !5734, metadata !DIExpression()), !dbg !5777
  %35 = icmp slt i32 %27, 0, !dbg !5778
  br i1 %35, label %37, label %39, !dbg !5780

36:                                               ; preds = %22
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.43, i32 0, i32 0), i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.13.56, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.45, i32 0, i32 0), i32 noundef 524) #25, !dbg !5781
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.11.54, i32 0, i32 0)) #25, !dbg !5781
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.45, i32 0, i32 0), i32 noundef 524) #25, !dbg !5781
  unreachable, !dbg !5781

37:                                               ; preds = %39, %34
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %23, i32 noundef 0, i32 noundef %30) #26, !dbg !5783
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %23, i32 noundef 0, i32 noundef 0) #26, !dbg !5784
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef nonnull %23, i32 noundef 0, i1 noundef zeroext true) #26, !dbg !5785
  %38 = sub i32 %18, %30, !dbg !5786
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %23, i32 noundef %30, i32 noundef %38) #26, !dbg !5787
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %23, i32 noundef %30, i32 noundef %30) #26, !dbg !5788
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %23, i32 noundef %18, i32 noundef 0) #26, !dbg !5789
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %23, i32 noundef %18, i32 noundef %38) #26, !dbg !5790
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef nonnull %23, i32 noundef %18, i1 noundef zeroext true) #26, !dbg !5791
  tail call fastcc void @free_list_add(%struct.z_heap* noundef nonnull %23, i32 noundef %30) #26, !dbg !5792
  ret void, !dbg !5793

39:                                               ; preds = %34, %39
  %40 = phi i32 [ %42, %39 ], [ 0, %34 ]
  call void @llvm.dbg.value(metadata i32 %40, metadata !5734, metadata !DIExpression()), !dbg !5777
  %41 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %23, i32 0, i32 3, i32 %40, i32 0, !dbg !5794
  store i32 0, i32* %41, align 4, !dbg !5796
  %42 = add nuw i32 %40, 1, !dbg !5797
  call void @llvm.dbg.value(metadata i32 %42, metadata !5734, metadata !DIExpression()), !dbg !5777
  %43 = icmp eq i32 %40, %27, !dbg !5778
  br i1 %43, label %37, label %39, !dbg !5780, !llvm.loop !5798
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_cbvprintf_impl(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef %4) local_unnamed_addr #1 !dbg !5800 {
  %6 = alloca [22 x i8], align 1
  %7 = alloca %struct.anon, align 8
  %8 = extractvalue [1 x i32] %3, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !5813, metadata !DIExpression()), !dbg !5939
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !5810, metadata !DIExpression()), !dbg !5939
  call void @llvm.dbg.value(metadata i8* %1, metadata !5811, metadata !DIExpression()), !dbg !5939
  call void @llvm.dbg.value(metadata i8* %2, metadata !5812, metadata !DIExpression()), !dbg !5939
  call void @llvm.dbg.value(metadata i32 %4, metadata !5814, metadata !DIExpression()), !dbg !5939
  %10 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 0, !dbg !5940
  call void @llvm.lifetime.start.p0i8(i64 22, i8* nonnull %10) #24, !dbg !5940
  call void @llvm.dbg.declare(metadata [22 x i8]* %6, metadata !5815, metadata !DIExpression()), !dbg !5941
  call void @llvm.dbg.value(metadata i32 0, metadata !5819, metadata !DIExpression()), !dbg !5939
  call void @llvm.dbg.value(metadata i1 undef, metadata !5821, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5939
  %11 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  %12 = bitcast %struct.anon* %7 to i8*
  %13 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1
  %14 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 22
  %15 = bitcast %struct.conversion* %13 to i24*
  %16 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 2, i32 0
  %17 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 3, i32 0
  %18 = bitcast %struct.anon* %7 to i8**
  %19 = bitcast %struct.anon* %7 to double*
  %20 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 1
  %22 = ptrtoint i8* %14 to i32
  %23 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 1
  br label %24, !dbg !5942

24:                                               ; preds = %363, %5
  %25 = phi i32 [ %364, %363 ], [ 0, %5 ]
  %26 = phi i8* [ %39, %363 ], [ %2, %5 ]
  %27 = phi i8* [ %178, %363 ], [ %9, %5 ]
  br label %28, !dbg !5942

28:                                               ; preds = %24, %32
  %29 = phi i32 [ %37, %32 ], [ %25, %24 ], !dbg !5943
  %30 = phi i8* [ %34, %32 ], [ %26, %24 ]
  call void @llvm.dbg.value(metadata i8* %27, metadata !5813, metadata !DIExpression()), !dbg !5939
  call void @llvm.dbg.value(metadata i8* %30, metadata !5812, metadata !DIExpression()), !dbg !5939
  call void @llvm.dbg.value(metadata i32 %29, metadata !5819, metadata !DIExpression()), !dbg !5939
  %31 = load i8, i8* %30, align 1, !dbg !5944
  switch i8 %31, label %32 [
    i8 0, label %365
    i8 37, label %38
  ], !dbg !5942

32:                                               ; preds = %28
  %33 = zext i8 %31 to i32, !dbg !5944
  %34 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !5945
  call void @llvm.dbg.value(metadata i8* %34, metadata !5812, metadata !DIExpression()), !dbg !5939
  %35 = call i32 %11(i32 noundef %33, i8* noundef %1) #25, !dbg !5945
  call void @llvm.dbg.value(metadata i32 %35, metadata !5823, metadata !DIExpression()), !dbg !5946
  %36 = icmp slt i32 %35, 0, !dbg !5947
  %37 = add i32 %29, 1, !dbg !5945
  call void @llvm.dbg.value(metadata i32 undef, metadata !5819, metadata !DIExpression()), !dbg !5939
  br i1 %36, label %365, label %28, !llvm.loop !5949

38:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #24, !dbg !5951
  call void @llvm.dbg.declare(metadata %struct.anon* %7, metadata !5828, metadata !DIExpression()), !dbg !5952
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 8 dereferenceable(24) %12, i8 0, i32 24, i1 false), !dbg !5952
  call void @llvm.dbg.value(metadata %struct.conversion* %13, metadata !5871, metadata !DIExpression()), !dbg !5953
  call void @llvm.dbg.value(metadata %struct.anon* %7, metadata !5874, metadata !DIExpression()), !dbg !5953
  call void @llvm.dbg.value(metadata i8* %30, metadata !5877, metadata !DIExpression()), !dbg !5953
  call void @llvm.dbg.value(metadata i32 -1, metadata !5878, metadata !DIExpression()), !dbg !5953
  call void @llvm.dbg.value(metadata i32 -1, metadata !5879, metadata !DIExpression()), !dbg !5953
  call void @llvm.dbg.value(metadata i8* null, metadata !5880, metadata !DIExpression()), !dbg !5953
  call void @llvm.dbg.value(metadata i8* %14, metadata !5881, metadata !DIExpression()), !dbg !5953
  call void @llvm.dbg.value(metadata i8 0, metadata !5882, metadata !DIExpression()), !dbg !5953
  %39 = call fastcc i8* @extract_conversion(%struct.conversion* noundef nonnull %13, i8* noundef nonnull %30) #26, !dbg !5954
  call void @llvm.dbg.value(metadata i8* %39, metadata !5812, metadata !DIExpression()), !dbg !5939
  %40 = load i24, i24* %15, align 8, !dbg !5955
  %41 = and i24 %40, 256, !dbg !5955
  %42 = icmp eq i24 %41, 0, !dbg !5955
  br i1 %42, label %51, label %43, !dbg !5957

43:                                               ; preds = %38
  %44 = getelementptr inbounds i8, i8* %27, i32 4, !dbg !5958
  call void @llvm.dbg.value(metadata i8* %44, metadata !5813, metadata !DIExpression()), !dbg !5939
  %45 = bitcast i8* %27 to i32*, !dbg !5958
  %46 = load i32, i32* %45, align 4, !dbg !5958
  call void @llvm.dbg.value(metadata i32 %46, metadata !5878, metadata !DIExpression()), !dbg !5953
  %47 = icmp slt i32 %46, 0, !dbg !5960
  br i1 %47, label %48, label %56, !dbg !5962

48:                                               ; preds = %43
  %49 = or i24 %40, 4, !dbg !5963
  store i24 %49, i24* %15, align 8, !dbg !5963
  %50 = sub nsw i32 0, %46, !dbg !5965
  call void @llvm.dbg.value(metadata i32 %50, metadata !5878, metadata !DIExpression()), !dbg !5953
  br label %56, !dbg !5966

51:                                               ; preds = %38
  %52 = and i24 %40, 128, !dbg !5967
  %53 = icmp eq i24 %52, 0, !dbg !5967
  %54 = load i32, i32* %16, align 4
  %55 = select i1 %53, i32 -1, i32 %54, !dbg !5969
  br label %56, !dbg !5969

56:                                               ; preds = %51, %43, %48
  %57 = phi i24 [ %49, %48 ], [ %40, %43 ], [ %40, %51 ], !dbg !5970
  %58 = phi i32 [ %50, %48 ], [ %46, %43 ], [ %55, %51 ], !dbg !5953
  %59 = phi i8* [ %44, %48 ], [ %44, %43 ], [ %27, %51 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !5813, metadata !DIExpression()), !dbg !5939
  call void @llvm.dbg.value(metadata i32 %58, metadata !5878, metadata !DIExpression()), !dbg !5953
  %60 = and i24 %57, 1024, !dbg !5970
  %61 = icmp eq i24 %60, 0, !dbg !5970
  br i1 %61, label %69, label %62, !dbg !5971

62:                                               ; preds = %56
  %63 = getelementptr inbounds i8, i8* %59, i32 4, !dbg !5972
  call void @llvm.dbg.value(metadata i8* %63, metadata !5813, metadata !DIExpression()), !dbg !5939
  %64 = bitcast i8* %59 to i32*, !dbg !5972
  %65 = load i32, i32* %64, align 4, !dbg !5972
  call void @llvm.dbg.value(metadata i32 %65, metadata !5883, metadata !DIExpression()), !dbg !5973
  %66 = icmp slt i32 %65, 0, !dbg !5974
  br i1 %66, label %67, label %74, !dbg !5976

67:                                               ; preds = %62
  %68 = and i24 %57, -513, !dbg !5977
  store i24 %68, i24* %15, align 8, !dbg !5977
  br label %74, !dbg !5979

69:                                               ; preds = %56
  %70 = and i24 %57, 512, !dbg !5980
  %71 = icmp eq i24 %70, 0, !dbg !5980
  %72 = load i32, i32* %17, align 8
  %73 = select i1 %71, i32 -1, i32 %72, !dbg !5982
  br label %74, !dbg !5982

74:                                               ; preds = %69, %67, %62
  %75 = phi i24 [ %68, %67 ], [ %57, %62 ], [ %57, %69 ], !dbg !5983
  %76 = phi i32 [ -1, %67 ], [ %65, %62 ], [ %73, %69 ], !dbg !5953
  %77 = phi i8* [ %63, %67 ], [ %63, %62 ], [ %59, %69 ], !dbg !5953
  call void @llvm.dbg.value(metadata i8* %77, metadata !5813, metadata !DIExpression()), !dbg !5939
  call void @llvm.dbg.value(metadata i32 %76, metadata !5879, metadata !DIExpression()), !dbg !5953
  store i32 0, i32* %16, align 4, !dbg !5984
  store i32 0, i32* %17, align 8, !dbg !5985
  %78 = lshr i24 %75, 16, !dbg !5983
  call void @llvm.dbg.value(metadata i24 %78, metadata !5886, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_LLVM_convert, 24, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5953
  %79 = lshr i24 %75, 11, !dbg !5986
  %80 = and i24 %79, 15, !dbg !5986
  %81 = zext i24 %80 to i32, !dbg !5986
  call void @llvm.dbg.value(metadata i32 %81, metadata !5887, metadata !DIExpression()), !dbg !5953
  %82 = trunc i24 %78 to i3, !dbg !5987
  switch i3 %82, label %177 [
    i3 1, label %83
    i3 2, label %125
    i3 -4, label %165
    i3 3, label %173
  ], !dbg !5987

83:                                               ; preds = %74
  switch i32 %81, label %84 [
    i32 7, label %110
    i32 6, label %110
    i32 5, label %102
    i32 3, label %89
    i32 4, label %94
  ], !dbg !5988

84:                                               ; preds = %83
  %85 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5991
  call void @llvm.dbg.value(metadata i8* %85, metadata !5813, metadata !DIExpression()), !dbg !5939
  %86 = bitcast i8* %77 to i32*, !dbg !5991
  %87 = load i32, i32* %86, align 4, !dbg !5991
  %88 = sext i32 %87 to i64, !dbg !5991
  store i64 %88, i64* %20, align 8, !dbg !5993
  br label %115, !dbg !5994

89:                                               ; preds = %83
  %90 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5995
  call void @llvm.dbg.value(metadata i8* %90, metadata !5813, metadata !DIExpression()), !dbg !5939
  %91 = bitcast i8* %77 to i32*, !dbg !5995
  %92 = load i32, i32* %91, align 4, !dbg !5995
  %93 = sext i32 %92 to i64, !dbg !5995
  store i64 %93, i64* %20, align 8, !dbg !5998
  br label %115, !dbg !5999

94:                                               ; preds = %83
  %95 = ptrtoint i8* %77 to i32, !dbg !6000
  %96 = add i32 %95, 7, !dbg !6000
  %97 = and i32 %96, -8, !dbg !6000
  %98 = inttoptr i32 %97 to i8*, !dbg !6000
  %99 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !6000
  call void @llvm.dbg.value(metadata i8* %99, metadata !5813, metadata !DIExpression()), !dbg !5939
  %100 = inttoptr i32 %97 to i64*, !dbg !6000
  %101 = load i64, i64* %100, align 8, !dbg !6000
  store i64 %101, i64* %20, align 8, !dbg !6001
  br label %115, !dbg !6002

102:                                              ; preds = %83
  %103 = ptrtoint i8* %77 to i32, !dbg !6003
  %104 = add i32 %103, 7, !dbg !6003
  %105 = and i32 %104, -8, !dbg !6003
  %106 = inttoptr i32 %105 to i8*, !dbg !6003
  %107 = getelementptr inbounds i8, i8* %106, i32 8, !dbg !6003
  call void @llvm.dbg.value(metadata i8* %107, metadata !5813, metadata !DIExpression()), !dbg !5939
  %108 = inttoptr i32 %105 to i64*, !dbg !6003
  %109 = load i64, i64* %108, align 8, !dbg !6003
  store i64 %109, i64* %20, align 8, !dbg !6004
  br label %115, !dbg !6005

110:                                              ; preds = %83, %83
  %111 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !6006
  call void @llvm.dbg.value(metadata i8* %111, metadata !5813, metadata !DIExpression()), !dbg !5939
  %112 = bitcast i8* %77 to i32*, !dbg !6006
  %113 = load i32, i32* %112, align 4, !dbg !6006
  %114 = sext i32 %113 to i64, !dbg !6007
  store i64 %114, i64* %20, align 8, !dbg !6008
  br label %115, !dbg !6009

115:                                              ; preds = %110, %102, %94, %89, %84
  %116 = phi i64 [ %88, %84 ], [ %101, %94 ], [ %93, %89 ], [ %109, %102 ], [ %114, %110 ]
  %117 = phi i8* [ %85, %84 ], [ %99, %94 ], [ %90, %89 ], [ %107, %102 ], [ %111, %110 ], !dbg !6010
  call void @llvm.dbg.value(metadata i8* %117, metadata !5813, metadata !DIExpression()), !dbg !5939
  %118 = trunc i24 %79 to i4, !dbg !6011
  switch i4 %118, label %177 [
    i4 1, label %119
    i4 2, label %122
  ], !dbg !6011

119:                                              ; preds = %115
  %120 = shl i64 %116, 56, !dbg !6012
  %121 = ashr exact i64 %120, 56, !dbg !6012
  store i64 %121, i64* %20, align 8, !dbg !6015
  br label %177, !dbg !6016

122:                                              ; preds = %115
  %123 = shl i64 %116, 48, !dbg !6017
  %124 = ashr exact i64 %123, 48, !dbg !6017
  store i64 %124, i64* %20, align 8, !dbg !6020
  br label %177, !dbg !6021

125:                                              ; preds = %74
  switch i32 %81, label %126 [
    i32 7, label %152
    i32 6, label %152
    i32 5, label %144
    i32 3, label %131
    i32 4, label %136
  ], !dbg !6022

126:                                              ; preds = %125
  %127 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !6025
  call void @llvm.dbg.value(metadata i8* %127, metadata !5813, metadata !DIExpression()), !dbg !5939
  %128 = bitcast i8* %77 to i32*, !dbg !6025
  %129 = load i32, i32* %128, align 4, !dbg !6025
  %130 = zext i32 %129 to i64, !dbg !6025
  store i64 %130, i64* %20, align 8, !dbg !6027
  br label %157, !dbg !6028

131:                                              ; preds = %125
  %132 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !6029
  call void @llvm.dbg.value(metadata i8* %132, metadata !5813, metadata !DIExpression()), !dbg !5939
  call void @llvm.dbg.value(metadata i8* %132, metadata !5813, metadata !DIExpression()), !dbg !5939
  %133 = bitcast i8* %77 to i32*, !dbg !6029
  %134 = load i32, i32* %133, align 4, !dbg !6029
  %135 = zext i32 %134 to i64, !dbg !6029
  store i64 %135, i64* %20, align 8, !dbg !6029
  br label %157

136:                                              ; preds = %125
  %137 = ptrtoint i8* %77 to i32, !dbg !6031
  %138 = add i32 %137, 7, !dbg !6031
  %139 = and i32 %138, -8, !dbg !6031
  %140 = inttoptr i32 %139 to i8*, !dbg !6031
  %141 = getelementptr inbounds i8, i8* %140, i32 8, !dbg !6031
  call void @llvm.dbg.value(metadata i8* %141, metadata !5813, metadata !DIExpression()), !dbg !5939
  %142 = inttoptr i32 %139 to i64*, !dbg !6031
  %143 = load i64, i64* %142, align 8, !dbg !6031
  store i64 %143, i64* %20, align 8, !dbg !6032
  br label %157, !dbg !6033

144:                                              ; preds = %125
  %145 = ptrtoint i8* %77 to i32, !dbg !6034
  %146 = add i32 %145, 7, !dbg !6034
  %147 = and i32 %146, -8, !dbg !6034
  %148 = inttoptr i32 %147 to i8*, !dbg !6034
  %149 = getelementptr inbounds i8, i8* %148, i32 8, !dbg !6034
  call void @llvm.dbg.value(metadata i8* %149, metadata !5813, metadata !DIExpression()), !dbg !5939
  %150 = inttoptr i32 %147 to i64*, !dbg !6034
  %151 = load i64, i64* %150, align 8, !dbg !6034
  store i64 %151, i64* %20, align 8, !dbg !6035
  br label %157, !dbg !6036

152:                                              ; preds = %125, %125
  %153 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !6037
  call void @llvm.dbg.value(metadata i8* %153, metadata !5813, metadata !DIExpression()), !dbg !5939
  %154 = bitcast i8* %77 to i32*, !dbg !6037
  %155 = load i32, i32* %154, align 4, !dbg !6037
  %156 = zext i32 %155 to i64, !dbg !6038
  store i64 %156, i64* %20, align 8, !dbg !6039
  br label %157, !dbg !6040

157:                                              ; preds = %131, %152, %144, %136, %126
  %158 = phi i64 [ %130, %126 ], [ %143, %136 ], [ %151, %144 ], [ %156, %152 ], [ %135, %131 ]
  %159 = phi i8* [ %127, %126 ], [ %141, %136 ], [ %149, %144 ], [ %153, %152 ], [ %132, %131 ], !dbg !6041
  call void @llvm.dbg.value(metadata i8* %159, metadata !5813, metadata !DIExpression()), !dbg !5939
  %160 = trunc i24 %79 to i4, !dbg !6042
  switch i4 %160, label %177 [
    i4 1, label %161
    i4 2, label %163
  ], !dbg !6042

161:                                              ; preds = %157
  %162 = and i64 %158, 255, !dbg !6043
  store i64 %162, i64* %20, align 8, !dbg !6046
  br label %177, !dbg !6047

163:                                              ; preds = %157
  %164 = and i64 %158, 65535, !dbg !6048
  store i64 %164, i64* %20, align 8, !dbg !6051
  br label %177, !dbg !6052

165:                                              ; preds = %74
  %166 = ptrtoint i8* %77 to i32, !dbg !6053
  %167 = add i32 %166, 7, !dbg !6053
  %168 = and i32 %167, -8, !dbg !6053
  %169 = inttoptr i32 %168 to i8*, !dbg !6053
  %170 = getelementptr inbounds i8, i8* %169, i32 8, !dbg !6053
  call void @llvm.dbg.value(metadata i8* %170, metadata !5813, metadata !DIExpression()), !dbg !5939
  call void @llvm.dbg.value(metadata i8* %170, metadata !5813, metadata !DIExpression()), !dbg !5939
  %171 = inttoptr i32 %168 to double*, !dbg !6053
  %172 = load double, double* %171, align 8, !dbg !6053
  store double %172, double* %19, align 8, !dbg !6053
  br label %177

173:                                              ; preds = %74
  %174 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !6057
  call void @llvm.dbg.value(metadata i8* %174, metadata !5813, metadata !DIExpression()), !dbg !5939
  %175 = bitcast i8* %77 to i8**, !dbg !6057
  %176 = load i8*, i8** %175, align 4, !dbg !6057
  store i8* %176, i8** %18, align 8, !dbg !6060
  br label %177, !dbg !6061

177:                                              ; preds = %165, %74, %157, %115, %163, %161, %173, %119, %122
  %178 = phi i8* [ %117, %119 ], [ %117, %122 ], [ %159, %161 ], [ %159, %163 ], [ %174, %173 ], [ %117, %115 ], [ %159, %157 ], [ %77, %74 ], [ %170, %165 ], !dbg !5953
  call void @llvm.dbg.value(metadata i8* %178, metadata !5813, metadata !DIExpression()), !dbg !5939
  %179 = and i24 %75, 3, !dbg !6062
  %180 = icmp eq i24 %179, 0, !dbg !6062
  br i1 %180, label %185, label %181, !dbg !6062

181:                                              ; preds = %177
  %182 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %30, i8* noundef nonnull %39) #26, !dbg !6063
  call void @llvm.dbg.value(metadata i32 %182, metadata !5888, metadata !DIExpression()), !dbg !6064
  %183 = icmp slt i32 %182, 0, !dbg !6065
  %184 = add i32 %182, %29, !dbg !6063
  call void @llvm.dbg.value(metadata i32 undef, metadata !5819, metadata !DIExpression()), !dbg !5939
  br i1 %183, label %361, label %363

185:                                              ; preds = %177
  %186 = load i8, i8* %21, align 1, !dbg !6067
  switch i8 %186, label %363 [
    i8 37, label %187
    i8 115, label %191
    i8 99, label %198
    i8 100, label %201
    i8 105, label %201
    i8 111, label %212
    i8 117, label %212
    i8 120, label %212
    i8 88, label %212
    i8 112, label %230
    i8 110, label %239
  ], !dbg !6068

187:                                              ; preds = %185
  %188 = call i32 %11(i32 noundef 37, i8* noundef %1) #25, !dbg !6069
  call void @llvm.dbg.value(metadata i32 %188, metadata !5892, metadata !DIExpression()), !dbg !6070
  %189 = icmp slt i32 %188, 0, !dbg !6071
  %190 = add i32 %29, 1, !dbg !6069
  call void @llvm.dbg.value(metadata i32 undef, metadata !5819, metadata !DIExpression()), !dbg !5939
  br i1 %189, label %361, label %363

191:                                              ; preds = %185
  %192 = load i8*, i8** %18, align 8, !dbg !6073
  call void @llvm.dbg.value(metadata i8* %192, metadata !5880, metadata !DIExpression()), !dbg !5953
  %193 = icmp sgt i32 %76, -1, !dbg !6074
  br i1 %193, label %194, label %196, !dbg !6076

194:                                              ; preds = %191
  %195 = call i32 @strnlen(i8* noundef %192, i32 noundef %76) #25, !dbg !6077
  call void @llvm.dbg.value(metadata i32 %195, metadata !5895, metadata !DIExpression()), !dbg !6079
  br label %241, !dbg !6080

196:                                              ; preds = %191
  %197 = call i32 @strlen(i8* noundef %192) #25, !dbg !6081
  call void @llvm.dbg.value(metadata i32 %197, metadata !5895, metadata !DIExpression()), !dbg !6079
  br label %241

198:                                              ; preds = %185
  call void @llvm.dbg.value(metadata i8* %10, metadata !5880, metadata !DIExpression()), !dbg !5953
  %199 = load i64, i64* %20, align 8, !dbg !6083
  %200 = trunc i64 %199 to i8, !dbg !6084
  store i8 %200, i8* %10, align 1, !dbg !6085
  call void @llvm.dbg.value(metadata i8* %23, metadata !5881, metadata !DIExpression()), !dbg !5953
  br label %245, !dbg !6086

201:                                              ; preds = %185, %185
  %202 = and i24 %75, 8, !dbg !6087
  %203 = icmp eq i24 %202, 0, !dbg !6087
  %204 = trunc i24 %75 to i8, !dbg !6089
  %205 = shl i8 %204, 1, !dbg !6089
  %206 = and i8 %205, 32, !dbg !6089
  %207 = select i1 %203, i8 %206, i8 43, !dbg !6089
  call void @llvm.dbg.value(metadata i8 %207, metadata !5882, metadata !DIExpression()), !dbg !5953
  %208 = load i64, i64* %20, align 8, !dbg !6090
  call void @llvm.dbg.value(metadata i64 %208, metadata !5820, metadata !DIExpression()), !dbg !5939
  %209 = icmp slt i64 %208, 0, !dbg !6091
  br i1 %209, label %210, label %212, !dbg !6093

210:                                              ; preds = %201
  call void @llvm.dbg.value(metadata i8 45, metadata !5882, metadata !DIExpression()), !dbg !5953
  %211 = sub nsw i64 0, %208, !dbg !6094
  store i64 %211, i64* %20, align 8, !dbg !6096
  br label %212, !dbg !6097

212:                                              ; preds = %201, %210, %185, %185, %185, %185
  %213 = phi i8 [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 45, %210 ], [ %207, %201 ], !dbg !5953
  call void @llvm.dbg.value(metadata i8 %213, metadata !5882, metadata !DIExpression()), !dbg !5953
  %214 = load i64, i64* %20, align 8, !dbg !6098
  %215 = call fastcc i8* @encode_uint(i64 noundef %214, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #26, !dbg !6099
  call void @llvm.dbg.value(metadata i8* %215, metadata !5880, metadata !DIExpression()), !dbg !5953
  br label %216, !dbg !6100

216:                                              ; preds = %233, %212
  %217 = phi i8 [ 0, %233 ], [ %213, %212 ], !dbg !6101
  %218 = phi i8* [ %236, %233 ], [ %215, %212 ], !dbg !6102
  call void @llvm.dbg.value(metadata i8* %218, metadata !5880, metadata !DIExpression()), !dbg !5953
  call void @llvm.dbg.value(metadata i8 %217, metadata !5882, metadata !DIExpression()), !dbg !5953
  call void @llvm.dbg.label(metadata !5938), !dbg !6103
  %219 = icmp sgt i32 %76, -1, !dbg !6104
  br i1 %219, label %222, label %220, !dbg !6105

220:                                              ; preds = %216
  %221 = load i24, i24* %15, align 8, !dbg !6106
  br label %245, !dbg !6105

222:                                              ; preds = %216
  %223 = ptrtoint i8* %218 to i32, !dbg !6108
  %224 = sub i32 %22, %223, !dbg !6108
  call void @llvm.dbg.value(metadata i32 %224, metadata !5897, metadata !DIExpression()), !dbg !6109
  %225 = load i24, i24* %15, align 8, !dbg !6110
  %226 = and i24 %225, -65, !dbg !6110
  store i24 %226, i24* %15, align 8, !dbg !6110
  %227 = icmp ugt i32 %76, %224, !dbg !6111
  br i1 %227, label %228, label %245, !dbg !6113

228:                                              ; preds = %222
  %229 = sub nsw i32 %76, %224, !dbg !6114
  store i32 %229, i32* %16, align 4, !dbg !6116
  br label %245, !dbg !6117

230:                                              ; preds = %185
  %231 = load i8*, i8** %18, align 8, !dbg !6118
  %232 = icmp eq i8* %231, null, !dbg !6120
  br i1 %232, label %245, label %233, !dbg !6121

233:                                              ; preds = %230
  %234 = ptrtoint i8* %231 to i32, !dbg !6122
  %235 = zext i32 %234 to i64, !dbg !6122
  %236 = call fastcc i8* @encode_uint(i64 noundef %235, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #26, !dbg !6124
  call void @llvm.dbg.value(metadata i8* %236, metadata !5880, metadata !DIExpression()), !dbg !5953
  %237 = load i24, i24* %15, align 8, !dbg !6125
  %238 = or i24 %237, 1048576, !dbg !6125
  store i24 %238, i24* %15, align 8, !dbg !6125
  store i8 120, i8* %21, align 1, !dbg !6126
  br label %216, !dbg !6127

239:                                              ; preds = %185
  %240 = load i8*, i8** %18, align 8, !dbg !6128
  call fastcc void @store_count(%struct.conversion* noundef nonnull %13, i8* noundef %240, i32 noundef %29) #26, !dbg !6131
  br label %363, !dbg !6132

241:                                              ; preds = %194, %196
  %242 = phi i32 [ %195, %194 ], [ %197, %196 ], !dbg !6133
  call void @llvm.dbg.value(metadata i32 %242, metadata !5895, metadata !DIExpression()), !dbg !6079
  %243 = getelementptr inbounds i8, i8* %192, i32 %242, !dbg !6134
  call void @llvm.dbg.value(metadata i32 -1, metadata !5879, metadata !DIExpression()), !dbg !5953
  call void @llvm.dbg.value(metadata i32 %29, metadata !5819, metadata !DIExpression()), !dbg !5939
  call void @llvm.dbg.value(metadata i8* %192, metadata !5880, metadata !DIExpression()), !dbg !5953
  call void @llvm.dbg.value(metadata i8* %243, metadata !5881, metadata !DIExpression()), !dbg !5953
  call void @llvm.dbg.value(metadata i8 0, metadata !5882, metadata !DIExpression()), !dbg !5953
  %244 = icmp eq i8* %192, null, !dbg !6135
  br i1 %244, label %363, label %245, !dbg !6137, !llvm.loop !5949

245:                                              ; preds = %220, %230, %222, %228, %198, %241
  %246 = phi i24 [ %75, %241 ], [ %75, %230 ], [ %226, %222 ], [ %226, %228 ], [ %75, %198 ], [ %221, %220 ], !dbg !6106
  %247 = phi i8* [ %192, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.59, i32 0, i32 0), %230 ], [ %218, %222 ], [ %218, %228 ], [ %10, %198 ], [ %218, %220 ]
  %248 = phi i8* [ %243, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.59, i32 0, i32 5), %230 ], [ %14, %222 ], [ %14, %228 ], [ %23, %198 ], [ %14, %220 ]
  %249 = phi i8 [ 0, %241 ], [ 0, %230 ], [ %217, %222 ], [ %217, %228 ], [ 0, %198 ], [ %217, %220 ]
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i8* %247), metadata !5900, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5953
  call void @llvm.dbg.value(metadata i32 0, metadata !5901, metadata !DIExpression()), !dbg !5953
  %250 = zext i8 %249 to i32, !dbg !6138
  %251 = icmp eq i8 %249, 0, !dbg !6140
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i8* %247), metadata !5900, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5953
  call void @llvm.dbg.value(metadata i32 undef, metadata !5900, metadata !DIExpression()), !dbg !5953
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 undef), metadata !5900, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !5953
  call void @llvm.dbg.value(metadata i32 undef, metadata !5900, metadata !DIExpression()), !dbg !5953
  %252 = icmp sgt i32 %58, 0, !dbg !6141
  br i1 %252, label %253, label %302, !dbg !6142

253:                                              ; preds = %245
  %254 = and i24 %246, 1048576, !dbg !6106
  %255 = icmp eq i24 %254, 0, !dbg !6106
  %256 = ptrtoint i8* %248 to i32, !dbg !6143
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i8* %247), metadata !5900, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5953
  %257 = ptrtoint i8* %247 to i32, !dbg !6143
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i32 %257), metadata !5900, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5953
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i32 %257), metadata !5900, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5953
  %258 = xor i1 %251, true, !dbg !6144
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !5900, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5953
  %259 = sext i1 %258 to i32, !dbg !6144
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !5900, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5953
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %258, i32 %257), metadata !5900, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5953
  %260 = lshr i24 %246, 19, !dbg !6145
  %261 = and i24 %260, 1, !dbg !6145
  %262 = select i1 %255, i24 %261, i24 2, !dbg !6145
  %263 = zext i24 %262 to i32, !dbg !6145
  %264 = add i32 %257, %259, !dbg !6145
  %265 = add i32 %256, %263, !dbg !6145
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i32 undef, i32 %263, i1 %258, i32 %257), metadata !5900, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 4, DW_OP_minus, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !5953
  %266 = and i24 %246, 4194304, !dbg !6146
  %267 = icmp eq i24 %266, 0, !dbg !6146
  %268 = load i32, i32* %16, align 4, !dbg !6148
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 %268), metadata !5900, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !5953
  call void @llvm.dbg.value(metadata i32 undef, metadata !5900, metadata !DIExpression()), !dbg !5953
  %269 = load i32, i32* %17, align 8, !dbg !6149
  %270 = select i1 %267, i32 0, i32 %269, !dbg !6149
  call void @llvm.dbg.value(metadata i32 undef, metadata !5900, metadata !DIExpression()), !dbg !5953
  %271 = add i32 %264, %58, !dbg !6149
  %272 = add i32 %265, %268, !dbg !6149
  %273 = add i32 %272, %270, !dbg !6150
  %274 = sub i32 %271, %273, !dbg !6150
  call void @llvm.dbg.value(metadata i32 %274, metadata !5878, metadata !DIExpression()), !dbg !5953
  %275 = and i24 %246, 4, !dbg !6151
  %276 = icmp eq i24 %275, 0, !dbg !6151
  br i1 %276, label %277, label %302, !dbg !6152

277:                                              ; preds = %253
  call void @llvm.dbg.value(metadata i8 32, metadata !5902, metadata !DIExpression()), !dbg !6153
  %278 = and i24 %246, 64, !dbg !6154
  %279 = icmp eq i24 %278, 0, !dbg !6154
  %280 = select i1 %279, i1 true, i1 %251, !dbg !6155
  %281 = select i1 %279, i8 %249, i8 0, !dbg !6155
  %282 = select i1 %279, i32 32, i32 48, !dbg !6155
  br i1 %280, label %287, label %283, !dbg !6155

283:                                              ; preds = %277
  %284 = call i32 %11(i32 noundef %250, i8* noundef %1) #25, !dbg !6156
  call void @llvm.dbg.value(metadata i32 %284, metadata !5907, metadata !DIExpression()), !dbg !6157
  %285 = icmp slt i32 %284, 0, !dbg !6158
  %286 = add i32 %29, 1, !dbg !6156
  call void @llvm.dbg.value(metadata i32 undef, metadata !5819, metadata !DIExpression()), !dbg !5939
  br i1 %285, label %361, label %287

287:                                              ; preds = %277, %283
  %288 = phi i8 [ %281, %277 ], [ 0, %283 ], !dbg !5953
  %289 = phi i32 [ %282, %277 ], [ 48, %283 ]
  %290 = phi i32 [ %29, %277 ], [ %286, %283 ], !dbg !5943
  call void @llvm.dbg.value(metadata i32 %290, metadata !5819, metadata !DIExpression()), !dbg !5939
  call void @llvm.dbg.value(metadata i8 undef, metadata !5902, metadata !DIExpression()), !dbg !6153
  call void @llvm.dbg.value(metadata i8 %288, metadata !5882, metadata !DIExpression()), !dbg !5953
  %291 = call i32 @llvm.smin.i32(i32 %274, i32 0), !dbg !6160
  %292 = add i32 %291, -1, !dbg !6160
  br label %293, !dbg !6160

293:                                              ; preds = %297, %287
  %294 = phi i32 [ %274, %287 ], [ %298, %297 ], !dbg !6161
  %295 = phi i32 [ %290, %287 ], [ %301, %297 ], !dbg !5943
  call void @llvm.dbg.value(metadata i32 %295, metadata !5819, metadata !DIExpression()), !dbg !5939
  call void @llvm.dbg.value(metadata i32 %294, metadata !5878, metadata !DIExpression()), !dbg !5953
  call void @llvm.dbg.value(metadata i32 %294, metadata !5878, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5953
  %296 = icmp sgt i32 %294, 0, !dbg !6162
  br i1 %296, label %297, label %302, !dbg !6160

297:                                              ; preds = %293
  %298 = add nsw i32 %294, -1, !dbg !6163
  call void @llvm.dbg.value(metadata i32 %298, metadata !5878, metadata !DIExpression()), !dbg !5953
  %299 = call i32 %11(i32 noundef %289, i8* noundef %1) #25, !dbg !6164
  call void @llvm.dbg.value(metadata i32 %299, metadata !5913, metadata !DIExpression()), !dbg !6165
  %300 = icmp slt i32 %299, 0, !dbg !6166
  %301 = add i32 %295, 1, !dbg !6164
  call void @llvm.dbg.value(metadata i32 undef, metadata !5819, metadata !DIExpression()), !dbg !5939
  br i1 %300, label %361, label %293, !llvm.loop !6168

302:                                              ; preds = %293, %253, %245
  %303 = phi i8 [ %249, %253 ], [ %249, %245 ], [ %288, %293 ], !dbg !5953
  %304 = phi i32 [ %274, %253 ], [ %58, %245 ], [ %292, %293 ], !dbg !5953
  %305 = phi i32 [ %29, %253 ], [ %29, %245 ], [ %295, %293 ], !dbg !5943
  call void @llvm.dbg.value(metadata i32 %305, metadata !5819, metadata !DIExpression()), !dbg !5939
  call void @llvm.dbg.value(metadata i32 %304, metadata !5878, metadata !DIExpression()), !dbg !5953
  call void @llvm.dbg.value(metadata i8 %303, metadata !5882, metadata !DIExpression()), !dbg !5953
  %306 = icmp eq i8 %303, 0, !dbg !6170
  br i1 %306, label %312, label %307, !dbg !6171

307:                                              ; preds = %302
  %308 = zext i8 %303 to i32, !dbg !6172
  %309 = call i32 %11(i32 noundef %308, i8* noundef %1) #25, !dbg !6173
  call void @llvm.dbg.value(metadata i32 %309, metadata !5916, metadata !DIExpression()), !dbg !6174
  %310 = icmp slt i32 %309, 0, !dbg !6175
  %311 = add i32 %305, 1, !dbg !6173
  call void @llvm.dbg.value(metadata i32 undef, metadata !5819, metadata !DIExpression()), !dbg !5939
  br i1 %310, label %361, label %312

312:                                              ; preds = %307, %302
  %313 = phi i32 [ %311, %307 ], [ %305, %302 ], !dbg !5943
  call void @llvm.dbg.value(metadata i32 %313, metadata !5819, metadata !DIExpression()), !dbg !5939
  %314 = lshr i24 %246, 20, !dbg !6177
  %315 = lshr i24 %246, 19, !dbg !6178
  %316 = or i24 %314, %315, !dbg !6179
  %317 = and i24 %316, 1, !dbg !6179
  %318 = icmp eq i24 %317, 0, !dbg !6179
  br i1 %318, label %323, label %319, !dbg !6180

319:                                              ; preds = %312
  %320 = call i32 %11(i32 noundef 48, i8* noundef %1) #25, !dbg !6181
  call void @llvm.dbg.value(metadata i32 %320, metadata !5920, metadata !DIExpression()), !dbg !6182
  %321 = icmp slt i32 %320, 0, !dbg !6183
  %322 = add i32 %313, 1, !dbg !6181
  call void @llvm.dbg.value(metadata i32 undef, metadata !5819, metadata !DIExpression()), !dbg !5939
  br i1 %321, label %361, label %323

323:                                              ; preds = %319, %312
  %324 = phi i32 [ %322, %319 ], [ %313, %312 ], !dbg !5943
  call void @llvm.dbg.value(metadata i32 %324, metadata !5819, metadata !DIExpression()), !dbg !5939
  %325 = and i24 %246, 1048576, !dbg !6185
  %326 = icmp eq i24 %325, 0, !dbg !6185
  br i1 %326, label %333, label %327, !dbg !6186

327:                                              ; preds = %323
  %328 = load i8, i8* %21, align 1, !dbg !6187
  %329 = zext i8 %328 to i32, !dbg !6187
  %330 = call i32 %11(i32 noundef %329, i8* noundef %1) #25, !dbg !6187
  call void @llvm.dbg.value(metadata i32 %330, metadata !5926, metadata !DIExpression()), !dbg !6188
  %331 = icmp slt i32 %330, 0, !dbg !6189
  %332 = add i32 %324, 1, !dbg !6187
  call void @llvm.dbg.value(metadata i32 undef, metadata !5819, metadata !DIExpression()), !dbg !5939
  br i1 %331, label %361, label %333

333:                                              ; preds = %327, %323
  %334 = phi i32 [ %332, %327 ], [ %324, %323 ], !dbg !5943
  call void @llvm.dbg.value(metadata i32 %334, metadata !5819, metadata !DIExpression()), !dbg !5939
  %335 = load i32, i32* %16, align 4, !dbg !6191
  call void @llvm.dbg.value(metadata i32 %335, metadata !5901, metadata !DIExpression()), !dbg !5953
  br label %336, !dbg !6192

336:                                              ; preds = %340, %333
  %337 = phi i32 [ %335, %333 ], [ %341, %340 ], !dbg !6193
  %338 = phi i32 [ %334, %333 ], [ %344, %340 ], !dbg !5943
  call void @llvm.dbg.value(metadata i32 %338, metadata !5819, metadata !DIExpression()), !dbg !5939
  call void @llvm.dbg.value(metadata i32 %337, metadata !5901, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5953
  %339 = icmp sgt i32 %337, 0, !dbg !6194
  br i1 %339, label %340, label %345, !dbg !6192

340:                                              ; preds = %336
  %341 = add nsw i32 %337, -1, !dbg !6195
  call void @llvm.dbg.value(metadata i32 %341, metadata !5901, metadata !DIExpression()), !dbg !5953
  %342 = call i32 %11(i32 noundef 48, i8* noundef %1) #25, !dbg !6196
  call void @llvm.dbg.value(metadata i32 %342, metadata !5930, metadata !DIExpression()), !dbg !6197
  %343 = icmp slt i32 %342, 0, !dbg !6198
  %344 = add i32 %338, 1, !dbg !6196
  call void @llvm.dbg.value(metadata i32 undef, metadata !5819, metadata !DIExpression()), !dbg !5939
  br i1 %343, label %361, label %336, !llvm.loop !6200

345:                                              ; preds = %336
  %346 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %247, i8* noundef %248) #26, !dbg !6202
  call void @llvm.dbg.value(metadata i32 %346, metadata !5933, metadata !DIExpression()), !dbg !6203
  %347 = icmp slt i32 %346, 0, !dbg !6204
  call void @llvm.dbg.value(metadata i32 undef, metadata !5819, metadata !DIExpression()), !dbg !5939
  br i1 %347, label %361, label %348

348:                                              ; preds = %345
  %349 = add i32 %346, %338, !dbg !6202
  call void @llvm.dbg.value(metadata i32 %349, metadata !5819, metadata !DIExpression()), !dbg !5939
  call void @llvm.dbg.value(metadata i32 %304, metadata !5878, metadata !DIExpression()), !dbg !5953
  %350 = icmp sgt i32 %304, 0, !dbg !6206
  br i1 %350, label %351, label %363, !dbg !6207

351:                                              ; preds = %348
  %352 = add nuw i32 %346, %304, !dbg !6207
  %353 = add i32 %352, %338, !dbg !6207
  br label %354, !dbg !6207

354:                                              ; preds = %351, %358
  %355 = phi i32 [ %359, %358 ], [ %304, %351 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !5819, metadata !DIExpression()), !dbg !5939
  call void @llvm.dbg.value(metadata i32 %355, metadata !5878, metadata !DIExpression()), !dbg !5953
  %356 = call i32 %11(i32 noundef 32, i8* noundef %1) #25, !dbg !6208
  call void @llvm.dbg.value(metadata i32 %356, metadata !5935, metadata !DIExpression()), !dbg !6209
  %357 = icmp slt i32 %356, 0, !dbg !6210
  br i1 %357, label %361, label %358

358:                                              ; preds = %354
  %359 = add nsw i32 %355, -1, !dbg !6212
  call void @llvm.dbg.value(metadata i32 undef, metadata !5819, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5939
  call void @llvm.dbg.value(metadata i32 %359, metadata !5878, metadata !DIExpression()), !dbg !5953
  %360 = icmp sgt i32 %355, 1, !dbg !6206
  br i1 %360, label %354, label %363, !dbg !6207, !llvm.loop !6213

361:                                              ; preds = %345, %327, %319, %307, %187, %283, %181, %297, %340, %354
  %362 = phi i32 [ %356, %354 ], [ %342, %340 ], [ %299, %297 ], [ %188, %187 ], [ %309, %307 ], [ %320, %319 ], [ %330, %327 ], [ %346, %345 ], [ %284, %283 ], [ %182, %181 ]
  call void @llvm.dbg.value(metadata i32 %364, metadata !5819, metadata !DIExpression()), !dbg !5939
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #24, !dbg !5950
  br label %365

363:                                              ; preds = %358, %348, %187, %239, %185, %181, %241
  %364 = phi i32 [ %29, %241 ], [ %184, %181 ], [ %190, %187 ], [ %29, %239 ], [ %29, %185 ], [ %349, %348 ], [ %353, %358 ], !dbg !5943
  call void @llvm.dbg.value(metadata i32 %364, metadata !5819, metadata !DIExpression()), !dbg !5939
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #24, !dbg !5950
  br label %24

365:                                              ; preds = %28, %32, %361
  %366 = phi i32 [ %362, %361 ], [ %29, %28 ], [ %35, %32 ], !dbg !5939
  call void @llvm.lifetime.end.p0i8(i64 22, i8* nonnull %10) #24, !dbg !6215
  ret i32 %366, !dbg !6215
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #16

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @extract_conversion(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #17 !dbg !6216 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6220, metadata !DIExpression()), !dbg !6222
  call void @llvm.dbg.value(metadata i8* %1, metadata !6221, metadata !DIExpression()), !dbg !6222
  %3 = bitcast %struct.conversion* %0 to i24*, !dbg !6223
  store i24 0, i24* %3, align 4, !dbg !6223
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !6223
  store i8 0, i8* %4, align 1, !dbg !6223
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !6223
  store i32 0, i32* %5, align 4, !dbg !6223
  %6 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !6223
  store i32 0, i32* %6, align 4, !dbg !6223
  %7 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6224
  call void @llvm.dbg.value(metadata i8* %7, metadata !6221, metadata !DIExpression()), !dbg !6222
  %8 = load i8, i8* %7, align 1, !dbg !6225
  %9 = icmp eq i8 %8, 37, !dbg !6227
  br i1 %9, label %10, label %12, !dbg !6228

10:                                               ; preds = %2
  %11 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !6229
  call void @llvm.dbg.value(metadata i8* %11, metadata !6221, metadata !DIExpression()), !dbg !6222
  store i8 37, i8* %4, align 1, !dbg !6231
  br label %18, !dbg !6232

12:                                               ; preds = %2
  %13 = tail call fastcc i8* @extract_flags(%struct.conversion* noundef nonnull %0, i8* noundef nonnull %7) #26, !dbg !6233
  call void @llvm.dbg.value(metadata i8* %13, metadata !6221, metadata !DIExpression()), !dbg !6222
  %14 = tail call fastcc i8* @extract_width(%struct.conversion* noundef nonnull %0, i8* noundef %13) #26, !dbg !6234
  call void @llvm.dbg.value(metadata i8* %14, metadata !6221, metadata !DIExpression()), !dbg !6222
  %15 = tail call fastcc i8* @extract_prec(%struct.conversion* noundef nonnull %0, i8* noundef %14) #26, !dbg !6235
  call void @llvm.dbg.value(metadata i8* %15, metadata !6221, metadata !DIExpression()), !dbg !6222
  %16 = tail call fastcc i8* @extract_length(%struct.conversion* noundef nonnull %0, i8* noundef %15) #26, !dbg !6236
  call void @llvm.dbg.value(metadata i8* %16, metadata !6221, metadata !DIExpression()), !dbg !6222
  %17 = tail call fastcc i8* @extract_specifier(%struct.conversion* noundef nonnull %0, i8* noundef %16) #26, !dbg !6237
  call void @llvm.dbg.value(metadata i8* %17, metadata !6221, metadata !DIExpression()), !dbg !6222
  br label %18, !dbg !6238

18:                                               ; preds = %12, %10
  %19 = phi i8* [ %11, %10 ], [ %17, %12 ], !dbg !6222
  ret i8* %19, !dbg !6239
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @outs(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef readonly %2, i8* noundef readnone %3) unnamed_addr #1 !dbg !6240 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !6244, metadata !DIExpression()), !dbg !6251
  call void @llvm.dbg.value(metadata i8* %1, metadata !6245, metadata !DIExpression()), !dbg !6251
  call void @llvm.dbg.value(metadata i8* %2, metadata !6246, metadata !DIExpression()), !dbg !6251
  call void @llvm.dbg.value(metadata i8* %3, metadata !6247, metadata !DIExpression()), !dbg !6251
  call void @llvm.dbg.value(metadata i32 0, metadata !6248, metadata !DIExpression()), !dbg !6251
  %5 = icmp eq i8* %3, null
  %6 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  br label %7, !dbg !6252

7:                                                ; preds = %17, %4
  %8 = phi i8* [ %2, %4 ], [ %19, %17 ]
  %9 = phi i32 [ 0, %4 ], [ %23, %17 ], !dbg !6253
  call void @llvm.dbg.value(metadata i32 %9, metadata !6248, metadata !DIExpression()), !dbg !6251
  call void @llvm.dbg.value(metadata i8* %8, metadata !6246, metadata !DIExpression()), !dbg !6251
  %10 = icmp ult i8* %8, %3, !dbg !6254
  br i1 %10, label %11, label %13, !dbg !6255

11:                                               ; preds = %7
  %12 = load i8, i8* %8, align 1, !dbg !6256
  br label %17, !dbg !6255

13:                                               ; preds = %7
  br i1 %5, label %14, label %24, !dbg !6257

14:                                               ; preds = %13
  %15 = load i8, i8* %8, align 1, !dbg !6258
  %16 = icmp eq i8 %15, 0, !dbg !6257
  br i1 %16, label %24, label %17, !dbg !6252

17:                                               ; preds = %11, %14
  %18 = phi i8 [ %12, %11 ], [ %15, %14 ], !dbg !6256
  %19 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !6259
  call void @llvm.dbg.value(metadata i8* %19, metadata !6246, metadata !DIExpression()), !dbg !6251
  %20 = zext i8 %18 to i32, !dbg !6260
  %21 = tail call i32 %6(i32 noundef %20, i8* noundef %1) #25, !dbg !6261
  call void @llvm.dbg.value(metadata i32 %21, metadata !6249, metadata !DIExpression()), !dbg !6262
  %22 = icmp slt i32 %21, 0, !dbg !6263
  %23 = add i32 %9, 1, !dbg !6265
  call void @llvm.dbg.value(metadata i32 undef, metadata !6248, metadata !DIExpression()), !dbg !6251
  br i1 %22, label %24, label %7, !llvm.loop !6266

24:                                               ; preds = %14, %13, %17
  %25 = phi i32 [ %21, %17 ], [ %9, %13 ], [ %9, %14 ], !dbg !6251
  ret i32 %25, !dbg !6268
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @encode_uint(i64 noundef %0, %struct.conversion* nocapture noundef %1, i8* noundef %2, i8* noundef %3) unnamed_addr #17 !dbg !6269 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !6273, metadata !DIExpression()), !dbg !6283
  call void @llvm.dbg.value(metadata %struct.conversion* %1, metadata !6274, metadata !DIExpression()), !dbg !6283
  call void @llvm.dbg.value(metadata i8* %2, metadata !6275, metadata !DIExpression()), !dbg !6283
  call void @llvm.dbg.value(metadata i8* %3, metadata !6276, metadata !DIExpression()), !dbg !6283
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %1, i32 0, i32 1, !dbg !6284
  %6 = load i8, i8* %5, align 1, !dbg !6284
  %7 = zext i8 %6 to i32, !dbg !6285
  %8 = tail call fastcc i32 @isupper(i32 noundef %7) #26, !dbg !6286
  %9 = icmp eq i32 %8, 0, !dbg !6286
  call void @llvm.dbg.value(metadata i1 %9, metadata !6277, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6283
  %10 = tail call fastcc i32 @conversion_radix(i8 noundef zeroext %6) #26, !dbg !6287
  call void @llvm.dbg.value(metadata i32 %10, metadata !6278, metadata !DIExpression()), !dbg !6283
  %11 = ptrtoint i8* %3 to i32, !dbg !6288
  %12 = ptrtoint i8* %2 to i32, !dbg !6288
  %13 = sub i32 %11, %12, !dbg !6288
  %14 = getelementptr inbounds i8, i8* %2, i32 %13, !dbg !6289
  call void @llvm.dbg.value(metadata i8* %14, metadata !6280, metadata !DIExpression()), !dbg !6283
  %15 = zext i32 %10 to i64
  %16 = select i1 %9, i32 87, i32 55
  br label %17, !dbg !6290

17:                                               ; preds = %17, %4
  %18 = phi i8* [ %14, %4 ], [ %30, %17 ], !dbg !6283
  %19 = phi i64 [ %0, %4 ], [ %22, %17 ]
  call void @llvm.dbg.value(metadata i64 %19, metadata !6273, metadata !DIExpression()), !dbg !6283
  call void @llvm.dbg.value(metadata i8* %18, metadata !6280, metadata !DIExpression()), !dbg !6283
  %20 = freeze i64 %19
  %21 = freeze i64 %15
  %22 = udiv i64 %20, %21, !dbg !6291
  %23 = mul i64 %22, %21
  %24 = sub i64 %20, %23
  %25 = trunc i64 %24 to i32, !dbg !6292
  call void @llvm.dbg.value(metadata i32 %25, metadata !6281, metadata !DIExpression()), !dbg !6293
  %26 = icmp ult i32 %25, 10, !dbg !6294
  %27 = select i1 %26, i32 48, i32 %16, !dbg !6295
  %28 = add i32 %27, %25, !dbg !6293
  %29 = trunc i32 %28 to i8, !dbg !6295
  %30 = getelementptr inbounds i8, i8* %18, i32 -1, !dbg !6296
  call void @llvm.dbg.value(metadata i8* %30, metadata !6280, metadata !DIExpression()), !dbg !6283
  store i8 %29, i8* %30, align 1, !dbg !6297
  call void @llvm.dbg.value(metadata i64 %22, metadata !6273, metadata !DIExpression()), !dbg !6283
  %31 = icmp uge i64 %19, %15, !dbg !6298
  %32 = icmp ugt i8* %30, %2, !dbg !6299
  %33 = and i1 %31, %32, !dbg !6299
  br i1 %33, label %17, label %34, !dbg !6300, !llvm.loop !6301

34:                                               ; preds = %17
  %35 = bitcast %struct.conversion* %1 to i24*, !dbg !6303
  %36 = load i24, i24* %35, align 4, !dbg !6303
  %37 = and i24 %36, 32, !dbg !6303
  %38 = icmp eq i24 %37, 0, !dbg !6303
  br i1 %38, label %44, label %39, !dbg !6305

39:                                               ; preds = %34
  switch i32 %10, label %44 [
    i32 8, label %41
    i32 16, label %40
  ], !dbg !6306

40:                                               ; preds = %39
  br label %41, !dbg !6308

41:                                               ; preds = %39, %40
  %42 = phi i24 [ 1048576, %40 ], [ 524288, %39 ]
  %43 = or i24 %36, %42, !dbg !6312
  store i24 %43, i24* %35, align 4, !dbg !6312
  br label %44, !dbg !6313

44:                                               ; preds = %41, %39, %34
  ret i8* %30, !dbg !6313
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @store_count(%struct.conversion* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) unnamed_addr #14 !dbg !6314 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6320, metadata !DIExpression()), !dbg !6323
  call void @llvm.dbg.value(metadata i8* %1, metadata !6321, metadata !DIExpression()), !dbg !6323
  call void @llvm.dbg.value(metadata i32 %2, metadata !6322, metadata !DIExpression()), !dbg !6323
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !6324
  %5 = load i24, i24* %4, align 4, !dbg !6324
  %6 = lshr i24 %5, 11, !dbg !6324
  %7 = and i24 %6, 15, !dbg !6324
  %8 = zext i24 %7 to i32, !dbg !6324
  switch i32 %8, label %28 [
    i32 0, label %9
    i32 1, label %11
    i32 2, label %13
    i32 3, label %16
    i32 4, label %18
    i32 5, label %21
    i32 6, label %24
    i32 7, label %26
  ], !dbg !6325

9:                                                ; preds = %3
  %10 = bitcast i8* %1 to i32*, !dbg !6326
  store i32 %2, i32* %10, align 4, !dbg !6328
  br label %28, !dbg !6329

11:                                               ; preds = %3
  %12 = trunc i32 %2 to i8, !dbg !6330
  store i8 %12, i8* %1, align 1, !dbg !6331
  br label %28, !dbg !6332

13:                                               ; preds = %3
  %14 = trunc i32 %2 to i16, !dbg !6333
  %15 = bitcast i8* %1 to i16*, !dbg !6334
  store i16 %14, i16* %15, align 2, !dbg !6335
  br label %28, !dbg !6336

16:                                               ; preds = %3
  %17 = bitcast i8* %1 to i32*, !dbg !6337
  store i32 %2, i32* %17, align 4, !dbg !6338
  br label %28, !dbg !6339

18:                                               ; preds = %3
  %19 = sext i32 %2 to i64, !dbg !6340
  %20 = bitcast i8* %1 to i64*, !dbg !6341
  store i64 %19, i64* %20, align 8, !dbg !6342
  br label %28, !dbg !6343

21:                                               ; preds = %3
  %22 = sext i32 %2 to i64, !dbg !6344
  %23 = bitcast i8* %1 to i64*, !dbg !6345
  store i64 %22, i64* %23, align 8, !dbg !6346
  br label %28, !dbg !6347

24:                                               ; preds = %3
  %25 = bitcast i8* %1 to i32*, !dbg !6348
  store i32 %2, i32* %25, align 4, !dbg !6349
  br label %28, !dbg !6350

26:                                               ; preds = %3
  %27 = bitcast i8* %1 to i32*, !dbg !6351
  store i32 %2, i32* %27, align 4, !dbg !6352
  br label %28, !dbg !6353

28:                                               ; preds = %3, %26, %24, %21, %18, %16, %13, %11, %9
  ret void, !dbg !6354
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isupper(i32 noundef %0) unnamed_addr #5 !dbg !6355 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6358, metadata !DIExpression()), !dbg !6359
  %2 = add i32 %0, -65, !dbg !6360
  %3 = icmp ult i32 %2, 26, !dbg !6361
  %4 = zext i1 %3 to i32, !dbg !6361
  ret i32 %4, !dbg !6362
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @conversion_radix(i8 noundef zeroext %0) unnamed_addr #5 !dbg !6363 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !6367, metadata !DIExpression()), !dbg !6368
  switch i8 %0, label %4 [
    i8 88, label %3
    i8 120, label %3
    i8 112, label %3
    i8 111, label %2
  ], !dbg !6369

2:                                                ; preds = %1
  br label %4, !dbg !6370

3:                                                ; preds = %1, %1, %1
  br label %4, !dbg !6372

4:                                                ; preds = %1, %3, %2
  %5 = phi i32 [ 8, %2 ], [ 16, %3 ], [ 10, %1 ], !dbg !6373
  ret i32 %5, !dbg !6374
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_flags(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #17 !dbg !6375 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6377, metadata !DIExpression()), !dbg !6380
  call void @llvm.dbg.value(metadata i8* %1, metadata !6378, metadata !DIExpression()), !dbg !6380
  call void @llvm.dbg.value(metadata i8 1, metadata !6379, metadata !DIExpression()), !dbg !6380
  %3 = bitcast %struct.conversion* %0 to i24*
  br label %4, !dbg !6381

4:                                                ; preds = %11, %2
  %5 = phi i8* [ %1, %2 ], [ %15, %11 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !6379, metadata !DIExpression()), !dbg !6380
  call void @llvm.dbg.value(metadata i8* %5, metadata !6378, metadata !DIExpression()), !dbg !6380
  %6 = load i8, i8* %5, align 1, !dbg !6382
  switch i8 %6, label %16 [
    i8 45, label %11
    i8 43, label %7
    i8 32, label %8
    i8 35, label %9
    i8 48, label %10
  ], !dbg !6384

7:                                                ; preds = %4
  br label %11, !dbg !6385

8:                                                ; preds = %4
  br label %11, !dbg !6387

9:                                                ; preds = %4
  br label %11, !dbg !6388

10:                                               ; preds = %4
  br label %11, !dbg !6389

11:                                               ; preds = %4, %7, %8, %9, %10
  %12 = phi i24 [ 8, %7 ], [ 16, %8 ], [ 32, %9 ], [ 64, %10 ], [ 4, %4 ]
  %13 = load i24, i24* %3, align 4, !dbg !6390
  %14 = or i24 %13, %12, !dbg !6390
  store i24 %14, i24* %3, align 4, !dbg !6390
  call void @llvm.dbg.value(metadata i8 poison, metadata !6379, metadata !DIExpression()), !dbg !6380
  %15 = getelementptr inbounds i8, i8* %5, i32 1
  call void @llvm.dbg.value(metadata i8* %15, metadata !6378, metadata !DIExpression()), !dbg !6380
  br label %4

16:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i8 poison, metadata !6379, metadata !DIExpression()), !dbg !6380
  call void @llvm.dbg.value(metadata i8* %15, metadata !6378, metadata !DIExpression()), !dbg !6380
  %17 = load i24, i24* %3, align 4, !dbg !6391
  %18 = and i24 %17, 68, !dbg !6393
  %19 = icmp eq i24 %18, 68, !dbg !6393
  br i1 %19, label %20, label %22, !dbg !6393

20:                                               ; preds = %16
  %21 = and i24 %17, -65, !dbg !6394
  store i24 %21, i24* %3, align 4, !dbg !6394
  br label %22, !dbg !6396

22:                                               ; preds = %20, %16
  ret i8* %5, !dbg !6397
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_width(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #17 !dbg !6398 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6400, metadata !DIExpression()), !dbg !6404
  call void @llvm.dbg.value(metadata i8* %1, metadata !6401, metadata !DIExpression()), !dbg !6404
  store i8* %1, i8** %3, align 4
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !6405
  %5 = load i24, i24* %4, align 4, !dbg !6406
  %6 = or i24 %5, 128, !dbg !6406
  store i24 %6, i24* %4, align 4, !dbg !6406
  call void @llvm.dbg.value(metadata i8* %1, metadata !6401, metadata !DIExpression()), !dbg !6404
  %7 = load i8, i8* %1, align 1, !dbg !6407
  %8 = icmp eq i8 %7, 42, !dbg !6409
  br i1 %8, label %9, label %12, !dbg !6410

9:                                                ; preds = %2
  %10 = or i24 %5, 384, !dbg !6411
  store i24 %10, i24* %4, align 4, !dbg !6411
  call void @llvm.dbg.value(metadata i8* %1, metadata !6401, metadata !DIExpression()), !dbg !6404
  %11 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6413
  call void @llvm.dbg.value(metadata i8* %11, metadata !6401, metadata !DIExpression()), !dbg !6404
  store i8* %11, i8** %3, align 4, !dbg !6413
  br label %29, !dbg !6414

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !6402, metadata !DIExpression()), !dbg !6404
  call void @llvm.dbg.value(metadata i8** %3, metadata !6401, metadata !DIExpression(DW_OP_deref)), !dbg !6404
  %13 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #26, !dbg !6415
  call void @llvm.dbg.value(metadata i32 %13, metadata !6403, metadata !DIExpression()), !dbg !6404
  %14 = load i8*, i8** %3, align 4, !dbg !6416
  call void @llvm.dbg.value(metadata i8* %14, metadata !6401, metadata !DIExpression()), !dbg !6404
  %15 = icmp eq i8* %14, %1, !dbg !6418
  br i1 %15, label %29, label %16, !dbg !6419

16:                                               ; preds = %12
  %17 = load i24, i24* %4, align 4, !dbg !6420
  %18 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !6422
  store i32 %13, i32* %18, align 4, !dbg !6423
  %19 = lshr i32 %13, 31, !dbg !6424
  %20 = lshr i24 %17, 1, !dbg !6425
  %21 = and i24 %20, 1, !dbg !6425
  %22 = zext i24 %21 to i32, !dbg !6425
  %23 = or i32 %19, %22, !dbg !6425
  %24 = trunc i32 %23 to i24, !dbg !6425
  %25 = shl nuw nsw i24 %24, 1, !dbg !6425
  %26 = and i24 %17, -131, !dbg !6425
  %27 = or i24 %26, 128, !dbg !6425
  %28 = or i24 %25, %27, !dbg !6425
  store i24 %28, i24* %4, align 4, !dbg !6425
  br label %29, !dbg !6426

29:                                               ; preds = %12, %16, %9
  %30 = phi i8* [ %11, %9 ], [ %14, %16 ], [ %1, %12 ], !dbg !6404
  ret i8* %30, !dbg !6427
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_prec(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #17 !dbg !6428 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6430, metadata !DIExpression()), !dbg !6433
  call void @llvm.dbg.value(metadata i8* %1, metadata !6431, metadata !DIExpression()), !dbg !6433
  %4 = load i8, i8* %1, align 1, !dbg !6434
  %5 = icmp eq i8 %4, 46, !dbg !6435
  %6 = bitcast %struct.conversion* %0 to i24*, !dbg !6436
  %7 = load i24, i24* %6, align 4, !dbg !6437
  %8 = select i1 %5, i24 512, i24 0, !dbg !6437
  %9 = and i24 %7, -513, !dbg !6437
  %10 = or i24 %9, %8, !dbg !6437
  store i24 %10, i24* %6, align 4, !dbg !6437
  br i1 %5, label %11, label %32, !dbg !6438

11:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !6431, metadata !DIExpression()), !dbg !6433
  %12 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6439
  call void @llvm.dbg.value(metadata i8* %12, metadata !6431, metadata !DIExpression()), !dbg !6433
  store i8* %12, i8** %3, align 4, !dbg !6439
  %13 = load i8, i8* %12, align 1, !dbg !6440
  %14 = icmp eq i8 %13, 42, !dbg !6442
  br i1 %14, label %15, label %18, !dbg !6443

15:                                               ; preds = %11
  %16 = or i24 %10, 1024, !dbg !6444
  store i24 %16, i24* %6, align 4, !dbg !6444
  call void @llvm.dbg.value(metadata i8* %12, metadata !6431, metadata !DIExpression()), !dbg !6433
  %17 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !6446
  call void @llvm.dbg.value(metadata i8* %17, metadata !6431, metadata !DIExpression()), !dbg !6433
  store i8* %17, i8** %3, align 4, !dbg !6446
  br label %32, !dbg !6447

18:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8** %3, metadata !6431, metadata !DIExpression(DW_OP_deref)), !dbg !6433
  %19 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #26, !dbg !6448
  call void @llvm.dbg.value(metadata i32 %19, metadata !6432, metadata !DIExpression()), !dbg !6433
  %20 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !6449
  store i32 %19, i32* %20, align 4, !dbg !6450
  %21 = lshr i32 %19, 31, !dbg !6451
  %22 = load i24, i24* %6, align 4, !dbg !6452
  %23 = lshr i24 %22, 1, !dbg !6452
  %24 = and i24 %23, 1, !dbg !6452
  %25 = zext i24 %24 to i32, !dbg !6452
  %26 = or i32 %21, %25, !dbg !6452
  %27 = trunc i32 %26 to i24, !dbg !6452
  %28 = shl nuw nsw i24 %27, 1, !dbg !6452
  %29 = and i24 %22, -3, !dbg !6452
  %30 = or i24 %28, %29, !dbg !6452
  store i24 %30, i24* %6, align 4, !dbg !6452
  %31 = load i8*, i8** %3, align 4, !dbg !6453
  call void @llvm.dbg.value(metadata i8* %31, metadata !6431, metadata !DIExpression()), !dbg !6433
  br label %32

32:                                               ; preds = %2, %18, %15
  %33 = phi i8* [ %17, %15 ], [ %31, %18 ], [ %1, %2 ], !dbg !6433
  ret i8* %33, !dbg !6454
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i8* @extract_length(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #14 !dbg !6455 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6457, metadata !DIExpression()), !dbg !6459
  call void @llvm.dbg.value(metadata i8* %1, metadata !6458, metadata !DIExpression()), !dbg !6459
  %3 = load i8, i8* %1, align 1, !dbg !6460
  switch i8 %3, label %52 [
    i8 104, label %4
    i8 108, label %16
    i8 106, label %28
    i8 122, label %34
    i8 116, label %40
    i8 76, label %46
  ], !dbg !6461

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6462
  call void @llvm.dbg.value(metadata i8* %5, metadata !6458, metadata !DIExpression()), !dbg !6459
  %6 = load i8, i8* %5, align 1, !dbg !6465
  %7 = icmp eq i8 %6, 104, !dbg !6466
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !6467
  %9 = load i24, i24* %8, align 4, !dbg !6467
  %10 = and i24 %9, -30721, !dbg !6467
  br i1 %7, label %11, label %14, !dbg !6468

11:                                               ; preds = %4
  %12 = or i24 %10, 2048, !dbg !6469
  store i24 %12, i24* %8, align 4, !dbg !6469
  %13 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !6471
  call void @llvm.dbg.value(metadata i8* %13, metadata !6458, metadata !DIExpression()), !dbg !6459
  br label %56, !dbg !6472

14:                                               ; preds = %4
  %15 = or i24 %10, 4096, !dbg !6473
  store i24 %15, i24* %8, align 4, !dbg !6473
  br label %56

16:                                               ; preds = %2
  %17 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6475
  call void @llvm.dbg.value(metadata i8* %17, metadata !6458, metadata !DIExpression()), !dbg !6459
  %18 = load i8, i8* %17, align 1, !dbg !6477
  %19 = icmp eq i8 %18, 108, !dbg !6478
  %20 = bitcast %struct.conversion* %0 to i24*, !dbg !6479
  %21 = load i24, i24* %20, align 4, !dbg !6479
  %22 = and i24 %21, -30721, !dbg !6479
  br i1 %19, label %23, label %26, !dbg !6480

23:                                               ; preds = %16
  %24 = or i24 %22, 8192, !dbg !6481
  store i24 %24, i24* %20, align 4, !dbg !6481
  %25 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !6483
  call void @llvm.dbg.value(metadata i8* %25, metadata !6458, metadata !DIExpression()), !dbg !6459
  br label %56, !dbg !6484

26:                                               ; preds = %16
  %27 = or i24 %22, 6144, !dbg !6485
  store i24 %27, i24* %20, align 4, !dbg !6485
  br label %56

28:                                               ; preds = %2
  %29 = bitcast %struct.conversion* %0 to i24*, !dbg !6487
  %30 = load i24, i24* %29, align 4, !dbg !6488
  %31 = and i24 %30, -30721, !dbg !6488
  %32 = or i24 %31, 10240, !dbg !6488
  store i24 %32, i24* %29, align 4, !dbg !6488
  %33 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6489
  call void @llvm.dbg.value(metadata i8* %33, metadata !6458, metadata !DIExpression()), !dbg !6459
  br label %56, !dbg !6490

34:                                               ; preds = %2
  %35 = bitcast %struct.conversion* %0 to i24*, !dbg !6491
  %36 = load i24, i24* %35, align 4, !dbg !6492
  %37 = and i24 %36, -30721, !dbg !6492
  %38 = or i24 %37, 12288, !dbg !6492
  store i24 %38, i24* %35, align 4, !dbg !6492
  %39 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6493
  call void @llvm.dbg.value(metadata i8* %39, metadata !6458, metadata !DIExpression()), !dbg !6459
  br label %56, !dbg !6494

40:                                               ; preds = %2
  %41 = bitcast %struct.conversion* %0 to i24*, !dbg !6495
  %42 = load i24, i24* %41, align 4, !dbg !6496
  %43 = and i24 %42, -30721, !dbg !6496
  %44 = or i24 %43, 14336, !dbg !6496
  store i24 %44, i24* %41, align 4, !dbg !6496
  %45 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6497
  call void @llvm.dbg.value(metadata i8* %45, metadata !6458, metadata !DIExpression()), !dbg !6459
  br label %56, !dbg !6498

46:                                               ; preds = %2
  %47 = bitcast %struct.conversion* %0 to i24*, !dbg !6499
  %48 = load i24, i24* %47, align 4, !dbg !6500
  %49 = and i24 %48, -30723, !dbg !6500
  %50 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6501
  call void @llvm.dbg.value(metadata i8* %50, metadata !6458, metadata !DIExpression()), !dbg !6459
  %51 = or i24 %49, 16386, !dbg !6502
  store i24 %51, i24* %47, align 4, !dbg !6502
  br label %56, !dbg !6503

52:                                               ; preds = %2
  %53 = bitcast %struct.conversion* %0 to i24*, !dbg !6504
  %54 = load i24, i24* %53, align 4, !dbg !6505
  %55 = and i24 %54, -30721, !dbg !6505
  store i24 %55, i24* %53, align 4, !dbg !6505
  br label %56, !dbg !6506

56:                                               ; preds = %23, %26, %11, %14, %52, %46, %40, %34, %28
  %57 = phi i8* [ %1, %52 ], [ %50, %46 ], [ %45, %40 ], [ %39, %34 ], [ %33, %28 ], [ %25, %23 ], [ %17, %26 ], [ %13, %11 ], [ %5, %14 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !6458, metadata !DIExpression()), !dbg !6459
  ret i8* %57, !dbg !6507
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc nonnull i8* @extract_specifier(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #14 !dbg !6508 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6510, metadata !DIExpression()), !dbg !6515
  call void @llvm.dbg.value(metadata i8* %1, metadata !6511, metadata !DIExpression()), !dbg !6515
  call void @llvm.dbg.value(metadata i8 0, metadata !6512, metadata !DIExpression()), !dbg !6515
  call void @llvm.dbg.value(metadata i8* %1, metadata !6511, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6515
  %3 = load i8, i8* %1, align 1, !dbg !6516
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !6517
  store i8 %3, i8* %4, align 1, !dbg !6518
  switch i8 %3, label %39 [
    i8 100, label %6
    i8 105, label %6
    i8 111, label %5
    i8 99, label %5
    i8 117, label %5
    i8 120, label %5
    i8 88, label %5
    i8 97, label %20
    i8 65, label %20
    i8 101, label %20
    i8 69, label %20
    i8 102, label %20
    i8 70, label %20
    i8 103, label %20
    i8 71, label %20
    i8 110, label %25
    i8 115, label %32
    i8 112, label %32
  ], !dbg !6519

5:                                                ; preds = %2, %2, %2, %2, %2
  br label %6, !dbg !6520

6:                                                ; preds = %2, %2, %5
  %7 = phi i24 [ 131072, %5 ], [ 65536, %2 ], [ 65536, %2 ]
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !6521
  %9 = load i24, i24* %8, align 4, !dbg !6521
  %10 = and i24 %9, -458753, !dbg !6521
  %11 = or i24 %10, %7, !dbg !6521
  call void @llvm.dbg.label(metadata !6513), !dbg !6522
  %12 = and i24 %9, 30720, !dbg !6523
  %13 = icmp eq i24 %12, 16384, !dbg !6523
  %14 = zext i1 %13 to i24, !dbg !6525
  %15 = or i24 %11, %14, !dbg !6525
  %16 = icmp eq i8 %3, 99, !dbg !6526
  br i1 %16, label %17, label %43, !dbg !6528

17:                                               ; preds = %6
  %18 = and i24 %9, 30720, !dbg !6529
  %19 = icmp ne i24 %18, 0, !dbg !6529
  call void @llvm.dbg.value(metadata i1 %19, metadata !6512, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6515
  br label %43, !dbg !6531

20:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2
  %21 = bitcast %struct.conversion* %0 to i24*, !dbg !6532
  %22 = load i24, i24* %21, align 4, !dbg !6533
  %23 = and i24 %22, -458753, !dbg !6533
  %24 = or i24 %23, 262144, !dbg !6533
  call void @llvm.dbg.value(metadata i8 1, metadata !6512, metadata !DIExpression()), !dbg !6515
  br label %43, !dbg !6534

25:                                               ; preds = %2
  %26 = bitcast %struct.conversion* %0 to i24*, !dbg !6537
  %27 = load i24, i24* %26, align 4, !dbg !6538
  %28 = and i24 %27, -458753, !dbg !6538
  %29 = or i24 %28, 196608, !dbg !6538
  %30 = and i24 %27, 30720, !dbg !6539
  %31 = icmp eq i24 %30, 16384, !dbg !6539
  br label %43, !dbg !6541

32:                                               ; preds = %2, %2
  %33 = bitcast %struct.conversion* %0 to i24*, !dbg !6542
  %34 = load i24, i24* %33, align 4, !dbg !6543
  %35 = and i24 %34, -458753, !dbg !6543
  %36 = or i24 %35, 196608, !dbg !6543
  %37 = and i24 %34, 30720, !dbg !6544
  %38 = icmp ne i24 %37, 0, !dbg !6544
  br label %43, !dbg !6546

39:                                               ; preds = %2
  %40 = bitcast %struct.conversion* %0 to i24*, !dbg !6547
  %41 = load i24, i24* %40, align 4, !dbg !6548
  %42 = or i24 %41, 1, !dbg !6548
  br label %43, !dbg !6549

43:                                               ; preds = %32, %25, %17, %6, %39, %20
  %44 = phi i24 [ %36, %32 ], [ %29, %25 ], [ %15, %17 ], [ %15, %6 ], [ %42, %39 ], [ %24, %20 ], !dbg !6550
  %45 = phi i1 [ %38, %32 ], [ %31, %25 ], [ %19, %17 ], [ false, %6 ], [ false, %39 ], [ true, %20 ]
  %46 = bitcast %struct.conversion* %0 to i24*, !dbg !6551
  %47 = zext i1 %45 to i32
  %48 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6552
  call void @llvm.dbg.value(metadata i8* %48, metadata !6511, metadata !DIExpression()), !dbg !6515
  call void @llvm.dbg.value(metadata i8 poison, metadata !6512, metadata !DIExpression()), !dbg !6515
  %49 = lshr i24 %44, 1, !dbg !6550
  %50 = and i24 %49, 1, !dbg !6550
  %51 = zext i24 %50 to i32, !dbg !6550
  %52 = or i32 %51, %47, !dbg !6550
  %53 = trunc i32 %52 to i24, !dbg !6550
  %54 = shl nuw nsw i24 %53, 1, !dbg !6550
  %55 = and i24 %44, -3, !dbg !6550
  %56 = or i24 %54, %55, !dbg !6550
  store i24 %56, i24* %46, align 4, !dbg !6550
  ret i8* %48, !dbg !6553
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @extract_decimal(i8** nocapture noundef %0) unnamed_addr #17 !dbg !6554 {
  call void @llvm.dbg.value(metadata i8** %0, metadata !6558, metadata !DIExpression()), !dbg !6561
  %2 = load i8*, i8** %0, align 4, !dbg !6562
  call void @llvm.dbg.value(metadata i8* %2, metadata !6559, metadata !DIExpression()), !dbg !6561
  call void @llvm.dbg.value(metadata i32 0, metadata !6560, metadata !DIExpression()), !dbg !6561
  %3 = load i8, i8* %2, align 1, !dbg !6563
  %4 = zext i8 %3 to i32, !dbg !6564
  %5 = tail call fastcc i32 @isdigit(i32 noundef %4) #26, !dbg !6565
  %6 = icmp eq i32 %5, 0, !dbg !6566
  br i1 %6, label %19, label %7, !dbg !6566

7:                                                ; preds = %1, %7
  %8 = phi i32 [ %16, %7 ], [ %4, %1 ]
  %9 = phi i32 [ %14, %7 ], [ 0, %1 ]
  %10 = phi i8* [ %12, %7 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !6560, metadata !DIExpression()), !dbg !6561
  call void @llvm.dbg.value(metadata i8* %10, metadata !6559, metadata !DIExpression()), !dbg !6561
  %11 = mul i32 %9, 10, !dbg !6567
  %12 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !6569
  call void @llvm.dbg.value(metadata i8* %12, metadata !6559, metadata !DIExpression()), !dbg !6561
  %13 = add i32 %11, -48, !dbg !6570
  %14 = add i32 %13, %8, !dbg !6571
  call void @llvm.dbg.value(metadata i32 %14, metadata !6560, metadata !DIExpression()), !dbg !6561
  %15 = load i8, i8* %12, align 1, !dbg !6563
  %16 = zext i8 %15 to i32, !dbg !6564
  %17 = tail call fastcc i32 @isdigit(i32 noundef %16) #26, !dbg !6565
  %18 = icmp eq i32 %17, 0, !dbg !6566
  br i1 %18, label %19, label %7, !dbg !6566, !llvm.loop !6572

19:                                               ; preds = %7, %1
  %20 = phi i8* [ %2, %1 ], [ %12, %7 ], !dbg !6561
  %21 = phi i32 [ 0, %1 ], [ %14, %7 ], !dbg !6561
  store i8* %20, i8** %0, align 4, !dbg !6574
  ret i32 %21, !dbg !6575
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit(i32 noundef %0) unnamed_addr #5 !dbg !6576 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6578, metadata !DIExpression()), !dbg !6579
  %2 = add i32 %0, -48, !dbg !6580
  %3 = icmp ult i32 %2, 10, !dbg !6581
  %4 = zext i1 %3 to i32, !dbg !6581
  ret i32 %4, !dbg !6582
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @assert_post_action(i8* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !6583 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6588, metadata !DIExpression()), !dbg !6590
  call void @llvm.dbg.value(metadata i32 %1, metadata !6589, metadata !DIExpression()), !dbg !6590
  tail call void asm sideeffect "eors.n r0, r0\0A\09msr BASEPRI, r0\0A\09mov r0, $0\0A\09svc $1\0A\09", "i,i,~{memory}"(i32 4, i32 2) #24, !dbg !6591, !srcloc !6593
  ret void, !dbg !6594
}

; Function Attrs: noinline nounwind optsize
define dso_local void @assert_print(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !6595 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !6597, metadata !DIExpression()), !dbg !6605
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !6606
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #24, !dbg !6606
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !6598, metadata !DIExpression()), !dbg !6607
  call void @llvm.va_start(i8* nonnull %3), !dbg !6608
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !6609
  %5 = load i32, i32* %4, align 4, !dbg !6609
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !6609
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #25, !dbg !6609
  call void @llvm.va_end(i8* nonnull %3), !dbg !6610
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #24, !dbg !6611
  ret void, !dbg !6611
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_ConfigAbsSyms() local_unnamed_addr #1 !dbg !6612 {
  tail call void asm sideeffect ".globl\09CONFIG_GPIO\0A\09.equ\09CONFIG_GPIO,1\0A\09.type\09CONFIG_GPIO,%object", ""() #24, !dbg !6614, !srcloc !6615
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_INIT_PRIORITY\0A\09.equ\09CONFIG_GPIO_INIT_PRIORITY,40\0A\09.type\09CONFIG_GPIO_INIT_PRIORITY,%object", ""() #24, !dbg !6616, !srcloc !6617
  tail call void asm sideeffect ".globl\09CONFIG_UART_INTERRUPT_DRIVEN\0A\09.equ\09CONFIG_UART_INTERRUPT_DRIVEN,1\0A\09.type\09CONFIG_UART_INTERRUPT_DRIVEN,%object", ""() #24, !dbg !6618, !srcloc !6619
  tail call void asm sideeffect ".globl\09CONFIG_BOARD\0A\09.equ\09CONFIG_BOARD,1\0A\09.type\09CONFIG_BOARD,%object", ""() #24, !dbg !6620, !srcloc !6621
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_SIZE\0A\09.equ\09CONFIG_FLASH_SIZE,32\0A\09.type\09CONFIG_FLASH_SIZE,%object", ""() #24, !dbg !6622, !srcloc !6623
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_BASE_ADDRESS\0A\09.equ\09CONFIG_FLASH_BASE_ADDRESS,0x1fff8000\0A\09.type\09CONFIG_FLASH_BASE_ADDRESS,%object", ""() #24, !dbg !6624, !srcloc !6625
  tail call void asm sideeffect ".globl\09CONFIG_SOC\0A\09.equ\09CONFIG_SOC,1\0A\09.type\09CONFIG_SOC,%object", ""() #24, !dbg !6626, !srcloc !6627
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES\0A\09.equ\09CONFIG_SOC_SERIES,1\0A\09.type\09CONFIG_SOC_SERIES,%object", ""() #24, !dbg !6628, !srcloc !6629
  tail call void asm sideeffect ".globl\09CONFIG_NUM_IRQS\0A\09.equ\09CONFIG_NUM_IRQS,127\0A\09.type\09CONFIG_NUM_IRQS,%object", ""() #24, !dbg !6630, !srcloc !6631
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,200000000\0A\09.type\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,%object", ""() #24, !dbg !6632, !srcloc !6633
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY\0A\09.equ\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,30\0A\09.type\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,%object", ""() #24, !dbg !6634, !srcloc !6635
  tail call void asm sideeffect ".globl\09CONFIG_ICACHE_LINE_SIZE\0A\09.equ\09CONFIG_ICACHE_LINE_SIZE,32\0A\09.type\09CONFIG_ICACHE_LINE_SIZE,%object", ""() #24, !dbg !6636, !srcloc !6637
  tail call void asm sideeffect ".globl\09CONFIG_DCACHE_LINE_SIZE\0A\09.equ\09CONFIG_DCACHE_LINE_SIZE,32\0A\09.type\09CONFIG_DCACHE_LINE_SIZE,%object", ""() #24, !dbg !6638, !srcloc !6639
  tail call void asm sideeffect ".globl\09CONFIG_SOC_PART_NUMBER\0A\09.equ\09CONFIG_SOC_PART_NUMBER,1\0A\09.type\09CONFIG_SOC_PART_NUMBER,%object", ""() #24, !dbg !6640, !srcloc !6641
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL\0A\09.equ\09CONFIG_PINCTRL,1\0A\09.type\09CONFIG_PINCTRL,%object", ""() #24, !dbg !6642, !srcloc !6643
  tail call void asm sideeffect ".globl\09CONFIG_HEAP_MEM_POOL_SIZE\0A\09.equ\09CONFIG_HEAP_MEM_POOL_SIZE,0\0A\09.type\09CONFIG_HEAP_MEM_POOL_SIZE,%object", ""() #24, !dbg !6644, !srcloc !6645
  tail call void asm sideeffect ".globl\09CONFIG_ROM_START_OFFSET\0A\09.equ\09CONFIG_ROM_START_OFFSET,0x0\0A\09.type\09CONFIG_ROM_START_OFFSET,%object", ""() #24, !dbg !6646, !srcloc !6647
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL\0A\09.equ\09CONFIG_CLOCK_CONTROL,1\0A\09.type\09CONFIG_CLOCK_CONTROL,%object", ""() #24, !dbg !6648, !srcloc !6649
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK,%object", ""() #24, !dbg !6650, !srcloc !6651
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DOMAIN_NAME\0A\09.equ\09CONFIG_LOG_DOMAIN_NAME,1\0A\09.type\09CONFIG_LOG_DOMAIN_NAME,%object", ""() #24, !dbg !6652, !srcloc !6653
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_TICKS_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,10000\0A\09.type\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,%object", ""() #24, !dbg !6654, !srcloc !6655
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_INIT_PRIORITY\0A\09.equ\09CONFIG_SERIAL_INIT_PRIORITY,55\0A\09.type\09CONFIG_SERIAL_INIT_PRIORITY,%object", ""() #24, !dbg !6656, !srcloc !6657
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_IMX\0A\09.equ\09CONFIG_PINCTRL_IMX,1\0A\09.type\09CONFIG_PINCTRL_IMX,%object", ""() #24, !dbg !6658, !srcloc !6659
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL\0A\09.equ\09CONFIG_SERIAL,1\0A\09.type\09CONFIG_SERIAL,%object", ""() #24, !dbg !6660, !srcloc !6661
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_STACK_SIZE\0A\09.equ\09CONFIG_MAIN_STACK_SIZE,1024\0A\09.type\09CONFIG_MAIN_STACK_SIZE,%object", ""() #24, !dbg !6662, !srcloc !6663
  tail call void asm sideeffect ".globl\09CONFIG_MP_MAX_NUM_CPUS\0A\09.equ\09CONFIG_MP_MAX_NUM_CPUS,1\0A\09.type\09CONFIG_MP_MAX_NUM_CPUS,%object", ""() #24, !dbg !6664, !srcloc !6665
  tail call void asm sideeffect ".globl\09CONFIG_HAS_DTS\0A\09.equ\09CONFIG_HAS_DTS,1\0A\09.type\09CONFIG_HAS_DTS,%object", ""() #24, !dbg !6666, !srcloc !6667
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,%object", ""() #24, !dbg !6668, !srcloc !6669
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_CORTEX_M4_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_CORTEX_M4_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_CORTEX_M4_ENABLED,%object", ""() #24, !dbg !6670, !srcloc !6671
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,%object", ""() #24, !dbg !6672, !srcloc !6673
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,%object", ""() #24, !dbg !6674, !srcloc !6675
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_NXP_IMX_DTCM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_NXP_IMX_DTCM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_NXP_IMX_DTCM_ENABLED,%object", ""() #24, !dbg !6676, !srcloc !6677
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_NXP_IMX_GPIO_ENABLED\0A\09.equ\09CONFIG_DT_HAS_NXP_IMX_GPIO_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_NXP_IMX_GPIO_ENABLED,%object", ""() #24, !dbg !6678, !srcloc !6679
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_NXP_IMX_IOMUXC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_NXP_IMX_IOMUXC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_NXP_IMX_IOMUXC_ENABLED,%object", ""() #24, !dbg !6680, !srcloc !6681
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_NXP_IMX_ITCM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_NXP_IMX_ITCM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_NXP_IMX_ITCM_ENABLED,%object", ""() #24, !dbg !6682, !srcloc !6683
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_NXP_IMX_MU_ENABLED\0A\09.equ\09CONFIG_DT_HAS_NXP_IMX_MU_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_NXP_IMX_MU_ENABLED,%object", ""() #24, !dbg !6684, !srcloc !6685
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_NXP_IMX_UART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_NXP_IMX_UART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_NXP_IMX_UART_ENABLED,%object", ""() #24, !dbg !6686, !srcloc !6687
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_NXP_IMX7D_PINCTRL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_NXP_IMX7D_PINCTRL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_NXP_IMX7D_PINCTRL_ENABLED,%object", ""() #24, !dbg !6688, !srcloc !6689
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CANOPENNODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,%object", ""() #24, !dbg !6690, !srcloc !6691
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CHRE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CHRE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CHRE_MODULE,%object", ""() #24, !dbg !6692, !srcloc !6693
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_FATFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_FATFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_FATFS_MODULE,%object", ""() #24, !dbg !6694, !srcloc !6695
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,%object", ""() #24, !dbg !6696, !srcloc !6697
  tail call void asm sideeffect ".globl\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF,%object", ""() #24, !dbg !6698, !srcloc !6699
  tail call void asm sideeffect ".globl\09CONFIG_ARM_ETHOS_U_LOG_LEVEL\0A\09.equ\09CONFIG_ARM_ETHOS_U_LOG_LEVEL,3\0A\09.type\09CONFIG_ARM_ETHOS_U_LOG_LEVEL,%object", ""() #24, !dbg !6700, !srcloc !6701
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,%object", ""() #24, !dbg !6702, !srcloc !6703
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,%object", ""() #24, !dbg !6704, !srcloc !6705
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,%object", ""() #24, !dbg !6706, !srcloc !6707
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,%object", ""() #24, !dbg !6708, !srcloc !6709
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NXP_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NXP_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NXP_MODULE,%object", ""() #24, !dbg !6710, !srcloc !6711
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,%object", ""() #24, !dbg !6712, !srcloc !6713
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_TELINK_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,%object", ""() #24, !dbg !6714, !srcloc !6715
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LIBLC3_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LIBLC3_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LIBLC3_MODULE,%object", ""() #24, !dbg !6716, !srcloc !6717
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LITTLEFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LITTLEFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LITTLEFS_MODULE,%object", ""() #24, !dbg !6718, !srcloc !6719
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,%object", ""() #24, !dbg !6720, !srcloc !6721
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LVGL_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LVGL_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LVGL_MODULE,%object", ""() #24, !dbg !6722, !srcloc !6723
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LZ4_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LZ4_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LZ4_MODULE,%object", ""() #24, !dbg !6724, !srcloc !6725
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_MBEDTLS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_MBEDTLS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_MBEDTLS_MODULE,%object", ""() #24, !dbg !6726, !srcloc !6727
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_NANOPB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_NANOPB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_NANOPB_MODULE,%object", ""() #24, !dbg !6728, !srcloc !6729
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_OPENTHREAD_MODULE\0A\09.equ\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,%object", ""() #24, !dbg !6730, !srcloc !6731
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_PICOLIBC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_PICOLIBC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_PICOLIBC_MODULE,%object", ""() #24, !dbg !6732, !srcloc !6733
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_SOF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_SOF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_SOF_MODULE,%object", ""() #24, !dbg !6734, !srcloc !6735
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,%object", ""() #24, !dbg !6736, !srcloc !6737
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRACERECORDER_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,%object", ""() #24, !dbg !6738, !srcloc !6739
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,%object", ""() #24, !dbg !6740, !srcloc !6741
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,%object", ""() #24, !dbg !6742, !srcloc !6743
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,%object", ""() #24, !dbg !6744, !srcloc !6745
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZCBOR_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZCBOR_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZCBOR_MODULE,%object", ""() #24, !dbg !6746, !srcloc !6747
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZSCILIB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZSCILIB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZSCILIB_MODULE,%object", ""() #24, !dbg !6748, !srcloc !6749
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE\0A\09.equ\09CONFIG_HAS_CMSIS_CORE,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE,%object", ""() #24, !dbg !6750, !srcloc !6751
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE_M\0A\09.equ\09CONFIG_HAS_CMSIS_CORE_M,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE_M,%object", ""() #24, !dbg !6752, !srcloc !6753
  tail call void asm sideeffect ".globl\09CONFIG_HAS_IMX_HAL\0A\09.equ\09CONFIG_HAS_IMX_HAL,1\0A\09.type\09CONFIG_HAS_IMX_HAL,%object", ""() #24, !dbg !6754, !srcloc !6755
  tail call void asm sideeffect ".globl\09CONFIG_HAS_IMX_GPIO\0A\09.equ\09CONFIG_HAS_IMX_GPIO,1\0A\09.type\09CONFIG_HAS_IMX_GPIO,%object", ""() #24, !dbg !6756, !srcloc !6757
  tail call void asm sideeffect ".globl\09CONFIG_HAS_IMX_I2C\0A\09.equ\09CONFIG_HAS_IMX_I2C,1\0A\09.type\09CONFIG_HAS_IMX_I2C,%object", ""() #24, !dbg !6758, !srcloc !6759
  tail call void asm sideeffect ".globl\09CONFIG_HAS_IMX_IOMUXC\0A\09.equ\09CONFIG_HAS_IMX_IOMUXC,1\0A\09.type\09CONFIG_HAS_IMX_IOMUXC,%object", ""() #24, !dbg !6760, !srcloc !6761
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_REVISION\0A\09.equ\09CONFIG_BOARD_REVISION,1\0A\09.type\09CONFIG_BOARD_REVISION,%object", ""() #24, !dbg !6762, !srcloc !6763
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_96B_MEERKAT96\0A\09.equ\09CONFIG_BOARD_96B_MEERKAT96,1\0A\09.type\09CONFIG_BOARD_96B_MEERKAT96,%object", ""() #24, !dbg !6764, !srcloc !6765
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES_IMX7_M4\0A\09.equ\09CONFIG_SOC_SERIES_IMX7_M4,1\0A\09.type\09CONFIG_SOC_SERIES_IMX7_M4,%object", ""() #24, !dbg !6766, !srcloc !6767
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY\0A\09.equ\09CONFIG_SOC_FAMILY,1\0A\09.type\09CONFIG_SOC_FAMILY,%object", ""() #24, !dbg !6768, !srcloc !6769
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY_IMX\0A\09.equ\09CONFIG_SOC_FAMILY_IMX,1\0A\09.type\09CONFIG_SOC_FAMILY_IMX,%object", ""() #24, !dbg !6770, !srcloc !6771
  tail call void asm sideeffect ".globl\09CONFIG_SOC_MCIMX7_M4\0A\09.equ\09CONFIG_SOC_MCIMX7_M4,1\0A\09.type\09CONFIG_SOC_MCIMX7_M4,%object", ""() #24, !dbg !6772, !srcloc !6773
  tail call void asm sideeffect ".globl\09CONFIG_SOC_PART_NUMBER_MCIMX7D5EVM10SC\0A\09.equ\09CONFIG_SOC_PART_NUMBER_MCIMX7D5EVM10SC,1\0A\09.type\09CONFIG_SOC_PART_NUMBER_MCIMX7D5EVM10SC,%object", ""() #24, !dbg !6774, !srcloc !6775
  tail call void asm sideeffect ".globl\09CONFIG_SOC_PART_NUMBER_IMX7_M4\0A\09.equ\09CONFIG_SOC_PART_NUMBER_IMX7_M4,1\0A\09.type\09CONFIG_SOC_PART_NUMBER_IMX7_M4,%object", ""() #24, !dbg !6776, !srcloc !6777
  tail call void asm sideeffect ".globl\09CONFIG_SOC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_SOC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_SOC_LOG_LEVEL_INF,%object", ""() #24, !dbg !6778, !srcloc !6779
  tail call void asm sideeffect ".globl\09CONFIG_SOC_LOG_LEVEL\0A\09.equ\09CONFIG_SOC_LOG_LEVEL,3\0A\09.type\09CONFIG_SOC_LOG_LEVEL,%object", ""() #24, !dbg !6780, !srcloc !6781
  tail call void asm sideeffect ".globl\09CONFIG_ARCH\0A\09.equ\09CONFIG_ARCH,1\0A\09.type\09CONFIG_ARCH,%object", ""() #24, !dbg !6782, !srcloc !6783
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX\0A\09.equ\09CONFIG_CPU_CORTEX,1\0A\09.type\09CONFIG_CPU_CORTEX,%object", ""() #24, !dbg !6784, !srcloc !6785
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M\0A\09.equ\09CONFIG_CPU_CORTEX_M,1\0A\09.type\09CONFIG_CPU_CORTEX_M,%object", ""() #24, !dbg !6786, !srcloc !6787
  tail call void asm sideeffect ".globl\09CONFIG_ISA_THUMB2\0A\09.equ\09CONFIG_ISA_THUMB2,1\0A\09.type\09CONFIG_ISA_THUMB2,%object", ""() #24, !dbg !6788, !srcloc !6789
  tail call void asm sideeffect ".globl\09CONFIG_ASSEMBLER_ISA_THUMB2\0A\09.equ\09CONFIG_ASSEMBLER_ISA_THUMB2,1\0A\09.type\09CONFIG_ASSEMBLER_ISA_THUMB2,%object", ""() #24, !dbg !6790, !srcloc !6791
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_ISA_THUMB2\0A\09.equ\09CONFIG_COMPILER_ISA_THUMB2,1\0A\09.type\09CONFIG_COMPILER_ISA_THUMB2,%object", ""() #24, !dbg !6792, !srcloc !6793
  tail call void asm sideeffect ".globl\09CONFIG_STACK_ALIGN_DOUBLE_WORD\0A\09.equ\09CONFIG_STACK_ALIGN_DOUBLE_WORD,1\0A\09.type\09CONFIG_STACK_ALIGN_DOUBLE_WORD,%object", ""() #24, !dbg !6794, !srcloc !6795
  tail call void asm sideeffect ".globl\09CONFIG_FAULT_DUMP\0A\09.equ\09CONFIG_FAULT_DUMP,2\0A\09.type\09CONFIG_FAULT_DUMP,%object", ""() #24, !dbg !6796, !srcloc !6797
  tail call void asm sideeffect ".globl\09CONFIG_FP16\0A\09.equ\09CONFIG_FP16,1\0A\09.type\09CONFIG_FP16,%object", ""() #24, !dbg !6798, !srcloc !6799
  tail call void asm sideeffect ".globl\09CONFIG_FP16_IEEE\0A\09.equ\09CONFIG_FP16_IEEE,1\0A\09.type\09CONFIG_FP16_IEEE,%object", ""() #24, !dbg !6800, !srcloc !6801
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M4\0A\09.equ\09CONFIG_CPU_CORTEX_M4,1\0A\09.type\09CONFIG_CPU_CORTEX_M4,%object", ""() #24, !dbg !6802, !srcloc !6803
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,%object", ""() #24, !dbg !6804, !srcloc !6805
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_DWT\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_DWT,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_DWT,%object", ""() #24, !dbg !6806, !srcloc !6807
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,%object", ""() #24, !dbg !6808, !srcloc !6809
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_VTOR\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_VTOR,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_VTOR,%object", ""() #24, !dbg !6810, !srcloc !6811
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,%object", ""() #24, !dbg !6812, !srcloc !6813
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,%object", ""() #24, !dbg !6814, !srcloc !6815
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_FP\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_FP,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_FP,%object", ""() #24, !dbg !6816, !srcloc !6817
  tail call void asm sideeffect ".globl\09CONFIG_GEN_ISR_TABLES\0A\09.equ\09CONFIG_GEN_ISR_TABLES,1\0A\09.type\09CONFIG_GEN_ISR_TABLES,%object", ""() #24, !dbg !6818, !srcloc !6819
  tail call void asm sideeffect ".globl\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE\0A\09.equ\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,1\0A\09.type\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,%object", ""() #24, !dbg !6820, !srcloc !6821
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_VECTOR_TABLE\0A\09.equ\09CONFIG_GEN_IRQ_VECTOR_TABLE,1\0A\09.type\09CONFIG_GEN_IRQ_VECTOR_TABLE,%object", ""() #24, !dbg !6822, !srcloc !6823
  tail call void asm sideeffect ".globl\09CONFIG_ARM\0A\09.equ\09CONFIG_ARM,1\0A\09.type\09CONFIG_ARM,%object", ""() #24, !dbg !6824, !srcloc !6825
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IS_SET\0A\09.equ\09CONFIG_ARCH_IS_SET,1\0A\09.type\09CONFIG_ARCH_IS_SET,%object", ""() #24, !dbg !6826, !srcloc !6827
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ARCH_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ARCH_LOG_LEVEL_INF,%object", ""() #24, !dbg !6828, !srcloc !6829
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_LOG_LEVEL\0A\09.equ\09CONFIG_ARCH_LOG_LEVEL,3\0A\09.type\09CONFIG_ARCH_LOG_LEVEL,%object", ""() #24, !dbg !6830, !srcloc !6831
  tail call void asm sideeffect ".globl\09CONFIG_LITTLE_ENDIAN\0A\09.equ\09CONFIG_LITTLE_ENDIAN,1\0A\09.type\09CONFIG_LITTLE_ENDIAN,%object", ""() #24, !dbg !6832, !srcloc !6833
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_SIZE\0A\09.equ\09CONFIG_SRAM_SIZE,32\0A\09.type\09CONFIG_SRAM_SIZE,%object", ""() #24, !dbg !6834, !srcloc !6835
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_BASE_ADDRESS\0A\09.equ\09CONFIG_SRAM_BASE_ADDRESS,0x20000000\0A\09.type\09CONFIG_SRAM_BASE_ADDRESS,%object", ""() #24, !dbg !6836, !srcloc !6837
  tail call void asm sideeffect ".globl\09CONFIG_GEN_PRIV_STACKS\0A\09.equ\09CONFIG_GEN_PRIV_STACKS,1\0A\09.type\09CONFIG_GEN_PRIV_STACKS,%object", ""() #24, !dbg !6838, !srcloc !6839
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,%object", ""() #24, !dbg !6840, !srcloc !6841
  tail call void asm sideeffect ".globl\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS\0A\09.equ\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,1\0A\09.type\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,%object", ""() #24, !dbg !6842, !srcloc !6843
  tail call void asm sideeffect ".globl\09CONFIG_GEN_SW_ISR_TABLE\0A\09.equ\09CONFIG_GEN_SW_ISR_TABLE,1\0A\09.type\09CONFIG_GEN_SW_ISR_TABLE,%object", ""() #24, !dbg !6844, !srcloc !6845
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,%object", ""() #24, !dbg !6846, !srcloc !6847
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_START_VECTOR\0A\09.equ\09CONFIG_GEN_IRQ_START_VECTOR,0\0A\09.type\09CONFIG_GEN_IRQ_START_VECTOR,%object", ""() #24, !dbg !6848, !srcloc !6849
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,%object", ""() #24, !dbg !6850, !srcloc !6851
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS\0A\09.equ\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,1\0A\09.type\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,%object", ""() #24, !dbg !6852, !srcloc !6853
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,%object", ""() #24, !dbg !6854, !srcloc !6855
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION\0A\09.equ\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,1\0A\09.type\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,%object", ""() #24, !dbg !6856, !srcloc !6857
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_COREDUMP\0A\09.equ\09CONFIG_ARCH_SUPPORTS_COREDUMP,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_COREDUMP,%object", ""() #24, !dbg !6858, !srcloc !6859
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT\0A\09.equ\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,%object", ""() #24, !dbg !6860, !srcloc !6861
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO\0A\09.equ\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,1\0A\09.type\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,%object", ""() #24, !dbg !6862, !srcloc !6863
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,%object", ""() #24, !dbg !6864, !srcloc !6865
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM\0A\09.equ\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,1\0A\09.type\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,%object", ""() #24, !dbg !6866, !srcloc !6867
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_ABORT\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_ABORT,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_ABORT,%object", ""() #24, !dbg !6868, !srcloc !6869
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION\0A\09.equ\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,1\0A\09.type\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,%object", ""() #24, !dbg !6870, !srcloc !6871
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_FPU\0A\09.equ\09CONFIG_CPU_HAS_FPU,1\0A\09.type\09CONFIG_CPU_HAS_FPU,%object", ""() #24, !dbg !6872, !srcloc !6873
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS\0A\09.equ\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,1\0A\09.type\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,%object", ""() #24, !dbg !6874, !srcloc !6875
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_KERNEL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_KERNEL_LOG_LEVEL_INF,%object", ""() #24, !dbg !6876, !srcloc !6877
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_LOG_LEVEL\0A\09.equ\09CONFIG_KERNEL_LOG_LEVEL,3\0A\09.type\09CONFIG_KERNEL_LOG_LEVEL,%object", ""() #24, !dbg !6878, !srcloc !6879
  tail call void asm sideeffect ".globl\09CONFIG_MULTITHREADING\0A\09.equ\09CONFIG_MULTITHREADING,1\0A\09.type\09CONFIG_MULTITHREADING,%object", ""() #24, !dbg !6880, !srcloc !6881
  tail call void asm sideeffect ".globl\09CONFIG_NUM_COOP_PRIORITIES\0A\09.equ\09CONFIG_NUM_COOP_PRIORITIES,16\0A\09.type\09CONFIG_NUM_COOP_PRIORITIES,%object", ""() #24, !dbg !6882, !srcloc !6883
  tail call void asm sideeffect ".globl\09CONFIG_NUM_PREEMPT_PRIORITIES\0A\09.equ\09CONFIG_NUM_PREEMPT_PRIORITIES,15\0A\09.type\09CONFIG_NUM_PREEMPT_PRIORITIES,%object", ""() #24, !dbg !6884, !srcloc !6885
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_THREAD_PRIORITY\0A\09.equ\09CONFIG_MAIN_THREAD_PRIORITY,0\0A\09.type\09CONFIG_MAIN_THREAD_PRIORITY,%object", ""() #24, !dbg !6886, !srcloc !6887
  tail call void asm sideeffect ".globl\09CONFIG_COOP_ENABLED\0A\09.equ\09CONFIG_COOP_ENABLED,1\0A\09.type\09CONFIG_COOP_ENABLED,%object", ""() #24, !dbg !6888, !srcloc !6889
  tail call void asm sideeffect ".globl\09CONFIG_PREEMPT_ENABLED\0A\09.equ\09CONFIG_PREEMPT_ENABLED,1\0A\09.type\09CONFIG_PREEMPT_ENABLED,%object", ""() #24, !dbg !6890, !srcloc !6891
  tail call void asm sideeffect ".globl\09CONFIG_PRIORITY_CEILING\0A\09.equ\09CONFIG_PRIORITY_CEILING,-127\0A\09.type\09CONFIG_PRIORITY_CEILING,%object", ""() #24, !dbg !6892, !srcloc !6893
  tail call void asm sideeffect ".globl\09CONFIG_NUM_METAIRQ_PRIORITIES\0A\09.equ\09CONFIG_NUM_METAIRQ_PRIORITIES,1\0A\09.type\09CONFIG_NUM_METAIRQ_PRIORITIES,%object", ""() #24, !dbg !6894, !srcloc !6895
  tail call void asm sideeffect ".globl\09CONFIG_IDLE_STACK_SIZE\0A\09.equ\09CONFIG_IDLE_STACK_SIZE,320\0A\09.type\09CONFIG_IDLE_STACK_SIZE,%object", ""() #24, !dbg !6896, !srcloc !6897
  tail call void asm sideeffect ".globl\09CONFIG_ISR_STACK_SIZE\0A\09.equ\09CONFIG_ISR_STACK_SIZE,2048\0A\09.type\09CONFIG_ISR_STACK_SIZE,%object", ""() #24, !dbg !6898, !srcloc !6899
  tail call void asm sideeffect ".globl\09CONFIG_ERRNO\0A\09.equ\09CONFIG_ERRNO,1\0A\09.type\09CONFIG_ERRNO,%object", ""() #24, !dbg !6900, !srcloc !6901
  tail call void asm sideeffect ".globl\09CONFIG_SCHED_DUMB\0A\09.equ\09CONFIG_SCHED_DUMB,1\0A\09.type\09CONFIG_SCHED_DUMB,%object", ""() #24, !dbg !6902, !srcloc !6903
  tail call void asm sideeffect ".globl\09CONFIG_WAITQ_DUMB\0A\09.equ\09CONFIG_WAITQ_DUMB,1\0A\09.type\09CONFIG_WAITQ_DUMB,%object", ""() #24, !dbg !6904, !srcloc !6905
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_BANNER\0A\09.equ\09CONFIG_BOOT_BANNER,1\0A\09.type\09CONFIG_BOOT_BANNER,%object", ""() #24, !dbg !6906, !srcloc !6907
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_DELAY\0A\09.equ\09CONFIG_BOOT_DELAY,0\0A\09.type\09CONFIG_BOOT_DELAY,%object", ""() #24, !dbg !6908, !srcloc !6909
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,1024\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,%object", ""() #24, !dbg !6910, !srcloc !6911
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,-1\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,%object", ""() #24, !dbg !6912, !srcloc !6913
  tail call void asm sideeffect ".globl\09CONFIG_ATOMIC_OPERATIONS_BUILTIN\0A\09.equ\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,1\0A\09.type\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,%object", ""() #24, !dbg !6914, !srcloc !6915
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICING\0A\09.equ\09CONFIG_TIMESLICING,1\0A\09.type\09CONFIG_TIMESLICING,%object", ""() #24, !dbg !6916, !srcloc !6917
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_SIZE\0A\09.equ\09CONFIG_TIMESLICE_SIZE,0\0A\09.type\09CONFIG_TIMESLICE_SIZE,%object", ""() #24, !dbg !6918, !srcloc !6919
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_PRIORITY\0A\09.equ\09CONFIG_TIMESLICE_PRIORITY,0\0A\09.type\09CONFIG_TIMESLICE_PRIORITY,%object", ""() #24, !dbg !6920, !srcloc !6921
  tail call void asm sideeffect ".globl\09CONFIG_NUM_MBOX_ASYNC_MSGS\0A\09.equ\09CONFIG_NUM_MBOX_ASYNC_MSGS,10\0A\09.type\09CONFIG_NUM_MBOX_ASYNC_MSGS,%object", ""() #24, !dbg !6922, !srcloc !6923
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_MEM_POOL\0A\09.equ\09CONFIG_KERNEL_MEM_POOL,1\0A\09.type\09CONFIG_KERNEL_MEM_POOL,%object", ""() #24, !dbg !6924, !srcloc !6925
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN\0A\09.equ\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,1\0A\09.type\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,%object", ""() #24, !dbg !6926, !srcloc !6927
  tail call void asm sideeffect ".globl\09CONFIG_SWAP_NONATOMIC\0A\09.equ\09CONFIG_SWAP_NONATOMIC,1\0A\09.type\09CONFIG_SWAP_NONATOMIC,%object", ""() #24, !dbg !6928, !srcloc !6929
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_EXISTS\0A\09.equ\09CONFIG_SYS_CLOCK_EXISTS,1\0A\09.type\09CONFIG_SYS_CLOCK_EXISTS,%object", ""() #24, !dbg !6930, !srcloc !6931
  tail call void asm sideeffect ".globl\09CONFIG_TIMEOUT_64BIT\0A\09.equ\09CONFIG_TIMEOUT_64BIT,1\0A\09.type\09CONFIG_TIMEOUT_64BIT,%object", ""() #24, !dbg !6932, !srcloc !6933
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS\0A\09.equ\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,365\0A\09.type\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,%object", ""() #24, !dbg !6934, !srcloc !6935
  tail call void asm sideeffect ".globl\09CONFIG_XIP\0A\09.equ\09CONFIG_XIP,1\0A\09.type\09CONFIG_XIP,%object", ""() #24, !dbg !6936, !srcloc !6937
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,30\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,%object", ""() #24, !dbg !6938, !srcloc !6939
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,40\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,%object", ""() #24, !dbg !6940, !srcloc !6941
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,50\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,%object", ""() #24, !dbg !6942, !srcloc !6943
  tail call void asm sideeffect ".globl\09CONFIG_APPLICATION_INIT_PRIORITY\0A\09.equ\09CONFIG_APPLICATION_INIT_PRIORITY,90\0A\09.type\09CONFIG_APPLICATION_INIT_PRIORITY,%object", ""() #24, !dbg !6944, !srcloc !6945
  tail call void asm sideeffect ".globl\09CONFIG_STACK_POINTER_RANDOM\0A\09.equ\09CONFIG_STACK_POINTER_RANDOM,0\0A\09.type\09CONFIG_STACK_POINTER_RANDOM,%object", ""() #24, !dbg !6946, !srcloc !6947
  tail call void asm sideeffect ".globl\09CONFIG_MP_NUM_CPUS\0A\09.equ\09CONFIG_MP_NUM_CPUS,1\0A\09.type\09CONFIG_MP_NUM_CPUS,%object", ""() #24, !dbg !6948, !srcloc !6949
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_KERNEL\0A\09.equ\09CONFIG_TICKLESS_KERNEL,1\0A\09.type\09CONFIG_TICKLESS_KERNEL,%object", ""() #24, !dbg !6950, !srcloc !6951
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #24, !dbg !6952, !srcloc !6953
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE\0A\09.equ\09CONFIG_CONSOLE,1\0A\09.type\09CONFIG_CONSOLE,%object", ""() #24, !dbg !6954, !srcloc !6955
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN\0A\09.equ\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,128\0A\09.type\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,%object", ""() #24, !dbg !6956, !srcloc !6957
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HAS_DRIVER\0A\09.equ\09CONFIG_CONSOLE_HAS_DRIVER,1\0A\09.type\09CONFIG_CONSOLE_HAS_DRIVER,%object", ""() #24, !dbg !6958, !srcloc !6959
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INIT_PRIORITY\0A\09.equ\09CONFIG_CONSOLE_INIT_PRIORITY,60\0A\09.type\09CONFIG_CONSOLE_INIT_PRIORITY,%object", ""() #24, !dbg !6960, !srcloc !6961
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE\0A\09.equ\09CONFIG_UART_CONSOLE,1\0A\09.type\09CONFIG_UART_CONSOLE,%object", ""() #24, !dbg !6962, !srcloc !6963
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF\0A\09.equ\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF,%object", ""() #24, !dbg !6964, !srcloc !6965
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_LOG_LEVEL\0A\09.equ\09CONFIG_UART_CONSOLE_LOG_LEVEL,3\0A\09.type\09CONFIG_UART_CONSOLE_LOG_LEVEL,%object", ""() #24, !dbg !6966, !srcloc !6967
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SEGGER_RTT\0A\09.equ\09CONFIG_HAS_SEGGER_RTT,1\0A\09.type\09CONFIG_HAS_SEGGER_RTT,%object", ""() #24, !dbg !6968, !srcloc !6969
  tail call void asm sideeffect ".globl\09CONFIG_ETH_INIT_PRIORITY\0A\09.equ\09CONFIG_ETH_INIT_PRIORITY,80\0A\09.type\09CONFIG_ETH_INIT_PRIORITY,%object", ""() #24, !dbg !6970, !srcloc !6971
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_HAS_DRIVER\0A\09.equ\09CONFIG_SERIAL_HAS_DRIVER,1\0A\09.type\09CONFIG_SERIAL_HAS_DRIVER,%object", ""() #24, !dbg !6972, !srcloc !6973
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_INTERRUPT\0A\09.equ\09CONFIG_SERIAL_SUPPORT_INTERRUPT,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_INTERRUPT,%object", ""() #24, !dbg !6974, !srcloc !6975
  tail call void asm sideeffect ".globl\09CONFIG_UART_LOG_LEVEL_INF\0A\09.equ\09CONFIG_UART_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_UART_LOG_LEVEL_INF,%object", ""() #24, !dbg !6976, !srcloc !6977
  tail call void asm sideeffect ".globl\09CONFIG_UART_LOG_LEVEL\0A\09.equ\09CONFIG_UART_LOG_LEVEL,3\0A\09.type\09CONFIG_UART_LOG_LEVEL,%object", ""() #24, !dbg !6978, !srcloc !6979
  tail call void asm sideeffect ".globl\09CONFIG_UART_USE_RUNTIME_CONFIGURE\0A\09.equ\09CONFIG_UART_USE_RUNTIME_CONFIGURE,1\0A\09.type\09CONFIG_UART_USE_RUNTIME_CONFIGURE,%object", ""() #24, !dbg !6980, !srcloc !6981
  tail call void asm sideeffect ".globl\09CONFIG_UART_IMX\0A\09.equ\09CONFIG_UART_IMX,1\0A\09.type\09CONFIG_UART_IMX,%object", ""() #24, !dbg !6982, !srcloc !6983
  tail call void asm sideeffect ".globl\09CONFIG_INTC_INIT_PRIORITY\0A\09.equ\09CONFIG_INTC_INIT_PRIORITY,40\0A\09.type\09CONFIG_INTC_INIT_PRIORITY,%object", ""() #24, !dbg !6984, !srcloc !6985
  tail call void asm sideeffect ".globl\09CONFIG_INTC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_INTC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_INTC_LOG_LEVEL_INF,%object", ""() #24, !dbg !6986, !srcloc !6987
  tail call void asm sideeffect ".globl\09CONFIG_INTC_LOG_LEVEL\0A\09.equ\09CONFIG_INTC_LOG_LEVEL,3\0A\09.type\09CONFIG_INTC_LOG_LEVEL,%object", ""() #24, !dbg !6988, !srcloc !6989
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,0\0A\09.type\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,%object", ""() #24, !dbg !6990, !srcloc !6991
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_CAPABLE\0A\09.equ\09CONFIG_TICKLESS_CAPABLE,1\0A\09.type\09CONFIG_TICKLESS_CAPABLE,%object", ""() #24, !dbg !6992, !srcloc !6993
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT\0A\09.equ\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,1\0A\09.type\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,%object", ""() #24, !dbg !6994, !srcloc !6995
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,%object", ""() #24, !dbg !6996, !srcloc !6997
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_LOG_LEVEL_INF\0A\09.equ\09CONFIG_GPIO_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_GPIO_LOG_LEVEL_INF,%object", ""() #24, !dbg !6998, !srcloc !6999
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_LOG_LEVEL\0A\09.equ\09CONFIG_GPIO_LOG_LEVEL,3\0A\09.type\09CONFIG_GPIO_LOG_LEVEL,%object", ""() #24, !dbg !7000, !srcloc !7001
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_IMX\0A\09.equ\09CONFIG_GPIO_IMX,1\0A\09.type\09CONFIG_GPIO_IMX,%object", ""() #24, !dbg !7002, !srcloc !7003
  tail call void asm sideeffect ".globl\09CONFIG_FXL6408_LOG_LEVEL_INF\0A\09.equ\09CONFIG_FXL6408_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_FXL6408_LOG_LEVEL_INF,%object", ""() #24, !dbg !7004, !srcloc !7005
  tail call void asm sideeffect ".globl\09CONFIG_FXL6408_LOG_LEVEL\0A\09.equ\09CONFIG_FXL6408_LOG_LEVEL,3\0A\09.type\09CONFIG_FXL6408_LOG_LEVEL,%object", ""() #24, !dbg !7006, !srcloc !7007
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF,%object", ""() #24, !dbg !7008, !srcloc !7009
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_LOG_LEVEL\0A\09.equ\09CONFIG_CLOCK_CONTROL_LOG_LEVEL,3\0A\09.type\09CONFIG_CLOCK_CONTROL_LOG_LEVEL,%object", ""() #24, !dbg !7010, !srcloc !7011
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_PINCTRL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_PINCTRL_LOG_LEVEL_INF,%object", ""() #24, !dbg !7012, !srcloc !7013
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_LOG_LEVEL\0A\09.equ\09CONFIG_PINCTRL_LOG_LEVEL,3\0A\09.type\09CONFIG_PINCTRL_LOG_LEVEL,%object", ""() #24, !dbg !7014, !srcloc !7015
  tail call void asm sideeffect ".globl\09CONFIG_USBC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_USBC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_USBC_LOG_LEVEL_INF,%object", ""() #24, !dbg !7016, !srcloc !7017
  tail call void asm sideeffect ".globl\09CONFIG_USBC_LOG_LEVEL\0A\09.equ\09CONFIG_USBC_LOG_LEVEL,3\0A\09.type\09CONFIG_USBC_LOG_LEVEL,%object", ""() #24, !dbg !7018, !srcloc !7019
  tail call void asm sideeffect ".globl\09CONFIG_SUPPORT_MINIMAL_LIBC\0A\09.equ\09CONFIG_SUPPORT_MINIMAL_LIBC,1\0A\09.type\09CONFIG_SUPPORT_MINIMAL_LIBC,%object", ""() #24, !dbg !7020, !srcloc !7021
  tail call void asm sideeffect ".globl\09CONFIG_PICOLIBC_SUPPORTED\0A\09.equ\09CONFIG_PICOLIBC_SUPPORTED,1\0A\09.type\09CONFIG_PICOLIBC_SUPPORTED,%object", ""() #24, !dbg !7022, !srcloc !7023
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC\0A\09.equ\09CONFIG_MINIMAL_LIBC,1\0A\09.type\09CONFIG_MINIMAL_LIBC,%object", ""() #24, !dbg !7024, !srcloc !7025
  tail call void asm sideeffect ".globl\09CONFIG_HAS_NEWLIB_LIBC_NANO\0A\09.equ\09CONFIG_HAS_NEWLIB_LIBC_NANO,1\0A\09.type\09CONFIG_HAS_NEWLIB_LIBC_NANO,%object", ""() #24, !dbg !7026, !srcloc !7027
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS\0A\09.equ\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,1\0A\09.type\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,%object", ""() #24, !dbg !7028, !srcloc !7029
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC,%object", ""() #24, !dbg !7030, !srcloc !7031
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,0\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,%object", ""() #24, !dbg !7032, !srcloc !7033
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_CALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_CALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_CALLOC,%object", ""() #24, !dbg !7034, !srcloc !7035
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_REALLOCARRAY\0A\09.equ\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,1\0A\09.type\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,%object", ""() #24, !dbg !7036, !srcloc !7037
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,1\0A\09.type\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,%object", ""() #24, !dbg !7038, !srcloc !7039
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_TIME\0A\09.equ\09CONFIG_MINIMAL_LIBC_TIME,1\0A\09.type\09CONFIG_MINIMAL_LIBC_TIME,%object", ""() #24, !dbg !7040, !srcloc !7041
  tail call void asm sideeffect ".globl\09CONFIG_STDOUT_CONSOLE\0A\09.equ\09CONFIG_STDOUT_CONSOLE,1\0A\09.type\09CONFIG_STDOUT_CONSOLE,%object", ""() #24, !dbg !7042, !srcloc !7043
  tail call void asm sideeffect ".globl\09CONFIG_NEED_LIBC_MEM_PARTITION\0A\09.equ\09CONFIG_NEED_LIBC_MEM_PARTITION,1\0A\09.type\09CONFIG_NEED_LIBC_MEM_PARTITION,%object", ""() #24, !dbg !7044, !srcloc !7045
  tail call void asm sideeffect ".globl\09CONFIG_CRC\0A\09.equ\09CONFIG_CRC,1\0A\09.type\09CONFIG_CRC,%object", ""() #24, !dbg !7046, !srcloc !7047
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_COMPLETE\0A\09.equ\09CONFIG_CBPRINTF_COMPLETE,1\0A\09.type\09CONFIG_CBPRINTF_COMPLETE,%object", ""() #24, !dbg !7048, !srcloc !7049
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_FULL_INTEGRAL\0A\09.equ\09CONFIG_CBPRINTF_FULL_INTEGRAL,1\0A\09.type\09CONFIG_CBPRINTF_FULL_INTEGRAL,%object", ""() #24, !dbg !7050, !srcloc !7051
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_N_SPECIFIER\0A\09.equ\09CONFIG_CBPRINTF_N_SPECIFIER,1\0A\09.type\09CONFIG_CBPRINTF_N_SPECIFIER,%object", ""() #24, !dbg !7052, !srcloc !7053
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF\0A\09.equ\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF,%object", ""() #24, !dbg !7054, !srcloc !7055
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL\0A\09.equ\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL,3\0A\09.type\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL,%object", ""() #24, !dbg !7056, !srcloc !7057
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_ALLOC_LOOPS\0A\09.equ\09CONFIG_SYS_HEAP_ALLOC_LOOPS,3\0A\09.type\09CONFIG_SYS_HEAP_ALLOC_LOOPS,%object", ""() #24, !dbg !7058, !srcloc !7059
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_SMALL_ONLY\0A\09.equ\09CONFIG_SYS_HEAP_SMALL_ONLY,1\0A\09.type\09CONFIG_SYS_HEAP_SMALL_ONLY,%object", ""() #24, !dbg !7060, !srcloc !7061
  tail call void asm sideeffect ".globl\09CONFIG_POSIX_MAX_FDS\0A\09.equ\09CONFIG_POSIX_MAX_FDS,4\0A\09.type\09CONFIG_POSIX_MAX_FDS,%object", ""() #24, !dbg !7062, !srcloc !7063
  tail call void asm sideeffect ".globl\09CONFIG_MAX_TIMER_COUNT\0A\09.equ\09CONFIG_MAX_TIMER_COUNT,5\0A\09.type\09CONFIG_MAX_TIMER_COUNT,%object", ""() #24, !dbg !7064, !srcloc !7065
  tail call void asm sideeffect ".globl\09CONFIG_PRINTK\0A\09.equ\09CONFIG_PRINTK,1\0A\09.type\09CONFIG_PRINTK,%object", ""() #24, !dbg !7066, !srcloc !7067
  tail call void asm sideeffect ".globl\09CONFIG_EARLY_CONSOLE\0A\09.equ\09CONFIG_EARLY_CONSOLE,1\0A\09.type\09CONFIG_EARLY_CONSOLE,%object", ""() #24, !dbg !7068, !srcloc !7069
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT\0A\09.equ\09CONFIG_ASSERT,1\0A\09.type\09CONFIG_ASSERT,%object", ""() #24, !dbg !7070, !srcloc !7071
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_LEVEL\0A\09.equ\09CONFIG_ASSERT_LEVEL,2\0A\09.type\09CONFIG_ASSERT_LEVEL,%object", ""() #24, !dbg !7072, !srcloc !7073
  tail call void asm sideeffect ".globl\09CONFIG_SPIN_VALIDATE\0A\09.equ\09CONFIG_SPIN_VALIDATE,1\0A\09.type\09CONFIG_SPIN_VALIDATE,%object", ""() #24, !dbg !7074, !srcloc !7075
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ASSERT_VERBOSE,%object", ""() #24, !dbg !7076, !srcloc !7077
  tail call void asm sideeffect ".globl\09CONFIG_LOG\0A\09.equ\09CONFIG_LOG,1\0A\09.type\09CONFIG_LOG,%object", ""() #24, !dbg !7078, !srcloc !7079
  tail call void asm sideeffect ".globl\09CONFIG_LOG_MODE_MINIMAL\0A\09.equ\09CONFIG_LOG_MODE_MINIMAL,1\0A\09.type\09CONFIG_LOG_MODE_MINIMAL,%object", ""() #24, !dbg !7080, !srcloc !7081
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DEFAULT_LEVEL\0A\09.equ\09CONFIG_LOG_DEFAULT_LEVEL,3\0A\09.type\09CONFIG_LOG_DEFAULT_LEVEL,%object", ""() #24, !dbg !7082, !srcloc !7083
  tail call void asm sideeffect ".globl\09CONFIG_LOG_OVERRIDE_LEVEL\0A\09.equ\09CONFIG_LOG_OVERRIDE_LEVEL,0\0A\09.type\09CONFIG_LOG_OVERRIDE_LEVEL,%object", ""() #24, !dbg !7084, !srcloc !7085
  tail call void asm sideeffect ".globl\09CONFIG_LOG_MAX_LEVEL\0A\09.equ\09CONFIG_LOG_MAX_LEVEL,4\0A\09.type\09CONFIG_LOG_MAX_LEVEL,%object", ""() #24, !dbg !7086, !srcloc !7087
  tail call void asm sideeffect ".globl\09CONFIG_LOG_USE_VLA\0A\09.equ\09CONFIG_LOG_USE_VLA,1\0A\09.type\09CONFIG_LOG_USE_VLA,%object", ""() #24, !dbg !7088, !srcloc !7089
  tail call void asm sideeffect ".globl\09CONFIG_TEST_RANDOM_GENERATOR\0A\09.equ\09CONFIG_TEST_RANDOM_GENERATOR,1\0A\09.type\09CONFIG_TEST_RANDOM_GENERATOR,%object", ""() #24, !dbg !7090, !srcloc !7091
  tail call void asm sideeffect ".globl\09CONFIG_TIMER_RANDOM_GENERATOR\0A\09.equ\09CONFIG_TIMER_RANDOM_GENERATOR,1\0A\09.type\09CONFIG_TIMER_RANDOM_GENERATOR,%object", ""() #24, !dbg !7092, !srcloc !7093
  tail call void asm sideeffect ".globl\09CONFIG_COVERAGE_GCOV_HEAP_SIZE\0A\09.equ\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,16384\0A\09.type\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,%object", ""() #24, !dbg !7094, !srcloc !7095
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_0_15\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,%object", ""() #24, !dbg !7096, !srcloc !7097
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #24, !dbg !7098, !srcloc !7099
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_ORPHAN_SECTION_WARN\0A\09.equ\09CONFIG_LINKER_ORPHAN_SECTION_WARN,1\0A\09.type\09CONFIG_LINKER_ORPHAN_SECTION_WARN,%object", ""() #24, !dbg !7100, !srcloc !7101
  tail call void asm sideeffect ".globl\09CONFIG_HAS_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_HAS_FLASH_LOAD_OFFSET,1\0A\09.type\09CONFIG_HAS_FLASH_LOAD_OFFSET,%object", ""() #24, !dbg !7102, !srcloc !7103
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_FLASH_LOAD_OFFSET,0x0\0A\09.type\09CONFIG_FLASH_LOAD_OFFSET,%object", ""() #24, !dbg !7104, !srcloc !7105
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_SIZE\0A\09.equ\09CONFIG_FLASH_LOAD_SIZE,0x0\0A\09.type\09CONFIG_FLASH_LOAD_SIZE,%object", ""() #24, !dbg !7106, !srcloc !7107
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED\0A\09.equ\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,1\0A\09.type\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,%object", ""() #24, !dbg !7108, !srcloc !7109
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_TEMPLATE\0A\09.equ\09CONFIG_LD_LINKER_TEMPLATE,1\0A\09.type\09CONFIG_LD_LINKER_TEMPLATE,%object", ""() #24, !dbg !7110, !srcloc !7111
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_ENTRY\0A\09.equ\09CONFIG_KERNEL_ENTRY,1\0A\09.type\09CONFIG_KERNEL_ENTRY,%object", ""() #24, !dbg !7112, !srcloc !7113
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_SORT_BY_ALIGNMENT\0A\09.equ\09CONFIG_LINKER_SORT_BY_ALIGNMENT,1\0A\09.type\09CONFIG_LINKER_SORT_BY_ALIGNMENT,%object", ""() #24, !dbg !7114, !srcloc !7115
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_OFFSET\0A\09.equ\09CONFIG_SRAM_OFFSET,0x0\0A\09.type\09CONFIG_SRAM_OFFSET,%object", ""() #24, !dbg !7116, !srcloc !7117
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT\0A\09.equ\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,1\0A\09.type\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,%object", ""() #24, !dbg !7118, !srcloc !7119
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID,1\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID,%object", ""() #24, !dbg !7120, !srcloc !7121
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,0xE015E015\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,%object", ""() #24, !dbg !7122, !srcloc !7123
  tail call void asm sideeffect ".globl\09CONFIG_SIZE_OPTIMIZATIONS\0A\09.equ\09CONFIG_SIZE_OPTIMIZATIONS,1\0A\09.type\09CONFIG_SIZE_OPTIMIZATIONS,%object", ""() #24, !dbg !7124, !srcloc !7125
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_COLOR_DIAGNOSTICS\0A\09.equ\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,1\0A\09.type\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,%object", ""() #24, !dbg !7126, !srcloc !7127
  tail call void asm sideeffect ".globl\09CONFIG_FORTIFY_SOURCE_NONE\0A\09.equ\09CONFIG_FORTIFY_SOURCE_NONE,1\0A\09.type\09CONFIG_FORTIFY_SOURCE_NONE,%object", ""() #24, !dbg !7128, !srcloc !7129
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_OPT\0A\09.equ\09CONFIG_COMPILER_OPT,1\0A\09.type\09CONFIG_COMPILER_OPT,%object", ""() #24, !dbg !7130, !srcloc !7131
  tail call void asm sideeffect ".globl\09CONFIG_RUNTIME_ERROR_CHECKS\0A\09.equ\09CONFIG_RUNTIME_ERROR_CHECKS,1\0A\09.type\09CONFIG_RUNTIME_ERROR_CHECKS,%object", ""() #24, !dbg !7132, !srcloc !7133
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_BIN_NAME\0A\09.equ\09CONFIG_KERNEL_BIN_NAME,1\0A\09.type\09CONFIG_KERNEL_BIN_NAME,%object", ""() #24, !dbg !7134, !srcloc !7135
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_STAT\0A\09.equ\09CONFIG_OUTPUT_STAT,1\0A\09.type\09CONFIG_OUTPUT_STAT,%object", ""() #24, !dbg !7136, !srcloc !7137
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_DISASSEMBLY\0A\09.equ\09CONFIG_OUTPUT_DISASSEMBLY,1\0A\09.type\09CONFIG_OUTPUT_DISASSEMBLY,%object", ""() #24, !dbg !7138, !srcloc !7139
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE\0A\09.equ\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,1\0A\09.type\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,%object", ""() #24, !dbg !7140, !srcloc !7141
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_BIN\0A\09.equ\09CONFIG_BUILD_OUTPUT_BIN,1\0A\09.type\09CONFIG_BUILD_OUTPUT_BIN,%object", ""() #24, !dbg !7142, !srcloc !7143
  tail call void asm sideeffect ".globl\09CONFIG_WARN_DEPRECATED\0A\09.equ\09CONFIG_WARN_DEPRECATED,1\0A\09.type\09CONFIG_WARN_DEPRECATED,%object", ""() #24, !dbg !7144, !srcloc !7145
  tail call void asm sideeffect ".globl\09CONFIG_ENFORCE_ZEPHYR_STDINT\0A\09.equ\09CONFIG_ENFORCE_ZEPHYR_STDINT,1\0A\09.type\09CONFIG_ENFORCE_ZEPHYR_STDINT,%object", ""() #24, !dbg !7146, !srcloc !7147
  tail call void asm sideeffect ".globl\09CONFIG_COMPAT_INCLUDES\0A\09.equ\09CONFIG_COMPAT_INCLUDES,1\0A\09.type\09CONFIG_COMPAT_INCLUDES,%object", ""() #24, !dbg !7148, !srcloc !7149
  ret void, !dbg !7150
}

; Function Attrs: noinline nounwind optsize
define internal i32 @nxp_mcimx7_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !7151 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7153, metadata !DIExpression()), !dbg !7154
  tail call void @SOC_RdcInit() #26, !dbg !7155
  tail call void @SOC_ClockInit() #26, !dbg !7156
  tail call fastcc void @nxp_mcimx7_gpio_config() #26, !dbg !7157
  ret i32 0, !dbg !7158
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @SOC_RdcInit() local_unnamed_addr #18 !dbg !7159 {
  tail call fastcc void @RDC_SetDomainID() #26, !dbg !7160
  ret void, !dbg !7161
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SOC_ClockInit() local_unnamed_addr #1 !dbg !7162 {
  tail call void @CCM_UpdateRoot(%struct.CCM_Type* noundef nonnull inttoptr (i32 808976384 to %struct.CCM_Type*), i32 noundef 809024384, i32 noundef 0, i32 noundef 0, i32 noundef 0) #25, !dbg !7163
  tail call fastcc void @CCM_EnableRoot() #26, !dbg !7164
  tail call fastcc void @CCM_ControlGate(i32 noundef 808995296, i32 noundef 4369) #26, !dbg !7165
  tail call fastcc void @RDC_SetPdapAccess(i32 noundef 10, i8 noundef zeroext 12) #26, !dbg !7166
  tail call fastcc void @WDOG_DisablePowerdown() #26, !dbg !7167
  tail call fastcc void @CCM_ControlGate(i32 noundef 808995296, i32 noundef 0) #26, !dbg !7168
  tail call fastcc void @CCM_ControlGate(i32 noundef 808978528, i32 noundef 4369) #26, !dbg !7169
  tail call fastcc void @CCM_ControlGate(i32 noundef 808978560, i32 noundef 4369) #26, !dbg !7170
  tail call fastcc void @CCM_ControlGate(i32 noundef 808992928, i32 noundef 4369) #26, !dbg !7171
  tail call fastcc void @CCM_ControlGate(i32 noundef 808992944, i32 noundef 4369) #26, !dbg !7172
  tail call fastcc void @CCM_ControlGate(i32 noundef 808992960, i32 noundef 4369) #26, !dbg !7173
  tail call fastcc void @CCM_ControlGate(i32 noundef 808995456, i32 noundef 4369) #26, !dbg !7174
  tail call fastcc void @CCM_ControlGate(i32 noundef 808995472, i32 noundef 4369) #26, !dbg !7175
  tail call fastcc void @CCM_ControlGate(i32 noundef 808993376, i32 noundef 4369) #26, !dbg !7176
  ret void, !dbg !7177
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @nxp_mcimx7_gpio_config() unnamed_addr #18 !dbg !7178 {
  tail call fastcc void @RDC_SetPdapAccess(i32 noundef 0, i8 noundef zeroext 15) #26, !dbg !7179
  tail call fastcc void @CCM_ControlGate(i32 noundef 808995328, i32 noundef 8738) #26, !dbg !7180
  ret void, !dbg !7181
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @RDC_SetPdapAccess(i32 noundef %0, i8 noundef zeroext %1) unnamed_addr #18 !dbg !7182 {
  call void @llvm.dbg.value(metadata %struct.RDC_Type* inttoptr (i32 809304064 to %struct.RDC_Type*), metadata !7187, metadata !DIExpression()), !dbg !7192
  call void @llvm.dbg.value(metadata i32 %0, metadata !7188, metadata !DIExpression()), !dbg !7192
  call void @llvm.dbg.value(metadata i8 %1, metadata !7189, metadata !DIExpression()), !dbg !7192
  call void @llvm.dbg.value(metadata i8 0, metadata !7190, metadata !DIExpression()), !dbg !7192
  call void @llvm.dbg.value(metadata i8 0, metadata !7191, metadata !DIExpression()), !dbg !7192
  %3 = zext i8 %1 to i32, !dbg !7193
  %4 = getelementptr inbounds [118 x i32], [118 x i32]* inttoptr (i32 809305088 to [118 x i32]*), i32 0, i32 %0, !dbg !7194
  store volatile i32 %3, i32* %4, align 4, !dbg !7195
  ret void, !dbg !7196
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @CCM_ControlGate(i32 noundef %0, i32 noundef %1) unnamed_addr #18 !dbg !7197 {
  call void @llvm.dbg.value(metadata %struct.CCM_Type* undef, metadata !7201, metadata !DIExpression()), !dbg !7204
  call void @llvm.dbg.value(metadata i32 %0, metadata !7202, metadata !DIExpression()), !dbg !7204
  call void @llvm.dbg.value(metadata i32 %1, metadata !7203, metadata !DIExpression()), !dbg !7204
  %3 = inttoptr i32 %0 to i32*, !dbg !7205
  store volatile i32 %1, i32* %3, align 4, !dbg !7206
  ret void, !dbg !7207
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @CCM_EnableRoot() unnamed_addr #18 !dbg !7208 {
  call void @llvm.dbg.value(metadata %struct.CCM_Type* undef, metadata !7212, metadata !DIExpression()), !dbg !7214
  call void @llvm.dbg.value(metadata i32 809024384, metadata !7213, metadata !DIExpression()), !dbg !7214
  store volatile i32 268435456, i32* inttoptr (i32 809024388 to i32*), align 4, !dbg !7215
  ret void, !dbg !7216
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @WDOG_DisablePowerdown() unnamed_addr #18 !dbg !7217 {
  call void @llvm.dbg.value(metadata %struct.WDOG_Type* inttoptr (i32 808058880 to %struct.WDOG_Type*), metadata !7222, metadata !DIExpression()), !dbg !7223
  %1 = load volatile i16, i16* inttoptr (i32 808058888 to i16*), align 8, !dbg !7224
  %2 = and i16 %1, -2, !dbg !7224
  store volatile i16 %2, i16* inttoptr (i32 808058888 to i16*), align 8, !dbg !7224
  ret void, !dbg !7225
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @RDC_SetDomainID() unnamed_addr #18 !dbg !7226 {
  call void @llvm.dbg.value(metadata %struct.RDC_Type* inttoptr (i32 809304064 to %struct.RDC_Type*), metadata !7230, metadata !DIExpression()), !dbg !7234
  call void @llvm.dbg.value(metadata i32 1, metadata !7231, metadata !DIExpression()), !dbg !7234
  call void @llvm.dbg.value(metadata i32 1, metadata !7232, metadata !DIExpression()), !dbg !7234
  call void @llvm.dbg.value(metadata i8 0, metadata !7233, metadata !DIExpression()), !dbg !7234
  store volatile i32 1, i32* inttoptr (i32 809304580 to i32*), align 4, !dbg !7235
  ret void, !dbg !7236
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !7237 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !7240, metadata !DIExpression()), !dbg !7248
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !7249
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #24, !dbg !7249
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !7241, metadata !DIExpression()), !dbg !7250
  call void @llvm.va_start(i8* nonnull %3), !dbg !7251
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !7252
  %5 = load i32, i32* %4, align 4, !dbg !7252
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !7252
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #25, !dbg !7252
  call void @llvm.va_end(i8* nonnull %3), !dbg !7253
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #24, !dbg !7254
  ret void, !dbg !7254
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !7255 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !7260, metadata !DIExpression()), !dbg !7261
  call void @llvm.dbg.value(metadata i8* %0, metadata !7259, metadata !DIExpression()), !dbg !7261
  tail call void @vprintk(i8* noundef %0, [1 x i32] %1) #25, !dbg !7262
  ret void, !dbg !7263
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_hexdump_print(i32 noundef %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #1 !dbg !7264 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7268, metadata !DIExpression()), !dbg !7272
  call void @llvm.dbg.value(metadata i8* %1, metadata !7269, metadata !DIExpression()), !dbg !7272
  call void @llvm.dbg.value(metadata i32 %2, metadata !7270, metadata !DIExpression()), !dbg !7272
  call void @llvm.dbg.value(metadata i8* %1, metadata !7271, metadata !DIExpression()), !dbg !7272
  %4 = icmp eq i32 %2, 0, !dbg !7273
  br i1 %4, label %14, label %5, !dbg !7274

5:                                                ; preds = %3
  %6 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.67(i32 noundef %0) #26, !dbg !7272
  %7 = zext i8 %6 to i32
  br label %8, !dbg !7274

8:                                                ; preds = %8, %5
  %9 = phi i8* [ %1, %5 ], [ %12, %8 ]
  %10 = phi i32 [ %2, %5 ], [ %11, %8 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !7271, metadata !DIExpression()), !dbg !7272
  call void @llvm.dbg.value(metadata i32 %10, metadata !7270, metadata !DIExpression()), !dbg !7272
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.68, i32 0, i32 0), i32 noundef %7) #25, !dbg !7275
  tail call fastcc void @minimal_hexdump_line_print(i8* noundef %9, i32 noundef %10) #26, !dbg !7277
  %11 = add i32 %10, -8
  %12 = getelementptr inbounds i8, i8* %9, i32 8
  %13 = icmp ult i32 %10, 9, !dbg !7278
  call void @llvm.dbg.value(metadata i32 %11, metadata !7270, metadata !DIExpression()), !dbg !7272
  call void @llvm.dbg.value(metadata i8* %12, metadata !7271, metadata !DIExpression()), !dbg !7272
  br i1 %13, label %14, label %8, !dbg !7278, !llvm.loop !7279

14:                                               ; preds = %8, %3
  ret void, !dbg !7281
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char.67(i32 noundef %0) unnamed_addr #5 !dbg !7282 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7284, metadata !DIExpression()), !dbg !7285
  %2 = add i32 %0, -1, !dbg !7286
  %3 = icmp ult i32 %2, 4, !dbg !7286
  %4 = shl i32 %2, 3, !dbg !7286
  %5 = lshr i32 1145657157, %4, !dbg !7286
  %6 = trunc i32 %5 to i8, !dbg !7286
  %7 = select i1 %3, i8 %6, i8 63, !dbg !7286
  ret i8 %7, !dbg !7287
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @minimal_hexdump_line_print(i8* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !7288 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7292, metadata !DIExpression()), !dbg !7303
  call void @llvm.dbg.value(metadata i32 %1, metadata !7293, metadata !DIExpression()), !dbg !7303
  call void @llvm.dbg.value(metadata i32 0, metadata !7294, metadata !DIExpression()), !dbg !7304
  br label %4, !dbg !7305

3:                                                ; preds = %12
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.69, i32 0, i32 0)) #25, !dbg !7306
  call void @llvm.dbg.value(metadata i32 0, metadata !7296, metadata !DIExpression()), !dbg !7307
  br label %16, !dbg !7308

4:                                                ; preds = %2, %12
  %5 = phi i32 [ 0, %2 ], [ %13, %12 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !7294, metadata !DIExpression()), !dbg !7304
  %6 = icmp ult i32 %5, %1, !dbg !7309
  br i1 %6, label %7, label %11, !dbg !7313

7:                                                ; preds = %4
  %8 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !7314
  %9 = load i8, i8* %8, align 1, !dbg !7314
  %10 = zext i8 %9 to i32, !dbg !7316
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.70, i32 0, i32 0), i32 noundef %10) #25, !dbg !7317
  br label %12, !dbg !7318

11:                                               ; preds = %4
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.71, i32 0, i32 0)) #25, !dbg !7319
  br label %12

12:                                               ; preds = %7, %11
  %13 = add nuw nsw i32 %5, 1, !dbg !7321
  call void @llvm.dbg.value(metadata i32 %13, metadata !7294, metadata !DIExpression()), !dbg !7304
  %14 = icmp eq i32 %13, 8, !dbg !7322
  br i1 %14, label %3, label %4, !dbg !7305, !llvm.loop !7323

15:                                               ; preds = %27
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6.72, i32 0, i32 0)) #25, !dbg !7325
  ret void, !dbg !7326

16:                                               ; preds = %3, %27
  %17 = phi i32 [ 0, %3 ], [ %28, %27 ]
  call void @llvm.dbg.value(metadata i32 %17, metadata !7296, metadata !DIExpression()), !dbg !7307
  %18 = icmp ult i32 %17, %1, !dbg !7327
  br i1 %18, label %19, label %26, !dbg !7328

19:                                               ; preds = %16
  %20 = getelementptr inbounds i8, i8* %0, i32 %17, !dbg !7329
  %21 = load i8, i8* %20, align 1, !dbg !7329
  call void @llvm.dbg.value(metadata i8 %21, metadata !7298, metadata !DIExpression()), !dbg !7330
  %22 = zext i8 %21 to i32, !dbg !7331
  %23 = tail call fastcc i32 @isprint(i32 noundef %22) #26, !dbg !7332
  %24 = icmp eq i32 %23, 0, !dbg !7333
  %25 = select i1 %24, i32 46, i32 %22, !dbg !7332
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4.73, i32 0, i32 0), i32 noundef %25) #25, !dbg !7334
  br label %27, !dbg !7335

26:                                               ; preds = %16
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5.74, i32 0, i32 0)) #25, !dbg !7336
  br label %27

27:                                               ; preds = %19, %26
  %28 = add nuw nsw i32 %17, 1, !dbg !7338
  call void @llvm.dbg.value(metadata i32 %28, metadata !7296, metadata !DIExpression()), !dbg !7307
  %29 = icmp eq i32 %28, 8, !dbg !7339
  br i1 %29, label %15, label %16, !dbg !7308, !llvm.loop !7340
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isprint(i32 noundef %0) unnamed_addr #5 !dbg !7342 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7344, metadata !DIExpression()), !dbg !7345
  %2 = add i32 %0, -32, !dbg !7346
  %3 = icmp ult i32 %2, 95, !dbg !7346
  %4 = zext i1 %3 to i32, !dbg !7346
  ret i32 %4, !dbg !7347
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !7348 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7397, metadata !DIExpression()), !dbg !7399
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !7398, metadata !DIExpression()), !dbg !7399
  %3 = icmp eq %struct.__esf* %1, null, !dbg !7400
  br i1 %3, label %5, label %4, !dbg !7402

4:                                                ; preds = %2
  tail call fastcc void @esf_dump(%struct.__esf* noundef nonnull %1) #26, !dbg !7403
  br label %5, !dbg !7405

5:                                                ; preds = %4, %2
  tail call void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) #25, !dbg !7406
  ret void, !dbg !7407
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @esf_dump(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !7408 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7412, metadata !DIExpression()), !dbg !7413
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !7414
  %3 = load i32, i32* %2, align 4, !dbg !7414
  %4 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 1, i32 0, !dbg !7414
  %5 = load i32, i32* %4, align 4, !dbg !7414
  %6 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 2, i32 0, !dbg !7414
  %7 = load i32, i32* %6, align 4, !dbg !7414
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.75, i32 0, i32 0), i32 noundef 69, i32 noundef %3, i32 noundef %5, i32 noundef %7) #25, !dbg !7414
  %8 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 3, i32 0, !dbg !7419
  %9 = load i32, i32* %8, align 4, !dbg !7419
  %10 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 4, i32 0, !dbg !7419
  %11 = load i32, i32* %10, align 4, !dbg !7419
  %12 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 5, i32 0, !dbg !7419
  %13 = load i32, i32* %12, align 4, !dbg !7419
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.76, i32 0, i32 0), i32 noundef 69, i32 noundef %9, i32 noundef %11, i32 noundef %13) #25, !dbg !7419
  %14 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 7, !dbg !7424
  %15 = load i32, i32* %14, align 4, !dbg !7424
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.2.77, i32 0, i32 0), i32 noundef 69, i32 noundef %15) #25, !dbg !7424
  %16 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !7429
  %17 = load i32, i32* %16, align 4, !dbg !7429
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.3.78, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #25, !dbg !7429
  ret void, !dbg !7434
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_do_kernel_oops(%struct.__esf* noundef %0, %struct._callee_saved* nocapture noundef readnone %1) local_unnamed_addr #1 !dbg !7435 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7452, metadata !DIExpression()), !dbg !7455
  call void @llvm.dbg.value(metadata %struct._callee_saved* %1, metadata !7453, metadata !DIExpression()), !dbg !7455
  %3 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !7456
  %4 = load i32, i32* %3, align 4, !dbg !7456
  call void @llvm.dbg.value(metadata i32 %4, metadata !7454, metadata !DIExpression()), !dbg !7455
  tail call void @z_arm_fatal_error(i32 noundef %4, %struct.__esf* noundef %0) #26, !dbg !7457
  ret void, !dbg !7458
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_syscall_oops(i8* nocapture noundef readonly %0) local_unnamed_addr #2 !dbg !7459 {
  %2 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !7463, metadata !DIExpression()), !dbg !7466
  call void @llvm.dbg.value(metadata i8* %0, metadata !7464, metadata !DIExpression()), !dbg !7466
  %3 = bitcast %struct.__esf* %2 to i8*, !dbg !7467
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #24, !dbg !7467
  call void @llvm.dbg.declare(metadata %struct.__esf* %2, metadata !7465, metadata !DIExpression()), !dbg !7468
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(32) %3, i8 0, i32 32, i1 false), !dbg !7468
  %4 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !7469
  %5 = bitcast i8* %4 to i32*, !dbg !7469
  %6 = load i32, i32* %5, align 4, !dbg !7469
  %7 = getelementptr inbounds %struct.__esf, %struct.__esf* %2, i32 0, i32 0, i32 6, i32 0, !dbg !7470
  store i32 %6, i32* %7, align 4, !dbg !7471
  call void @z_arm_fatal_error(i32 noundef 3, %struct.__esf* noundef nonnull %2) #26, !dbg !7472
  unreachable, !dbg !7473
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !7474 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7479, metadata !DIExpression()), !dbg !7480
  tail call fastcc void @__NVIC_EnableIRQ(i32 noundef %0) #26, !dbg !7481
  ret void, !dbg !7482
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !7483 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7487, metadata !DIExpression()), !dbg !7488
  %2 = icmp sgt i32 %0, -1, !dbg !7489
  br i1 %2, label %3, label %8, !dbg !7491

3:                                                ; preds = %1
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !7492, !srcloc !7494
  %4 = and i32 %0, 31, !dbg !7495
  %5 = shl nuw i32 1, %4, !dbg !7496
  %6 = lshr i32 %0, 5, !dbg !7497
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %6, !dbg !7498
  store volatile i32 %5, i32* %7, align 4, !dbg !7499
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !7500, !srcloc !7501
  br label %8, !dbg !7502

8:                                                ; preds = %3, %1
  ret void, !dbg !7503
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_disable(i32 noundef %0) local_unnamed_addr #1 !dbg !7504 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7506, metadata !DIExpression()), !dbg !7507
  tail call fastcc void @__NVIC_DisableIRQ(i32 noundef %0) #26, !dbg !7508
  ret void, !dbg !7509
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !7510 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7512, metadata !DIExpression()), !dbg !7513
  %2 = icmp sgt i32 %0, -1, !dbg !7514
  br i1 %2, label %3, label %8, !dbg !7516

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !7517
  %5 = shl nuw i32 1, %4, !dbg !7519
  %6 = lshr i32 %0, 5, !dbg !7520
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %6, !dbg !7521
  store volatile i32 %5, i32* %7, align 4, !dbg !7522
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #24, !dbg !7523, !srcloc !7527
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #24, !dbg !7528, !srcloc !7531
  br label %8, !dbg !7532

8:                                                ; preds = %3, %1
  ret void, !dbg !7533
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @arch_irq_is_enabled(i32 noundef %0) local_unnamed_addr #7 !dbg !7534 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7538, metadata !DIExpression()), !dbg !7539
  %2 = lshr i32 %0, 5, !dbg !7540
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %2, !dbg !7541
  %4 = load volatile i32, i32* %3, align 4, !dbg !7541
  %5 = and i32 %0, 31, !dbg !7542
  %6 = shl nuw i32 1, %5, !dbg !7542
  %7 = and i32 %4, %6, !dbg !7543
  ret i32 %7, !dbg !7544
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_irq_priority_set(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !7545 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7549, metadata !DIExpression()), !dbg !7552
  call void @llvm.dbg.value(metadata i32 %1, metadata !7550, metadata !DIExpression()), !dbg !7552
  call void @llvm.dbg.value(metadata i32 %2, metadata !7551, metadata !DIExpression()), !dbg !7552
  %4 = add i32 %1, 1, !dbg !7553
  call void @llvm.dbg.value(metadata i32 %4, metadata !7550, metadata !DIExpression()), !dbg !7552
  %5 = icmp ult i32 %4, 16, !dbg !7556
  br i1 %5, label %7, label %6, !dbg !7559

6:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.79, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1.80, i32 0, i32 0), i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2.81, i32 0, i32 0), i32 noundef 94) #25, !dbg !7560
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @.str.3.82, i32 0, i32 0), i32 noundef %1, i32 noundef %0, i32 noundef 15) #25, !dbg !7560
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2.81, i32 0, i32 0), i32 noundef 94) #25, !dbg !7560
  unreachable, !dbg !7560

7:                                                ; preds = %3
  tail call fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %4) #26, !dbg !7562
  ret void, !dbg !7563
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #18 !dbg !7564 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7568, metadata !DIExpression()), !dbg !7570
  call void @llvm.dbg.value(metadata i32 %1, metadata !7569, metadata !DIExpression()), !dbg !7570
  %3 = trunc i32 %1 to i8, !dbg !7571
  %4 = shl i8 %3, 4, !dbg !7571
  %5 = and i32 %0, 15, !dbg !7573
  %6 = add nsw i32 %5, -4, !dbg !7573
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !7573
  %8 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !7573
  %9 = icmp slt i32 %0, 0, !dbg !7573
  %10 = select i1 %9, i8* %7, i8* %8, !dbg !7573
  store volatile i8 %4, i8* %10, align 1, !dbg !7571
  ret void, !dbg !7574
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_irq_spurious(i8* nocapture noundef readnone %0) #1 !dbg !7575 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7577, metadata !DIExpression()), !dbg !7578
  tail call void @z_arm_fatal_error(i32 noundef 1, %struct.__esf* noundef null) #25, !dbg !7579
  ret void, !dbg !7580
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_nmi() local_unnamed_addr #1 !dbg !7581 {
  tail call void @z_SysNmiOnReset() #25, !dbg !7583
  tail call void @z_arm_int_exit() #25, !dbg !7584
  ret void, !dbg !7585
}

; Function Attrs: optsize
declare !dbg !7586 dso_local void @z_SysNmiOnReset() local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !7587 dso_local void @z_arm_int_exit() local_unnamed_addr #0

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_arm_prep_c() local_unnamed_addr #2 !dbg !7589 {
  tail call fastcc void @relocate_vector_table() #26, !dbg !7591
  tail call fastcc void @z_arm_floating_point_init() #26, !dbg !7592
  tail call void @z_bss_zero() #25, !dbg !7593
  tail call void @z_data_copy() #25, !dbg !7594
  tail call void @z_arm_interrupt_init() #25, !dbg !7595
  tail call void @z_cstart() #28, !dbg !7596
  unreachable, !dbg !7596
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @relocate_vector_table() unnamed_addr #1 !dbg !7597 {
  store volatile i32 and (i32 ptrtoint ([0 x i8]* @_vector_start to i32), i32 -128), i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !7598
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #24, !dbg !7599, !srcloc !7602
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #24, !dbg !7603, !srcloc !7606
  ret void, !dbg !7607
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_arm_floating_point_init() unnamed_addr #1 !dbg !7608 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !7609
  %2 = and i32 %1, -15728641, !dbg !7609
  store volatile i32 %2, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !7609
  %3 = tail call i32 asm sideeffect "MRS $0, control", "=r"() #24, !dbg !7610, !srcloc !7615
  call void @llvm.dbg.value(metadata i32 %3, metadata !7613, metadata !DIExpression()) #24, !dbg !7616
  %4 = and i32 %3, -5, !dbg !7617
  call void @llvm.dbg.value(metadata i32 %4, metadata !7618, metadata !DIExpression()) #24, !dbg !7623
  tail call void asm sideeffect "MSR control, $0", "r,~{memory}"(i32 %4) #24, !dbg !7625, !srcloc !7626
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #24, !dbg !7627, !srcloc !7606
  ret void, !dbg !7629
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @arch_swap(i32 noundef %0) local_unnamed_addr #1 !dbg !7630 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7633, metadata !DIExpression()), !dbg !7634
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7635
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 6, i32 0, !dbg !7636
  store i32 %0, i32* %3, align 8, !dbg !7637
  %4 = load i32, i32* @_k_neg_eagain, align 4, !dbg !7638
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 6, i32 1, !dbg !7639
  store i32 %4, i32* %5, align 4, !dbg !7640
  %6 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7641
  %7 = or i32 %6, 268435456, !dbg !7641
  store volatile i32 %7, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7641
  call void @llvm.dbg.value(metadata i32 0, metadata !7642, metadata !DIExpression()) #24, !dbg !7646
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #24, !dbg !7648, !srcloc !7649
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7650
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %8, i32 0, i32 6, i32 1, !dbg !7651
  %10 = load i32, i32* %9, align 4, !dbg !7651
  ret i32 %10, !dbg !7652
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @arch_new_thread(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* nocapture noundef readnone %1, i8* noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) local_unnamed_addr #12 !dbg !7653 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !7759, metadata !DIExpression()), !dbg !7767
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !7760, metadata !DIExpression()), !dbg !7767
  call void @llvm.dbg.value(metadata i8* %2, metadata !7761, metadata !DIExpression()), !dbg !7767
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !7762, metadata !DIExpression()), !dbg !7767
  call void @llvm.dbg.value(metadata i8* %4, metadata !7763, metadata !DIExpression()), !dbg !7767
  call void @llvm.dbg.value(metadata i8* %5, metadata !7764, metadata !DIExpression()), !dbg !7767
  call void @llvm.dbg.value(metadata i8* %6, metadata !7765, metadata !DIExpression()), !dbg !7767
  %8 = getelementptr inbounds i8, i8* %2, i32 -32, !dbg !7768
  call void @llvm.dbg.value(metadata i8* %8, metadata !7766, metadata !DIExpression()), !dbg !7767
  %9 = getelementptr inbounds i8, i8* %2, i32 -8, !dbg !7769
  %10 = bitcast i8* %9 to i32*, !dbg !7769
  store i32 and (i32 ptrtoint (void (void (i8*, i8*, i8*)*, i8*, i8*, i8*)* @z_thread_entry to i32), i32 -2), i32* %10, align 4, !dbg !7770
  %11 = ptrtoint void (i8*, i8*, i8*)* %3 to i32, !dbg !7771
  %12 = bitcast i8* %8 to i32*, !dbg !7772
  store i32 %11, i32* %12, align 4, !dbg !7773
  %13 = ptrtoint i8* %4 to i32, !dbg !7774
  %14 = getelementptr inbounds i8, i8* %2, i32 -28, !dbg !7775
  %15 = bitcast i8* %14 to i32*, !dbg !7775
  store i32 %13, i32* %15, align 4, !dbg !7776
  %16 = ptrtoint i8* %5 to i32, !dbg !7777
  %17 = getelementptr inbounds i8, i8* %2, i32 -24, !dbg !7778
  %18 = bitcast i8* %17 to i32*, !dbg !7778
  store i32 %16, i32* %18, align 4, !dbg !7779
  %19 = ptrtoint i8* %6 to i32, !dbg !7780
  %20 = getelementptr inbounds i8, i8* %2, i32 -20, !dbg !7781
  %21 = bitcast i8* %20 to i32*, !dbg !7781
  store i32 %19, i32* %21, align 4, !dbg !7782
  %22 = getelementptr inbounds i8, i8* %2, i32 -4, !dbg !7783
  %23 = bitcast i8* %22 to i32*, !dbg !7783
  store i32 16777216, i32* %23, align 4, !dbg !7784
  %24 = ptrtoint i8* %8 to i32, !dbg !7785
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 1, i32 8, !dbg !7786
  store i32 %24, i32* %25, align 8, !dbg !7787
  %26 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 0, !dbg !7788
  store i32 0, i32* %26, align 8, !dbg !7789
  ret void, !dbg !7790
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_switch_to_main_thread(%struct.k_thread* noundef %0, i8* noundef %1, void (i8*, i8*, i8*)* noundef %2) local_unnamed_addr #2 !dbg !7791 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !7795, metadata !DIExpression()), !dbg !7798
  call void @llvm.dbg.value(metadata i8* %1, metadata !7796, metadata !DIExpression()), !dbg !7798
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %2, metadata !7797, metadata !DIExpression()), !dbg !7798
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7799
  tail call void asm sideeffect "mov   r0,  $0\0A\09msr   PSP, $1\0A\09movs r1, #0\0A\09cpsie if\0A\09msr   BASEPRI, r1\0A\09isb\0A\09movs r2, #0\0A\09movs r3, #0\0A\09bl z_thread_entry\0A\09", "r,r,~{r0}"(void (i8*, i8*, i8*)* %2, i8* %1) #24, !dbg !7800, !srcloc !7801
  unreachable, !dbg !7802
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fault(i32 noundef %0, i32 noundef %1, i32 noundef %2, %struct._callee_saved* nocapture noundef readnone %3) local_unnamed_addr #1 !dbg !7803 {
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !7821, metadata !DIExpression()), !dbg !7831
  call void @llvm.dbg.value(metadata i32 %1, metadata !7822, metadata !DIExpression()), !dbg !7831
  call void @llvm.dbg.value(metadata i32 %2, metadata !7823, metadata !DIExpression()), !dbg !7831
  call void @llvm.dbg.value(metadata %struct._callee_saved* %3, metadata !7824, metadata !DIExpression()), !dbg !7831
  call void @llvm.dbg.value(metadata i32 0, metadata !7825, metadata !DIExpression()), !dbg !7831
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7832
  call void @llvm.dbg.value(metadata i32 %8, metadata !7826, metadata !DIExpression(DW_OP_constu, 511, DW_OP_and, DW_OP_stack_value)), !dbg !7831
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #24, !dbg !7833
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #24, !dbg !7833
  %9 = bitcast %struct.__esf* %7 to i8*, !dbg !7834
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #24, !dbg !7834
  call void @llvm.dbg.declare(metadata %struct.__esf* %7, metadata !7830, metadata !DIExpression()), !dbg !7835
  call void @llvm.dbg.value(metadata i32 0, metadata !7836, metadata !DIExpression()) #24, !dbg !7839
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #24, !dbg !7841, !srcloc !7842
  call void @llvm.dbg.value(metadata i8* %6, metadata !7828, metadata !DIExpression(DW_OP_deref)), !dbg !7831
  %10 = call fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef nonnull %6) #26, !dbg !7843
  call void @llvm.dbg.value(metadata %struct.__esf* %10, metadata !7829, metadata !DIExpression()), !dbg !7831
  %11 = icmp eq %struct.__esf* %10, null, !dbg !7844
  br i1 %11, label %12, label %13, !dbg !7847

12:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.85, i32 0, i32 0), i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1.86, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.87, i32 0, i32 0), i32 noundef 1057) #25, !dbg !7848
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([62 x i8], [62 x i8]* @.str.3.88, i32 0, i32 0)) #25, !dbg !7848
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.87, i32 0, i32 0), i32 noundef 1057) #25, !dbg !7848
  unreachable, !dbg !7848

13:                                               ; preds = %4
  %14 = and i32 %8, 511, !dbg !7850
  call void @llvm.dbg.value(metadata i32 %14, metadata !7826, metadata !DIExpression()), !dbg !7831
  call void @llvm.dbg.value(metadata i8* %5, metadata !7827, metadata !DIExpression(DW_OP_deref)), !dbg !7831
  %15 = call fastcc i32 @fault_handle(%struct.__esf* noundef nonnull %10, i32 noundef %14, i8* noundef nonnull %5) #26, !dbg !7851
  call void @llvm.dbg.value(metadata i32 %15, metadata !7825, metadata !DIExpression()), !dbg !7831
  %16 = load i8, i8* %5, align 1, !dbg !7852, !range !7854
  call void @llvm.dbg.value(metadata i8 %16, metadata !7827, metadata !DIExpression()), !dbg !7831
  %17 = icmp eq i8 %16, 0, !dbg !7852
  br i1 %17, label %18, label %35, !dbg !7855

18:                                               ; preds = %13
  %19 = bitcast %struct.__esf* %10 to i8*, !dbg !7856
  %20 = call i8* @memcpy(i8* noundef nonnull %9, i8* noundef nonnull %19, i32 noundef 32) #25, !dbg !7857
  %21 = load i8, i8* %6, align 1, !dbg !7858, !range !7854
  call void @llvm.dbg.value(metadata i8 %21, metadata !7828, metadata !DIExpression()), !dbg !7831
  %22 = icmp eq i8 %21, 0, !dbg !7858
  %23 = getelementptr inbounds %struct.__esf, %struct.__esf* %7, i32 0, i32 0, i32 7, !dbg !7860
  %24 = load i32, i32* %23, align 4, !dbg !7860
  br i1 %22, label %30, label %25, !dbg !7861

25:                                               ; preds = %18
  %26 = and i32 %24, 511, !dbg !7862
  %27 = icmp eq i32 %26, 0, !dbg !7865
  br i1 %27, label %28, label %34, !dbg !7866

28:                                               ; preds = %25
  %29 = or i32 %24, 511, !dbg !7867
  br label %32, !dbg !7869

30:                                               ; preds = %18
  %31 = and i32 %24, -512, !dbg !7870
  br label %32

32:                                               ; preds = %30, %28
  %33 = phi i32 [ %29, %28 ], [ %31, %30 ]
  store i32 %33, i32* %23, align 4, !dbg !7860
  br label %34, !dbg !7872

34:                                               ; preds = %32, %25
  call void @z_arm_fatal_error(i32 noundef %15, %struct.__esf* noundef nonnull %7) #25, !dbg !7872
  br label %35, !dbg !7873

35:                                               ; preds = %13, %34
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #24, !dbg !7873
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #24, !dbg !7873
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #24, !dbg !7873
  ret void, !dbg !7873
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* nocapture noundef writeonly %3) unnamed_addr #1 !dbg !7874 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7879, metadata !DIExpression()), !dbg !7885
  call void @llvm.dbg.value(metadata i32 %1, metadata !7880, metadata !DIExpression()), !dbg !7885
  call void @llvm.dbg.value(metadata i32 %2, metadata !7881, metadata !DIExpression()), !dbg !7885
  call void @llvm.dbg.value(metadata i8* %3, metadata !7882, metadata !DIExpression()), !dbg !7885
  call void @llvm.dbg.value(metadata i8 0, metadata !7883, metadata !DIExpression()), !dbg !7885
  call void @llvm.dbg.value(metadata %struct.__esf* null, metadata !7884, metadata !DIExpression()), !dbg !7885
  store i8 0, i8* %3, align 1, !dbg !7886
  %5 = icmp ugt i32 %2, -16777217, !dbg !7887
  br i1 %5, label %6, label %17, !dbg !7889

6:                                                ; preds = %4
  %7 = and i32 %2, 12, !dbg !7890
  %8 = icmp eq i32 %7, 8, !dbg !7890
  br i1 %8, label %9, label %10, !dbg !7890

9:                                                ; preds = %6
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.4.100, i32 0, i32 0), i32 noundef 69) #25, !dbg !7892
  br label %17, !dbg !7898

10:                                               ; preds = %6
  %11 = and i32 %2, 8, !dbg !7899
  %12 = icmp eq i32 %11, 0, !dbg !7899
  br i1 %12, label %13, label %14, !dbg !7900

13:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i32 %0, metadata !7884, metadata !DIExpression()), !dbg !7885
  store i8 1, i8* %3, align 1, !dbg !7903
  br label %14

14:                                               ; preds = %10, %13
  %15 = phi i32 [ %0, %13 ], [ %1, %10 ]
  %16 = inttoptr i32 %15 to %struct.__esf*, !dbg !7885
  call void @llvm.dbg.value(metadata %struct.__esf* %16, metadata !7884, metadata !DIExpression()), !dbg !7885
  br label %17, !dbg !7906

17:                                               ; preds = %4, %14, %9
  %18 = phi %struct.__esf* [ %16, %14 ], [ null, %9 ], [ null, %4 ], !dbg !7885
  ret %struct.__esf* %18, !dbg !7907
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @fault_handle(%struct.__esf* nocapture noundef readonly %0, i32 noundef %1, i8* nocapture noundef %2) unnamed_addr #1 !dbg !7908 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7912, metadata !DIExpression()), !dbg !7916
  call void @llvm.dbg.value(metadata i32 %1, metadata !7913, metadata !DIExpression()), !dbg !7916
  call void @llvm.dbg.value(metadata i8* %2, metadata !7914, metadata !DIExpression()), !dbg !7916
  call void @llvm.dbg.value(metadata i32 0, metadata !7915, metadata !DIExpression()), !dbg !7916
  store i8 0, i8* %2, align 1, !dbg !7917
  switch i32 %1, label %10 [
    i32 3, label %4
    i32 4, label %6
    i32 5, label %7
    i32 6, label %8
    i32 12, label %9
  ], !dbg !7918

4:                                                ; preds = %3
  %5 = tail call fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* noundef nonnull %2) #26, !dbg !7919
  call void @llvm.dbg.value(metadata i32 %5, metadata !7915, metadata !DIExpression()), !dbg !7916
  br label %11, !dbg !7921

6:                                                ; preds = %3
  tail call fastcc void @mem_manage_fault(i32 noundef 0, i8* noundef nonnull %2) #26, !dbg !7922
  call void @llvm.dbg.value(metadata i32 0, metadata !7915, metadata !DIExpression()), !dbg !7916
  br label %11, !dbg !7923

7:                                                ; preds = %3
  tail call fastcc void @bus_fault(i32 noundef 0, i8* noundef nonnull %2) #26, !dbg !7924
  call void @llvm.dbg.value(metadata i32 0, metadata !7915, metadata !DIExpression()), !dbg !7916
  br label %11, !dbg !7925

8:                                                ; preds = %3
  tail call fastcc void @usage_fault() #26, !dbg !7926
  call void @llvm.dbg.value(metadata i32 0, metadata !7915, metadata !DIExpression()), !dbg !7916
  br label %11, !dbg !7927

9:                                                ; preds = %3
  tail call fastcc void @debug_monitor(i8* noundef nonnull %2) #26, !dbg !7928
  br label %11, !dbg !7929

10:                                               ; preds = %3
  tail call fastcc void @reserved_exception(i32 noundef %1) #26, !dbg !7930
  br label %11, !dbg !7931

11:                                               ; preds = %4, %6, %7, %8, %9, %10
  %12 = phi i32 [ 0, %10 ], [ 0, %9 ], [ 0, %8 ], [ 0, %7 ], [ 0, %6 ], [ %5, %4 ], !dbg !7916
  call void @llvm.dbg.value(metadata i32 %12, metadata !7915, metadata !DIExpression()), !dbg !7916
  ret i32 %12, !dbg !7932
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @hard_fault(%struct.__esf* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !7933 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7937, metadata !DIExpression()), !dbg !7940
  call void @llvm.dbg.value(metadata i8* %1, metadata !7938, metadata !DIExpression()), !dbg !7940
  call void @llvm.dbg.value(metadata i32 0, metadata !7939, metadata !DIExpression()), !dbg !7940
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5.92, i32 0, i32 0), i32 noundef 69) #25, !dbg !7941
  store i8 0, i8* %1, align 1, !dbg !7946
  %3 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !7947
  %4 = and i32 %3, 2, !dbg !7949
  %5 = icmp eq i32 %4, 0, !dbg !7950
  br i1 %5, label %7, label %6, !dbg !7951

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.93, i32 0, i32 0), i32 noundef 69) #25, !dbg !7952
  br label %37, !dbg !7958

7:                                                ; preds = %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !7959
  %9 = icmp sgt i32 %8, -1, !dbg !7961
  br i1 %9, label %11, label %10, !dbg !7962

10:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.7.94, i32 0, i32 0), i32 noundef 69) #25, !dbg !7963
  br label %37, !dbg !7969

11:                                               ; preds = %7
  %12 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !7970
  %13 = and i32 %12, 1073741824, !dbg !7972
  %14 = icmp eq i32 %13, 0, !dbg !7973
  br i1 %14, label %36, label %15, !dbg !7974

15:                                               ; preds = %11
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.8.95, i32 0, i32 0), i32 noundef 69) #25, !dbg !7975
  %16 = tail call fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* noundef %0) #26, !dbg !7981
  br i1 %16, label %17, label %21, !dbg !7983

17:                                               ; preds = %15
  %18 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !7984
  %19 = load i32, i32* %18, align 4, !dbg !7984
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.9.96, i32 0, i32 0), i32 noundef 69, i32 noundef %19) #25, !dbg !7984
  %20 = load i32, i32* %18, align 4, !dbg !7990
  call void @llvm.dbg.value(metadata i32 %20, metadata !7939, metadata !DIExpression()), !dbg !7940
  br label %37, !dbg !7991

21:                                               ; preds = %15
  %22 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7992
  %23 = and i32 %22, 255, !dbg !7994
  %24 = icmp eq i32 %23, 0, !dbg !7995
  br i1 %24, label %26, label %25, !dbg !7996

25:                                               ; preds = %21
  tail call fastcc void @mem_manage_fault(i32 noundef 1, i8* noundef nonnull %1) #26, !dbg !7997
  call void @llvm.dbg.value(metadata i32 0, metadata !7939, metadata !DIExpression()), !dbg !7940
  br label %37, !dbg !7999

26:                                               ; preds = %21
  %27 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8000
  %28 = and i32 %27, 65280, !dbg !8002
  %29 = icmp eq i32 %28, 0, !dbg !8003
  br i1 %29, label %31, label %30, !dbg !8004

30:                                               ; preds = %26
  tail call fastcc void @bus_fault(i32 noundef 1, i8* noundef nonnull %1) #26, !dbg !8005
  call void @llvm.dbg.value(metadata i32 0, metadata !7939, metadata !DIExpression()), !dbg !7940
  br label %37, !dbg !8007

31:                                               ; preds = %26
  %32 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8008
  %33 = icmp ult i32 %32, 65536, !dbg !8010
  br i1 %33, label %35, label %34, !dbg !8011

34:                                               ; preds = %31
  tail call fastcc void @usage_fault() #26, !dbg !8012
  call void @llvm.dbg.value(metadata i32 0, metadata !7939, metadata !DIExpression()), !dbg !7940
  br label %37

35:                                               ; preds = %31
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.85, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.97, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.87, i32 0, i32 0), i32 noundef 755) #25, !dbg !8014
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.11.98, i32 0, i32 0)) #25, !dbg !8014
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.87, i32 0, i32 0), i32 noundef 755) #25, !dbg !8014
  unreachable, !dbg !8014

36:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.85, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.97, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.87, i32 0, i32 0), i32 noundef 760) #25, !dbg !8019
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.12.99, i32 0, i32 0)) #25, !dbg !8019
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.87, i32 0, i32 0), i32 noundef 760) #25, !dbg !8019
  unreachable, !dbg !8019

37:                                               ; preds = %10, %17, %30, %34, %25, %6
  %38 = phi i32 [ 0, %6 ], [ 0, %10 ], [ %20, %17 ], [ 0, %25 ], [ 0, %30 ], [ 0, %34 ], !dbg !7940
  call void @llvm.dbg.value(metadata i32 %38, metadata !7939, metadata !DIExpression()), !dbg !7940
  ret i32 %38, !dbg !8024
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @mem_manage_fault(i32 noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !8025 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !8027, metadata !DIExpression()), !dbg !8035
  call void @llvm.dbg.value(metadata i32 %0, metadata !8028, metadata !DIExpression()), !dbg !8035
  call void @llvm.dbg.value(metadata i8* %1, metadata !8029, metadata !DIExpression()), !dbg !8035
  call void @llvm.dbg.value(metadata i32 0, metadata !8030, metadata !DIExpression()), !dbg !8035
  call void @llvm.dbg.value(metadata i32 -22, metadata !8031, metadata !DIExpression()), !dbg !8035
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.13.90, i32 0, i32 0), i32 noundef 69) #25, !dbg !8036
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8041
  %4 = and i32 %3, 16, !dbg !8043
  %5 = icmp eq i32 %4, 0, !dbg !8044
  br i1 %5, label %7, label %6, !dbg !8045

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([56 x i8], [56 x i8]* @.str.14.91, i32 0, i32 0), i32 noundef 69) #25, !dbg !8046
  br label %7, !dbg !8052

7:                                                ; preds = %6, %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8053
  %9 = and i32 %8, 8, !dbg !8055
  %10 = icmp eq i32 %9, 0, !dbg !8056
  br i1 %10, label %12, label %11, !dbg !8057

11:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.15, i32 0, i32 0), i32 noundef 69) #25, !dbg !8058
  br label %12, !dbg !8064

12:                                               ; preds = %11, %7
  %13 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8065
  %14 = and i32 %13, 2, !dbg !8066
  %15 = icmp eq i32 %14, 0, !dbg !8067
  br i1 %15, label %26, label %16, !dbg !8068

16:                                               ; preds = %12
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.16, i32 0, i32 0), i32 noundef 69) #25, !dbg !8069
  %17 = load volatile i32, i32* inttoptr (i32 -536810188 to i32*), align 4, !dbg !8074
  call void @llvm.dbg.value(metadata i32 %17, metadata !8032, metadata !DIExpression()), !dbg !8075
  %18 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8076
  %19 = and i32 %18, 128, !dbg !8078
  %20 = icmp eq i32 %19, 0, !dbg !8079
  br i1 %20, label %26, label %21, !dbg !8080

21:                                               ; preds = %16
  call void @llvm.dbg.value(metadata i32 %17, metadata !8031, metadata !DIExpression()), !dbg !8035
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.17, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #25, !dbg !8081
  %22 = icmp eq i32 %0, 0, !dbg !8087
  br i1 %22, label %26, label %23, !dbg !8089

23:                                               ; preds = %21
  %24 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8090
  %25 = and i32 %24, -129, !dbg !8090
  store volatile i32 %25, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8090
  br label %26, !dbg !8092

26:                                               ; preds = %16, %23, %21, %12
  call void @llvm.dbg.value(metadata i32 undef, metadata !8031, metadata !DIExpression()), !dbg !8035
  %27 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8093
  %28 = and i32 %27, 1, !dbg !8095
  %29 = icmp eq i32 %28, 0, !dbg !8096
  br i1 %29, label %31, label %30, !dbg !8097

30:                                               ; preds = %26
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.18, i32 0, i32 0), i32 noundef 69) #25, !dbg !8098
  br label %31, !dbg !8104

31:                                               ; preds = %30, %26
  %32 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8105
  %33 = and i32 %32, 32, !dbg !8107
  %34 = icmp eq i32 %33, 0, !dbg !8108
  br i1 %34, label %36, label %35, !dbg !8109

35:                                               ; preds = %31
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.19, i32 0, i32 0), i32 noundef 69) #25, !dbg !8110
  br label %36, !dbg !8116

36:                                               ; preds = %35, %31
  %37 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8117
  %38 = and i32 %37, 16, !dbg !8119
  %39 = icmp eq i32 %38, 0, !dbg !8119
  br i1 %39, label %40, label %44, !dbg !8120

40:                                               ; preds = %36
  %41 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8121
  %42 = and i32 %41, 2, !dbg !8122
  %43 = icmp eq i32 %42, 0, !dbg !8122
  br i1 %43, label %49, label %44, !dbg !8123

44:                                               ; preds = %40, %36
  %45 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8124
  %46 = and i32 %45, 16, !dbg !8124
  %47 = icmp eq i32 %46, 0, !dbg !8124
  br i1 %47, label %49, label %48, !dbg !8128

48:                                               ; preds = %44
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.85, i32 0, i32 0), i8* noundef getelementptr inbounds ([74 x i8], [74 x i8]* @.str.20, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.87, i32 0, i32 0), i32 noundef 350) #25, !dbg !8129
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([100 x i8], [100 x i8]* @.str.21, i32 0, i32 0)) #25, !dbg !8129
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.87, i32 0, i32 0), i32 noundef 350) #25, !dbg !8129
  unreachable, !dbg !8129

49:                                               ; preds = %44, %40
  %50 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8131
  %51 = and i32 %50, 32, !dbg !8133
  %52 = icmp eq i32 %51, 0, !dbg !8134
  br i1 %52, label %56, label %53, !dbg !8135

53:                                               ; preds = %49
  %54 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !8136
  %55 = and i32 %54, -8193, !dbg !8136
  store volatile i32 %55, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !8136
  br label %56, !dbg !8138

56:                                               ; preds = %53, %49
  %57 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8139
  %58 = or i32 %57, 255, !dbg !8139
  store volatile i32 %58, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8139
  store i8 0, i8* %1, align 1, !dbg !8140
  ret void, !dbg !8141
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @bus_fault(i32 noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !8142 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !8146, metadata !DIExpression()), !dbg !8153
  call void @llvm.dbg.value(metadata i32 %0, metadata !8147, metadata !DIExpression()), !dbg !8153
  call void @llvm.dbg.value(metadata i8* %1, metadata !8148, metadata !DIExpression()), !dbg !8153
  call void @llvm.dbg.value(metadata i32 0, metadata !8149, metadata !DIExpression()), !dbg !8153
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.22, i32 0, i32 0), i32 noundef 69) #25, !dbg !8154
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8159
  %4 = and i32 %3, 4096, !dbg !8161
  %5 = icmp eq i32 %4, 0, !dbg !8161
  br i1 %5, label %7, label %6, !dbg !8162

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.23, i32 0, i32 0), i32 noundef 69) #25, !dbg !8163
  br label %7, !dbg !8169

7:                                                ; preds = %6, %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8170
  %9 = and i32 %8, 2048, !dbg !8172
  %10 = icmp eq i32 %9, 0, !dbg !8172
  br i1 %10, label %12, label %11, !dbg !8173

11:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.15, i32 0, i32 0), i32 noundef 69) #25, !dbg !8174
  br label %12, !dbg !8180

12:                                               ; preds = %11, %7
  %13 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8181
  %14 = and i32 %13, 512, !dbg !8182
  %15 = icmp eq i32 %14, 0, !dbg !8182
  br i1 %15, label %26, label %16, !dbg !8183

16:                                               ; preds = %12
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.24, i32 0, i32 0), i32 noundef 69) #25, !dbg !8184
  %17 = load volatile i32, i32* inttoptr (i32 -536810184 to i32*), align 8, !dbg !8189
  call void @llvm.dbg.value(metadata i32 %17, metadata !8150, metadata !DIExpression()), !dbg !8190
  %18 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8191
  %19 = and i32 %18, 32768, !dbg !8193
  %20 = icmp eq i32 %19, 0, !dbg !8194
  br i1 %20, label %26, label %21, !dbg !8195

21:                                               ; preds = %16
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.25.89, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #25, !dbg !8196
  %22 = icmp eq i32 %0, 0, !dbg !8202
  br i1 %22, label %26, label %23, !dbg !8204

23:                                               ; preds = %21
  %24 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8205
  %25 = and i32 %24, -32769, !dbg !8205
  store volatile i32 %25, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8205
  br label %26, !dbg !8207

26:                                               ; preds = %16, %23, %21, %12
  %27 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8208
  %28 = and i32 %27, 1024, !dbg !8210
  %29 = icmp eq i32 %28, 0, !dbg !8210
  br i1 %29, label %31, label %30, !dbg !8211

30:                                               ; preds = %26
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.26, i32 0, i32 0), i32 noundef 69) #25, !dbg !8212
  br label %31, !dbg !8218

31:                                               ; preds = %30, %26
  %32 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8219
  %33 = and i32 %32, 256, !dbg !8221
  %34 = icmp eq i32 %33, 0, !dbg !8222
  br i1 %34, label %35, label %39, !dbg !8223

35:                                               ; preds = %31
  %36 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8224
  %37 = and i32 %36, 8192, !dbg !8226
  %38 = icmp eq i32 %37, 0, !dbg !8226
  br i1 %38, label %41, label %39, !dbg !8227

39:                                               ; preds = %35, %31
  %40 = phi i8* [ getelementptr inbounds ([29 x i8], [29 x i8]* @.str.27, i32 0, i32 0), %31 ], [ getelementptr inbounds ([52 x i8], [52 x i8]* @.str.19, i32 0, i32 0), %35 ]
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef %40, i32 noundef 69) #25, !dbg !8228
  br label %41, !dbg !8229

41:                                               ; preds = %39, %35
  %42 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8229
  %43 = or i32 %42, 65280, !dbg !8229
  store volatile i32 %43, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8229
  store i8 0, i8* %1, align 1, !dbg !8230
  ret void, !dbg !8231
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @usage_fault() unnamed_addr #1 !dbg !8232 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !8238, metadata !DIExpression()), !dbg !8240
  call void @llvm.dbg.value(metadata i32 0, metadata !8239, metadata !DIExpression()), !dbg !8240
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.28, i32 0, i32 0), i32 noundef 69) #25, !dbg !8241
  %1 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8246
  %2 = and i32 %1, 33554432, !dbg !8248
  %3 = icmp eq i32 %2, 0, !dbg !8249
  br i1 %3, label %5, label %4, !dbg !8250

4:                                                ; preds = %0
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.29, i32 0, i32 0), i32 noundef 69) #25, !dbg !8251
  br label %5, !dbg !8257

5:                                                ; preds = %4, %0
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8258
  %7 = and i32 %6, 16777216, !dbg !8260
  %8 = icmp eq i32 %7, 0, !dbg !8261
  br i1 %8, label %10, label %9, !dbg !8262

9:                                                ; preds = %5
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.30, i32 0, i32 0), i32 noundef 69) #25, !dbg !8263
  br label %10, !dbg !8269

10:                                               ; preds = %9, %5
  %11 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8270
  %12 = and i32 %11, 524288, !dbg !8272
  %13 = icmp eq i32 %12, 0, !dbg !8273
  br i1 %13, label %15, label %14, !dbg !8274

14:                                               ; preds = %10
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.31, i32 0, i32 0), i32 noundef 69) #25, !dbg !8275
  br label %15, !dbg !8281

15:                                               ; preds = %14, %10
  %16 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8282
  %17 = and i32 %16, 262144, !dbg !8284
  %18 = icmp eq i32 %17, 0, !dbg !8285
  br i1 %18, label %20, label %19, !dbg !8286

19:                                               ; preds = %15
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.32, i32 0, i32 0), i32 noundef 69) #25, !dbg !8287
  br label %20, !dbg !8293

20:                                               ; preds = %19, %15
  %21 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8294
  %22 = and i32 %21, 131072, !dbg !8296
  %23 = icmp eq i32 %22, 0, !dbg !8297
  br i1 %23, label %25, label %24, !dbg !8298

24:                                               ; preds = %20
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.33, i32 0, i32 0), i32 noundef 69) #25, !dbg !8299
  br label %25, !dbg !8305

25:                                               ; preds = %24, %20
  %26 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8306
  %27 = and i32 %26, 65536, !dbg !8308
  %28 = icmp eq i32 %27, 0, !dbg !8309
  br i1 %28, label %30, label %29, !dbg !8310

29:                                               ; preds = %25
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.34, i32 0, i32 0), i32 noundef 69) #25, !dbg !8311
  br label %30, !dbg !8317

30:                                               ; preds = %29, %25
  %31 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8318
  %32 = or i32 %31, -65536, !dbg !8318
  store volatile i32 %32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8318
  ret void, !dbg !8319
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @debug_monitor(i8* nocapture noundef writeonly %0) unnamed_addr #1 !dbg !8320 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !8324, metadata !DIExpression()), !dbg !8326
  call void @llvm.dbg.value(metadata i8* %0, metadata !8325, metadata !DIExpression()), !dbg !8326
  store i8 0, i8* %0, align 1, !dbg !8327
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.35, i32 0, i32 0), i32 noundef 69) #25, !dbg !8328
  ret void, !dbg !8333
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @reserved_exception(i32 noundef %0) unnamed_addr #1 !dbg !8334 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !8338, metadata !DIExpression()), !dbg !8340
  call void @llvm.dbg.value(metadata i32 %0, metadata !8339, metadata !DIExpression()), !dbg !8340
  %2 = icmp slt i32 %0, 16, !dbg !8341
  %3 = select i1 %2, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.37, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.38, i32 0, i32 0), !dbg !8341
  %4 = add nsw i32 %0, -16, !dbg !8341
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.36, i32 0, i32 0), i32 noundef 69, i8* noundef %3, i32 noundef %4) #25, !dbg !8341
  ret void, !dbg !8346
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !8347 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !8351, metadata !DIExpression()), !dbg !8354
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !8355
  %3 = load i32, i32* %2, align 4, !dbg !8355
  %4 = inttoptr i32 %3 to i16*, !dbg !8356
  call void @llvm.dbg.value(metadata i16* %4, metadata !8352, metadata !DIExpression()), !dbg !8354
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8357
  %6 = or i32 %5, 256, !dbg !8357
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8357
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #24, !dbg !8358, !srcloc !8361
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #24, !dbg !8362, !srcloc !8365
  %7 = getelementptr inbounds i16, i16* %4, i32 -1, !dbg !8366
  %8 = load i16, i16* %7, align 2, !dbg !8367
  call void @llvm.dbg.value(metadata i16 %8, metadata !8353, metadata !DIExpression()), !dbg !8354
  %9 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8368
  %10 = and i32 %9, -257, !dbg !8368
  store volatile i32 %10, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8368
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #24, !dbg !8369, !srcloc !8361
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #24, !dbg !8371, !srcloc !8365
  %11 = icmp eq i16 %8, -8446, !dbg !8373
  ret i1 %11, !dbg !8375
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_fault_init() local_unnamed_addr #18 !dbg !8376 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8377
  %2 = or i32 %1, 16, !dbg !8377
  store volatile i32 %2, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8377
  ret void, !dbg !8378
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_interrupt_init() local_unnamed_addr #18 !dbg !8379 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8382, metadata !DIExpression()), !dbg !8383
  br label %1, !dbg !8384

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !8382, metadata !DIExpression()), !dbg !8383
  tail call fastcc void @__NVIC_SetPriority.103(i32 noundef %2) #26, !dbg !8386
  %3 = add nuw nsw i32 %2, 1, !dbg !8389
  call void @llvm.dbg.value(metadata i32 %3, metadata !8382, metadata !DIExpression()), !dbg !8383
  %4 = icmp eq i32 %3, 127, !dbg !8390
  br i1 %4, label %5, label %1, !dbg !8384, !llvm.loop !8391

5:                                                ; preds = %1
  ret void, !dbg !8393
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.103(i32 noundef %0) unnamed_addr #18 !dbg !8394 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8396, metadata !DIExpression()), !dbg !8398
  call void @llvm.dbg.value(metadata i32 1, metadata !8397, metadata !DIExpression()), !dbg !8398
  %2 = and i32 %0, 15, !dbg !8399
  %3 = add nsw i32 %2, -4, !dbg !8399
  %4 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %3, !dbg !8399
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !8399
  %6 = icmp slt i32 %0, 0, !dbg !8399
  %7 = select i1 %6, i8* %4, i8* %5, !dbg !8399
  store volatile i8 16, i8* %7, align 1, !dbg !8400
  ret void, !dbg !8402
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !8403 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !8505, metadata !DIExpression()), !dbg !8506
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !8507
  %3 = icmp eq %struct.k_thread* %2, %0, !dbg !8509
  br i1 %3, label %4, label %12, !dbg !8510

4:                                                ; preds = %1
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #24, !dbg !8511, !srcloc !8523
  call void @llvm.dbg.value(metadata i32 %5, metadata !8514, metadata !DIExpression()) #24, !dbg !8524
  %6 = icmp eq i32 %5, 0, !dbg !8525
  br i1 %6, label %12, label %7, !dbg !8526

7:                                                ; preds = %4
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !8527
  %9 = or i32 %8, 268435456, !dbg !8527
  store volatile i32 %9, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !8527
  %10 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !8529
  %11 = and i32 %10, -32769, !dbg !8529
  store volatile i32 %11, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !8529
  br label %12, !dbg !8530

12:                                               ; preds = %4, %7, %1
  tail call void @z_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !8531
  ret void, !dbg !8532
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #17 !dbg !8533 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8540, metadata !DIExpression()), !dbg !8543
  call void @llvm.dbg.value(metadata i8* %1, metadata !8541, metadata !DIExpression()), !dbg !8543
  call void @llvm.dbg.value(metadata i8* %0, metadata !8542, metadata !DIExpression()), !dbg !8543
  %3 = load i8, i8* %1, align 1, !dbg !8544
  %4 = icmp eq i8 %3, 0, !dbg !8545
  br i1 %4, label %13, label %5, !dbg !8546

5:                                                ; preds = %2, %5
  %6 = phi i8 [ %11, %5 ], [ %3, %2 ]
  %7 = phi i8* [ %9, %5 ], [ %0, %2 ]
  %8 = phi i8* [ %10, %5 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8* %7, metadata !8540, metadata !DIExpression()), !dbg !8543
  call void @llvm.dbg.value(metadata i8* %8, metadata !8541, metadata !DIExpression()), !dbg !8543
  store i8 %6, i8* %7, align 1, !dbg !8547
  %9 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !8549
  call void @llvm.dbg.value(metadata i8* %9, metadata !8540, metadata !DIExpression()), !dbg !8543
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !8550
  call void @llvm.dbg.value(metadata i8* %10, metadata !8541, metadata !DIExpression()), !dbg !8543
  %11 = load i8, i8* %10, align 1, !dbg !8544
  %12 = icmp eq i8 %11, 0, !dbg !8545
  br i1 %12, label %13, label %5, !dbg !8546, !llvm.loop !8551

13:                                               ; preds = %5, %2
  %14 = phi i8* [ %0, %2 ], [ %9, %5 ]
  store i8 0, i8* %14, align 1, !dbg !8553
  ret i8* %0, !dbg !8554
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #17 !dbg !8555 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8559, metadata !DIExpression()), !dbg !8563
  call void @llvm.dbg.value(metadata i8* %1, metadata !8560, metadata !DIExpression()), !dbg !8563
  call void @llvm.dbg.value(metadata i32 %2, metadata !8561, metadata !DIExpression()), !dbg !8563
  call void @llvm.dbg.value(metadata i8* %0, metadata !8562, metadata !DIExpression()), !dbg !8563
  %4 = icmp eq i32 %2, 0, !dbg !8564
  br i1 %4, label %22, label %5, !dbg !8565

5:                                                ; preds = %3, %11
  %6 = phi i8* [ %13, %11 ], [ %0, %3 ]
  %7 = phi i32 [ %14, %11 ], [ %2, %3 ]
  %8 = phi i8* [ %12, %11 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !8559, metadata !DIExpression()), !dbg !8563
  call void @llvm.dbg.value(metadata i32 %7, metadata !8561, metadata !DIExpression()), !dbg !8563
  call void @llvm.dbg.value(metadata i8* %8, metadata !8560, metadata !DIExpression()), !dbg !8563
  %9 = load i8, i8* %8, align 1, !dbg !8566
  %10 = icmp eq i8 %9, 0, !dbg !8567
  br i1 %10, label %16, label %11, !dbg !8568

11:                                               ; preds = %5
  store i8 %9, i8* %6, align 1, !dbg !8569
  %12 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !8571
  call void @llvm.dbg.value(metadata i8* %12, metadata !8560, metadata !DIExpression()), !dbg !8563
  %13 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !8572
  call void @llvm.dbg.value(metadata i8* %13, metadata !8559, metadata !DIExpression()), !dbg !8563
  %14 = add i32 %7, -1, !dbg !8573
  call void @llvm.dbg.value(metadata i32 %14, metadata !8561, metadata !DIExpression()), !dbg !8563
  %15 = icmp eq i32 %14, 0, !dbg !8564
  br i1 %15, label %22, label %5, !dbg !8565, !llvm.loop !8574

16:                                               ; preds = %5, %16
  %17 = phi i8* [ %19, %16 ], [ %6, %5 ]
  %18 = phi i32 [ %20, %16 ], [ %7, %5 ]
  call void @llvm.dbg.value(metadata i8* %17, metadata !8559, metadata !DIExpression()), !dbg !8563
  call void @llvm.dbg.value(metadata i32 %18, metadata !8561, metadata !DIExpression()), !dbg !8563
  store i8 0, i8* %17, align 1, !dbg !8576
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !8578
  call void @llvm.dbg.value(metadata i8* %19, metadata !8559, metadata !DIExpression()), !dbg !8563
  %20 = add i32 %18, -1, !dbg !8579
  call void @llvm.dbg.value(metadata i32 %20, metadata !8561, metadata !DIExpression()), !dbg !8563
  %21 = icmp eq i32 %20, 0, !dbg !8580
  br i1 %21, label %22, label %16, !dbg !8581, !llvm.loop !8582

22:                                               ; preds = %11, %16, %3
  ret i8* %0, !dbg !8584
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #11 !dbg !8585 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8589, metadata !DIExpression()), !dbg !8592
  call void @llvm.dbg.value(metadata i32 %1, metadata !8590, metadata !DIExpression()), !dbg !8592
  call void @llvm.dbg.value(metadata i32 %1, metadata !8591, metadata !DIExpression()), !dbg !8592
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !8593

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  call void @llvm.dbg.value(metadata i8* %5, metadata !8589, metadata !DIExpression()), !dbg !8592
  %6 = load i8, i8* %5, align 1, !dbg !8594
  %7 = icmp eq i8 %6, %3, !dbg !8595
  %8 = icmp eq i8 %6, 0
  %9 = or i1 %7, %8, !dbg !8596
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !8597
  call void @llvm.dbg.value(metadata i8* %10, metadata !8589, metadata !DIExpression()), !dbg !8592
  br i1 %9, label %11, label %4, !dbg !8596, !llvm.loop !8599

11:                                               ; preds = %4
  %12 = select i1 %7, i8* %5, i8* null, !dbg !8601
  ret i8* %12, !dbg !8602
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strrchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #11 !dbg !8603 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8605, metadata !DIExpression()), !dbg !8608
  call void @llvm.dbg.value(metadata i32 %1, metadata !8606, metadata !DIExpression()), !dbg !8608
  call void @llvm.dbg.value(metadata i8* null, metadata !8607, metadata !DIExpression()), !dbg !8608
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !8609

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  %6 = phi i8* [ null, %2 ], [ %9, %4 ], !dbg !8608
  call void @llvm.dbg.value(metadata i8* %6, metadata !8607, metadata !DIExpression()), !dbg !8608
  call void @llvm.dbg.value(metadata i8* %5, metadata !8605, metadata !DIExpression()), !dbg !8608
  %7 = load i8, i8* %5, align 1, !dbg !8610
  %8 = icmp eq i8 %7, %3, !dbg !8613
  %9 = select i1 %8, i8* %5, i8* %6, !dbg !8614
  call void @llvm.dbg.value(metadata i8* %9, metadata !8607, metadata !DIExpression()), !dbg !8608
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !8615
  call void @llvm.dbg.value(metadata i8* %10, metadata !8605, metadata !DIExpression()), !dbg !8608
  %11 = icmp eq i8 %7, 0, !dbg !8616
  br i1 %11, label %12, label %4, !dbg !8616, !llvm.loop !8617

12:                                               ; preds = %4
  ret i8* %9, !dbg !8619
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strlen(i8* nocapture noundef readonly %0) local_unnamed_addr #11 !dbg !8620 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8624, metadata !DIExpression()), !dbg !8626
  call void @llvm.dbg.value(metadata i32 0, metadata !8625, metadata !DIExpression()), !dbg !8626
  %2 = load i8, i8* %0, align 1, !dbg !8627
  %3 = icmp eq i8 %2, 0, !dbg !8628
  br i1 %3, label %11, label %4, !dbg !8629

4:                                                ; preds = %1, %4
  %5 = phi i32 [ %8, %4 ], [ 0, %1 ]
  %6 = phi i8* [ %7, %4 ], [ %0, %1 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !8625, metadata !DIExpression()), !dbg !8626
  call void @llvm.dbg.value(metadata i8* %6, metadata !8624, metadata !DIExpression()), !dbg !8626
  %7 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !8630
  call void @llvm.dbg.value(metadata i8* %7, metadata !8624, metadata !DIExpression()), !dbg !8626
  %8 = add i32 %5, 1, !dbg !8632
  call void @llvm.dbg.value(metadata i32 %8, metadata !8625, metadata !DIExpression()), !dbg !8626
  %9 = load i8, i8* %7, align 1, !dbg !8627
  %10 = icmp eq i8 %9, 0, !dbg !8628
  br i1 %10, label %11, label %4, !dbg !8629, !llvm.loop !8633

11:                                               ; preds = %4, %1
  %12 = phi i32 [ 0, %1 ], [ %8, %4 ], !dbg !8626
  ret i32 %12, !dbg !8635
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strnlen(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #11 !dbg !8636 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8640, metadata !DIExpression()), !dbg !8643
  call void @llvm.dbg.value(metadata i32 %1, metadata !8641, metadata !DIExpression()), !dbg !8643
  call void @llvm.dbg.value(metadata i32 0, metadata !8642, metadata !DIExpression()), !dbg !8643
  %3 = load i8, i8* %0, align 1, !dbg !8644
  %4 = icmp ne i8 %3, 0, !dbg !8645
  %5 = icmp ne i32 %1, 0, !dbg !8646
  %6 = and i1 %4, %5, !dbg !8646
  br i1 %6, label %7, label %16, !dbg !8647

7:                                                ; preds = %2, %7
  %8 = phi i32 [ %11, %7 ], [ 0, %2 ]
  %9 = phi i8* [ %10, %7 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !8642, metadata !DIExpression()), !dbg !8643
  call void @llvm.dbg.value(metadata i8* %9, metadata !8640, metadata !DIExpression()), !dbg !8643
  %10 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !8648
  call void @llvm.dbg.value(metadata i8* %10, metadata !8640, metadata !DIExpression()), !dbg !8643
  %11 = add nuw i32 %8, 1, !dbg !8650
  call void @llvm.dbg.value(metadata i32 %11, metadata !8642, metadata !DIExpression()), !dbg !8643
  %12 = load i8, i8* %10, align 1, !dbg !8644
  %13 = icmp ne i8 %12, 0, !dbg !8645
  %14 = icmp ult i32 %11, %1, !dbg !8646
  %15 = select i1 %13, i1 %14, i1 false, !dbg !8646
  br i1 %15, label %7, label %16, !dbg !8647, !llvm.loop !8651

16:                                               ; preds = %7, %2
  %17 = phi i32 [ 0, %2 ], [ %11, %7 ], !dbg !8643
  ret i32 %17, !dbg !8653
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1) local_unnamed_addr #11 !dbg !8654 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8658, metadata !DIExpression()), !dbg !8660
  call void @llvm.dbg.value(metadata i8* %1, metadata !8659, metadata !DIExpression()), !dbg !8660
  %3 = load i8, i8* %0, align 1, !dbg !8661
  %4 = load i8, i8* %1, align 1, !dbg !8662
  %5 = icmp ne i8 %3, %4, !dbg !8663
  %6 = icmp eq i8 %3, 0
  %7 = or i1 %6, %5, !dbg !8664
  br i1 %7, label %18, label %8, !dbg !8664

8:                                                ; preds = %2, %8
  %9 = phi i8* [ %12, %8 ], [ %1, %2 ]
  %10 = phi i8* [ %11, %8 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !8659, metadata !DIExpression()), !dbg !8660
  call void @llvm.dbg.value(metadata i8* %10, metadata !8658, metadata !DIExpression()), !dbg !8660
  %11 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !8665
  call void @llvm.dbg.value(metadata i8* %11, metadata !8658, metadata !DIExpression()), !dbg !8660
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !8667
  call void @llvm.dbg.value(metadata i8* %12, metadata !8659, metadata !DIExpression()), !dbg !8660
  %13 = load i8, i8* %11, align 1, !dbg !8661
  %14 = load i8, i8* %12, align 1, !dbg !8662
  %15 = icmp ne i8 %13, %14, !dbg !8663
  %16 = icmp eq i8 %13, 0
  %17 = or i1 %16, %15, !dbg !8664
  br i1 %17, label %18, label %8, !dbg !8664, !llvm.loop !8668

18:                                               ; preds = %8, %2
  %19 = phi i8 [ %3, %2 ], [ %13, %8 ], !dbg !8661
  %20 = phi i8 [ %4, %2 ], [ %14, %8 ], !dbg !8662
  %21 = zext i8 %19 to i32, !dbg !8671
  %22 = zext i8 %20 to i32, !dbg !8672
  %23 = sub nsw i32 %21, %22, !dbg !8673
  ret i32 %23, !dbg !8674
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strncmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #11 !dbg !8675 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8679, metadata !DIExpression()), !dbg !8682
  call void @llvm.dbg.value(metadata i8* %1, metadata !8680, metadata !DIExpression()), !dbg !8682
  call void @llvm.dbg.value(metadata i32 %2, metadata !8681, metadata !DIExpression()), !dbg !8682
  %4 = icmp eq i32 %2, 0, !dbg !8683
  br i1 %4, label %23, label %5, !dbg !8683

5:                                                ; preds = %3, %14
  %6 = phi i32 [ %17, %14 ], [ %2, %3 ]
  %7 = phi i8* [ %16, %14 ], [ %1, %3 ]
  %8 = phi i8* [ %15, %14 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !8681, metadata !DIExpression()), !dbg !8682
  call void @llvm.dbg.value(metadata i8* %7, metadata !8680, metadata !DIExpression()), !dbg !8682
  call void @llvm.dbg.value(metadata i8* %8, metadata !8679, metadata !DIExpression()), !dbg !8682
  %9 = load i8, i8* %8, align 1, !dbg !8684
  %10 = load i8, i8* %7, align 1, !dbg !8685
  %11 = icmp ne i8 %9, %10, !dbg !8686
  %12 = icmp eq i8 %9, 0
  %13 = or i1 %12, %11, !dbg !8687
  br i1 %13, label %19, label %14, !dbg !8687

14:                                               ; preds = %5
  %15 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !8688
  call void @llvm.dbg.value(metadata i8* %15, metadata !8679, metadata !DIExpression()), !dbg !8682
  %16 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !8690
  call void @llvm.dbg.value(metadata i8* %16, metadata !8680, metadata !DIExpression()), !dbg !8682
  %17 = add i32 %6, -1, !dbg !8691
  call void @llvm.dbg.value(metadata i32 %17, metadata !8681, metadata !DIExpression()), !dbg !8682
  %18 = icmp eq i32 %17, 0, !dbg !8683
  br i1 %18, label %23, label %5, !dbg !8683, !llvm.loop !8692

19:                                               ; preds = %5
  %20 = zext i8 %9 to i32, !dbg !8695
  %21 = zext i8 %10 to i32, !dbg !8696
  %22 = sub nsw i32 %20, %21, !dbg !8697
  br label %23, !dbg !8698

23:                                               ; preds = %14, %3, %19
  %24 = phi i32 [ %22, %19 ], [ 0, %3 ], [ 0, %14 ], !dbg !8698
  ret i32 %24, !dbg !8699
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strtok_r(i8* noundef %0, i8* noundef readonly %1, i8** nocapture noundef %2) local_unnamed_addr #17 !dbg !8700 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8704, metadata !DIExpression()), !dbg !8709
  call void @llvm.dbg.value(metadata i8* %1, metadata !8705, metadata !DIExpression()), !dbg !8709
  call void @llvm.dbg.value(metadata i8** %2, metadata !8706, metadata !DIExpression()), !dbg !8709
  %4 = icmp eq i8* %0, null, !dbg !8710
  br i1 %4, label %5, label %7, !dbg !8710

5:                                                ; preds = %3
  %6 = load i8*, i8** %2, align 4, !dbg !8711
  br label %7, !dbg !8710

7:                                                ; preds = %3, %5
  %8 = phi i8* [ %6, %5 ], [ %0, %3 ], !dbg !8710
  call void @llvm.dbg.value(metadata i8* %8, metadata !8707, metadata !DIExpression()), !dbg !8709
  %9 = load i8, i8* %8, align 1, !dbg !8712
  %10 = icmp eq i8 %9, 0, !dbg !8712
  br i1 %10, label %33, label %11, !dbg !8713

11:                                               ; preds = %7, %17
  %12 = phi i8 [ %19, %17 ], [ %9, %7 ]
  %13 = phi i8* [ %18, %17 ], [ %8, %7 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !8707, metadata !DIExpression()), !dbg !8709
  %14 = zext i8 %12 to i32, !dbg !8712
  %15 = tail call i8* @strchr(i8* noundef %1, i32 noundef %14) #26, !dbg !8714
  %16 = icmp eq i8* %15, null, !dbg !8713
  br i1 %16, label %21, label %17, !dbg !8715

17:                                               ; preds = %11
  %18 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !8716
  call void @llvm.dbg.value(metadata i8* %18, metadata !8707, metadata !DIExpression()), !dbg !8709
  %19 = load i8, i8* %18, align 1, !dbg !8712
  %20 = icmp eq i8 %19, 0, !dbg !8712
  br i1 %20, label %33, label %11, !dbg !8713, !llvm.loop !8718

21:                                               ; preds = %11, %27
  %22 = phi i8 [ %29, %27 ], [ %12, %11 ]
  %23 = phi i8* [ %28, %27 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i8* %23, metadata !8708, metadata !DIExpression()), !dbg !8709
  %24 = zext i8 %22 to i32, !dbg !8720
  %25 = tail call i8* @strchr(i8* noundef %1, i32 noundef %24) #26, !dbg !8721
  %26 = icmp eq i8* %25, null, !dbg !8722
  br i1 %26, label %27, label %31, !dbg !8723

27:                                               ; preds = %21
  %28 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !8724
  call void @llvm.dbg.value(metadata i8* %28, metadata !8708, metadata !DIExpression()), !dbg !8709
  %29 = load i8, i8* %28, align 1, !dbg !8720
  %30 = icmp eq i8 %29, 0, !dbg !8720
  br i1 %30, label %33, label %21, !dbg !8726, !llvm.loop !8727

31:                                               ; preds = %21
  store i8 0, i8* %23, align 1, !dbg !8729
  %32 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !8732
  br label %33, !dbg !8733

33:                                               ; preds = %17, %27, %7, %31
  %34 = phi i8* [ %32, %31 ], [ %8, %7 ], [ %28, %27 ], [ %18, %17 ], !dbg !8709
  %35 = phi i8* [ %13, %31 ], [ null, %7 ], [ %13, %27 ], [ null, %17 ], !dbg !8709
  store i8* %34, i8** %2, align 4, !dbg !8709
  ret i8* %35, !dbg !8734
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #17 !dbg !8735 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8737, metadata !DIExpression()), !dbg !8739
  call void @llvm.dbg.value(metadata i8* %1, metadata !8738, metadata !DIExpression()), !dbg !8739
  %3 = tail call i32 @strlen(i8* noundef %0) #26, !dbg !8740
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !8741
  %5 = tail call i8* @strcpy(i8* noundef %4, i8* noundef %1) #26, !dbg !8742
  ret i8* %0, !dbg !8743
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #17 !dbg !8744 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8746, metadata !DIExpression()), !dbg !8751
  call void @llvm.dbg.value(metadata i8* %1, metadata !8747, metadata !DIExpression()), !dbg !8751
  call void @llvm.dbg.value(metadata i32 %2, metadata !8748, metadata !DIExpression()), !dbg !8751
  call void @llvm.dbg.value(metadata i8* %0, metadata !8749, metadata !DIExpression()), !dbg !8751
  %4 = tail call i32 @strlen(i8* noundef %0) #26, !dbg !8752
  call void @llvm.dbg.value(metadata i32 %4, metadata !8750, metadata !DIExpression()), !dbg !8751
  %5 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !8753
  call void @llvm.dbg.value(metadata i8* %5, metadata !8746, metadata !DIExpression()), !dbg !8751
  call void @llvm.dbg.value(metadata i8* %1, metadata !8747, metadata !DIExpression()), !dbg !8751
  call void @llvm.dbg.value(metadata i32 %2, metadata !8748, metadata !DIExpression()), !dbg !8751
  call void @llvm.dbg.value(metadata i32 %2, metadata !8748, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !8751
  %6 = icmp eq i32 %2, 0, !dbg !8754
  br i1 %6, label %18, label %7, !dbg !8755

7:                                                ; preds = %3, %14
  %8 = phi i32 [ %11, %14 ], [ %2, %3 ]
  %9 = phi i8* [ %16, %14 ], [ %5, %3 ]
  %10 = phi i8* [ %15, %14 ], [ %1, %3 ]
  %11 = add i32 %8, -1, !dbg !8756
  call void @llvm.dbg.value(metadata i8* %9, metadata !8746, metadata !DIExpression()), !dbg !8751
  call void @llvm.dbg.value(metadata i8* %10, metadata !8747, metadata !DIExpression()), !dbg !8751
  %12 = load i8, i8* %10, align 1, !dbg !8757
  %13 = icmp eq i8 %12, 0, !dbg !8758
  br i1 %13, label %18, label %14, !dbg !8759

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !8760
  call void @llvm.dbg.value(metadata i8* %15, metadata !8747, metadata !DIExpression()), !dbg !8751
  %16 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !8762
  call void @llvm.dbg.value(metadata i8* %16, metadata !8746, metadata !DIExpression()), !dbg !8751
  store i8 %12, i8* %9, align 1, !dbg !8763
  call void @llvm.dbg.value(metadata i32 %11, metadata !8748, metadata !DIExpression()), !dbg !8751
  call void @llvm.dbg.value(metadata i32 %11, metadata !8748, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !8751
  %17 = icmp eq i32 %11, 0, !dbg !8754
  br i1 %17, label %18, label %7, !dbg !8755, !llvm.loop !8764

18:                                               ; preds = %7, %14, %3
  %19 = phi i8* [ %5, %3 ], [ %16, %14 ], [ %9, %7 ], !dbg !8751
  store i8 0, i8* %19, align 1, !dbg !8766
  ret i8* %0, !dbg !8767
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @memcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #11 !dbg !8768 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8772, metadata !DIExpression()), !dbg !8777
  call void @llvm.dbg.value(metadata i8* %1, metadata !8773, metadata !DIExpression()), !dbg !8777
  call void @llvm.dbg.value(metadata i32 %2, metadata !8774, metadata !DIExpression()), !dbg !8777
  call void @llvm.dbg.value(metadata i8* %0, metadata !8775, metadata !DIExpression()), !dbg !8777
  call void @llvm.dbg.value(metadata i8* %1, metadata !8776, metadata !DIExpression()), !dbg !8777
  %4 = icmp eq i32 %2, 0, !dbg !8778
  br i1 %4, label %31, label %5, !dbg !8780

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !8776, metadata !DIExpression()), !dbg !8777
  call void @llvm.dbg.value(metadata i8* %0, metadata !8775, metadata !DIExpression()), !dbg !8777
  call void @llvm.dbg.value(metadata i32 %2, metadata !8774, metadata !DIExpression()), !dbg !8777
  %6 = add i32 %2, -1, !dbg !8781
  call void @llvm.dbg.value(metadata i32 %6, metadata !8774, metadata !DIExpression()), !dbg !8777
  %7 = icmp eq i32 %6, 0, !dbg !8782
  br i1 %7, label %23, label %8, !dbg !8783

8:                                                ; preds = %5
  %9 = getelementptr i8, i8* %0, i32 %6, !dbg !8784
  %10 = getelementptr i8, i8* %1, i32 %6, !dbg !8784
  br label %11, !dbg !8784

11:                                               ; preds = %8, %18
  %12 = phi i32 [ %21, %18 ], [ %6, %8 ]
  %13 = phi i8* [ %20, %18 ], [ %1, %8 ]
  %14 = phi i8* [ %19, %18 ], [ %0, %8 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !8776, metadata !DIExpression()), !dbg !8777
  call void @llvm.dbg.value(metadata i8* %14, metadata !8775, metadata !DIExpression()), !dbg !8777
  %15 = load i8, i8* %14, align 1, !dbg !8785
  %16 = load i8, i8* %13, align 1, !dbg !8786
  %17 = icmp eq i8 %15, %16, !dbg !8787
  br i1 %17, label %18, label %23, !dbg !8784

18:                                               ; preds = %11
  %19 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !8788
  call void @llvm.dbg.value(metadata i8* %19, metadata !8775, metadata !DIExpression()), !dbg !8777
  %20 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !8790
  call void @llvm.dbg.value(metadata i8* %20, metadata !8776, metadata !DIExpression()), !dbg !8777
  call void @llvm.dbg.value(metadata i32 %12, metadata !8774, metadata !DIExpression()), !dbg !8777
  %21 = add i32 %12, -1, !dbg !8781
  call void @llvm.dbg.value(metadata i32 %21, metadata !8774, metadata !DIExpression()), !dbg !8777
  %22 = icmp eq i32 %21, 0, !dbg !8782
  br i1 %22, label %23, label %11, !dbg !8783, !llvm.loop !8791

23:                                               ; preds = %11, %18, %5
  %24 = phi i8* [ %0, %5 ], [ %9, %18 ], [ %14, %11 ], !dbg !8777
  %25 = phi i8* [ %1, %5 ], [ %10, %18 ], [ %13, %11 ], !dbg !8777
  %26 = load i8, i8* %24, align 1, !dbg !8793
  %27 = zext i8 %26 to i32, !dbg !8793
  %28 = load i8, i8* %25, align 1, !dbg !8794
  %29 = zext i8 %28 to i32, !dbg !8794
  %30 = sub nsw i32 %27, %29, !dbg !8795
  br label %31, !dbg !8796

31:                                               ; preds = %3, %23
  %32 = phi i32 [ %30, %23 ], [ 0, %3 ], !dbg !8777
  ret i32 %32, !dbg !8797
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memmove(i8* noundef returned %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #17 !dbg !8798 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8802, metadata !DIExpression()), !dbg !8807
  call void @llvm.dbg.value(metadata i8* %1, metadata !8803, metadata !DIExpression()), !dbg !8807
  call void @llvm.dbg.value(metadata i32 %2, metadata !8804, metadata !DIExpression()), !dbg !8807
  call void @llvm.dbg.value(metadata i8* %0, metadata !8805, metadata !DIExpression()), !dbg !8807
  call void @llvm.dbg.value(metadata i8* %1, metadata !8806, metadata !DIExpression()), !dbg !8807
  %4 = ptrtoint i8* %0 to i32, !dbg !8808
  %5 = ptrtoint i8* %1 to i32, !dbg !8808
  %6 = sub i32 %4, %5, !dbg !8808
  %7 = icmp ult i32 %6, %2, !dbg !8810
  br i1 %7, label %10, label %8, !dbg !8811

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !8806, metadata !DIExpression()), !dbg !8807
  call void @llvm.dbg.value(metadata i8* %0, metadata !8805, metadata !DIExpression()), !dbg !8807
  call void @llvm.dbg.value(metadata i32 %2, metadata !8804, metadata !DIExpression()), !dbg !8807
  %9 = icmp eq i32 %2, 0, !dbg !8812
  br i1 %9, label %26, label %17, !dbg !8814

10:                                               ; preds = %3, %10
  %11 = phi i32 [ %12, %10 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !8804, metadata !DIExpression()), !dbg !8807
  %12 = add i32 %11, -1, !dbg !8815
  call void @llvm.dbg.value(metadata i32 %12, metadata !8804, metadata !DIExpression()), !dbg !8807
  %13 = getelementptr inbounds i8, i8* %1, i32 %12, !dbg !8818
  %14 = load i8, i8* %13, align 1, !dbg !8818
  %15 = getelementptr inbounds i8, i8* %0, i32 %12, !dbg !8819
  store i8 %14, i8* %15, align 1, !dbg !8820
  %16 = icmp eq i32 %12, 0, !dbg !8821
  br i1 %16, label %26, label %10, !dbg !8822, !llvm.loop !8823

17:                                               ; preds = %8, %17
  %18 = phi i8* [ %23, %17 ], [ %1, %8 ]
  %19 = phi i8* [ %22, %17 ], [ %0, %8 ]
  %20 = phi i32 [ %24, %17 ], [ %2, %8 ]
  call void @llvm.dbg.value(metadata i8* %18, metadata !8806, metadata !DIExpression()), !dbg !8807
  call void @llvm.dbg.value(metadata i8* %19, metadata !8805, metadata !DIExpression()), !dbg !8807
  call void @llvm.dbg.value(metadata i32 %20, metadata !8804, metadata !DIExpression()), !dbg !8807
  %21 = load i8, i8* %18, align 1, !dbg !8825
  store i8 %21, i8* %19, align 1, !dbg !8827
  %22 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !8828
  call void @llvm.dbg.value(metadata i8* %22, metadata !8805, metadata !DIExpression()), !dbg !8807
  %23 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !8829
  call void @llvm.dbg.value(metadata i8* %23, metadata !8806, metadata !DIExpression()), !dbg !8807
  %24 = add i32 %20, -1, !dbg !8830
  call void @llvm.dbg.value(metadata i32 %24, metadata !8804, metadata !DIExpression()), !dbg !8807
  %25 = icmp eq i32 %24, 0, !dbg !8812
  br i1 %25, label %26, label %17, !dbg !8814, !llvm.loop !8831

26:                                               ; preds = %17, %10, %8
  ret i8* %0, !dbg !8833
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #17 !dbg !8834 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8840, metadata !DIExpression()), !dbg !8845
  call void @llvm.dbg.value(metadata i8* %1, metadata !8841, metadata !DIExpression()), !dbg !8845
  call void @llvm.dbg.value(metadata i32 %2, metadata !8842, metadata !DIExpression()), !dbg !8845
  call void @llvm.dbg.value(metadata i8* %0, metadata !8843, metadata !DIExpression()), !dbg !8845
  call void @llvm.dbg.value(metadata i8* %1, metadata !8844, metadata !DIExpression()), !dbg !8845
  %4 = icmp eq i32 %2, 0, !dbg !8846
  br i1 %4, label %14, label %5, !dbg !8847

5:                                                ; preds = %3, %5
  %6 = phi i8* [ %9, %5 ], [ %1, %3 ]
  %7 = phi i8* [ %11, %5 ], [ %0, %3 ]
  %8 = phi i32 [ %12, %5 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !8844, metadata !DIExpression()), !dbg !8845
  call void @llvm.dbg.value(metadata i8* %7, metadata !8843, metadata !DIExpression()), !dbg !8845
  call void @llvm.dbg.value(metadata i32 %8, metadata !8842, metadata !DIExpression()), !dbg !8845
  %9 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !8848
  call void @llvm.dbg.value(metadata i8* %9, metadata !8844, metadata !DIExpression()), !dbg !8845
  %10 = load i8, i8* %6, align 1, !dbg !8850
  %11 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !8851
  call void @llvm.dbg.value(metadata i8* %11, metadata !8843, metadata !DIExpression()), !dbg !8845
  store i8 %10, i8* %7, align 1, !dbg !8852
  %12 = add i32 %8, -1, !dbg !8853
  call void @llvm.dbg.value(metadata i32 %12, metadata !8842, metadata !DIExpression()), !dbg !8845
  %13 = icmp eq i32 %12, 0, !dbg !8846
  br i1 %13, label %14, label %5, !dbg !8847, !llvm.loop !8854

14:                                               ; preds = %5, %3
  ret i8* %0, !dbg !8856
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local i8* @memset(i8* noundef returned writeonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #19 !dbg !8857 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8861, metadata !DIExpression()), !dbg !8866
  call void @llvm.dbg.value(metadata i32 %1, metadata !8862, metadata !DIExpression()), !dbg !8866
  call void @llvm.dbg.value(metadata i32 %2, metadata !8863, metadata !DIExpression()), !dbg !8866
  call void @llvm.dbg.value(metadata i8* %0, metadata !8864, metadata !DIExpression()), !dbg !8866
  %4 = trunc i32 %1 to i8, !dbg !8867
  call void @llvm.dbg.value(metadata i8 %4, metadata !8865, metadata !DIExpression()), !dbg !8866
  call void @llvm.dbg.value(metadata i32 %2, metadata !8863, metadata !DIExpression()), !dbg !8866
  call void @llvm.dbg.value(metadata i8* %0, metadata !8864, metadata !DIExpression()), !dbg !8866
  %5 = icmp eq i32 %2, 0, !dbg !8868
  br i1 %5, label %12, label %6, !dbg !8869

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %10, %6 ], [ %2, %3 ]
  %8 = phi i8* [ %9, %6 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !8863, metadata !DIExpression()), !dbg !8866
  call void @llvm.dbg.value(metadata i8* %8, metadata !8864, metadata !DIExpression()), !dbg !8866
  %9 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !8870
  call void @llvm.dbg.value(metadata i8* %9, metadata !8864, metadata !DIExpression()), !dbg !8866
  store i8 %4, i8* %8, align 1, !dbg !8872
  %10 = add i32 %7, -1, !dbg !8873
  call void @llvm.dbg.value(metadata i32 %10, metadata !8863, metadata !DIExpression()), !dbg !8866
  %11 = icmp eq i32 %10, 0, !dbg !8868
  br i1 %11, label %12, label %6, !dbg !8869, !llvm.loop !8874

12:                                               ; preds = %6, %3
  ret i8* %0, !dbg !8876
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @memchr(i8* noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #11 !dbg !8877 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8881, metadata !DIExpression()), !dbg !8887
  call void @llvm.dbg.value(metadata i32 %1, metadata !8882, metadata !DIExpression()), !dbg !8887
  call void @llvm.dbg.value(metadata i32 %2, metadata !8883, metadata !DIExpression()), !dbg !8887
  %4 = icmp eq i32 %2, 0, !dbg !8888
  br i1 %4, label %17, label %5, !dbg !8889

5:                                                ; preds = %3
  %6 = trunc i32 %1 to i8
  br label %7, !dbg !8890

7:                                                ; preds = %5, %7
  %8 = phi i32 [ %13, %7 ], [ %2, %5 ]
  %9 = phi i8* [ %12, %7 ], [ %0, %5 ], !dbg !8891
  call void @llvm.dbg.value(metadata i8* %9, metadata !8884, metadata !DIExpression()), !dbg !8891
  call void @llvm.dbg.value(metadata i32 %8, metadata !8883, metadata !DIExpression()), !dbg !8887
  call void @llvm.dbg.value(metadata i8* %9, metadata !8884, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !8891
  %10 = load i8, i8* %9, align 1, !dbg !8892
  %11 = icmp eq i8 %10, %6, !dbg !8895
  %12 = getelementptr inbounds i8, i8* %9, i32 1
  %13 = add i32 %8, -1
  %14 = icmp eq i32 %13, 0
  %15 = select i1 %11, i1 true, i1 %14, !dbg !8896
  call void @llvm.dbg.value(metadata i8* %12, metadata !8884, metadata !DIExpression()), !dbg !8891
  call void @llvm.dbg.value(metadata i32 %13, metadata !8883, metadata !DIExpression()), !dbg !8887
  br i1 %15, label %16, label %7, !dbg !8896, !llvm.loop !8897

16:                                               ; preds = %7
  br i1 %11, label %18, label %17

17:                                               ; preds = %16, %3
  br label %18, !dbg !8899

18:                                               ; preds = %16, %17
  %19 = phi i8* [ %9, %16 ], [ null, %17 ], !dbg !8887
  ret i8* %19, !dbg !8900
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__stdout_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #12 !dbg !8901 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !8903, metadata !DIExpression()), !dbg !8904
  store i32 (i32)* %0, i32 (i32)** @_stdout_hook, align 4, !dbg !8905
  ret void, !dbg !8906
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @_stdout_hook_default(i32 noundef %0) #5 !dbg !8907 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8909, metadata !DIExpression()), !dbg !8910
  ret i32 -1, !dbg !8911
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !8912 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8916, metadata !DIExpression()), !dbg !8918
  call void @llvm.dbg.value(metadata i32* %1, metadata !8917, metadata !DIExpression()), !dbg !8918
  %3 = ptrtoint i32* %1 to i32, !dbg !8919
  %4 = and i32 %3, -2, !dbg !8919
  %5 = icmp eq i32 %4, 2, !dbg !8919
  br i1 %5, label %6, label %9, !dbg !8919

6:                                                ; preds = %2
  %7 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !8920
  %8 = tail call i32 %7(i32 noundef %0) #25, !dbg !8920
  br label %9, !dbg !8921

9:                                                ; preds = %2, %6
  %10 = phi i32 [ %8, %6 ], [ -1, %2 ], !dbg !8921
  ret i32 %10, !dbg !8922
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !8923 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8925, metadata !DIExpression()), !dbg !8927
  call void @llvm.dbg.value(metadata i32* %1, metadata !8926, metadata !DIExpression()), !dbg !8927
  %3 = tail call fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) #26, !dbg !8928
  ret i32 %3, !dbg !8929
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) unnamed_addr #1 !dbg !8930 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8933, metadata !DIExpression()), !dbg !8935
  call void @llvm.dbg.value(metadata i32* %1, metadata !8934, metadata !DIExpression()), !dbg !8935
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !8936, !srcloc !8938
  %3 = tail call i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) #26, !dbg !8939
  ret i32 %3, !dbg !8940
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputs(i8* noalias noundef %0, i32* noalias noundef %1) local_unnamed_addr #1 !dbg !8941 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8946, metadata !DIExpression()), !dbg !8950
  call void @llvm.dbg.value(metadata i32* %1, metadata !8947, metadata !DIExpression()), !dbg !8950
  %3 = tail call i32 @strlen(i8* noundef %0) #25, !dbg !8951
  call void @llvm.dbg.value(metadata i32 %3, metadata !8948, metadata !DIExpression()), !dbg !8950
  %4 = tail call i32 @fwrite(i8* noundef %0, i32 noundef 1, i32 noundef %3, i32* noundef %1) #26, !dbg !8952
  call void @llvm.dbg.value(metadata i32 %4, metadata !8949, metadata !DIExpression()), !dbg !8950
  %5 = icmp ne i32 %3, %4, !dbg !8953
  %6 = sext i1 %5 to i32, !dbg !8954
  ret i32 %6, !dbg !8955
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) local_unnamed_addr #1 !dbg !8956 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8960, metadata !DIExpression()), !dbg !8964
  call void @llvm.dbg.value(metadata i32 %1, metadata !8961, metadata !DIExpression()), !dbg !8964
  call void @llvm.dbg.value(metadata i32 %2, metadata !8962, metadata !DIExpression()), !dbg !8964
  call void @llvm.dbg.value(metadata i32* %3, metadata !8963, metadata !DIExpression()), !dbg !8964
  %5 = tail call fastcc i32 @zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #26, !dbg !8965
  ret i32 %5, !dbg !8966
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) unnamed_addr #1 !dbg !8967 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8969, metadata !DIExpression()), !dbg !8973
  call void @llvm.dbg.value(metadata i32 %1, metadata !8970, metadata !DIExpression()), !dbg !8973
  call void @llvm.dbg.value(metadata i32 %2, metadata !8971, metadata !DIExpression()), !dbg !8973
  call void @llvm.dbg.value(metadata i32* %3, metadata !8972, metadata !DIExpression()), !dbg !8973
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !8974, !srcloc !8976
  %5 = tail call i32 @z_impl_zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #26, !dbg !8977
  ret i32 %5, !dbg !8978
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef readnone %3) local_unnamed_addr #1 !dbg !8979 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8981, metadata !DIExpression()), !dbg !8989
  call void @llvm.dbg.value(metadata i32 %1, metadata !8982, metadata !DIExpression()), !dbg !8989
  call void @llvm.dbg.value(metadata i32 %2, metadata !8983, metadata !DIExpression()), !dbg !8989
  call void @llvm.dbg.value(metadata i32* %3, metadata !8984, metadata !DIExpression()), !dbg !8989
  %5 = icmp ne i32* %3, inttoptr (i32 2 to i32*), !dbg !8990
  %6 = icmp ne i32* %3, inttoptr (i32 3 to i32*)
  %7 = and i1 %5, %6, !dbg !8992
  %8 = icmp eq i32 %2, 0
  %9 = or i1 %8, %7, !dbg !8992
  %10 = icmp eq i32 %1, 0
  %11 = or i1 %10, %9, !dbg !8992
  br i1 %11, label %33, label %12, !dbg !8992

12:                                               ; preds = %4, %27
  %13 = phi i32 [ %28, %27 ], [ %2, %4 ], !dbg !8989
  %14 = phi i8* [ %19, %27 ], [ %0, %4 ], !dbg !8989
  call void @llvm.dbg.value(metadata i8* %14, metadata !8987, metadata !DIExpression()), !dbg !8989
  call void @llvm.dbg.value(metadata i32 %13, metadata !8985, metadata !DIExpression()), !dbg !8989
  call void @llvm.dbg.value(metadata i32 %1, metadata !8986, metadata !DIExpression()), !dbg !8989
  br label %15, !dbg !8993

15:                                               ; preds = %24, %12
  %16 = phi i32 [ %1, %12 ], [ %25, %24 ], !dbg !8995
  %17 = phi i8* [ %14, %12 ], [ %19, %24 ], !dbg !8989
  call void @llvm.dbg.value(metadata i8* %17, metadata !8987, metadata !DIExpression()), !dbg !8989
  call void @llvm.dbg.value(metadata i32 %16, metadata !8986, metadata !DIExpression()), !dbg !8989
  %18 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !8996
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !8999
  call void @llvm.dbg.value(metadata i8* %19, metadata !8987, metadata !DIExpression()), !dbg !8989
  %20 = load i8, i8* %17, align 1, !dbg !9000
  %21 = zext i8 %20 to i32, !dbg !9001
  %22 = tail call i32 %18(i32 noundef %21) #25, !dbg !8996
  %23 = icmp eq i32 %22, -1, !dbg !9002
  br i1 %23, label %30, label %24, !dbg !9003

24:                                               ; preds = %15
  %25 = add i32 %16, -1, !dbg !9004
  call void @llvm.dbg.value(metadata i32 %25, metadata !8986, metadata !DIExpression()), !dbg !8989
  %26 = icmp eq i32 %25, 0, !dbg !9005
  br i1 %26, label %27, label %15, !dbg !9006, !llvm.loop !9007

27:                                               ; preds = %24
  %28 = add i32 %13, -1, !dbg !9009
  call void @llvm.dbg.value(metadata i32 %28, metadata !8985, metadata !DIExpression()), !dbg !8989
  %29 = icmp eq i32 %28, 0, !dbg !9010
  br i1 %29, label %30, label %12, !dbg !9011, !llvm.loop !9012

30:                                               ; preds = %27, %15
  %31 = phi i32 [ %13, %15 ], [ 0, %27 ], !dbg !8989
  call void @llvm.dbg.value(metadata i32 %31, metadata !8985, metadata !DIExpression()), !dbg !8989
  call void @llvm.dbg.label(metadata !8988), !dbg !9015
  %32 = sub i32 %2, %31, !dbg !9016
  br label %33, !dbg !9017

33:                                               ; preds = %4, %30
  %34 = phi i32 [ %32, %30 ], [ 0, %4 ], !dbg !8989
  ret i32 %34, !dbg !9018
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @puts(i8* noundef %0) local_unnamed_addr #1 !dbg !9019 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9023, metadata !DIExpression()), !dbg !9024
  %2 = tail call i32 @fputs(i8* noundef %0, i32* noundef nonnull inttoptr (i32 2 to i32*)) #26, !dbg !9025
  %3 = icmp eq i32 %2, -1, !dbg !9027
  br i1 %3, label %8, label %4, !dbg !9028

4:                                                ; preds = %1
  %5 = tail call i32 @fputc(i32 noundef 10, i32* noundef nonnull inttoptr (i32 2 to i32*)) #26, !dbg !9029
  %6 = icmp eq i32 %5, -1, !dbg !9030
  %7 = sext i1 %6 to i32, !dbg !9029
  br label %8, !dbg !9031

8:                                                ; preds = %1, %4
  %9 = phi i32 [ %7, %4 ], [ -1, %1 ], !dbg !9024
  ret i32 %9, !dbg !9032
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_console_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !9033 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9035, metadata !DIExpression()), !dbg !9036
  %2 = tail call fastcc zeroext i1 @device_is_ready() #26, !dbg !9037
  br i1 %2, label %3, label %4, !dbg !9039

3:                                                ; preds = %1
  tail call fastcc void @uart_console_hook_install() #26, !dbg !9040
  br label %4, !dbg !9041

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -19, %1 ], !dbg !9036
  ret i32 %5, !dbg !9042
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready() unnamed_addr #1 !dbg !9043 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_198, metadata !9048, metadata !DIExpression()), !dbg !9049
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !9050, !srcloc !9052
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready() #26, !dbg !9053
  ret i1 %1, !dbg !9054
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_console_hook_install() unnamed_addr #1 !dbg !9055 {
  tail call void @__stdout_hook_install(i32 (i32)* noundef nonnull @console_out) #25, !dbg !9056
  tail call void @__printk_hook_install(i32 (i32)* noundef nonnull @console_out) #25, !dbg !9057
  ret void, !dbg !9058
}

; Function Attrs: noinline nounwind optsize
define internal i32 @console_out(i32 noundef returned %0) #1 !dbg !9059 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9061, metadata !DIExpression()), !dbg !9062
  %2 = icmp eq i32 %0, 10, !dbg !9063
  br i1 %2, label %3, label %4, !dbg !9065

3:                                                ; preds = %1
  tail call fastcc void @uart_poll_out(i8 noundef zeroext 13) #26, !dbg !9066
  br label %4, !dbg !9068

4:                                                ; preds = %3, %1
  %5 = trunc i32 %0 to i8, !dbg !9069
  tail call fastcc void @uart_poll_out(i8 noundef zeroext %5) #26, !dbg !9070
  ret i32 %0, !dbg !9071
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !9072 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_198, metadata !9075, metadata !DIExpression()), !dbg !9077
  call void @llvm.dbg.value(metadata i8 %0, metadata !9076, metadata !DIExpression()), !dbg !9077
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !9078, !srcloc !9080
  tail call fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) #26, !dbg !9081
  ret void, !dbg !9082
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !9083 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_198, metadata !9085, metadata !DIExpression()), !dbg !9088
  call void @llvm.dbg.value(metadata i8 %0, metadata !9086, metadata !DIExpression()), !dbg !9088
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_198, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !9089
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !9087, metadata !DIExpression()), !dbg !9088
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 1, !dbg !9090
  %4 = load void (%struct.device*, i8)*, void (%struct.device*, i8)** %3, align 4, !dbg !9090
  tail call void %4(%struct.device* noundef nonnull @__device_dts_ord_198, i8 noundef zeroext %0) #25, !dbg !9091
  ret void, !dbg !9092
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready() unnamed_addr #1 !dbg !9093 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_198, metadata !9095, metadata !DIExpression()), !dbg !9096
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_198) #25, !dbg !9097
  ret i1 %1, !dbg !9098
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @uart_register_input(%struct.k_fifo* nocapture noundef %0, %struct.k_fifo* nocapture noundef %1, i8 (i8*, i8)* nocapture noundef %2) local_unnamed_addr #5 !dbg !9099 {
  call void @llvm.dbg.value(metadata %struct.k_fifo* %0, metadata !9148, metadata !DIExpression()), !dbg !9151
  call void @llvm.dbg.value(metadata %struct.k_fifo* %1, metadata !9149, metadata !DIExpression()), !dbg !9151
  call void @llvm.dbg.value(metadata i8 (i8*, i8)* %2, metadata !9150, metadata !DIExpression()), !dbg !9151
  ret void, !dbg !9152
}

; Function Attrs: noinline nounwind optsize
define internal i32 @imx_gpio_configure(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) #1 !dbg !9153 {
  %4 = alloca %struct.pinctrl_soc_pin, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9155, metadata !DIExpression()), !dbg !9168
  call void @llvm.dbg.value(metadata i8 %1, metadata !9156, metadata !DIExpression()), !dbg !9168
  call void @llvm.dbg.value(metadata i32 %2, metadata !9157, metadata !DIExpression()), !dbg !9168
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9169
  %6 = bitcast i8** %5 to %struct.imx_gpio_config**, !dbg !9169
  %7 = load %struct.imx_gpio_config*, %struct.imx_gpio_config** %6, align 4, !dbg !9169
  call void @llvm.dbg.value(metadata %struct.imx_gpio_config* %7, metadata !9158, metadata !DIExpression()), !dbg !9168
  %8 = getelementptr inbounds %struct.imx_gpio_config, %struct.imx_gpio_config* %7, i32 0, i32 1, !dbg !9170
  %9 = load %struct.GPIO_Type*, %struct.GPIO_Type** %8, align 4, !dbg !9170
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %9, metadata !9160, metadata !DIExpression()), !dbg !9168
  %10 = and i32 %2, 131072
  %11 = icmp eq i32 %10, 0
  %12 = and i32 %2, 196608, !dbg !9171
  %13 = icmp eq i32 %12, 196608, !dbg !9171
  br i1 %13, label %71, label %14, !dbg !9171

14:                                               ; preds = %3
  %15 = zext i8 %1 to i32, !dbg !9173
  %16 = getelementptr inbounds %struct.imx_gpio_config, %struct.imx_gpio_config* %7, i32 0, i32 3, !dbg !9173
  %17 = load i8, i8* %16, align 4, !dbg !9173
  %18 = icmp ugt i8 %17, %1, !dbg !9173
  br i1 %18, label %20, label %19, !dbg !9176

19:                                               ; preds = %14
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.114, i32 0, i32 0), i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.24.120, i32 0, i32 0), i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.25.121, i32 0, i32 0), i32 noundef 50) #25, !dbg !9177
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.25.121, i32 0, i32 0), i32 noundef 50) #25, !dbg !9177
  unreachable, !dbg !9177

20:                                               ; preds = %14
  %21 = bitcast %struct.pinctrl_soc_pin* %4 to i8*, !dbg !9179
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %21) #24, !dbg !9179
  call void @llvm.dbg.declare(metadata %struct.pinctrl_soc_pin* %4, metadata !9161, metadata !DIExpression()), !dbg !9180
  %22 = getelementptr inbounds %struct.imx_gpio_config, %struct.imx_gpio_config* %7, i32 0, i32 2, !dbg !9181
  %23 = load %struct.pinctrl_soc_pinmux*, %struct.pinctrl_soc_pinmux** %22, align 4, !dbg !9181
  %24 = getelementptr inbounds %struct.pinctrl_soc_pinmux, %struct.pinctrl_soc_pinmux* %23, i32 %15, i32 1, !dbg !9182
  %25 = load i32, i32* %24, align 4, !dbg !9182
  %26 = inttoptr i32 %25 to i32*, !dbg !9183
  call void @llvm.dbg.value(metadata i32* %26, metadata !9166, metadata !DIExpression()), !dbg !9168
  %27 = load volatile i32, i32* %26, align 4, !dbg !9184
  call void @llvm.dbg.value(metadata i32 %27, metadata !9167, metadata !DIExpression()), !dbg !9168
  %28 = and i32 %2, 2, !dbg !9185
  %29 = icmp eq i32 %28, 0, !dbg !9187
  br i1 %29, label %30, label %69, !dbg !9188

30:                                               ; preds = %20
  %31 = and i32 %2, 48, !dbg !9189
  %32 = icmp eq i32 %31, 0, !dbg !9189
  br i1 %32, label %41, label %33, !dbg !9189

33:                                               ; preds = %30
  %34 = and i32 %2, 16, !dbg !9191
  %35 = icmp eq i32 %34, 0, !dbg !9192
  call void @llvm.dbg.value(metadata i32 %27, metadata !9167, metadata !DIExpression(DW_OP_constu, 16, DW_OP_or, DW_OP_stack_value)), !dbg !9168
  br i1 %35, label %38, label %36, !dbg !9193

36:                                               ; preds = %33
  %37 = or i32 %27, 48, !dbg !9195
  call void @llvm.dbg.value(metadata i32 %37, metadata !9167, metadata !DIExpression()), !dbg !9168
  br label %43, !dbg !9198

38:                                               ; preds = %33
  call void @llvm.dbg.value(metadata i32 %27, metadata !9167, metadata !DIExpression(DW_OP_constu, 16, DW_OP_or, DW_OP_stack_value)), !dbg !9168
  %39 = and i32 %27, -49, !dbg !9199
  %40 = or i32 %39, 16, !dbg !9199
  call void @llvm.dbg.value(metadata i32 %40, metadata !9167, metadata !DIExpression()), !dbg !9168
  br label %43

41:                                               ; preds = %30
  %42 = and i32 %27, -17, !dbg !9201
  call void @llvm.dbg.value(metadata i32 %42, metadata !9167, metadata !DIExpression()), !dbg !9168
  br label %43

43:                                               ; preds = %36, %38, %41
  %44 = phi i32 [ %37, %36 ], [ %40, %38 ], [ %42, %41 ], !dbg !9203
  call void @llvm.dbg.value(metadata i32 %44, metadata !9167, metadata !DIExpression()), !dbg !9168
  %45 = getelementptr inbounds %struct.pinctrl_soc_pinmux, %struct.pinctrl_soc_pinmux* %23, i32 %15, !dbg !9204
  %46 = bitcast %struct.pinctrl_soc_pinmux* %45 to i8*, !dbg !9205
  %47 = call i8* @memcpy(i8* noundef nonnull %21, i8* noundef %46, i32 noundef 20) #25, !dbg !9206
  %48 = getelementptr inbounds %struct.pinctrl_soc_pin, %struct.pinctrl_soc_pin* %4, i32 0, i32 1, !dbg !9207
  store i32 %44, i32* %48, align 4, !dbg !9208
  %49 = call i32 @pinctrl_configure_pins(%struct.pinctrl_soc_pin* noundef nonnull %4, i8 noundef zeroext 1, i32 noundef 0) #25, !dbg !9209
  call void @GPIO_SetPinIntMode(%struct.GPIO_Type* noundef %9, i32 noundef %15, i1 noundef zeroext false) #25, !dbg !9210
  call void @GPIO_SetIntEdgeSelect(%struct.GPIO_Type* noundef %9, i32 noundef %15, i1 noundef zeroext false) #25, !dbg !9211
  br i1 %11, label %63, label %50, !dbg !9212

50:                                               ; preds = %43
  %51 = and i32 %2, 262144, !dbg !9213
  %52 = icmp eq i32 %51, 0, !dbg !9217
  br i1 %52, label %53, label %56, !dbg !9218

53:                                               ; preds = %50
  %54 = and i32 %2, 524288, !dbg !9219
  %55 = icmp eq i32 %54, 0, !dbg !9221
  br i1 %55, label %58, label %56, !dbg !9222

56:                                               ; preds = %53, %50
  %57 = phi i32 [ 0, %50 ], [ 1, %53 ]
  call void @GPIO_WritePinOutput(%struct.GPIO_Type* noundef %9, i32 noundef %15, i32 noundef %57) #25, !dbg !9223
  br label %58, !dbg !9224

58:                                               ; preds = %56, %53
  %59 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 1, !dbg !9224
  %60 = load volatile i32, i32* %59, align 4, !dbg !9224
  %61 = shl nuw i32 1, %15, !dbg !9224
  %62 = or i32 %60, %61, !dbg !9224
  store volatile i32 %62, i32* %59, align 4, !dbg !9224
  br label %69, !dbg !9225

63:                                               ; preds = %43
  %64 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 1, !dbg !9226
  %65 = load volatile i32, i32* %64, align 4, !dbg !9226
  %66 = shl nuw i32 1, %15, !dbg !9226
  %67 = xor i32 %66, -1, !dbg !9226
  %68 = and i32 %65, %67, !dbg !9226
  store volatile i32 %68, i32* %64, align 4, !dbg !9226
  br label %69

69:                                               ; preds = %58, %63, %20
  %70 = phi i32 [ -134, %20 ], [ 0, %63 ], [ 0, %58 ], !dbg !9168
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %21) #24, !dbg !9228
  br label %71

71:                                               ; preds = %3, %69
  %72 = phi i32 [ %70, %69 ], [ -134, %3 ], !dbg !9168
  ret i32 %72, !dbg !9228
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @imx_gpio_port_get_raw(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) #7 !dbg !9229 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9233, metadata !DIExpression()), !dbg !9237
  call void @llvm.dbg.value(metadata i32* %1, metadata !9234, metadata !DIExpression()), !dbg !9237
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9238
  %4 = bitcast i8** %3 to %struct.imx_gpio_config**, !dbg !9238
  %5 = load %struct.imx_gpio_config*, %struct.imx_gpio_config** %4, align 4, !dbg !9238
  call void @llvm.dbg.value(metadata %struct.imx_gpio_config* %5, metadata !9235, metadata !DIExpression()), !dbg !9237
  %6 = getelementptr inbounds %struct.imx_gpio_config, %struct.imx_gpio_config* %5, i32 0, i32 1, !dbg !9239
  %7 = load %struct.GPIO_Type*, %struct.GPIO_Type** %6, align 4, !dbg !9239
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %7, metadata !9236, metadata !DIExpression()), !dbg !9237
  %8 = tail call fastcc i32 @GPIO_ReadPortInput(%struct.GPIO_Type* noundef %7) #26, !dbg !9240
  store i32 %8, i32* %1, align 4, !dbg !9241
  ret i32 0, !dbg !9242
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @imx_gpio_port_set_masked_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) #18 !dbg !9243 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9245, metadata !DIExpression()), !dbg !9250
  call void @llvm.dbg.value(metadata i32 %1, metadata !9246, metadata !DIExpression()), !dbg !9250
  call void @llvm.dbg.value(metadata i32 %2, metadata !9247, metadata !DIExpression()), !dbg !9250
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9251
  %5 = bitcast i8** %4 to %struct.imx_gpio_config**, !dbg !9251
  %6 = load %struct.imx_gpio_config*, %struct.imx_gpio_config** %5, align 4, !dbg !9251
  call void @llvm.dbg.value(metadata %struct.imx_gpio_config* %6, metadata !9248, metadata !DIExpression()), !dbg !9250
  %7 = getelementptr inbounds %struct.imx_gpio_config, %struct.imx_gpio_config* %6, i32 0, i32 1, !dbg !9252
  %8 = load %struct.GPIO_Type*, %struct.GPIO_Type** %7, align 4, !dbg !9252
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %8, metadata !9249, metadata !DIExpression()), !dbg !9250
  %9 = tail call fastcc i32 @GPIO_ReadPortInput(%struct.GPIO_Type* noundef %8) #26, !dbg !9253
  %10 = xor i32 %1, -1, !dbg !9254
  %11 = and i32 %9, %10, !dbg !9255
  %12 = and i32 %2, %1, !dbg !9256
  %13 = or i32 %11, %12, !dbg !9257
  tail call fastcc void @GPIO_WritePortOutput(%struct.GPIO_Type* noundef %8, i32 noundef %13) #26, !dbg !9258
  ret i32 0, !dbg !9259
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @imx_gpio_port_set_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #18 !dbg !9260 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9262, metadata !DIExpression()), !dbg !9266
  call void @llvm.dbg.value(metadata i32 %1, metadata !9263, metadata !DIExpression()), !dbg !9266
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9267
  %4 = bitcast i8** %3 to %struct.imx_gpio_config**, !dbg !9267
  %5 = load %struct.imx_gpio_config*, %struct.imx_gpio_config** %4, align 4, !dbg !9267
  call void @llvm.dbg.value(metadata %struct.imx_gpio_config* %5, metadata !9264, metadata !DIExpression()), !dbg !9266
  %6 = getelementptr inbounds %struct.imx_gpio_config, %struct.imx_gpio_config* %5, i32 0, i32 1, !dbg !9268
  %7 = load %struct.GPIO_Type*, %struct.GPIO_Type** %6, align 4, !dbg !9268
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %7, metadata !9265, metadata !DIExpression()), !dbg !9266
  %8 = tail call fastcc i32 @GPIO_ReadPortInput(%struct.GPIO_Type* noundef %7) #26, !dbg !9269
  %9 = or i32 %8, %1, !dbg !9270
  tail call fastcc void @GPIO_WritePortOutput(%struct.GPIO_Type* noundef %7, i32 noundef %9) #26, !dbg !9271
  ret i32 0, !dbg !9272
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @imx_gpio_port_clear_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #18 !dbg !9273 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9275, metadata !DIExpression()), !dbg !9279
  call void @llvm.dbg.value(metadata i32 %1, metadata !9276, metadata !DIExpression()), !dbg !9279
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9280
  %4 = bitcast i8** %3 to %struct.imx_gpio_config**, !dbg !9280
  %5 = load %struct.imx_gpio_config*, %struct.imx_gpio_config** %4, align 4, !dbg !9280
  call void @llvm.dbg.value(metadata %struct.imx_gpio_config* %5, metadata !9277, metadata !DIExpression()), !dbg !9279
  %6 = getelementptr inbounds %struct.imx_gpio_config, %struct.imx_gpio_config* %5, i32 0, i32 1, !dbg !9281
  %7 = load %struct.GPIO_Type*, %struct.GPIO_Type** %6, align 4, !dbg !9281
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %7, metadata !9278, metadata !DIExpression()), !dbg !9279
  %8 = tail call fastcc i32 @GPIO_ReadPortInput(%struct.GPIO_Type* noundef %7) #26, !dbg !9282
  %9 = xor i32 %1, -1, !dbg !9283
  %10 = and i32 %8, %9, !dbg !9284
  tail call fastcc void @GPIO_WritePortOutput(%struct.GPIO_Type* noundef %7, i32 noundef %10) #26, !dbg !9285
  ret i32 0, !dbg !9286
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @imx_gpio_port_toggle_bits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #18 !dbg !9287 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9289, metadata !DIExpression()), !dbg !9293
  call void @llvm.dbg.value(metadata i32 %1, metadata !9290, metadata !DIExpression()), !dbg !9293
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9294
  %4 = bitcast i8** %3 to %struct.imx_gpio_config**, !dbg !9294
  %5 = load %struct.imx_gpio_config*, %struct.imx_gpio_config** %4, align 4, !dbg !9294
  call void @llvm.dbg.value(metadata %struct.imx_gpio_config* %5, metadata !9291, metadata !DIExpression()), !dbg !9293
  %6 = getelementptr inbounds %struct.imx_gpio_config, %struct.imx_gpio_config* %5, i32 0, i32 1, !dbg !9295
  %7 = load %struct.GPIO_Type*, %struct.GPIO_Type** %6, align 4, !dbg !9295
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %7, metadata !9292, metadata !DIExpression()), !dbg !9293
  %8 = tail call fastcc i32 @GPIO_ReadPortInput(%struct.GPIO_Type* noundef %7) #26, !dbg !9296
  %9 = xor i32 %8, %1, !dbg !9297
  tail call fastcc void @GPIO_WritePortOutput(%struct.GPIO_Type* noundef %7, i32 noundef %9) #26, !dbg !9298
  ret i32 0, !dbg !9299
}

; Function Attrs: noinline nounwind optsize
define internal i32 @imx_gpio_pin_interrupt_configure(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) #1 !dbg !9300 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9302, metadata !DIExpression()), !dbg !9312
  call void @llvm.dbg.value(metadata i8 %1, metadata !9303, metadata !DIExpression()), !dbg !9312
  call void @llvm.dbg.value(metadata i32 %2, metadata !9304, metadata !DIExpression()), !dbg !9312
  call void @llvm.dbg.value(metadata i32 %3, metadata !9305, metadata !DIExpression()), !dbg !9312
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9313
  %6 = bitcast i8** %5 to %struct.imx_gpio_config**, !dbg !9313
  %7 = load %struct.imx_gpio_config*, %struct.imx_gpio_config** %6, align 4, !dbg !9313
  call void @llvm.dbg.value(metadata %struct.imx_gpio_config* %7, metadata !9306, metadata !DIExpression()), !dbg !9312
  %8 = getelementptr inbounds %struct.imx_gpio_config, %struct.imx_gpio_config* %7, i32 0, i32 1, !dbg !9314
  %9 = load %struct.GPIO_Type*, %struct.GPIO_Type** %8, align 4, !dbg !9314
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %9, metadata !9307, metadata !DIExpression()), !dbg !9312
  %10 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 1, !dbg !9315
  %11 = load volatile i32, i32* %10, align 4, !dbg !9315
  %12 = zext i8 %1 to i32, !dbg !9317
  %13 = shl nuw i32 1, %12, !dbg !9317
  %14 = and i32 %11, %13, !dbg !9318
  %15 = icmp ne i32 %14, 0, !dbg !9319
  %16 = icmp ne i32 %2, 2097152
  %17 = and i1 %16, %15, !dbg !9320
  br i1 %17, label %77, label %18, !dbg !9320

18:                                               ; preds = %4
  %19 = icmp eq i32 %2, 20971520, !dbg !9321
  %20 = icmp eq i32 %3, 33554432
  %21 = and i1 %19, %20, !dbg !9323
  br i1 %21, label %29, label %22, !dbg !9323

22:                                               ; preds = %18
  %23 = icmp eq i32 %3, 67108864
  %24 = and i1 %19, %23, !dbg !9324
  br i1 %24, label %29, label %25, !dbg !9324

25:                                               ; preds = %22
  %26 = icmp eq i32 %2, 4194304, !dbg !9326
  %27 = and i1 %26, %23, !dbg !9328
  %28 = zext i1 %27 to i32
  br label %29

29:                                               ; preds = %25, %22, %18
  %30 = phi i32 [ 3, %18 ], [ 2, %22 ], [ %28, %25 ], !dbg !9329
  call void @llvm.dbg.value(metadata i32 %30, metadata !9310, metadata !DIExpression()), !dbg !9312
  %31 = icmp ult i8 %1, 16, !dbg !9330
  br i1 %31, label %32, label %35, !dbg !9332

32:                                               ; preds = %29
  %33 = shl nuw nsw i8 %1, 1, !dbg !9333
  call void @llvm.dbg.value(metadata i8 %33, metadata !9311, metadata !DIExpression()), !dbg !9312
  %34 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 3, !dbg !9335
  call void @llvm.dbg.value(metadata i32* %34, metadata !9308, metadata !DIExpression()), !dbg !9312
  br label %41, !dbg !9336

35:                                               ; preds = %29
  %36 = icmp ult i8 %1, 32, !dbg !9337
  br i1 %36, label %37, label %77, !dbg !9339

37:                                               ; preds = %35
  %38 = shl nuw nsw i8 %1, 1, !dbg !9340
  %39 = add nsw i8 %38, -32, !dbg !9340
  call void @llvm.dbg.value(metadata i8 %39, metadata !9311, metadata !DIExpression()), !dbg !9312
  %40 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 4, !dbg !9342
  call void @llvm.dbg.value(metadata i32* %40, metadata !9308, metadata !DIExpression()), !dbg !9312
  br label %41

41:                                               ; preds = %37, %32
  %42 = phi i32* [ %34, %32 ], [ %40, %37 ], !dbg !9343
  %43 = phi i8 [ %33, %32 ], [ %39, %37 ], !dbg !9343
  call void @llvm.dbg.value(metadata i8 %43, metadata !9311, metadata !DIExpression()), !dbg !9312
  call void @llvm.dbg.value(metadata i32* %42, metadata !9308, metadata !DIExpression()), !dbg !9312
  %44 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !9344, !srcloc !9352
  %45 = extractvalue { i32, i32 } %44, 0, !dbg !9344
  call void @llvm.dbg.value(metadata i32 %45, metadata !9349, metadata !DIExpression()) #24, !dbg !9353
  call void @llvm.dbg.value(metadata i32 undef, metadata !9350, metadata !DIExpression()) #24, !dbg !9353
  call void @llvm.dbg.value(metadata i32 %45, metadata !9309, metadata !DIExpression()), !dbg !9312
  %46 = load volatile i32, i32* %42, align 4, !dbg !9354
  %47 = zext i8 %43 to i32, !dbg !9355
  %48 = shl nuw i32 3, %47, !dbg !9356
  %49 = xor i32 %48, -1, !dbg !9357
  %50 = and i32 %46, %49, !dbg !9358
  %51 = shl nuw i32 %30, %47, !dbg !9359
  %52 = or i32 %50, %51, !dbg !9360
  store volatile i32 %52, i32* %42, align 4, !dbg !9361
  %53 = icmp eq i32 %3, 100663296, !dbg !9362
  %54 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 7, !dbg !9362
  %55 = load volatile i32, i32* %54, align 4, !dbg !9362
  %56 = or i32 %55, %13, !dbg !9362
  %57 = xor i32 %13, -1, !dbg !9362
  %58 = and i32 %55, %57, !dbg !9362
  %59 = select i1 %53, i32 %56, i32 %58, !dbg !9362
  %60 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 7, !dbg !9362
  store volatile i32 %59, i32* %60, align 4, !dbg !9362
  %61 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 6, !dbg !9363
  %62 = load volatile i32, i32* %61, align 4, !dbg !9363
  br i1 %16, label %63, label %68, !dbg !9363

63:                                               ; preds = %41
  %64 = or i32 %62, %13, !dbg !9363
  store volatile i32 %64, i32* %61, align 4, !dbg !9363
  %65 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 5, !dbg !9364
  %66 = load volatile i32, i32* %65, align 4, !dbg !9364
  %67 = or i32 %66, %13, !dbg !9364
  br label %74, !dbg !9364

68:                                               ; preds = %41
  %69 = xor i32 %13, -1, !dbg !9363
  %70 = and i32 %62, %69, !dbg !9363
  store volatile i32 %70, i32* %61, align 4, !dbg !9363
  %71 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 5, !dbg !9364
  %72 = load volatile i32, i32* %71, align 4, !dbg !9364
  %73 = and i32 %72, %69, !dbg !9364
  br label %74, !dbg !9364

74:                                               ; preds = %68, %63
  %75 = phi i32 [ %67, %63 ], [ %73, %68 ], !dbg !9364
  %76 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 5, !dbg !9364
  store volatile i32 %75, i32* %76, align 4, !dbg !9364
  call void @llvm.dbg.value(metadata i32 %45, metadata !9365, metadata !DIExpression()) #24, !dbg !9368
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %45) #24, !dbg !9370, !srcloc !9371
  br label %77, !dbg !9372

77:                                               ; preds = %35, %4, %74
  %78 = phi i32 [ 0, %74 ], [ -134, %4 ], [ -22, %35 ], !dbg !9312
  ret i32 %78, !dbg !9373
}

; Function Attrs: noinline nounwind optsize
define internal i32 @imx_gpio_manage_callback(%struct.device* nocapture noundef readonly %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #1 !dbg !9374 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9376, metadata !DIExpression()), !dbg !9381
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !9377, metadata !DIExpression()), !dbg !9381
  call void @llvm.dbg.value(metadata i1 %2, metadata !9378, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9381
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9382
  %5 = bitcast i8** %4 to %struct.imx_gpio_data**, !dbg !9382
  %6 = load %struct.imx_gpio_data*, %struct.imx_gpio_data** %5, align 4, !dbg !9382
  call void @llvm.dbg.value(metadata %struct.imx_gpio_data* %6, metadata !9379, metadata !DIExpression()), !dbg !9381
  %7 = getelementptr inbounds %struct.imx_gpio_data, %struct.imx_gpio_data* %6, i32 0, i32 1, !dbg !9383
  %8 = tail call fastcc i32 @gpio_manage_callback(%struct._slist* noundef nonnull %7, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #26, !dbg !9384
  ret i32 %8, !dbg !9385
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_manage_callback(%struct._slist* nocapture noundef %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) unnamed_addr #1 !dbg !9386 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9392, metadata !DIExpression()), !dbg !9395
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !9393, metadata !DIExpression()), !dbg !9395
  call void @llvm.dbg.value(metadata i1 %2, metadata !9394, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9395
  %4 = icmp eq %struct.gpio_callback* %1, null, !dbg !9396
  br i1 %4, label %5, label %6, !dbg !9399

5:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.114, i32 0, i32 0), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.26.115, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.27.116, i32 0, i32 0), i32 noundef 42) #25, !dbg !9400
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.28.117, i32 0, i32 0)) #25, !dbg !9400
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.27.116, i32 0, i32 0), i32 noundef 42) #25, !dbg !9400
  unreachable, !dbg !9400

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 1, !dbg !9402
  %8 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %7, align 4, !dbg !9402
  %9 = icmp eq void (%struct.device*, %struct.gpio_callback*, i32)* %8, null, !dbg !9402
  br i1 %9, label %10, label %11, !dbg !9405

10:                                               ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.114, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.29.118, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.27.116, i32 0, i32 0), i32 noundef 43) #25, !dbg !9406
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.30.119, i32 0, i32 0)) #25, !dbg !9406
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.27.116, i32 0, i32 0), i32 noundef 43) #25, !dbg !9406
  unreachable, !dbg !9406

11:                                               ; preds = %6
  %12 = tail call fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* noundef %0) #26, !dbg !9408
  br i1 %12, label %18, label %13, !dbg !9410

13:                                               ; preds = %11
  %14 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !9411
  %15 = tail call fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* noundef %0, %struct._snode* noundef nonnull %14) #26, !dbg !9414
  %16 = or i1 %15, %2, !dbg !9415
  %17 = select i1 %16, i32 0, i32 -22, !dbg !9415
  br i1 %2, label %19, label %21, !dbg !9415

18:                                               ; preds = %11
  br i1 %2, label %19, label %21, !dbg !9416

19:                                               ; preds = %18, %13
  %20 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !9417
  tail call fastcc void @sys_slist_prepend(%struct._slist* noundef %0, %struct._snode* noundef nonnull %20) #26, !dbg !9420
  br label %21, !dbg !9421

21:                                               ; preds = %13, %19, %18
  %22 = phi i32 [ %17, %13 ], [ -22, %18 ], [ 0, %19 ], !dbg !9395
  ret i32 %22, !dbg !9422
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* nocapture noundef readonly %0) unnamed_addr #13 !dbg !9423 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9427, metadata !DIExpression()), !dbg !9428
  %2 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !9429
  %3 = icmp eq %struct._snode* %2, null, !dbg !9429
  ret i1 %3, !dbg !9429
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #17 !dbg !9430 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9434, metadata !DIExpression()), !dbg !9438
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9435, metadata !DIExpression()), !dbg !9438
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !9436, metadata !DIExpression()), !dbg !9438
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !9439
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !9437, metadata !DIExpression()), !dbg !9438
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !9436, metadata !DIExpression()), !dbg !9438
  %4 = icmp eq %struct._snode* %3, null, !dbg !9441
  br i1 %4, label %15, label %5, !dbg !9439

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !9437, metadata !DIExpression()), !dbg !9438
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !9436, metadata !DIExpression()), !dbg !9438
  %6 = icmp eq %struct._snode* %3, %1, !dbg !9443
  br i1 %6, label %9, label %11, !dbg !9446

7:                                                ; preds = %11
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !9437, metadata !DIExpression()), !dbg !9438
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !9436, metadata !DIExpression()), !dbg !9438
  %8 = icmp eq %struct._snode* %13, %1, !dbg !9443
  br i1 %8, label %9, label %11, !dbg !9446, !llvm.loop !9447

9:                                                ; preds = %7, %5
  %10 = phi %struct._snode* [ null, %5 ], [ %12, %7 ]
  tail call fastcc void @sys_slist_remove(%struct._slist* noundef %0, %struct._snode* noundef %10, %struct._snode* noundef %1) #26, !dbg !9448
  br label %15, !dbg !9448

11:                                               ; preds = %5, %7
  %12 = phi %struct._snode* [ %13, %7 ], [ %3, %5 ]
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !9437, metadata !DIExpression()), !dbg !9438
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !9436, metadata !DIExpression()), !dbg !9438
  %13 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %12) #26, !dbg !9441
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !9437, metadata !DIExpression()), !dbg !9438
  %14 = icmp eq %struct._snode* %13, null, !dbg !9441
  br i1 %14, label %15, label %7, !dbg !9439, !llvm.loop !9447

15:                                               ; preds = %11, %2, %9
  %16 = phi i1 [ true, %9 ], [ false, %2 ], [ false, %11 ]
  ret i1 %16, !dbg !9450
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_prepend(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #14 !dbg !9451 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9455, metadata !DIExpression()), !dbg !9457
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9456, metadata !DIExpression()), !dbg !9457
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !9458
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %1, %struct._snode* noundef %3) #26, !dbg !9458
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %1) #26, !dbg !9458
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #26, !dbg !9459
  %5 = icmp eq %struct._snode* %4, null, !dbg !9459
  br i1 %5, label %6, label %8, !dbg !9458

6:                                                ; preds = %2
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !9461
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %7) #26, !dbg !9461
  br label %8, !dbg !9461

8:                                                ; preds = %6, %2
  ret void, !dbg !9458
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* nocapture noundef readonly %0) unnamed_addr #13 !dbg !9463 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9467, metadata !DIExpression()), !dbg !9468
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !9469
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !9469
  ret %struct._snode* %3, !dbg !9470
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_snode_next_set(%struct._snode* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #12 !dbg !9471 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !9475, metadata !DIExpression()), !dbg !9477
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9476, metadata !DIExpression()), !dbg !9477
  %3 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !9478
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !9479
  ret void, !dbg !9480
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_head_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #12 !dbg !9481 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9483, metadata !DIExpression()), !dbg !9485
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9484, metadata !DIExpression()), !dbg !9485
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !9486
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !9487
  ret void, !dbg !9488
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* nocapture noundef readonly %0) unnamed_addr #13 !dbg !9489 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9491, metadata !DIExpression()), !dbg !9492
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !9493
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !9493
  ret %struct._snode* %3, !dbg !9494
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_tail_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #12 !dbg !9495 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9497, metadata !DIExpression()), !dbg !9499
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9498, metadata !DIExpression()), !dbg !9499
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !9500
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !9501
  ret void, !dbg !9502
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1, %struct._snode* noundef %2) unnamed_addr #14 !dbg !9503 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9507, metadata !DIExpression()), !dbg !9510
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9508, metadata !DIExpression()), !dbg !9510
  call void @llvm.dbg.value(metadata %struct._snode* %2, metadata !9509, metadata !DIExpression()), !dbg !9510
  %4 = icmp eq %struct._snode* %1, null, !dbg !9511
  %5 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %2) #26, !dbg !9513
  br i1 %4, label %6, label %11, !dbg !9514

6:                                                ; preds = %3
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %5) #26, !dbg !9515
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #26, !dbg !9517
  %8 = icmp eq %struct._snode* %7, %2, !dbg !9517
  br i1 %8, label %9, label %15, !dbg !9515

9:                                                ; preds = %6
  %10 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !9519
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %10) #26, !dbg !9519
  br label %15, !dbg !9519

11:                                               ; preds = %3
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef nonnull %1, %struct._snode* noundef %5) #26, !dbg !9521
  %12 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #26, !dbg !9523
  %13 = icmp eq %struct._snode* %12, %2, !dbg !9523
  br i1 %13, label %14, label %15, !dbg !9521

14:                                               ; preds = %11
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef nonnull %1) #26, !dbg !9525
  br label %15, !dbg !9525

15:                                               ; preds = %11, %14, %6, %9
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %2, %struct._snode* noundef null) #26, !dbg !9514
  ret void, !dbg !9514
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef readonly %0) unnamed_addr #13 !dbg !9527 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !9531, metadata !DIExpression()), !dbg !9532
  %2 = icmp eq %struct._snode* %0, null, !dbg !9533
  br i1 %2, label %5, label %3, !dbg !9533

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* noundef nonnull %0) #26, !dbg !9533
  br label %5, !dbg !9533

5:                                                ; preds = %1, %3
  %6 = phi %struct._snode* [ %4, %3 ], [ null, %1 ], !dbg !9533
  ret %struct._snode* %6, !dbg !9533
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* nocapture noundef readonly %0) unnamed_addr #13 !dbg !9534 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !9536, metadata !DIExpression()), !dbg !9537
  %2 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %0) #26, !dbg !9538
  ret %struct._snode* %2, !dbg !9538
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @z_snode_next_peek(%struct._snode* nocapture noundef readonly %0) unnamed_addr #13 !dbg !9539 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !9541, metadata !DIExpression()), !dbg !9542
  %2 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !9543
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !9543
  ret %struct._snode* %3, !dbg !9544
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @GPIO_ReadPortInput(%struct.GPIO_Type* noundef %0) unnamed_addr #7 !dbg !9545 {
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %0, metadata !9549, metadata !DIExpression()), !dbg !9550
  %2 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 0, !dbg !9551
  %3 = load volatile i32, i32* %2, align 4, !dbg !9551
  ret i32 %3, !dbg !9552
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @GPIO_WritePortOutput(%struct.GPIO_Type* noundef %0, i32 noundef %1) unnamed_addr #18 !dbg !9553 {
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %0, metadata !9557, metadata !DIExpression()), !dbg !9559
  call void @llvm.dbg.value(metadata i32 %1, metadata !9558, metadata !DIExpression()), !dbg !9559
  %3 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 0, !dbg !9560
  store volatile i32 %1, i32* %3, align 4, !dbg !9561
  ret void, !dbg !9562
}

; Function Attrs: noinline nounwind optsize
define internal void @imx_gpio_port_isr(%struct.device* noundef %0) #1 !dbg !9563 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9567, metadata !DIExpression()), !dbg !9571
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9572
  %3 = bitcast i8** %2 to %struct.imx_gpio_config**, !dbg !9572
  %4 = load %struct.imx_gpio_config*, %struct.imx_gpio_config** %3, align 4, !dbg !9572
  call void @llvm.dbg.value(metadata %struct.imx_gpio_config* %4, metadata !9568, metadata !DIExpression()), !dbg !9571
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9573
  %6 = bitcast i8** %5 to %struct.imx_gpio_data**, !dbg !9573
  %7 = load %struct.imx_gpio_data*, %struct.imx_gpio_data** %6, align 4, !dbg !9573
  call void @llvm.dbg.value(metadata %struct.imx_gpio_data* %7, metadata !9569, metadata !DIExpression()), !dbg !9571
  %8 = getelementptr inbounds %struct.imx_gpio_config, %struct.imx_gpio_config* %4, i32 0, i32 1, !dbg !9574
  %9 = load %struct.GPIO_Type*, %struct.GPIO_Type** %8, align 4, !dbg !9574
  %10 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 6, !dbg !9575
  %11 = load volatile i32, i32* %10, align 4, !dbg !9575
  call void @llvm.dbg.value(metadata i32 %11, metadata !9570, metadata !DIExpression()), !dbg !9571
  store volatile i32 %11, i32* %10, align 4, !dbg !9576
  %12 = getelementptr inbounds %struct.imx_gpio_data, %struct.imx_gpio_data* %7, i32 0, i32 1, !dbg !9577
  tail call fastcc void @gpio_fire_callbacks(%struct._slist* noundef nonnull %12, %struct.device* noundef %0, i32 noundef %11) #26, !dbg !9578
  ret void, !dbg !9579
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_fire_callbacks(%struct._slist* nocapture noundef readonly %0, %struct.device* noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9580 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9584, metadata !DIExpression()), !dbg !9589
  call void @llvm.dbg.value(metadata %struct.device* %1, metadata !9585, metadata !DIExpression()), !dbg !9589
  call void @llvm.dbg.value(metadata i32 %2, metadata !9586, metadata !DIExpression()), !dbg !9589
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !9590
  %5 = icmp eq %struct._snode* %4, null, !dbg !9590
  br i1 %5, label %24, label %6, !dbg !9590

6:                                                ; preds = %3, %22
  %7 = phi %struct._snode* [ %8, %22 ], [ %4, %3 ]
  %8 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %7) #26, !dbg !9592
  %9 = bitcast %struct._snode* %7 to %struct.gpio_callback*
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !9588, metadata !DIExpression()), !dbg !9589
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %9, metadata !9587, metadata !DIExpression()), !dbg !9589
  %10 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 2, !dbg !9593
  %11 = bitcast %struct._snode* %10 to i32*, !dbg !9593
  %12 = load i32, i32* %11, align 4, !dbg !9593
  %13 = and i32 %12, %2, !dbg !9597
  %14 = icmp eq i32 %13, 0, !dbg !9597
  br i1 %14, label %22, label %15, !dbg !9598

15:                                               ; preds = %6
  %16 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 1, !dbg !9599
  %17 = bitcast %struct._snode* %16 to void (%struct.device*, %struct.gpio_callback*, i32)**, !dbg !9599
  %18 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %17, align 4, !dbg !9599
  %19 = icmp eq void (%struct.device*, %struct.gpio_callback*, i32)* %18, null, !dbg !9599
  br i1 %19, label %20, label %21, !dbg !9603

20:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.114, i32 0, i32 0), i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.31.123, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.27.116, i32 0, i32 0), i32 noundef 77) #25, !dbg !9604
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.30.119, i32 0, i32 0)) #25, !dbg !9604
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.27.116, i32 0, i32 0), i32 noundef 77) #25, !dbg !9604
  unreachable, !dbg !9604

21:                                               ; preds = %15
  tail call void %18(%struct.device* noundef %1, %struct.gpio_callback* noundef nonnull %9, i32 noundef %13) #25, !dbg !9606
  br label %22, !dbg !9607

22:                                               ; preds = %6, %21
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !9587, metadata !DIExpression()), !dbg !9589
  %23 = icmp eq %struct._snode* %8, null, !dbg !9608
  br i1 %23, label %24, label %6, !dbg !9608

24:                                               ; preds = %22, %3
  ret void, !dbg !9609
}

; Function Attrs: noinline nounwind optsize
define internal i32 @imx_gpio_0_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !1160 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !1162, metadata !DIExpression()), !dbg !9610
  tail call void @z_arm_irq_priority_set(i32 noundef 64, i32 noundef 0, i32 noundef 0) #25, !dbg !9611
  tail call void @arch_irq_enable(i32 noundef 64) #25, !dbg !9613
  tail call void @z_arm_irq_priority_set(i32 noundef 65, i32 noundef 0, i32 noundef 0) #25, !dbg !9614
  tail call void @arch_irq_enable(i32 noundef 65) #25, !dbg !9613
  ret i32 0, !dbg !9613
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_imx_poll_in(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1) #1 !dbg !9616 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9618, metadata !DIExpression()), !dbg !9622
  call void @llvm.dbg.value(metadata i8* %1, metadata !9619, metadata !DIExpression()), !dbg !9622
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9623
  %4 = bitcast i8** %3 to %struct.imx_uart_config**, !dbg !9623
  %5 = load %struct.imx_uart_config*, %struct.imx_uart_config** %4, align 4, !dbg !9623
  %6 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %5, i32 0, i32 0, !dbg !9623
  %7 = load %struct.UART_Type*, %struct.UART_Type** %6, align 4, !dbg !9623
  call void @llvm.dbg.value(metadata %struct.UART_Type* %7, metadata !9620, metadata !DIExpression()), !dbg !9622
  call void @llvm.dbg.value(metadata i32 -1, metadata !9621, metadata !DIExpression()), !dbg !9622
  %8 = tail call fastcc zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %7, i32 noundef 9961472) #26, !dbg !9624
  br i1 %8, label %9, label %13, !dbg !9626

9:                                                ; preds = %2
  %10 = tail call fastcc zeroext i8 @UART_Getchar(%struct.UART_Type* noundef %7) #26, !dbg !9627
  store i8 %10, i8* %1, align 1, !dbg !9629
  %11 = tail call fastcc zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %7, i32 noundef 9961473) #26, !dbg !9630
  br i1 %11, label %12, label %13, !dbg !9632

12:                                               ; preds = %9
  tail call void @UART_ClearStatusFlag(%struct.UART_Type* noundef %7, i32 noundef 9961473) #25, !dbg !9633
  br label %13, !dbg !9635

13:                                               ; preds = %9, %12, %2
  %14 = phi i32 [ -1, %2 ], [ 0, %12 ], [ 0, %9 ], !dbg !9622
  call void @llvm.dbg.value(metadata i32 %14, metadata !9621, metadata !DIExpression()), !dbg !9622
  ret i32 %14, !dbg !9636
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal void @uart_imx_poll_out(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1) #18 !dbg !9637 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9639, metadata !DIExpression()), !dbg !9642
  call void @llvm.dbg.value(metadata i8 %1, metadata !9640, metadata !DIExpression()), !dbg !9642
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9643
  %4 = bitcast i8** %3 to %struct.imx_uart_config**, !dbg !9643
  %5 = load %struct.imx_uart_config*, %struct.imx_uart_config** %4, align 4, !dbg !9643
  %6 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %5, i32 0, i32 0, !dbg !9643
  %7 = load %struct.UART_Type*, %struct.UART_Type** %6, align 4, !dbg !9643
  call void @llvm.dbg.value(metadata %struct.UART_Type* %7, metadata !9641, metadata !DIExpression()), !dbg !9642
  br label %8, !dbg !9644

8:                                                ; preds = %8, %2
  %9 = tail call fastcc zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %7, i32 noundef 9699341) #26, !dbg !9645
  br i1 %9, label %10, label %8, !dbg !9644, !llvm.loop !9646

10:                                               ; preds = %8
  tail call fastcc void @UART_Putchar(%struct.UART_Type* noundef %7, i8 noundef zeroext %1) #26, !dbg !9648
  ret void, !dbg !9649
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @uart_imx_fifo_fill(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) #18 !dbg !9650 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9652, metadata !DIExpression()), !dbg !9657
  call void @llvm.dbg.value(metadata i8* %1, metadata !9653, metadata !DIExpression()), !dbg !9657
  call void @llvm.dbg.value(metadata i32 %2, metadata !9654, metadata !DIExpression()), !dbg !9657
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9658
  %5 = bitcast i8** %4 to %struct.imx_uart_config**, !dbg !9658
  %6 = load %struct.imx_uart_config*, %struct.imx_uart_config** %5, align 4, !dbg !9658
  %7 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %6, i32 0, i32 0, !dbg !9658
  %8 = load %struct.UART_Type*, %struct.UART_Type** %7, align 4, !dbg !9658
  call void @llvm.dbg.value(metadata %struct.UART_Type* %8, metadata !9655, metadata !DIExpression()), !dbg !9657
  call void @llvm.dbg.value(metadata i32 0, metadata !9656, metadata !DIExpression()), !dbg !9657
  %9 = icmp eq i32 %2, 0, !dbg !9659
  br i1 %9, label %18, label %10, !dbg !9660

10:                                               ; preds = %3, %13
  %11 = phi i32 [ %16, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !9656, metadata !DIExpression()), !dbg !9657
  %12 = tail call fastcc zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %8, i32 noundef 9699341) #26, !dbg !9661
  br i1 %12, label %13, label %18, !dbg !9662

13:                                               ; preds = %10
  %14 = getelementptr inbounds i8, i8* %1, i32 %11, !dbg !9663
  %15 = load i8, i8* %14, align 1, !dbg !9663
  tail call fastcc void @UART_Putchar(%struct.UART_Type* noundef %8, i8 noundef zeroext %15) #26, !dbg !9665
  %16 = add nuw i32 %11, 1, !dbg !9666
  call void @llvm.dbg.value(metadata i32 %16, metadata !9656, metadata !DIExpression()), !dbg !9657
  %17 = icmp eq i32 %16, %2, !dbg !9659
  br i1 %17, label %18, label %10, !dbg !9660, !llvm.loop !9667

18:                                               ; preds = %10, %13, %3
  %19 = phi i32 [ 0, %3 ], [ %2, %13 ], [ %11, %10 ], !dbg !9657
  ret i32 %19, !dbg !9669
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_imx_fifo_read(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) #1 !dbg !9670 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9672, metadata !DIExpression()), !dbg !9677
  call void @llvm.dbg.value(metadata i8* %1, metadata !9673, metadata !DIExpression()), !dbg !9677
  call void @llvm.dbg.value(metadata i32 %2, metadata !9674, metadata !DIExpression()), !dbg !9677
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9678
  %5 = bitcast i8** %4 to %struct.imx_uart_config**, !dbg !9678
  %6 = load %struct.imx_uart_config*, %struct.imx_uart_config** %5, align 4, !dbg !9678
  %7 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %6, i32 0, i32 0, !dbg !9678
  %8 = load %struct.UART_Type*, %struct.UART_Type** %7, align 4, !dbg !9678
  call void @llvm.dbg.value(metadata %struct.UART_Type* %8, metadata !9675, metadata !DIExpression()), !dbg !9677
  call void @llvm.dbg.value(metadata i32 0, metadata !9676, metadata !DIExpression()), !dbg !9677
  %9 = icmp eq i32 %2, 0, !dbg !9679
  br i1 %9, label %18, label %10, !dbg !9680

10:                                               ; preds = %3, %13
  %11 = phi i32 [ %15, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !9676, metadata !DIExpression()), !dbg !9677
  %12 = tail call fastcc zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %8, i32 noundef 9699337) #26, !dbg !9681
  br i1 %12, label %13, label %18, !dbg !9682

13:                                               ; preds = %10
  %14 = tail call fastcc zeroext i8 @UART_Getchar(%struct.UART_Type* noundef %8) #26, !dbg !9683
  %15 = add nuw i32 %11, 1, !dbg !9685
  call void @llvm.dbg.value(metadata i32 %15, metadata !9676, metadata !DIExpression()), !dbg !9677
  %16 = getelementptr inbounds i8, i8* %1, i32 %11, !dbg !9686
  store i8 %14, i8* %16, align 1, !dbg !9687
  %17 = icmp eq i32 %15, %2, !dbg !9679
  br i1 %17, label %18, label %10, !dbg !9680, !llvm.loop !9688

18:                                               ; preds = %10, %13, %3
  %19 = phi i32 [ 0, %3 ], [ %2, %13 ], [ %11, %10 ], !dbg !9677
  %20 = tail call fastcc zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %8, i32 noundef 9961473) #26, !dbg !9690
  br i1 %20, label %21, label %22, !dbg !9692

21:                                               ; preds = %18
  tail call void @UART_ClearStatusFlag(%struct.UART_Type* noundef %8, i32 noundef 9961473) #25, !dbg !9693
  br label %22, !dbg !9695

22:                                               ; preds = %21, %18
  ret i32 %19, !dbg !9696
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_imx_irq_tx_enable(%struct.device* nocapture noundef readonly %0) #1 !dbg !9697 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9699, metadata !DIExpression()), !dbg !9701
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9702
  %3 = bitcast i8** %2 to %struct.imx_uart_config**, !dbg !9702
  %4 = load %struct.imx_uart_config*, %struct.imx_uart_config** %3, align 4, !dbg !9702
  %5 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %4, i32 0, i32 0, !dbg !9702
  %6 = load %struct.UART_Type*, %struct.UART_Type** %5, align 4, !dbg !9702
  call void @llvm.dbg.value(metadata %struct.UART_Type* %6, metadata !9700, metadata !DIExpression()), !dbg !9701
  tail call void @UART_SetIntCmd(%struct.UART_Type* noundef %6, i32 noundef 8388621, i1 noundef zeroext true) #25, !dbg !9703
  ret void, !dbg !9704
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_imx_irq_tx_disable(%struct.device* nocapture noundef readonly %0) #1 !dbg !9705 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9707, metadata !DIExpression()), !dbg !9709
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9710
  %3 = bitcast i8** %2 to %struct.imx_uart_config**, !dbg !9710
  %4 = load %struct.imx_uart_config*, %struct.imx_uart_config** %3, align 4, !dbg !9710
  %5 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %4, i32 0, i32 0, !dbg !9710
  %6 = load %struct.UART_Type*, %struct.UART_Type** %5, align 4, !dbg !9710
  call void @llvm.dbg.value(metadata %struct.UART_Type* %6, metadata !9708, metadata !DIExpression()), !dbg !9709
  tail call void @UART_SetIntCmd(%struct.UART_Type* noundef %6, i32 noundef 8388621, i1 noundef zeroext false) #25, !dbg !9711
  ret void, !dbg !9712
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_imx_irq_tx_ready(%struct.device* nocapture noundef readonly %0) #7 !dbg !9713 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9715, metadata !DIExpression()), !dbg !9717
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9718
  %3 = bitcast i8** %2 to %struct.imx_uart_config**, !dbg !9718
  %4 = load %struct.imx_uart_config*, %struct.imx_uart_config** %3, align 4, !dbg !9718
  %5 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %4, i32 0, i32 0, !dbg !9718
  %6 = load %struct.UART_Type*, %struct.UART_Type** %5, align 4, !dbg !9718
  call void @llvm.dbg.value(metadata %struct.UART_Type* %6, metadata !9716, metadata !DIExpression()), !dbg !9717
  %7 = tail call fastcc zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %6, i32 noundef 9699341) #26, !dbg !9719
  %8 = zext i1 %7 to i32, !dbg !9719
  ret i32 %8, !dbg !9720
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_imx_irq_rx_enable(%struct.device* nocapture noundef readonly %0) #1 !dbg !9721 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9723, metadata !DIExpression()), !dbg !9725
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9726
  %3 = bitcast i8** %2 to %struct.imx_uart_config**, !dbg !9726
  %4 = load %struct.imx_uart_config*, %struct.imx_uart_config** %3, align 4, !dbg !9726
  %5 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %4, i32 0, i32 0, !dbg !9726
  %6 = load %struct.UART_Type*, %struct.UART_Type** %5, align 4, !dbg !9726
  call void @llvm.dbg.value(metadata %struct.UART_Type* %6, metadata !9724, metadata !DIExpression()), !dbg !9725
  tail call void @UART_SetIntCmd(%struct.UART_Type* noundef %6, i32 noundef 8388617, i1 noundef zeroext true) #25, !dbg !9727
  ret void, !dbg !9728
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_imx_irq_rx_disable(%struct.device* nocapture noundef readonly %0) #1 !dbg !9729 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9731, metadata !DIExpression()), !dbg !9733
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9734
  %3 = bitcast i8** %2 to %struct.imx_uart_config**, !dbg !9734
  %4 = load %struct.imx_uart_config*, %struct.imx_uart_config** %3, align 4, !dbg !9734
  %5 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %4, i32 0, i32 0, !dbg !9734
  %6 = load %struct.UART_Type*, %struct.UART_Type** %5, align 4, !dbg !9734
  call void @llvm.dbg.value(metadata %struct.UART_Type* %6, metadata !9732, metadata !DIExpression()), !dbg !9733
  tail call void @UART_SetIntCmd(%struct.UART_Type* noundef %6, i32 noundef 8388617, i1 noundef zeroext false) #25, !dbg !9735
  ret void, !dbg !9736
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_imx_irq_rx_ready(%struct.device* nocapture noundef readonly %0) #7 !dbg !9737 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9739, metadata !DIExpression()), !dbg !9741
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9742
  %3 = bitcast i8** %2 to %struct.imx_uart_config**, !dbg !9742
  %4 = load %struct.imx_uart_config*, %struct.imx_uart_config** %3, align 4, !dbg !9742
  %5 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %4, i32 0, i32 0, !dbg !9742
  %6 = load %struct.UART_Type*, %struct.UART_Type** %5, align 4, !dbg !9742
  call void @llvm.dbg.value(metadata %struct.UART_Type* %6, metadata !9740, metadata !DIExpression()), !dbg !9741
  %7 = tail call fastcc zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %6, i32 noundef 9699337) #26, !dbg !9743
  %8 = zext i1 %7 to i32, !dbg !9743
  ret i32 %8, !dbg !9744
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_imx_irq_err_enable(%struct.device* nocapture noundef readonly %0) #1 !dbg !9745 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9747, metadata !DIExpression()), !dbg !9749
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9750
  %3 = bitcast i8** %2 to %struct.imx_uart_config**, !dbg !9750
  %4 = load %struct.imx_uart_config*, %struct.imx_uart_config** %3, align 4, !dbg !9750
  %5 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %4, i32 0, i32 0, !dbg !9750
  %6 = load %struct.UART_Type*, %struct.UART_Type** %5, align 4, !dbg !9750
  call void @llvm.dbg.value(metadata %struct.UART_Type* %6, metadata !9748, metadata !DIExpression()), !dbg !9749
  tail call void @UART_SetIntCmd(%struct.UART_Type* noundef %6, i32 noundef 8912908, i1 noundef zeroext true) #25, !dbg !9751
  tail call void @UART_SetIntCmd(%struct.UART_Type* noundef %6, i32 noundef 8912907, i1 noundef zeroext true) #25, !dbg !9752
  ret void, !dbg !9753
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_imx_irq_err_disable(%struct.device* nocapture noundef readonly %0) #1 !dbg !9754 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9756, metadata !DIExpression()), !dbg !9758
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9759
  %3 = bitcast i8** %2 to %struct.imx_uart_config**, !dbg !9759
  %4 = load %struct.imx_uart_config*, %struct.imx_uart_config** %3, align 4, !dbg !9759
  %5 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %4, i32 0, i32 0, !dbg !9759
  %6 = load %struct.UART_Type*, %struct.UART_Type** %5, align 4, !dbg !9759
  call void @llvm.dbg.value(metadata %struct.UART_Type* %6, metadata !9757, metadata !DIExpression()), !dbg !9758
  tail call void @UART_SetIntCmd(%struct.UART_Type* noundef %6, i32 noundef 8912908, i1 noundef zeroext false) #25, !dbg !9760
  tail call void @UART_SetIntCmd(%struct.UART_Type* noundef %6, i32 noundef 8912907, i1 noundef zeroext false) #25, !dbg !9761
  ret void, !dbg !9762
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_imx_irq_is_pending(%struct.device* nocapture noundef readonly %0) #7 !dbg !9763 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9765, metadata !DIExpression()), !dbg !9767
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9768
  %3 = bitcast i8** %2 to %struct.imx_uart_config**, !dbg !9768
  %4 = load %struct.imx_uart_config*, %struct.imx_uart_config** %3, align 4, !dbg !9768
  %5 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %4, i32 0, i32 0, !dbg !9768
  %6 = load %struct.UART_Type*, %struct.UART_Type** %5, align 4, !dbg !9768
  call void @llvm.dbg.value(metadata %struct.UART_Type* %6, metadata !9766, metadata !DIExpression()), !dbg !9767
  %7 = tail call fastcc zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %6, i32 noundef 9699337) #26, !dbg !9769
  br i1 %7, label %11, label %8, !dbg !9770

8:                                                ; preds = %1
  %9 = tail call fastcc zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %6, i32 noundef 9699341) #26, !dbg !9771
  %10 = zext i1 %9 to i32, !dbg !9770
  br label %11, !dbg !9770

11:                                               ; preds = %8, %1
  %12 = phi i32 [ 1, %1 ], [ %10, %8 ]
  ret i32 %12, !dbg !9772
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @uart_imx_irq_update(%struct.device* nocapture noundef readnone %0) #5 !dbg !9773 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9775, metadata !DIExpression()), !dbg !9776
  ret i32 1, !dbg !9777
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal void @uart_imx_irq_callback_set(%struct.device* nocapture noundef readonly %0, void (%struct.device*, i8*)* noundef %1, i8* noundef %2) #14 !dbg !9778 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9780, metadata !DIExpression()), !dbg !9785
  call void @llvm.dbg.value(metadata void (%struct.device*, i8*)* %1, metadata !9781, metadata !DIExpression()), !dbg !9785
  call void @llvm.dbg.value(metadata i8* %2, metadata !9782, metadata !DIExpression()), !dbg !9785
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9786
  %5 = bitcast i8** %4 to %struct.imx_uart_data**, !dbg !9786
  %6 = load %struct.imx_uart_data*, %struct.imx_uart_data** %5, align 4, !dbg !9786
  call void @llvm.dbg.value(metadata %struct.imx_uart_data* %6, metadata !9783, metadata !DIExpression()), !dbg !9785
  %7 = getelementptr inbounds %struct.imx_uart_data, %struct.imx_uart_data* %6, i32 0, i32 0, !dbg !9787
  store void (%struct.device*, i8*)* %1, void (%struct.device*, i8*)** %7, align 4, !dbg !9788
  %8 = getelementptr inbounds %struct.imx_uart_data, %struct.imx_uart_data* %6, i32 0, i32 1, !dbg !9789
  store i8* %2, i8** %8, align 4, !dbg !9790
  ret void, !dbg !9791
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %0, i32 noundef %1) unnamed_addr #7 !dbg !9792 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !9796, metadata !DIExpression()), !dbg !9799
  call void @llvm.dbg.value(metadata i32 %1, metadata !9797, metadata !DIExpression()), !dbg !9799
  call void @llvm.dbg.value(metadata i32* null, metadata !9798, metadata !DIExpression()), !dbg !9799
  %3 = ptrtoint %struct.UART_Type* %0 to i32, !dbg !9800
  %4 = lshr i32 %1, 16, !dbg !9801
  %5 = add i32 %4, %3, !dbg !9802
  %6 = inttoptr i32 %5 to i32*, !dbg !9803
  call void @llvm.dbg.value(metadata i32* %6, metadata !9798, metadata !DIExpression()), !dbg !9799
  %7 = load volatile i32, i32* %6, align 4, !dbg !9804
  %8 = and i32 %1, 65535, !dbg !9805
  %9 = shl nuw i32 1, %8, !dbg !9806
  %10 = and i32 %7, %9, !dbg !9806
  %11 = icmp ne i32 %10, 0, !dbg !9806
  ret i1 %11, !dbg !9807
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i8 @UART_Getchar(%struct.UART_Type* noundef %0) unnamed_addr #7 !dbg !9808 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !9812, metadata !DIExpression()), !dbg !9813
  %2 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 0, !dbg !9814
  %3 = load volatile i32, i32* %2, align 4, !dbg !9814
  %4 = trunc i32 %3 to i8, !dbg !9815
  ret i8 %4, !dbg !9816
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @UART_Putchar(%struct.UART_Type* noundef %0, i8 noundef zeroext %1) unnamed_addr #18 !dbg !9817 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !9821, metadata !DIExpression()), !dbg !9823
  call void @llvm.dbg.value(metadata i8 %1, metadata !9822, metadata !DIExpression()), !dbg !9823
  %3 = zext i8 %1 to i32, !dbg !9824
  %4 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 2, !dbg !9825
  store volatile i32 %3, i32* %4, align 4, !dbg !9826
  ret void, !dbg !9827
}

; Function Attrs: noinline nounwind optsize
define internal void @irq_config_func_0(%struct.device* nocapture noundef readnone %0) #1 !dbg !1455 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !1457, metadata !DIExpression()), !dbg !9828
  tail call void @z_arm_irq_priority_set(i32 noundef 26, i32 noundef 3, i32 noundef 0) #25, !dbg !9829
  tail call void @arch_irq_enable(i32 noundef 26) #25, !dbg !9831
  ret void, !dbg !9831
}

; Function Attrs: noinline nounwind optsize
define dso_local void @uart_imx_isr(%struct.device* noundef %0) #1 !dbg !9832 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9834, metadata !DIExpression()), !dbg !9836
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9837
  %3 = bitcast i8** %2 to %struct.imx_uart_data**, !dbg !9837
  %4 = load %struct.imx_uart_data*, %struct.imx_uart_data** %3, align 4, !dbg !9837
  call void @llvm.dbg.value(metadata %struct.imx_uart_data* %4, metadata !9835, metadata !DIExpression()), !dbg !9836
  %5 = getelementptr inbounds %struct.imx_uart_data, %struct.imx_uart_data* %4, i32 0, i32 0, !dbg !9838
  %6 = load void (%struct.device*, i8*)*, void (%struct.device*, i8*)** %5, align 4, !dbg !9838
  %7 = icmp eq void (%struct.device*, i8*)* %6, null, !dbg !9840
  br i1 %7, label %11, label %8, !dbg !9841

8:                                                ; preds = %1
  %9 = getelementptr inbounds %struct.imx_uart_data, %struct.imx_uart_data* %4, i32 0, i32 1, !dbg !9842
  %10 = load i8*, i8** %9, align 4, !dbg !9842
  tail call void %6(%struct.device* noundef nonnull %0, i8* noundef %10) #25, !dbg !9844
  br label %11, !dbg !9845

11:                                               ; preds = %8, %1
  ret void, !dbg !9846
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_imx_init(%struct.device* noundef %0) #1 !dbg !9847 {
  %2 = alloca %struct._uart_init_config, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9849, metadata !DIExpression()), !dbg !9864
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9865
  %4 = bitcast i8** %3 to %struct.imx_uart_config**, !dbg !9865
  %5 = load %struct.imx_uart_config*, %struct.imx_uart_config** %4, align 4, !dbg !9865
  %6 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %5, i32 0, i32 0, !dbg !9865
  %7 = load %struct.UART_Type*, %struct.UART_Type** %6, align 4, !dbg !9865
  call void @llvm.dbg.value(metadata %struct.UART_Type* %7, metadata !9850, metadata !DIExpression()), !dbg !9864
  call void @llvm.dbg.value(metadata %struct.imx_uart_config* %5, metadata !9851, metadata !DIExpression()), !dbg !9864
  %8 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !9866, !srcloc !9872
  call void @llvm.dbg.value(metadata i32 undef, metadata !9869, metadata !DIExpression()) #24, !dbg !9873
  call void @llvm.dbg.value(metadata i32 undef, metadata !9870, metadata !DIExpression()) #24, !dbg !9873
  call void @llvm.dbg.value(metadata i32 undef, metadata !9852, metadata !DIExpression()), !dbg !9864
  %9 = bitcast %struct._uart_init_config* %2 to i8*, !dbg !9874
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #24, !dbg !9874
  call void @llvm.dbg.declare(metadata %struct._uart_init_config* %2, metadata !9854, metadata !DIExpression()), !dbg !9875
  %10 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %2, i32 0, i32 1, !dbg !9876
  %11 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %5, i32 0, i32 1, !dbg !9877
  %12 = load i32, i32* %11, align 4, !dbg !9877
  store i32 %12, i32* %10, align 4, !dbg !9876
  %13 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %2, i32 0, i32 2, !dbg !9876
  store i32 32, i32* %13, align 4, !dbg !9876
  %14 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %2, i32 0, i32 3, !dbg !9876
  store i32 0, i32* %14, align 4, !dbg !9876
  %15 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %2, i32 0, i32 4, !dbg !9876
  store i32 0, i32* %15, align 4, !dbg !9876
  %16 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %2, i32 0, i32 5, !dbg !9876
  store i32 6, i32* %16, align 4, !dbg !9876
  %17 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %5, i32 0, i32 3, !dbg !9878
  %18 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %17, align 4, !dbg !9878
  %19 = tail call fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %18) #26, !dbg !9879
  call void @llvm.dbg.value(metadata i32 %19, metadata !9853, metadata !DIExpression()), !dbg !9864
  %20 = icmp eq i32 %19, 0, !dbg !9880
  br i1 %20, label %21, label %30, !dbg !9882

21:                                               ; preds = %1
  %22 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %2, i32 0, i32 0, !dbg !9876
  %23 = extractvalue { i32, i32 } %8, 0, !dbg !9866
  call void @llvm.dbg.value(metadata i32 %23, metadata !9869, metadata !DIExpression()) #24, !dbg !9873
  call void @llvm.dbg.value(metadata i32 %23, metadata !9852, metadata !DIExpression()), !dbg !9864
  %24 = tail call i32 @get_uart_clock_freq(%struct.UART_Type* noundef %7) #25, !dbg !9883
  store i32 %24, i32* %22, align 4, !dbg !9884
  call void @UART_Init(%struct.UART_Type* noundef %7, %struct._uart_init_config* noundef nonnull %2) #25, !dbg !9885
  call fastcc void @UART_SetTxFifoWatermark(%struct.UART_Type* noundef %7) #26, !dbg !9886
  call fastcc void @UART_SetRxFifoWatermark(%struct.UART_Type* noundef %7) #26, !dbg !9887
  call void @llvm.dbg.value(metadata i32 undef, metadata !9888, metadata !DIExpression()) #24, !dbg !9891
  call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %23) #24, !dbg !9893, !srcloc !9894
  %25 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %5, i32 0, i32 4, !dbg !9895
  %26 = load void (%struct.device*)*, void (%struct.device*)** %25, align 4, !dbg !9895
  call void %26(%struct.device* noundef nonnull %0) #25, !dbg !9896
  %27 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %5, i32 0, i32 2, !dbg !9897
  %28 = load i8, i8* %27, align 4, !dbg !9897
  %29 = zext i8 %28 to i32, !dbg !9898
  call void @UART_SetModemMode(%struct.UART_Type* noundef %7, i32 noundef %29) #25, !dbg !9899
  call fastcc void @UART_Enable(%struct.UART_Type* noundef %7) #26, !dbg !9900
  br label %30, !dbg !9901

30:                                               ; preds = %1, %21
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #24, !dbg !9902
  ret i32 %19, !dbg !9902
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %0) unnamed_addr #1 !dbg !9903 {
  %2 = alloca %struct.pinctrl_state*, align 4
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !9907, metadata !DIExpression()), !dbg !9911
  call void @llvm.dbg.value(metadata i8 0, metadata !9908, metadata !DIExpression()), !dbg !9911
  %3 = bitcast %struct.pinctrl_state** %2 to i8*, !dbg !9912
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #24, !dbg !9912
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !9910, metadata !DIExpression(DW_OP_deref)), !dbg !9911
  %4 = call i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* noundef %0, i8 noundef zeroext 0, %struct.pinctrl_state** noundef nonnull %2) #25, !dbg !9913
  call void @llvm.dbg.value(metadata i32 %4, metadata !9909, metadata !DIExpression()), !dbg !9911
  %5 = icmp slt i32 %4, 0, !dbg !9914
  br i1 %5, label %9, label %6, !dbg !9916

6:                                                ; preds = %1
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %2, align 4, !dbg !9917
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %7, metadata !9910, metadata !DIExpression()), !dbg !9911
  %8 = call fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* noundef %7) #26, !dbg !9918
  br label %9, !dbg !9919

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ %4, %1 ], !dbg !9911
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #24, !dbg !9920
  ret i32 %10, !dbg !9920
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @UART_SetTxFifoWatermark(%struct.UART_Type* noundef %0) unnamed_addr #18 !dbg !9921 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !9923, metadata !DIExpression()), !dbg !9925
  call void @llvm.dbg.value(metadata i8 2, metadata !9924, metadata !DIExpression()), !dbg !9925
  %2 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 8, !dbg !9926
  %3 = load volatile i32, i32* %2, align 4, !dbg !9926
  %4 = and i32 %3, -64513, !dbg !9927
  %5 = or i32 %4, 2048, !dbg !9928
  store volatile i32 %5, i32* %2, align 4, !dbg !9929
  ret void, !dbg !9930
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @UART_SetRxFifoWatermark(%struct.UART_Type* noundef %0) unnamed_addr #18 !dbg !9931 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !9933, metadata !DIExpression()), !dbg !9935
  call void @llvm.dbg.value(metadata i8 1, metadata !9934, metadata !DIExpression()), !dbg !9935
  %2 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 8, !dbg !9936
  %3 = load volatile i32, i32* %2, align 4, !dbg !9936
  %4 = and i32 %3, -64, !dbg !9937
  %5 = or i32 %4, 1, !dbg !9938
  store volatile i32 %5, i32* %2, align 4, !dbg !9939
  ret void, !dbg !9940
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @UART_Enable(%struct.UART_Type* noundef %0) unnamed_addr #18 !dbg !9941 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !9945, metadata !DIExpression()), !dbg !9946
  %2 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 4, !dbg !9947
  %3 = load volatile i32, i32* %2, align 4, !dbg !9948
  %4 = or i32 %3, 1, !dbg !9948
  store volatile i32 %4, i32* %2, align 4, !dbg !9948
  ret void, !dbg !9949
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* nocapture noundef readonly %0) unnamed_addr #1 !dbg !9950 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* undef, metadata !9954, metadata !DIExpression()), !dbg !9957
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %0, metadata !9955, metadata !DIExpression()), !dbg !9957
  call void @llvm.dbg.value(metadata i32 0, metadata !9956, metadata !DIExpression()), !dbg !9957
  %2 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 0, !dbg !9958
  %3 = load %struct.pinctrl_soc_pin*, %struct.pinctrl_soc_pin** %2, align 4, !dbg !9958
  %4 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 1, !dbg !9959
  %5 = load i8, i8* %4, align 4, !dbg !9959
  %6 = tail call i32 @pinctrl_configure_pins(%struct.pinctrl_soc_pin* noundef %3, i8 noundef zeroext %5, i32 noundef 0) #25, !dbg !9960
  ret i32 %6, !dbg !9961
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @sys_clock_driver_init(%struct.device* nocapture noundef readnone %0) #18 !dbg !9962 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9964, metadata !DIExpression()), !dbg !9965
  tail call fastcc void @__NVIC_SetPriority.129() #26, !dbg !9966
  store i32 19999, i32* @last_load, align 4, !dbg !9967
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !9968
  store volatile i32 19999, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !9969
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !9970
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !9971
  %3 = or i32 %2, 7, !dbg !9971
  store volatile i32 %3, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !9971
  ret i32 0, !dbg !9972
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.129() unnamed_addr #18 !dbg !9973 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !9975, metadata !DIExpression()), !dbg !9977
  call void @llvm.dbg.value(metadata i32 1, metadata !9976, metadata !DIExpression()), !dbg !9977
  store volatile i8 16, i8* inttoptr (i32 -536810205 to i8*), align 1, !dbg !9978
  ret void, !dbg !9981
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_isr(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !9982 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9984, metadata !DIExpression()), !dbg !9986
  %2 = tail call fastcc i32 @elapsed() #26, !dbg !9987
  %3 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !9988
  %4 = load i32, i32* @cycle_count, align 4, !dbg !9989
  %5 = add i32 %4, %3, !dbg !9989
  store i32 %5, i32* @cycle_count, align 4, !dbg !9989
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !9990
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !9991
  %7 = sub i32 %5, %6, !dbg !9994
  %8 = udiv i32 %7, 20000, !dbg !9995
  call void @llvm.dbg.value(metadata i32 %8, metadata !9985, metadata !DIExpression()), !dbg !9986
  %9 = mul nuw i32 %8, 20000, !dbg !9996
  %10 = add i32 %9, %6, !dbg !9997
  store i32 %10, i32* @announced_cycles, align 4, !dbg !9997
  tail call void @sys_clock_announce(i32 noundef %8) #25, !dbg !9998
  tail call void @z_arm_int_exit() #25, !dbg !9999
  ret void, !dbg !10000
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @elapsed() unnamed_addr #18 !dbg !10001 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10006
  call void @llvm.dbg.value(metadata i32 %1, metadata !10003, metadata !DIExpression()), !dbg !10007
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10008
  call void @llvm.dbg.value(metadata i32 %2, metadata !10004, metadata !DIExpression()), !dbg !10007
  %3 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10009
  call void @llvm.dbg.value(metadata i32 %3, metadata !10005, metadata !DIExpression()), !dbg !10007
  %4 = and i32 %2, 65536, !dbg !10010
  %5 = icmp ne i32 %4, 0, !dbg !10010
  %6 = icmp ult i32 %1, %3
  %7 = select i1 %5, i1 true, i1 %6, !dbg !10012
  %8 = load i32, i32* @last_load, align 4, !dbg !10007
  br i1 %7, label %9, label %13, !dbg !10012

9:                                                ; preds = %0
  %10 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !10013
  %11 = add i32 %10, %8, !dbg !10013
  store volatile i32 %11, i32* @overflow_cyc, align 4, !dbg !10013
  %12 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10015
  br label %13, !dbg !10016

13:                                               ; preds = %0, %9
  %14 = sub i32 %8, %3, !dbg !10017
  %15 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !10018
  %16 = add i32 %14, %15, !dbg !10019
  ret i32 %16, !dbg !10020
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_set_timeout(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !10021 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10025, metadata !DIExpression()), !dbg !10038
  call void @llvm.dbg.value(metadata i1 %1, metadata !10026, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10038
  %3 = icmp eq i32 %0, -1
  %4 = and i1 %3, %1, !dbg !10039
  br i1 %4, label %5, label %8, !dbg !10039

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10041
  %7 = and i32 %6, -2, !dbg !10041
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10041
  store i32 -16777216, i32* @last_load, align 4, !dbg !10043
  br label %60, !dbg !10044

8:                                                ; preds = %2
  %9 = load i32, i32* @last_load, align 4, !dbg !10045
  call void @llvm.dbg.value(metadata i32 %9, metadata !10030, metadata !DIExpression()), !dbg !10038
  br i1 %3, label %18, label %10, !dbg !10046

10:                                               ; preds = %8
  %11 = add i32 %0, -1, !dbg !10046
  call void @llvm.dbg.value(metadata i32 undef, metadata !10025, metadata !DIExpression()), !dbg !10038
  %12 = icmp slt i32 %11, 1, !dbg !10047
  br i1 %12, label %18, label %13, !dbg !10047

13:                                               ; preds = %10
  %14 = icmp ult i32 %11, 837, !dbg !10047
  %15 = select i1 %14, i32 %11, i32 837, !dbg !10047
  %16 = mul nuw nsw i32 %15, 20000, !dbg !10047
  %17 = add nuw nsw i32 %16, 19999, !dbg !10047
  br label %18, !dbg !10047

18:                                               ; preds = %13, %8, %10
  %19 = phi i32 [ 19999, %10 ], [ 16739999, %8 ], [ %17, %13 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !10025, metadata !DIExpression()), !dbg !10038
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !10048, metadata !DIExpression()) #24, !dbg !10055
  %20 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !10057, !srcloc !10063
  call void @llvm.dbg.value(metadata i32 undef, metadata !10060, metadata !DIExpression()) #24, !dbg !10064
  call void @llvm.dbg.value(metadata i32 undef, metadata !10061, metadata !DIExpression()) #24, !dbg !10064
  call void @llvm.dbg.value(metadata i32 undef, metadata !10054, metadata !DIExpression()) #24, !dbg !10055
  %21 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10065
  br i1 %21, label %23, label %22, !dbg !10068

22:                                               ; preds = %18
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.130, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.131, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.132, i32 0, i32 0), i32 noundef 148) #25, !dbg !10069
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.133, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10069
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.132, i32 0, i32 0), i32 noundef 148) #25, !dbg !10069
  unreachable, !dbg !10069

23:                                               ; preds = %18
  %24 = extractvalue { i32, i32 } %20, 0, !dbg !10057
  call void @llvm.dbg.value(metadata i32 %24, metadata !10060, metadata !DIExpression()) #24, !dbg !10064
  call void @llvm.dbg.value(metadata i32 %24, metadata !10054, metadata !DIExpression()) #24, !dbg !10055
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10071
  call void @llvm.dbg.value(metadata i32 %24, metadata !10031, metadata !DIExpression()), !dbg !10038
  %25 = tail call fastcc i32 @elapsed() #26, !dbg !10072
  call void @llvm.dbg.value(metadata i32 %25, metadata !10036, metadata !DIExpression()), !dbg !10038
  %26 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10073
  call void @llvm.dbg.value(metadata i32 %26, metadata !10028, metadata !DIExpression()), !dbg !10038
  %27 = load i32, i32* @cycle_count, align 4, !dbg !10074
  %28 = add i32 %27, %25, !dbg !10074
  store i32 %28, i32* @cycle_count, align 4, !dbg !10074
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !10075
  %29 = load i32, i32* @announced_cycles, align 4, !dbg !10076
  %30 = sub i32 %28, %29, !dbg !10077
  call void @llvm.dbg.value(metadata i32 %30, metadata !10037, metadata !DIExpression()), !dbg !10038
  %31 = icmp slt i32 %30, 0, !dbg !10078
  br i1 %31, label %41, label %32, !dbg !10080

32:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 undef, metadata !10027, metadata !DIExpression()), !dbg !10038
  call void @llvm.dbg.value(metadata i32 undef, metadata !10027, metadata !DIExpression()), !dbg !10038
  %33 = add nuw i32 %19, %30, !dbg !10081
  %34 = urem i32 %33, 20000, !dbg !10083
  call void @llvm.dbg.value(metadata !DIArgList(i32 %33, i32 %34), metadata !10027, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10038
  %35 = sub nuw nsw i32 %19, %34, !dbg !10084
  call void @llvm.dbg.value(metadata i32 %35, metadata !10027, metadata !DIExpression()), !dbg !10038
  %36 = icmp ugt i32 %35, 1250, !dbg !10085
  br i1 %36, label %37, label %39, !dbg !10085

37:                                               ; preds = %32
  call void @llvm.dbg.value(metadata i32 %35, metadata !10027, metadata !DIExpression()), !dbg !10038
  %38 = icmp ugt i32 %35, 16740000, !dbg !10086
  br i1 %38, label %41, label %39, !dbg !10088

39:                                               ; preds = %32, %37
  %40 = phi i32 [ %35, %37 ], [ 1250, %32 ]
  br label %41

41:                                               ; preds = %37, %23, %39
  %42 = phi i32 [ %40, %39 ], [ 1250, %23 ], [ 16740000, %37 ]
  store i32 %42, i32* @last_load, align 4, !dbg !10089
  %43 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10090
  call void @llvm.dbg.value(metadata i32 %43, metadata !10029, metadata !DIExpression()), !dbg !10038
  %44 = add nsw i32 %42, -1, !dbg !10091
  store volatile i32 %44, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !10092
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10093
  %45 = icmp ult i32 %26, %43, !dbg !10094
  br i1 %45, label %46, label %51, !dbg !10096

46:                                               ; preds = %41
  %47 = load i32, i32* @cycle_count, align 4, !dbg !10097
  %48 = add i32 %26, %9, !dbg !10099
  %49 = sub i32 %48, %43, !dbg !10100
  %50 = add i32 %49, %47, !dbg !10097
  br label %55, !dbg !10101

51:                                               ; preds = %41
  %52 = sub i32 %26, %43, !dbg !10102
  %53 = load i32, i32* @cycle_count, align 4, !dbg !10104
  %54 = add i32 %52, %53, !dbg !10104
  br label %55

55:                                               ; preds = %51, %46
  %56 = phi i32 [ %54, %51 ], [ %50, %46 ], !dbg !10105
  store i32 %56, i32* @cycle_count, align 4, !dbg !10105
  call void @llvm.dbg.value(metadata i32 undef, metadata !10106, metadata !DIExpression()) #24, !dbg !10112
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !10111, metadata !DIExpression()) #24, !dbg !10112
  %57 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10114
  br i1 %57, label %59, label %58, !dbg !10117

58:                                               ; preds = %55
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.130, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.134, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.132, i32 0, i32 0), i32 noundef 194) #25, !dbg !10118
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.135, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10118
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.132, i32 0, i32 0), i32 noundef 194) #25, !dbg !10118
  unreachable, !dbg !10118

59:                                               ; preds = %55
  call void @llvm.dbg.value(metadata i32 %24, metadata !10106, metadata !DIExpression()) #24, !dbg !10112
  call void @llvm.dbg.value(metadata i32 %24, metadata !10120, metadata !DIExpression()) #24, !dbg !10123
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %24) #24, !dbg !10125, !srcloc !10126
  br label %60

60:                                               ; preds = %59, %5
  ret void, !dbg !10127
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_elapsed() local_unnamed_addr #1 !dbg !10128 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !10048, metadata !DIExpression()) #24, !dbg !10132
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !10134, !srcloc !10063
  call void @llvm.dbg.value(metadata i32 undef, metadata !10060, metadata !DIExpression()) #24, !dbg !10136
  call void @llvm.dbg.value(metadata i32 undef, metadata !10061, metadata !DIExpression()) #24, !dbg !10136
  call void @llvm.dbg.value(metadata i32 undef, metadata !10054, metadata !DIExpression()) #24, !dbg !10132
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10137
  br i1 %2, label %4, label %3, !dbg !10138

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.130, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.131, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.132, i32 0, i32 0), i32 noundef 148) #25, !dbg !10139
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.133, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10139
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.132, i32 0, i32 0), i32 noundef 148) #25, !dbg !10139
  unreachable, !dbg !10139

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !10060, metadata !DIExpression()) #24, !dbg !10136
  call void @llvm.dbg.value(metadata i32 undef, metadata !10054, metadata !DIExpression()) #24, !dbg !10132
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10140
  call void @llvm.dbg.value(metadata i32 undef, metadata !10130, metadata !DIExpression()), !dbg !10141
  %5 = tail call fastcc i32 @elapsed() #26, !dbg !10142
  %6 = load i32, i32* @cycle_count, align 4, !dbg !10143
  %7 = load i32, i32* @announced_cycles, align 4, !dbg !10144
  call void @llvm.dbg.value(metadata !DIArgList(i32 %5, i32 %7, i32 %6), metadata !10131, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10141
  call void @llvm.dbg.value(metadata i32 undef, metadata !10106, metadata !DIExpression()) #24, !dbg !10145
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !10111, metadata !DIExpression()) #24, !dbg !10145
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10147
  br i1 %8, label %10, label %9, !dbg !10148

9:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.130, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.134, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.132, i32 0, i32 0), i32 noundef 194) #25, !dbg !10149
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.135, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10149
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.132, i32 0, i32 0), i32 noundef 194) #25, !dbg !10149
  unreachable, !dbg !10149

10:                                               ; preds = %4
  %11 = add i32 %6, %5, !dbg !10150
  call void @llvm.dbg.value(metadata !DIArgList(i32 %11, i32 %7), metadata !10131, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10141
  %12 = sub i32 %11, %7, !dbg !10151
  call void @llvm.dbg.value(metadata i32 %12, metadata !10131, metadata !DIExpression()), !dbg !10141
  %13 = extractvalue { i32, i32 } %1, 0, !dbg !10134
  call void @llvm.dbg.value(metadata i32 %13, metadata !10060, metadata !DIExpression()) #24, !dbg !10136
  call void @llvm.dbg.value(metadata i32 %13, metadata !10054, metadata !DIExpression()) #24, !dbg !10132
  call void @llvm.dbg.value(metadata i32 %13, metadata !10130, metadata !DIExpression()), !dbg !10141
  call void @llvm.dbg.value(metadata i32 undef, metadata !10106, metadata !DIExpression()) #24, !dbg !10145
  call void @llvm.dbg.value(metadata i32 undef, metadata !10120, metadata !DIExpression()) #24, !dbg !10152
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #24, !dbg !10154, !srcloc !10126
  %14 = udiv i32 %12, 20000, !dbg !10155
  ret i32 %14, !dbg !10156
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_cycle_get_32() local_unnamed_addr #1 !dbg !10157 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !10048, metadata !DIExpression()) #24, !dbg !10161
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !10163, !srcloc !10063
  call void @llvm.dbg.value(metadata i32 undef, metadata !10060, metadata !DIExpression()) #24, !dbg !10165
  call void @llvm.dbg.value(metadata i32 undef, metadata !10061, metadata !DIExpression()) #24, !dbg !10165
  call void @llvm.dbg.value(metadata i32 undef, metadata !10054, metadata !DIExpression()) #24, !dbg !10161
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10166
  br i1 %2, label %4, label %3, !dbg !10167

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.130, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.131, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.132, i32 0, i32 0), i32 noundef 148) #25, !dbg !10168
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.133, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10168
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.132, i32 0, i32 0), i32 noundef 148) #25, !dbg !10168
  unreachable, !dbg !10168

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !10060, metadata !DIExpression()) #24, !dbg !10165
  call void @llvm.dbg.value(metadata i32 undef, metadata !10054, metadata !DIExpression()) #24, !dbg !10161
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10169
  call void @llvm.dbg.value(metadata i32 undef, metadata !10159, metadata !DIExpression()), !dbg !10170
  %5 = tail call fastcc i32 @elapsed() #26, !dbg !10171
  %6 = load i32, i32* @cycle_count, align 4, !dbg !10172
  call void @llvm.dbg.value(metadata !DIArgList(i32 %5, i32 %6), metadata !10160, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !10170
  call void @llvm.dbg.value(metadata i32 undef, metadata !10106, metadata !DIExpression()) #24, !dbg !10173
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !10111, metadata !DIExpression()) #24, !dbg !10173
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10175
  br i1 %7, label %9, label %8, !dbg !10176

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.130, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.134, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.132, i32 0, i32 0), i32 noundef 194) #25, !dbg !10177
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.135, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10177
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.132, i32 0, i32 0), i32 noundef 194) #25, !dbg !10177
  unreachable, !dbg !10177

9:                                                ; preds = %4
  %10 = add i32 %6, %5, !dbg !10178
  call void @llvm.dbg.value(metadata i32 %10, metadata !10160, metadata !DIExpression()), !dbg !10170
  %11 = extractvalue { i32, i32 } %1, 0, !dbg !10163
  call void @llvm.dbg.value(metadata i32 %11, metadata !10060, metadata !DIExpression()) #24, !dbg !10165
  call void @llvm.dbg.value(metadata i32 %11, metadata !10054, metadata !DIExpression()) #24, !dbg !10161
  call void @llvm.dbg.value(metadata i32 %11, metadata !10159, metadata !DIExpression()), !dbg !10170
  call void @llvm.dbg.value(metadata i32 undef, metadata !10106, metadata !DIExpression()) #24, !dbg !10173
  call void @llvm.dbg.value(metadata i32 undef, metadata !10120, metadata !DIExpression()) #24, !dbg !10179
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %11) #24, !dbg !10181, !srcloc !10126
  ret i32 %10, !dbg !10182
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_idle_exit() local_unnamed_addr #18 !dbg !10183 {
  %1 = load i32, i32* @last_load, align 4, !dbg !10184
  %2 = icmp eq i32 %1, -16777216, !dbg !10186
  br i1 %2, label %3, label %6, !dbg !10187

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10188
  %5 = or i32 %4, 1, !dbg !10188
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10188
  br label %6, !dbg !10190

6:                                                ; preds = %3, %0
  ret void, !dbg !10191
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_disable() local_unnamed_addr #18 !dbg !10192 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10193
  %2 = and i32 %1, -2, !dbg !10193
  store volatile i32 %2, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10193
  ret void, !dbg !10194
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* nocapture noundef readonly %0, i8 noundef zeroext %1, %struct.pinctrl_state** nocapture noundef writeonly %2) local_unnamed_addr #17 !dbg !10195 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !10228, metadata !DIExpression()), !dbg !10231
  call void @llvm.dbg.value(metadata i8 %1, metadata !10229, metadata !DIExpression()), !dbg !10231
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !10230, metadata !DIExpression()), !dbg !10231
  %4 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 0, !dbg !10232
  %5 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !10232
  %6 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 1
  store %struct.pinctrl_state* %5, %struct.pinctrl_state** %2, align 4, !dbg !10231
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !10233
  %8 = load i8, i8* %6, align 4, !dbg !10234
  %9 = zext i8 %8 to i32, !dbg !10235
  %10 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %7, i32 %9, !dbg !10235
  %11 = icmp ult %struct.pinctrl_state* %5, %10, !dbg !10236
  br i1 %11, label %18, label %24, !dbg !10237

12:                                               ; preds = %18
  store %struct.pinctrl_state* %23, %struct.pinctrl_state** %2, align 4, !dbg !10231
  %13 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !10233
  %14 = load i8, i8* %6, align 4, !dbg !10234
  %15 = zext i8 %14 to i32, !dbg !10235
  %16 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %13, i32 %15, !dbg !10235
  %17 = icmp ult %struct.pinctrl_state* %23, %16, !dbg !10236
  br i1 %17, label %18, label %24, !dbg !10237, !llvm.loop !10238

18:                                               ; preds = %3, %12
  %19 = phi %struct.pinctrl_state* [ %23, %12 ], [ %5, %3 ]
  %20 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 0, i32 2, !dbg !10240
  %21 = load i8, i8* %20, align 1, !dbg !10240
  %22 = icmp eq i8 %21, %1, !dbg !10243
  %23 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 1, !dbg !10244
  br i1 %22, label %24, label %12, !dbg !10245

24:                                               ; preds = %18, %12, %3
  %25 = phi i32 [ -2, %3 ], [ -2, %12 ], [ 0, %18 ], !dbg !10231
  ret i32 %25, !dbg !10246
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @imx_pinctrl_init(%struct.device* nocapture noundef readnone %0) #5 !dbg !10247 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10249, metadata !DIExpression()), !dbg !10250
  ret i32 0, !dbg !10251
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @pinctrl_configure_pins(%struct.pinctrl_soc_pin* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #18 !dbg !10252 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_soc_pin* %0, metadata !10270, metadata !DIExpression()), !dbg !10283
  call void @llvm.dbg.value(metadata i8 %1, metadata !10271, metadata !DIExpression()), !dbg !10283
  call void @llvm.dbg.value(metadata i32 %2, metadata !10272, metadata !DIExpression()), !dbg !10283
  call void @llvm.dbg.value(metadata i8 0, metadata !10273, metadata !DIExpression()), !dbg !10284
  %4 = icmp eq i8 %1, 0, !dbg !10285
  br i1 %4, label %7, label %5, !dbg !10286

5:                                                ; preds = %3
  %6 = zext i8 %1 to i32, !dbg !10285
  br label %8, !dbg !10286

7:                                                ; preds = %37, %3
  ret i32 0, !dbg !10287

8:                                                ; preds = %5, %37
  %9 = phi i32 [ 0, %5 ], [ %38, %37 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !10273, metadata !DIExpression()), !dbg !10284
  %10 = getelementptr inbounds %struct.pinctrl_soc_pin, %struct.pinctrl_soc_pin* %0, i32 %9, i32 0, i32 0, !dbg !10288
  %11 = load i32, i32* %10, align 4, !dbg !10288
  call void @llvm.dbg.value(metadata i32 %11, metadata !10275, metadata !DIExpression()), !dbg !10289
  %12 = getelementptr inbounds %struct.pinctrl_soc_pin, %struct.pinctrl_soc_pin* %0, i32 %9, i32 0, i32 3, !dbg !10290
  %13 = load i8, i8* %12, align 4, !dbg !10290
  call void @llvm.dbg.value(metadata i8 %13, metadata !10278, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10289
  %14 = getelementptr inbounds %struct.pinctrl_soc_pin, %struct.pinctrl_soc_pin* %0, i32 %9, i32 0, i32 2, !dbg !10291
  %15 = load i32, i32* %14, align 4, !dbg !10291
  call void @llvm.dbg.value(metadata i32 %15, metadata !10279, metadata !DIExpression()), !dbg !10289
  call void @llvm.dbg.value(metadata i8 %13, metadata !10280, metadata !DIExpression(DW_OP_constu, 4, DW_OP_shr, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10289
  %16 = getelementptr inbounds %struct.pinctrl_soc_pin, %struct.pinctrl_soc_pin* %0, i32 %9, i32 0, i32 1, !dbg !10292
  %17 = load i32, i32* %16, align 4, !dbg !10292
  call void @llvm.dbg.value(metadata i32 %17, metadata !10281, metadata !DIExpression()), !dbg !10289
  %18 = getelementptr inbounds %struct.pinctrl_soc_pin, %struct.pinctrl_soc_pin* %0, i32 %9, i32 1, !dbg !10293
  %19 = load i32, i32* %18, align 4, !dbg !10293
  call void @llvm.dbg.value(metadata i32 %19, metadata !10282, metadata !DIExpression()), !dbg !10289
  %20 = and i8 %13, 15, !dbg !10294
  %21 = zext i8 %20 to i32, !dbg !10294
  %22 = lshr i32 %19, 27, !dbg !10295
  %23 = and i32 %22, 16, !dbg !10295
  %24 = or i32 %23, %21, !dbg !10296
  %25 = inttoptr i32 %11 to i32*, !dbg !10297
  store volatile i32 %24, i32* %25, align 4, !dbg !10298
  %26 = icmp eq i32 %15, 0, !dbg !10299
  br i1 %26, label %32, label %27, !dbg !10301

27:                                               ; preds = %8
  %28 = lshr i8 %13, 4, !dbg !10302
  call void @llvm.dbg.value(metadata i8 %28, metadata !10280, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10289
  %29 = and i8 %28, 7, !dbg !10303
  %30 = zext i8 %29 to i32, !dbg !10303
  %31 = inttoptr i32 %15 to i32*, !dbg !10305
  store volatile i32 %30, i32* %31, align 4, !dbg !10306
  br label %32, !dbg !10307

32:                                               ; preds = %27, %8
  %33 = icmp eq i32 %17, 0, !dbg !10308
  br i1 %33, label %37, label %34, !dbg !10310

34:                                               ; preds = %32
  %35 = and i32 %19, 2147483647, !dbg !10311
  %36 = inttoptr i32 %17 to i32*, !dbg !10313
  store volatile i32 %35, i32* %36, align 4, !dbg !10314
  br label %37, !dbg !10315

37:                                               ; preds = %34, %32
  %38 = add nuw nsw i32 %9, 1, !dbg !10316
  call void @llvm.dbg.value(metadata i32 %38, metadata !10273, metadata !DIExpression()), !dbg !10284
  %39 = icmp eq i32 %38, %6, !dbg !10285
  br i1 %39, label %7, label %8, !dbg !10286, !llvm.loop !10317
}

; Function Attrs: noinline nounwind optsize
define dso_local void @CCM_SetRootDivider(%struct.CCM_Type* nocapture noundef readnone %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !10319 {
  call void @llvm.dbg.value(metadata %struct.CCM_Type* %0, metadata !10376, metadata !DIExpression()), !dbg !10380
  call void @llvm.dbg.value(metadata i32 %1, metadata !10377, metadata !DIExpression()), !dbg !10380
  call void @llvm.dbg.value(metadata i32 %2, metadata !10378, metadata !DIExpression()), !dbg !10380
  call void @llvm.dbg.value(metadata i32 %3, metadata !10379, metadata !DIExpression()), !dbg !10380
  %5 = icmp ult i32 %2, 8, !dbg !10381
  br i1 %5, label %7, label %6, !dbg !10384

6:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.143, i32 0, i32 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.144, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.2.145, i32 0, i32 0), i32 noundef 45) #25, !dbg !10385
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.2.145, i32 0, i32 0), i32 noundef 45) #25, !dbg !10385
  unreachable, !dbg !10385

7:                                                ; preds = %4
  %8 = icmp ult i32 %3, 64, !dbg !10387
  br i1 %8, label %10, label %9, !dbg !10390

9:                                                ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.143, i32 0, i32 0), i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3.146, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.2.145, i32 0, i32 0), i32 noundef 46) #25, !dbg !10391
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.2.145, i32 0, i32 0), i32 noundef 46) #25, !dbg !10391
  unreachable, !dbg !10391

10:                                               ; preds = %7
  %11 = inttoptr i32 %1 to i32*, !dbg !10393
  %12 = load volatile i32, i32* %11, align 4, !dbg !10393
  %13 = and i32 %12, -458816, !dbg !10394
  %14 = shl nuw nsw i32 %2, 16, !dbg !10395
  %15 = and i32 %14, 458752, !dbg !10395
  %16 = or i32 %15, %3, !dbg !10396
  %17 = or i32 %16, %13, !dbg !10397
  store volatile i32 %17, i32* %11, align 4, !dbg !10398
  ret void, !dbg !10399
}

; Function Attrs: noinline nounwind optsize
define dso_local void @CCM_GetRootDivider(%struct.CCM_Type* nocapture noundef readnone %0, i32 noundef %1, i32* noundef writeonly %2, i32* noundef writeonly %3) local_unnamed_addr #1 !dbg !10400 {
  call void @llvm.dbg.value(metadata %struct.CCM_Type* %0, metadata !10404, metadata !DIExpression()), !dbg !10408
  call void @llvm.dbg.value(metadata i32 %1, metadata !10405, metadata !DIExpression()), !dbg !10408
  call void @llvm.dbg.value(metadata i32* %2, metadata !10406, metadata !DIExpression()), !dbg !10408
  call void @llvm.dbg.value(metadata i32* %3, metadata !10407, metadata !DIExpression()), !dbg !10408
  %5 = icmp ne i32* %2, null, !dbg !10409
  %6 = icmp ne i32* %3, null, !dbg !10409
  %7 = and i1 %5, %6, !dbg !10409
  br i1 %7, label %9, label %8, !dbg !10409

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.143, i32 0, i32 0), i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.4.147, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.2.145, i32 0, i32 0), i32 noundef 61) #25, !dbg !10412
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.2.145, i32 0, i32 0), i32 noundef 61) #25, !dbg !10412
  unreachable, !dbg !10412

9:                                                ; preds = %4
  %10 = inttoptr i32 %1 to i32*, !dbg !10414
  %11 = load volatile i32, i32* %10, align 4, !dbg !10414
  %12 = lshr i32 %11, 16, !dbg !10415
  %13 = and i32 %12, 7, !dbg !10415
  store i32 %13, i32* %2, align 4, !dbg !10416
  %14 = load volatile i32, i32* %10, align 4, !dbg !10417
  %15 = and i32 %14, 63, !dbg !10418
  store i32 %15, i32* %3, align 4, !dbg !10419
  ret void, !dbg !10420
}

; Function Attrs: noinline nounwind optsize
define dso_local void @CCM_UpdateRoot(%struct.CCM_Type* nocapture noundef readnone %0, i32 noundef %1, i32 noundef %2, i32 noundef %3, i32 noundef %4) local_unnamed_addr #1 !dbg !10421 {
  call void @llvm.dbg.value(metadata %struct.CCM_Type* %0, metadata !10425, metadata !DIExpression()), !dbg !10430
  call void @llvm.dbg.value(metadata i32 %1, metadata !10426, metadata !DIExpression()), !dbg !10430
  call void @llvm.dbg.value(metadata i32 %2, metadata !10427, metadata !DIExpression()), !dbg !10430
  call void @llvm.dbg.value(metadata i32 %3, metadata !10428, metadata !DIExpression()), !dbg !10430
  call void @llvm.dbg.value(metadata i32 %4, metadata !10429, metadata !DIExpression()), !dbg !10430
  %6 = icmp ult i32 %3, 8, !dbg !10431
  br i1 %6, label %8, label %7, !dbg !10434

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.143, i32 0, i32 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.144, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.2.145, i32 0, i32 0), i32 noundef 75) #25, !dbg !10435
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.2.145, i32 0, i32 0), i32 noundef 75) #25, !dbg !10435
  unreachable, !dbg !10435

8:                                                ; preds = %5
  %9 = icmp ult i32 %4, 64, !dbg !10437
  br i1 %9, label %11, label %10, !dbg !10440

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.143, i32 0, i32 0), i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3.146, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.2.145, i32 0, i32 0), i32 noundef 76) #25, !dbg !10441
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.2.145, i32 0, i32 0), i32 noundef 76) #25, !dbg !10441
  unreachable, !dbg !10441

11:                                               ; preds = %8
  %12 = inttoptr i32 %1 to i32*, !dbg !10443
  %13 = load volatile i32, i32* %12, align 4, !dbg !10443
  %14 = and i32 %13, -117899328, !dbg !10444
  %15 = shl i32 %2, 24, !dbg !10445
  %16 = and i32 %15, 117440512, !dbg !10445
  %17 = shl nuw nsw i32 %3, 16, !dbg !10446
  %18 = and i32 %17, 458752, !dbg !10446
  %19 = or i32 %16, %4, !dbg !10447
  %20 = or i32 %19, %18, !dbg !10448
  %21 = or i32 %20, %14, !dbg !10449
  store volatile i32 %21, i32* %12, align 4, !dbg !10450
  ret void, !dbg !10451
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @CCM_ANALOG_GetArmPllFreq(%struct.CCM_ANALOG_Type* noundef %0) local_unnamed_addr #7 !dbg !10452 {
  call void @llvm.dbg.value(metadata %struct.CCM_ANALOG_Type* %0, metadata !10457, metadata !DIExpression()), !dbg !10458
  %2 = tail call fastcc zeroext i1 @CCM_ANALOG_IsPllBypassed(%struct.CCM_ANALOG_Type* noundef %0, i32 noundef 786528) #26, !dbg !10459
  br i1 %2, label %7, label %3, !dbg !10461

3:                                                ; preds = %1
  %4 = load volatile i32, i32* inttoptr (i32 808845408 to i32*), align 32, !dbg !10462
  %5 = and i32 %4, 127, !dbg !10463
  %6 = mul nuw nsw i32 %5, 12000000, !dbg !10464
  br label %7, !dbg !10465

7:                                                ; preds = %1, %3
  %8 = phi i32 [ %6, %3 ], [ 24000000, %1 ], !dbg !10458
  ret i32 %8, !dbg !10466
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i1 @CCM_ANALOG_IsPllBypassed(%struct.CCM_ANALOG_Type* noundef %0, i32 noundef %1) unnamed_addr #7 !dbg !10467 {
  call void @llvm.dbg.value(metadata %struct.CCM_ANALOG_Type* %0, metadata !10471, metadata !DIExpression()), !dbg !10473
  call void @llvm.dbg.value(metadata i32 %1, metadata !10472, metadata !DIExpression()), !dbg !10473
  %3 = ptrtoint %struct.CCM_ANALOG_Type* %0 to i32, !dbg !10474
  %4 = and i32 %1, 65535, !dbg !10474
  %5 = add i32 %4, %3, !dbg !10474
  %6 = inttoptr i32 %5 to i32*, !dbg !10474
  %7 = load volatile i32, i32* %6, align 4, !dbg !10474
  %8 = and i32 %7, 65536, !dbg !10475
  %9 = icmp ne i32 %8, 0, !dbg !10476
  ret i1 %9, !dbg !10477
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @CCM_ANALOG_GetSysPllFreq(%struct.CCM_ANALOG_Type* noundef %0) local_unnamed_addr #7 !dbg !10478 {
  call void @llvm.dbg.value(metadata %struct.CCM_ANALOG_Type* %0, metadata !10480, metadata !DIExpression()), !dbg !10481
  %2 = tail call fastcc zeroext i1 @CCM_ANALOG_IsPllBypassed(%struct.CCM_ANALOG_Type* noundef %0, i32 noundef 786608) #26, !dbg !10482
  br i1 %2, label %8, label %3, !dbg !10484

3:                                                ; preds = %1
  %4 = load volatile i32, i32* inttoptr (i32 808845488 to i32*), align 16, !dbg !10485
  %5 = and i32 %4, 1, !dbg !10487
  %6 = icmp eq i32 %5, 0, !dbg !10487
  %7 = select i1 %6, i32 480000000, i32 528000000, !dbg !10488
  br label %8, !dbg !10488

8:                                                ; preds = %3, %1
  %9 = phi i32 [ 24000000, %1 ], [ %7, %3 ], !dbg !10481
  ret i32 %9, !dbg !10489
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @CCM_ANALOG_GetDdrPllFreq(%struct.CCM_ANALOG_Type* noundef %0) local_unnamed_addr #7 !dbg !10490 {
  call void @llvm.dbg.value(metadata %struct.CCM_ANALOG_Type* %0, metadata !10492, metadata !DIExpression()), !dbg !10496
  %2 = tail call fastcc zeroext i1 @CCM_ANALOG_IsPllBypassed(%struct.CCM_ANALOG_Type* noundef %0, i32 noundef 1310832) #26, !dbg !10497
  br i1 %2, label %40, label %3, !dbg !10499

3:                                                ; preds = %1
  %4 = load volatile i32, i32* inttoptr (i32 808845424 to i32*), align 16, !dbg !10500
  %5 = trunc i32 %4 to i8, !dbg !10500
  %6 = and i8 %5, 127, !dbg !10500
  call void @llvm.dbg.value(metadata i8 %6, metadata !10493, metadata !DIExpression()), !dbg !10496
  %7 = load volatile i32, i32* inttoptr (i32 808845424 to i32*), align 16, !dbg !10501
  %8 = lshr i32 %7, 21, !dbg !10502
  %9 = and i32 %8, 3, !dbg !10503
  call void @llvm.dbg.value(metadata i32 %9, metadata !10494, metadata !DIExpression()), !dbg !10496
  %10 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.CCM_ANALOG_GetVideoPllFreq.4, i32 0, i32 %9, !dbg !10504
  %11 = load i32, i32* %10, align 4, !dbg !10504
  call void @llvm.dbg.value(metadata i8 undef, metadata !10494, metadata !DIExpression()), !dbg !10496
  %12 = getelementptr inbounds %struct.CCM_ANALOG_Type, %struct.CCM_ANALOG_Type* %0, i32 0, i32 9, !dbg !10505
  %13 = load volatile i32, i32* %12, align 4, !dbg !10505
  %14 = and i32 %13, 32768, !dbg !10507
  %15 = icmp eq i32 %14, 0, !dbg !10507
  br i1 %15, label %36, label %16, !dbg !10508

16:                                               ; preds = %3
  %17 = load volatile i32, i32* %12, align 4, !dbg !10509
  %18 = and i32 %17, 32767, !dbg !10511
  %19 = uitofp i32 %18 to float, !dbg !10512
  %20 = getelementptr inbounds %struct.CCM_ANALOG_Type, %struct.CCM_ANALOG_Type* %0, i32 0, i32 13, !dbg !10513
  %21 = load volatile i32, i32* %20, align 4, !dbg !10513
  %22 = and i32 %21, 1073741823, !dbg !10514
  %23 = uitofp i32 %22 to float, !dbg !10515
  %24 = fdiv float %19, %23, !dbg !10516
  %25 = getelementptr inbounds %struct.CCM_ANALOG_Type, %struct.CCM_ANALOG_Type* %0, i32 0, i32 11, !dbg !10517
  %26 = load volatile i32, i32* %25, align 4, !dbg !10517
  %27 = and i32 %26, 1073741823, !dbg !10518
  %28 = uitofp i32 %27 to float, !dbg !10519
  %29 = fmul float %24, %28, !dbg !10520
  call void @llvm.dbg.value(metadata float %29, metadata !10495, metadata !DIExpression()), !dbg !10496
  %30 = lshr i32 24000000, %11, !dbg !10521
  %31 = uitofp i32 %30 to float, !dbg !10522
  %32 = uitofp i8 %6 to float, !dbg !10523
  %33 = fadd float %29, %32, !dbg !10524
  %34 = fmul float %33, %31, !dbg !10525
  %35 = fptoui float %34 to i32, !dbg !10526
  br label %40, !dbg !10527

36:                                               ; preds = %3
  %37 = lshr i32 24000000, %11, !dbg !10528
  %38 = zext i8 %6 to i32, !dbg !10530
  %39 = mul nuw i32 %37, %38, !dbg !10531
  br label %40, !dbg !10532

40:                                               ; preds = %1, %36, %16
  %41 = phi i32 [ %35, %16 ], [ %39, %36 ], [ 24000000, %1 ], !dbg !10496
  ret i32 %41, !dbg !10533
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @CCM_ANALOG_GetEnetPllFreq(%struct.CCM_ANALOG_Type* noundef %0) local_unnamed_addr #7 !dbg !10534 {
  call void @llvm.dbg.value(metadata %struct.CCM_ANALOG_Type* %0, metadata !10536, metadata !DIExpression()), !dbg !10537
  %2 = tail call fastcc zeroext i1 @CCM_ANALOG_IsPllBypassed(%struct.CCM_ANALOG_Type* noundef %0, i32 noundef 327904) #26, !dbg !10538
  %3 = select i1 %2, i32 24000000, i32 1000000000, !dbg !10537
  ret i32 %3, !dbg !10540
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @CCM_ANALOG_GetAudioPllFreq(%struct.CCM_ANALOG_Type* noundef %0) local_unnamed_addr #7 !dbg !10541 {
  call void @llvm.dbg.value(metadata %struct.CCM_ANALOG_Type* %0, metadata !10543, metadata !DIExpression()), !dbg !10548
  %2 = tail call fastcc zeroext i1 @CCM_ANALOG_IsPllBypassed(%struct.CCM_ANALOG_Type* noundef %0, i32 noundef 786672) #26, !dbg !10549
  br i1 %2, label %47, label %3, !dbg !10551

3:                                                ; preds = %1
  %4 = load volatile i32, i32* inttoptr (i32 808845552 to i32*), align 16, !dbg !10552
  %5 = trunc i32 %4 to i8, !dbg !10552
  %6 = and i8 %5, 127, !dbg !10552
  call void @llvm.dbg.value(metadata i8 %6, metadata !10544, metadata !DIExpression()), !dbg !10548
  %7 = load volatile i32, i32* inttoptr (i32 808845552 to i32*), align 16, !dbg !10553
  %8 = lshr i32 %7, 22, !dbg !10554
  %9 = and i32 %8, 3, !dbg !10555
  call void @llvm.dbg.value(metadata i32 %8, metadata !10545, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_constu, 3, DW_OP_and, DW_OP_stack_value)), !dbg !10548
  %10 = load volatile i32, i32* inttoptr (i32 808845552 to i32*), align 16, !dbg !10556
  %11 = lshr i32 %10, 19, !dbg !10557
  %12 = and i32 %11, 3, !dbg !10558
  call void @llvm.dbg.value(metadata i32 %11, metadata !10546, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_constu, 3, DW_OP_and, DW_OP_stack_value)), !dbg !10548
  %13 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.CCM_ANALOG_GetVideoPllFreq, i32 0, i32 %9, !dbg !10559
  %14 = load i32, i32* %13, align 4, !dbg !10559
  call void @llvm.dbg.value(metadata i8 undef, metadata !10545, metadata !DIExpression()), !dbg !10548
  %15 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.CCM_ANALOG_GetVideoPllFreq.4, i32 0, i32 %12, !dbg !10560
  %16 = load i32, i32* %15, align 4, !dbg !10560
  call void @llvm.dbg.value(metadata i8 undef, metadata !10546, metadata !DIExpression()), !dbg !10548
  %17 = getelementptr inbounds %struct.CCM_ANALOG_Type, %struct.CCM_ANALOG_Type* %0, i32 0, i32 35, !dbg !10561
  %18 = load volatile i32, i32* %17, align 4, !dbg !10561
  %19 = and i32 %18, 32768, !dbg !10563
  %20 = icmp eq i32 %19, 0, !dbg !10563
  br i1 %20, label %42, label %21, !dbg !10564

21:                                               ; preds = %3
  %22 = load volatile i32, i32* %17, align 4, !dbg !10565
  %23 = and i32 %22, 32767, !dbg !10567
  %24 = uitofp i32 %23 to float, !dbg !10568
  %25 = getelementptr inbounds %struct.CCM_ANALOG_Type, %struct.CCM_ANALOG_Type* %0, i32 0, i32 39, !dbg !10569
  %26 = load volatile i32, i32* %25, align 4, !dbg !10569
  %27 = and i32 %26, 1073741823, !dbg !10570
  %28 = uitofp i32 %27 to float, !dbg !10571
  %29 = fdiv float %24, %28, !dbg !10572
  %30 = getelementptr inbounds %struct.CCM_ANALOG_Type, %struct.CCM_ANALOG_Type* %0, i32 0, i32 37, !dbg !10573
  %31 = load volatile i32, i32* %30, align 4, !dbg !10573
  %32 = and i32 %31, 1073741823, !dbg !10574
  %33 = uitofp i32 %32 to float, !dbg !10575
  %34 = fmul float %29, %33, !dbg !10576
  call void @llvm.dbg.value(metadata float %34, metadata !10547, metadata !DIExpression()), !dbg !10548
  %35 = lshr i32 24000000, %16, !dbg !10577
  %36 = lshr i32 %35, %14, !dbg !10578
  %37 = uitofp i32 %36 to float, !dbg !10579
  %38 = uitofp i8 %6 to float, !dbg !10580
  %39 = fadd float %34, %38, !dbg !10581
  %40 = fmul float %39, %37, !dbg !10582
  %41 = fptoui float %40 to i32, !dbg !10583
  br label %47, !dbg !10584

42:                                               ; preds = %3
  %43 = lshr i32 24000000, %16, !dbg !10585
  %44 = lshr i32 %43, %14, !dbg !10587
  %45 = zext i8 %6 to i32, !dbg !10588
  %46 = mul nuw i32 %44, %45, !dbg !10589
  br label %47, !dbg !10590

47:                                               ; preds = %1, %42, %21
  %48 = phi i32 [ %41, %21 ], [ %46, %42 ], [ 24000000, %1 ], !dbg !10548
  ret i32 %48, !dbg !10591
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @CCM_ANALOG_GetVideoPllFreq(%struct.CCM_ANALOG_Type* noundef %0) local_unnamed_addr #7 !dbg !10592 {
  call void @llvm.dbg.value(metadata %struct.CCM_ANALOG_Type* %0, metadata !10594, metadata !DIExpression()), !dbg !10599
  %2 = tail call fastcc zeroext i1 @CCM_ANALOG_IsPllBypassed(%struct.CCM_ANALOG_Type* noundef %0, i32 noundef 786736) #26, !dbg !10600
  br i1 %2, label %47, label %3, !dbg !10602

3:                                                ; preds = %1
  %4 = load volatile i32, i32* inttoptr (i32 808845616 to i32*), align 16, !dbg !10603
  %5 = trunc i32 %4 to i8, !dbg !10603
  %6 = and i8 %5, 127, !dbg !10603
  call void @llvm.dbg.value(metadata i8 %6, metadata !10595, metadata !DIExpression()), !dbg !10599
  %7 = load volatile i32, i32* inttoptr (i32 808845616 to i32*), align 16, !dbg !10604
  %8 = lshr i32 %7, 22, !dbg !10605
  %9 = and i32 %8, 3, !dbg !10606
  call void @llvm.dbg.value(metadata i32 %8, metadata !10596, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_constu, 3, DW_OP_and, DW_OP_stack_value)), !dbg !10599
  %10 = load volatile i32, i32* inttoptr (i32 808845616 to i32*), align 16, !dbg !10607
  %11 = lshr i32 %10, 19, !dbg !10608
  %12 = and i32 %11, 3, !dbg !10609
  call void @llvm.dbg.value(metadata i32 %11, metadata !10597, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_constu, 3, DW_OP_and, DW_OP_stack_value)), !dbg !10599
  %13 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.CCM_ANALOG_GetVideoPllFreq, i32 0, i32 %9, !dbg !10610
  %14 = load i32, i32* %13, align 4, !dbg !10610
  call void @llvm.dbg.value(metadata i8 undef, metadata !10596, metadata !DIExpression()), !dbg !10599
  %15 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.CCM_ANALOG_GetVideoPllFreq.4, i32 0, i32 %12, !dbg !10611
  %16 = load i32, i32* %15, align 4, !dbg !10611
  call void @llvm.dbg.value(metadata i8 undef, metadata !10597, metadata !DIExpression()), !dbg !10599
  %17 = getelementptr inbounds %struct.CCM_ANALOG_Type, %struct.CCM_ANALOG_Type* %0, i32 0, i32 45, !dbg !10612
  %18 = load volatile i32, i32* %17, align 4, !dbg !10612
  %19 = and i32 %18, 32768, !dbg !10614
  %20 = icmp eq i32 %19, 0, !dbg !10614
  br i1 %20, label %42, label %21, !dbg !10615

21:                                               ; preds = %3
  %22 = load volatile i32, i32* %17, align 4, !dbg !10616
  %23 = and i32 %22, 32767, !dbg !10618
  %24 = uitofp i32 %23 to float, !dbg !10619
  %25 = getelementptr inbounds %struct.CCM_ANALOG_Type, %struct.CCM_ANALOG_Type* %0, i32 0, i32 49, !dbg !10620
  %26 = load volatile i32, i32* %25, align 4, !dbg !10620
  %27 = and i32 %26, 1073741823, !dbg !10621
  %28 = uitofp i32 %27 to float, !dbg !10622
  %29 = fdiv float %24, %28, !dbg !10623
  %30 = getelementptr inbounds %struct.CCM_ANALOG_Type, %struct.CCM_ANALOG_Type* %0, i32 0, i32 47, !dbg !10624
  %31 = load volatile i32, i32* %30, align 4, !dbg !10624
  %32 = and i32 %31, 1073741823, !dbg !10625
  %33 = uitofp i32 %32 to float, !dbg !10626
  %34 = fmul float %29, %33, !dbg !10627
  call void @llvm.dbg.value(metadata float %34, metadata !10598, metadata !DIExpression()), !dbg !10599
  %35 = lshr i32 24000000, %16, !dbg !10628
  %36 = lshr i32 %35, %14, !dbg !10629
  %37 = uitofp i32 %36 to float, !dbg !10630
  %38 = uitofp i8 %6 to float, !dbg !10631
  %39 = fadd float %34, %38, !dbg !10632
  %40 = fmul float %39, %37, !dbg !10633
  %41 = fptoui float %40 to i32, !dbg !10634
  br label %47, !dbg !10635

42:                                               ; preds = %3
  %43 = lshr i32 24000000, %16, !dbg !10636
  %44 = lshr i32 %43, %14, !dbg !10638
  %45 = zext i8 %6 to i32, !dbg !10639
  %46 = mul nuw i32 %44, %45, !dbg !10640
  br label %47, !dbg !10641

47:                                               ; preds = %1, %42, %21
  %48 = phi i32 [ %41, %21 ], [ %46, %42 ], [ 24000000, %1 ], !dbg !10599
  ret i32 %48, !dbg !10642
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @CCM_ANALOG_GetPfdFreq(%struct.CCM_ANALOG_Type* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !10643 {
  call void @llvm.dbg.value(metadata %struct.CCM_ANALOG_Type* %0, metadata !10647, metadata !DIExpression()), !dbg !10651
  call void @llvm.dbg.value(metadata i32 %1, metadata !10648, metadata !DIExpression()), !dbg !10651
  %3 = tail call fastcc zeroext i1 @CCM_ANALOG_IsPllBypassed(%struct.CCM_ANALOG_Type* noundef %0, i32 noundef 786608) #26, !dbg !10652
  br i1 %3, label %4, label %5, !dbg !10655

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.150, i32 0, i32 0), i8* noundef getelementptr inbounds ([56 x i8], [56 x i8]* @.str.1.151, i32 0, i32 0), i8* noundef getelementptr inbounds ([59 x i8], [59 x i8]* @.str.2.152, i32 0, i32 0), i32 noundef 260) #25, !dbg !10656
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([59 x i8], [59 x i8]* @.str.2.152, i32 0, i32 0), i32 noundef 260) #25, !dbg !10656
  unreachable, !dbg !10656

5:                                                ; preds = %2
  %6 = tail call i32 @CCM_ANALOG_GetSysPllFreq(%struct.CCM_ANALOG_Type* noundef %0) #26, !dbg !10658
  call void @llvm.dbg.value(metadata i32 %6, metadata !10649, metadata !DIExpression()), !dbg !10651
  %7 = tail call fastcc i32 @CCM_ANALOG_GetPfdFrac(%struct.CCM_ANALOG_Type* noundef %0, i32 noundef %1) #26, !dbg !10659
  call void @llvm.dbg.value(metadata i32 %7, metadata !10650, metadata !DIExpression()), !dbg !10651
  %8 = udiv i32 %6, %7, !dbg !10660
  %9 = mul i32 %8, 18, !dbg !10661
  ret i32 %9, !dbg !10662
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @CCM_ANALOG_GetPfdFrac(%struct.CCM_ANALOG_Type* noundef %0, i32 noundef %1) unnamed_addr #7 !dbg !10663 {
  call void @llvm.dbg.value(metadata %struct.CCM_ANALOG_Type* %0, metadata !10665, metadata !DIExpression()), !dbg !10667
  call void @llvm.dbg.value(metadata i32 %1, metadata !10666, metadata !DIExpression()), !dbg !10667
  %3 = ptrtoint %struct.CCM_ANALOG_Type* %0 to i32, !dbg !10668
  %4 = and i32 %1, 65535, !dbg !10668
  %5 = add i32 %4, %3, !dbg !10668
  %6 = inttoptr i32 %5 to i32*, !dbg !10668
  %7 = load volatile i32, i32* %6, align 4, !dbg !10668
  %8 = lshr i32 %1, 16, !dbg !10669
  %9 = and i32 %8, 31, !dbg !10669
  %10 = lshr i32 %7, %9, !dbg !10670
  %11 = and i32 %10, 63, !dbg !10671
  ret i32 %11, !dbg !10672
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @GPIO_Init(%struct.GPIO_Type* noundef %0, %struct._gpio_init_config* nocapture noundef readonly %1) local_unnamed_addr #18 !dbg !10673 {
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %0, metadata !10700, metadata !DIExpression()), !dbg !10704
  call void @llvm.dbg.value(metadata %struct._gpio_init_config* %1, metadata !10701, metadata !DIExpression()), !dbg !10704
  %3 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 5, !dbg !10705
  store volatile i32 0, i32* %3, align 4, !dbg !10706
  %4 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 7, !dbg !10707
  store volatile i32 0, i32* %4, align 4, !dbg !10708
  %5 = getelementptr inbounds %struct._gpio_init_config, %struct._gpio_init_config* %1, i32 0, i32 0, !dbg !10709
  %6 = load i32, i32* %5, align 4, !dbg !10709
  call void @llvm.dbg.value(metadata i32 %6, metadata !10702, metadata !DIExpression()), !dbg !10704
  %7 = getelementptr inbounds %struct._gpio_init_config, %struct._gpio_init_config* %1, i32 0, i32 1, !dbg !10710
  %8 = load i32, i32* %7, align 4, !dbg !10710
  %9 = icmp eq i32 %8, 1, !dbg !10712
  %10 = shl nuw i32 1, %6, !dbg !10713
  br i1 %9, label %11, label %15, !dbg !10714

11:                                               ; preds = %2
  %12 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 1, !dbg !10715
  %13 = load volatile i32, i32* %12, align 4, !dbg !10716
  %14 = or i32 %13, %10, !dbg !10716
  store volatile i32 %14, i32* %12, align 4, !dbg !10716
  br label %20, !dbg !10715

15:                                               ; preds = %2
  %16 = xor i32 %10, -1, !dbg !10717
  %17 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 1, !dbg !10718
  %18 = load volatile i32, i32* %17, align 4, !dbg !10719
  %19 = and i32 %18, %16, !dbg !10719
  store volatile i32 %19, i32* %17, align 4, !dbg !10719
  br label %20

20:                                               ; preds = %15, %11
  %21 = icmp ult i32 %6, 16, !dbg !10720
  %22 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 3, !dbg !10722
  %23 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 4, !dbg !10722
  %24 = add i32 %6, -16, !dbg !10722
  %25 = select i1 %21, i32 %6, i32 %24, !dbg !10722
  %26 = select i1 %21, i32* %22, i32* %23, !dbg !10722
  call void @llvm.dbg.value(metadata i32* %26, metadata !10703, metadata !DIExpression()), !dbg !10704
  call void @llvm.dbg.value(metadata i32 %25, metadata !10702, metadata !DIExpression()), !dbg !10704
  %27 = getelementptr inbounds %struct._gpio_init_config, %struct._gpio_init_config* %1, i32 0, i32 2, !dbg !10723
  %28 = load i32, i32* %27, align 4, !dbg !10723
  switch i32 %28, label %58 [
    i32 0, label %29
    i32 1, label %35
    i32 2, label %43
    i32 3, label %51
  ], !dbg !10724

29:                                               ; preds = %20
  %30 = shl i32 %25, 1, !dbg !10725
  %31 = shl i32 3, %30, !dbg !10728
  %32 = xor i32 %31, -1, !dbg !10729
  %33 = load volatile i32, i32* %26, align 4, !dbg !10730
  %34 = and i32 %33, %32, !dbg !10730
  br label %56, !dbg !10731

35:                                               ; preds = %20
  %36 = load volatile i32, i32* %26, align 4, !dbg !10732
  %37 = shl i32 %25, 1, !dbg !10734
  %38 = shl i32 3, %37, !dbg !10735
  %39 = xor i32 %38, -1, !dbg !10736
  %40 = and i32 %36, %39, !dbg !10737
  %41 = shl nuw i32 1, %37, !dbg !10738
  %42 = or i32 %40, %41, !dbg !10739
  br label %56, !dbg !10740

43:                                               ; preds = %20
  %44 = load volatile i32, i32* %26, align 4, !dbg !10741
  %45 = shl i32 %25, 1, !dbg !10743
  %46 = shl i32 3, %45, !dbg !10744
  %47 = xor i32 %46, -1, !dbg !10745
  %48 = and i32 %44, %47, !dbg !10746
  %49 = shl i32 2, %45, !dbg !10747
  %50 = or i32 %48, %49, !dbg !10748
  br label %56, !dbg !10749

51:                                               ; preds = %20
  %52 = shl i32 %25, 1, !dbg !10750
  %53 = shl i32 3, %52, !dbg !10752
  %54 = load volatile i32, i32* %26, align 4, !dbg !10753
  %55 = or i32 %54, %53, !dbg !10753
  br label %56, !dbg !10754

56:                                               ; preds = %29, %35, %43, %51
  %57 = phi i32 [ %55, %51 ], [ %50, %43 ], [ %42, %35 ], [ %34, %29 ]
  store volatile i32 %57, i32* %26, align 4, !dbg !10755
  br label %58, !dbg !10756

58:                                               ; preds = %56, %20
  ret void, !dbg !10756
}

; Function Attrs: noinline nounwind optsize
define dso_local void @GPIO_WritePinOutput(%struct.GPIO_Type* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !10757 {
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %0, metadata !10762, metadata !DIExpression()), !dbg !10765
  call void @llvm.dbg.value(metadata i32 %1, metadata !10763, metadata !DIExpression()), !dbg !10765
  call void @llvm.dbg.value(metadata i32 %2, metadata !10764, metadata !DIExpression()), !dbg !10765
  %4 = icmp ult i32 %1, 32, !dbg !10766
  br i1 %4, label %6, label %5, !dbg !10769

5:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.155, i32 0, i32 0), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1.156, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.157, i32 0, i32 0), i32 noundef 113) #25, !dbg !10770
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.157, i32 0, i32 0), i32 noundef 113) #25, !dbg !10770
  unreachable, !dbg !10770

6:                                                ; preds = %3
  %7 = icmp eq i32 %2, 1, !dbg !10772
  %8 = shl nuw i32 1, %1, !dbg !10774
  br i1 %7, label %9, label %13, !dbg !10775

9:                                                ; preds = %6
  %10 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 0, !dbg !10776
  %11 = load volatile i32, i32* %10, align 4, !dbg !10778
  %12 = or i32 %11, %8, !dbg !10778
  store volatile i32 %12, i32* %10, align 4, !dbg !10778
  br label %18, !dbg !10779

13:                                               ; preds = %6
  %14 = xor i32 %8, -1, !dbg !10780
  %15 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 0, !dbg !10782
  %16 = load volatile i32, i32* %15, align 4, !dbg !10783
  %17 = and i32 %16, %14, !dbg !10783
  store volatile i32 %17, i32* %15, align 4, !dbg !10783
  br label %18

18:                                               ; preds = %13, %9
  ret void, !dbg !10784
}

; Function Attrs: noinline nounwind optsize
define dso_local void @GPIO_SetPinIntMode(%struct.GPIO_Type* noundef %0, i32 noundef %1, i1 noundef zeroext %2) local_unnamed_addr #1 !dbg !10785 {
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %0, metadata !10789, metadata !DIExpression()), !dbg !10792
  call void @llvm.dbg.value(metadata i32 %1, metadata !10790, metadata !DIExpression()), !dbg !10792
  call void @llvm.dbg.value(metadata i1 %2, metadata !10791, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10792
  %4 = icmp ult i32 %1, 32, !dbg !10793
  br i1 %4, label %6, label %5, !dbg !10796

5:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.155, i32 0, i32 0), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1.156, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.157, i32 0, i32 0), i32 noundef 135) #25, !dbg !10797
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.157, i32 0, i32 0), i32 noundef 135) #25, !dbg !10797
  unreachable, !dbg !10797

6:                                                ; preds = %3
  %7 = shl nuw i32 1, %1, !dbg !10799
  br i1 %2, label %8, label %12, !dbg !10801

8:                                                ; preds = %6
  %9 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 5, !dbg !10802
  %10 = load volatile i32, i32* %9, align 4, !dbg !10803
  %11 = or i32 %10, %7, !dbg !10803
  store volatile i32 %11, i32* %9, align 4, !dbg !10803
  br label %17, !dbg !10802

12:                                               ; preds = %6
  %13 = xor i32 %7, -1, !dbg !10804
  %14 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 5, !dbg !10805
  %15 = load volatile i32, i32* %14, align 4, !dbg !10806
  %16 = and i32 %15, %13, !dbg !10806
  store volatile i32 %16, i32* %14, align 4, !dbg !10806
  br label %17

17:                                               ; preds = %12, %8
  ret void, !dbg !10807
}

; Function Attrs: noinline nounwind optsize
define dso_local void @GPIO_SetIntEdgeSelect(%struct.GPIO_Type* noundef %0, i32 noundef %1, i1 noundef zeroext %2) local_unnamed_addr #1 !dbg !10808 {
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %0, metadata !10810, metadata !DIExpression()), !dbg !10813
  call void @llvm.dbg.value(metadata i32 %1, metadata !10811, metadata !DIExpression()), !dbg !10813
  call void @llvm.dbg.value(metadata i1 %2, metadata !10812, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10813
  %4 = icmp ult i32 %1, 32, !dbg !10814
  br i1 %4, label %6, label %5, !dbg !10817

5:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.155, i32 0, i32 0), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1.156, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.157, i32 0, i32 0), i32 noundef 152) #25, !dbg !10818
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.157, i32 0, i32 0), i32 noundef 152) #25, !dbg !10818
  unreachable, !dbg !10818

6:                                                ; preds = %3
  %7 = shl nuw i32 1, %1, !dbg !10820
  br i1 %2, label %8, label %12, !dbg !10822

8:                                                ; preds = %6
  %9 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 7, !dbg !10823
  %10 = load volatile i32, i32* %9, align 4, !dbg !10824
  %11 = or i32 %10, %7, !dbg !10824
  store volatile i32 %11, i32* %9, align 4, !dbg !10824
  br label %17, !dbg !10823

12:                                               ; preds = %6
  %13 = xor i32 %7, -1, !dbg !10825
  %14 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 7, !dbg !10826
  %15 = load volatile i32, i32* %14, align 4, !dbg !10827
  %16 = and i32 %15, %13, !dbg !10827
  store volatile i32 %16, i32* %14, align 4, !dbg !10827
  br label %17

17:                                               ; preds = %12, %8
  ret void, !dbg !10828
}

; Function Attrs: noinline nounwind optsize
define dso_local void @UART_Init(%struct.UART_Type* noundef %0, %struct._uart_init_config* noundef readonly %1) local_unnamed_addr #1 !dbg !10829 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !10868, metadata !DIExpression()), !dbg !10870
  call void @llvm.dbg.value(metadata %struct._uart_init_config* %1, metadata !10869, metadata !DIExpression()), !dbg !10870
  %3 = icmp eq %struct._uart_init_config* %1, null, !dbg !10871
  br i1 %3, label %4, label %5, !dbg !10874

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.164, i32 0, i32 0), i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1.165, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.166, i32 0, i32 0), i32 noundef 49) #25, !dbg !10875
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.166, i32 0, i32 0), i32 noundef 49) #25, !dbg !10875
  unreachable, !dbg !10875

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 4, !dbg !10877
  %7 = load volatile i32, i32* %6, align 4, !dbg !10878
  %8 = and i32 %7, -2, !dbg !10878
  store volatile i32 %8, i32* %6, align 4, !dbg !10878
  tail call void @UART_Deinit(%struct.UART_Type* noundef %0) #26, !dbg !10879
  %9 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %1, i32 0, i32 2, !dbg !10880
  %10 = load i32, i32* %9, align 4, !dbg !10880
  %11 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %1, i32 0, i32 3, !dbg !10881
  %12 = load i32, i32* %11, align 4, !dbg !10881
  %13 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %1, i32 0, i32 4, !dbg !10882
  %14 = load i32, i32* %13, align 4, !dbg !10882
  %15 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %1, i32 0, i32 5, !dbg !10883
  %16 = load i32, i32* %15, align 4, !dbg !10883
  %17 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 5, !dbg !10884
  %18 = load volatile i32, i32* %17, align 4, !dbg !10885
  %19 = or i32 %10, %12, !dbg !10886
  %20 = or i32 %19, %14, !dbg !10887
  %21 = or i32 %20, %16, !dbg !10888
  %22 = or i32 %21, %18, !dbg !10885
  %23 = or i32 %22, 16384, !dbg !10885
  store volatile i32 %23, i32* %17, align 4, !dbg !10885
  %24 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 6, !dbg !10889
  %25 = load volatile i32, i32* %24, align 4, !dbg !10890
  %26 = or i32 %25, 4, !dbg !10890
  store volatile i32 %26, i32* %24, align 4, !dbg !10890
  %27 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %1, i32 0, i32 0, !dbg !10891
  %28 = load i32, i32* %27, align 4, !dbg !10891
  %29 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %1, i32 0, i32 1, !dbg !10892
  %30 = load i32, i32* %29, align 4, !dbg !10892
  tail call void @UART_SetBaudRate(%struct.UART_Type* noundef %0, i32 noundef %28, i32 noundef %30) #26, !dbg !10893
  ret void, !dbg !10894
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_Deinit(%struct.UART_Type* noundef %0) local_unnamed_addr #18 !dbg !10895 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !10899, metadata !DIExpression()), !dbg !10900
  %2 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 4, !dbg !10901
  %3 = load volatile i32, i32* %2, align 4, !dbg !10902
  %4 = and i32 %3, -2, !dbg !10902
  store volatile i32 %4, i32* %2, align 4, !dbg !10902
  store volatile i32 0, i32* %2, align 4, !dbg !10903
  %5 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 5, !dbg !10904
  store volatile i32 1, i32* %5, align 4, !dbg !10905
  %6 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 6, !dbg !10906
  store volatile i32 1792, i32* %6, align 4, !dbg !10907
  %7 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 7, !dbg !10908
  store volatile i32 32768, i32* %7, align 4, !dbg !10909
  %8 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 8, !dbg !10910
  store volatile i32 2049, i32* %8, align 4, !dbg !10911
  %9 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 11, !dbg !10912
  store volatile i32 43, i32* %9, align 4, !dbg !10913
  %10 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 12, !dbg !10914
  store volatile i32 0, i32* %10, align 4, !dbg !10915
  %11 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 16, !dbg !10916
  store volatile i32 0, i32* %11, align 4, !dbg !10917
  %12 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 17, !dbg !10918
  store volatile i32 96, i32* %12, align 4, !dbg !10919
  %13 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 18, !dbg !10920
  store volatile i32 0, i32* %13, align 4, !dbg !10921
  %14 = load volatile i32, i32* %5, align 4, !dbg !10922
  %15 = and i32 %14, -2, !dbg !10922
  store volatile i32 %15, i32* %5, align 4, !dbg !10922
  br label %16, !dbg !10923

16:                                               ; preds = %16, %1
  %17 = load volatile i32, i32* %5, align 4, !dbg !10924
  %18 = and i32 %17, 1, !dbg !10925
  %19 = icmp eq i32 %18, 0, !dbg !10926
  br i1 %19, label %16, label %20, !dbg !10923, !llvm.loop !10927

20:                                               ; preds = %16
  ret void, !dbg !10929
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetBaudRate(%struct.UART_Type* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #18 !dbg !10930 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !10934, metadata !DIExpression()), !dbg !10947
  call void @llvm.dbg.value(metadata i32 %1, metadata !10935, metadata !DIExpression()), !dbg !10947
  call void @llvm.dbg.value(metadata i32 %2, metadata !10936, metadata !DIExpression()), !dbg !10947
  call void @llvm.dbg.value(metadata i32 1, metadata !10941, metadata !DIExpression()), !dbg !10947
  call void @llvm.dbg.value(metadata i32 %1, metadata !10937, metadata !DIExpression()), !dbg !10947
  %4 = shl i32 %2, 4, !dbg !10948
  call void @llvm.dbg.value(metadata i32 %4, metadata !10938, metadata !DIExpression()), !dbg !10947
  call void @llvm.dbg.value(metadata i32 1, metadata !10939, metadata !DIExpression()), !dbg !10947
  call void @llvm.dbg.value(metadata i32 %1, metadata !10937, metadata !DIExpression()), !dbg !10947
  %5 = icmp eq i32 %4, 0, !dbg !10949
  br i1 %5, label %11, label %6, !dbg !10950

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %8, %6 ], [ %1, %3 ]
  %8 = phi i32 [ %9, %6 ], [ %4, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !10937, metadata !DIExpression()), !dbg !10947
  call void @llvm.dbg.value(metadata i32 %8, metadata !10938, metadata !DIExpression()), !dbg !10947
  call void @llvm.dbg.value(metadata i32 %8, metadata !10939, metadata !DIExpression()), !dbg !10947
  %9 = urem i32 %7, %8, !dbg !10951
  call void @llvm.dbg.value(metadata i32 %8, metadata !10937, metadata !DIExpression()), !dbg !10947
  call void @llvm.dbg.value(metadata i32 %9, metadata !10938, metadata !DIExpression()), !dbg !10947
  %10 = icmp eq i32 %9, 0, !dbg !10949
  br i1 %10, label %11, label %6, !dbg !10950, !llvm.loop !10953

11:                                               ; preds = %6, %3
  %12 = phi i32 [ 1, %3 ], [ %8, %6 ], !dbg !10947
  %13 = udiv i32 %1, %12, !dbg !10955
  call void @llvm.dbg.value(metadata i32 %13, metadata !10937, metadata !DIExpression()), !dbg !10947
  %14 = udiv i32 %4, %12, !dbg !10956
  call void @llvm.dbg.value(metadata i32 %14, metadata !10938, metadata !DIExpression()), !dbg !10947
  %15 = icmp ugt i32 %13, 458745, !dbg !10957
  %16 = icmp ugt i32 %14, 65535
  %17 = or i1 %15, %16, !dbg !10958
  br i1 %17, label %18, label %33, !dbg !10958

18:                                               ; preds = %11
  %19 = add i32 %13, -1, !dbg !10959
  %20 = udiv i32 %19, 458745, !dbg !10960
  %21 = add nuw nsw i32 %20, 1, !dbg !10961
  call void @llvm.dbg.value(metadata i32 %21, metadata !10942, metadata !DIExpression()), !dbg !10962
  %22 = add i32 %14, -1, !dbg !10963
  %23 = udiv i32 %22, 65535, !dbg !10964
  %24 = add nuw nsw i32 %23, 1, !dbg !10965
  call void @llvm.dbg.value(metadata i32 %24, metadata !10945, metadata !DIExpression()), !dbg !10962
  %25 = icmp ugt i32 %21, %24, !dbg !10966
  %26 = select i1 %25, i32 %21, i32 %24, !dbg !10967
  call void @llvm.dbg.value(metadata i32 %26, metadata !10946, metadata !DIExpression()), !dbg !10962
  %27 = udiv i32 %13, %26, !dbg !10968
  call void @llvm.dbg.value(metadata i32 %27, metadata !10937, metadata !DIExpression()), !dbg !10947
  %28 = udiv i32 %14, %26, !dbg !10969
  call void @llvm.dbg.value(metadata i32 %28, metadata !10938, metadata !DIExpression()), !dbg !10947
  %29 = icmp ugt i32 %26, %13, !dbg !10970
  %30 = select i1 %29, i32 1, i32 %27, !dbg !10972
  call void @llvm.dbg.value(metadata i32 %30, metadata !10937, metadata !DIExpression()), !dbg !10947
  %31 = icmp ugt i32 %26, %14, !dbg !10973
  %32 = select i1 %31, i32 1, i32 %28, !dbg !10975
  call void @llvm.dbg.value(metadata i32 %32, metadata !10938, metadata !DIExpression()), !dbg !10947
  br label %33, !dbg !10976

33:                                               ; preds = %11, %18
  %34 = phi i32 [ %32, %18 ], [ %14, %11 ], !dbg !10947
  %35 = phi i32 [ %30, %18 ], [ %13, %11 ], !dbg !10947
  call void @llvm.dbg.value(metadata i32 %35, metadata !10937, metadata !DIExpression()), !dbg !10947
  call void @llvm.dbg.value(metadata i32 %34, metadata !10938, metadata !DIExpression()), !dbg !10947
  %36 = add i32 %35, -1, !dbg !10977
  %37 = udiv i32 %36, 65535, !dbg !10978
  %38 = add nuw nsw i32 %37, 1, !dbg !10979
  call void @llvm.dbg.value(metadata i32 %38, metadata !10941, metadata !DIExpression()), !dbg !10947
  %39 = add nsw i32 %37, -1, !dbg !10980
  %40 = icmp ult i32 %39, 6, !dbg !10980
  br i1 %40, label %41, label %44, !dbg !10980

41:                                               ; preds = %33
  %42 = getelementptr inbounds [6 x i32], [6 x i32]* @switch.table.UART_SetBaudRate, i32 0, i32 %39, !dbg !10980
  %43 = load i32, i32* %42, align 4, !dbg !10980
  br label %44, !dbg !10980

44:                                               ; preds = %41, %33
  %45 = phi i32 [ 640, %33 ], [ %43, %41 ], !dbg !10981
  call void @llvm.dbg.value(metadata i32 %45, metadata !10940, metadata !DIExpression()), !dbg !10947
  %46 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 8, !dbg !10983
  %47 = load volatile i32, i32* %46, align 4, !dbg !10984
  %48 = and i32 %47, -897, !dbg !10984
  store volatile i32 %48, i32* %46, align 4, !dbg !10984
  %49 = load volatile i32, i32* %46, align 4, !dbg !10985
  %50 = or i32 %49, %45, !dbg !10985
  store volatile i32 %50, i32* %46, align 4, !dbg !10985
  %51 = add i32 %34, 65535, !dbg !10986
  %52 = and i32 %51, 65535, !dbg !10986
  %53 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 13, !dbg !10987
  store volatile i32 %52, i32* %53, align 4, !dbg !10988
  %54 = udiv i32 %35, %38, !dbg !10989
  %55 = add i32 %54, 65535, !dbg !10989
  %56 = and i32 %55, 65535, !dbg !10989
  %57 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 14, !dbg !10990
  store volatile i32 %56, i32* %57, align 4, !dbg !10991
  %58 = mul nuw nsw i32 %38, 1000, !dbg !10992
  %59 = udiv i32 %1, %58, !dbg !10992
  %60 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 16, !dbg !10993
  store volatile i32 %59, i32* %60, align 4, !dbg !10994
  ret void, !dbg !10995
}

; Function Attrs: noinline nounwind optsize
define dso_local void @UART_SetInvertCmd(%struct.UART_Type* noundef %0, i32 noundef %1, i1 noundef zeroext %2) local_unnamed_addr #1 !dbg !10996 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !11000, metadata !DIExpression()), !dbg !11003
  call void @llvm.dbg.value(metadata i32 %1, metadata !11001, metadata !DIExpression()), !dbg !11003
  call void @llvm.dbg.value(metadata i1 %2, metadata !11002, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11003
  %4 = and i32 %1, 4, !dbg !11004
  %5 = icmp eq i32 %4, 0, !dbg !11004
  %6 = and i32 %1, 2, !dbg !11004
  %7 = icmp eq i32 %6, 0, !dbg !11004
  %8 = and i32 %1, 6, !dbg !11004
  %9 = icmp eq i32 %8, 0, !dbg !11004
  br i1 %9, label %10, label %11, !dbg !11004

10:                                               ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.164, i32 0, i32 0), i8* noundef getelementptr inbounds ([63 x i8], [63 x i8]* @.str.3.167, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.166, i32 0, i32 0), i32 noundef 196) #25, !dbg !11007
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.166, i32 0, i32 0), i32 noundef 196) #25, !dbg !11007
  unreachable, !dbg !11007

11:                                               ; preds = %3
  br i1 %2, label %12, label %22, !dbg !11009

12:                                               ; preds = %11
  br i1 %7, label %17, label %13, !dbg !11010

13:                                               ; preds = %12
  %14 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 7, !dbg !11013
  %15 = load volatile i32, i32* %14, align 4, !dbg !11015
  %16 = or i32 %15, 512, !dbg !11015
  store volatile i32 %16, i32* %14, align 4, !dbg !11015
  br label %17, !dbg !11013

17:                                               ; preds = %13, %12
  br i1 %5, label %32, label %18, !dbg !11016

18:                                               ; preds = %17
  %19 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 6, !dbg !11017
  %20 = load volatile i32, i32* %19, align 4, !dbg !11019
  %21 = or i32 %20, 2, !dbg !11019
  store volatile i32 %21, i32* %19, align 4, !dbg !11019
  br label %32, !dbg !11017

22:                                               ; preds = %11
  br i1 %7, label %27, label %23, !dbg !11020

23:                                               ; preds = %22
  %24 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 7, !dbg !11022
  %25 = load volatile i32, i32* %24, align 4, !dbg !11024
  %26 = and i32 %25, -513, !dbg !11024
  store volatile i32 %26, i32* %24, align 4, !dbg !11024
  br label %27, !dbg !11022

27:                                               ; preds = %23, %22
  br i1 %5, label %32, label %28, !dbg !11025

28:                                               ; preds = %27
  %29 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 6, !dbg !11026
  %30 = load volatile i32, i32* %29, align 4, !dbg !11028
  %31 = and i32 %30, -3, !dbg !11028
  store volatile i32 %31, i32* %29, align 4, !dbg !11028
  br label %32, !dbg !11026

32:                                               ; preds = %27, %28, %17, %18
  ret void, !dbg !11029
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetDozeMode(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #18 !dbg !11030 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !11034, metadata !DIExpression()), !dbg !11036
  call void @llvm.dbg.value(metadata i1 %1, metadata !11035, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11036
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 4, !dbg !11037
  %4 = load volatile i32, i32* %3, align 4, !dbg !11037
  %5 = and i32 %4, 2, !dbg !11039
  %6 = select i1 %1, i32 0, i32 -3, !dbg !11039
  %7 = or i32 %5, %6, !dbg !11039
  store volatile i32 %7, i32* %3, align 4, !dbg !11037
  ret void, !dbg !11040
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetLowPowerMode(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #18 !dbg !11041 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !11043, metadata !DIExpression()), !dbg !11045
  call void @llvm.dbg.value(metadata i1 %1, metadata !11044, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11045
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 7, !dbg !11046
  %4 = load volatile i32, i32* %3, align 4, !dbg !11046
  %5 = and i32 %4, -17, !dbg !11048
  %6 = select i1 %1, i32 0, i32 16, !dbg !11048
  %7 = or i32 %5, %6, !dbg !11048
  store volatile i32 %7, i32* %3, align 4, !dbg !11046
  ret void, !dbg !11049
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetIntCmd(%struct.UART_Type* noundef %0, i32 noundef %1, i1 noundef zeroext %2) local_unnamed_addr #18 !dbg !11050 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !11052, metadata !DIExpression()), !dbg !11057
  call void @llvm.dbg.value(metadata i32 %1, metadata !11053, metadata !DIExpression()), !dbg !11057
  call void @llvm.dbg.value(metadata i1 %2, metadata !11054, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11057
  call void @llvm.dbg.value(metadata i32* null, metadata !11055, metadata !DIExpression()), !dbg !11057
  call void @llvm.dbg.value(metadata i32 0, metadata !11056, metadata !DIExpression()), !dbg !11057
  %4 = ptrtoint %struct.UART_Type* %0 to i32, !dbg !11058
  %5 = lshr i32 %1, 16, !dbg !11059
  %6 = add i32 %5, %4, !dbg !11060
  %7 = inttoptr i32 %6 to i32*, !dbg !11061
  call void @llvm.dbg.value(metadata i32* %7, metadata !11055, metadata !DIExpression()), !dbg !11057
  %8 = and i32 %1, 65535, !dbg !11062
  %9 = shl nuw i32 1, %8, !dbg !11063
  call void @llvm.dbg.value(metadata i32 %9, metadata !11056, metadata !DIExpression()), !dbg !11057
  br i1 %2, label %10, label %13, !dbg !11064

10:                                               ; preds = %3
  %11 = load volatile i32, i32* %7, align 4, !dbg !11065
  %12 = or i32 %11, %9, !dbg !11065
  br label %17, !dbg !11067

13:                                               ; preds = %3
  %14 = xor i32 %9, -1, !dbg !11068
  %15 = load volatile i32, i32* %7, align 4, !dbg !11069
  %16 = and i32 %15, %14, !dbg !11069
  br label %17

17:                                               ; preds = %13, %10
  %18 = phi i32 [ %16, %13 ], [ %12, %10 ]
  store volatile i32 %18, i32* %7, align 4, !dbg !11070
  ret void, !dbg !11071
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_ClearStatusFlag(%struct.UART_Type* noundef %0, i32 noundef %1) local_unnamed_addr #18 !dbg !11072 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !11076, metadata !DIExpression()), !dbg !11080
  call void @llvm.dbg.value(metadata i32 %1, metadata !11077, metadata !DIExpression()), !dbg !11080
  call void @llvm.dbg.value(metadata i32* null, metadata !11078, metadata !DIExpression()), !dbg !11080
  call void @llvm.dbg.value(metadata i32 0, metadata !11079, metadata !DIExpression()), !dbg !11080
  %3 = ptrtoint %struct.UART_Type* %0 to i32, !dbg !11081
  %4 = lshr i32 %1, 16, !dbg !11082
  %5 = add i32 %4, %3, !dbg !11083
  %6 = inttoptr i32 %5 to i32*, !dbg !11084
  call void @llvm.dbg.value(metadata i32* %6, metadata !11078, metadata !DIExpression()), !dbg !11080
  %7 = and i32 %1, 65535, !dbg !11085
  %8 = shl nuw i32 1, %7, !dbg !11086
  call void @llvm.dbg.value(metadata i32 %8, metadata !11079, metadata !DIExpression()), !dbg !11080
  store volatile i32 %8, i32* %6, align 4, !dbg !11087
  ret void, !dbg !11088
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetDmaCmd(%struct.UART_Type* noundef %0, i32 noundef %1, i1 noundef zeroext %2) local_unnamed_addr #18 !dbg !11089 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !11091, metadata !DIExpression()), !dbg !11096
  call void @llvm.dbg.value(metadata i32 %1, metadata !11092, metadata !DIExpression()), !dbg !11096
  call void @llvm.dbg.value(metadata i1 %2, metadata !11093, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11096
  call void @llvm.dbg.value(metadata i32* null, metadata !11094, metadata !DIExpression()), !dbg !11096
  call void @llvm.dbg.value(metadata i32 0, metadata !11095, metadata !DIExpression()), !dbg !11096
  %4 = ptrtoint %struct.UART_Type* %0 to i32, !dbg !11097
  %5 = lshr i32 %1, 16, !dbg !11098
  %6 = add i32 %5, %4, !dbg !11099
  %7 = inttoptr i32 %6 to i32*, !dbg !11100
  call void @llvm.dbg.value(metadata i32* %7, metadata !11094, metadata !DIExpression()), !dbg !11096
  %8 = and i32 %1, 65535, !dbg !11101
  %9 = shl nuw i32 1, %8, !dbg !11102
  call void @llvm.dbg.value(metadata i32 %9, metadata !11095, metadata !DIExpression()), !dbg !11096
  br i1 %2, label %10, label %13, !dbg !11103

10:                                               ; preds = %3
  %11 = load volatile i32, i32* %7, align 4, !dbg !11104
  %12 = or i32 %11, %9, !dbg !11104
  br label %17, !dbg !11106

13:                                               ; preds = %3
  %14 = xor i32 %9, -1, !dbg !11107
  %15 = load volatile i32, i32* %7, align 4, !dbg !11108
  %16 = and i32 %15, %14, !dbg !11108
  br label %17

17:                                               ; preds = %13, %10
  %18 = phi i32 [ %16, %13 ], [ %12, %10 ]
  store volatile i32 %18, i32* %7, align 4, !dbg !11109
  ret void, !dbg !11110
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetRtsFlowCtrlCmd(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #18 !dbg !11111 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !11113, metadata !DIExpression()), !dbg !11115
  call void @llvm.dbg.value(metadata i1 %1, metadata !11114, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11115
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 5, !dbg !11116
  %4 = load volatile i32, i32* %3, align 4, !dbg !11116
  %5 = and i32 %4, -16385, !dbg !11118
  %6 = select i1 %1, i32 0, i32 16384, !dbg !11118
  %7 = or i32 %5, %6, !dbg !11118
  store volatile i32 %7, i32* %3, align 4, !dbg !11116
  ret void, !dbg !11119
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetCtsFlowCtrlCmd(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #18 !dbg !11120 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !11122, metadata !DIExpression()), !dbg !11124
  call void @llvm.dbg.value(metadata i1 %1, metadata !11123, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11124
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 5, !dbg !11125
  %4 = load volatile i32, i32* %3, align 4, !dbg !11125
  %5 = and i32 %4, -8193, !dbg !11127
  %6 = select i1 %1, i32 8192, i32 0, !dbg !11127
  %7 = or i32 %5, %6, !dbg !11127
  store volatile i32 %7, i32* %3, align 4, !dbg !11125
  ret void, !dbg !11128
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetCtsPinLevel(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #18 !dbg !11129 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !11131, metadata !DIExpression()), !dbg !11133
  call void @llvm.dbg.value(metadata i1 %1, metadata !11132, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11133
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 5, !dbg !11134
  %4 = load volatile i32, i32* %3, align 4, !dbg !11134
  %5 = and i32 %4, -4097, !dbg !11136
  %6 = select i1 %1, i32 4096, i32 0, !dbg !11136
  %7 = or i32 %5, %6, !dbg !11136
  store volatile i32 %7, i32* %3, align 4, !dbg !11134
  ret void, !dbg !11137
}

; Function Attrs: noinline nounwind optsize
define dso_local void @UART_SetModemMode(%struct.UART_Type* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !11138 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !11140, metadata !DIExpression()), !dbg !11142
  call void @llvm.dbg.value(metadata i32 %1, metadata !11141, metadata !DIExpression()), !dbg !11142
  %3 = and i32 %1, -65, !dbg !11143
  %4 = icmp eq i32 %3, 0, !dbg !11143
  br i1 %4, label %6, label %5, !dbg !11143

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.164, i32 0, i32 0), i8* noundef getelementptr inbounds ([57 x i8], [57 x i8]* @.str.4.174, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.166, i32 0, i32 0), i32 noundef 396) #25, !dbg !11146
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.166, i32 0, i32 0), i32 noundef 396) #25, !dbg !11146
  unreachable, !dbg !11146

6:                                                ; preds = %2
  %7 = icmp eq i32 %1, 0, !dbg !11143
  %8 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 8, !dbg !11148
  %9 = load volatile i32, i32* %8, align 4, !dbg !11148
  %10 = and i32 %9, -65, !dbg !11150
  %11 = select i1 %7, i32 0, i32 64, !dbg !11150
  %12 = or i32 %10, %11, !dbg !11150
  store volatile i32 %12, i32* %8, align 4, !dbg !11148
  ret void, !dbg !11151
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetDtrPinLevel(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #18 !dbg !11152 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !11154, metadata !DIExpression()), !dbg !11156
  call void @llvm.dbg.value(metadata i1 %1, metadata !11155, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11156
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 6, !dbg !11157
  %4 = load volatile i32, i32* %3, align 4, !dbg !11157
  %5 = and i32 %4, -1025, !dbg !11159
  %6 = select i1 %1, i32 1024, i32 0, !dbg !11159
  %7 = or i32 %5, %6, !dbg !11159
  store volatile i32 %7, i32* %3, align 4, !dbg !11157
  ret void, !dbg !11160
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetDcdPinLevel(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #18 !dbg !11161 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !11163, metadata !DIExpression()), !dbg !11165
  call void @llvm.dbg.value(metadata i1 %1, metadata !11164, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11165
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 6, !dbg !11166
  %4 = load volatile i32, i32* %3, align 4, !dbg !11166
  %5 = and i32 %4, -513, !dbg !11168
  %6 = select i1 %1, i32 512, i32 0, !dbg !11168
  %7 = or i32 %5, %6, !dbg !11168
  store volatile i32 %7, i32* %3, align 4, !dbg !11166
  ret void, !dbg !11169
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetRiPinLevel(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #18 !dbg !11170 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !11172, metadata !DIExpression()), !dbg !11174
  call void @llvm.dbg.value(metadata i1 %1, metadata !11173, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11174
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 6, !dbg !11175
  %4 = load volatile i32, i32* %3, align 4, !dbg !11175
  %5 = and i32 %4, -257, !dbg !11177
  %6 = select i1 %1, i32 256, i32 0, !dbg !11177
  %7 = or i32 %5, %6, !dbg !11177
  store volatile i32 %7, i32* %3, align 4, !dbg !11175
  ret void, !dbg !11178
}

; Function Attrs: noinline nounwind optsize
define dso_local void @UART_Putchar9(%struct.UART_Type* noundef %0, i16 noundef zeroext %1) local_unnamed_addr #1 !dbg !11179 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !11183, metadata !DIExpression()), !dbg !11185
  call void @llvm.dbg.value(metadata i16 %1, metadata !11184, metadata !DIExpression()), !dbg !11185
  %3 = zext i16 %1 to i32, !dbg !11186
  %4 = icmp ult i16 %1, 512, !dbg !11186
  br i1 %4, label %6, label %5, !dbg !11189

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.164, i32 0, i32 0), i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5.175, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.166, i32 0, i32 0), i32 noundef 462) #25, !dbg !11190
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.166, i32 0, i32 0), i32 noundef 462) #25, !dbg !11190
  unreachable, !dbg !11190

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 18, !dbg !11192
  %8 = load volatile i32, i32* %7, align 4, !dbg !11192
  %9 = and i32 %8, -5, !dbg !11194
  %10 = lshr i32 %3, 6, !dbg !11194
  %11 = and i32 %10, 4, !dbg !11194
  %12 = or i32 %9, %11, !dbg !11194
  store volatile i32 %12, i32* %7, align 4, !dbg !11192
  %13 = and i32 %3, 255, !dbg !11195
  %14 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 2, !dbg !11196
  store volatile i32 %13, i32* %14, align 4, !dbg !11197
  ret void, !dbg !11198
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local zeroext i16 @UART_Getchar9(%struct.UART_Type* noundef %0) local_unnamed_addr #7 !dbg !11199 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !11203, metadata !DIExpression()), !dbg !11205
  %2 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 0, !dbg !11206
  %3 = load volatile i32, i32* %2, align 4, !dbg !11206
  call void @llvm.dbg.value(metadata i32 %3, metadata !11204, metadata !DIExpression()), !dbg !11205
  %4 = trunc i32 %3 to i16, !dbg !11207
  %5 = and i16 %4, 255, !dbg !11207
  %6 = lshr i16 %4, 2, !dbg !11207
  %7 = and i16 %6, 256, !dbg !11207
  %8 = or i16 %7, %5, !dbg !11207
  call void @llvm.dbg.value(metadata i16 %8, metadata !11204, metadata !DIExpression()), !dbg !11205
  ret i16 %8, !dbg !11208
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetMultidropMode(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #18 !dbg !11209 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !11211, metadata !DIExpression()), !dbg !11213
  call void @llvm.dbg.value(metadata i1 %1, metadata !11212, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11213
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 18, !dbg !11214
  %4 = load volatile i32, i32* %3, align 4, !dbg !11214
  %5 = and i32 %4, -2, !dbg !11216
  %6 = zext i1 %1 to i32, !dbg !11216
  %7 = or i32 %5, %6, !dbg !11216
  store volatile i32 %7, i32* %3, align 4, !dbg !11214
  ret void, !dbg !11217
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetSlaveAddressDetectCmd(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #18 !dbg !11218 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !11220, metadata !DIExpression()), !dbg !11222
  call void @llvm.dbg.value(metadata i1 %1, metadata !11221, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11222
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 18, !dbg !11223
  %4 = load volatile i32, i32* %3, align 4, !dbg !11223
  %5 = and i32 %4, -3, !dbg !11225
  %6 = select i1 %1, i32 2, i32 0, !dbg !11225
  %7 = or i32 %5, %6, !dbg !11225
  store volatile i32 %7, i32* %3, align 4, !dbg !11223
  ret void, !dbg !11226
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetIrDACmd(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #18 !dbg !11227 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !11229, metadata !DIExpression()), !dbg !11231
  call void @llvm.dbg.value(metadata i1 %1, metadata !11230, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11231
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 4, !dbg !11232
  %4 = load volatile i32, i32* %3, align 4, !dbg !11232
  %5 = and i32 %4, -129, !dbg !11234
  %6 = select i1 %1, i32 128, i32 0, !dbg !11234
  %7 = or i32 %5, %6, !dbg !11234
  store volatile i32 %7, i32* %3, align 4, !dbg !11232
  ret void, !dbg !11235
}

; Function Attrs: noinline nounwind optsize
define dso_local void @UART_SetIrDAVoteClock(%struct.UART_Type* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !11236 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !11238, metadata !DIExpression()), !dbg !11240
  call void @llvm.dbg.value(metadata i32 %1, metadata !11239, metadata !DIExpression()), !dbg !11240
  %3 = and i32 %1, -33, !dbg !11241
  %4 = icmp eq i32 %3, 0, !dbg !11241
  br i1 %4, label %6, label %5, !dbg !11241

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.164, i32 0, i32 0), i8* noundef getelementptr inbounds ([86 x i8], [86 x i8]* @.str.6.176, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.166, i32 0, i32 0), i32 noundef 553) #25, !dbg !11244
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.166, i32 0, i32 0), i32 noundef 553) #25, !dbg !11244
  unreachable, !dbg !11244

6:                                                ; preds = %2
  %7 = icmp eq i32 %1, 0, !dbg !11241
  %8 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 7, !dbg !11246
  %9 = load volatile i32, i32* %8, align 4, !dbg !11246
  %10 = and i32 %9, -33, !dbg !11248
  %11 = select i1 %7, i32 32, i32 0, !dbg !11248
  %12 = or i32 %10, %11, !dbg !11248
  store volatile i32 %12, i32* %8, align 4, !dbg !11246
  ret void, !dbg !11249
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetAutoBaudRateCmd(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #18 !dbg !11250 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !11252, metadata !DIExpression()), !dbg !11254
  call void @llvm.dbg.value(metadata i1 %1, metadata !11253, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11254
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 4, !dbg !11255
  %4 = load volatile i32, i32* %3, align 4, !dbg !11255
  %5 = and i32 %4, -16385, !dbg !11257
  %6 = select i1 %1, i32 16384, i32 0, !dbg !11257
  %7 = or i32 %5, %6, !dbg !11257
  store volatile i32 %7, i32* %3, align 4, !dbg !11255
  ret void, !dbg !11258
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SendBreakChar(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #18 !dbg !11259 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !11261, metadata !DIExpression()), !dbg !11263
  call void @llvm.dbg.value(metadata i1 %1, metadata !11262, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11263
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 4, !dbg !11264
  %4 = load volatile i32, i32* %3, align 4, !dbg !11264
  %5 = and i32 %4, -17, !dbg !11266
  %6 = select i1 %1, i32 16, i32 0, !dbg !11266
  %7 = or i32 %5, %6, !dbg !11266
  store volatile i32 %7, i32* %3, align 4, !dbg !11264
  ret void, !dbg !11267
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetEscapeDecectCmd(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #18 !dbg !11268 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !11270, metadata !DIExpression()), !dbg !11272
  call void @llvm.dbg.value(metadata i1 %1, metadata !11271, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11272
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 5, !dbg !11273
  %4 = load volatile i32, i32* %3, align 4, !dbg !11273
  %5 = and i32 %4, -2049, !dbg !11275
  %6 = select i1 %1, i32 2048, i32 0, !dbg !11275
  %7 = or i32 %5, %6, !dbg !11275
  store volatile i32 %7, i32* %3, align 4, !dbg !11273
  ret void, !dbg !11276
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @get_gpt_clock_freq(%struct.GPT_Type* noundef %0) local_unnamed_addr #1 !dbg !11277 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.GPT_Type* %0, metadata !11296, metadata !DIExpression()), !dbg !11301
  %4 = bitcast i32* %2 to i8*, !dbg !11302
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #24, !dbg !11302
  %5 = bitcast i32* %3 to i8*, !dbg !11302
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #24, !dbg !11302
  %6 = ptrtoint %struct.GPT_Type* %0 to i32, !dbg !11303
  switch i32 %6, label %21 [
    i32 808386560, label %8
    i32 808452096, label %7
  ], !dbg !11304

7:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %10, metadata !11297, metadata !DIExpression()), !dbg !11301
  call void @llvm.dbg.value(metadata i32* %2, metadata !11299, metadata !DIExpression(DW_OP_deref)), !dbg !11301
  call void @llvm.dbg.value(metadata i32* %3, metadata !11300, metadata !DIExpression(DW_OP_deref)), !dbg !11301
  br label %8, !dbg !11305

8:                                                ; preds = %1, %7
  %9 = phi i32 [ 809024128, %7 ], [ 809024000, %1 ]
  %10 = tail call fastcc i32 @CCM_GetRootMux(i32 noundef %9) #26, !dbg !11307
  call void @CCM_GetRootDivider(%struct.CCM_Type* noundef nonnull inttoptr (i32 808976384 to %struct.CCM_Type*), i32 noundef %9, i32* noundef nonnull %2, i32* noundef nonnull %3) #25, !dbg !11307
  call void @llvm.dbg.value(metadata i32 %10, metadata !11297, metadata !DIExpression()), !dbg !11301
  switch i32 %10, label %21 [
    i32 0, label %13
    i32 2, label %11
  ], !dbg !11308

11:                                               ; preds = %8
  %12 = call i32 @CCM_ANALOG_GetPfdFreq(%struct.CCM_ANALOG_Type* noundef nonnull inttoptr (i32 808845312 to %struct.CCM_ANALOG_Type*), i32 noundef 192) #25, !dbg !11309
  call void @llvm.dbg.value(metadata i32 %12, metadata !11298, metadata !DIExpression()), !dbg !11301
  br label %13, !dbg !11311

13:                                               ; preds = %8, %11
  %14 = phi i32 [ %12, %11 ], [ 24000000, %8 ], !dbg !11312
  call void @llvm.dbg.value(metadata i32 %14, metadata !11298, metadata !DIExpression()), !dbg !11301
  %15 = load i32, i32* %2, align 4, !dbg !11313
  call void @llvm.dbg.value(metadata i32 %15, metadata !11299, metadata !DIExpression()), !dbg !11301
  %16 = add i32 %15, 1, !dbg !11314
  %17 = udiv i32 %14, %16, !dbg !11315
  %18 = load i32, i32* %3, align 4, !dbg !11316
  call void @llvm.dbg.value(metadata i32 %18, metadata !11300, metadata !DIExpression()), !dbg !11301
  %19 = add i32 %18, 1, !dbg !11317
  %20 = udiv i32 %17, %19, !dbg !11318
  br label %21, !dbg !11319

21:                                               ; preds = %8, %1, %13
  %22 = phi i32 [ %20, %13 ], [ 0, %1 ], [ 0, %8 ], !dbg !11301
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #24, !dbg !11320
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #24, !dbg !11320
  ret i32 %22, !dbg !11320
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @CCM_GetRootMux(i32 noundef %0) unnamed_addr #7 !dbg !11321 {
  call void @llvm.dbg.value(metadata %struct.CCM_Type* undef, metadata !11325, metadata !DIExpression()), !dbg !11327
  call void @llvm.dbg.value(metadata i32 %0, metadata !11326, metadata !DIExpression()), !dbg !11327
  %2 = inttoptr i32 %0 to i32*, !dbg !11328
  %3 = load volatile i32, i32* %2, align 4, !dbg !11328
  %4 = lshr i32 %3, 24, !dbg !11329
  %5 = and i32 %4, 7, !dbg !11329
  ret i32 %5, !dbg !11330
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @get_ecspi_clock_freq(%struct.ECSPI_Type* noundef %0) local_unnamed_addr #1 !dbg !11331 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.ECSPI_Type* %0, metadata !11353, metadata !DIExpression()), !dbg !11358
  %4 = bitcast i32* %2 to i8*, !dbg !11359
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #24, !dbg !11359
  %5 = bitcast i32* %3 to i8*, !dbg !11359
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #24, !dbg !11359
  %6 = ptrtoint %struct.ECSPI_Type* %0 to i32, !dbg !11360
  switch i32 %6, label %21 [
    i32 813826048, label %8
    i32 813891584, label %7
  ], !dbg !11361

7:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %10, metadata !11354, metadata !DIExpression()), !dbg !11358
  call void @llvm.dbg.value(metadata i32* %2, metadata !11356, metadata !DIExpression(DW_OP_deref)), !dbg !11358
  call void @llvm.dbg.value(metadata i32* %3, metadata !11357, metadata !DIExpression(DW_OP_deref)), !dbg !11358
  br label %8, !dbg !11362

8:                                                ; preds = %1, %7
  %9 = phi i32 [ 809022336, %7 ], [ 809022208, %1 ]
  %10 = tail call fastcc i32 @CCM_GetRootMux(i32 noundef %9) #26, !dbg !11364
  call void @CCM_GetRootDivider(%struct.CCM_Type* noundef nonnull inttoptr (i32 808976384 to %struct.CCM_Type*), i32 noundef %9, i32* noundef nonnull %2, i32* noundef nonnull %3) #25, !dbg !11364
  call void @llvm.dbg.value(metadata i32 %10, metadata !11354, metadata !DIExpression()), !dbg !11358
  switch i32 %10, label %21 [
    i32 0, label %13
    i32 5, label %11
  ], !dbg !11365

11:                                               ; preds = %8
  %12 = call i32 @CCM_ANALOG_GetPfdFreq(%struct.CCM_ANALOG_Type* noundef nonnull inttoptr (i32 808845312 to %struct.CCM_ANALOG_Type*), i32 noundef 208) #25, !dbg !11366
  call void @llvm.dbg.value(metadata i32 %12, metadata !11355, metadata !DIExpression()), !dbg !11358
  br label %13, !dbg !11368

13:                                               ; preds = %8, %11
  %14 = phi i32 [ %12, %11 ], [ 24000000, %8 ], !dbg !11369
  call void @llvm.dbg.value(metadata i32 %14, metadata !11355, metadata !DIExpression()), !dbg !11358
  %15 = load i32, i32* %2, align 4, !dbg !11370
  call void @llvm.dbg.value(metadata i32 %15, metadata !11356, metadata !DIExpression()), !dbg !11358
  %16 = add i32 %15, 1, !dbg !11371
  %17 = udiv i32 %14, %16, !dbg !11372
  %18 = load i32, i32* %3, align 4, !dbg !11373
  call void @llvm.dbg.value(metadata i32 %18, metadata !11357, metadata !DIExpression()), !dbg !11358
  %19 = add i32 %18, 1, !dbg !11374
  %20 = udiv i32 %17, %19, !dbg !11375
  br label %21, !dbg !11376

21:                                               ; preds = %8, %1, %13
  %22 = phi i32 [ %20, %13 ], [ 0, %1 ], [ 0, %8 ], !dbg !11358
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #24, !dbg !11377
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #24, !dbg !11377
  ret i32 %22, !dbg !11377
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @get_flexcan_clock_freq(%struct.CAN_Type* noundef %0) local_unnamed_addr #1 !dbg !11378 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.CAN_Type* %0, metadata !11424, metadata !DIExpression()), !dbg !11429
  %4 = bitcast i32* %2 to i8*, !dbg !11430
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #24, !dbg !11430
  %5 = bitcast i32* %3 to i8*, !dbg !11430
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #24, !dbg !11430
  %6 = ptrtoint %struct.CAN_Type* %0 to i32, !dbg !11431
  switch i32 %6, label %24 [
    i32 815792128, label %8
    i32 815857664, label %7
  ], !dbg !11432

7:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %10, metadata !11425, metadata !DIExpression()), !dbg !11429
  call void @llvm.dbg.value(metadata i32* %2, metadata !11427, metadata !DIExpression(DW_OP_deref)), !dbg !11429
  call void @llvm.dbg.value(metadata i32* %3, metadata !11428, metadata !DIExpression(DW_OP_deref)), !dbg !11429
  br label %8, !dbg !11433

8:                                                ; preds = %1, %7
  %9 = phi i32 [ 809020672, %7 ], [ 809020544, %1 ]
  %10 = tail call fastcc i32 @CCM_GetRootMux(i32 noundef %9) #26, !dbg !11435
  call void @CCM_GetRootDivider(%struct.CCM_Type* noundef nonnull inttoptr (i32 808976384 to %struct.CCM_Type*), i32 noundef %9, i32* noundef nonnull %2, i32* noundef nonnull %3) #25, !dbg !11435
  call void @llvm.dbg.value(metadata i32 %10, metadata !11425, metadata !DIExpression()), !dbg !11429
  switch i32 %10, label %24 [
    i32 0, label %16
    i32 1, label %11
    i32 3, label %14
  ], !dbg !11436

11:                                               ; preds = %8
  %12 = call i32 @CCM_ANALOG_GetSysPllFreq(%struct.CCM_ANALOG_Type* noundef nonnull inttoptr (i32 808845312 to %struct.CCM_ANALOG_Type*)) #25, !dbg !11437
  %13 = lshr i32 %12, 2, !dbg !11439
  call void @llvm.dbg.value(metadata i32 %13, metadata !11426, metadata !DIExpression()), !dbg !11429
  br label %16, !dbg !11440

14:                                               ; preds = %8
  %15 = call i32 @CCM_ANALOG_GetSysPllFreq(%struct.CCM_ANALOG_Type* noundef nonnull inttoptr (i32 808845312 to %struct.CCM_ANALOG_Type*)) #25, !dbg !11441
  call void @llvm.dbg.value(metadata i32 %15, metadata !11426, metadata !DIExpression()), !dbg !11429
  br label %16, !dbg !11442

16:                                               ; preds = %8, %14, %11
  %17 = phi i32 [ %15, %14 ], [ %13, %11 ], [ 24000000, %8 ], !dbg !11443
  call void @llvm.dbg.value(metadata i32 %17, metadata !11426, metadata !DIExpression()), !dbg !11429
  %18 = load i32, i32* %2, align 4, !dbg !11444
  call void @llvm.dbg.value(metadata i32 %18, metadata !11427, metadata !DIExpression()), !dbg !11429
  %19 = add i32 %18, 1, !dbg !11445
  %20 = udiv i32 %17, %19, !dbg !11446
  %21 = load i32, i32* %3, align 4, !dbg !11447
  call void @llvm.dbg.value(metadata i32 %21, metadata !11428, metadata !DIExpression()), !dbg !11429
  %22 = add i32 %21, 1, !dbg !11448
  %23 = udiv i32 %20, %22, !dbg !11449
  br label %24, !dbg !11450

24:                                               ; preds = %8, %1, %16
  %25 = phi i32 [ %23, %16 ], [ 0, %1 ], [ 0, %8 ], !dbg !11429
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #24, !dbg !11451
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #24, !dbg !11451
  ret i32 %25, !dbg !11451
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @get_i2c_clock_freq(%struct.I2C_Type* noundef %0) local_unnamed_addr #1 !dbg !11452 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.I2C_Type* %0, metadata !11470, metadata !DIExpression()), !dbg !11475
  %4 = bitcast i32* %2 to i8*, !dbg !11476
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #24, !dbg !11476
  %5 = bitcast i32* %3 to i8*, !dbg !11476
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #24, !dbg !11476
  %6 = ptrtoint %struct.I2C_Type* %0 to i32, !dbg !11477
  %7 = add i32 %6, -815923200, !dbg !11478
  %8 = tail call i32 @llvm.fshl.i32(i32 %7, i32 %7, i32 16), !dbg !11478
  %9 = icmp ult i32 %8, 4, !dbg !11478
  br i1 %9, label %10, label %25, !dbg !11478

10:                                               ; preds = %1
  %11 = shl i32 %8, 7, !dbg !11478
  %12 = add i32 %11, 809020800, !dbg !11478
  %13 = tail call fastcc i32 @CCM_GetRootMux(i32 noundef %12) #26, !dbg !11479
  call void @CCM_GetRootDivider(%struct.CCM_Type* noundef nonnull inttoptr (i32 808976384 to %struct.CCM_Type*), i32 noundef %12, i32* noundef nonnull %2, i32* noundef nonnull %3) #25, !dbg !11479
  call void @llvm.dbg.value(metadata i32 %13, metadata !11471, metadata !DIExpression()), !dbg !11475
  switch i32 %13, label %25 [
    i32 0, label %17
    i32 1, label %14
  ], !dbg !11481

14:                                               ; preds = %10
  %15 = call i32 @CCM_ANALOG_GetSysPllFreq(%struct.CCM_ANALOG_Type* noundef nonnull inttoptr (i32 808845312 to %struct.CCM_ANALOG_Type*)) #25, !dbg !11482
  %16 = lshr i32 %15, 2, !dbg !11484
  call void @llvm.dbg.value(metadata i32 %16, metadata !11472, metadata !DIExpression()), !dbg !11475
  br label %17, !dbg !11485

17:                                               ; preds = %10, %14
  %18 = phi i32 [ %16, %14 ], [ 24000000, %10 ], !dbg !11486
  call void @llvm.dbg.value(metadata i32 %18, metadata !11472, metadata !DIExpression()), !dbg !11475
  %19 = load i32, i32* %2, align 4, !dbg !11487
  call void @llvm.dbg.value(metadata i32 %19, metadata !11473, metadata !DIExpression()), !dbg !11475
  %20 = add i32 %19, 1, !dbg !11488
  %21 = udiv i32 %18, %20, !dbg !11489
  %22 = load i32, i32* %3, align 4, !dbg !11490
  call void @llvm.dbg.value(metadata i32 %22, metadata !11474, metadata !DIExpression()), !dbg !11475
  %23 = add i32 %22, 1, !dbg !11491
  %24 = udiv i32 %21, %23, !dbg !11492
  br label %25, !dbg !11493

25:                                               ; preds = %1, %10, %17
  %26 = phi i32 [ %24, %17 ], [ 0, %1 ], [ 0, %10 ], !dbg !11475
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #24, !dbg !11494
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #24, !dbg !11494
  ret i32 %26, !dbg !11494
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #3

; Function Attrs: noinline nounwind optsize
define dso_local i32 @get_uart_clock_freq(%struct.UART_Type* noundef %0) local_unnamed_addr #1 !dbg !11495 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !11522, metadata !DIExpression()), !dbg !11527
  %4 = bitcast i32* %2 to i8*, !dbg !11528
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #24, !dbg !11528
  %5 = bitcast i32* %3 to i8*, !dbg !11528
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #24, !dbg !11528
  %6 = ptrtoint %struct.UART_Type* %0 to i32, !dbg !11529
  switch i32 %6, label %29 [
    i32 814088192, label %13
    i32 814284800, label %7
    i32 814219264, label %8
    i32 816185344, label %9
    i32 816250880, label %10
    i32 816316416, label %11
    i32 816381952, label %12
  ], !dbg !11530

7:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !11523, metadata !DIExpression()), !dbg !11527
  call void @llvm.dbg.value(metadata i32* %2, metadata !11525, metadata !DIExpression(DW_OP_deref)), !dbg !11527
  call void @llvm.dbg.value(metadata i32* %3, metadata !11526, metadata !DIExpression(DW_OP_deref)), !dbg !11527
  br label %13, !dbg !11531

8:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !11523, metadata !DIExpression()), !dbg !11527
  call void @llvm.dbg.value(metadata i32* %2, metadata !11525, metadata !DIExpression(DW_OP_deref)), !dbg !11527
  call void @llvm.dbg.value(metadata i32* %3, metadata !11526, metadata !DIExpression(DW_OP_deref)), !dbg !11527
  br label %13, !dbg !11533

9:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !11523, metadata !DIExpression()), !dbg !11527
  call void @llvm.dbg.value(metadata i32* %2, metadata !11525, metadata !DIExpression(DW_OP_deref)), !dbg !11527
  call void @llvm.dbg.value(metadata i32* %3, metadata !11526, metadata !DIExpression(DW_OP_deref)), !dbg !11527
  br label %13, !dbg !11534

10:                                               ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !11523, metadata !DIExpression()), !dbg !11527
  call void @llvm.dbg.value(metadata i32* %2, metadata !11525, metadata !DIExpression(DW_OP_deref)), !dbg !11527
  call void @llvm.dbg.value(metadata i32* %3, metadata !11526, metadata !DIExpression(DW_OP_deref)), !dbg !11527
  br label %13, !dbg !11535

11:                                               ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !11523, metadata !DIExpression()), !dbg !11527
  call void @llvm.dbg.value(metadata i32* %2, metadata !11525, metadata !DIExpression(DW_OP_deref)), !dbg !11527
  call void @llvm.dbg.value(metadata i32* %3, metadata !11526, metadata !DIExpression(DW_OP_deref)), !dbg !11527
  br label %13, !dbg !11536

12:                                               ; preds = %1
  call void @llvm.dbg.value(metadata i32 %15, metadata !11523, metadata !DIExpression()), !dbg !11527
  call void @llvm.dbg.value(metadata i32* %2, metadata !11525, metadata !DIExpression(DW_OP_deref)), !dbg !11527
  call void @llvm.dbg.value(metadata i32* %3, metadata !11526, metadata !DIExpression(DW_OP_deref)), !dbg !11527
  br label %13, !dbg !11537

13:                                               ; preds = %1, %12, %11, %10, %9, %8, %7
  %14 = phi i32 [ 809022080, %12 ], [ 809021952, %11 ], [ 809021824, %10 ], [ 809021696, %9 ], [ 809021568, %8 ], [ 809021440, %7 ], [ 809021312, %1 ]
  %15 = tail call fastcc i32 @CCM_GetRootMux(i32 noundef %14) #26, !dbg !11538
  call void @CCM_GetRootDivider(%struct.CCM_Type* noundef nonnull inttoptr (i32 808976384 to %struct.CCM_Type*), i32 noundef %14, i32* noundef nonnull %2, i32* noundef nonnull %3) #25, !dbg !11538
  call void @llvm.dbg.value(metadata i32 %15, metadata !11523, metadata !DIExpression()), !dbg !11527
  switch i32 %15, label %29 [
    i32 0, label %21
    i32 1, label %16
    i32 4, label %19
  ], !dbg !11539

16:                                               ; preds = %13
  %17 = call i32 @CCM_ANALOG_GetSysPllFreq(%struct.CCM_ANALOG_Type* noundef nonnull inttoptr (i32 808845312 to %struct.CCM_ANALOG_Type*)) #25, !dbg !11540
  %18 = lshr i32 %17, 1, !dbg !11542
  call void @llvm.dbg.value(metadata i32 %18, metadata !11524, metadata !DIExpression()), !dbg !11527
  br label %21, !dbg !11543

19:                                               ; preds = %13
  %20 = call i32 @CCM_ANALOG_GetSysPllFreq(%struct.CCM_ANALOG_Type* noundef nonnull inttoptr (i32 808845312 to %struct.CCM_ANALOG_Type*)) #25, !dbg !11544
  call void @llvm.dbg.value(metadata i32 %20, metadata !11524, metadata !DIExpression()), !dbg !11527
  br label %21, !dbg !11545

21:                                               ; preds = %13, %19, %16
  %22 = phi i32 [ %20, %19 ], [ %18, %16 ], [ 24000000, %13 ], !dbg !11546
  call void @llvm.dbg.value(metadata i32 %22, metadata !11524, metadata !DIExpression()), !dbg !11527
  %23 = load i32, i32* %2, align 4, !dbg !11547
  call void @llvm.dbg.value(metadata i32 %23, metadata !11525, metadata !DIExpression()), !dbg !11527
  %24 = add i32 %23, 1, !dbg !11548
  %25 = udiv i32 %22, %24, !dbg !11549
  %26 = load i32, i32* %3, align 4, !dbg !11550
  call void @llvm.dbg.value(metadata i32 %26, metadata !11526, metadata !DIExpression()), !dbg !11527
  %27 = add i32 %26, 1, !dbg !11551
  %28 = udiv i32 %25, %27, !dbg !11552
  br label %29, !dbg !11553

29:                                               ; preds = %13, %1, %21
  %30 = phi i32 [ %28, %21 ], [ 0, %1 ], [ 0, %13 ], !dbg !11527
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #24, !dbg !11554
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #24, !dbg !11554
  ret i32 %30, !dbg !11554
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local void @z_device_state_init() local_unnamed_addr #20 !dbg !11555 {
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !11558, metadata !DIExpression()), !dbg !11574
  call void @llvm.dbg.value(metadata i32 undef, metadata !11558, metadata !DIExpression()), !dbg !11574
  call void @llvm.dbg.value(metadata i32 undef, metadata !11558, metadata !DIExpression(DW_OP_plus_uconst, 24, DW_OP_stack_value)), !dbg !11574
  ret void, !dbg !11575
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.device* @z_impl_device_get_binding(i8* noundef %0) local_unnamed_addr #1 !dbg !11576 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11580, metadata !DIExpression()), !dbg !11582
  %2 = icmp eq i8* %0, null, !dbg !11583
  br i1 %2, label %29, label %3, !dbg !11585

3:                                                ; preds = %1
  %4 = load i8, i8* %0, align 1, !dbg !11586
  %5 = icmp eq i8 %4, 0, !dbg !11587
  %6 = or i1 %5, icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), !dbg !11588
  br i1 %6, label %29, label %8, !dbg !11588

7:                                                ; preds = %15
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !11581, metadata !DIExpression()), !dbg !11582
  br i1 icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), label %29, label %18, !dbg !11589

8:                                                ; preds = %3, %15
  %9 = phi %struct.device* [ %16, %15 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %3 ]
  call void @llvm.dbg.value(metadata %struct.device* %9, metadata !11581, metadata !DIExpression()), !dbg !11582
  %10 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %9) #26, !dbg !11591
  br i1 %10, label %11, label %15, !dbg !11596

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 0, !dbg !11597
  %13 = load i8*, i8** %12, align 4, !dbg !11597
  %14 = icmp eq i8* %13, %0, !dbg !11598
  br i1 %14, label %29, label %15, !dbg !11599

15:                                               ; preds = %8, %11
  %16 = getelementptr inbounds %struct.device, %struct.device* %9, i32 1, !dbg !11600
  call void @llvm.dbg.value(metadata %struct.device* %16, metadata !11581, metadata !DIExpression()), !dbg !11582
  %17 = icmp eq %struct.device* %16, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !11601
  br i1 %17, label %7, label %8, !dbg !11602, !llvm.loop !11603

18:                                               ; preds = %7, %26
  %19 = phi %struct.device* [ %27, %26 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %7 ]
  call void @llvm.dbg.value(metadata %struct.device* %19, metadata !11581, metadata !DIExpression()), !dbg !11582
  %20 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %19) #26, !dbg !11605
  br i1 %20, label %21, label %26, !dbg !11609

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.device, %struct.device* %19, i32 0, i32 0, !dbg !11610
  %23 = load i8*, i8** %22, align 4, !dbg !11610
  %24 = tail call i32 @strcmp(i8* noundef nonnull %0, i8* noundef %23) #25, !dbg !11611
  %25 = icmp eq i32 %24, 0, !dbg !11612
  br i1 %25, label %29, label %26, !dbg !11613

26:                                               ; preds = %18, %21
  %27 = getelementptr inbounds %struct.device, %struct.device* %19, i32 1, !dbg !11614
  call void @llvm.dbg.value(metadata %struct.device* %27, metadata !11581, metadata !DIExpression()), !dbg !11582
  %28 = icmp eq %struct.device* %27, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !11615
  br i1 %28, label %29, label %18, !dbg !11589, !llvm.loop !11616

29:                                               ; preds = %11, %21, %26, %3, %7, %1
  %30 = phi %struct.device* [ null, %3 ], [ null, %1 ], [ null, %7 ], [ %19, %21 ], [ null, %26 ], [ %9, %11 ], !dbg !11582
  ret %struct.device* %30, !dbg !11618
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_device_is_ready(%struct.device* noundef readonly %0) local_unnamed_addr #13 !dbg !11619 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11623, metadata !DIExpression()), !dbg !11624
  %2 = icmp eq %struct.device* %0, null, !dbg !11625
  br i1 %2, label %14, label %3, !dbg !11627

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !11628
  %5 = load %struct.device_state*, %struct.device_state** %4, align 4, !dbg !11628
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !11629
  %7 = load i8, i8* %6, align 1, !dbg !11629
  %8 = and i8 %7, 1, !dbg !11629
  %9 = icmp eq i8 %8, 0, !dbg !11629
  br i1 %9, label %14, label %10, !dbg !11630

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 0, !dbg !11631
  %12 = load i8, i8* %11, align 1, !dbg !11631
  %13 = icmp eq i8 %12, 0, !dbg !11632
  br label %14

14:                                               ; preds = %3, %10, %1
  %15 = phi i1 [ false, %1 ], [ false, %3 ], [ %13, %10 ], !dbg !11624
  ret i1 %15, !dbg !11633
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_device_get_all_static(%struct.device** nocapture noundef writeonly %0) local_unnamed_addr #12 !dbg !11634 {
  call void @llvm.dbg.value(metadata %struct.device** %0, metadata !11639, metadata !DIExpression()), !dbg !11640
  store %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device** %0, align 4, !dbg !11641
  ret i32 sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), !dbg !11642
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_required_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !11643 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11651, metadata !DIExpression()), !dbg !11656
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !11652, metadata !DIExpression()), !dbg !11656
  call void @llvm.dbg.value(metadata i8* %2, metadata !11653, metadata !DIExpression()), !dbg !11656
  %5 = bitcast i32* %4 to i8*, !dbg !11657
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #24, !dbg !11657
  call void @llvm.dbg.value(metadata i32 0, metadata !11654, metadata !DIExpression()), !dbg !11656
  store i32 0, i32* %4, align 4, !dbg !11658
  call void @llvm.dbg.value(metadata i32* %4, metadata !11654, metadata !DIExpression(DW_OP_deref)), !dbg !11656
  %6 = call fastcc i16* @device_required_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #26, !dbg !11659
  call void @llvm.dbg.value(metadata i16* %6, metadata !11655, metadata !DIExpression()), !dbg !11656
  %7 = load i32, i32* %4, align 4, !dbg !11660
  call void @llvm.dbg.value(metadata i32 %7, metadata !11654, metadata !DIExpression()), !dbg !11656
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #26, !dbg !11661
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #24, !dbg !11662
  ret i32 %8, !dbg !11663
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_required_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #17 !dbg !11664 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11668, metadata !DIExpression()), !dbg !11674
  call void @llvm.dbg.value(metadata i32* %1, metadata !11669, metadata !DIExpression()), !dbg !11674
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !11675
  %4 = load i16*, i16** %3, align 4, !dbg !11675
  call void @llvm.dbg.value(metadata i16* %4, metadata !11670, metadata !DIExpression()), !dbg !11674
  %5 = icmp eq i16* %4, null, !dbg !11676
  br i1 %5, label %14, label %6, !dbg !11677

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %12, %6 ], [ 0, %2 ], !dbg !11678
  call void @llvm.dbg.value(metadata i32 %7, metadata !11671, metadata !DIExpression()), !dbg !11678
  %8 = getelementptr inbounds i16, i16* %4, i32 %7, !dbg !11679
  %9 = load i16, i16* %8, align 2, !dbg !11679
  %10 = add i16 %9, -32767, !dbg !11680
  %11 = icmp ult i16 %10, 2, !dbg !11680
  %12 = add i32 %7, 1, !dbg !11681
  call void @llvm.dbg.value(metadata i32 %12, metadata !11671, metadata !DIExpression()), !dbg !11678
  br i1 %11, label %13, label %6, !dbg !11680, !llvm.loop !11683

13:                                               ; preds = %6
  store i32 %7, i32* %1, align 4, !dbg !11686
  br label %14, !dbg !11687

14:                                               ; preds = %13, %2
  ret i16* %4, !dbg !11688
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @device_visitor(i16* nocapture noundef readonly %0, i32 noundef %1, i32 (%struct.device*, i8*)* nocapture noundef readonly %2, i8* noundef %3) unnamed_addr #1 !dbg !11689 {
  call void @llvm.dbg.value(metadata i16* %0, metadata !11693, metadata !DIExpression()), !dbg !11704
  call void @llvm.dbg.value(metadata i32 %1, metadata !11694, metadata !DIExpression()), !dbg !11704
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %2, metadata !11695, metadata !DIExpression()), !dbg !11704
  call void @llvm.dbg.value(metadata i8* %3, metadata !11696, metadata !DIExpression()), !dbg !11704
  call void @llvm.dbg.value(metadata i32 0, metadata !11697, metadata !DIExpression()), !dbg !11705
  %5 = icmp eq i32 %1, 0, !dbg !11706
  br i1 %5, label %16, label %8, !dbg !11707

6:                                                ; preds = %8
  call void @llvm.dbg.value(metadata i32 %15, metadata !11697, metadata !DIExpression()), !dbg !11705
  %7 = icmp eq i32 %15, %1, !dbg !11706
  br i1 %7, label %16, label %8, !dbg !11707, !llvm.loop !11708

8:                                                ; preds = %4, %6
  %9 = phi i32 [ %15, %6 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !11697, metadata !DIExpression()), !dbg !11705
  %10 = getelementptr inbounds i16, i16* %0, i32 %9, !dbg !11710
  %11 = load i16, i16* %10, align 2, !dbg !11710
  call void @llvm.dbg.value(metadata i16 %11, metadata !11699, metadata !DIExpression()), !dbg !11711
  %12 = tail call fastcc %struct.device* @device_from_handle(i16 noundef signext %11) #26, !dbg !11712
  call void @llvm.dbg.value(metadata %struct.device* %12, metadata !11702, metadata !DIExpression()), !dbg !11711
  %13 = tail call i32 %2(%struct.device* noundef %12, i8* noundef %3) #25, !dbg !11713
  call void @llvm.dbg.value(metadata i32 %13, metadata !11703, metadata !DIExpression()), !dbg !11711
  %14 = icmp slt i32 %13, 0, !dbg !11714
  %15 = add nuw i32 %9, 1, !dbg !11716
  call void @llvm.dbg.value(metadata i32 %15, metadata !11697, metadata !DIExpression()), !dbg !11705
  br i1 %14, label %16, label %6

16:                                               ; preds = %8, %6, %4
  %17 = phi i32 [ 0, %4 ], [ %1, %6 ], [ %13, %8 ]
  ret i32 %17, !dbg !11717
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.device* @device_from_handle(i16 noundef signext %0) unnamed_addr #5 !dbg !11718 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !11722, metadata !DIExpression()), !dbg !11725
  call void @llvm.dbg.value(metadata %struct.device* null, metadata !11723, metadata !DIExpression()), !dbg !11725
  call void @llvm.dbg.value(metadata i32 sdiv exact (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), metadata !11724, metadata !DIExpression()), !dbg !11725
  %2 = sext i16 %0 to i32, !dbg !11726
  %3 = icmp slt i16 %0, 1, !dbg !11728
  %4 = icmp ugt i32 %2, sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24)
  %5 = or i1 %3, %4, !dbg !11729
  %6 = add nsw i32 %2, -1, !dbg !11729
  %7 = getelementptr inbounds [0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 %6, !dbg !11729
  %8 = select i1 %5, %struct.device* null, %struct.device* %7, !dbg !11729
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !11723, metadata !DIExpression()), !dbg !11725
  ret %struct.device* %8, !dbg !11730
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_supported_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !11731 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11733, metadata !DIExpression()), !dbg !11738
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !11734, metadata !DIExpression()), !dbg !11738
  call void @llvm.dbg.value(metadata i8* %2, metadata !11735, metadata !DIExpression()), !dbg !11738
  %5 = bitcast i32* %4 to i8*, !dbg !11739
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #24, !dbg !11739
  call void @llvm.dbg.value(metadata i32 0, metadata !11736, metadata !DIExpression()), !dbg !11738
  store i32 0, i32* %4, align 4, !dbg !11740
  call void @llvm.dbg.value(metadata i32* %4, metadata !11736, metadata !DIExpression(DW_OP_deref)), !dbg !11738
  %6 = call fastcc i16* @device_supported_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #26, !dbg !11741
  call void @llvm.dbg.value(metadata i16* %6, metadata !11737, metadata !DIExpression()), !dbg !11738
  %7 = load i32, i32* %4, align 4, !dbg !11742
  call void @llvm.dbg.value(metadata i32 %7, metadata !11736, metadata !DIExpression()), !dbg !11738
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #26, !dbg !11743
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #24, !dbg !11744
  ret i32 %8, !dbg !11745
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_supported_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #17 !dbg !11746 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11748, metadata !DIExpression()), !dbg !11753
  call void @llvm.dbg.value(metadata i32* %1, metadata !11749, metadata !DIExpression()), !dbg !11753
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !11754
  %4 = load i16*, i16** %3, align 4, !dbg !11754
  call void @llvm.dbg.value(metadata i16* %4, metadata !11750, metadata !DIExpression()), !dbg !11753
  call void @llvm.dbg.value(metadata i32 0, metadata !11751, metadata !DIExpression()), !dbg !11753
  call void @llvm.dbg.value(metadata i32 0, metadata !11752, metadata !DIExpression()), !dbg !11753
  %5 = icmp eq i16* %4, null, !dbg !11755
  br i1 %5, label %22, label %6, !dbg !11757

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %13, %6 ], [ 0, %2 ]
  %8 = phi i16* [ %11, %6 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !11751, metadata !DIExpression()), !dbg !11753
  call void @llvm.dbg.value(metadata i16* %8, metadata !11750, metadata !DIExpression()), !dbg !11753
  %9 = load i16, i16* %8, align 2, !dbg !11758
  %10 = icmp eq i16 %9, -32768, !dbg !11762
  call void @llvm.dbg.value(metadata i32 undef, metadata !11751, metadata !DIExpression()), !dbg !11753
  %11 = getelementptr inbounds i16, i16* %8, i32 1, !dbg !11763
  call void @llvm.dbg.value(metadata i16* %11, metadata !11750, metadata !DIExpression()), !dbg !11753
  %12 = zext i1 %10 to i32, !dbg !11764
  %13 = add i32 %7, %12, !dbg !11764
  call void @llvm.dbg.value(metadata i32 %13, metadata !11751, metadata !DIExpression()), !dbg !11753
  %14 = icmp eq i32 %13, 2, !dbg !11765
  br i1 %14, label %15, label %6, !dbg !11766

15:                                               ; preds = %6, %15
  %16 = phi i32 [ %20, %15 ], [ 0, %6 ], !dbg !11753
  call void @llvm.dbg.value(metadata i32 %16, metadata !11752, metadata !DIExpression()), !dbg !11753
  %17 = getelementptr inbounds i16, i16* %11, i32 %16, !dbg !11767
  %18 = load i16, i16* %17, align 2, !dbg !11767
  %19 = icmp eq i16 %18, 32767, !dbg !11768
  %20 = add i32 %16, 1, !dbg !11769
  call void @llvm.dbg.value(metadata i32 %20, metadata !11752, metadata !DIExpression()), !dbg !11753
  br i1 %19, label %21, label %15, !dbg !11771, !llvm.loop !11772

21:                                               ; preds = %15
  store i32 %16, i32* %1, align 4, !dbg !11774
  br label %22, !dbg !11775

22:                                               ; preds = %21, %2
  %23 = phi i16* [ %11, %21 ], [ null, %2 ], !dbg !11776
  call void @llvm.dbg.value(metadata i16* %23, metadata !11750, metadata !DIExpression()), !dbg !11753
  ret i16* %23, !dbg !11777
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local nonnull i32* @z_impl_z_errno() local_unnamed_addr #13 !dbg !11778 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11781
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 4, !dbg !11782
  ret i32* %2, !dbg !11783
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump(i32 %0, %struct.__esf* nocapture %1, %struct.k_thread* nocapture %2) local_unnamed_addr #5 !dbg !11784 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !11928, metadata !DIExpression()), !dbg !11931
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !11929, metadata !DIExpression()), !dbg !11931
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !11930, metadata !DIExpression()), !dbg !11931
  ret void, !dbg !11932
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_memory_dump(i32 noundef %0, i32 noundef %1) local_unnamed_addr #5 !dbg !11933 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11937, metadata !DIExpression()), !dbg !11939
  call void @llvm.dbg.value(metadata i32 %1, metadata !11938, metadata !DIExpression()), !dbg !11939
  ret void, !dbg !11940
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_buffer_output(i8* nocapture noundef %0, i32 noundef %1) local_unnamed_addr #5 !dbg !11941 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11945, metadata !DIExpression()), !dbg !11947
  call void @llvm.dbg.value(metadata i32 %1, metadata !11946, metadata !DIExpression()), !dbg !11947
  ret void, !dbg !11948
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_query(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #5 !dbg !11949 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11953, metadata !DIExpression()), !dbg !11955
  call void @llvm.dbg.value(metadata i8* %1, metadata !11954, metadata !DIExpression()), !dbg !11955
  ret i32 -134, !dbg !11956
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_cmd(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #5 !dbg !11957 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11961, metadata !DIExpression()), !dbg !11963
  call void @llvm.dbg.value(metadata i8* %1, metadata !11962, metadata !DIExpression()), !dbg !11963
  ret i32 -134, !dbg !11964
}

; Function Attrs: noinline noreturn nounwind optsize
define weak dso_local void @arch_system_halt(i32 noundef %0) local_unnamed_addr #2 !dbg !11965 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11968, metadata !DIExpression()), !dbg !11969
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !11970, !srcloc !11976
  call void @llvm.dbg.value(metadata i32 undef, metadata !11973, metadata !DIExpression()) #24, !dbg !11977
  call void @llvm.dbg.value(metadata i32 undef, metadata !11974, metadata !DIExpression()) #24, !dbg !11977
  br label %3, !dbg !11978

3:                                                ; preds = %3, %1
  br label %3, !dbg !11979, !llvm.loop !11982
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !11985 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11989, metadata !DIExpression()), !dbg !11991
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !11990, metadata !DIExpression()), !dbg !11991
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.183, i32 0, i32 0), i32 noundef 69) #25, !dbg !11992
  tail call void @arch_system_halt(i32 noundef %0) #29, !dbg !11997
  unreachable, !dbg !11997
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_fatal_halt(i32 noundef %0) local_unnamed_addr #2 !dbg !11998 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12000, metadata !DIExpression()), !dbg !12001
  tail call void @arch_system_halt(i32 noundef %0) #29, !dbg !12002
  unreachable, !dbg !12002
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !12003 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12005, metadata !DIExpression()), !dbg !12009
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !12006, metadata !DIExpression()), !dbg !12009
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !12010, !srcloc !11976
  call void @llvm.dbg.value(metadata i32 undef, metadata !11973, metadata !DIExpression()) #24, !dbg !12012
  call void @llvm.dbg.value(metadata i32 undef, metadata !11974, metadata !DIExpression()) #24, !dbg !12012
  call void @llvm.dbg.value(metadata i32 undef, metadata !12007, metadata !DIExpression()), !dbg !12009
  %4 = tail call fastcc %struct.k_thread* @k_current_get.186() #27, !dbg !12013
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !12008, metadata !DIExpression()), !dbg !12009
  %5 = tail call fastcc i8* @reason_to_str(i32 noundef %0) #26, !dbg !12014
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.1.187, i32 0, i32 0), i32 noundef 69, i32 noundef %0, i8* noundef %5, i32 noundef 0) #25, !dbg !12014
  %6 = icmp eq %struct.__esf* %1, null, !dbg !12019
  br i1 %6, label %13, label %7, !dbg !12021

7:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !12022, metadata !DIExpression()), !dbg !12027
  %8 = getelementptr inbounds %struct.__esf, %struct.__esf* %1, i32 0, i32 0, i32 7, !dbg !12029
  %9 = load i32, i32* %8, align 4, !dbg !12029
  %10 = and i32 %9, 511, !dbg !12030
  %11 = icmp eq i32 %10, 0, !dbg !12031
  br i1 %11, label %13, label %12, !dbg !12032

12:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.188, i32 0, i32 0), i32 noundef 69) #25, !dbg !12033
  br label %13, !dbg !12039

13:                                               ; preds = %12, %7, %2
  %14 = tail call fastcc i8* @thread_name_get(%struct.k_thread* noundef %4) #26, !dbg !12040
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.189, i32 0, i32 0), i32 noundef 69, %struct.k_thread* noundef %4, i8* noundef %14) #25, !dbg !12040
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) #26, !dbg !12045
  %15 = icmp eq i32 %0, 4, !dbg !12046
  br i1 %15, label %16, label %17, !dbg !12051

16:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.4.190, i32 0, i32 0), i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.5.191, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.6.192, i32 0, i32 0), i32 noundef 148) #25, !dbg !12052
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.7.193, i32 0, i32 0)) #25, !dbg !12052
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.6.192, i32 0, i32 0), i32 noundef 148) #25, !dbg !12052
  unreachable, !dbg !12052

17:                                               ; preds = %13
  %18 = extractvalue { i32, i32 } %3, 0, !dbg !12010
  call void @llvm.dbg.value(metadata i32 %18, metadata !11973, metadata !DIExpression()) #24, !dbg !12012
  call void @llvm.dbg.value(metadata i32 %18, metadata !12007, metadata !DIExpression()), !dbg !12009
  call void @llvm.dbg.value(metadata i32 undef, metadata !12054, metadata !DIExpression()) #24, !dbg !12057
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #24, !dbg !12059, !srcloc !12060
  tail call fastcc void @k_thread_abort.194(%struct.k_thread* noundef %4) #26, !dbg !12061
  ret void, !dbg !12064
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.186() unnamed_addr #6 !dbg !12065 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.202() #27, !dbg !12069
  ret %struct.k_thread* %1, !dbg !12070
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i8* @reason_to_str(i32 noundef %0) unnamed_addr #5 !dbg !12071 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12075, metadata !DIExpression()), !dbg !12076
  %2 = icmp ult i32 %0, 5, !dbg !12077
  br i1 %2, label %3, label %6, !dbg !12077

3:                                                ; preds = %1
  %4 = getelementptr inbounds [5 x i8*], [5 x i8*]* @switch.table.reason_to_str, i32 0, i32 %0, !dbg !12077
  %5 = load i8*, i8** %4, align 4, !dbg !12077
  br label %6, !dbg !12077

6:                                                ; preds = %1, %3
  %7 = phi i8* [ %5, %3 ], [ getelementptr inbounds ([14 x i8], [14 x i8]* @.str.13.196, i32 0, i32 0), %1 ], !dbg !12078
  ret i8* %7, !dbg !12080
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @thread_name_get(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12081 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12085, metadata !DIExpression()), !dbg !12087
  %2 = icmp eq %struct.k_thread* %0, null, !dbg !12088
  br i1 %2, label %9, label %3, !dbg !12089

3:                                                ; preds = %1
  %4 = tail call i8* @k_thread_name_get(%struct.k_thread* noundef nonnull %0) #25, !dbg !12090
  call void @llvm.dbg.value(metadata i8* %4, metadata !12086, metadata !DIExpression()), !dbg !12087
  %5 = icmp eq i8* %4, null, !dbg !12091
  br i1 %5, label %9, label %6, !dbg !12093

6:                                                ; preds = %3
  %7 = load i8, i8* %4, align 1, !dbg !12094
  %8 = icmp eq i8 %7, 0, !dbg !12095
  br i1 %8, label %9, label %10, !dbg !12096

9:                                                ; preds = %1, %6, %3
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.14.195, i32 0, i32 0), metadata !12086, metadata !DIExpression()), !dbg !12087
  br label %10, !dbg !12097

10:                                               ; preds = %9, %6
  %11 = phi i8* [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.14.195, i32 0, i32 0), %9 ], [ %4, %6 ], !dbg !12087
  call void @llvm.dbg.value(metadata i8* %11, metadata !12086, metadata !DIExpression()), !dbg !12087
  ret i8* %11, !dbg !12099
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort.194(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12100 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12104, metadata !DIExpression()), !dbg !12105
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !12106, !srcloc !12108
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !12109
  ret void, !dbg !12110
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.202() unnamed_addr #6 !dbg !12111 {
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !12112, !srcloc !12114
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #25, !dbg !12115
  ret %struct.k_thread* %1, !dbg !12116
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12117 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12121, metadata !DIExpression()), !dbg !12124
  call void @llvm.dbg.value(metadata i32 %1, metadata !12122, metadata !DIExpression()), !dbg !12124
  call void @llvm.dbg.value(metadata i32 %2, metadata !12123, metadata !DIExpression()), !dbg !12124
  %4 = tail call i8* @memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) #25, !dbg !12125
  ret void, !dbg !12126
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12127 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12131, metadata !DIExpression()), !dbg !12134
  call void @llvm.dbg.value(metadata i8* %1, metadata !12132, metadata !DIExpression()), !dbg !12134
  call void @llvm.dbg.value(metadata i32 %2, metadata !12133, metadata !DIExpression()), !dbg !12134
  %4 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) #25, !dbg !12135
  ret void, !dbg !12136
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_bss_zero() local_unnamed_addr #1 !dbg !12137 {
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__bss_end to i32), i32 ptrtoint ([0 x i8]* @__bss_start to i32))) #26, !dbg !12138
  ret void, !dbg !12139
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_cpu(i32 noundef %0) local_unnamed_addr #1 !dbg !12140 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12144, metadata !DIExpression()), !dbg !12145
  tail call fastcc void @init_idle_thread(i32 noundef %0) #26, !dbg !12146
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !12147
  %3 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 3, !dbg !12148
  store %struct.k_thread* %2, %struct.k_thread** %3, align 4, !dbg !12149
  %4 = trunc i32 %0 to i8, !dbg !12150
  %5 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 6, !dbg !12151
  store i8 %4, i8* %5, align 4, !dbg !12152
  %6 = getelementptr inbounds [1 x [2048 x %struct.z_thread_stack_element]], [1 x [2048 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 %0, i32 0, !dbg !12153
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef nonnull %6) #26, !dbg !12154
  %8 = getelementptr inbounds i8, i8* %7, i32 2048, !dbg !12155
  %9 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 1, !dbg !12156
  store i8* %8, i8** %9, align 4, !dbg !12157
  ret void, !dbg !12158
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @init_idle_thread(i32 noundef %0) unnamed_addr #1 !dbg !12159 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12161, metadata !DIExpression()), !dbg !12167
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !12168
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !12162, metadata !DIExpression()), !dbg !12167
  %3 = getelementptr inbounds [1 x [320 x %struct.z_thread_stack_element]], [1 x [320 x %struct.z_thread_stack_element]]* @z_idle_stacks, i32 0, i32 %0, i32 0, !dbg !12169
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %3, metadata !12163, metadata !DIExpression()), !dbg !12167
  call void @llvm.dbg.value(metadata i8* null, metadata !12166, metadata !DIExpression()), !dbg !12167
  %4 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, !dbg !12170
  %5 = bitcast %struct._cpu* %4 to i8*, !dbg !12171
  %6 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull %2, %struct.z_thread_stack_element* noundef nonnull %3, i32 noundef 320, void (i8*, i8*, i8*)* noundef nonnull @idle, i8* noundef nonnull %5, i8* noundef null, i8* noundef null, i32 noundef 15, i32 noundef 1, i8* noundef null) #25, !dbg !12172
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull %2) #26, !dbg !12173
  ret void, !dbg !12174
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #5 !dbg !12175 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !12179, metadata !DIExpression()), !dbg !12180
  %2 = getelementptr %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 0, i32 0, !dbg !12181
  ret i8* %2, !dbg !12182
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started(%struct.k_thread* nocapture noundef %0) unnamed_addr #14 !dbg !12183 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12188, metadata !DIExpression()), !dbg !12189
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12190
  %3 = load i8, i8* %2, align 1, !dbg !12191
  %4 = and i8 %3, -5, !dbg !12191
  store i8 %4, i8* %2, align 1, !dbg !12191
  ret void, !dbg !12192
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_early_boot_rand_get(i8* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !12193 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12195, metadata !DIExpression()), !dbg !12197
  call void @llvm.dbg.value(metadata i32 %1, metadata !12196, metadata !DIExpression()), !dbg !12197
  tail call fastcc void @sys_rand_get(i8* noundef %0, i32 noundef %1) #26, !dbg !12198
  ret void, !dbg !12199
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @sys_rand_get(i8* noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !12200 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12205, metadata !DIExpression()), !dbg !12207
  call void @llvm.dbg.value(metadata i32 %1, metadata !12206, metadata !DIExpression()), !dbg !12207
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !12208, !srcloc !12210
  tail call void @z_impl_sys_rand_get(i8* noundef %0, i32 noundef %1) #25, !dbg !12211
  ret void, !dbg !12212
}

; Function Attrs: optsize
declare !dbg !12213 dso_local void @z_impl_sys_rand_get(i8* noundef, i32 noundef) local_unnamed_addr #0

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_cstart() local_unnamed_addr #2 !dbg !12214 {
  %1 = alloca %struct.k_thread, align 8
  tail call fastcc void @z_sys_init_run_level(i32 noundef 0) #26, !dbg !12217
  %2 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef getelementptr inbounds ([1 x [2048 x %struct.z_thread_stack_element]], [1 x [2048 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 0, i32 0)) #25, !dbg !12218
  %3 = ptrtoint i8* %2 to i32, !dbg !12227
  %4 = add i32 %3, 2048, !dbg !12228
  call void @llvm.dbg.value(metadata i32 %4, metadata !12222, metadata !DIExpression()) #24, !dbg !12229
  call void @llvm.dbg.value(metadata i32 %4, metadata !12230, metadata !DIExpression()) #24, !dbg !12233
  tail call void asm sideeffect "MSR msp, $0", "r"(i32 %4) #24, !dbg !12235, !srcloc !12236
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !12237
  %6 = or i32 %5, 512, !dbg !12237
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !12237
  tail call fastcc void @__NVIC_SetPriority.211(i32 noundef -2, i32 noundef 255) #25, !dbg !12238
  tail call fastcc void @__NVIC_SetPriority.211(i32 noundef -5, i32 noundef 0) #25, !dbg !12241
  tail call fastcc void @__NVIC_SetPriority.211(i32 noundef -12, i32 noundef 0) #25, !dbg !12242
  tail call fastcc void @__NVIC_SetPriority.211(i32 noundef -11, i32 noundef 0) #25, !dbg !12243
  tail call fastcc void @__NVIC_SetPriority.211(i32 noundef -10, i32 noundef 0) #25, !dbg !12244
  tail call fastcc void @__NVIC_SetPriority.211(i32 noundef -4, i32 noundef 0) #25, !dbg !12245
  %7 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !12246
  %8 = or i32 %7, 458752, !dbg !12246
  store volatile i32 %8, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !12246
  tail call void @z_arm_fault_init() #25, !dbg !12247
  tail call void @z_arm_cpu_idle_init() #25, !dbg !12248
  store volatile i32 -1, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !12249
  store volatile i32 -1, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !12252
  %9 = bitcast %struct.k_thread* %1 to i8*, !dbg !12253
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %9) #24, !dbg !12253
  call void @llvm.dbg.declare(metadata %struct.k_thread* %1, metadata !12216, metadata !DIExpression()), !dbg !12254
  call fastcc void @z_dummy_thread_init(%struct.k_thread* noundef nonnull %1) #26, !dbg !12255
  call void @z_device_state_init() #25, !dbg !12256
  call fastcc void @z_sys_init_run_level(i32 noundef 1) #26, !dbg !12257
  call fastcc void @z_sys_init_run_level(i32 noundef 2) #26, !dbg !12258
  %10 = call fastcc i8* @prepare_multithreading() #26, !dbg !12259
  call fastcc void @switch_to_main_thread(i8* noundef %10) #29, !dbg !12260
  unreachable, !dbg !12260
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sys_init_run_level(i32 noundef %0) unnamed_addr #1 !dbg !1992 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !1996, metadata !DIExpression()), !dbg !12261
  %2 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %0, !dbg !12262
  %3 = load %struct.init_entry*, %struct.init_entry** %2, align 4, !dbg !12262
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !1997, metadata !DIExpression()), !dbg !12261
  %4 = add i32 %0, 1
  %5 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %4
  %6 = load %struct.init_entry*, %struct.init_entry** %5, align 4
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !1997, metadata !DIExpression()), !dbg !12261
  %7 = icmp ult %struct.init_entry* %3, %6, !dbg !12263
  br i1 %7, label %8, label %35, !dbg !12264

8:                                                ; preds = %1, %32
  %9 = phi %struct.init_entry* [ %33, %32 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata %struct.init_entry* %9, metadata !1997, metadata !DIExpression()), !dbg !12261
  %10 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 1, !dbg !12265
  %11 = load %struct.device*, %struct.device** %10, align 4, !dbg !12265
  call void @llvm.dbg.value(metadata %struct.device* %11, metadata !2007, metadata !DIExpression()), !dbg !12266
  %12 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 0, !dbg !12267
  %13 = load i32 (%struct.device*)*, i32 (%struct.device*)** %12, align 4, !dbg !12267
  %14 = tail call i32 %13(%struct.device* noundef %11) #25, !dbg !12268
  call void @llvm.dbg.value(metadata i32 %14, metadata !2011, metadata !DIExpression()), !dbg !12266
  %15 = icmp eq %struct.device* %11, null, !dbg !12269
  br i1 %15, label %32, label %16, !dbg !12271

16:                                               ; preds = %8
  %17 = icmp eq i32 %14, 0, !dbg !12272
  br i1 %17, label %26, label %18, !dbg !12275

18:                                               ; preds = %16
  %19 = tail call i32 @llvm.abs.i32(i32 %14, i1 true), !dbg !12276
  call void @llvm.dbg.value(metadata i32 %19, metadata !2011, metadata !DIExpression()), !dbg !12266
  %20 = icmp ult i32 %19, 255, !dbg !12278
  %21 = select i1 %20, i32 %19, i32 255, !dbg !12278
  call void @llvm.dbg.value(metadata i32 %21, metadata !2011, metadata !DIExpression()), !dbg !12266
  %22 = trunc i32 %21 to i8, !dbg !12279
  %23 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !12280
  %24 = load %struct.device_state*, %struct.device_state** %23, align 4, !dbg !12280
  %25 = getelementptr inbounds %struct.device_state, %struct.device_state* %24, i32 0, i32 0, !dbg !12281
  store i8 %22, i8* %25, align 1, !dbg !12282
  br label %26, !dbg !12283

26:                                               ; preds = %18, %16
  %27 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !12284
  %28 = load %struct.device_state*, %struct.device_state** %27, align 4, !dbg !12284
  %29 = getelementptr inbounds %struct.device_state, %struct.device_state* %28, i32 0, i32 1, !dbg !12285
  %30 = load i8, i8* %29, align 1, !dbg !12286
  %31 = or i8 %30, 1, !dbg !12286
  store i8 %31, i8* %29, align 1, !dbg !12286
  br label %32, !dbg !12287

32:                                               ; preds = %26, %8
  %33 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 1, !dbg !12288
  call void @llvm.dbg.value(metadata %struct.init_entry* %33, metadata !1997, metadata !DIExpression()), !dbg !12261
  %34 = icmp ult %struct.init_entry* %33, %6, !dbg !12263
  br i1 %34, label %8, label %35, !dbg !12264, !llvm.loop !12289

35:                                               ; preds = %32, %1
  ret void, !dbg !12291
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.211(i32 noundef %0, i32 noundef %1) unnamed_addr #18 !dbg !12292 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12294, metadata !DIExpression()), !dbg !12296
  call void @llvm.dbg.value(metadata i32 %1, metadata !12295, metadata !DIExpression()), !dbg !12296
  %3 = trunc i32 %1 to i8, !dbg !12297
  %4 = shl i8 %3, 4, !dbg !12297
  %5 = and i32 %0, 15, !dbg !12300
  %6 = add nsw i32 %5, -4, !dbg !12301
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !12302
  store volatile i8 %4, i8* %7, align 1, !dbg !12303
  ret void, !dbg !12304
}

; Function Attrs: optsize
declare !dbg !12305 dso_local void @z_arm_cpu_idle_init() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_dummy_thread_init(%struct.k_thread* noundef %0) unnamed_addr #12 !dbg !12306 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12309, metadata !DIExpression()), !dbg !12310
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12311
  store i8 1, i8* %2, align 1, !dbg !12312
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !12313
  store i8 1, i8* %3, align 4, !dbg !12314
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, !dbg !12315
  store %struct.k_heap* null, %struct.k_heap** %4, align 4, !dbg !12316
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12317
  ret void, !dbg !12318
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @prepare_multithreading() unnamed_addr #1 !dbg !12319 {
  tail call void @z_sched_init() #25, !dbg !12324
  store %struct.k_thread* @z_main_thread, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !12325
  %1 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull @z_main_thread, %struct.z_thread_stack_element* noundef getelementptr inbounds ([1024 x %struct.z_thread_stack_element], [1024 x %struct.z_thread_stack_element]* @z_main_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main, i8* noundef null, i8* noundef null, i8* noundef null, i32 noundef 0, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5.212, i32 0, i32 0)) #25, !dbg !12326
  call void @llvm.dbg.value(metadata i8* %1, metadata !12323, metadata !DIExpression()), !dbg !12327
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull @z_main_thread) #26, !dbg !12328
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull @z_main_thread) #25, !dbg !12329
  tail call void @z_init_cpu(i32 noundef 0) #26, !dbg !12330
  ret i8* %1, !dbg !12331
}

; Function Attrs: noinline noreturn nounwind optsize
define internal fastcc void @switch_to_main_thread(i8* noundef %0) unnamed_addr #2 !dbg !12332 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12336, metadata !DIExpression()), !dbg !12337
  tail call void @arch_switch_to_main_thread(%struct.k_thread* noundef nonnull @z_main_thread, i8* noundef %0, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main) #25, !dbg !12338
  unreachable, !dbg !12339
}

; Function Attrs: noinline nounwind optsize
define internal void @bg_thread_main(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #1 !dbg !12340 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12342, metadata !DIExpression()), !dbg !12345
  call void @llvm.dbg.value(metadata i8* %1, metadata !12343, metadata !DIExpression()), !dbg !12345
  call void @llvm.dbg.value(metadata i8* %2, metadata !12344, metadata !DIExpression()), !dbg !12345
  store i8 1, i8* @z_sys_post_kernel, align 1, !dbg !12346
  tail call fastcc void @z_sys_init_run_level(i32 noundef 3) #26, !dbg !12347
  tail call void @boot_banner() #25, !dbg !12348
  tail call fastcc void @z_sys_init_run_level(i32 noundef 4) #26, !dbg !12349
  tail call void @z_init_static_threads() #25, !dbg !12350
  tail call void @main() #25, !dbg !12351
  %4 = load i8, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !12352
  %5 = and i8 %4, -2, !dbg !12352
  store i8 %5, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !12352
  ret void, !dbg !12353
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #5 !dbg !12354 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !12364, metadata !DIExpression()), !dbg !12366
  call void @llvm.dbg.value(metadata i8* %1, metadata !12365, metadata !DIExpression()), !dbg !12366
  ret void, !dbg !12367
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach_unlocked(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #5 !dbg !12368 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !12370, metadata !DIExpression()), !dbg !12372
  call void @llvm.dbg.value(metadata i8* %1, metadata !12371, metadata !DIExpression()), !dbg !12372
  ret void, !dbg !12373
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_is_in_isr() local_unnamed_addr #1 !dbg !12374 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #24, !dbg !12375, !srcloc !12382
  call void @llvm.dbg.value(metadata i32 %1, metadata !12378, metadata !DIExpression()) #24, !dbg !12383
  %2 = icmp ne i32 %1, 0, !dbg !12384
  ret i1 %2, !dbg !12385
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_set() local_unnamed_addr #14 !dbg !12386 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12387
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !12388
  %3 = load i8, i8* %2, align 4, !dbg !12389
  %4 = or i8 %3, 1, !dbg !12389
  store i8 %4, i8* %2, align 4, !dbg !12389
  ret void, !dbg !12390
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_clear() local_unnamed_addr #14 !dbg !12391 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12392
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !12393
  %3 = load i8, i8* %2, align 4, !dbg !12394
  %4 = and i8 %3, -2, !dbg !12394
  store i8 %4, i8* %2, align 4, !dbg !12394
  ret void, !dbg !12395
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_is_thread_essential() local_unnamed_addr #13 !dbg !12396 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12397
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !12398
  %3 = load i8, i8* %2, align 4, !dbg !12398
  %4 = and i8 %3, 1, !dbg !12399
  %5 = icmp ne i8 %4, 0, !dbg !12400
  ret i1 %5, !dbg !12401
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_set(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1) local_unnamed_addr #5 !dbg !12402 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12406, metadata !DIExpression()), !dbg !12408
  call void @llvm.dbg.value(metadata i8* %1, metadata !12407, metadata !DIExpression()), !dbg !12408
  ret i32 -88, !dbg !12409
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local noalias i8* @k_thread_name_get(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #5 !dbg !12410 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12414, metadata !DIExpression()), !dbg !12415
  ret i8* null, !dbg !12416
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_copy(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i32 noundef %2) local_unnamed_addr #5 !dbg !12417 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12421, metadata !DIExpression()), !dbg !12424
  call void @llvm.dbg.value(metadata i8* %1, metadata !12422, metadata !DIExpression()), !dbg !12424
  call void @llvm.dbg.value(metadata i32 %2, metadata !12423, metadata !DIExpression()), !dbg !12424
  ret i32 -88, !dbg !12425
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_thread_state_str(%struct.k_thread* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !2020 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !2131, metadata !DIExpression()), !dbg !12426
  call void @llvm.dbg.value(metadata i8* %1, metadata !2132, metadata !DIExpression()), !dbg !12426
  call void @llvm.dbg.value(metadata i32 %2, metadata !2133, metadata !DIExpression()), !dbg !12426
  call void @llvm.dbg.value(metadata i32 0, metadata !2134, metadata !DIExpression()), !dbg !12426
  call void @llvm.dbg.value(metadata i8 undef, metadata !2136, metadata !DIExpression()), !dbg !12426
  %4 = icmp eq i8* %1, null, !dbg !12427
  %5 = icmp eq i32 %2, 0
  %6 = or i1 %4, %5, !dbg !12429
  br i1 %6, label %46, label %7, !dbg !12429

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12430
  %9 = load i8, i8* %8, align 1, !dbg !12430
  call void @llvm.dbg.value(metadata i8 %9, metadata !2136, metadata !DIExpression()), !dbg !12426
  %10 = add i32 %2, -1, !dbg !12431
  call void @llvm.dbg.value(metadata i32 %10, metadata !2133, metadata !DIExpression()), !dbg !12426
  call void @llvm.dbg.value(metadata i8 0, metadata !2137, metadata !DIExpression()), !dbg !12432
  call void @llvm.dbg.value(metadata i8 %9, metadata !2136, metadata !DIExpression()), !dbg !12426
  call void @llvm.dbg.value(metadata i32 0, metadata !2134, metadata !DIExpression()), !dbg !12426
  %11 = icmp eq i8 %9, 0, !dbg !12433
  br i1 %11, label %12, label %15, !dbg !12435

12:                                               ; preds = %24, %7
  %13 = phi i32 [ 0, %7 ], [ %32, %24 ], !dbg !12436
  %14 = getelementptr inbounds i8, i8* %1, i32 %13, !dbg !12437
  store i8 0, i8* %14, align 1, !dbg !12438
  br label %46, !dbg !12439

15:                                               ; preds = %7, %42
  %16 = phi i8 [ %45, %42 ], [ 0, %7 ]
  %17 = phi i8 [ %44, %42 ], [ %9, %7 ]
  %18 = phi i32 [ %43, %42 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i8 %16, metadata !2137, metadata !DIExpression()), !dbg !12432
  call void @llvm.dbg.value(metadata i8 %17, metadata !2136, metadata !DIExpression()), !dbg !12426
  call void @llvm.dbg.value(metadata i32 %18, metadata !2134, metadata !DIExpression()), !dbg !12426
  %19 = zext i8 %17 to i32, !dbg !12440
  %20 = zext i8 %16 to i32, !dbg !12441
  %21 = shl nuw i32 1, %20, !dbg !12441
  call void @llvm.dbg.value(metadata i32 %21, metadata !2135, metadata !DIExpression()), !dbg !12426
  %22 = and i32 %21, %19, !dbg !12443
  %23 = icmp eq i32 %22, 0, !dbg !12445
  br i1 %23, label %42, label %24, !dbg !12446

24:                                               ; preds = %15
  %25 = getelementptr inbounds i8, i8* %1, i32 %18, !dbg !12447
  %26 = sub i32 %10, %18, !dbg !12448
  %27 = getelementptr inbounds [8 x i8*], [8 x i8*]* @k_thread_state_str.states_str, i32 0, i32 %20, !dbg !12449
  %28 = load i8*, i8** %27, align 4, !dbg !12449
  %29 = getelementptr inbounds [8 x i32], [8 x i32]* @k_thread_state_str.states_sz, i32 0, i32 %20, !dbg !12450
  %30 = load i32, i32* %29, align 4, !dbg !12450
  %31 = tail call fastcc i32 @copy_bytes(i8* noundef %25, i32 noundef %26, i8* noundef %28, i32 noundef %30) #26, !dbg !12451
  %32 = add i32 %31, %18, !dbg !12452
  call void @llvm.dbg.value(metadata i32 %32, metadata !2134, metadata !DIExpression()), !dbg !12426
  %33 = trunc i32 %21 to i8, !dbg !12453
  %34 = xor i8 %33, -1, !dbg !12453
  %35 = and i8 %17, %34, !dbg !12453
  call void @llvm.dbg.value(metadata i8 %35, metadata !2136, metadata !DIExpression()), !dbg !12426
  %36 = icmp eq i8 %35, 0, !dbg !12454
  br i1 %36, label %12, label %37, !dbg !12456

37:                                               ; preds = %24
  %38 = getelementptr inbounds i8, i8* %1, i32 %32, !dbg !12457
  %39 = sub i32 %10, %32, !dbg !12459
  %40 = tail call fastcc i32 @copy_bytes(i8* noundef %38, i32 noundef %39, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8.215, i32 0, i32 0), i32 noundef 1) #26, !dbg !12460
  %41 = add i32 %40, %32, !dbg !12461
  call void @llvm.dbg.value(metadata i32 %41, metadata !2134, metadata !DIExpression()), !dbg !12426
  br label %42, !dbg !12462

42:                                               ; preds = %37, %15
  %43 = phi i32 [ %18, %15 ], [ %41, %37 ], !dbg !12426
  %44 = phi i8 [ %17, %15 ], [ %35, %37 ], !dbg !12426
  call void @llvm.dbg.value(metadata i8 %44, metadata !2136, metadata !DIExpression()), !dbg !12426
  call void @llvm.dbg.value(metadata i32 %43, metadata !2134, metadata !DIExpression()), !dbg !12426
  %45 = add i8 %16, 1, !dbg !12463
  call void @llvm.dbg.value(metadata i8 %45, metadata !2137, metadata !DIExpression()), !dbg !12432
  br label %15, !dbg !12435

46:                                               ; preds = %3, %12
  %47 = phi i8* [ %1, %12 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.216, i32 0, i32 0), %3 ], !dbg !12426
  ret i8* %47, !dbg !12464
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @copy_bytes(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !12465 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12469, metadata !DIExpression()), !dbg !12474
  call void @llvm.dbg.value(metadata i32 %1, metadata !12470, metadata !DIExpression()), !dbg !12474
  call void @llvm.dbg.value(metadata i8* %2, metadata !12471, metadata !DIExpression()), !dbg !12474
  call void @llvm.dbg.value(metadata i32 %3, metadata !12472, metadata !DIExpression()), !dbg !12474
  %5 = icmp ult i32 %1, %3, !dbg !12475
  %6 = select i1 %5, i32 %1, i32 %3, !dbg !12475
  call void @llvm.dbg.value(metadata i32 %6, metadata !12473, metadata !DIExpression()), !dbg !12474
  %7 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %2, i32 noundef %6) #25, !dbg !12476
  ret i32 %6, !dbg !12477
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !12478 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12482, metadata !DIExpression()), !dbg !12483
  tail call void @z_sched_start(%struct.k_thread* noundef %0) #25, !dbg !12484
  ret void, !dbg !12485
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* nocapture readnone %9) local_unnamed_addr #1 !dbg !12486 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12495, metadata !DIExpression()), !dbg !12506
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !12496, metadata !DIExpression()), !dbg !12506
  call void @llvm.dbg.value(metadata i32 %2, metadata !12497, metadata !DIExpression()), !dbg !12506
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !12498, metadata !DIExpression()), !dbg !12506
  call void @llvm.dbg.value(metadata i8* %4, metadata !12499, metadata !DIExpression()), !dbg !12506
  call void @llvm.dbg.value(metadata i8* %5, metadata !12500, metadata !DIExpression()), !dbg !12506
  call void @llvm.dbg.value(metadata i8* %6, metadata !12501, metadata !DIExpression()), !dbg !12506
  call void @llvm.dbg.value(metadata i32 %7, metadata !12502, metadata !DIExpression()), !dbg !12506
  call void @llvm.dbg.value(metadata i32 %8, metadata !12503, metadata !DIExpression()), !dbg !12506
  call void @llvm.dbg.value(metadata i8* undef, metadata !12504, metadata !DIExpression()), !dbg !12506
  %11 = icmp eq i32 %7, 15, !dbg !12507
  br i1 %11, label %12, label %15, !dbg !12507

12:                                               ; preds = %10
  %13 = bitcast void (i8*, i8*, i8*)* %3 to i8*, !dbg !12507
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_entry(i8* noundef %13) #26, !dbg !12507
  br i1 %14, label %19, label %18, !dbg !12507

15:                                               ; preds = %10
  %16 = add i32 %7, 16, !dbg !12507
  %17 = icmp ult i32 %16, 31, !dbg !12507
  br i1 %17, label %19, label %18, !dbg !12507

18:                                               ; preds = %12, %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.226, i32 0, i32 0), i8* noundef getelementptr inbounds ([128 x i8], [128 x i8]* @.str.10.227, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.228, i32 0, i32 0), i32 noundef 536) #25, !dbg !12511
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.12.229, i32 0, i32 0), i32 noundef %7, i32 noundef 14, i32 noundef -16) #25, !dbg !12511
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.228, i32 0, i32 0), i32 noundef 536) #25, !dbg !12511
  unreachable, !dbg !12511

19:                                               ; preds = %15, %12
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !12513
  tail call fastcc void @z_waitq_init(%union.anon* noundef nonnull %20) #26, !dbg !12514
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, !dbg !12515
  tail call void @z_init_thread_base(%struct._thread_base* noundef %21, i32 noundef %7, i32 noundef 4, i32 noundef %8) #26, !dbg !12516
  %22 = tail call fastcc i8* @setup_thread_stack(%struct.z_thread_stack_element* noundef %1, i32 noundef %2) #26, !dbg !12517
  call void @llvm.dbg.value(metadata i8* %22, metadata !12505, metadata !DIExpression()), !dbg !12506
  tail call void @arch_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %22, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) #25, !dbg !12518
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 2, !dbg !12519
  store i8* null, i8** %23, align 4, !dbg !12520
  %24 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12521
  %25 = icmp eq %struct.k_thread* %24, null, !dbg !12521
  br i1 %25, label %29, label %26, !dbg !12523

26:                                               ; preds = %19
  %27 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %24, i32 0, i32 5, !dbg !12524
  %28 = load %struct.k_heap*, %struct.k_heap** %27, align 4, !dbg !12524
  br label %29, !dbg !12525

29:                                               ; preds = %19, %26
  %30 = phi %struct.k_heap* [ %28, %26 ], [ null, %19 ], !dbg !12506
  %31 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, !dbg !12526
  store %struct.k_heap* %30, %struct.k_heap** %31, align 4, !dbg !12528
  ret i8* %22, !dbg !12529
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_entry(i8* noundef readnone %0) unnamed_addr #5 !dbg !12530 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12534, metadata !DIExpression()), !dbg !12535
  %2 = icmp eq i8* %0, bitcast (void (i8*, i8*, i8*)* @idle to i8*), !dbg !12536
  ret i1 %2, !dbg !12537
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init(%union.anon* noundef %0) unnamed_addr #12 !dbg !12538 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !12543, metadata !DIExpression()), !dbg !12544
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !12545
  tail call fastcc void @sys_dlist_init(%struct._dnode* noundef %2) #26, !dbg !12546
  ret void, !dbg !12547
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @z_init_thread_base(%struct._thread_base* nocapture noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #12 !dbg !12548 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !12553, metadata !DIExpression()), !dbg !12557
  call void @llvm.dbg.value(metadata i32 %1, metadata !12554, metadata !DIExpression()), !dbg !12557
  call void @llvm.dbg.value(metadata i32 %2, metadata !12555, metadata !DIExpression()), !dbg !12557
  call void @llvm.dbg.value(metadata i32 %3, metadata !12556, metadata !DIExpression()), !dbg !12557
  %5 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 1, !dbg !12558
  store %union.anon* null, %union.anon** %5, align 8, !dbg !12559
  %6 = trunc i32 %3 to i8, !dbg !12560
  %7 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 2, !dbg !12561
  store i8 %6, i8* %7, align 4, !dbg !12562
  %8 = trunc i32 %2 to i8, !dbg !12563
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 3, !dbg !12564
  store i8 %8, i8* %9, align 1, !dbg !12565
  %10 = trunc i32 %1 to i8, !dbg !12566
  %11 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 4, !dbg !12567
  %12 = bitcast %union.anon.2* %11 to %struct.device_state*, !dbg !12567
  %13 = bitcast %union.anon.2* %11 to i8*, !dbg !12567
  store i8 %10, i8* %13, align 2, !dbg !12568
  %14 = getelementptr inbounds %struct.device_state, %struct.device_state* %12, i32 0, i32 1, !dbg !12569
  store i8 0, i8* %14, align 1, !dbg !12570
  tail call fastcc void @z_init_thread_timeout(%struct._thread_base* noundef %0) #26, !dbg !12571
  ret void, !dbg !12572
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i8* @setup_thread_stack(%struct.z_thread_stack_element* noundef readnone %0, i32 noundef %1) unnamed_addr #5 !dbg !12573 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !12577, metadata !DIExpression()), !dbg !12585
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !12578, metadata !DIExpression()), !dbg !12585
  call void @llvm.dbg.value(metadata i32 %1, metadata !12579, metadata !DIExpression()), !dbg !12585
  call void @llvm.dbg.value(metadata i32 0, metadata !12584, metadata !DIExpression()), !dbg !12585
  %3 = add i32 %1, 7, !dbg !12586
  %4 = and i32 %3, -8, !dbg !12586
  call void @llvm.dbg.value(metadata i32 %4, metadata !12580, metadata !DIExpression()), !dbg !12585
  call void @llvm.dbg.value(metadata i8* undef, metadata !12583, metadata !DIExpression()), !dbg !12585
  call void @llvm.dbg.value(metadata i32 %4, metadata !12581, metadata !DIExpression()), !dbg !12585
  %5 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 %4, i32 0, !dbg !12588
  call void @llvm.dbg.value(metadata i8* %5, metadata !12582, metadata !DIExpression()), !dbg !12585
  call void @llvm.dbg.value(metadata i32 0, metadata !12584, metadata !DIExpression()), !dbg !12585
  call void @llvm.dbg.value(metadata i8* %5, metadata !12582, metadata !DIExpression()), !dbg !12585
  ret i8* %5, !dbg !12589
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_thread_timeout(%struct._thread_base* nocapture noundef writeonly %0) unnamed_addr #12 !dbg !12590 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !12595, metadata !DIExpression()), !dbg !12596
  %2 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 7, !dbg !12597
  tail call fastcc void @z_init_timeout(%struct._timeout* noundef nonnull %2) #26, !dbg !12598
  ret void, !dbg !12599
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_timeout(%struct._timeout* nocapture noundef writeonly %0) unnamed_addr #12 !dbg !12600 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !12602, metadata !DIExpression()), !dbg !12603
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !12604
  tail call fastcc void @sys_dnode_init(%struct._dnode* noundef %2) #26, !dbg !12605
  ret void, !dbg !12606
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #12 !dbg !12607 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12611, metadata !DIExpression()), !dbg !12612
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !12613
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !12614
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !12615
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !12616
  ret void, !dbg !12617
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init(%struct._dnode* noundef %0) unnamed_addr #12 !dbg !12618 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12623, metadata !DIExpression()), !dbg !12624
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !12625
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !12626
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !12627
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !12628
  ret void, !dbg !12629
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef returned %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, [1 x i64] %9) local_unnamed_addr #1 !dbg !12630 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !12647, metadata !DIExpression()), !dbg !12648
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12638, metadata !DIExpression()), !dbg !12648
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !12639, metadata !DIExpression()), !dbg !12648
  call void @llvm.dbg.value(metadata i32 %2, metadata !12640, metadata !DIExpression()), !dbg !12648
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !12641, metadata !DIExpression()), !dbg !12648
  call void @llvm.dbg.value(metadata i8* %4, metadata !12642, metadata !DIExpression()), !dbg !12648
  call void @llvm.dbg.value(metadata i8* %5, metadata !12643, metadata !DIExpression()), !dbg !12648
  call void @llvm.dbg.value(metadata i8* %6, metadata !12644, metadata !DIExpression()), !dbg !12648
  call void @llvm.dbg.value(metadata i32 %7, metadata !12645, metadata !DIExpression()), !dbg !12648
  call void @llvm.dbg.value(metadata i32 %8, metadata !12646, metadata !DIExpression()), !dbg !12648
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #24, !dbg !12649, !srcloc !12382
  call void @llvm.dbg.value(metadata i32 %11, metadata !12378, metadata !DIExpression()) #24, !dbg !12654
  %12 = icmp eq i32 %11, 0, !dbg !12655
  br i1 %12, label %14, label %13, !dbg !12656

13:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.226, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.13.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.228, i32 0, i32 0), i32 noundef 647) #25, !dbg !12657
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.14.233, i32 0, i32 0)) #25, !dbg !12657
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.228, i32 0, i32 0), i32 noundef 647) #25, !dbg !12657
  unreachable, !dbg !12657

14:                                               ; preds = %10
  %15 = extractvalue [1 x i64] %9, 0
  call void @llvm.dbg.value(metadata i64 %15, metadata !12647, metadata !DIExpression()), !dbg !12648
  %16 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* undef) #26, !dbg !12659
  %17 = icmp eq i64 %15, -1, !dbg !12660
  br i1 %17, label %19, label %18, !dbg !12662

18:                                               ; preds = %14
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %9) #26, !dbg !12663
  br label %19, !dbg !12665

19:                                               ; preds = %18, %14
  ret %struct.k_thread* %0, !dbg !12666
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !12667 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !12672, metadata !DIExpression()), !dbg !12673
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12671, metadata !DIExpression()), !dbg !12673
  %4 = icmp eq i64 %3, 0, !dbg !12674
  br i1 %4, label %5, label %6, !dbg !12676

5:                                                ; preds = %2
  tail call fastcc void @k_thread_start(%struct.k_thread* noundef %0) #26, !dbg !12677
  br label %7, !dbg !12679

6:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) #26, !dbg !12680
  br label %7

7:                                                ; preds = %6, %5
  ret void, !dbg !12682
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12683 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12687, metadata !DIExpression()), !dbg !12688
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !12689, !srcloc !12691
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef %0) #26, !dbg !12692
  ret void, !dbg !12693
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !12694 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !12697, metadata !DIExpression()), !dbg !12698
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12696, metadata !DIExpression()), !dbg !12698
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !12699
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #25, !dbg !12700
  ret void, !dbg !12701
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_static_threads() local_unnamed_addr #1 !dbg !12702 {
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !12704, metadata !DIExpression()), !dbg !12723
  br i1 icmp ugt (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %1, label %2, !dbg !12724

1:                                                ; preds = %6, %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.226, i32 0, i32 0), i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.15.236, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.228, i32 0, i32 0), i32 noundef 750) #25, !dbg !12728
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.16.237, i32 0, i32 0)) #25, !dbg !12728
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.228, i32 0, i32 0), i32 noundef 750) #25, !dbg !12728
  unreachable, !dbg !12728

2:                                                ; preds = %0, %6
  %3 = phi %struct._static_thread_data* [ %29, %6 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %0 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %3, metadata !12704, metadata !DIExpression()), !dbg !12723
  %4 = icmp ult %struct._static_thread_data* %3, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !12731
  br i1 %4, label %6, label %5, !dbg !12732

5:                                                ; preds = %2
  tail call void @k_sched_lock() #25, !dbg !12733
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !12721, metadata !DIExpression()), !dbg !12734
  br i1 icmp ugt (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %31, label %32, !dbg !12735

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 0, !dbg !12739
  %8 = load %struct.k_thread*, %struct.k_thread** %7, align 4, !dbg !12739
  %9 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 1, !dbg !12741
  %10 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %9, align 4, !dbg !12741
  %11 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 2, !dbg !12742
  %12 = load i32, i32* %11, align 4, !dbg !12742
  %13 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 3, !dbg !12743
  %14 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %13, align 4, !dbg !12743
  %15 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 4, !dbg !12744
  %16 = load i8*, i8** %15, align 4, !dbg !12744
  %17 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 5, !dbg !12745
  %18 = load i8*, i8** %17, align 4, !dbg !12745
  %19 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 6, !dbg !12746
  %20 = load i8*, i8** %19, align 4, !dbg !12746
  %21 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 7, !dbg !12747
  %22 = load i32, i32* %21, align 4, !dbg !12747
  %23 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 8, !dbg !12748
  %24 = load i32, i32* %23, align 4, !dbg !12748
  %25 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %8, %struct.z_thread_stack_element* noundef %10, i32 noundef %12, void (i8*, i8*, i8*)* noundef %14, i8* noundef %16, i8* noundef %18, i8* noundef %20, i32 noundef %22, i32 noundef %24, i8* undef) #26, !dbg !12749
  %26 = load %struct.k_thread*, %struct.k_thread** %7, align 4, !dbg !12750
  %27 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %26, i32 0, i32 2, !dbg !12751
  %28 = bitcast i8** %27 to %struct._static_thread_data**, !dbg !12752
  store %struct._static_thread_data* %3, %struct._static_thread_data** %28, align 4, !dbg !12752
  %29 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 1, !dbg !12753
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %29, metadata !12704, metadata !DIExpression()), !dbg !12723
  %30 = icmp ugt %struct._static_thread_data* %29, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !12754
  br i1 %30, label %1, label %2, !dbg !12724, !llvm.loop !12755

31:                                               ; preds = %48, %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.226, i32 0, i32 0), i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.15.236, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.228, i32 0, i32 0), i32 noundef 781) #25, !dbg !12757
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.16.237, i32 0, i32 0)) #25, !dbg !12757
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.228, i32 0, i32 0), i32 noundef 781) #25, !dbg !12757
  unreachable, !dbg !12757

32:                                               ; preds = %5, %48
  %33 = phi %struct._static_thread_data* [ %49, %48 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %5 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %33, metadata !12721, metadata !DIExpression()), !dbg !12734
  %34 = icmp ult %struct._static_thread_data* %33, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !12760
  br i1 %34, label %36, label %35, !dbg !12761

35:                                               ; preds = %32
  tail call void @k_sched_unlock() #25, !dbg !12762
  ret void, !dbg !12763

36:                                               ; preds = %32
  %37 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %33, i32 0, i32 9, !dbg !12764
  %38 = load i32, i32* %37, align 4, !dbg !12764
  %39 = icmp eq i32 %38, -1, !dbg !12767
  br i1 %39, label %48, label %40, !dbg !12768

40:                                               ; preds = %36
  %41 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %33, i32 0, i32 0, !dbg !12769
  %42 = load %struct.k_thread*, %struct.k_thread** %41, align 4, !dbg !12769
  %43 = icmp sgt i32 %38, 0, !dbg !12771
  %44 = select i1 %43, i32 %38, i32 0, !dbg !12771
  %45 = zext i32 %44 to i64, !dbg !12771
  %46 = tail call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %45) #26, !dbg !12771
  %47 = insertvalue [1 x i64] poison, i64 %46, 0, !dbg !12772
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %42, [1 x i64] %47) #26, !dbg !12772
  br label %48, !dbg !12773

48:                                               ; preds = %36, %40
  %49 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %33, i32 1, !dbg !12774
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %49, metadata !12721, metadata !DIExpression()), !dbg !12734
  %50 = icmp ugt %struct._static_thread_data* %49, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !12775
  br i1 %50, label %31, label %32, !dbg !12735, !llvm.loop !12776
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %0) unnamed_addr #5 !dbg !12778 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !12783, metadata !DIExpression()), !dbg !12784
  call void @llvm.dbg.value(metadata i64 %0, metadata !12785, metadata !DIExpression()), !dbg !12802
  call void @llvm.dbg.value(metadata i32 1000, metadata !12790, metadata !DIExpression()), !dbg !12802
  call void @llvm.dbg.value(metadata i32 10000, metadata !12791, metadata !DIExpression()), !dbg !12802
  call void @llvm.dbg.value(metadata i8 1, metadata !12792, metadata !DIExpression()), !dbg !12802
  call void @llvm.dbg.value(metadata i8 0, metadata !12793, metadata !DIExpression()), !dbg !12802
  call void @llvm.dbg.value(metadata i8 1, metadata !12794, metadata !DIExpression()), !dbg !12802
  call void @llvm.dbg.value(metadata i8 0, metadata !12795, metadata !DIExpression()), !dbg !12802
  call void @llvm.dbg.value(metadata i8 1, metadata !12796, metadata !DIExpression()), !dbg !12802
  call void @llvm.dbg.value(metadata i8 0, metadata !12797, metadata !DIExpression()), !dbg !12802
  call void @llvm.dbg.value(metadata i64 0, metadata !12798, metadata !DIExpression()), !dbg !12802
  call void @llvm.dbg.value(metadata i64 0, metadata !12798, metadata !DIExpression()), !dbg !12802
  %2 = mul i64 %0, 10, !dbg !12804
  ret i64 %2, !dbg !12810
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_thread_user_mode_enter(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #2 !dbg !12811 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !12813, metadata !DIExpression()), !dbg !12817
  call void @llvm.dbg.value(metadata i8* %1, metadata !12814, metadata !DIExpression()), !dbg !12817
  call void @llvm.dbg.value(metadata i8* %2, metadata !12815, metadata !DIExpression()), !dbg !12817
  call void @llvm.dbg.value(metadata i8* %3, metadata !12816, metadata !DIExpression()), !dbg !12817
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12818
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 2, !dbg !12819
  %7 = load i8, i8* %6, align 4, !dbg !12820
  %8 = or i8 %7, 4, !dbg !12820
  store i8 %8, i8* %6, align 4, !dbg !12820
  tail call void @z_thread_essential_clear() #26, !dbg !12821
  tail call void @z_thread_entry(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #28, !dbg !12822
  unreachable, !dbg !12822
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* nocapture noundef readonly %0) local_unnamed_addr #13 !dbg !12823 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !12828, metadata !DIExpression()), !dbg !12830
  %2 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !12831
  %3 = load i32, i32* %2, align 4, !dbg !12831
  call void @llvm.dbg.value(metadata i32 %3, metadata !12829, metadata !DIExpression()), !dbg !12830
  %4 = icmp eq i32 %3, 0, !dbg !12832
  br i1 %4, label %10, label %5, !dbg !12834

5:                                                ; preds = %1
  %6 = and i32 %3, 3, !dbg !12835
  %7 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 6), align 4, !dbg !12838
  %8 = zext i8 %7 to i32, !dbg !12839
  %9 = icmp eq i32 %6, %8, !dbg !12840
  br i1 %9, label %11, label %10, !dbg !12841

10:                                               ; preds = %5, %1
  br label %11, !dbg !12842

11:                                               ; preds = %5, %10
  %12 = phi i1 [ true, %10 ], [ false, %5 ], !dbg !12830
  ret i1 %12, !dbg !12843
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* nocapture noundef %0) local_unnamed_addr #14 !dbg !12844 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !12846, metadata !DIExpression()), !dbg !12847
  %2 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !12848
  %3 = load i32, i32* %2, align 4, !dbg !12848
  %4 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 6), align 4, !dbg !12850
  %5 = zext i8 %4 to i32, !dbg !12851
  %6 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12852
  %7 = ptrtoint %struct.k_thread* %6 to i32, !dbg !12853
  %8 = or i32 %7, %5, !dbg !12854
  %9 = icmp eq i32 %3, %8, !dbg !12855
  br i1 %9, label %10, label %11, !dbg !12856

10:                                               ; preds = %1
  store i32 0, i32* %2, align 4, !dbg !12857
  br label %11, !dbg !12858

11:                                               ; preds = %1, %10
  ret i1 %9, !dbg !12859
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_spin_lock_set_owner(%struct.k_spinlock* nocapture noundef writeonly %0) local_unnamed_addr #14 !dbg !12860 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !12864, metadata !DIExpression()), !dbg !12865
  %2 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 6), align 4, !dbg !12866
  %3 = zext i8 %2 to i32, !dbg !12867
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12868
  %5 = ptrtoint %struct.k_thread* %4 to i32, !dbg !12869
  %6 = or i32 %5, %3, !dbg !12870
  %7 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !12871
  store i32 %6, i32* %7, align 4, !dbg !12872
  ret void, !dbg !12873
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_disable(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #5 !dbg !12874 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12878, metadata !DIExpression()), !dbg !12879
  ret i32 -134, !dbg !12880
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_enable(%struct.k_thread* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #5 !dbg !12881 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12885, metadata !DIExpression()), !dbg !12887
  call void @llvm.dbg.value(metadata i32 %1, metadata !12886, metadata !DIExpression()), !dbg !12887
  ret i32 -134, !dbg !12888
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_get(%struct.k_thread* noundef readnone %0, %struct._cpu_arch* noundef readnone %1) local_unnamed_addr #5 !dbg !12889 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12896, metadata !DIExpression()), !dbg !12898
  call void @llvm.dbg.value(metadata %struct._cpu_arch* %1, metadata !12897, metadata !DIExpression()), !dbg !12898
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !12899
  %4 = icmp eq %struct._cpu_arch* %1, null
  %5 = or i1 %3, %4, !dbg !12901
  %6 = select i1 %5, i32 -22, i32 0, !dbg !12898
  ret i32 %6, !dbg !12902
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_all_get(%struct._cpu_arch* noundef readnone %0) local_unnamed_addr #5 !dbg !12903 {
  call void @llvm.dbg.value(metadata %struct._cpu_arch* %0, metadata !12907, metadata !DIExpression()), !dbg !12908
  %2 = icmp eq %struct._cpu_arch* %0, null, !dbg !12909
  %3 = select i1 %2, i32 -22, i32 0, !dbg !12908
  ret i32 %3, !dbg !12911
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pm_save_idle_exit() local_unnamed_addr #1 !dbg !12912 {
  tail call void @sys_clock_idle_exit() #25, !dbg !12914
  ret void, !dbg !12915
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @idle(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #2 !dbg !12916 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12918, metadata !DIExpression()), !dbg !12921
  call void @llvm.dbg.value(metadata i8* %1, metadata !12919, metadata !DIExpression()), !dbg !12921
  call void @llvm.dbg.value(metadata i8* %2, metadata !12920, metadata !DIExpression()), !dbg !12921
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12922
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %4, i32 0, i32 0, i32 4, !dbg !12922
  %6 = bitcast %union.anon.2* %5 to i8*, !dbg !12922
  %7 = load i8, i8* %6, align 2, !dbg !12922
  %8 = icmp sgt i8 %7, -1, !dbg !12922
  br i1 %8, label %10, label %9, !dbg !12925

9:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.246, i32 0, i32 0), i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.1.247, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.248, i32 0, i32 0), i32 noundef 39) #25, !dbg !12926
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.248, i32 0, i32 0), i32 noundef 39) #25, !dbg !12926
  unreachable, !dbg !12926

10:                                               ; preds = %3, %10
  %11 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !12928, !srcloc !12935
  call void @llvm.dbg.value(metadata i32 undef, metadata !12931, metadata !DIExpression()) #24, !dbg !12936
  call void @llvm.dbg.value(metadata i32 undef, metadata !12932, metadata !DIExpression()) #24, !dbg !12936
  tail call fastcc void @k_cpu_idle() #26, !dbg !12937
  br label %10, !dbg !12938, !llvm.loop !12939
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_cpu_idle() unnamed_addr #1 !dbg !12941 {
  tail call void @arch_cpu_idle() #25, !dbg !12942
  ret void, !dbg !12943
}

; Function Attrs: optsize
declare !dbg !12944 dso_local void @arch_cpu_idle() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @k_msgq_init(%struct.k_msgq* noundef %0, i8* noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #12 !dbg !12945 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !12963, metadata !DIExpression()), !dbg !12967
  call void @llvm.dbg.value(metadata i8* %1, metadata !12964, metadata !DIExpression()), !dbg !12967
  call void @llvm.dbg.value(metadata i32 %2, metadata !12965, metadata !DIExpression()), !dbg !12967
  call void @llvm.dbg.value(metadata i32 %3, metadata !12966, metadata !DIExpression()), !dbg !12967
  %5 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !12968
  store i32 %2, i32* %5, align 4, !dbg !12969
  %6 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 3, !dbg !12970
  store i32 %3, i32* %6, align 4, !dbg !12971
  %7 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !12972
  store i8* %1, i8** %7, align 4, !dbg !12973
  %8 = mul i32 %3, %2, !dbg !12974
  %9 = getelementptr inbounds i8, i8* %1, i32 %8, !dbg !12975
  %10 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 5, !dbg !12976
  store i8* %9, i8** %10, align 4, !dbg !12977
  %11 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 6, !dbg !12978
  store i8* %1, i8** %11, align 4, !dbg !12979
  %12 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 7, !dbg !12980
  store i8* %1, i8** %12, align 4, !dbg !12981
  %13 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !12982
  store i32 0, i32* %13, align 4, !dbg !12983
  %14 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 9, !dbg !12984
  store i8 0, i8* %14, align 4, !dbg !12985
  %15 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !12986
  tail call fastcc void @z_waitq_init.251(%union.anon* noundef %15) #26, !dbg !12987
  %16 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 1, i32 0, !dbg !12988
  store i32 0, i32* %16, align 4, !dbg !12988
  ret void, !dbg !12989
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.251(%union.anon* noundef %0) unnamed_addr #12 !dbg !12990 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !12994, metadata !DIExpression()), !dbg !12995
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !12996
  tail call fastcc void @sys_dlist_init.252(%struct._dnode* noundef %2) #26, !dbg !12997
  ret void, !dbg !12998
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.252(%struct._dnode* noundef %0) unnamed_addr #12 !dbg !12999 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13004, metadata !DIExpression()), !dbg !13005
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13006
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !13007
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13008
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !13009
  ret void, !dbg !13010
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_msgq_alloc_init(%struct.k_msgq* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !13011 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !13015, metadata !DIExpression()), !dbg !13021
  call void @llvm.dbg.value(metadata i32 %1, metadata !13016, metadata !DIExpression()), !dbg !13021
  call void @llvm.dbg.value(metadata i32 %2, metadata !13017, metadata !DIExpression()), !dbg !13021
  %5 = bitcast i32* %4 to i8*, !dbg !13022
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #24, !dbg !13022
  call void @llvm.dbg.value(metadata i32* %4, metadata !13020, metadata !DIExpression(DW_OP_deref)), !dbg !13021
  %6 = call fastcc zeroext i1 @size_mul_overflow(i32 noundef %1, i32 noundef %2, i32* noundef nonnull %4) #26, !dbg !13023
  br i1 %6, label %13, label %7, !dbg !13025

7:                                                ; preds = %3
  %8 = load i32, i32* %4, align 4, !dbg !13026
  call void @llvm.dbg.value(metadata i32 %8, metadata !13020, metadata !DIExpression()), !dbg !13021
  %9 = tail call fastcc i8* @z_thread_malloc(i32 noundef %8) #26, !dbg !13028
  call void @llvm.dbg.value(metadata i8* %9, metadata !13018, metadata !DIExpression()), !dbg !13021
  %10 = icmp eq i8* %9, null, !dbg !13029
  br i1 %10, label %13, label %11, !dbg !13031

11:                                               ; preds = %7
  tail call void @k_msgq_init(%struct.k_msgq* noundef %0, i8* noundef nonnull %9, i32 noundef %1, i32 noundef %2) #26, !dbg !13032
  %12 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 9, !dbg !13034
  store i8 1, i8* %12, align 4, !dbg !13035
  call void @llvm.dbg.value(metadata i32 0, metadata !13019, metadata !DIExpression()), !dbg !13021
  br label %13, !dbg !13036

13:                                               ; preds = %7, %3, %11
  %14 = phi i32 [ 0, %11 ], [ -22, %3 ], [ -12, %7 ], !dbg !13037
  call void @llvm.dbg.value(metadata i32 %14, metadata !13019, metadata !DIExpression()), !dbg !13021
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #24, !dbg !13038
  ret i32 %14, !dbg !13039
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn writeonly
define internal fastcc zeroext i1 @size_mul_overflow(i32 noundef %0, i32 noundef %1, i32* nocapture noundef writeonly %2) unnamed_addr #21 !dbg !13040 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13045, metadata !DIExpression()), !dbg !13048
  call void @llvm.dbg.value(metadata i32 %1, metadata !13046, metadata !DIExpression()), !dbg !13048
  call void @llvm.dbg.value(metadata i32* %2, metadata !13047, metadata !DIExpression()), !dbg !13048
  %4 = tail call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %0, i32 %1), !dbg !13049
  %5 = extractvalue { i32, i1 } %4, 1, !dbg !13049
  %6 = extractvalue { i32, i1 } %4, 0, !dbg !13049
  store i32 %6, i32* %2, align 4, !dbg !13049
  ret i1 %5, !dbg !13050
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @z_thread_malloc(i32 noundef %0) unnamed_addr #1 !dbg !13051 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13055, metadata !DIExpression()), !dbg !13056
  %2 = tail call i8* @z_thread_aligned_alloc(i32 noundef 0, i32 noundef %0) #25, !dbg !13057
  ret i8* %2, !dbg !13058
}

; Function Attrs: optsize
declare !dbg !13059 dso_local i8* @z_thread_aligned_alloc(i32 noundef, i32 noundef) local_unnamed_addr #0

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i32, i1 } @llvm.umul.with.overflow.i32(i32, i32) #3

; Function Attrs: noinline nounwind optsize
define dso_local i32 @k_msgq_cleanup(%struct.k_msgq* noundef %0) local_unnamed_addr #1 !dbg !13062 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !13066, metadata !DIExpression()), !dbg !13067
  %2 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !13068
  %3 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %2) #26, !dbg !13068
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !13068
  br i1 %4, label %5, label %15, !dbg !13070

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 9, !dbg !13071
  %7 = load i8, i8* %6, align 4, !dbg !13071
  %8 = and i8 %7, 1, !dbg !13073
  %9 = icmp eq i8 %8, 0, !dbg !13074
  br i1 %9, label %15, label %10, !dbg !13075

10:                                               ; preds = %5
  %11 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !13076
  %12 = load i8*, i8** %11, align 4, !dbg !13076
  tail call void @k_free(i8* noundef %12) #25, !dbg !13078
  %13 = load i8, i8* %6, align 4, !dbg !13079
  %14 = and i8 %13, -2, !dbg !13079
  store i8 %14, i8* %6, align 4, !dbg !13079
  br label %15, !dbg !13080

15:                                               ; preds = %5, %10, %1
  %16 = phi i32 [ -16, %1 ], [ 0, %10 ], [ 0, %5 ], !dbg !13067
  ret i32 %16, !dbg !13081
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef readonly %0) unnamed_addr #13 !dbg !13082 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !13086, metadata !DIExpression()), !dbg !13087
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !13088
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %2) #26, !dbg !13089
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !13090
  ret %struct.k_thread* %4, !dbg !13091
}

; Function Attrs: optsize
declare !dbg !13092 dso_local void @k_free(i8* noundef) local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) unnamed_addr #13 !dbg !13093 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13097, metadata !DIExpression()), !dbg !13098
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef %0) #26, !dbg !13099
  br i1 %2, label %6, label %3, !dbg !13099

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13100
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !13100
  br label %6, !dbg !13099

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !13099
  ret %struct._dnode* %7, !dbg !13101
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef readonly %0) unnamed_addr #13 !dbg !13102 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13106, metadata !DIExpression()), !dbg !13107
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13108
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !13108
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !13109
  ret i1 %4, !dbg !13110
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_msgq_put(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !13111 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !13121, metadata !DIExpression()), !dbg !13129
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !13119, metadata !DIExpression()), !dbg !13129
  call void @llvm.dbg.value(metadata i8* %1, metadata !13120, metadata !DIExpression()), !dbg !13129
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #24, !dbg !13130, !srcloc !13139
  call void @llvm.dbg.value(metadata i32 %5, metadata !13133, metadata !DIExpression()) #24, !dbg !13140
  %6 = icmp eq i32 %5, 0, !dbg !13141
  %7 = icmp eq i64 %4, 0, !dbg !13142
  %8 = select i1 %6, i1 true, i1 %7, !dbg !13142
  br i1 %8, label %10, label %9, !dbg !13142

9:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.255, i32 0, i32 0), i8* noundef getelementptr inbounds ([70 x i8], [70 x i8]* @.str.1.256, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.257, i32 0, i32 0), i32 noundef 118) #25, !dbg !13143
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.258, i32 0, i32 0)) #25, !dbg !13143
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.257, i32 0, i32 0), i32 noundef 118) #25, !dbg !13143
  unreachable, !dbg !13143

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 1, !dbg !13145
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %11, metadata !13146, metadata !DIExpression()) #24, !dbg !13153
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !13155, !srcloc !13161
  call void @llvm.dbg.value(metadata i32 undef, metadata !13158, metadata !DIExpression()) #24, !dbg !13162
  call void @llvm.dbg.value(metadata i32 undef, metadata !13159, metadata !DIExpression()) #24, !dbg !13162
  call void @llvm.dbg.value(metadata i32 undef, metadata !13152, metadata !DIExpression()) #24, !dbg !13153
  %13 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull %11) #25, !dbg !13163
  br i1 %13, label %15, label %14, !dbg !13166

14:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.255, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.259, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.260, i32 0, i32 0), i32 noundef 148) #25, !dbg !13167
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.261, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %11) #25, !dbg !13167
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.260, i32 0, i32 0), i32 noundef 148) #25, !dbg !13167
  unreachable, !dbg !13167

15:                                               ; preds = %10
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !13155
  call void @llvm.dbg.value(metadata i32 %16, metadata !13158, metadata !DIExpression()) #24, !dbg !13162
  call void @llvm.dbg.value(metadata i32 %16, metadata !13152, metadata !DIExpression()) #24, !dbg !13153
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull %11) #25, !dbg !13169
  call void @llvm.dbg.value(metadata i32 %16, metadata !13123, metadata !DIExpression()), !dbg !13129
  %17 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !13170
  %18 = load i32, i32* %17, align 4, !dbg !13170
  %19 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 3, !dbg !13172
  %20 = load i32, i32* %19, align 4, !dbg !13172
  %21 = icmp ult i32 %18, %20, !dbg !13173
  br i1 %21, label %22, label %52, !dbg !13174

22:                                               ; preds = %15
  %23 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !13175
  %24 = tail call %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %23) #25, !dbg !13177
  call void @llvm.dbg.value(metadata %struct.k_thread* %24, metadata !13122, metadata !DIExpression()), !dbg !13129
  %25 = icmp eq %struct.k_thread* %24, null, !dbg !13178
  br i1 %25, label %34, label %26, !dbg !13180

26:                                               ; preds = %22
  %27 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %24, i32 0, i32 0, i32 6, !dbg !13181
  %28 = load i8*, i8** %27, align 4, !dbg !13181
  %29 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !13183
  %30 = load i32, i32* %29, align 4, !dbg !13183
  %31 = tail call i8* @memcpy(i8* noundef %28, i8* noundef %1, i32 noundef %30) #25, !dbg !13184
  call void @llvm.dbg.value(metadata %struct.k_thread* %24, metadata !13185, metadata !DIExpression()), !dbg !13191
  call void @llvm.dbg.value(metadata i32 0, metadata !13190, metadata !DIExpression()), !dbg !13191
  %32 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %24, i32 0, i32 6, i32 1, !dbg !13193
  store i32 0, i32* %32, align 4, !dbg !13194
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %24) #25, !dbg !13195
  %33 = insertvalue [1 x i32] poison, i32 %16, 0, !dbg !13196
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %11, [1 x i32] %33) #25, !dbg !13196
  br label %64, !dbg !13197

34:                                               ; preds = %22
  %35 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 7, !dbg !13198
  %36 = load i8*, i8** %35, align 4, !dbg !13198
  %37 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !13200
  %38 = load i32, i32* %37, align 4, !dbg !13200
  %39 = tail call i8* @memcpy(i8* noundef %36, i8* noundef %1, i32 noundef %38) #25, !dbg !13201
  %40 = load i32, i32* %37, align 4, !dbg !13202
  %41 = load i8*, i8** %35, align 4, !dbg !13203
  %42 = getelementptr inbounds i8, i8* %41, i32 %40, !dbg !13203
  store i8* %42, i8** %35, align 4, !dbg !13203
  %43 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 5, !dbg !13204
  %44 = load i8*, i8** %43, align 4, !dbg !13204
  %45 = icmp eq i8* %42, %44, !dbg !13206
  br i1 %45, label %46, label %49, !dbg !13207

46:                                               ; preds = %34
  %47 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !13208
  %48 = load i8*, i8** %47, align 4, !dbg !13208
  store i8* %48, i8** %35, align 4, !dbg !13210
  br label %49, !dbg !13211

49:                                               ; preds = %46, %34
  %50 = load i32, i32* %17, align 4, !dbg !13212
  %51 = add i32 %50, 1, !dbg !13212
  store i32 %51, i32* %17, align 4, !dbg !13212
  call void @llvm.dbg.value(metadata i32 0, metadata !13128, metadata !DIExpression()), !dbg !13129
  br label %59, !dbg !13213

52:                                               ; preds = %15
  br i1 %7, label %59, label %53, !dbg !13214

53:                                               ; preds = %52
  %54 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13215
  %55 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %54, i32 0, i32 0, i32 6, !dbg !13218
  store i8* %1, i8** %55, align 4, !dbg !13219
  %56 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !13220
  %57 = insertvalue [1 x i32] poison, i32 %16, 0, !dbg !13221
  %58 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull %11, [1 x i32] %57, %union.anon* noundef %56, [1 x i64] %2) #25, !dbg !13221
  call void @llvm.dbg.value(metadata i32 %58, metadata !13128, metadata !DIExpression()), !dbg !13129
  br label %64, !dbg !13222

59:                                               ; preds = %52, %49
  %60 = phi i32 [ 0, %49 ], [ -35, %52 ], !dbg !13223
  call void @llvm.dbg.value(metadata i32 %60, metadata !13128, metadata !DIExpression()), !dbg !13129
  call void @llvm.dbg.value(metadata i32 undef, metadata !13224, metadata !DIExpression()) #24, !dbg !13230
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %11, metadata !13229, metadata !DIExpression()) #24, !dbg !13230
  %61 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull %11) #25, !dbg !13232
  br i1 %61, label %63, label %62, !dbg !13235

62:                                               ; preds = %59
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.255, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.262, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.260, i32 0, i32 0), i32 noundef 194) #25, !dbg !13236
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.263, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %11) #25, !dbg !13236
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.260, i32 0, i32 0), i32 noundef 194) #25, !dbg !13236
  unreachable, !dbg !13236

63:                                               ; preds = %59
  call void @llvm.dbg.value(metadata i32 %16, metadata !13224, metadata !DIExpression()) #24, !dbg !13230
  call void @llvm.dbg.value(metadata i32 %16, metadata !13238, metadata !DIExpression()) #24, !dbg !13241
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #24, !dbg !13243, !srcloc !13244
  br label %64, !dbg !13245

64:                                               ; preds = %63, %53, %26
  %65 = phi i32 [ 0, %26 ], [ %60, %63 ], [ %58, %53 ], !dbg !13129
  ret i32 %65, !dbg !13246
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_impl_k_msgq_get_attrs(%struct.k_msgq* nocapture noundef readonly %0, %struct._gpio_init_config* nocapture noundef writeonly %1) local_unnamed_addr #14 !dbg !13247 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !13257, metadata !DIExpression()), !dbg !13259
  call void @llvm.dbg.value(metadata %struct._gpio_init_config* %1, metadata !13258, metadata !DIExpression()), !dbg !13259
  %3 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !13260
  %4 = load i32, i32* %3, align 4, !dbg !13260
  %5 = getelementptr inbounds %struct._gpio_init_config, %struct._gpio_init_config* %1, i32 0, i32 0, !dbg !13261
  store i32 %4, i32* %5, align 4, !dbg !13262
  %6 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 3, !dbg !13263
  %7 = load i32, i32* %6, align 4, !dbg !13263
  %8 = getelementptr inbounds %struct._gpio_init_config, %struct._gpio_init_config* %1, i32 0, i32 1, !dbg !13264
  store i32 %7, i32* %8, align 4, !dbg !13265
  %9 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !13266
  %10 = load i32, i32* %9, align 4, !dbg !13266
  %11 = getelementptr inbounds %struct._gpio_init_config, %struct._gpio_init_config* %1, i32 0, i32 2, !dbg !13267
  store i32 %10, i32* %11, align 4, !dbg !13268
  ret void, !dbg !13269
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_msgq_get(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !13270 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !13276, metadata !DIExpression()), !dbg !13280
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !13274, metadata !DIExpression()), !dbg !13280
  call void @llvm.dbg.value(metadata i8* %1, metadata !13275, metadata !DIExpression()), !dbg !13280
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #24, !dbg !13281, !srcloc !13139
  call void @llvm.dbg.value(metadata i32 %5, metadata !13133, metadata !DIExpression()) #24, !dbg !13286
  %6 = icmp eq i32 %5, 0, !dbg !13287
  %7 = icmp eq i64 %4, 0, !dbg !13288
  %8 = select i1 %6, i1 true, i1 %7, !dbg !13288
  br i1 %8, label %10, label %9, !dbg !13288

9:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.255, i32 0, i32 0), i8* noundef getelementptr inbounds ([70 x i8], [70 x i8]* @.str.1.256, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.257, i32 0, i32 0), i32 noundef 208) #25, !dbg !13289
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.258, i32 0, i32 0)) #25, !dbg !13289
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.257, i32 0, i32 0), i32 noundef 208) #25, !dbg !13289
  unreachable, !dbg !13289

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 1, !dbg !13291
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %11, metadata !13146, metadata !DIExpression()) #24, !dbg !13292
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !13294, !srcloc !13161
  call void @llvm.dbg.value(metadata i32 undef, metadata !13158, metadata !DIExpression()) #24, !dbg !13296
  call void @llvm.dbg.value(metadata i32 undef, metadata !13159, metadata !DIExpression()) #24, !dbg !13296
  call void @llvm.dbg.value(metadata i32 undef, metadata !13152, metadata !DIExpression()) #24, !dbg !13292
  %13 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull %11) #25, !dbg !13297
  br i1 %13, label %15, label %14, !dbg !13298

14:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.255, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.259, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.260, i32 0, i32 0), i32 noundef 148) #25, !dbg !13299
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.261, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %11) #25, !dbg !13299
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.260, i32 0, i32 0), i32 noundef 148) #25, !dbg !13299
  unreachable, !dbg !13299

15:                                               ; preds = %10
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !13294
  call void @llvm.dbg.value(metadata i32 %16, metadata !13158, metadata !DIExpression()) #24, !dbg !13296
  call void @llvm.dbg.value(metadata i32 %16, metadata !13152, metadata !DIExpression()) #24, !dbg !13292
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull %11) #25, !dbg !13300
  call void @llvm.dbg.value(metadata i32 %16, metadata !13277, metadata !DIExpression()), !dbg !13280
  %17 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !13301
  %18 = load i32, i32* %17, align 4, !dbg !13301
  %19 = icmp eq i32 %18, 0, !dbg !13303
  br i1 %19, label %61, label %20, !dbg !13304

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 6, !dbg !13305
  %22 = load i8*, i8** %21, align 4, !dbg !13305
  %23 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !13307
  %24 = load i32, i32* %23, align 4, !dbg !13307
  %25 = tail call i8* @memcpy(i8* noundef %1, i8* noundef %22, i32 noundef %24) #25, !dbg !13308
  %26 = load i32, i32* %23, align 4, !dbg !13309
  %27 = load i8*, i8** %21, align 4, !dbg !13310
  %28 = getelementptr inbounds i8, i8* %27, i32 %26, !dbg !13310
  store i8* %28, i8** %21, align 4, !dbg !13310
  %29 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 5, !dbg !13311
  %30 = load i8*, i8** %29, align 4, !dbg !13311
  %31 = icmp eq i8* %28, %30, !dbg !13313
  br i1 %31, label %32, label %35, !dbg !13314

32:                                               ; preds = %20
  %33 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !13315
  %34 = load i8*, i8** %33, align 4, !dbg !13315
  store i8* %34, i8** %21, align 4, !dbg !13317
  br label %35, !dbg !13318

35:                                               ; preds = %32, %20
  %36 = load i32, i32* %17, align 4, !dbg !13319
  %37 = add i32 %36, -1, !dbg !13319
  store i32 %37, i32* %17, align 4, !dbg !13319
  %38 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !13320
  %39 = tail call %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %38) #25, !dbg !13321
  call void @llvm.dbg.value(metadata %struct.k_thread* %39, metadata !13278, metadata !DIExpression()), !dbg !13280
  %40 = icmp eq %struct.k_thread* %39, null, !dbg !13322
  br i1 %40, label %68, label %41, !dbg !13324

41:                                               ; preds = %35
  %42 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 7, !dbg !13325
  %43 = load i8*, i8** %42, align 4, !dbg !13325
  %44 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %39, i32 0, i32 0, i32 6, !dbg !13327
  %45 = load i8*, i8** %44, align 4, !dbg !13327
  %46 = load i32, i32* %23, align 4, !dbg !13328
  %47 = tail call i8* @memcpy(i8* noundef %43, i8* noundef %45, i32 noundef %46) #25, !dbg !13329
  %48 = load i32, i32* %23, align 4, !dbg !13330
  %49 = load i8*, i8** %42, align 4, !dbg !13331
  %50 = getelementptr inbounds i8, i8* %49, i32 %48, !dbg !13331
  store i8* %50, i8** %42, align 4, !dbg !13331
  %51 = load i8*, i8** %29, align 4, !dbg !13332
  %52 = icmp eq i8* %50, %51, !dbg !13334
  br i1 %52, label %53, label %56, !dbg !13335

53:                                               ; preds = %41
  %54 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !13336
  %55 = load i8*, i8** %54, align 4, !dbg !13336
  store i8* %55, i8** %42, align 4, !dbg !13338
  br label %56, !dbg !13339

56:                                               ; preds = %53, %41
  %57 = load i32, i32* %17, align 4, !dbg !13340
  %58 = add i32 %57, 1, !dbg !13340
  store i32 %58, i32* %17, align 4, !dbg !13340
  call void @llvm.dbg.value(metadata %struct.k_thread* %39, metadata !13185, metadata !DIExpression()), !dbg !13341
  call void @llvm.dbg.value(metadata i32 0, metadata !13190, metadata !DIExpression()), !dbg !13341
  %59 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %39, i32 0, i32 6, i32 1, !dbg !13343
  store i32 0, i32* %59, align 4, !dbg !13344
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %39) #25, !dbg !13345
  %60 = insertvalue [1 x i32] poison, i32 %16, 0, !dbg !13346
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %11, [1 x i32] %60) #25, !dbg !13346
  br label %73, !dbg !13347

61:                                               ; preds = %15
  br i1 %7, label %68, label %62, !dbg !13348

62:                                               ; preds = %61
  %63 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13349
  %64 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %63, i32 0, i32 0, i32 6, !dbg !13352
  store i8* %1, i8** %64, align 4, !dbg !13353
  %65 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !13354
  %66 = insertvalue [1 x i32] poison, i32 %16, 0, !dbg !13355
  %67 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull %11, [1 x i32] %66, %union.anon* noundef %65, [1 x i64] %2) #25, !dbg !13355
  call void @llvm.dbg.value(metadata i32 %67, metadata !13279, metadata !DIExpression()), !dbg !13280
  br label %73, !dbg !13356

68:                                               ; preds = %61, %35
  %69 = phi i32 [ 0, %35 ], [ -35, %61 ], !dbg !13357
  call void @llvm.dbg.value(metadata i32 %69, metadata !13279, metadata !DIExpression()), !dbg !13280
  call void @llvm.dbg.value(metadata i32 undef, metadata !13224, metadata !DIExpression()) #24, !dbg !13358
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %11, metadata !13229, metadata !DIExpression()) #24, !dbg !13358
  %70 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull %11) #25, !dbg !13360
  br i1 %70, label %72, label %71, !dbg !13361

71:                                               ; preds = %68
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.255, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.262, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.260, i32 0, i32 0), i32 noundef 194) #25, !dbg !13362
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.263, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %11) #25, !dbg !13362
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.260, i32 0, i32 0), i32 noundef 194) #25, !dbg !13362
  unreachable, !dbg !13362

72:                                               ; preds = %68
  call void @llvm.dbg.value(metadata i32 %16, metadata !13224, metadata !DIExpression()) #24, !dbg !13358
  call void @llvm.dbg.value(metadata i32 %16, metadata !13238, metadata !DIExpression()) #24, !dbg !13363
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #24, !dbg !13365, !srcloc !13244
  br label %73, !dbg !13366

73:                                               ; preds = %72, %62, %56
  %74 = phi i32 [ 0, %56 ], [ %69, %72 ], [ %67, %62 ], !dbg !13280
  ret i32 %74, !dbg !13367
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_msgq_peek(%struct.k_msgq* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !13368 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !13372, metadata !DIExpression()), !dbg !13376
  call void @llvm.dbg.value(metadata i8* %1, metadata !13373, metadata !DIExpression()), !dbg !13376
  %3 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 1, !dbg !13377
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %3, metadata !13146, metadata !DIExpression()) #24, !dbg !13378
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !13380, !srcloc !13161
  call void @llvm.dbg.value(metadata i32 undef, metadata !13158, metadata !DIExpression()) #24, !dbg !13382
  call void @llvm.dbg.value(metadata i32 undef, metadata !13159, metadata !DIExpression()) #24, !dbg !13382
  call void @llvm.dbg.value(metadata i32 undef, metadata !13152, metadata !DIExpression()) #24, !dbg !13378
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull %3) #25, !dbg !13383
  br i1 %5, label %7, label %6, !dbg !13384

6:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.255, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.259, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.260, i32 0, i32 0), i32 noundef 148) #25, !dbg !13385
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.261, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %3) #25, !dbg !13385
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.260, i32 0, i32 0), i32 noundef 148) #25, !dbg !13385
  unreachable, !dbg !13385

7:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !13158, metadata !DIExpression()) #24, !dbg !13382
  call void @llvm.dbg.value(metadata i32 undef, metadata !13152, metadata !DIExpression()) #24, !dbg !13378
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull %3) #25, !dbg !13386
  call void @llvm.dbg.value(metadata i32 undef, metadata !13374, metadata !DIExpression()), !dbg !13376
  %8 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !13387
  %9 = load i32, i32* %8, align 4, !dbg !13387
  %10 = icmp eq i32 %9, 0, !dbg !13389
  br i1 %10, label %17, label %11, !dbg !13390

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 6, !dbg !13391
  %13 = load i8*, i8** %12, align 4, !dbg !13391
  %14 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !13393
  %15 = load i32, i32* %14, align 4, !dbg !13393
  %16 = tail call i8* @memcpy(i8* noundef %1, i8* noundef %13, i32 noundef %15) #25, !dbg !13394
  call void @llvm.dbg.value(metadata i32 0, metadata !13375, metadata !DIExpression()), !dbg !13376
  br label %17, !dbg !13395

17:                                               ; preds = %7, %11
  %18 = phi i32 [ 0, %11 ], [ -35, %7 ], !dbg !13396
  call void @llvm.dbg.value(metadata i32 %18, metadata !13375, metadata !DIExpression()), !dbg !13376
  call void @llvm.dbg.value(metadata i32 undef, metadata !13224, metadata !DIExpression()) #24, !dbg !13397
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %3, metadata !13229, metadata !DIExpression()) #24, !dbg !13397
  %19 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull %3) #25, !dbg !13399
  br i1 %19, label %21, label %20, !dbg !13400

20:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.255, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.262, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.260, i32 0, i32 0), i32 noundef 194) #25, !dbg !13401
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.263, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %3) #25, !dbg !13401
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.260, i32 0, i32 0), i32 noundef 194) #25, !dbg !13401
  unreachable, !dbg !13401

21:                                               ; preds = %17
  %22 = extractvalue { i32, i32 } %4, 0, !dbg !13380
  call void @llvm.dbg.value(metadata i32 %22, metadata !13158, metadata !DIExpression()) #24, !dbg !13382
  call void @llvm.dbg.value(metadata i32 %22, metadata !13152, metadata !DIExpression()) #24, !dbg !13378
  call void @llvm.dbg.value(metadata i32 %22, metadata !13374, metadata !DIExpression()), !dbg !13376
  call void @llvm.dbg.value(metadata i32 undef, metadata !13224, metadata !DIExpression()) #24, !dbg !13397
  call void @llvm.dbg.value(metadata i32 undef, metadata !13238, metadata !DIExpression()) #24, !dbg !13402
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %22) #24, !dbg !13404, !srcloc !13244
  ret i32 %18, !dbg !13405
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_msgq_purge(%struct.k_msgq* noundef %0) local_unnamed_addr #1 !dbg !13406 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !13410, metadata !DIExpression()), !dbg !13413
  %2 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 1, !dbg !13414
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %2, metadata !13146, metadata !DIExpression()) #24, !dbg !13415
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !13417, !srcloc !13161
  call void @llvm.dbg.value(metadata i32 undef, metadata !13158, metadata !DIExpression()) #24, !dbg !13419
  call void @llvm.dbg.value(metadata i32 undef, metadata !13159, metadata !DIExpression()) #24, !dbg !13419
  call void @llvm.dbg.value(metadata i32 undef, metadata !13152, metadata !DIExpression()) #24, !dbg !13415
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull %2) #25, !dbg !13420
  br i1 %4, label %6, label %5, !dbg !13421

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.255, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.259, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.260, i32 0, i32 0), i32 noundef 148) #25, !dbg !13422
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.261, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %2) #25, !dbg !13422
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.260, i32 0, i32 0), i32 noundef 148) #25, !dbg !13422
  unreachable, !dbg !13422

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !13158, metadata !DIExpression()) #24, !dbg !13419
  call void @llvm.dbg.value(metadata i32 undef, metadata !13152, metadata !DIExpression()) #24, !dbg !13415
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull %2) #25, !dbg !13423
  call void @llvm.dbg.value(metadata i32 undef, metadata !13411, metadata !DIExpression()), !dbg !13413
  %7 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0
  %8 = tail call %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %7) #25, !dbg !13424
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !13412, metadata !DIExpression()), !dbg !13413
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !13425
  br i1 %9, label %15, label %10, !dbg !13426

10:                                               ; preds = %6, %10
  %11 = phi %struct.k_thread* [ %13, %10 ], [ %8, %6 ]
  call void @llvm.dbg.value(metadata %struct.k_thread* %11, metadata !13185, metadata !DIExpression()), !dbg !13427
  call void @llvm.dbg.value(metadata i32 -35, metadata !13190, metadata !DIExpression()), !dbg !13427
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %11, i32 0, i32 6, i32 1, !dbg !13430
  store i32 -35, i32* %12, align 4, !dbg !13431
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %11) #25, !dbg !13432
  %13 = tail call %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %7) #25, !dbg !13424
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !13412, metadata !DIExpression()), !dbg !13413
  %14 = icmp eq %struct.k_thread* %13, null, !dbg !13425
  br i1 %14, label %15, label %10, !dbg !13426, !llvm.loop !13433

15:                                               ; preds = %10, %6
  %16 = extractvalue { i32, i32 } %3, 0, !dbg !13417
  call void @llvm.dbg.value(metadata i32 %16, metadata !13158, metadata !DIExpression()) #24, !dbg !13419
  call void @llvm.dbg.value(metadata i32 %16, metadata !13152, metadata !DIExpression()) #24, !dbg !13415
  call void @llvm.dbg.value(metadata i32 %16, metadata !13411, metadata !DIExpression()), !dbg !13413
  %17 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !13435
  store i32 0, i32* %17, align 4, !dbg !13436
  %18 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 7, !dbg !13437
  %19 = load i8*, i8** %18, align 4, !dbg !13437
  %20 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 6, !dbg !13438
  store i8* %19, i8** %20, align 4, !dbg !13439
  %21 = insertvalue [1 x i32] poison, i32 %16, 0, !dbg !13440
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %2, [1 x i32] %21) #25, !dbg !13440
  ret void, !dbg !13441
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_impl_k_sem_init(%struct.k_sem* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #12 !dbg !13442 {
  call void @llvm.dbg.value(metadata %struct.k_sem* %0, metadata !13457, metadata !DIExpression()), !dbg !13460
  call void @llvm.dbg.value(metadata i32 %1, metadata !13458, metadata !DIExpression()), !dbg !13460
  call void @llvm.dbg.value(metadata i32 %2, metadata !13459, metadata !DIExpression()), !dbg !13460
  %4 = icmp eq i32 %2, 0, !dbg !13461
  %5 = icmp ugt i32 %1, %2, !dbg !13461
  %6 = or i1 %4, %5, !dbg !13461
  br i1 %6, label %11, label %7, !dbg !13461

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 1, !dbg !13463
  store i32 %1, i32* %8, align 4, !dbg !13464
  %9 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 2, !dbg !13465
  store i32 %2, i32* %9, align 4, !dbg !13466
  %10 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 0, !dbg !13467
  tail call fastcc void @z_waitq_init.266(%union.anon* noundef %10) #26, !dbg !13468
  br label %11, !dbg !13469

11:                                               ; preds = %3, %7
  %12 = phi i32 [ 0, %7 ], [ -22, %3 ], !dbg !13460
  ret i32 %12, !dbg !13470
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.266(%union.anon* noundef %0) unnamed_addr #12 !dbg !13471 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !13476, metadata !DIExpression()), !dbg !13477
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !13478
  tail call fastcc void @sys_dlist_init.267(%struct._dnode* noundef %2) #26, !dbg !13479
  ret void, !dbg !13480
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.267(%struct._dnode* noundef %0) unnamed_addr #12 !dbg !13481 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13486, metadata !DIExpression()), !dbg !13487
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13488
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !13489
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13490
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !13491
  ret void, !dbg !13492
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_sem_give(%struct.k_sem* noundef %0) local_unnamed_addr #1 !dbg !13493 {
  call void @llvm.dbg.value(metadata %struct.k_sem* %0, metadata !13497, metadata !DIExpression()), !dbg !13577
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.268, metadata !13578, metadata !DIExpression()) #24, !dbg !13585
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !13587, !srcloc !13593
  call void @llvm.dbg.value(metadata i32 undef, metadata !13590, metadata !DIExpression()) #24, !dbg !13594
  call void @llvm.dbg.value(metadata i32 undef, metadata !13591, metadata !DIExpression()) #24, !dbg !13594
  call void @llvm.dbg.value(metadata i32 undef, metadata !13584, metadata !DIExpression()) #24, !dbg !13585
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock.268) #25, !dbg !13595
  br i1 %3, label %5, label %4, !dbg !13598

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.269, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.270, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.271, i32 0, i32 0), i32 noundef 148) #25, !dbg !13599
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.272, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.268) #25, !dbg !13599
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.271, i32 0, i32 0), i32 noundef 148) #25, !dbg !13599
  unreachable, !dbg !13599

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !13590, metadata !DIExpression()) #24, !dbg !13594
  call void @llvm.dbg.value(metadata i32 undef, metadata !13584, metadata !DIExpression()) #24, !dbg !13585
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock.268) #25, !dbg !13601
  call void @llvm.dbg.value(metadata i32 undef, metadata !13498, metadata !DIExpression()), !dbg !13577
  %6 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 0, !dbg !13602
  %7 = tail call %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %6) #25, !dbg !13603
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !13503, metadata !DIExpression()), !dbg !13577
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !13604
  br i1 %8, label %11, label %9, !dbg !13606

9:                                                ; preds = %5
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !13607, metadata !DIExpression()), !dbg !13613
  call void @llvm.dbg.value(metadata i32 0, metadata !13612, metadata !DIExpression()), !dbg !13613
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %7, i32 0, i32 6, i32 1, !dbg !13616
  store i32 0, i32* %10, align 4, !dbg !13617
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %7) #25, !dbg !13618
  br label %19, !dbg !13619

11:                                               ; preds = %5
  %12 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 1, !dbg !13620
  %13 = load i32, i32* %12, align 4, !dbg !13620
  %14 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 2, !dbg !13622
  %15 = load i32, i32* %14, align 4, !dbg !13622
  %16 = icmp ne i32 %13, %15, !dbg !13623
  %17 = zext i1 %16 to i32, !dbg !13624
  %18 = add i32 %13, %17, !dbg !13625
  store i32 %18, i32* %12, align 4, !dbg !13625
  br label %19

19:                                               ; preds = %11, %9
  %20 = extractvalue { i32, i32 } %2, 0, !dbg !13587
  call void @llvm.dbg.value(metadata i32 %20, metadata !13590, metadata !DIExpression()) #24, !dbg !13594
  call void @llvm.dbg.value(metadata i32 %20, metadata !13584, metadata !DIExpression()) #24, !dbg !13585
  call void @llvm.dbg.value(metadata i32 %20, metadata !13498, metadata !DIExpression()), !dbg !13577
  %21 = insertvalue [1 x i32] poison, i32 %20, 0, !dbg !13626
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @lock.268, [1 x i32] %21) #25, !dbg !13626
  ret void, !dbg !13627
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sem_take(%struct.k_sem* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !13628 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !13637, metadata !DIExpression()), !dbg !13641
  call void @llvm.dbg.value(metadata %struct.k_sem* %0, metadata !13636, metadata !DIExpression()), !dbg !13641
  call void @llvm.dbg.value(metadata i32 0, metadata !13638, metadata !DIExpression()), !dbg !13641
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #24, !dbg !13642, !srcloc !13651
  call void @llvm.dbg.value(metadata i32 %4, metadata !13645, metadata !DIExpression()) #24, !dbg !13652
  %5 = icmp eq i32 %4, 0, !dbg !13653
  %6 = icmp eq i64 %3, 0, !dbg !13654
  %7 = select i1 %5, i1 true, i1 %6, !dbg !13654
  br i1 %7, label %9, label %8, !dbg !13654

8:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.269, i32 0, i32 0), i8* noundef getelementptr inbounds ([78 x i8], [78 x i8]* @.str.1.275, i32 0, i32 0), i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.2.276, i32 0, i32 0), i32 noundef 122) #25, !dbg !13655
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.277, i32 0, i32 0)) #25, !dbg !13655
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.2.276, i32 0, i32 0), i32 noundef 122) #25, !dbg !13655
  unreachable, !dbg !13655

9:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.268, metadata !13578, metadata !DIExpression()) #24, !dbg !13657
  %10 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !13659, !srcloc !13593
  call void @llvm.dbg.value(metadata i32 undef, metadata !13590, metadata !DIExpression()) #24, !dbg !13661
  call void @llvm.dbg.value(metadata i32 undef, metadata !13591, metadata !DIExpression()) #24, !dbg !13661
  call void @llvm.dbg.value(metadata i32 undef, metadata !13584, metadata !DIExpression()) #24, !dbg !13657
  %11 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock.268) #25, !dbg !13662
  br i1 %11, label %13, label %12, !dbg !13663

12:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.269, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.270, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.271, i32 0, i32 0), i32 noundef 148) #25, !dbg !13664
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.272, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.268) #25, !dbg !13664
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.271, i32 0, i32 0), i32 noundef 148) #25, !dbg !13664
  unreachable, !dbg !13664

13:                                               ; preds = %9
  %14 = extractvalue { i32, i32 } %10, 0, !dbg !13659
  call void @llvm.dbg.value(metadata i32 %14, metadata !13590, metadata !DIExpression()) #24, !dbg !13661
  call void @llvm.dbg.value(metadata i32 %14, metadata !13584, metadata !DIExpression()) #24, !dbg !13657
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock.268) #25, !dbg !13665
  call void @llvm.dbg.value(metadata i32 %14, metadata !13639, metadata !DIExpression()), !dbg !13641
  %15 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 1, !dbg !13666
  %16 = load i32, i32* %15, align 4, !dbg !13666
  %17 = icmp eq i32 %16, 0, !dbg !13666
  br i1 %17, label %23, label %18, !dbg !13668, !prof !13669

18:                                               ; preds = %13
  %19 = add i32 %16, -1, !dbg !13670
  store i32 %19, i32* %15, align 4, !dbg !13670
  call void @llvm.dbg.value(metadata i32 undef, metadata !13672, metadata !DIExpression()) #24, !dbg !13678
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.268, metadata !13677, metadata !DIExpression()) #24, !dbg !13678
  %20 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock.268) #25, !dbg !13680
  br i1 %20, label %22, label %21, !dbg !13683

21:                                               ; preds = %18
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.269, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.278, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.271, i32 0, i32 0), i32 noundef 194) #25, !dbg !13684
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.279, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.268) #25, !dbg !13684
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.271, i32 0, i32 0), i32 noundef 194) #25, !dbg !13684
  unreachable, !dbg !13684

22:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 %14, metadata !13672, metadata !DIExpression()) #24, !dbg !13678
  call void @llvm.dbg.value(metadata i32 %14, metadata !13686, metadata !DIExpression()) #24, !dbg !13689
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #24, !dbg !13691, !srcloc !13692
  call void @llvm.dbg.value(metadata i32 0, metadata !13638, metadata !DIExpression()), !dbg !13641
  br label %32, !dbg !13693

23:                                               ; preds = %13
  br i1 %6, label %24, label %28, !dbg !13694

24:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 undef, metadata !13672, metadata !DIExpression()) #24, !dbg !13695
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.268, metadata !13677, metadata !DIExpression()) #24, !dbg !13695
  %25 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock.268) #25, !dbg !13699
  br i1 %25, label %27, label %26, !dbg !13700

26:                                               ; preds = %24
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.269, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.278, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.271, i32 0, i32 0), i32 noundef 194) #25, !dbg !13701
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.279, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.268) #25, !dbg !13701
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.271, i32 0, i32 0), i32 noundef 194) #25, !dbg !13701
  unreachable, !dbg !13701

27:                                               ; preds = %24
  call void @llvm.dbg.value(metadata i32 %14, metadata !13672, metadata !DIExpression()) #24, !dbg !13695
  call void @llvm.dbg.value(metadata i32 %14, metadata !13686, metadata !DIExpression()) #24, !dbg !13702
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #24, !dbg !13704, !srcloc !13692
  call void @llvm.dbg.value(metadata i32 -16, metadata !13638, metadata !DIExpression()), !dbg !13641
  br label %32, !dbg !13705

28:                                               ; preds = %23
  %29 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 0, !dbg !13706
  %30 = insertvalue [1 x i32] poison, i32 %14, 0, !dbg !13707
  %31 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull @lock.268, [1 x i32] %30, %union.anon* noundef %29, [1 x i64] %1) #25, !dbg !13707
  call void @llvm.dbg.value(metadata i32 %31, metadata !13638, metadata !DIExpression()), !dbg !13641
  br label %32, !dbg !13708

32:                                               ; preds = %22, %27, %28
  %33 = phi i32 [ 0, %22 ], [ -16, %27 ], [ %31, %28 ], !dbg !13641
  call void @llvm.dbg.value(metadata i32 %33, metadata !13638, metadata !DIExpression()), !dbg !13641
  call void @llvm.dbg.label(metadata !13640), !dbg !13709
  ret i32 %33, !dbg !13710
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_sem_reset(%struct.k_sem* noundef %0) local_unnamed_addr #1 !dbg !13711 {
  call void @llvm.dbg.value(metadata %struct.k_sem* %0, metadata !13713, metadata !DIExpression()), !dbg !13716
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.268, metadata !13578, metadata !DIExpression()) #24, !dbg !13717
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !13719, !srcloc !13593
  call void @llvm.dbg.value(metadata i32 undef, metadata !13590, metadata !DIExpression()) #24, !dbg !13721
  call void @llvm.dbg.value(metadata i32 undef, metadata !13591, metadata !DIExpression()) #24, !dbg !13721
  call void @llvm.dbg.value(metadata i32 undef, metadata !13584, metadata !DIExpression()) #24, !dbg !13717
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock.268) #25, !dbg !13722
  br i1 %3, label %5, label %4, !dbg !13723

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.269, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.270, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.271, i32 0, i32 0), i32 noundef 148) #25, !dbg !13724
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.272, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.268) #25, !dbg !13724
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.271, i32 0, i32 0), i32 noundef 148) #25, !dbg !13724
  unreachable, !dbg !13724

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !13590, metadata !DIExpression()) #24, !dbg !13721
  call void @llvm.dbg.value(metadata i32 undef, metadata !13584, metadata !DIExpression()) #24, !dbg !13717
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock.268) #25, !dbg !13725
  call void @llvm.dbg.value(metadata i32 undef, metadata !13715, metadata !DIExpression()), !dbg !13716
  %6 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 0
  %7 = tail call %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %6) #25, !dbg !13726
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !13714, metadata !DIExpression()), !dbg !13716
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !13728
  br i1 %8, label %14, label %9, !dbg !13730

9:                                                ; preds = %5, %9
  %10 = phi %struct.k_thread* [ %12, %9 ], [ %7, %5 ]
  call void @llvm.dbg.value(metadata %struct.k_thread* %10, metadata !13607, metadata !DIExpression()), !dbg !13731
  call void @llvm.dbg.value(metadata i32 -11, metadata !13612, metadata !DIExpression()), !dbg !13731
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %10, i32 0, i32 6, i32 1, !dbg !13733
  store i32 -11, i32* %11, align 4, !dbg !13734
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %10) #25, !dbg !13735
  %12 = tail call %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %6) #25, !dbg !13726
  call void @llvm.dbg.value(metadata %struct.k_thread* %12, metadata !13714, metadata !DIExpression()), !dbg !13716
  %13 = icmp eq %struct.k_thread* %12, null, !dbg !13728
  br i1 %13, label %14, label %9, !dbg !13730, !llvm.loop !13736

14:                                               ; preds = %9, %5
  %15 = extractvalue { i32, i32 } %2, 0, !dbg !13719
  call void @llvm.dbg.value(metadata i32 %15, metadata !13590, metadata !DIExpression()) #24, !dbg !13721
  call void @llvm.dbg.value(metadata i32 %15, metadata !13584, metadata !DIExpression()) #24, !dbg !13717
  call void @llvm.dbg.value(metadata i32 %15, metadata !13715, metadata !DIExpression()), !dbg !13716
  %16 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %0, i32 0, i32 1, !dbg !13739
  store i32 0, i32* %16, align 4, !dbg !13740
  %17 = insertvalue [1 x i32] poison, i32 %15, 0, !dbg !13741
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @lock.268, [1 x i32] %17) #25, !dbg !13741
  ret void, !dbg !13742
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_sched_prio_cmp(%struct.k_thread* nocapture noundef readonly %0, %struct.k_thread* nocapture noundef readonly %1) local_unnamed_addr #13 !dbg !13743 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13747, metadata !DIExpression()), !dbg !13751
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !13748, metadata !DIExpression()), !dbg !13751
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !13752
  %4 = bitcast %union.anon.2* %3 to i8*, !dbg !13752
  %5 = load i8, i8* %4, align 2, !dbg !13752
  call void @llvm.dbg.value(metadata i8 %5, metadata !13749, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !13751
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !13753
  %7 = bitcast %union.anon.2* %6 to i8*, !dbg !13753
  %8 = load i8, i8* %7, align 2, !dbg !13753
  call void @llvm.dbg.value(metadata i8 %8, metadata !13750, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !13751
  %9 = icmp eq i8 %8, %5, !dbg !13754
  %10 = sext i8 %5 to i32, !dbg !13756
  %11 = sext i8 %8 to i32, !dbg !13756
  %12 = sub nsw i32 %11, %10, !dbg !13756
  %13 = select i1 %9, i32 0, i32 %12, !dbg !13756
  ret i32 %13, !dbg !13757
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reset_time_slice(%struct.k_thread* nocapture readnone %0) local_unnamed_addr #1 !dbg !13758 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !13762, metadata !DIExpression()), !dbg !13763
  %2 = tail call fastcc i32 @slice_time() #26, !dbg !13764
  %3 = icmp eq i32 %2, 0, !dbg !13766
  br i1 %3, label %8, label %4, !dbg !13767

4:                                                ; preds = %1
  %5 = tail call i32 @sys_clock_elapsed() #25, !dbg !13768
  %6 = add i32 %5, %2, !dbg !13770
  store i32 %6, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !13771
  %7 = tail call fastcc i32 @slice_time() #26, !dbg !13772
  tail call void @z_set_timeout_expiry(i32 noundef %7, i1 noundef zeroext false) #25, !dbg !13773
  br label %8, !dbg !13774

8:                                                ; preds = %4, %1
  ret void, !dbg !13775
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @slice_time() unnamed_addr #13 !dbg !13776 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !13780, metadata !DIExpression()), !dbg !13782
  %1 = load i32, i32* @slice_ticks, align 4, !dbg !13783
  call void @llvm.dbg.value(metadata i32 %1, metadata !13781, metadata !DIExpression()), !dbg !13782
  ret i32 %1, !dbg !13784
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_time_slice_set(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !13785 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13789, metadata !DIExpression()), !dbg !13798
  call void @llvm.dbg.value(metadata i32 %1, metadata !13790, metadata !DIExpression()), !dbg !13798
  call void @llvm.dbg.value(metadata i32 0, metadata !13791, metadata !DIExpression()), !dbg !13799
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13800, metadata !DIExpression()) #24, !dbg !13807
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !13809, !srcloc !13815
  call void @llvm.dbg.value(metadata i32 undef, metadata !13812, metadata !DIExpression()) #24, !dbg !13816
  call void @llvm.dbg.value(metadata i32 undef, metadata !13813, metadata !DIExpression()) #24, !dbg !13816
  call void @llvm.dbg.value(metadata i32 undef, metadata !13806, metadata !DIExpression()) #24, !dbg !13807
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !13817
  br i1 %4, label %6, label %5, !dbg !13820

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 148) #25, !dbg !13821
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.283, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !13821
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 148) #25, !dbg !13821
  unreachable, !dbg !13821

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !13812, metadata !DIExpression()) #24, !dbg !13816
  call void @llvm.dbg.value(metadata i32 undef, metadata !13806, metadata !DIExpression()) #24, !dbg !13807
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !13823
  call void @llvm.dbg.value(metadata i32 undef, metadata !13797, metadata !DIExpression()), !dbg !13799
  call void @llvm.dbg.value(metadata i32 undef, metadata !13791, metadata !DIExpression()), !dbg !13799
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !13824
  %7 = tail call fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) #26, !dbg !13827
  %8 = icmp sgt i32 %0, 0, !dbg !13828
  %9 = icmp sgt i32 %7, 2, !dbg !13830
  %10 = select i1 %9, i32 %7, i32 2, !dbg !13830
  %11 = select i1 %8, i32 %10, i32 %7, !dbg !13830
  store i32 %11, i32* @slice_ticks, align 4, !dbg !13831
  store i32 %1, i32* @slice_max_prio, align 4, !dbg !13832
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !13833
  call void @llvm.dbg.value(metadata i32 undef, metadata !13834, metadata !DIExpression()) #24, !dbg !13840
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13839, metadata !DIExpression()) #24, !dbg !13840
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !13842
  br i1 %12, label %14, label %13, !dbg !13845

13:                                               ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 194) #25, !dbg !13846
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.285, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !13846
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 194) #25, !dbg !13846
  unreachable, !dbg !13846

14:                                               ; preds = %6
  %15 = extractvalue { i32, i32 } %3, 0, !dbg !13809
  call void @llvm.dbg.value(metadata i32 %15, metadata !13812, metadata !DIExpression()) #24, !dbg !13816
  call void @llvm.dbg.value(metadata i32 %15, metadata !13806, metadata !DIExpression()) #24, !dbg !13807
  call void @llvm.dbg.value(metadata i32 %15, metadata !13797, metadata !DIExpression()), !dbg !13799
  call void @llvm.dbg.value(metadata i32 undef, metadata !13834, metadata !DIExpression()) #24, !dbg !13840
  call void @llvm.dbg.value(metadata i32 undef, metadata !13848, metadata !DIExpression()) #24, !dbg !13851
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %15) #24, !dbg !13853, !srcloc !13854
  call void @llvm.dbg.value(metadata i32 1, metadata !13791, metadata !DIExpression()), !dbg !13799
  call void @llvm.dbg.value(metadata i32 undef, metadata !13791, metadata !DIExpression()), !dbg !13799
  ret void, !dbg !13855
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) unnamed_addr #5 !dbg !13856 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13860, metadata !DIExpression()), !dbg !13861
  call void @llvm.dbg.value(metadata i32 %0, metadata !13862, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13877
  call void @llvm.dbg.value(metadata i32 1000, metadata !13865, metadata !DIExpression()), !dbg !13877
  call void @llvm.dbg.value(metadata i32 10000, metadata !13866, metadata !DIExpression()), !dbg !13877
  call void @llvm.dbg.value(metadata i8 1, metadata !13867, metadata !DIExpression()), !dbg !13877
  call void @llvm.dbg.value(metadata i1 true, metadata !13868, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13877
  call void @llvm.dbg.value(metadata i1 true, metadata !13869, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13877
  call void @llvm.dbg.value(metadata i8 0, metadata !13870, metadata !DIExpression()), !dbg !13877
  call void @llvm.dbg.value(metadata i1 true, metadata !13871, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13877
  call void @llvm.dbg.value(metadata i1 false, metadata !13872, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13877
  call void @llvm.dbg.value(metadata i64 0, metadata !13873, metadata !DIExpression()), !dbg !13877
  call void @llvm.dbg.value(metadata i64 0, metadata !13873, metadata !DIExpression()), !dbg !13877
  %2 = mul i32 %0, 10, !dbg !13879
  ret i32 %2, !dbg !13885
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_time_slice(i32 noundef %0) local_unnamed_addr #1 !dbg !13886 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13888, metadata !DIExpression()), !dbg !13890
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13800, metadata !DIExpression()) #24, !dbg !13891
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !13893, !srcloc !13815
  call void @llvm.dbg.value(metadata i32 undef, metadata !13812, metadata !DIExpression()) #24, !dbg !13895
  call void @llvm.dbg.value(metadata i32 undef, metadata !13813, metadata !DIExpression()) #24, !dbg !13895
  call void @llvm.dbg.value(metadata i32 undef, metadata !13806, metadata !DIExpression()) #24, !dbg !13891
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !13896
  br i1 %3, label %5, label %4, !dbg !13897

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 148) #25, !dbg !13898
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.283, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !13898
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 148) #25, !dbg !13898
  unreachable, !dbg !13898

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !13893
  call void @llvm.dbg.value(metadata i32 %6, metadata !13812, metadata !DIExpression()) #24, !dbg !13895
  call void @llvm.dbg.value(metadata i32 %6, metadata !13806, metadata !DIExpression()) #24, !dbg !13891
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !13899
  call void @llvm.dbg.value(metadata i32 %6, metadata !13889, metadata !DIExpression()), !dbg !13890
  %7 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !13900
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13902
  %9 = icmp eq %struct.k_thread* %7, %8, !dbg !13903
  br i1 %9, label %10, label %14, !dbg !13904

10:                                               ; preds = %5
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !13905
  call void @llvm.dbg.value(metadata i32 undef, metadata !13834, metadata !DIExpression()) #24, !dbg !13907
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13839, metadata !DIExpression()) #24, !dbg !13907
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !13909
  br i1 %11, label %13, label %12, !dbg !13910

12:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 194) #25, !dbg !13911
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.285, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !13911
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 194) #25, !dbg !13911
  unreachable, !dbg !13911

13:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i32 %6, metadata !13834, metadata !DIExpression()) #24, !dbg !13907
  call void @llvm.dbg.value(metadata i32 %6, metadata !13848, metadata !DIExpression()) #24, !dbg !13912
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #24, !dbg !13914, !srcloc !13854
  br label %33, !dbg !13915

14:                                               ; preds = %5
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !13916
  %15 = tail call fastcc i32 @slice_time() #26, !dbg !13917
  %16 = icmp eq i32 %15, 0, !dbg !13917
  br i1 %16, label %27, label %17, !dbg !13919

17:                                               ; preds = %14
  %18 = tail call fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %8) #26, !dbg !13920
  br i1 %18, label %19, label %27, !dbg !13921

19:                                               ; preds = %17
  %20 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !13922
  %21 = icmp sgt i32 %20, %0, !dbg !13925
  br i1 %21, label %25, label %22, !dbg !13926

22:                                               ; preds = %19
  %23 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !13927
  %24 = tail call fastcc i32 @slice_expired_locked([1 x i32] %23) #26, !dbg !13927
  call void @llvm.dbg.value(metadata i32 %24, metadata !13889, metadata !DIExpression()), !dbg !13890
  br label %28, !dbg !13929

25:                                               ; preds = %19
  %26 = sub nsw i32 %20, %0, !dbg !13930
  store i32 %26, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !13930
  br label %28

27:                                               ; preds = %17, %14
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !13932
  br label %28

28:                                               ; preds = %22, %25, %27
  %29 = phi i32 [ %24, %22 ], [ %6, %25 ], [ %6, %27 ], !dbg !13890
  call void @llvm.dbg.value(metadata i32 %29, metadata !13889, metadata !DIExpression()), !dbg !13890
  call void @llvm.dbg.value(metadata i32 undef, metadata !13834, metadata !DIExpression()) #24, !dbg !13934
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13839, metadata !DIExpression()) #24, !dbg !13934
  %30 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !13936
  br i1 %30, label %32, label %31, !dbg !13937

31:                                               ; preds = %28
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 194) #25, !dbg !13938
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.285, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !13938
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 194) #25, !dbg !13938
  unreachable, !dbg !13938

32:                                               ; preds = %28
  call void @llvm.dbg.value(metadata i32 %29, metadata !13834, metadata !DIExpression()) #24, !dbg !13934
  call void @llvm.dbg.value(metadata i32 %29, metadata !13848, metadata !DIExpression()) #24, !dbg !13939
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %29) #24, !dbg !13941, !srcloc !13854
  br label %33, !dbg !13942

33:                                               ; preds = %32, %13
  ret void, !dbg !13942
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %0) unnamed_addr #13 !dbg !13943 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13947, metadata !DIExpression()), !dbg !13949
  %2 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %0) #26, !dbg !13950
  %3 = icmp eq i32 %2, 0, !dbg !13950
  br i1 %3, label %16, label %4, !dbg !13951

4:                                                ; preds = %1
  %5 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #26, !dbg !13952
  br i1 %5, label %16, label %6, !dbg !13953

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !13954
  %8 = bitcast %union.anon.2* %7 to i8*, !dbg !13954
  %9 = load i8, i8* %8, align 2, !dbg !13954
  %10 = sext i8 %9 to i32, !dbg !13955
  %11 = load i32, i32* @slice_max_prio, align 4, !dbg !13956
  %12 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %10, i32 noundef %11) #26, !dbg !13957
  br i1 %12, label %16, label %13, !dbg !13958

13:                                               ; preds = %6
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef nonnull %0) #26, !dbg !13959
  %15 = xor i1 %14, true, !dbg !13960
  br label %16

16:                                               ; preds = %13, %6, %4, %1
  %17 = phi i1 [ false, %6 ], [ false, %4 ], [ false, %1 ], [ %15, %13 ], !dbg !13949
  call void @llvm.dbg.value(metadata i1 %17, metadata !13948, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13949
  ret i1 %17, !dbg !13961
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @slice_expired_locked([1 x i32] %0) unnamed_addr #1 !dbg !13962 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !13966, metadata !DIExpression()), !dbg !13968
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13969
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !13967, metadata !DIExpression()), !dbg !13968
  %3 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %2) #26, !dbg !13970
  br i1 %3, label %5, label %4, !dbg !13972

4:                                                ; preds = %1
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %2) #26, !dbg !13973
  br label %5, !dbg !13975

5:                                                ; preds = %4, %1
  %6 = extractvalue [1 x i32] %0, 0
  call void @llvm.dbg.value(metadata i32 %6, metadata !13966, metadata !DIExpression()), !dbg !13968
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !13976
  ret i32 %6, !dbg !13977
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #13 !dbg !13978 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13980, metadata !DIExpression()), !dbg !13982
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13983
  %3 = load i8, i8* %2, align 1, !dbg !13983
  call void @llvm.dbg.value(metadata i8 %3, metadata !13981, metadata !DIExpression()), !dbg !13982
  %4 = and i8 %3, 31, !dbg !13984
  %5 = icmp ne i8 %4, 0, !dbg !13985
  ret i1 %5, !dbg !13986
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13987 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13989, metadata !DIExpression()), !dbg !13990
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !13991
  br i1 %2, label %3, label %7, !dbg !13993

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13994, metadata !DIExpression()) #24, !dbg !13997
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14000
  %5 = load i8, i8* %4, align 1, !dbg !14001
  %6 = and i8 %5, 127, !dbg !14001
  store i8 %6, i8* %4, align 1, !dbg !14001
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14002, metadata !DIExpression()) #24, !dbg !14005
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !14009
  br label %7, !dbg !14010

7:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14011, metadata !DIExpression()) #24, !dbg !14014
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14016
  %9 = load i8, i8* %8, align 1, !dbg !14017
  %10 = or i8 %9, -128, !dbg !14017
  store i8 %10, i8* %8, align 1, !dbg !14017
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14018, metadata !DIExpression()) #24, !dbg !14021
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14025, metadata !DIExpression()) #24, !dbg !14033
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14031, metadata !DIExpression()) #24, !dbg !14033
  %11 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #25, !dbg !14035
  br i1 %11, label %12, label %13, !dbg !14038

12:                                               ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.287, i32 0, i32 0), i32 noundef 186) #25, !dbg !14039
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.287, i32 0, i32 0), i32 noundef 186) #25, !dbg !14039
  unreachable, !dbg !14039

13:                                               ; preds = %7
  %14 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.288(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !14041
  call void @llvm.dbg.value(metadata %struct._dnode* %14, metadata !14032, metadata !DIExpression()) #24, !dbg !14033
  %15 = icmp eq %struct._dnode* %14, null, !dbg !14043
  br i1 %15, label %26, label %16, !dbg !14041

16:                                               ; preds = %13, %23
  %17 = phi %struct._dnode* [ %24, %23 ], [ %14, %13 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %17, metadata !14032, metadata !DIExpression()) #24, !dbg !14033
  %18 = bitcast %struct._dnode* %17 to %struct.k_thread*, !dbg !14045
  call void @llvm.dbg.value(metadata %struct.k_thread* %18, metadata !14032, metadata !DIExpression()) #24, !dbg !14033
  %19 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %18) #25, !dbg !14046
  %20 = icmp sgt i32 %19, 0, !dbg !14049
  br i1 %20, label %21, label %23, !dbg !14050

21:                                               ; preds = %16
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14051
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %17, %struct._dnode* noundef %22) #25, !dbg !14053
  br label %28, !dbg !14054

23:                                               ; preds = %16
  %24 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %17) #25, !dbg !14043
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !14032, metadata !DIExpression()) #24, !dbg !14033
  %25 = icmp eq %struct._dnode* %24, null, !dbg !14043
  br i1 %25, label %26, label %16, !dbg !14041, !llvm.loop !14055

26:                                               ; preds = %23, %13
  %27 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14057
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %27) #25, !dbg !14058
  br label %28, !dbg !14059

28:                                               ; preds = %21, %26
  %29 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14060
  %30 = icmp eq %struct.k_thread* %29, %0, !dbg !14061
  %31 = zext i1 %30 to i32, !dbg !14061
  tail call fastcc void @update_cache(i32 noundef %31) #26, !dbg !14062
  ret void, !dbg !14063
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #13 !dbg !14064 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14066, metadata !DIExpression()), !dbg !14067
  %2 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %0, i32 noundef 128) #26, !dbg !14068
  ret i1 %2, !dbg !14069
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_dumb_remove(%struct._dnode* nocapture readnone %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !14070 {
  call void @llvm.dbg.value(metadata %struct._dnode* undef, metadata !14072, metadata !DIExpression()), !dbg !14074
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14073, metadata !DIExpression()), !dbg !14074
  %3 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #26, !dbg !14075
  br i1 %3, label %4, label %5, !dbg !14078

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.287, i32 0, i32 0), i32 noundef 1139) #25, !dbg !14079
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.287, i32 0, i32 0), i32 noundef 1139) #25, !dbg !14079
  unreachable, !dbg !14079

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 0, i32 0, !dbg !14081
  tail call fastcc void @sys_dlist_remove(%struct._dnode* noundef %6) #26, !dbg !14082
  ret void, !dbg !14083
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef readnone %0) unnamed_addr #5 !dbg !14084 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14086, metadata !DIExpression()), !dbg !14087
  %2 = icmp eq %struct.k_thread* %0, getelementptr inbounds ([1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 0), !dbg !14088
  ret i1 %2, !dbg !14089
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.288(%struct._dnode* noundef %0) unnamed_addr #13 !dbg !14090 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14094, metadata !DIExpression()), !dbg !14095
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty.291(%struct._dnode* noundef %0) #26, !dbg !14096
  br i1 %2, label %6, label %3, !dbg !14096

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14097
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !14097
  br label %6, !dbg !14096

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !14096
  ret %struct._dnode* %7, !dbg !14098
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #14 !dbg !14099 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14103, metadata !DIExpression()), !dbg !14107
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14104, metadata !DIExpression()), !dbg !14107
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14108
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !14108
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !14105, metadata !DIExpression()), !dbg !14107
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !14109
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !14110
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !14111
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !14112
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !14113
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !14114
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !14115
  ret void, !dbg !14116
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #13 !dbg !14117 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14121, metadata !DIExpression()), !dbg !14123
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14122, metadata !DIExpression()), !dbg !14123
  %3 = icmp eq %struct._dnode* %1, null, !dbg !14124
  br i1 %3, label %6, label %4, !dbg !14125

4:                                                ; preds = %2
  %5 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* noundef %0, %struct._dnode* noundef nonnull %1) #26, !dbg !14126
  br label %6, !dbg !14125

6:                                                ; preds = %2, %4
  %7 = phi %struct._dnode* [ %5, %4 ], [ null, %2 ], !dbg !14125
  ret %struct._dnode* %7, !dbg !14127
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #14 !dbg !14128 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14132, metadata !DIExpression()), !dbg !14135
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14133, metadata !DIExpression()), !dbg !14135
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14136
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !14136
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !14134, metadata !DIExpression()), !dbg !14135
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !14137
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !14138
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !14139
  store %struct._dnode* %4, %struct._dnode** %6, align 4, !dbg !14140
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !14141
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !14142
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !14143
  ret void, !dbg !14144
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @update_cache(i32 noundef %0) unnamed_addr #1 !dbg !14145 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14147, metadata !DIExpression()), !dbg !14149
  %2 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !14150
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14157, metadata !DIExpression()) #24, !dbg !14160
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14161
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !14158, metadata !DIExpression()) #24, !dbg !14160
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !14162
  br i1 %4, label %13, label %5, !dbg !14164

5:                                                ; preds = %1
  %6 = icmp eq %struct.k_thread* %2, null, !dbg !14165
  br i1 %6, label %10, label %7, !dbg !14166

7:                                                ; preds = %5
  %8 = tail call fastcc i32 @is_metairq(%struct.k_thread* noundef nonnull %2) #25, !dbg !14167
  %9 = icmp eq i32 %8, 0, !dbg !14167
  br i1 %9, label %10, label %13, !dbg !14168

10:                                               ; preds = %7, %5
  %11 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef nonnull %3) #25, !dbg !14169
  br i1 %11, label %12, label %13, !dbg !14172

12:                                               ; preds = %10
  store %struct.k_thread* null, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14173
  br label %13

13:                                               ; preds = %1, %7, %10, %12
  %14 = phi %struct.k_thread* [ %2, %12 ], [ %2, %7 ], [ %2, %1 ], [ %3, %10 ], !dbg !14160
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !14157, metadata !DIExpression()) #24, !dbg !14160
  %15 = icmp eq %struct.k_thread* %14, null, !dbg !14175
  %16 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 3), align 4, !dbg !14176
  %17 = select i1 %15, %struct.k_thread* %16, %struct.k_thread* %14, !dbg !14176
  call void @llvm.dbg.value(metadata %struct.k_thread* %17, metadata !14148, metadata !DIExpression()), !dbg !14149
  call void @llvm.dbg.value(metadata %struct.k_thread* %17, metadata !14177, metadata !DIExpression()) #24, !dbg !14183
  call void @llvm.dbg.value(metadata i32 %0, metadata !14182, metadata !DIExpression()) #24, !dbg !14183
  %18 = icmp eq i32 %0, 0, !dbg !14186
  %19 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14188
  br i1 %18, label %20, label %33, !dbg !14189

20:                                               ; preds = %13
  %21 = icmp eq %struct.k_thread* %19, null, !dbg !14190
  br i1 %21, label %22, label %23, !dbg !14193

22:                                               ; preds = %20
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.19.289, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.287, i32 0, i32 0), i32 noundef 137) #25, !dbg !14194
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.290, i32 0, i32 0)) #25, !dbg !14194
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.287, i32 0, i32 0), i32 noundef 137) #25, !dbg !14194
  unreachable, !dbg !14194

23:                                               ; preds = %20
  %24 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef nonnull %19) #25, !dbg !14196
  br i1 %24, label %33, label %25, !dbg !14198

25:                                               ; preds = %23
  %26 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %17) #25, !dbg !14199
  br i1 %26, label %33, label %27, !dbg !14201

27:                                               ; preds = %25
  %28 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef nonnull %19) #25, !dbg !14202
  %29 = icmp eq i32 %28, 0, !dbg !14202
  br i1 %29, label %30, label %33, !dbg !14204

30:                                               ; preds = %27
  %31 = tail call fastcc i32 @is_metairq(%struct.k_thread* noundef %17) #25, !dbg !14205
  %32 = icmp eq i32 %31, 0, !dbg !14205
  br i1 %32, label %37, label %33, !dbg !14206

33:                                               ; preds = %13, %27, %25, %23, %30
  %34 = icmp eq %struct.k_thread* %17, %19, !dbg !14207
  br i1 %34, label %36, label %35, !dbg !14210

35:                                               ; preds = %33
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !14211
  br label %36, !dbg !14213

36:                                               ; preds = %35, %33
  tail call fastcc void @update_metairq_preempt(%struct.k_thread* noundef %17) #26, !dbg !14214
  br label %37, !dbg !14215

37:                                               ; preds = %30, %36
  %38 = phi %struct.k_thread* [ %17, %36 ], [ %19, %30 ], !dbg !14188
  store %struct.k_thread* %38, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !14188
  ret void, !dbg !14216
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef readonly %0) local_unnamed_addr #13 !dbg !14217 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14221, metadata !DIExpression()), !dbg !14224
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14222, metadata !DIExpression()), !dbg !14224
  %2 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.288(%struct._dnode* noundef %0) #26, !dbg !14225
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !14223, metadata !DIExpression()), !dbg !14224
  %3 = bitcast %struct._dnode* %2 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !14222, metadata !DIExpression()), !dbg !14224
  ret %struct.k_thread* %3, !dbg !14226
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @is_metairq(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #13 !dbg !14227 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14229, metadata !DIExpression()), !dbg !14230
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !14231
  %3 = bitcast %union.anon.2* %2 to i8*, !dbg !14231
  %4 = load i8, i8* %3, align 2, !dbg !14231
  %5 = icmp slt i8 %4, -15, !dbg !14232
  %6 = zext i1 %5 to i32, !dbg !14232
  ret i32 %6, !dbg !14233
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #13 !dbg !14234 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14236, metadata !DIExpression()), !dbg !14237
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !14238
  %3 = tail call fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* noundef nonnull %2) #26, !dbg !14239
  %4 = xor i1 %3, true, !dbg !14240
  ret i1 %4, !dbg !14241
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @is_preempt(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #13 !dbg !14242 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14244, metadata !DIExpression()), !dbg !14245
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, i32 0, !dbg !14246
  %3 = load i16, i16* %2, align 2, !dbg !14246
  %4 = icmp ult i16 %3, 128, !dbg !14247
  %5 = zext i1 %4 to i32, !dbg !14247
  ret i32 %5, !dbg !14248
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @update_metairq_preempt(%struct.k_thread* noundef %0) unnamed_addr #14 !dbg !14249 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14251, metadata !DIExpression()), !dbg !14252
  %2 = tail call fastcc i32 @is_metairq(%struct.k_thread* noundef %0) #26, !dbg !14253
  %3 = icmp eq i32 %2, 0, !dbg !14253
  br i1 %3, label %11, label %4, !dbg !14255

4:                                                ; preds = %1
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14256
  %6 = tail call fastcc i32 @is_metairq(%struct.k_thread* noundef %5) #26, !dbg !14257
  %7 = icmp eq i32 %6, 0, !dbg !14257
  br i1 %7, label %8, label %15, !dbg !14258

8:                                                ; preds = %4
  %9 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %5) #26, !dbg !14259
  %10 = icmp eq i32 %9, 0, !dbg !14259
  br i1 %10, label %13, label %15, !dbg !14260

11:                                               ; preds = %1
  %12 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #26, !dbg !14261
  br i1 %12, label %15, label %13, !dbg !14263

13:                                               ; preds = %11, %8
  %14 = phi %struct.k_thread* [ %5, %8 ], [ null, %11 ]
  store %struct.k_thread* %14, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14264
  br label %15, !dbg !14265

15:                                               ; preds = %13, %4, %8, %11
  ret void, !dbg !14265
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #13 !dbg !14266 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14272, metadata !DIExpression()), !dbg !14273
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !14274
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* noundef %2) #26, !dbg !14275
  %4 = xor i1 %3, true, !dbg !14276
  ret i1 %4, !dbg !14277
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #13 !dbg !14278 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14284, metadata !DIExpression()), !dbg !14285
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14286
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14286
  %4 = icmp ne %struct._dnode* %3, null, !dbg !14287
  ret i1 %4, !dbg !14288
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #13 !dbg !14289 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14291, metadata !DIExpression()), !dbg !14293
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14292, metadata !DIExpression()), !dbg !14293
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14294
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !14294
  %5 = icmp eq %struct._dnode* %4, %1, !dbg !14295
  br i1 %5, label %9, label %6, !dbg !14296

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !14297
  %8 = load %struct._dnode*, %struct._dnode** %7, align 4, !dbg !14297
  br label %9, !dbg !14296

9:                                                ; preds = %2, %6
  %10 = phi %struct._dnode* [ %8, %6 ], [ null, %2 ], !dbg !14296
  ret %struct._dnode* %10, !dbg !14298
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.291(%struct._dnode* noundef readonly %0) unnamed_addr #13 !dbg !14299 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14303, metadata !DIExpression()), !dbg !14304
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14305
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14305
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !14306
  ret i1 %4, !dbg !14307
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove(%struct._dnode* nocapture noundef %0) unnamed_addr #14 !dbg !14308 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14312, metadata !DIExpression()), !dbg !14315
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14316
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14316
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !14313, metadata !DIExpression()), !dbg !14315
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14317
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !14317
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !14314, metadata !DIExpression()), !dbg !14315
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !14318
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !14319
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !14320
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !14321
  tail call fastcc void @sys_dnode_init.292(%struct._dnode* noundef %0) #26, !dbg !14322
  ret void, !dbg !14323
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.292(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #12 !dbg !14324 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14326, metadata !DIExpression()), !dbg !14327
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14328
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !14329
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14330
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !14331
  ret void, !dbg !14332
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #13 !dbg !14333 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14337, metadata !DIExpression()), !dbg !14339
  call void @llvm.dbg.value(metadata i32 %1, metadata !14338, metadata !DIExpression()), !dbg !14339
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14340
  %4 = load i8, i8* %3, align 1, !dbg !14340
  %5 = zext i8 %4 to i32, !dbg !14341
  %6 = and i32 %5, %1, !dbg !14342
  %7 = icmp ne i32 %6, 0, !dbg !14343
  ret i1 %7, !dbg !14344
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !14345 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14349, metadata !DIExpression()), !dbg !14351
  call void @llvm.dbg.value(metadata i32 %1, metadata !14350, metadata !DIExpression()), !dbg !14351
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) #26, !dbg !14352
  ret i1 %3, !dbg !14353
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !14354 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14356, metadata !DIExpression()), !dbg !14358
  call void @llvm.dbg.value(metadata i32 %1, metadata !14357, metadata !DIExpression()), !dbg !14358
  %3 = icmp slt i32 %0, %1, !dbg !14359
  ret i1 %3, !dbg !14360
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_ready_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14361 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14363, metadata !DIExpression()), !dbg !14367
  call void @llvm.dbg.value(metadata i32 0, metadata !14364, metadata !DIExpression()), !dbg !14368
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13800, metadata !DIExpression()) #24, !dbg !14369
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14371, !srcloc !13815
  call void @llvm.dbg.value(metadata i32 undef, metadata !13812, metadata !DIExpression()) #24, !dbg !14373
  call void @llvm.dbg.value(metadata i32 undef, metadata !13813, metadata !DIExpression()) #24, !dbg !14373
  call void @llvm.dbg.value(metadata i32 undef, metadata !13806, metadata !DIExpression()) #24, !dbg !14369
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14374
  br i1 %3, label %5, label %4, !dbg !14375

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 148) #25, !dbg !14376
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.283, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14376
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 148) #25, !dbg !14376
  unreachable, !dbg !14376

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !13812, metadata !DIExpression()) #24, !dbg !14373
  call void @llvm.dbg.value(metadata i32 undef, metadata !13806, metadata !DIExpression()) #24, !dbg !14369
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14377
  call void @llvm.dbg.value(metadata i32 undef, metadata !14366, metadata !DIExpression()), !dbg !14368
  call void @llvm.dbg.value(metadata i32 undef, metadata !14364, metadata !DIExpression()), !dbg !14368
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #26, !dbg !14378
  call void @llvm.dbg.value(metadata i32 undef, metadata !13834, metadata !DIExpression()) #24, !dbg !14383
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13839, metadata !DIExpression()) #24, !dbg !14383
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14385
  br i1 %6, label %8, label %7, !dbg !14386

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 194) #25, !dbg !14387
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.285, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14387
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 194) #25, !dbg !14387
  unreachable, !dbg !14387

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !14371
  call void @llvm.dbg.value(metadata i32 %9, metadata !13812, metadata !DIExpression()) #24, !dbg !14373
  call void @llvm.dbg.value(metadata i32 %9, metadata !13806, metadata !DIExpression()) #24, !dbg !14369
  call void @llvm.dbg.value(metadata i32 %9, metadata !14366, metadata !DIExpression()), !dbg !14368
  call void @llvm.dbg.value(metadata i32 undef, metadata !13834, metadata !DIExpression()) #24, !dbg !14383
  call void @llvm.dbg.value(metadata i32 undef, metadata !13848, metadata !DIExpression()) #24, !dbg !14388
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #24, !dbg !14390, !srcloc !13854
  call void @llvm.dbg.value(metadata i32 1, metadata !14364, metadata !DIExpression()), !dbg !14368
  call void @llvm.dbg.value(metadata i32 undef, metadata !14364, metadata !DIExpression()), !dbg !14368
  ret void, !dbg !14391
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14392 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14394, metadata !DIExpression()), !dbg !14395
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !14396
  br i1 %2, label %27, label %3, !dbg !14398

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #26, !dbg !14399
  br i1 %4, label %5, label %27, !dbg !14400

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14011, metadata !DIExpression()) #24, !dbg !14401
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14404
  %7 = load i8, i8* %6, align 1, !dbg !14405
  %8 = or i8 %7, -128, !dbg !14405
  store i8 %8, i8* %6, align 1, !dbg !14405
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14018, metadata !DIExpression()) #24, !dbg !14406
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14025, metadata !DIExpression()) #24, !dbg !14408
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14031, metadata !DIExpression()) #24, !dbg !14408
  %9 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #25, !dbg !14410
  br i1 %9, label %10, label %11, !dbg !14411

10:                                               ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.287, i32 0, i32 0), i32 noundef 186) #25, !dbg !14412
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.287, i32 0, i32 0), i32 noundef 186) #25, !dbg !14412
  unreachable, !dbg !14412

11:                                               ; preds = %5
  %12 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.288(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !14413
  call void @llvm.dbg.value(metadata %struct._dnode* %12, metadata !14032, metadata !DIExpression()) #24, !dbg !14408
  %13 = icmp eq %struct._dnode* %12, null, !dbg !14414
  br i1 %13, label %24, label %14, !dbg !14413

14:                                               ; preds = %11, %21
  %15 = phi %struct._dnode* [ %22, %21 ], [ %12, %11 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %15, metadata !14032, metadata !DIExpression()) #24, !dbg !14408
  %16 = bitcast %struct._dnode* %15 to %struct.k_thread*, !dbg !14415
  call void @llvm.dbg.value(metadata %struct.k_thread* %16, metadata !14032, metadata !DIExpression()) #24, !dbg !14408
  %17 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %16) #25, !dbg !14416
  %18 = icmp sgt i32 %17, 0, !dbg !14417
  br i1 %18, label %19, label %21, !dbg !14418

19:                                               ; preds = %14
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14419
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %15, %struct._dnode* noundef %20) #25, !dbg !14420
  br label %26, !dbg !14421

21:                                               ; preds = %14
  %22 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %15) #25, !dbg !14414
  call void @llvm.dbg.value(metadata %struct._dnode* %22, metadata !14032, metadata !DIExpression()) #24, !dbg !14408
  %23 = icmp eq %struct._dnode* %22, null, !dbg !14414
  br i1 %23, label %24, label %14, !dbg !14413, !llvm.loop !14422

24:                                               ; preds = %21, %11
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14424
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %25) #25, !dbg !14425
  br label %26, !dbg !14426

26:                                               ; preds = %19, %24
  tail call fastcc void @update_cache(i32 noundef 0) #26, !dbg !14427
  br label %27, !dbg !14428

27:                                               ; preds = %26, %3, %1
  ret void, !dbg !14429
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #13 !dbg !14430 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14432, metadata !DIExpression()), !dbg !14433
  %2 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #26, !dbg !14434
  br i1 %2, label %6, label %3, !dbg !14435

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %0) #26, !dbg !14436
  %5 = xor i1 %4, true, !dbg !14435
  br label %6, !dbg !14435

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ]
  ret i1 %7, !dbg !14437
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14438 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14440, metadata !DIExpression()), !dbg !14444
  call void @llvm.dbg.value(metadata i32 0, metadata !14441, metadata !DIExpression()), !dbg !14445
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13800, metadata !DIExpression()) #24, !dbg !14446
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14448, !srcloc !13815
  call void @llvm.dbg.value(metadata i32 undef, metadata !13812, metadata !DIExpression()) #24, !dbg !14450
  call void @llvm.dbg.value(metadata i32 undef, metadata !13813, metadata !DIExpression()) #24, !dbg !14450
  call void @llvm.dbg.value(metadata i32 undef, metadata !13806, metadata !DIExpression()) #24, !dbg !14446
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14451
  br i1 %3, label %5, label %4, !dbg !14452

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 148) #25, !dbg !14453
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.283, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14453
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 148) #25, !dbg !14453
  unreachable, !dbg !14453

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !13812, metadata !DIExpression()) #24, !dbg !14450
  call void @llvm.dbg.value(metadata i32 undef, metadata !13806, metadata !DIExpression()) #24, !dbg !14446
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14454
  call void @llvm.dbg.value(metadata i32 undef, metadata !14443, metadata !DIExpression()), !dbg !14445
  call void @llvm.dbg.value(metadata i32 undef, metadata !14441, metadata !DIExpression()), !dbg !14445
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) #26, !dbg !14455
  call void @llvm.dbg.value(metadata i32 undef, metadata !13834, metadata !DIExpression()) #24, !dbg !14458
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13839, metadata !DIExpression()) #24, !dbg !14458
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14460
  br i1 %6, label %8, label %7, !dbg !14461

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 194) #25, !dbg !14462
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.285, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14462
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 194) #25, !dbg !14462
  unreachable, !dbg !14462

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !14448
  call void @llvm.dbg.value(metadata i32 %9, metadata !13812, metadata !DIExpression()) #24, !dbg !14450
  call void @llvm.dbg.value(metadata i32 %9, metadata !13806, metadata !DIExpression()) #24, !dbg !14446
  call void @llvm.dbg.value(metadata i32 %9, metadata !14443, metadata !DIExpression()), !dbg !14445
  call void @llvm.dbg.value(metadata i32 undef, metadata !13834, metadata !DIExpression()) #24, !dbg !14458
  call void @llvm.dbg.value(metadata i32 undef, metadata !13848, metadata !DIExpression()) #24, !dbg !14463
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #24, !dbg !14465, !srcloc !13854
  call void @llvm.dbg.value(metadata i32 1, metadata !14441, metadata !DIExpression()), !dbg !14445
  call void @llvm.dbg.value(metadata i32 undef, metadata !14441, metadata !DIExpression()), !dbg !14445
  ret void, !dbg !14466
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14467 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14469, metadata !DIExpression()), !dbg !14471
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13800, metadata !DIExpression()) #24, !dbg !14472
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14474, !srcloc !13815
  call void @llvm.dbg.value(metadata i32 undef, metadata !13812, metadata !DIExpression()) #24, !dbg !14476
  call void @llvm.dbg.value(metadata i32 undef, metadata !13813, metadata !DIExpression()) #24, !dbg !14476
  call void @llvm.dbg.value(metadata i32 undef, metadata !13806, metadata !DIExpression()) #24, !dbg !14472
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14477
  br i1 %3, label %5, label %4, !dbg !14478

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 148) #25, !dbg !14479
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.283, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14479
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 148) #25, !dbg !14479
  unreachable, !dbg !14479

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !14474
  call void @llvm.dbg.value(metadata i32 %6, metadata !13812, metadata !DIExpression()) #24, !dbg !14476
  call void @llvm.dbg.value(metadata i32 %6, metadata !13806, metadata !DIExpression()) #24, !dbg !14472
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14480
  call void @llvm.dbg.value(metadata i32 %6, metadata !14470, metadata !DIExpression()), !dbg !14471
  %7 = tail call fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* noundef %0) #26, !dbg !14481
  br i1 %7, label %8, label %12, !dbg !14483

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !13834, metadata !DIExpression()) #24, !dbg !14484
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13839, metadata !DIExpression()) #24, !dbg !14484
  %9 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14487
  br i1 %9, label %11, label %10, !dbg !14488

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 194) #25, !dbg !14489
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.285, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14489
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 194) #25, !dbg !14489
  unreachable, !dbg !14489

11:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 %6, metadata !13834, metadata !DIExpression()) #24, !dbg !14484
  call void @llvm.dbg.value(metadata i32 %6, metadata !13848, metadata !DIExpression()) #24, !dbg !14490
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #24, !dbg !14492, !srcloc !13854
  br label %14, !dbg !14493

12:                                               ; preds = %5
  tail call fastcc void @z_mark_thread_as_started.297(%struct.k_thread* noundef %0) #26, !dbg !14494
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #26, !dbg !14495
  %13 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !14496
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @sched_spinlock, [1 x i32] %13) #26, !dbg !14496
  br label %14, !dbg !14497

14:                                               ; preds = %12, %11
  ret void, !dbg !14497
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #13 !dbg !14498 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14500, metadata !DIExpression()), !dbg !14501
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14502
  %3 = load i8, i8* %2, align 1, !dbg !14502
  %4 = and i8 %3, 4, !dbg !14503
  %5 = icmp eq i8 %4, 0, !dbg !14504
  ret i1 %5, !dbg !14505
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started.297(%struct.k_thread* nocapture noundef %0) unnamed_addr #14 !dbg !14506 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14508, metadata !DIExpression()), !dbg !14509
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14510
  %3 = load i8, i8* %2, align 1, !dbg !14511
  %4 = and i8 %3, -5, !dbg !14511
  store i8 %4, i8* %2, align 1, !dbg !14511
  ret void, !dbg !14512
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule(%struct.k_spinlock* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !14513 {
  %3 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %3, metadata !14516, metadata !DIExpression()), !dbg !14517
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14515, metadata !DIExpression()), !dbg !14517
  %4 = tail call fastcc zeroext i1 @resched(i32 noundef %3) #26, !dbg !14518
  br i1 %4, label %5, label %12, !dbg !14520

5:                                                ; preds = %2
  %6 = tail call fastcc zeroext i1 @need_swap() #26, !dbg !14521
  br i1 %6, label %7, label %12, !dbg !14522

7:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !14523, metadata !DIExpression()) #24, !dbg !14529
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14528, metadata !DIExpression()) #24, !dbg !14529
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14532, metadata !DIExpression()) #24, !dbg !14537
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #25, !dbg !14539
  br i1 %8, label %10, label %9, !dbg !14542

9:                                                ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 225) #25, !dbg !14543
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.285, i32 0, i32 0), %struct.k_spinlock* noundef %0) #25, !dbg !14543
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 225) #25, !dbg !14543
  unreachable, !dbg !14543

10:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i32 %3, metadata !14523, metadata !DIExpression()) #24, !dbg !14529
  %11 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #25, !dbg !14545
  br label %16, !dbg !14546

12:                                               ; preds = %5, %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !13834, metadata !DIExpression()) #24, !dbg !14547
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !13839, metadata !DIExpression()) #24, !dbg !14547
  %13 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #25, !dbg !14550
  br i1 %13, label %15, label %14, !dbg !14551

14:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 194) #25, !dbg !14552
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.285, i32 0, i32 0), %struct.k_spinlock* noundef %0) #25, !dbg !14552
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 194) #25, !dbg !14552
  unreachable, !dbg !14552

15:                                               ; preds = %12
  call void @llvm.dbg.value(metadata i32 %3, metadata !13834, metadata !DIExpression()) #24, !dbg !14547
  call void @llvm.dbg.value(metadata i32 %3, metadata !13848, metadata !DIExpression()) #24, !dbg !14553
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #24, !dbg !14555, !srcloc !13854
  br label %16

16:                                               ; preds = %15, %10
  ret void, !dbg !14556
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @resched(i32 noundef %0) unnamed_addr #1 !dbg !14557 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14561, metadata !DIExpression()), !dbg !14562
  call void @llvm.dbg.value(metadata i32 %0, metadata !14563, metadata !DIExpression()), !dbg !14568
  %2 = icmp eq i32 %0, 0, !dbg !14570
  br i1 %2, label %3, label %6, !dbg !14571

3:                                                ; preds = %1
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #24, !dbg !14572, !srcloc !14579
  call void @llvm.dbg.value(metadata i32 %4, metadata !14575, metadata !DIExpression()) #24, !dbg !14580
  %5 = icmp eq i32 %4, 0, !dbg !14581
  br label %6

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ], !dbg !14562
  ret i1 %7, !dbg !14582
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @need_swap() unnamed_addr #13 !dbg !14583 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !14586
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14585, metadata !DIExpression()), !dbg !14587
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14588
  %3 = icmp ne %struct.k_thread* %1, %2, !dbg !14589
  ret i1 %3, !dbg !14590
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_swap_irqlock(i32 noundef %0) unnamed_addr #1 !dbg !14591 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14593, metadata !DIExpression()), !dbg !14595
  %2 = tail call i32 @arch_swap(i32 noundef %0) #25, !dbg !14596
  call void @llvm.dbg.value(metadata i32 %2, metadata !14594, metadata !DIExpression()), !dbg !14595
  ret i32 %2, !dbg !14597
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14598 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14600, metadata !DIExpression()), !dbg !14604
  %2 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #26, !dbg !14605
  call void @llvm.dbg.value(metadata i32 0, metadata !14601, metadata !DIExpression()), !dbg !14606
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13800, metadata !DIExpression()) #24, !dbg !14607
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14609, !srcloc !13815
  call void @llvm.dbg.value(metadata i32 undef, metadata !13812, metadata !DIExpression()) #24, !dbg !14611
  call void @llvm.dbg.value(metadata i32 undef, metadata !13813, metadata !DIExpression()) #24, !dbg !14611
  call void @llvm.dbg.value(metadata i32 undef, metadata !13806, metadata !DIExpression()) #24, !dbg !14607
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14612
  br i1 %4, label %6, label %5, !dbg !14613

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 148) #25, !dbg !14614
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.283, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14614
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 148) #25, !dbg !14614
  unreachable, !dbg !14614

6:                                                ; preds = %1
  %7 = extractvalue { i32, i32 } %3, 0, !dbg !14609
  call void @llvm.dbg.value(metadata i32 %7, metadata !13812, metadata !DIExpression()) #24, !dbg !14611
  call void @llvm.dbg.value(metadata i32 %7, metadata !13806, metadata !DIExpression()) #24, !dbg !14607
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14615
  call void @llvm.dbg.value(metadata i32 %7, metadata !14603, metadata !DIExpression()), !dbg !14606
  call void @llvm.dbg.value(metadata i32 undef, metadata !14601, metadata !DIExpression()), !dbg !14606
  %8 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !14616
  br i1 %8, label %9, label %13, !dbg !14620

9:                                                ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13994, metadata !DIExpression()) #24, !dbg !14621
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14624
  %11 = load i8, i8* %10, align 1, !dbg !14625
  %12 = and i8 %11, 127, !dbg !14625
  store i8 %12, i8* %10, align 1, !dbg !14625
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14002, metadata !DIExpression()) #24, !dbg !14626
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !14628
  br label %13, !dbg !14629

13:                                               ; preds = %9, %6
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %0) #26, !dbg !14630
  %14 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14631
  %15 = icmp eq %struct.k_thread* %14, %0, !dbg !14632
  %16 = zext i1 %15 to i32, !dbg !14632
  tail call fastcc void @update_cache(i32 noundef %16) #26, !dbg !14633
  call void @llvm.dbg.value(metadata i32 undef, metadata !13834, metadata !DIExpression()) #24, !dbg !14634
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13839, metadata !DIExpression()) #24, !dbg !14634
  %17 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14636
  br i1 %17, label %19, label %18, !dbg !14637

18:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 194) #25, !dbg !14638
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.285, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14638
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 194) #25, !dbg !14638
  unreachable, !dbg !14638

19:                                               ; preds = %13
  call void @llvm.dbg.value(metadata i32 %7, metadata !13834, metadata !DIExpression()) #24, !dbg !14634
  call void @llvm.dbg.value(metadata i32 %7, metadata !13848, metadata !DIExpression()) #24, !dbg !14639
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %7) #24, !dbg !14641, !srcloc !13854
  call void @llvm.dbg.value(metadata i32 1, metadata !14601, metadata !DIExpression()), !dbg !14606
  call void @llvm.dbg.value(metadata i32 undef, metadata !14601, metadata !DIExpression()), !dbg !14606
  %20 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14642
  %21 = icmp eq %struct.k_thread* %20, %0, !dbg !14644
  br i1 %21, label %22, label %23, !dbg !14645

22:                                               ; preds = %19
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !14646
  br label %23, !dbg !14648

23:                                               ; preds = %22, %19
  ret void, !dbg !14649
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14650 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14652, metadata !DIExpression()), !dbg !14653
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !14654
  %3 = tail call i32 @z_abort_timeout(%struct._timeout* noundef nonnull %2) #25, !dbg !14655
  ret i32 %3, !dbg !14656
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #14 !dbg !14657 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14659, metadata !DIExpression()), !dbg !14660
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14661
  %3 = load i8, i8* %2, align 1, !dbg !14662
  %4 = or i8 %3, 16, !dbg !14662
  store i8 %4, i8* %2, align 1, !dbg !14662
  ret void, !dbg !14663
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_reschedule_unlocked() unnamed_addr #1 !dbg !14664 {
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14665, !srcloc !13815
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !14665
  call void @llvm.dbg.value(metadata i32 %2, metadata !13812, metadata !DIExpression()) #24, !dbg !14667
  call void @llvm.dbg.value(metadata i32 undef, metadata !13813, metadata !DIExpression()) #24, !dbg !14667
  tail call void @z_reschedule_irqlock(i32 noundef %2) #26, !dbg !14668
  ret void, !dbg !14669
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule_irqlock(i32 noundef %0) local_unnamed_addr #1 !dbg !14670 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14672, metadata !DIExpression()), !dbg !14673
  %2 = tail call fastcc zeroext i1 @resched(i32 noundef %0) #26, !dbg !14674
  br i1 %2, label %3, label %5, !dbg !14676

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #26, !dbg !14677
  br label %6, !dbg !14679

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %0, metadata !13848, metadata !DIExpression()) #24, !dbg !14680
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %0) #24, !dbg !14683, !srcloc !13854
  br label %6

6:                                                ; preds = %5, %3
  ret void, !dbg !14684
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_resume(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14685 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14687, metadata !DIExpression()), !dbg !14689
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13800, metadata !DIExpression()) #24, !dbg !14690
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14692, !srcloc !13815
  call void @llvm.dbg.value(metadata i32 undef, metadata !13812, metadata !DIExpression()) #24, !dbg !14694
  call void @llvm.dbg.value(metadata i32 undef, metadata !13813, metadata !DIExpression()) #24, !dbg !14694
  call void @llvm.dbg.value(metadata i32 undef, metadata !13806, metadata !DIExpression()) #24, !dbg !14690
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14695
  br i1 %3, label %5, label %4, !dbg !14696

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 148) #25, !dbg !14697
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.283, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14697
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 148) #25, !dbg !14697
  unreachable, !dbg !14697

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !14692
  call void @llvm.dbg.value(metadata i32 %6, metadata !13812, metadata !DIExpression()) #24, !dbg !14694
  call void @llvm.dbg.value(metadata i32 %6, metadata !13806, metadata !DIExpression()) #24, !dbg !14690
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14698
  call void @llvm.dbg.value(metadata i32 %6, metadata !14688, metadata !DIExpression()), !dbg !14689
  %7 = tail call fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* noundef %0) #26, !dbg !14699
  br i1 %7, label %12, label %8, !dbg !14701

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !13834, metadata !DIExpression()) #24, !dbg !14702
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13839, metadata !DIExpression()) #24, !dbg !14702
  %9 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14705
  br i1 %9, label %11, label %10, !dbg !14706

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 194) #25, !dbg !14707
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.285, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14707
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 194) #25, !dbg !14707
  unreachable, !dbg !14707

11:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 %6, metadata !13834, metadata !DIExpression()) #24, !dbg !14702
  call void @llvm.dbg.value(metadata i32 %6, metadata !13848, metadata !DIExpression()) #24, !dbg !14708
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #24, !dbg !14710, !srcloc !13854
  br label %14, !dbg !14711

12:                                               ; preds = %5
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #26, !dbg !14712
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #26, !dbg !14713
  %13 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !14714
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @sched_spinlock, [1 x i32] %13) #26, !dbg !14714
  br label %14, !dbg !14715

14:                                               ; preds = %12, %11
  ret void, !dbg !14715
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #13 !dbg !14716 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14718, metadata !DIExpression()), !dbg !14719
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14720
  %3 = load i8, i8* %2, align 1, !dbg !14720
  %4 = and i8 %3, 16, !dbg !14721
  %5 = icmp ne i8 %4, 0, !dbg !14722
  ret i1 %5, !dbg !14723
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #14 !dbg !14724 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14726, metadata !DIExpression()), !dbg !14727
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14728
  %3 = load i8, i8* %2, align 1, !dbg !14729
  %4 = and i8 %3, -17, !dbg !14729
  store i8 %4, i8* %2, align 1, !dbg !14729
  ret void, !dbg !14730
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pend_thread(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !14731 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14741, metadata !DIExpression()), !dbg !14745
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14739, metadata !DIExpression()), !dbg !14745
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !14740, metadata !DIExpression()), !dbg !14745
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14746
  %5 = icmp eq %struct.k_thread* %4, %0, !dbg !14746
  br i1 %5, label %9, label %6, !dbg !14746

6:                                                ; preds = %3
  %7 = tail call fastcc zeroext i1 @is_thread_dummy(%struct.k_thread* noundef %0) #26, !dbg !14746
  br i1 %7, label %9, label %8, !dbg !14749

8:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.1.300, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.287, i32 0, i32 0), i32 noundef 773) #25, !dbg !14750
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.287, i32 0, i32 0), i32 noundef 773) #25, !dbg !14750
  unreachable, !dbg !14750

9:                                                ; preds = %3, %6
  call void @llvm.dbg.value(metadata i32 0, metadata !14742, metadata !DIExpression()), !dbg !14752
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13800, metadata !DIExpression()) #24, !dbg !14753
  %10 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14755, !srcloc !13815
  call void @llvm.dbg.value(metadata i32 undef, metadata !13812, metadata !DIExpression()) #24, !dbg !14757
  call void @llvm.dbg.value(metadata i32 undef, metadata !13813, metadata !DIExpression()) #24, !dbg !14757
  call void @llvm.dbg.value(metadata i32 undef, metadata !13806, metadata !DIExpression()) #24, !dbg !14753
  %11 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14758
  br i1 %11, label %13, label %12, !dbg !14759

12:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 148) #25, !dbg !14760
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.283, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14760
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 148) #25, !dbg !14760
  unreachable, !dbg !14760

13:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !13812, metadata !DIExpression()) #24, !dbg !14757
  call void @llvm.dbg.value(metadata i32 undef, metadata !13806, metadata !DIExpression()) #24, !dbg !14753
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14761
  call void @llvm.dbg.value(metadata i32 undef, metadata !14744, metadata !DIExpression()), !dbg !14752
  call void @llvm.dbg.value(metadata i32 undef, metadata !14742, metadata !DIExpression()), !dbg !14752
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) #26, !dbg !14762
  call void @llvm.dbg.value(metadata i32 undef, metadata !13834, metadata !DIExpression()) #24, !dbg !14765
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13839, metadata !DIExpression()) #24, !dbg !14765
  %14 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14767
  br i1 %14, label %16, label %15, !dbg !14768

15:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 194) #25, !dbg !14769
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.285, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14769
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 194) #25, !dbg !14769
  unreachable, !dbg !14769

16:                                               ; preds = %13
  %17 = extractvalue { i32, i32 } %10, 0, !dbg !14755
  call void @llvm.dbg.value(metadata i32 %17, metadata !13812, metadata !DIExpression()) #24, !dbg !14757
  call void @llvm.dbg.value(metadata i32 %17, metadata !13806, metadata !DIExpression()) #24, !dbg !14753
  call void @llvm.dbg.value(metadata i32 %17, metadata !14744, metadata !DIExpression()), !dbg !14752
  call void @llvm.dbg.value(metadata i32 undef, metadata !13834, metadata !DIExpression()) #24, !dbg !14765
  call void @llvm.dbg.value(metadata i32 undef, metadata !13848, metadata !DIExpression()) #24, !dbg !14770
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %17) #24, !dbg !14772, !srcloc !13854
  call void @llvm.dbg.value(metadata i32 1, metadata !14742, metadata !DIExpression()), !dbg !14752
  call void @llvm.dbg.value(metadata i32 undef, metadata !14742, metadata !DIExpression()), !dbg !14752
  ret void, !dbg !14773
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @is_thread_dummy(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #13 !dbg !14774 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14776, metadata !DIExpression()), !dbg !14777
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14778
  %3 = load i8, i8* %2, align 1, !dbg !14778
  %4 = and i8 %3, 1, !dbg !14779
  %5 = icmp ne i8 %4, 0, !dbg !14780
  ret i1 %5, !dbg !14781
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !14782 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14786, metadata !DIExpression()), !dbg !14787
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14784, metadata !DIExpression()), !dbg !14787
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !14785, metadata !DIExpression()), !dbg !14787
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) #26, !dbg !14788
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %2) #26, !dbg !14789
  ret void, !dbg !14790
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) unnamed_addr #1 !dbg !14791 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14795, metadata !DIExpression()), !dbg !14797
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !14796, metadata !DIExpression()), !dbg !14797
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %0) #26, !dbg !14798
  tail call fastcc void @z_mark_thread_as_pending(%struct.k_thread* noundef %0) #26, !dbg !14799
  %3 = icmp eq %union.anon* %1, null, !dbg !14800
  br i1 %3, label %24, label %4, !dbg !14802

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !14803
  store %union.anon* %1, %union.anon** %5, align 8, !dbg !14805
  %6 = getelementptr inbounds %union.anon, %union.anon* %1, i32 0, i32 0, !dbg !14806
  call void @llvm.dbg.value(metadata %struct._dnode* %6, metadata !14025, metadata !DIExpression()) #24, !dbg !14807
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14031, metadata !DIExpression()) #24, !dbg !14807
  %7 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #25, !dbg !14809
  br i1 %7, label %8, label %9, !dbg !14810

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.287, i32 0, i32 0), i32 noundef 186) #25, !dbg !14811
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.287, i32 0, i32 0), i32 noundef 186) #25, !dbg !14811
  unreachable, !dbg !14811

9:                                                ; preds = %4
  %10 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.288(%struct._dnode* noundef nonnull %6) #25, !dbg !14812
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !14032, metadata !DIExpression()) #24, !dbg !14807
  %11 = icmp eq %struct._dnode* %10, null, !dbg !14813
  br i1 %11, label %22, label %12, !dbg !14812

12:                                               ; preds = %9, %19
  %13 = phi %struct._dnode* [ %20, %19 ], [ %10, %9 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %13, metadata !14032, metadata !DIExpression()) #24, !dbg !14807
  %14 = bitcast %struct._dnode* %13 to %struct.k_thread*, !dbg !14814
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !14032, metadata !DIExpression()) #24, !dbg !14807
  %15 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %14) #25, !dbg !14815
  %16 = icmp sgt i32 %15, 0, !dbg !14816
  br i1 %16, label %17, label %19, !dbg !14817

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14818
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %13, %struct._dnode* noundef %18) #25, !dbg !14819
  br label %24, !dbg !14820

19:                                               ; preds = %12
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef nonnull %13) #25, !dbg !14813
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !14032, metadata !DIExpression()) #24, !dbg !14807
  %21 = icmp eq %struct._dnode* %20, null, !dbg !14813
  br i1 %21, label %22, label %12, !dbg !14812, !llvm.loop !14821

22:                                               ; preds = %19, %9
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14823
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef %23) #25, !dbg !14824
  br label %24, !dbg !14825

24:                                               ; preds = %22, %17, %2
  ret void, !dbg !14826
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !14827 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !14832, metadata !DIExpression()), !dbg !14833
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14831, metadata !DIExpression()), !dbg !14833
  %4 = icmp eq i64 %3, -1, !dbg !14834
  br i1 %4, label %6, label %5, !dbg !14836

5:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout.301(%struct.k_thread* noundef %0, [1 x i64] %1) #26, !dbg !14837
  br label %6, !dbg !14839

6:                                                ; preds = %5, %2
  ret void, !dbg !14840
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout.301(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !14841 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14844, metadata !DIExpression()), !dbg !14845
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14843, metadata !DIExpression()), !dbg !14845
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !14846
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #25, !dbg !14847
  ret void, !dbg !14848
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_timeout(%struct._timeout* noundef %0) #1 !dbg !14849 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14851, metadata !DIExpression()), !dbg !14859
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, !dbg !14860
  %3 = bitcast %struct._timeout* %2 to %struct.k_thread*, !dbg !14860
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !14852, metadata !DIExpression()), !dbg !14859
  call void @llvm.dbg.value(metadata i32 0, metadata !14853, metadata !DIExpression()), !dbg !14861
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13800, metadata !DIExpression()) #24, !dbg !14862
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14864, !srcloc !13815
  call void @llvm.dbg.value(metadata i32 undef, metadata !13812, metadata !DIExpression()) #24, !dbg !14866
  call void @llvm.dbg.value(metadata i32 undef, metadata !13813, metadata !DIExpression()) #24, !dbg !14866
  call void @llvm.dbg.value(metadata i32 undef, metadata !13806, metadata !DIExpression()) #24, !dbg !14862
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14867
  br i1 %5, label %7, label %6, !dbg !14868

6:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 148) #25, !dbg !14869
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.283, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14869
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 148) #25, !dbg !14869
  unreachable, !dbg !14869

7:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !13812, metadata !DIExpression()) #24, !dbg !14866
  call void @llvm.dbg.value(metadata i32 undef, metadata !13806, metadata !DIExpression()) #24, !dbg !14862
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14870
  call void @llvm.dbg.value(metadata i32 undef, metadata !14855, metadata !DIExpression()), !dbg !14861
  call void @llvm.dbg.value(metadata i32 undef, metadata !14853, metadata !DIExpression()), !dbg !14861
  %8 = bitcast %struct._timeout* %2 to %struct._thread_base*, !dbg !14871
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %8, i32 0, i32 3, !dbg !14872
  %10 = load i8, i8* %9, align 1, !dbg !14872
  %11 = and i8 %10, 40, !dbg !14873
  %12 = icmp eq i8 %11, 0, !dbg !14873
  call void @llvm.dbg.value(metadata i1 %12, metadata !14856, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14874
  br i1 %12, label %13, label %20, !dbg !14875

13:                                               ; preds = %7
  %14 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, i32 1, !dbg !14876
  %15 = bitcast void (%struct._timeout*)** %14 to %union.anon**, !dbg !14876
  %16 = load %union.anon*, %union.anon** %15, align 8, !dbg !14876
  %17 = icmp eq %union.anon* %16, null, !dbg !14880
  br i1 %17, label %19, label %18, !dbg !14881

18:                                               ; preds = %13
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %3) #26, !dbg !14882
  br label %19, !dbg !14884

19:                                               ; preds = %18, %13
  tail call fastcc void @z_mark_thread_as_started.297(%struct.k_thread* noundef nonnull %3) #26, !dbg !14885
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef nonnull %3) #26, !dbg !14886
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %3) #26, !dbg !14887
  br label %20, !dbg !14888

20:                                               ; preds = %19, %7
  call void @llvm.dbg.value(metadata i32 undef, metadata !13834, metadata !DIExpression()) #24, !dbg !14889
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13839, metadata !DIExpression()) #24, !dbg !14889
  %21 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14891
  br i1 %21, label %23, label %22, !dbg !14892

22:                                               ; preds = %20
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 194) #25, !dbg !14893
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.285, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14893
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 194) #25, !dbg !14893
  unreachable, !dbg !14893

23:                                               ; preds = %20
  %24 = extractvalue { i32, i32 } %4, 0, !dbg !14864
  call void @llvm.dbg.value(metadata i32 %24, metadata !13812, metadata !DIExpression()) #24, !dbg !14866
  call void @llvm.dbg.value(metadata i32 %24, metadata !13806, metadata !DIExpression()) #24, !dbg !14862
  call void @llvm.dbg.value(metadata i32 %24, metadata !14855, metadata !DIExpression()), !dbg !14861
  call void @llvm.dbg.value(metadata i32 undef, metadata !13834, metadata !DIExpression()) #24, !dbg !14889
  call void @llvm.dbg.value(metadata i32 undef, metadata !13848, metadata !DIExpression()) #24, !dbg !14894
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %24) #24, !dbg !14896, !srcloc !13854
  call void @llvm.dbg.value(metadata i32 1, metadata !14853, metadata !DIExpression()), !dbg !14861
  call void @llvm.dbg.value(metadata i32 undef, metadata !14853, metadata !DIExpression()), !dbg !14861
  ret void, !dbg !14897
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14898 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14900, metadata !DIExpression()), !dbg !14901
  %2 = tail call fastcc %union.anon* @pended_on_thread(%struct.k_thread* noundef %0) #26, !dbg !14902
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #26, !dbg !14903
  tail call fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* noundef %0) #26, !dbg !14904
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !14905
  store %union.anon* null, %union.anon** %3, align 8, !dbg !14906
  ret void, !dbg !14907
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %union.anon* @pended_on_thread(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #1 !dbg !14908 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14912, metadata !DIExpression()), !dbg !14913
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !14914
  %3 = load %union.anon*, %union.anon** %2, align 8, !dbg !14914
  %4 = icmp eq %union.anon* %3, null, !dbg !14914
  br i1 %4, label %5, label %6, !dbg !14917

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.20.304, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.287, i32 0, i32 0), i32 noundef 726) #25, !dbg !14918
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.287, i32 0, i32 0), i32 noundef 726) #25, !dbg !14918
  unreachable, !dbg !14918

6:                                                ; preds = %1
  ret %union.anon* %3, !dbg !14920
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #14 !dbg !14921 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14923, metadata !DIExpression()), !dbg !14924
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14925
  %3 = load i8, i8* %2, align 1, !dbg !14926
  %4 = and i8 %3, -3, !dbg !14926
  store i8 %4, i8* %2, align 1, !dbg !14926
  ret void, !dbg !14927
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14928 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14930, metadata !DIExpression()), !dbg !14931
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !14932
  br i1 %2, label %3, label %7, !dbg !14934

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13994, metadata !DIExpression()) #24, !dbg !14935
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14938
  %5 = load i8, i8* %4, align 1, !dbg !14939
  %6 = and i8 %5, 127, !dbg !14939
  store i8 %6, i8* %4, align 1, !dbg !14939
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14002, metadata !DIExpression()) #24, !dbg !14940
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !14942
  br label %7, !dbg !14943

7:                                                ; preds = %3, %1
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14944
  %9 = icmp eq %struct.k_thread* %8, %0, !dbg !14945
  %10 = zext i1 %9 to i32, !dbg !14945
  tail call fastcc void @update_cache(i32 noundef %10) #26, !dbg !14946
  ret void, !dbg !14947
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #14 !dbg !14948 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14950, metadata !DIExpression()), !dbg !14951
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14952
  %3 = load i8, i8* %2, align 1, !dbg !14953
  %4 = or i8 %3, 2, !dbg !14953
  store i8 %4, i8* %2, align 1, !dbg !14953
  ret void, !dbg !14954
}

; Function Attrs: alwaysinline nounwind optsize
define dso_local void @z_unpend_thread_no_timeout(%struct.k_thread* noundef %0) local_unnamed_addr #22 !dbg !14955 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14957, metadata !DIExpression()), !dbg !14961
  call void @llvm.dbg.value(metadata i32 0, metadata !14958, metadata !DIExpression()), !dbg !14962
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13800, metadata !DIExpression()) #24, !dbg !14963
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !14965, !srcloc !13815
  call void @llvm.dbg.value(metadata i32 undef, metadata !13812, metadata !DIExpression()) #24, !dbg !14967
  call void @llvm.dbg.value(metadata i32 undef, metadata !13813, metadata !DIExpression()) #24, !dbg !14967
  call void @llvm.dbg.value(metadata i32 undef, metadata !13806, metadata !DIExpression()) #24, !dbg !14963
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14968
  br i1 %3, label %5, label %4, !dbg !14969

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 148) #25, !dbg !14970
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.283, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14970
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 148) #25, !dbg !14970
  unreachable, !dbg !14970

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !13812, metadata !DIExpression()) #24, !dbg !14967
  call void @llvm.dbg.value(metadata i32 undef, metadata !13806, metadata !DIExpression()) #24, !dbg !14963
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14971
  call void @llvm.dbg.value(metadata i32 undef, metadata !14960, metadata !DIExpression()), !dbg !14962
  call void @llvm.dbg.value(metadata i32 undef, metadata !14958, metadata !DIExpression()), !dbg !14962
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #26, !dbg !14972
  call void @llvm.dbg.value(metadata i32 undef, metadata !13834, metadata !DIExpression()) #24, !dbg !14975
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13839, metadata !DIExpression()) #24, !dbg !14975
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14977
  br i1 %6, label %8, label %7, !dbg !14978

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 194) #25, !dbg !14979
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.285, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14979
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 194) #25, !dbg !14979
  unreachable, !dbg !14979

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !14965
  call void @llvm.dbg.value(metadata i32 %9, metadata !13812, metadata !DIExpression()) #24, !dbg !14967
  call void @llvm.dbg.value(metadata i32 %9, metadata !13806, metadata !DIExpression()) #24, !dbg !14963
  call void @llvm.dbg.value(metadata i32 %9, metadata !14960, metadata !DIExpression()), !dbg !14962
  call void @llvm.dbg.value(metadata i32 undef, metadata !13834, metadata !DIExpression()) #24, !dbg !14975
  call void @llvm.dbg.value(metadata i32 undef, metadata !13848, metadata !DIExpression()) #24, !dbg !14980
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #24, !dbg !14982, !srcloc !13854
  call void @llvm.dbg.value(metadata i32 1, metadata !14958, metadata !DIExpression()), !dbg !14962
  call void @llvm.dbg.value(metadata i32 undef, metadata !14958, metadata !DIExpression()), !dbg !14962
  ret void, !dbg !14983
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr_irqlock(i32 noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !14984 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14990, metadata !DIExpression()), !dbg !14995
  call void @llvm.dbg.value(metadata i32 %0, metadata !14988, metadata !DIExpression()), !dbg !14995
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !14989, metadata !DIExpression()), !dbg !14995
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14996
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %4, %union.anon* noundef %1, [1 x i64] %2) #26, !dbg !14997
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14998
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !14999
  %6 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #26, !dbg !15000
  call void @llvm.dbg.value(metadata i32 %6, metadata !14991, metadata !DIExpression()), !dbg !14995
  call void @llvm.dbg.value(metadata i32 0, metadata !14992, metadata !DIExpression()), !dbg !15001
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13800, metadata !DIExpression()) #24, !dbg !15002
  %7 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15004, !srcloc !13815
  call void @llvm.dbg.value(metadata i32 undef, metadata !13812, metadata !DIExpression()) #24, !dbg !15006
  call void @llvm.dbg.value(metadata i32 undef, metadata !13813, metadata !DIExpression()) #24, !dbg !15006
  call void @llvm.dbg.value(metadata i32 undef, metadata !13806, metadata !DIExpression()) #24, !dbg !15002
  %8 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15007
  br i1 %8, label %10, label %9, !dbg !15008

9:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 148) #25, !dbg !15009
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.283, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15009
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 148) #25, !dbg !15009
  unreachable, !dbg !15009

10:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !13812, metadata !DIExpression()) #24, !dbg !15006
  call void @llvm.dbg.value(metadata i32 undef, metadata !13806, metadata !DIExpression()) #24, !dbg !15002
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15010
  call void @llvm.dbg.value(metadata i32 undef, metadata !14994, metadata !DIExpression()), !dbg !15001
  call void @llvm.dbg.value(metadata i32 undef, metadata !14992, metadata !DIExpression()), !dbg !15001
  %11 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !15011
  %12 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15015
  %13 = icmp eq %struct.k_thread* %11, %12, !dbg !15016
  br i1 %13, label %14, label %15, !dbg !15017

14:                                               ; preds = %10
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !15018
  br label %15, !dbg !15020

15:                                               ; preds = %10, %14
  call void @llvm.dbg.value(metadata i32 undef, metadata !13834, metadata !DIExpression()) #24, !dbg !15021
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13839, metadata !DIExpression()) #24, !dbg !15021
  %16 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15023
  br i1 %16, label %18, label %17, !dbg !15024

17:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 194) #25, !dbg !15025
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.285, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15025
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 194) #25, !dbg !15025
  unreachable, !dbg !15025

18:                                               ; preds = %15
  %19 = extractvalue { i32, i32 } %7, 0, !dbg !15004
  call void @llvm.dbg.value(metadata i32 %19, metadata !13812, metadata !DIExpression()) #24, !dbg !15006
  call void @llvm.dbg.value(metadata i32 %19, metadata !13806, metadata !DIExpression()) #24, !dbg !15002
  call void @llvm.dbg.value(metadata i32 %19, metadata !14994, metadata !DIExpression()), !dbg !15001
  call void @llvm.dbg.value(metadata i32 undef, metadata !13834, metadata !DIExpression()) #24, !dbg !15021
  call void @llvm.dbg.value(metadata i32 undef, metadata !13848, metadata !DIExpression()) #24, !dbg !15026
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %19) #24, !dbg !15028, !srcloc !13854
  call void @llvm.dbg.value(metadata i32 1, metadata !14992, metadata !DIExpression()), !dbg !15001
  call void @llvm.dbg.value(metadata i32 undef, metadata !14992, metadata !DIExpression()), !dbg !15001
  ret i32 %6, !dbg !15029
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr(%struct.k_spinlock* noundef %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !15030 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !15035, metadata !DIExpression()), !dbg !15038
  call void @llvm.dbg.value(metadata i64 undef, metadata !15037, metadata !DIExpression()), !dbg !15038
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !15034, metadata !DIExpression()), !dbg !15038
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !15036, metadata !DIExpression()), !dbg !15038
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15039
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !15040
  %6 = icmp eq %struct.k_spinlock* %0, @sched_spinlock, !dbg !15041
  br i1 %6, label %7, label %8, !dbg !15044

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3.307, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.287, i32 0, i32 0), i32 noundef 846) #25, !dbg !15045
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.287, i32 0, i32 0), i32 noundef 846) #25, !dbg !15045
  unreachable, !dbg !15045

8:                                                ; preds = %4
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13800, metadata !DIExpression()) #24, !dbg !15047
  %9 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15049, !srcloc !13815
  call void @llvm.dbg.value(metadata i32 undef, metadata !13812, metadata !DIExpression()) #24, !dbg !15051
  call void @llvm.dbg.value(metadata i32 undef, metadata !13813, metadata !DIExpression()) #24, !dbg !15051
  call void @llvm.dbg.value(metadata i32 undef, metadata !13806, metadata !DIExpression()) #24, !dbg !15047
  %10 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15052
  br i1 %10, label %12, label %11, !dbg !15053

11:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 148) #25, !dbg !15054
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.283, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15054
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 148) #25, !dbg !15054
  unreachable, !dbg !15054

12:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 undef, metadata !13812, metadata !DIExpression()) #24, !dbg !15051
  call void @llvm.dbg.value(metadata i32 undef, metadata !13806, metadata !DIExpression()) #24, !dbg !15047
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15055
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15056
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %13, %union.anon* noundef %2, [1 x i64] %3) #26, !dbg !15057
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14532, metadata !DIExpression()) #24, !dbg !15058
  %14 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #25, !dbg !15060
  br i1 %14, label %16, label %15, !dbg !15061

15:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 225) #25, !dbg !15062
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.285, i32 0, i32 0), %struct.k_spinlock* noundef %0) #25, !dbg !15062
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 225) #25, !dbg !15062
  unreachable, !dbg !15062

16:                                               ; preds = %12
  call void @llvm.dbg.value(metadata i32 undef, metadata !14523, metadata !DIExpression()) #24, !dbg !15063
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14528, metadata !DIExpression()) #24, !dbg !15063
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14532, metadata !DIExpression()) #24, !dbg !15065
  %17 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15067
  br i1 %17, label %19, label %18, !dbg !15068

18:                                               ; preds = %16
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 225) #25, !dbg !15069
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.285, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15069
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 225) #25, !dbg !15069
  unreachable, !dbg !15069

19:                                               ; preds = %16
  %20 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %20, metadata !14523, metadata !DIExpression()) #24, !dbg !15063
  %21 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %20) #25, !dbg !15070
  ret i32 %21, !dbg !15071
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend1_no_timeout(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !15072 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !15076, metadata !DIExpression()), !dbg !15081
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15077, metadata !DIExpression()), !dbg !15081
  call void @llvm.dbg.value(metadata i32 0, metadata !15078, metadata !DIExpression()), !dbg !15082
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13800, metadata !DIExpression()) #24, !dbg !15083
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15085, !srcloc !13815
  call void @llvm.dbg.value(metadata i32 undef, metadata !13812, metadata !DIExpression()) #24, !dbg !15087
  call void @llvm.dbg.value(metadata i32 undef, metadata !13813, metadata !DIExpression()) #24, !dbg !15087
  call void @llvm.dbg.value(metadata i32 undef, metadata !13806, metadata !DIExpression()) #24, !dbg !15083
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15088
  br i1 %3, label %5, label %4, !dbg !15089

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 148) #25, !dbg !15090
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.283, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15090
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 148) #25, !dbg !15090
  unreachable, !dbg !15090

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !13812, metadata !DIExpression()) #24, !dbg !15087
  call void @llvm.dbg.value(metadata i32 undef, metadata !13806, metadata !DIExpression()) #24, !dbg !15083
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15091
  call void @llvm.dbg.value(metadata i32 undef, metadata !15080, metadata !DIExpression()), !dbg !15082
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15077, metadata !DIExpression()), !dbg !15081
  call void @llvm.dbg.value(metadata i32 undef, metadata !15078, metadata !DIExpression()), !dbg !15082
  %6 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %7 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %6) #26, !dbg !15092
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !15077, metadata !DIExpression()), !dbg !15081
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !15095
  br i1 %8, label %10, label %9, !dbg !15097

9:                                                ; preds = %5
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %7) #26, !dbg !15098
  br label %10, !dbg !15100

10:                                               ; preds = %5, %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !13834, metadata !DIExpression()) #24, !dbg !15101
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13839, metadata !DIExpression()) #24, !dbg !15101
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15103
  br i1 %11, label %13, label %12, !dbg !15104

12:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 194) #25, !dbg !15105
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.285, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15105
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 194) #25, !dbg !15105
  unreachable, !dbg !15105

13:                                               ; preds = %10
  %14 = extractvalue { i32, i32 } %2, 0, !dbg !15085
  call void @llvm.dbg.value(metadata i32 %14, metadata !13812, metadata !DIExpression()) #24, !dbg !15087
  call void @llvm.dbg.value(metadata i32 %14, metadata !13806, metadata !DIExpression()) #24, !dbg !15083
  call void @llvm.dbg.value(metadata i32 %14, metadata !15080, metadata !DIExpression()), !dbg !15082
  call void @llvm.dbg.value(metadata i32 undef, metadata !13834, metadata !DIExpression()) #24, !dbg !15101
  call void @llvm.dbg.value(metadata i32 undef, metadata !13848, metadata !DIExpression()) #24, !dbg !15106
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #24, !dbg !15108, !srcloc !13854
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !15077, metadata !DIExpression()), !dbg !15081
  call void @llvm.dbg.value(metadata i32 undef, metadata !15078, metadata !DIExpression()), !dbg !15082
  ret %struct.k_thread* %7, !dbg !15109
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !15110 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !15112, metadata !DIExpression()), !dbg !15117
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15113, metadata !DIExpression()), !dbg !15117
  call void @llvm.dbg.value(metadata i32 0, metadata !15114, metadata !DIExpression()), !dbg !15118
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13800, metadata !DIExpression()) #24, !dbg !15119
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15121, !srcloc !13815
  call void @llvm.dbg.value(metadata i32 undef, metadata !13812, metadata !DIExpression()) #24, !dbg !15123
  call void @llvm.dbg.value(metadata i32 undef, metadata !13813, metadata !DIExpression()) #24, !dbg !15123
  call void @llvm.dbg.value(metadata i32 undef, metadata !13806, metadata !DIExpression()) #24, !dbg !15119
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15124
  br i1 %3, label %5, label %4, !dbg !15125

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 148) #25, !dbg !15126
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.283, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15126
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 148) #25, !dbg !15126
  unreachable, !dbg !15126

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !13812, metadata !DIExpression()) #24, !dbg !15123
  call void @llvm.dbg.value(metadata i32 undef, metadata !13806, metadata !DIExpression()) #24, !dbg !15119
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15127
  call void @llvm.dbg.value(metadata i32 undef, metadata !15116, metadata !DIExpression()), !dbg !15118
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15113, metadata !DIExpression()), !dbg !15117
  call void @llvm.dbg.value(metadata i32 undef, metadata !15114, metadata !DIExpression()), !dbg !15118
  %6 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %7 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %6) #26, !dbg !15128
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !15113, metadata !DIExpression()), !dbg !15117
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !15131
  br i1 %8, label %11, label %9, !dbg !15133

9:                                                ; preds = %5
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %7) #26, !dbg !15134
  %10 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %7) #26, !dbg !15136
  br label %11, !dbg !15137

11:                                               ; preds = %5, %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !13834, metadata !DIExpression()) #24, !dbg !15138
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13839, metadata !DIExpression()) #24, !dbg !15138
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15140
  br i1 %12, label %14, label %13, !dbg !15141

13:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 194) #25, !dbg !15142
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.285, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15142
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 194) #25, !dbg !15142
  unreachable, !dbg !15142

14:                                               ; preds = %11
  %15 = extractvalue { i32, i32 } %2, 0, !dbg !15121
  call void @llvm.dbg.value(metadata i32 %15, metadata !13812, metadata !DIExpression()) #24, !dbg !15123
  call void @llvm.dbg.value(metadata i32 %15, metadata !13806, metadata !DIExpression()) #24, !dbg !15119
  call void @llvm.dbg.value(metadata i32 %15, metadata !15116, metadata !DIExpression()), !dbg !15118
  call void @llvm.dbg.value(metadata i32 undef, metadata !13834, metadata !DIExpression()) #24, !dbg !15138
  call void @llvm.dbg.value(metadata i32 undef, metadata !13848, metadata !DIExpression()) #24, !dbg !15143
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %15) #24, !dbg !15145, !srcloc !13854
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !15113, metadata !DIExpression()), !dbg !15117
  call void @llvm.dbg.value(metadata i32 undef, metadata !15114, metadata !DIExpression()), !dbg !15118
  ret %struct.k_thread* %7, !dbg !15146
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_unpend_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15147 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15149, metadata !DIExpression()), !dbg !15150
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14957, metadata !DIExpression()) #24, !dbg !15151
  call void @llvm.dbg.value(metadata i32 0, metadata !14958, metadata !DIExpression()) #24, !dbg !15153
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13800, metadata !DIExpression()) #24, !dbg !15154
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15156, !srcloc !13815
  call void @llvm.dbg.value(metadata i32 undef, metadata !13812, metadata !DIExpression()) #24, !dbg !15158
  call void @llvm.dbg.value(metadata i32 undef, metadata !13813, metadata !DIExpression()) #24, !dbg !15158
  call void @llvm.dbg.value(metadata i32 undef, metadata !13806, metadata !DIExpression()) #24, !dbg !15154
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15159
  br i1 %3, label %5, label %4, !dbg !15160

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 148) #25, !dbg !15161
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.283, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15161
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 148) #25, !dbg !15161
  unreachable, !dbg !15161

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !13812, metadata !DIExpression()) #24, !dbg !15158
  call void @llvm.dbg.value(metadata i32 undef, metadata !13806, metadata !DIExpression()) #24, !dbg !15154
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15162
  call void @llvm.dbg.value(metadata i32 undef, metadata !14960, metadata !DIExpression()) #24, !dbg !15153
  call void @llvm.dbg.value(metadata i32 undef, metadata !14958, metadata !DIExpression()) #24, !dbg !15153
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #25, !dbg !15163
  call void @llvm.dbg.value(metadata i32 undef, metadata !13834, metadata !DIExpression()) #24, !dbg !15164
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13839, metadata !DIExpression()) #24, !dbg !15164
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15166
  br i1 %6, label %8, label %7, !dbg !15167

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 194) #25, !dbg !15168
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.285, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15168
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 194) #25, !dbg !15168
  unreachable, !dbg !15168

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !15156
  call void @llvm.dbg.value(metadata i32 %9, metadata !13812, metadata !DIExpression()) #24, !dbg !15158
  call void @llvm.dbg.value(metadata i32 %9, metadata !13806, metadata !DIExpression()) #24, !dbg !15154
  call void @llvm.dbg.value(metadata i32 %9, metadata !14960, metadata !DIExpression()) #24, !dbg !15153
  call void @llvm.dbg.value(metadata i32 undef, metadata !13834, metadata !DIExpression()) #24, !dbg !15164
  call void @llvm.dbg.value(metadata i32 undef, metadata !13848, metadata !DIExpression()) #24, !dbg !15169
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #24, !dbg !15171, !srcloc !13854
  call void @llvm.dbg.value(metadata i32 1, metadata !14958, metadata !DIExpression()) #24, !dbg !15153
  call void @llvm.dbg.value(metadata i32 undef, metadata !14958, metadata !DIExpression()) #24, !dbg !15153
  %10 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #26, !dbg !15172
  ret void, !dbg !15173
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15174 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15176, metadata !DIExpression()), !dbg !15182
  call void @llvm.dbg.value(metadata i32 %1, metadata !15177, metadata !DIExpression()), !dbg !15182
  call void @llvm.dbg.value(metadata i8 0, metadata !15178, metadata !DIExpression()), !dbg !15182
  call void @llvm.dbg.value(metadata i32 0, metadata !15179, metadata !DIExpression()), !dbg !15183
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13800, metadata !DIExpression()) #24, !dbg !15184
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15186, !srcloc !13815
  call void @llvm.dbg.value(metadata i32 undef, metadata !13812, metadata !DIExpression()) #24, !dbg !15188
  call void @llvm.dbg.value(metadata i32 undef, metadata !13813, metadata !DIExpression()) #24, !dbg !15188
  call void @llvm.dbg.value(metadata i32 undef, metadata !13806, metadata !DIExpression()) #24, !dbg !15184
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15189
  br i1 %4, label %6, label %5, !dbg !15190

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 148) #25, !dbg !15191
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.283, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15191
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 148) #25, !dbg !15191
  unreachable, !dbg !15191

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !13812, metadata !DIExpression()) #24, !dbg !15188
  call void @llvm.dbg.value(metadata i32 undef, metadata !13806, metadata !DIExpression()) #24, !dbg !15184
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15192
  call void @llvm.dbg.value(metadata i32 undef, metadata !15181, metadata !DIExpression()), !dbg !15183
  call void @llvm.dbg.value(metadata i8 poison, metadata !15178, metadata !DIExpression()), !dbg !15182
  call void @llvm.dbg.value(metadata i32 undef, metadata !15179, metadata !DIExpression()), !dbg !15183
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0
  %9 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #26, !dbg !15193
  call void @llvm.dbg.value(metadata i1 %9, metadata !15178, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15182
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4
  %11 = bitcast %union.anon.2* %10 to i8*
  %12 = trunc i32 %1 to i8
  br i1 %9, label %13, label %34, !dbg !15196

13:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13994, metadata !DIExpression()) #24, !dbg !15197
  %14 = load i8, i8* %7, align 1, !dbg !15203
  %15 = and i8 %14, 127, !dbg !15203
  store i8 %15, i8* %7, align 1, !dbg !15203
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14002, metadata !DIExpression()) #24, !dbg !15204
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !15206
  store i8 %12, i8* %11, align 2, !dbg !15207
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14011, metadata !DIExpression()) #24, !dbg !15208
  %16 = load i8, i8* %7, align 1, !dbg !15210
  %17 = or i8 %16, -128, !dbg !15210
  store i8 %17, i8* %7, align 1, !dbg !15210
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14018, metadata !DIExpression()) #24, !dbg !15211
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14025, metadata !DIExpression()) #24, !dbg !15213
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14031, metadata !DIExpression()) #24, !dbg !15213
  %18 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #25, !dbg !15215
  br i1 %18, label %19, label %20, !dbg !15216

19:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.287, i32 0, i32 0), i32 noundef 186) #25, !dbg !15217
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.287, i32 0, i32 0), i32 noundef 186) #25, !dbg !15217
  unreachable, !dbg !15217

20:                                               ; preds = %13
  %21 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.288(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !15218
  call void @llvm.dbg.value(metadata %struct._dnode* %21, metadata !14032, metadata !DIExpression()) #24, !dbg !15213
  %22 = icmp eq %struct._dnode* %21, null, !dbg !15219
  br i1 %22, label %32, label %23, !dbg !15218

23:                                               ; preds = %20, %29
  %24 = phi %struct._dnode* [ %30, %29 ], [ %21, %20 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !14032, metadata !DIExpression()) #24, !dbg !15213
  %25 = bitcast %struct._dnode* %24 to %struct.k_thread*, !dbg !15220
  call void @llvm.dbg.value(metadata %struct.k_thread* %25, metadata !14032, metadata !DIExpression()) #24, !dbg !15213
  %26 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %25) #25, !dbg !15221
  %27 = icmp sgt i32 %26, 0, !dbg !15222
  br i1 %27, label %28, label %29, !dbg !15223

28:                                               ; preds = %23
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %24, %struct._dnode* noundef %8) #25, !dbg !15224
  br label %33, !dbg !15225

29:                                               ; preds = %23
  %30 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %24) #25, !dbg !15219
  call void @llvm.dbg.value(metadata %struct._dnode* %30, metadata !14032, metadata !DIExpression()) #24, !dbg !15213
  %31 = icmp eq %struct._dnode* %30, null, !dbg !15219
  br i1 %31, label %32, label %23, !dbg !15218, !llvm.loop !15226

32:                                               ; preds = %29, %20
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %8) #25, !dbg !15228
  br label %33, !dbg !15229

33:                                               ; preds = %28, %32
  tail call fastcc void @update_cache(i32 noundef 1) #26, !dbg !15230
  br label %35, !dbg !15231

34:                                               ; preds = %6
  store i8 %12, i8* %11, align 2, !dbg !15232
  br label %35

35:                                               ; preds = %33, %34
  call void @llvm.dbg.value(metadata i32 undef, metadata !13834, metadata !DIExpression()) #24, !dbg !15234
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13839, metadata !DIExpression()) #24, !dbg !15234
  %36 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15236
  br i1 %36, label %38, label %37, !dbg !15237

37:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 194) #25, !dbg !15238
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.285, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15238
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 194) #25, !dbg !15238
  unreachable, !dbg !15238

38:                                               ; preds = %35
  %39 = extractvalue { i32, i32 } %3, 0, !dbg !15186
  call void @llvm.dbg.value(metadata i32 %39, metadata !13812, metadata !DIExpression()) #24, !dbg !15188
  call void @llvm.dbg.value(metadata i32 %39, metadata !13806, metadata !DIExpression()) #24, !dbg !15184
  call void @llvm.dbg.value(metadata i32 %39, metadata !15181, metadata !DIExpression()), !dbg !15183
  call void @llvm.dbg.value(metadata i32 undef, metadata !13834, metadata !DIExpression()) #24, !dbg !15234
  call void @llvm.dbg.value(metadata i32 undef, metadata !13848, metadata !DIExpression()) #24, !dbg !15239
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %39) #24, !dbg !15241, !srcloc !13854
  call void @llvm.dbg.value(metadata i8 poison, metadata !15178, metadata !DIExpression()), !dbg !15182
  call void @llvm.dbg.value(metadata i32 undef, metadata !15179, metadata !DIExpression()), !dbg !15183
  ret i1 %9, !dbg !15242
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15243 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15247, metadata !DIExpression()), !dbg !15250
  call void @llvm.dbg.value(metadata i32 %1, metadata !15248, metadata !DIExpression()), !dbg !15250
  %3 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) #26, !dbg !15251
  call void @llvm.dbg.value(metadata i1 %3, metadata !15249, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15250
  br i1 %3, label %4, label %12, !dbg !15252

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15254
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !15255
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !15255
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !15255
  %9 = load i8, i8* %8, align 1, !dbg !15255
  %10 = icmp eq i8 %9, 0, !dbg !15256
  br i1 %10, label %11, label %12, !dbg !15257

11:                                               ; preds = %4
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !15258
  br label %12, !dbg !15260

12:                                               ; preds = %11, %4, %2
  ret void, !dbg !15261
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_lock() local_unnamed_addr #1 !dbg !15262 {
  call void @llvm.dbg.value(metadata i32 0, metadata !15264, metadata !DIExpression()), !dbg !15267
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13800, metadata !DIExpression()) #24, !dbg !15268
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15270, !srcloc !13815
  call void @llvm.dbg.value(metadata i32 undef, metadata !13812, metadata !DIExpression()) #24, !dbg !15272
  call void @llvm.dbg.value(metadata i32 undef, metadata !13813, metadata !DIExpression()) #24, !dbg !15272
  call void @llvm.dbg.value(metadata i32 undef, metadata !13806, metadata !DIExpression()) #24, !dbg !15268
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15273
  br i1 %2, label %4, label %3, !dbg !15274

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 148) #25, !dbg !15275
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.283, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15275
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 148) #25, !dbg !15275
  unreachable, !dbg !15275

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !13812, metadata !DIExpression()) #24, !dbg !15272
  call void @llvm.dbg.value(metadata i32 undef, metadata !13806, metadata !DIExpression()) #24, !dbg !15268
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15276
  call void @llvm.dbg.value(metadata i32 undef, metadata !15266, metadata !DIExpression()), !dbg !15267
  call void @llvm.dbg.value(metadata i32 undef, metadata !15264, metadata !DIExpression()), !dbg !15267
  tail call fastcc void @z_sched_lock() #26, !dbg !15277
  call void @llvm.dbg.value(metadata i32 undef, metadata !13834, metadata !DIExpression()) #24, !dbg !15280
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13839, metadata !DIExpression()) #24, !dbg !15280
  %5 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15282
  br i1 %5, label %7, label %6, !dbg !15283

6:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 194) #25, !dbg !15284
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.285, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15284
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 194) #25, !dbg !15284
  unreachable, !dbg !15284

7:                                                ; preds = %4
  %8 = extractvalue { i32, i32 } %1, 0, !dbg !15270
  call void @llvm.dbg.value(metadata i32 %8, metadata !13812, metadata !DIExpression()) #24, !dbg !15272
  call void @llvm.dbg.value(metadata i32 %8, metadata !13806, metadata !DIExpression()) #24, !dbg !15268
  call void @llvm.dbg.value(metadata i32 %8, metadata !15266, metadata !DIExpression()), !dbg !15267
  call void @llvm.dbg.value(metadata i32 undef, metadata !13834, metadata !DIExpression()) #24, !dbg !15280
  call void @llvm.dbg.value(metadata i32 undef, metadata !13848, metadata !DIExpression()) #24, !dbg !15285
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #24, !dbg !15287, !srcloc !13854
  call void @llvm.dbg.value(metadata i32 1, metadata !15264, metadata !DIExpression()), !dbg !15267
  call void @llvm.dbg.value(metadata i32 undef, metadata !15264, metadata !DIExpression()), !dbg !15267
  ret void, !dbg !15288
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sched_lock() unnamed_addr #1 !dbg !15289 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #24, !dbg !15290, !srcloc !14579
  call void @llvm.dbg.value(metadata i32 %1, metadata !14575, metadata !DIExpression()) #24, !dbg !15295
  %2 = icmp eq i32 %1, 0, !dbg !15296
  br i1 %2, label %4, label %3, !dbg !15297

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.312, i32 0, i32 0), i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.313, i32 0, i32 0), i32 noundef 253) #25, !dbg !15298
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.290, i32 0, i32 0)) #25, !dbg !15298
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.313, i32 0, i32 0), i32 noundef 253) #25, !dbg !15298
  unreachable, !dbg !15298

4:                                                ; preds = %0
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15300
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !15300
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !15300
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !15300
  %9 = load i8, i8* %8, align 1, !dbg !15300
  %10 = icmp eq i8 %9, 1, !dbg !15300
  br i1 %10, label %11, label %12, !dbg !15303

11:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.22.314, i32 0, i32 0), i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.313, i32 0, i32 0), i32 noundef 254) #25, !dbg !15304
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.290, i32 0, i32 0)) #25, !dbg !15304
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.313, i32 0, i32 0), i32 noundef 254) #25, !dbg !15304
  unreachable, !dbg !15304

12:                                               ; preds = %4
  %13 = add i8 %9, -1, !dbg !15306
  store i8 %13, i8* %8, align 1, !dbg !15306
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !15307, !srcloc !15309
  ret void, !dbg !15310
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_unlock() local_unnamed_addr #1 !dbg !15311 {
  call void @llvm.dbg.value(metadata i32 0, metadata !15313, metadata !DIExpression()), !dbg !15316
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13800, metadata !DIExpression()) #24, !dbg !15317
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15319, !srcloc !13815
  call void @llvm.dbg.value(metadata i32 undef, metadata !13812, metadata !DIExpression()) #24, !dbg !15321
  call void @llvm.dbg.value(metadata i32 undef, metadata !13813, metadata !DIExpression()) #24, !dbg !15321
  call void @llvm.dbg.value(metadata i32 undef, metadata !13806, metadata !DIExpression()) #24, !dbg !15317
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15322
  br i1 %2, label %4, label %3, !dbg !15323

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 148) #25, !dbg !15324
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.283, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15324
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 148) #25, !dbg !15324
  unreachable, !dbg !15324

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !13812, metadata !DIExpression()) #24, !dbg !15321
  call void @llvm.dbg.value(metadata i32 undef, metadata !13806, metadata !DIExpression()) #24, !dbg !15317
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15325
  call void @llvm.dbg.value(metadata i32 undef, metadata !15315, metadata !DIExpression()), !dbg !15316
  call void @llvm.dbg.value(metadata i32 undef, metadata !15313, metadata !DIExpression()), !dbg !15316
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15326
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !15326
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !15326
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !15326
  %9 = load i8, i8* %8, align 1, !dbg !15326
  %10 = icmp eq i8 %9, 0, !dbg !15326
  br i1 %10, label %11, label %12, !dbg !15331

11:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.4.317, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.287, i32 0, i32 0), i32 noundef 999) #25, !dbg !15332
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.290, i32 0, i32 0)) #25, !dbg !15332
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.287, i32 0, i32 0), i32 noundef 999) #25, !dbg !15332
  unreachable, !dbg !15332

12:                                               ; preds = %4
  %13 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #24, !dbg !15334, !srcloc !14579
  call void @llvm.dbg.value(metadata i32 %13, metadata !14575, metadata !DIExpression()) #24, !dbg !15339
  %14 = icmp eq i32 %13, 0, !dbg !15340
  br i1 %14, label %16, label %15, !dbg !15341

15:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.312, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.287, i32 0, i32 0), i32 noundef 1000) #25, !dbg !15342
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.290, i32 0, i32 0)) #25, !dbg !15342
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.287, i32 0, i32 0), i32 noundef 1000) #25, !dbg !15342
  unreachable, !dbg !15342

16:                                               ; preds = %12
  %17 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15344
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %17, i32 0, i32 0, i32 4, !dbg !15345
  %19 = bitcast %union.anon.2* %18 to %struct.device_state*, !dbg !15345
  %20 = getelementptr inbounds %struct.device_state, %struct.device_state* %19, i32 0, i32 1, !dbg !15345
  %21 = load i8, i8* %20, align 1, !dbg !15346
  %22 = add i8 %21, 1, !dbg !15346
  store i8 %22, i8* %20, align 1, !dbg !15346
  tail call fastcc void @update_cache(i32 noundef 0) #26, !dbg !15347
  call void @llvm.dbg.value(metadata i32 undef, metadata !13834, metadata !DIExpression()) #24, !dbg !15348
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13839, metadata !DIExpression()) #24, !dbg !15348
  %23 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15350
  br i1 %23, label %25, label %24, !dbg !15351

24:                                               ; preds = %16
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 194) #25, !dbg !15352
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.285, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15352
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 194) #25, !dbg !15352
  unreachable, !dbg !15352

25:                                               ; preds = %16
  %26 = extractvalue { i32, i32 } %1, 0, !dbg !15319
  call void @llvm.dbg.value(metadata i32 %26, metadata !13812, metadata !DIExpression()) #24, !dbg !15321
  call void @llvm.dbg.value(metadata i32 %26, metadata !13806, metadata !DIExpression()) #24, !dbg !15317
  call void @llvm.dbg.value(metadata i32 %26, metadata !15315, metadata !DIExpression()), !dbg !15316
  call void @llvm.dbg.value(metadata i32 undef, metadata !13834, metadata !DIExpression()) #24, !dbg !15348
  call void @llvm.dbg.value(metadata i32 undef, metadata !13848, metadata !DIExpression()) #24, !dbg !15353
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %26) #24, !dbg !15355, !srcloc !13854
  call void @llvm.dbg.value(metadata i32 1, metadata !15313, metadata !DIExpression()), !dbg !15316
  call void @llvm.dbg.value(metadata i32 undef, metadata !15313, metadata !DIExpression()), !dbg !15316
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !15356
  ret void, !dbg !15357
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_swap_next_thread() local_unnamed_addr #13 !dbg !15358 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !15359
  ret %struct.k_thread* %1, !dbg !15360
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_priq_rb_lessthan(%struct.rbnode* nocapture noundef readonly %0, %struct.rbnode* nocapture noundef readonly %1) local_unnamed_addr #13 !dbg !15361 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !15365, metadata !DIExpression()), !dbg !15370
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !15366, metadata !DIExpression()), !dbg !15370
  %3 = bitcast %struct.rbnode* %0 to %struct.k_thread*, !dbg !15371
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !15367, metadata !DIExpression()), !dbg !15370
  %4 = bitcast %struct.rbnode* %1 to %struct.k_thread*, !dbg !15372
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15368, metadata !DIExpression()), !dbg !15370
  %5 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %3, %struct.k_thread* noundef %4) #26, !dbg !15373
  call void @llvm.dbg.value(metadata i32 %5, metadata !15369, metadata !DIExpression()), !dbg !15370
  %6 = icmp sgt i32 %5, 0, !dbg !15374
  br i1 %6, label %17, label %7, !dbg !15376

7:                                                ; preds = %2
  %8 = icmp slt i32 %5, 0, !dbg !15377
  br i1 %8, label %17, label %9, !dbg !15379

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 2, !dbg !15380
  %11 = bitcast %struct.rbnode* %10 to i32*, !dbg !15380
  %12 = load i32, i32* %11, align 8, !dbg !15380
  %13 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %1, i32 2, !dbg !15382
  %14 = bitcast %struct.rbnode* %13 to i32*, !dbg !15382
  %15 = load i32, i32* %14, align 8, !dbg !15382
  %16 = icmp ult i32 %12, %15, !dbg !15383
  br label %17, !dbg !15384

17:                                               ; preds = %7, %2, %9
  %18 = phi i1 [ %16, %9 ], [ true, %2 ], [ false, %7 ], !dbg !15385
  ret i1 %18, !dbg !15386
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_add(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !15387 {
  %3 = alloca %struct._rb_foreach, align 4
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !15404, metadata !DIExpression()), !dbg !15419
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15405, metadata !DIExpression()), !dbg !15419
  %4 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #26, !dbg !15420
  br i1 %4, label %5, label %6, !dbg !15423

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.287, i32 0, i32 0), i32 noundef 1179) #25, !dbg !15424
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.287, i32 0, i32 0), i32 noundef 1179) #25, !dbg !15424
  unreachable, !dbg !15424

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !15426
  %8 = load i32, i32* %7, align 4, !dbg !15427
  %9 = add nsw i32 %8, 1, !dbg !15427
  store i32 %9, i32* %7, align 4, !dbg !15427
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 5, !dbg !15428
  store i32 %8, i32* %10, align 8, !dbg !15429
  %11 = load i32, i32* %7, align 4, !dbg !15430
  %12 = icmp eq i32 %11, 0, !dbg !15431
  br i1 %12, label %13, label %35, !dbg !15432

13:                                               ; preds = %6
  %14 = bitcast %struct._rb_foreach* %3 to i8*, !dbg !15433
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %14) #24, !dbg !15433
  call void @llvm.dbg.declare(metadata %struct._rb_foreach* %3, metadata !15407, metadata !DIExpression()), !dbg !15433
  %15 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !15433
  %16 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 2, !dbg !15433
  %17 = load i32, i32* %16, align 4, !dbg !15433
  %18 = shl i32 %17, 2, !dbg !15433
  %19 = alloca i8, i32 %18, align 8, !dbg !15433
  %20 = bitcast %struct._rb_foreach* %3 to i8**, !dbg !15433
  store i8* %19, i8** %20, align 4, !dbg !15433
  %21 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 1, !dbg !15433
  %22 = alloca i8, i32 %17, align 8, !dbg !15433
  store i8* %22, i8** %21, align 4, !dbg !15433
  %23 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 2, !dbg !15433
  store i32 -1, i32* %23, align 4, !dbg !15433
  %24 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %15, %struct._rb_foreach* noundef nonnull %3) #25, !dbg !15434
  call void @llvm.dbg.value(metadata %struct.rbnode* %24, metadata !15416, metadata !DIExpression()), !dbg !15435
  call void @llvm.dbg.value(metadata %struct.rbnode* %24, metadata !15406, metadata !DIExpression()), !dbg !15419
  %25 = icmp eq %struct.rbnode* %24, null, !dbg !15436
  br i1 %25, label %26, label %27, !dbg !15433

26:                                               ; preds = %27, %13
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %14) #24, !dbg !15436
  br label %35, !dbg !15437

27:                                               ; preds = %13, %27
  %28 = phi %struct.rbnode* [ %33, %27 ], [ %24, %13 ]
  call void @llvm.dbg.value(metadata %struct.rbnode* %28, metadata !15406, metadata !DIExpression()), !dbg !15419
  %29 = load i32, i32* %7, align 4, !dbg !15438
  %30 = add nsw i32 %29, 1, !dbg !15438
  store i32 %30, i32* %7, align 4, !dbg !15438
  %31 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %28, i32 2, !dbg !15440
  %32 = bitcast %struct.rbnode* %31 to i32*, !dbg !15440
  store i32 %29, i32* %32, align 8, !dbg !15441
  %33 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %15, %struct._rb_foreach* noundef nonnull %3) #25, !dbg !15434
  call void @llvm.dbg.value(metadata %struct.rbnode* %33, metadata !15416, metadata !DIExpression()), !dbg !15435
  call void @llvm.dbg.value(metadata %struct.rbnode* %33, metadata !15406, metadata !DIExpression()), !dbg !15419
  %34 = icmp eq %struct.rbnode* %33, null, !dbg !15436
  br i1 %34, label %26, label %27, !dbg !15433, !llvm.loop !15442

35:                                               ; preds = %26, %6
  %36 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !15444
  %37 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !15445
  call void @rb_insert(%struct.rbtree* noundef %36, %struct.rbnode* noundef %37) #25, !dbg !15446
  ret void, !dbg !15447
}

; Function Attrs: optsize
declare !dbg !15448 dso_local %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef, %struct._rb_foreach* noundef) local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !15453 dso_local void @rb_insert(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_remove(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !15456 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !15458, metadata !DIExpression()), !dbg !15460
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15459, metadata !DIExpression()), !dbg !15460
  %3 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #26, !dbg !15461
  br i1 %3, label %4, label %5, !dbg !15464

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.287, i32 0, i32 0), i32 noundef 1200) #25, !dbg !15465
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.287, i32 0, i32 0), i32 noundef 1200) #25, !dbg !15465
  unreachable, !dbg !15465

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !15467
  %7 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !15468
  tail call void @rb_remove(%struct.rbtree* noundef %6, %struct.rbnode* noundef %7) #25, !dbg !15469
  %8 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 0, !dbg !15470
  %9 = load %struct.rbnode*, %struct.rbnode** %8, align 4, !dbg !15470
  %10 = icmp eq %struct.rbnode* %9, null, !dbg !15472
  br i1 %10, label %11, label %13, !dbg !15473

11:                                               ; preds = %5
  %12 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !15474
  store i32 0, i32* %12, align 4, !dbg !15476
  br label %13, !dbg !15477

13:                                               ; preds = %11, %5
  ret void, !dbg !15478
}

; Function Attrs: optsize
declare !dbg !15479 dso_local void @rb_remove(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_priq_rb_best(%struct._priq_rb* noundef %0) local_unnamed_addr #1 !dbg !15480 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !15484, metadata !DIExpression()), !dbg !15487
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15485, metadata !DIExpression()), !dbg !15487
  %2 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !15488
  %3 = tail call fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %2) #26, !dbg !15489
  call void @llvm.dbg.value(metadata %struct.rbnode* %3, metadata !15486, metadata !DIExpression()), !dbg !15487
  %4 = bitcast %struct.rbnode* %3 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15485, metadata !DIExpression()), !dbg !15487
  ret %struct.k_thread* %4, !dbg !15490
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %0) unnamed_addr #1 !dbg !15491 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !15495, metadata !DIExpression()), !dbg !15496
  %2 = tail call %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef %0, i8 noundef zeroext 0) #25, !dbg !15497
  ret %struct.rbnode* %2, !dbg !15498
}

; Function Attrs: optsize
declare !dbg !15499 dso_local %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef, i8 noundef zeroext) local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_mq_best(%struct._priq_mq* noundef readonly %0) local_unnamed_addr #23 !dbg !15502 {
  call void @llvm.dbg.value(metadata %struct._priq_mq* %0, metadata !15512, metadata !DIExpression()), !dbg !15516
  %2 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 1, !dbg !15517
  %3 = load i32, i32* %2, align 4, !dbg !15517
  %4 = icmp eq i32 %3, 0, !dbg !15519
  br i1 %4, label %10, label %5, !dbg !15520

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15513, metadata !DIExpression()), !dbg !15516
  %6 = tail call i32 @llvm.cttz.i32(i32 %3, i1 true), !dbg !15521, !range !5202
  %7 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 0, i32 %6, !dbg !15522
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !15514, metadata !DIExpression()), !dbg !15516
  %8 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.288(%struct._dnode* noundef %7) #26, !dbg !15523
  call void @llvm.dbg.value(metadata %struct._dnode* %8, metadata !15515, metadata !DIExpression()), !dbg !15516
  %9 = bitcast %struct._dnode* %8 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !15513, metadata !DIExpression()), !dbg !15516
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi %struct.k_thread* [ %9, %5 ], [ null, %1 ], !dbg !15516
  ret %struct.k_thread* %11, !dbg !15524
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_unpend_all(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !15525 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !15529, metadata !DIExpression()), !dbg !15532
  call void @llvm.dbg.value(metadata i32 0, metadata !15530, metadata !DIExpression()), !dbg !15532
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head.318(%union.anon* noundef %0) #26, !dbg !15533
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !15531, metadata !DIExpression()), !dbg !15532
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !15534
  br i1 %3, label %8, label %4, !dbg !15535

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %6, %4 ], [ %2, %1 ]
  tail call void @z_unpend_thread(%struct.k_thread* noundef nonnull %5) #26, !dbg !15536
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %5) #26, !dbg !15538
  call void @llvm.dbg.value(metadata i32 1, metadata !15530, metadata !DIExpression()), !dbg !15532
  %6 = tail call fastcc %struct.k_thread* @z_waitq_head.318(%union.anon* noundef %0) #26, !dbg !15533
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !15531, metadata !DIExpression()), !dbg !15532
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !15534
  br i1 %7, label %8, label %4, !dbg !15535, !llvm.loop !15539

8:                                                ; preds = %4, %1
  %9 = phi i32 [ 0, %1 ], [ 1, %4 ], !dbg !15532
  ret i32 %9, !dbg !15541
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head.318(%union.anon* noundef readonly %0) unnamed_addr #13 !dbg !15542 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !15544, metadata !DIExpression()), !dbg !15545
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !15546
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.288(%struct._dnode* noundef %2) #26, !dbg !15547
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !15548
  ret %struct.k_thread* %4, !dbg !15549
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @init_ready_q(%struct._ready_q* noundef %0) local_unnamed_addr #12 !dbg !15550 {
  call void @llvm.dbg.value(metadata %struct._ready_q* %0, metadata !15559, metadata !DIExpression()), !dbg !15560
  %2 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %0, i32 0, i32 1, !dbg !15561
  tail call fastcc void @sys_dlist_init.319(%struct._dnode* noundef nonnull %2) #26, !dbg !15562
  ret void, !dbg !15563
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.319(%struct._dnode* noundef %0) unnamed_addr #12 !dbg !15564 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15568, metadata !DIExpression()), !dbg !15569
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15570
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !15571
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15572
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !15573
  ret void, !dbg !15574
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_init() local_unnamed_addr #1 !dbg !15575 {
  tail call void @init_ready_q(%struct._ready_q* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1)) #26, !dbg !15576
  tail call void @k_sched_time_slice_set(i32 noundef 0, i32 noundef 0) #26, !dbg !15577
  ret void, !dbg !15578
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_impl_k_thread_priority_get(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #13 !dbg !15579 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15584, metadata !DIExpression()), !dbg !15585
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !15586
  %3 = bitcast %union.anon.2* %2 to i8*, !dbg !15586
  %4 = load i8, i8* %3, align 2, !dbg !15586
  %5 = sext i8 %4 to i32, !dbg !15587
  ret i32 %5, !dbg !15588
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15589 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15593, metadata !DIExpression()), !dbg !15596
  call void @llvm.dbg.value(metadata i32 %1, metadata !15594, metadata !DIExpression()), !dbg !15596
  %3 = add i32 %1, 16, !dbg !15597
  %4 = icmp ult i32 %3, 31, !dbg !15597
  br i1 %4, label %6, label %5, !dbg !15597

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([134 x i8], [134 x i8]* @.str.8.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.287, i32 0, i32 0), i32 noundef 1331) #25, !dbg !15601
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.9.325, i32 0, i32 0), i32 noundef %1, i32 noundef 14, i32 noundef -16) #25, !dbg !15601
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.287, i32 0, i32 0), i32 noundef 1331) #25, !dbg !15601
  unreachable, !dbg !15601

6:                                                ; preds = %2
  %7 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #24, !dbg !15603, !srcloc !14579
  call void @llvm.dbg.value(metadata i32 %7, metadata !14575, metadata !DIExpression()) #24, !dbg !15608
  %8 = icmp eq i32 %7, 0, !dbg !15609
  br i1 %8, label %10, label %9, !dbg !15610

9:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.312, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.287, i32 0, i32 0), i32 noundef 1332) #25, !dbg !15611
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.290, i32 0, i32 0)) #25, !dbg !15611
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.287, i32 0, i32 0), i32 noundef 1332) #25, !dbg !15611
  unreachable, !dbg !15611

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15595, metadata !DIExpression()), !dbg !15596
  tail call void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) #26, !dbg !15613
  ret void, !dbg !15614
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_can_yield() local_unnamed_addr #1 !dbg !15615 {
  %1 = tail call fastcc zeroext i1 @k_is_pre_kernel() #26, !dbg !15616
  br i1 %1, label %8, label %2, !dbg !15617

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @k_is_in_isr() #25, !dbg !15618
  br i1 %3, label %8, label %4, !dbg !15619

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15620
  %6 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %5) #26, !dbg !15621
  %7 = xor i1 %6, true, !dbg !15619
  br label %8, !dbg !15619

8:                                                ; preds = %4, %2, %0
  %9 = phi i1 [ false, %2 ], [ false, %0 ], [ %7, %4 ]
  ret i1 %9, !dbg !15622
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @k_is_pre_kernel() unnamed_addr #13 !dbg !15623 {
  %1 = load i8, i8* @z_sys_post_kernel, align 1, !dbg !15624, !range !7854
  %2 = icmp eq i8 %1, 0, !dbg !15624
  ret i1 %2, !dbg !15625
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_yield() local_unnamed_addr #1 !dbg !15626 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #24, !dbg !15629, !srcloc !14579
  call void @llvm.dbg.value(metadata i32 %1, metadata !14575, metadata !DIExpression()) #24, !dbg !15634
  %2 = icmp eq i32 %1, 0, !dbg !15635
  br i1 %2, label %4, label %3, !dbg !15636

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.312, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.287, i32 0, i32 0), i32 noundef 1392) #25, !dbg !15637
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.290, i32 0, i32 0)) #25, !dbg !15637
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.287, i32 0, i32 0), i32 noundef 1392) #25, !dbg !15637
  unreachable, !dbg !15637

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13800, metadata !DIExpression()) #24, !dbg !15639
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15641, !srcloc !13815
  call void @llvm.dbg.value(metadata i32 undef, metadata !13812, metadata !DIExpression()) #24, !dbg !15643
  call void @llvm.dbg.value(metadata i32 undef, metadata !13813, metadata !DIExpression()) #24, !dbg !15643
  call void @llvm.dbg.value(metadata i32 undef, metadata !13806, metadata !DIExpression()) #24, !dbg !15639
  %6 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15644
  br i1 %6, label %8, label %7, !dbg !15645

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 148) #25, !dbg !15646
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.283, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15646
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 148) #25, !dbg !15646
  unreachable, !dbg !15646

8:                                                ; preds = %4
  call void @llvm.dbg.value(metadata i32 undef, metadata !13812, metadata !DIExpression()) #24, !dbg !15643
  call void @llvm.dbg.value(metadata i32 undef, metadata !13806, metadata !DIExpression()) #24, !dbg !15639
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15647
  call void @llvm.dbg.value(metadata i32 undef, metadata !15628, metadata !DIExpression()), !dbg !15648
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15649
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !13994, metadata !DIExpression()) #24, !dbg !15652
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 3, !dbg !15654
  %11 = load i8, i8* %10, align 1, !dbg !15655
  %12 = and i8 %11, 127, !dbg !15655
  store i8 %12, i8* %10, align 1, !dbg !15655
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !14002, metadata !DIExpression()) #24, !dbg !15656
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %9) #25, !dbg !15658
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15659
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !14011, metadata !DIExpression()) #24, !dbg !15660
  %14 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 3, !dbg !15662
  %15 = load i8, i8* %14, align 1, !dbg !15663
  %16 = or i8 %15, -128, !dbg !15663
  store i8 %16, i8* %14, align 1, !dbg !15663
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !14018, metadata !DIExpression()) #24, !dbg !15664
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14025, metadata !DIExpression()) #24, !dbg !15666
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !14031, metadata !DIExpression()) #24, !dbg !15666
  %17 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %13) #25, !dbg !15668
  br i1 %17, label %18, label %19, !dbg !15669

18:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.287, i32 0, i32 0), i32 noundef 186) #25, !dbg !15670
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.287, i32 0, i32 0), i32 noundef 186) #25, !dbg !15670
  unreachable, !dbg !15670

19:                                               ; preds = %8
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.288(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !15671
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !14032, metadata !DIExpression()) #24, !dbg !15666
  %21 = icmp eq %struct._dnode* %20, null, !dbg !15672
  br i1 %21, label %32, label %22, !dbg !15671

22:                                               ; preds = %19, %29
  %23 = phi %struct._dnode* [ %30, %29 ], [ %20, %19 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %23, metadata !14032, metadata !DIExpression()) #24, !dbg !15666
  %24 = bitcast %struct._dnode* %23 to %struct.k_thread*, !dbg !15673
  call void @llvm.dbg.value(metadata %struct.k_thread* %24, metadata !14032, metadata !DIExpression()) #24, !dbg !15666
  %25 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %13, %struct.k_thread* noundef nonnull %24) #25, !dbg !15674
  %26 = icmp sgt i32 %25, 0, !dbg !15675
  br i1 %26, label %27, label %29, !dbg !15676

27:                                               ; preds = %22
  %28 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 0, i32 0, !dbg !15677
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %23, %struct._dnode* noundef %28) #25, !dbg !15678
  br label %34, !dbg !15679

29:                                               ; preds = %22
  %30 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %23) #25, !dbg !15672
  call void @llvm.dbg.value(metadata %struct._dnode* %30, metadata !14032, metadata !DIExpression()) #24, !dbg !15666
  %31 = icmp eq %struct._dnode* %30, null, !dbg !15672
  br i1 %31, label %32, label %22, !dbg !15671, !llvm.loop !15680

32:                                               ; preds = %29, %19
  %33 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 0, i32 0, !dbg !15682
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %33) #25, !dbg !15683
  br label %34, !dbg !15684

34:                                               ; preds = %27, %32
  tail call fastcc void @update_cache(i32 noundef 1) #26, !dbg !15685
  call void @llvm.dbg.value(metadata i32 undef, metadata !14523, metadata !DIExpression()) #24, !dbg !15686
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14528, metadata !DIExpression()) #24, !dbg !15686
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14532, metadata !DIExpression()) #24, !dbg !15688
  %35 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15690
  br i1 %35, label %37, label %36, !dbg !15691

36:                                               ; preds = %34
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 225) #25, !dbg !15692
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.285, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15692
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 225) #25, !dbg !15692
  unreachable, !dbg !15692

37:                                               ; preds = %34
  %38 = extractvalue { i32, i32 } %5, 0, !dbg !15641
  call void @llvm.dbg.value(metadata i32 %38, metadata !13812, metadata !DIExpression()) #24, !dbg !15643
  call void @llvm.dbg.value(metadata i32 %38, metadata !13806, metadata !DIExpression()) #24, !dbg !15639
  call void @llvm.dbg.value(metadata i32 %38, metadata !15628, metadata !DIExpression()), !dbg !15648
  call void @llvm.dbg.value(metadata i32 undef, metadata !14523, metadata !DIExpression()) #24, !dbg !15686
  %39 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %38) #25, !dbg !15693
  ret void, !dbg !15694
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sleep([1 x i64] %0) local_unnamed_addr #1 !dbg !15695 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !15699, metadata !DIExpression()), !dbg !15702
  %3 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #24, !dbg !15703, !srcloc !14579
  call void @llvm.dbg.value(metadata i32 %3, metadata !14575, metadata !DIExpression()) #24, !dbg !15708
  %4 = icmp eq i32 %3, 0, !dbg !15709
  br i1 %4, label %6, label %5, !dbg !15710

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.312, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.287, i32 0, i32 0), i32 noundef 1463) #25, !dbg !15711
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.290, i32 0, i32 0)) #25, !dbg !15711
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.287, i32 0, i32 0), i32 noundef 1463) #25, !dbg !15711
  unreachable, !dbg !15711

6:                                                ; preds = %1
  %7 = icmp eq i64 %2, -1, !dbg !15713
  br i1 %7, label %8, label %10, !dbg !15715

8:                                                ; preds = %6
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15716
  tail call fastcc void @k_thread_suspend(%struct.k_thread* noundef %9) #26, !dbg !15718
  br label %15, !dbg !15719

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata i64 %2, metadata !15700, metadata !DIExpression()), !dbg !15702
  %11 = tail call fastcc i32 @z_tick_sleep(i64 noundef %2) #26, !dbg !15720
  %12 = sext i32 %11 to i64, !dbg !15720
  call void @llvm.dbg.value(metadata i64 %12, metadata !15700, metadata !DIExpression()), !dbg !15702
  %13 = tail call fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %12) #26, !dbg !15721
  %14 = trunc i64 %13 to i32, !dbg !15721
  call void @llvm.dbg.value(metadata i32 %14, metadata !15701, metadata !DIExpression()), !dbg !15702
  br label %15

15:                                               ; preds = %10, %8
  %16 = phi i32 [ -1, %8 ], [ %14, %10 ], !dbg !15702
  ret i32 %16, !dbg !15722
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_suspend(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15723 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15727, metadata !DIExpression()), !dbg !15728
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !15729, !srcloc !15731
  tail call void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) #26, !dbg !15732
  ret void, !dbg !15733
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_tick_sleep(i64 noundef %0) unnamed_addr #1 !dbg !15734 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !15738, metadata !DIExpression()), !dbg !15742
  %2 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #24, !dbg !15743, !srcloc !14579
  call void @llvm.dbg.value(metadata i32 %2, metadata !14575, metadata !DIExpression()) #24, !dbg !15748
  %3 = icmp eq i32 %2, 0, !dbg !15749
  br i1 %3, label %5, label %4, !dbg !15750

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.312, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.287, i32 0, i32 0), i32 noundef 1420) #25, !dbg !15751
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.290, i32 0, i32 0)) #25, !dbg !15751
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.287, i32 0, i32 0), i32 noundef 1420) #25, !dbg !15751
  unreachable, !dbg !15751

5:                                                ; preds = %1
  %6 = icmp eq i64 %0, 0, !dbg !15753
  br i1 %6, label %7, label %8, !dbg !15755

7:                                                ; preds = %5
  tail call fastcc void @k_yield() #26, !dbg !15756
  br label %43, !dbg !15758

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i64 %0, metadata !15740, metadata !DIExpression()), !dbg !15742
  %9 = icmp sgt i64 %0, -3, !dbg !15759
  br i1 %9, label %10, label %14, !dbg !15761

10:                                               ; preds = %8
  %11 = tail call i32 @sys_clock_tick_get_32() #25, !dbg !15762
  %12 = trunc i64 %0 to i32, !dbg !15764
  %13 = add i32 %11, %12, !dbg !15764
  call void @llvm.dbg.value(metadata i32 %13, metadata !15739, metadata !DIExpression()), !dbg !15742
  br label %17, !dbg !15765

14:                                               ; preds = %8
  %15 = trunc i64 %0 to i32, !dbg !15766
  %16 = sub i32 -2, %15, !dbg !15766
  call void @llvm.dbg.value(metadata i32 %16, metadata !15739, metadata !DIExpression()), !dbg !15742
  br label %17

17:                                               ; preds = %14, %10
  %18 = phi i32 [ %13, %10 ], [ %16, %14 ], !dbg !15768
  call void @llvm.dbg.value(metadata i32 %18, metadata !15739, metadata !DIExpression()), !dbg !15742
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13800, metadata !DIExpression()) #24, !dbg !15769
  %19 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15771, !srcloc !13815
  call void @llvm.dbg.value(metadata i32 undef, metadata !13812, metadata !DIExpression()) #24, !dbg !15773
  call void @llvm.dbg.value(metadata i32 undef, metadata !13813, metadata !DIExpression()) #24, !dbg !15773
  call void @llvm.dbg.value(metadata i32 undef, metadata !13806, metadata !DIExpression()) #24, !dbg !15769
  %20 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15774
  br i1 %20, label %22, label %21, !dbg !15775

21:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 148) #25, !dbg !15776
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.283, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15776
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 148) #25, !dbg !15776
  unreachable, !dbg !15776

22:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 undef, metadata !13812, metadata !DIExpression()) #24, !dbg !15773
  call void @llvm.dbg.value(metadata i32 undef, metadata !13806, metadata !DIExpression()) #24, !dbg !15769
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15777
  call void @llvm.dbg.value(metadata i32 undef, metadata !15741, metadata !DIExpression()), !dbg !15742
  %23 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15778
  store %struct.k_thread* %23, %struct.k_thread** @pending_current, align 4, !dbg !15779
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %23) #26, !dbg !15780
  %24 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15781
  %25 = insertvalue [1 x i64] poison, i64 %0, 0, !dbg !15782
  tail call fastcc void @z_add_thread_timeout.301(%struct.k_thread* noundef %24, [1 x i64] %25) #26, !dbg !15782
  %26 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15783
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %26) #26, !dbg !15784
  call void @llvm.dbg.value(metadata i32 undef, metadata !14523, metadata !DIExpression()) #24, !dbg !15785
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14528, metadata !DIExpression()) #24, !dbg !15785
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14532, metadata !DIExpression()) #24, !dbg !15787
  %27 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15789
  br i1 %27, label %29, label %28, !dbg !15790

28:                                               ; preds = %22
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 225) #25, !dbg !15791
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.285, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15791
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 225) #25, !dbg !15791
  unreachable, !dbg !15791

29:                                               ; preds = %22
  %30 = extractvalue { i32, i32 } %19, 0, !dbg !15771
  call void @llvm.dbg.value(metadata i32 %30, metadata !13812, metadata !DIExpression()) #24, !dbg !15773
  call void @llvm.dbg.value(metadata i32 %30, metadata !13806, metadata !DIExpression()) #24, !dbg !15769
  call void @llvm.dbg.value(metadata i32 %30, metadata !15741, metadata !DIExpression()), !dbg !15742
  call void @llvm.dbg.value(metadata i32 undef, metadata !14523, metadata !DIExpression()) #24, !dbg !15785
  %31 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %30) #25, !dbg !15792
  %32 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15793
  %33 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %32, i32 noundef 16) #26, !dbg !15793
  br i1 %33, label %34, label %35, !dbg !15796

34:                                               ; preds = %29
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @.str.23.328, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.287, i32 0, i32 0), i32 noundef 1448) #25, !dbg !15797
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.290, i32 0, i32 0)) #25, !dbg !15797
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.287, i32 0, i32 0), i32 noundef 1448) #25, !dbg !15797
  unreachable, !dbg !15797

35:                                               ; preds = %29
  %36 = zext i32 %18 to i64, !dbg !15799
  %37 = tail call i32 @sys_clock_tick_get_32() #25, !dbg !15800
  %38 = zext i32 %37 to i64, !dbg !15800
  %39 = sub nsw i64 %36, %38, !dbg !15801
  call void @llvm.dbg.value(metadata i64 %39, metadata !15738, metadata !DIExpression()), !dbg !15742
  %40 = icmp sgt i64 %39, 0, !dbg !15802
  %41 = select i1 %40, i64 %39, i64 0, !dbg !15802
  %42 = trunc i64 %41 to i32, !dbg !15802
  br label %43

43:                                               ; preds = %35, %7
  %44 = phi i32 [ 0, %7 ], [ %42, %35 ], !dbg !15742
  ret i32 %44, !dbg !15803
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %0) unnamed_addr #5 !dbg !15804 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !15806, metadata !DIExpression()), !dbg !15807
  call void @llvm.dbg.value(metadata i64 %0, metadata !13862, metadata !DIExpression()), !dbg !15808
  call void @llvm.dbg.value(metadata i32 10000, metadata !13865, metadata !DIExpression()), !dbg !15808
  call void @llvm.dbg.value(metadata i32 1000, metadata !13866, metadata !DIExpression()), !dbg !15808
  call void @llvm.dbg.value(metadata i8 1, metadata !13867, metadata !DIExpression()), !dbg !15808
  call void @llvm.dbg.value(metadata i1 false, metadata !13868, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15808
  call void @llvm.dbg.value(metadata i1 false, metadata !13869, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15808
  call void @llvm.dbg.value(metadata i8 0, metadata !13870, metadata !DIExpression()), !dbg !15808
  call void @llvm.dbg.value(metadata i1 false, metadata !13871, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15808
  call void @llvm.dbg.value(metadata i1 true, metadata !13872, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15808
  call void @llvm.dbg.value(metadata i64 0, metadata !13873, metadata !DIExpression()), !dbg !15808
  call void @llvm.dbg.value(metadata i64 0, metadata !13873, metadata !DIExpression()), !dbg !15808
  call void @llvm.dbg.value(metadata i64 %0, metadata !13862, metadata !DIExpression()), !dbg !15808
  %2 = udiv i64 %0, 10, !dbg !15810
  ret i64 %2, !dbg !15814
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_yield() unnamed_addr #1 !dbg !15815 {
  tail call void asm sideeffect "", "~{memory}"() #24, !dbg !15816, !srcloc !15818
  tail call void @z_impl_k_yield() #26, !dbg !15819
  ret void, !dbg !15820
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_usleep(i32 noundef %0) local_unnamed_addr #1 !dbg !15821 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15825, metadata !DIExpression()), !dbg !15827
  %2 = sext i32 %0 to i64, !dbg !15828
  %3 = tail call fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %2) #26, !dbg !15829
  call void @llvm.dbg.value(metadata i64 %3, metadata !15826, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15827
  %4 = shl i64 %3, 32, !dbg !15830
  %5 = ashr exact i64 %4, 32, !dbg !15830
  %6 = tail call fastcc i32 @z_tick_sleep(i64 noundef %5) #26, !dbg !15831
  call void @llvm.dbg.value(metadata i32 %6, metadata !15826, metadata !DIExpression()), !dbg !15827
  %7 = sext i32 %6 to i64, !dbg !15832
  %8 = tail call fastcc i64 @k_ticks_to_us_floor64(i64 noundef %7) #26, !dbg !15833
  %9 = trunc i64 %8 to i32, !dbg !15833
  ret i32 %9, !dbg !15834
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %0) unnamed_addr #5 !dbg !15835 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !15837, metadata !DIExpression()), !dbg !15838
  call void @llvm.dbg.value(metadata i64 %0, metadata !13862, metadata !DIExpression()), !dbg !15839
  call void @llvm.dbg.value(metadata i32 1000000, metadata !13865, metadata !DIExpression()), !dbg !15839
  call void @llvm.dbg.value(metadata i32 10000, metadata !13866, metadata !DIExpression()), !dbg !15839
  call void @llvm.dbg.value(metadata i8 1, metadata !13867, metadata !DIExpression()), !dbg !15839
  call void @llvm.dbg.value(metadata i1 false, metadata !13868, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15839
  call void @llvm.dbg.value(metadata i1 true, metadata !13869, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15839
  call void @llvm.dbg.value(metadata i8 0, metadata !13870, metadata !DIExpression()), !dbg !15839
  call void @llvm.dbg.value(metadata i1 false, metadata !13871, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15839
  call void @llvm.dbg.value(metadata i1 true, metadata !13872, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15839
  call void @llvm.dbg.value(metadata i64 0, metadata !13873, metadata !DIExpression()), !dbg !15839
  call void @llvm.dbg.value(metadata i64 0, metadata !13873, metadata !DIExpression()), !dbg !15839
  %2 = add i64 %0, 99, !dbg !15841
  call void @llvm.dbg.value(metadata i64 %2, metadata !13862, metadata !DIExpression()), !dbg !15839
  %3 = udiv i64 %2, 100, !dbg !15842
  ret i64 %3, !dbg !15843
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_us_floor64(i64 noundef %0) unnamed_addr #5 !dbg !15844 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !15846, metadata !DIExpression()), !dbg !15847
  call void @llvm.dbg.value(metadata i64 %0, metadata !13862, metadata !DIExpression()), !dbg !15848
  call void @llvm.dbg.value(metadata i32 10000, metadata !13865, metadata !DIExpression()), !dbg !15848
  call void @llvm.dbg.value(metadata i32 1000000, metadata !13866, metadata !DIExpression()), !dbg !15848
  call void @llvm.dbg.value(metadata i8 1, metadata !13867, metadata !DIExpression()), !dbg !15848
  call void @llvm.dbg.value(metadata i1 false, metadata !13868, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15848
  call void @llvm.dbg.value(metadata i1 false, metadata !13869, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15848
  call void @llvm.dbg.value(metadata i8 0, metadata !13870, metadata !DIExpression()), !dbg !15848
  call void @llvm.dbg.value(metadata i1 true, metadata !13871, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15848
  call void @llvm.dbg.value(metadata i1 false, metadata !13872, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15848
  call void @llvm.dbg.value(metadata i64 0, metadata !13873, metadata !DIExpression()), !dbg !15848
  call void @llvm.dbg.value(metadata i64 0, metadata !13873, metadata !DIExpression()), !dbg !15848
  %2 = mul i64 %0, 100, !dbg !15850
  ret i64 %2, !dbg !15852
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_wakeup(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15853 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15855, metadata !DIExpression()), !dbg !15856
  %2 = tail call fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* noundef %0) #26, !dbg !15857
  br i1 %2, label %14, label %3, !dbg !15859

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #26, !dbg !15860
  %5 = icmp slt i32 %4, 0, !dbg !15862
  br i1 %5, label %6, label %10, !dbg !15863

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15864
  %8 = load i8, i8* %7, align 1, !dbg !15864
  %9 = icmp eq i8 %8, 16, !dbg !15867
  br i1 %9, label %10, label %14, !dbg !15868

10:                                               ; preds = %6, %3
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #26, !dbg !15869
  tail call void @z_ready_thread(%struct.k_thread* noundef %0) #26, !dbg !15870
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #24, !dbg !15871, !srcloc !14579
  call void @llvm.dbg.value(metadata i32 %11, metadata !14575, metadata !DIExpression()) #24, !dbg !15875
  %12 = icmp eq i32 %11, 0, !dbg !15876
  br i1 %12, label %13, label %14, !dbg !15877

13:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !15878
  br label %14, !dbg !15880

14:                                               ; preds = %6, %1, %13, %10
  ret void, !dbg !15881
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #13 !dbg !15882 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15884, metadata !DIExpression()), !dbg !15885
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15886
  %3 = load i8, i8* %2, align 1, !dbg !15886
  %4 = and i8 %3, 2, !dbg !15887
  %5 = icmp ne i8 %4, 0, !dbg !15888
  ret i1 %5, !dbg !15889
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_impl_z_current_get() local_unnamed_addr #13 !dbg !15890 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15895
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15894, metadata !DIExpression()), !dbg !15896
  ret %struct.k_thread* %1, !dbg !15897
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_is_preempt_thread() local_unnamed_addr #1 !dbg !15898 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #24, !dbg !15901, !srcloc !14579
  call void @llvm.dbg.value(metadata i32 %1, metadata !14575, metadata !DIExpression()) #24, !dbg !15904
  %2 = icmp eq i32 %1, 0, !dbg !15905
  br i1 %2, label %3, label %8, !dbg !15906

3:                                                ; preds = %0
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15907
  %5 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %4) #26, !dbg !15908
  %6 = icmp ne i32 %5, 0, !dbg !15906
  %7 = zext i1 %6 to i32
  br label %8

8:                                                ; preds = %3, %0
  %9 = phi i32 [ 0, %0 ], [ %7, %3 ]
  ret i32 %9, !dbg !15909
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15910 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15912, metadata !DIExpression()), !dbg !15914
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13800, metadata !DIExpression()) #24, !dbg !15915
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !15917, !srcloc !13815
  call void @llvm.dbg.value(metadata i32 undef, metadata !13812, metadata !DIExpression()) #24, !dbg !15919
  call void @llvm.dbg.value(metadata i32 undef, metadata !13813, metadata !DIExpression()) #24, !dbg !15919
  call void @llvm.dbg.value(metadata i32 undef, metadata !13806, metadata !DIExpression()) #24, !dbg !15915
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15920
  br i1 %3, label %5, label %4, !dbg !15921

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 148) #25, !dbg !15922
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.283, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15922
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 148) #25, !dbg !15922
  unreachable, !dbg !15922

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !15917
  call void @llvm.dbg.value(metadata i32 %6, metadata !13812, metadata !DIExpression()) #24, !dbg !15919
  call void @llvm.dbg.value(metadata i32 %6, metadata !13806, metadata !DIExpression()) #24, !dbg !15915
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15923
  call void @llvm.dbg.value(metadata i32 %6, metadata !15913, metadata !DIExpression()), !dbg !15914
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !15924
  %8 = load i8, i8* %7, align 4, !dbg !15924
  %9 = and i8 %8, 1, !dbg !15926
  %10 = icmp eq i8 %9, 0, !dbg !15927
  br i1 %10, label %15, label %11, !dbg !15928

11:                                               ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !13834, metadata !DIExpression()) #24, !dbg !15929
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13839, metadata !DIExpression()) #24, !dbg !15929
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15932
  br i1 %12, label %14, label %13, !dbg !15933

13:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 194) #25, !dbg !15934
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.285, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15934
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 194) #25, !dbg !15934
  unreachable, !dbg !15934

14:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %6, metadata !13834, metadata !DIExpression()) #24, !dbg !15929
  call void @llvm.dbg.value(metadata i32 %6, metadata !13848, metadata !DIExpression()) #24, !dbg !15935
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #24, !dbg !15937, !srcloc !13854
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.333, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.287, i32 0, i32 0), i32 noundef 1731) #25, !dbg !15938
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.11.334, i32 0, i32 0), %struct.k_thread* noundef nonnull %0) #25, !dbg !15938
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.287, i32 0, i32 0), i32 noundef 1731) #25, !dbg !15938
  unreachable, !dbg !15938

15:                                               ; preds = %5
  %16 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15942
  %17 = load i8, i8* %16, align 1, !dbg !15942
  %18 = and i8 %17, 8, !dbg !15944
  %19 = icmp eq i8 %18, 0, !dbg !15945
  br i1 %19, label %24, label %20, !dbg !15946

20:                                               ; preds = %15
  call void @llvm.dbg.value(metadata i32 undef, metadata !13834, metadata !DIExpression()) #24, !dbg !15947
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13839, metadata !DIExpression()) #24, !dbg !15947
  %21 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15950
  br i1 %21, label %23, label %22, !dbg !15951

22:                                               ; preds = %20
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 194) #25, !dbg !15952
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.285, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15952
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 194) #25, !dbg !15952
  unreachable, !dbg !15952

23:                                               ; preds = %20
  call void @llvm.dbg.value(metadata i32 %6, metadata !13834, metadata !DIExpression()) #24, !dbg !15947
  call void @llvm.dbg.value(metadata i32 %6, metadata !13848, metadata !DIExpression()) #24, !dbg !15953
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #24, !dbg !15955, !srcloc !13854
  br label %39, !dbg !15956

24:                                               ; preds = %15
  tail call fastcc void @end_thread(%struct.k_thread* noundef nonnull %0) #26, !dbg !15957
  %25 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15958
  %26 = icmp eq %struct.k_thread* %25, %0, !dbg !15960
  br i1 %26, label %27, label %35, !dbg !15961

27:                                               ; preds = %24
  %28 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #24, !dbg !15962, !srcloc !14579
  call void @llvm.dbg.value(metadata i32 %28, metadata !14575, metadata !DIExpression()) #24, !dbg !15965
  %29 = icmp eq i32 %28, 0, !dbg !15966
  br i1 %29, label %30, label %35, !dbg !15967

30:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 undef, metadata !14523, metadata !DIExpression()) #24, !dbg !15968
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14528, metadata !DIExpression()) #24, !dbg !15968
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14532, metadata !DIExpression()) #24, !dbg !15971
  %31 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15973
  br i1 %31, label %33, label %32, !dbg !15974

32:                                               ; preds = %30
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 225) #25, !dbg !15975
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.285, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15975
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 225) #25, !dbg !15975
  unreachable, !dbg !15975

33:                                               ; preds = %30
  call void @llvm.dbg.value(metadata i32 %6, metadata !14523, metadata !DIExpression()) #24, !dbg !15968
  %34 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %6) #25, !dbg !15976
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.333, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.287, i32 0, i32 0), i32 noundef 1778) #25, !dbg !15977
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.12.335, i32 0, i32 0)) #25, !dbg !15977
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.287, i32 0, i32 0), i32 noundef 1778) #25, !dbg !15977
  unreachable, !dbg !15977

35:                                               ; preds = %27, %24
  call void @llvm.dbg.value(metadata i32 undef, metadata !13834, metadata !DIExpression()) #24, !dbg !15981
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13839, metadata !DIExpression()) #24, !dbg !15981
  %36 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15983
  br i1 %36, label %38, label %37, !dbg !15984

37:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 194) #25, !dbg !15985
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.285, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15985
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 194) #25, !dbg !15985
  unreachable, !dbg !15985

38:                                               ; preds = %35
  call void @llvm.dbg.value(metadata i32 %6, metadata !13834, metadata !DIExpression()) #24, !dbg !15981
  call void @llvm.dbg.value(metadata i32 %6, metadata !13848, metadata !DIExpression()) #24, !dbg !15986
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #24, !dbg !15988, !srcloc !13854
  br label %39, !dbg !15989

39:                                               ; preds = %38, %23
  ret void, !dbg !15989
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @end_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15990 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15992, metadata !DIExpression()), !dbg !15993
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15994
  %3 = load i8, i8* %2, align 1, !dbg !15994
  %4 = and i8 %3, 8, !dbg !15996
  %5 = icmp eq i8 %4, 0, !dbg !15997
  br i1 %5, label %6, label %20, !dbg !15998

6:                                                ; preds = %1
  %7 = and i8 %3, -41, !dbg !15999
  %8 = or i8 %7, 8, !dbg !15999
  store i8 %8, i8* %2, align 1, !dbg !15999
  %9 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef nonnull %0) #26, !dbg !16001
  br i1 %9, label %10, label %12, !dbg !16003

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13994, metadata !DIExpression()) #24, !dbg !16004
  %11 = and i8 %8, 95, !dbg !16007
  store i8 %11, i8* %2, align 1, !dbg !16007
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14002, metadata !DIExpression()) #24, !dbg !16008
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef nonnull %0) #25, !dbg !16010
  br label %12, !dbg !16011

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16012
  %14 = load %union.anon*, %union.anon** %13, align 8, !dbg !16012
  %15 = icmp eq %union.anon* %14, null, !dbg !16014
  br i1 %15, label %17, label %16, !dbg !16015

16:                                               ; preds = %12
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %0) #26, !dbg !16016
  br label %17, !dbg !16018

17:                                               ; preds = %16, %12
  %18 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %0) #26, !dbg !16019
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !16020
  tail call fastcc void @unpend_all(%union.anon* noundef nonnull %19) #26, !dbg !16021
  tail call fastcc void @update_cache(i32 noundef 1) #26, !dbg !16022
  br label %20, !dbg !16023

20:                                               ; preds = %17, %1
  ret void, !dbg !16024
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_all(%union.anon* noundef %0) unnamed_addr #1 !dbg !16025 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !16029, metadata !DIExpression()), !dbg !16031
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head.318(%union.anon* noundef %0) #26, !dbg !16032
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !16030, metadata !DIExpression()), !dbg !16031
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !16033
  br i1 %3, label %10, label %4, !dbg !16034

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %8, %4 ], [ %2, %1 ]
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %5) #26, !dbg !16035
  %6 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %5) #26, !dbg !16037
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !16038, metadata !DIExpression()), !dbg !16044
  call void @llvm.dbg.value(metadata i32 0, metadata !16043, metadata !DIExpression()), !dbg !16044
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 6, i32 1, !dbg !16046
  store i32 0, i32* %7, align 4, !dbg !16047
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %5) #26, !dbg !16048
  %8 = tail call fastcc %struct.k_thread* @z_waitq_head.318(%union.anon* noundef %0) #26, !dbg !16032
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !16030, metadata !DIExpression()), !dbg !16031
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !16033
  br i1 %9, label %10, label %4, !dbg !16034, !llvm.loop !16049

10:                                               ; preds = %4, %1
  ret void, !dbg !16051
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_join(%struct.k_thread* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !16052 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16057, metadata !DIExpression()), !dbg !16060
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16056, metadata !DIExpression()), !dbg !16060
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13800, metadata !DIExpression()) #24, !dbg !16061
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !16063, !srcloc !13815
  call void @llvm.dbg.value(metadata i32 undef, metadata !13812, metadata !DIExpression()) #24, !dbg !16065
  call void @llvm.dbg.value(metadata i32 undef, metadata !13813, metadata !DIExpression()) #24, !dbg !16065
  call void @llvm.dbg.value(metadata i32 undef, metadata !13806, metadata !DIExpression()) #24, !dbg !16061
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16066
  br i1 %4, label %6, label %5, !dbg !16067

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 148) #25, !dbg !16068
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.283, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16068
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 148) #25, !dbg !16068
  unreachable, !dbg !16068

6:                                                ; preds = %2
  %7 = extractvalue { i32, i32 } %3, 0, !dbg !16063
  call void @llvm.dbg.value(metadata i32 %7, metadata !13812, metadata !DIExpression()) #24, !dbg !16065
  call void @llvm.dbg.value(metadata i32 %7, metadata !13806, metadata !DIExpression()) #24, !dbg !16061
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16069
  call void @llvm.dbg.value(metadata i32 %7, metadata !16058, metadata !DIExpression()), !dbg !16060
  call void @llvm.dbg.value(metadata i32 0, metadata !16059, metadata !DIExpression()), !dbg !16060
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16070
  %9 = load i8, i8* %8, align 1, !dbg !16070
  %10 = and i8 %9, 8, !dbg !16072
  %11 = icmp eq i8 %10, 0, !dbg !16073
  br i1 %11, label %12, label %35, !dbg !16074

12:                                               ; preds = %6
  %13 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %13, metadata !16057, metadata !DIExpression()), !dbg !16060
  %14 = icmp eq i64 %13, 0, !dbg !16075
  br i1 %14, label %35, label %15, !dbg !16077

15:                                               ; preds = %12
  %16 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16078
  %17 = icmp eq %struct.k_thread* %16, %0, !dbg !16080
  br i1 %17, label %35, label %18, !dbg !16081

18:                                               ; preds = %15
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16082
  %20 = load %union.anon*, %union.anon** %19, align 8, !dbg !16082
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %16, i32 0, i32 3, !dbg !16083
  %22 = icmp eq %union.anon* %20, %21, !dbg !16084
  br i1 %22, label %35, label %23, !dbg !16085

23:                                               ; preds = %18
  %24 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #24, !dbg !16086, !srcloc !14579
  call void @llvm.dbg.value(metadata i32 %24, metadata !14575, metadata !DIExpression()) #24, !dbg !16092
  %25 = icmp eq i32 %24, 0, !dbg !16093
  br i1 %25, label %27, label %26, !dbg !16094

26:                                               ; preds = %23
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.312, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.287, i32 0, i32 0), i32 noundef 1809) #25, !dbg !16095
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.13.336, i32 0, i32 0)) #25, !dbg !16095
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.287, i32 0, i32 0), i32 noundef 1809) #25, !dbg !16095
  unreachable, !dbg !16095

27:                                               ; preds = %23
  %28 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16097
  %29 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !16098
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %28, %union.anon* noundef nonnull %29) #26, !dbg !16099
  %30 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16100
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %30, [1 x i64] %1) #26, !dbg !16101
  call void @llvm.dbg.value(metadata i32 undef, metadata !14523, metadata !DIExpression()) #24, !dbg !16102
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14528, metadata !DIExpression()) #24, !dbg !16102
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14532, metadata !DIExpression()) #24, !dbg !16104
  %31 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16106
  br i1 %31, label %33, label %32, !dbg !16107

32:                                               ; preds = %27
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 225) #25, !dbg !16108
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.285, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16108
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 225) #25, !dbg !16108
  unreachable, !dbg !16108

33:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 %7, metadata !14523, metadata !DIExpression()) #24, !dbg !16102
  %34 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %7) #25, !dbg !16109
  call void @llvm.dbg.value(metadata i32 %34, metadata !16059, metadata !DIExpression()), !dbg !16060
  br label %40, !dbg !16110

35:                                               ; preds = %15, %18, %12, %6
  %36 = phi i32 [ 0, %6 ], [ -16, %12 ], [ -45, %18 ], [ -45, %15 ], !dbg !16111
  call void @llvm.dbg.value(metadata i32 %36, metadata !16059, metadata !DIExpression()), !dbg !16060
  call void @llvm.dbg.value(metadata i32 undef, metadata !13834, metadata !DIExpression()) #24, !dbg !16112
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13839, metadata !DIExpression()) #24, !dbg !16112
  %37 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16114
  br i1 %37, label %39, label %38, !dbg !16115

38:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 194) #25, !dbg !16116
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.285, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16116
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 194) #25, !dbg !16116
  unreachable, !dbg !16116

39:                                               ; preds = %35
  call void @llvm.dbg.value(metadata i32 %7, metadata !13834, metadata !DIExpression()) #24, !dbg !16112
  call void @llvm.dbg.value(metadata i32 %7, metadata !13848, metadata !DIExpression()) #24, !dbg !16117
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %7) #24, !dbg !16119, !srcloc !13854
  br label %40, !dbg !16120

40:                                               ; preds = %39, %33
  %41 = phi i32 [ %36, %39 ], [ %34, %33 ], !dbg !16060
  ret i32 %41, !dbg !16121
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_sched_wake(%union.anon* noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !16122 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !16126, metadata !DIExpression()), !dbg !16134
  call void @llvm.dbg.value(metadata i32 %1, metadata !16127, metadata !DIExpression()), !dbg !16134
  call void @llvm.dbg.value(metadata i8* %2, metadata !16128, metadata !DIExpression()), !dbg !16134
  call void @llvm.dbg.value(metadata i8 0, metadata !16130, metadata !DIExpression()), !dbg !16134
  call void @llvm.dbg.value(metadata i32 0, metadata !16131, metadata !DIExpression()), !dbg !16135
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13800, metadata !DIExpression()) #24, !dbg !16136
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !16138, !srcloc !13815
  call void @llvm.dbg.value(metadata i32 undef, metadata !13812, metadata !DIExpression()) #24, !dbg !16140
  call void @llvm.dbg.value(metadata i32 undef, metadata !13813, metadata !DIExpression()) #24, !dbg !16140
  call void @llvm.dbg.value(metadata i32 undef, metadata !13806, metadata !DIExpression()) #24, !dbg !16136
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16141
  br i1 %5, label %7, label %6, !dbg !16142

6:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 148) #25, !dbg !16143
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.283, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16143
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 148) #25, !dbg !16143
  unreachable, !dbg !16143

7:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !13812, metadata !DIExpression()) #24, !dbg !16140
  call void @llvm.dbg.value(metadata i32 undef, metadata !13806, metadata !DIExpression()) #24, !dbg !16136
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16144
  call void @llvm.dbg.value(metadata i32 undef, metadata !16133, metadata !DIExpression()), !dbg !16135
  call void @llvm.dbg.value(metadata i8 poison, metadata !16130, metadata !DIExpression()), !dbg !16134
  call void @llvm.dbg.value(metadata i32 undef, metadata !16131, metadata !DIExpression()), !dbg !16135
  %8 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %9 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %8) #26, !dbg !16145
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !16129, metadata !DIExpression()), !dbg !16134
  %10 = icmp eq %struct.k_thread* %9, null, !dbg !16148
  br i1 %10, label %15, label %11, !dbg !16150

11:                                               ; preds = %7
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !16151, metadata !DIExpression()), !dbg !16158
  call void @llvm.dbg.value(metadata i32 %1, metadata !16156, metadata !DIExpression()), !dbg !16158
  call void @llvm.dbg.value(metadata i8* %2, metadata !16157, metadata !DIExpression()), !dbg !16158
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !16038, metadata !DIExpression()), !dbg !16161
  call void @llvm.dbg.value(metadata i32 %1, metadata !16043, metadata !DIExpression()), !dbg !16161
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 6, i32 1, !dbg !16163
  store i32 %1, i32* %12, align 4, !dbg !16164
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !16165
  store i8* %2, i8** %13, align 4, !dbg !16166
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %9) #26, !dbg !16167
  %14 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %9) #26, !dbg !16168
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %9) #26, !dbg !16169
  call void @llvm.dbg.value(metadata i8 1, metadata !16130, metadata !DIExpression()), !dbg !16134
  br label %15, !dbg !16170

15:                                               ; preds = %7, %11
  call void @llvm.dbg.value(metadata i8 poison, metadata !16130, metadata !DIExpression()), !dbg !16134
  call void @llvm.dbg.value(metadata i32 undef, metadata !13834, metadata !DIExpression()) #24, !dbg !16171
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13839, metadata !DIExpression()) #24, !dbg !16171
  %16 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16173
  br i1 %16, label %18, label %17, !dbg !16174

17:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.280, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 194) #25, !dbg !16175
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.285, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16175
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.282, i32 0, i32 0), i32 noundef 194) #25, !dbg !16175
  unreachable, !dbg !16175

18:                                               ; preds = %15
  %19 = xor i1 %10, true, !dbg !16134
  %20 = extractvalue { i32, i32 } %4, 0, !dbg !16138
  call void @llvm.dbg.value(metadata i32 %20, metadata !13812, metadata !DIExpression()) #24, !dbg !16140
  call void @llvm.dbg.value(metadata i32 %20, metadata !13806, metadata !DIExpression()) #24, !dbg !16136
  call void @llvm.dbg.value(metadata i32 %20, metadata !16133, metadata !DIExpression()), !dbg !16135
  call void @llvm.dbg.value(metadata i32 undef, metadata !13834, metadata !DIExpression()) #24, !dbg !16171
  call void @llvm.dbg.value(metadata i32 undef, metadata !13848, metadata !DIExpression()) #24, !dbg !16176
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #24, !dbg !16178, !srcloc !13854
  call void @llvm.dbg.value(metadata i8 poison, metadata !16130, metadata !DIExpression()), !dbg !16134
  call void @llvm.dbg.value(metadata i32 undef, metadata !16131, metadata !DIExpression()), !dbg !16135
  ret i1 %19, !dbg !16179
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_sched_wait(%struct.k_spinlock* noundef %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3, i8** noundef writeonly %4) local_unnamed_addr #1 !dbg !16180 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !16186, metadata !DIExpression()), !dbg !16191
  call void @llvm.dbg.value(metadata i64 undef, metadata !16188, metadata !DIExpression()), !dbg !16191
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !16185, metadata !DIExpression()), !dbg !16191
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !16187, metadata !DIExpression()), !dbg !16191
  call void @llvm.dbg.value(metadata i8** %4, metadata !16189, metadata !DIExpression()), !dbg !16191
  %6 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) #26, !dbg !16192
  call void @llvm.dbg.value(metadata i32 %6, metadata !16190, metadata !DIExpression()), !dbg !16191
  %7 = icmp eq i8** %4, null, !dbg !16193
  br i1 %7, label %12, label %8, !dbg !16195

8:                                                ; preds = %5
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16196
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !16198
  %11 = load i8*, i8** %10, align 4, !dbg !16198
  store i8* %11, i8** %4, align 4, !dbg !16199
  br label %12, !dbg !16200

12:                                               ; preds = %8, %5
  ret i32 %6, !dbg !16201
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_data_copy() local_unnamed_addr #1 !dbg !16202 {
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_load_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__data_region_end to i32), i32 ptrtoint ([0 x i8]* @__data_region_start to i32))) #25, !dbg !16204
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_load_start, i32 0, i32 0), i32 noundef ptrtoint ([0 x i8]* @__ramfunc_size to i32)) #25, !dbg !16205
  ret void, !dbg !16206
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_add_timeout(%struct._timeout* noundef %0, void (%struct._timeout*)* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !16207 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !16217, metadata !DIExpression()), !dbg !16234
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16215, metadata !DIExpression()), !dbg !16234
  call void @llvm.dbg.value(metadata void (%struct._timeout*)* %1, metadata !16216, metadata !DIExpression()), !dbg !16234
  %5 = icmp eq i64 %4, -1, !dbg !16235
  br i1 %5, label %63, label %6, !dbg !16237

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16238
  %8 = tail call fastcc zeroext i1 @sys_dnode_is_linked.341(%struct._dnode* noundef %7) #26, !dbg !16238
  br i1 %8, label %9, label %10, !dbg !16241

9:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.1.343, i32 0, i32 0), i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.344, i32 0, i32 0), i32 noundef 99) #25, !dbg !16242
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.345, i32 0, i32 0)) #25, !dbg !16242
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.344, i32 0, i32 0), i32 noundef 99) #25, !dbg !16242
  unreachable, !dbg !16242

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 1, !dbg !16244
  store void (%struct._timeout*)* %1, void (%struct._timeout*)** %11, align 8, !dbg !16245
  call void @llvm.dbg.value(metadata i32 0, metadata !16218, metadata !DIExpression()), !dbg !16246
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16247, metadata !DIExpression()) #24, !dbg !16254
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !16256, !srcloc !16262
  call void @llvm.dbg.value(metadata i32 undef, metadata !16259, metadata !DIExpression()) #24, !dbg !16263
  call void @llvm.dbg.value(metadata i32 undef, metadata !16260, metadata !DIExpression()) #24, !dbg !16263
  call void @llvm.dbg.value(metadata i32 undef, metadata !16253, metadata !DIExpression()) #24, !dbg !16254
  %13 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16264
  br i1 %13, label %15, label %14, !dbg !16267

14:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.346, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.347, i32 0, i32 0), i32 noundef 148) #25, !dbg !16268
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.348, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16268
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.347, i32 0, i32 0), i32 noundef 148) #25, !dbg !16268
  unreachable, !dbg !16268

15:                                               ; preds = %10
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !16256
  call void @llvm.dbg.value(metadata i32 %16, metadata !16259, metadata !DIExpression()) #24, !dbg !16263
  call void @llvm.dbg.value(metadata i32 %16, metadata !16253, metadata !DIExpression()) #24, !dbg !16254
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16270
  call void @llvm.dbg.value(metadata i32 %16, metadata !16224, metadata !DIExpression()), !dbg !16246
  call void @llvm.dbg.value(metadata i32 undef, metadata !16218, metadata !DIExpression()), !dbg !16246
  %17 = icmp slt i64 %4, -1, !dbg !16271
  br i1 %17, label %18, label %24, !dbg !16272

18:                                               ; preds = %15
  %19 = load i64, i64* @curr_tick, align 8, !dbg !16273
  %20 = add i64 %4, %19, !dbg !16274
  %21 = sub i64 -2, %20, !dbg !16274
  call void @llvm.dbg.value(metadata i64 %21, metadata !16228, metadata !DIExpression()), !dbg !16275
  %22 = icmp sgt i64 %21, 1, !dbg !16276
  %23 = select i1 %22, i64 %21, i64 1, !dbg !16276
  br label %29, !dbg !16277

24:                                               ; preds = %15
  %25 = add nuw nsw i64 %4, 1, !dbg !16278
  %26 = tail call fastcc i32 @elapsed.349() #26, !dbg !16280
  %27 = sext i32 %26 to i64, !dbg !16280
  %28 = add nsw i64 %25, %27, !dbg !16281
  br label %29

29:                                               ; preds = %24, %18
  %30 = phi i64 [ %23, %18 ], [ %28, %24 ], !dbg !16282
  %31 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !16283
  store i64 %30, i64* %31, align 8, !dbg !16284
  %32 = tail call fastcc %struct._timeout* @first() #26, !dbg !16285
  call void @llvm.dbg.value(metadata %struct._timeout* %32, metadata !16225, metadata !DIExpression()), !dbg !16287
  %33 = icmp eq %struct._timeout* %32, null, !dbg !16288
  br i1 %33, label %48, label %34, !dbg !16288

34:                                               ; preds = %29, %44
  %35 = phi i64 [ %45, %44 ], [ %30, %29 ], !dbg !16289
  %36 = phi %struct._timeout* [ %46, %44 ], [ %32, %29 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %36, metadata !16225, metadata !DIExpression()), !dbg !16287
  %37 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 2, !dbg !16293
  %38 = load i64, i64* %37, align 8, !dbg !16293
  %39 = icmp slt i64 %35, %38, !dbg !16294
  br i1 %39, label %40, label %44, !dbg !16295

40:                                               ; preds = %34
  %41 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 2, !dbg !16293
  %42 = sub nsw i64 %38, %35, !dbg !16296
  store i64 %42, i64* %41, align 8, !dbg !16296
  %43 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 0, !dbg !16298
  tail call fastcc void @sys_dlist_insert.350(%struct._dnode* noundef nonnull %43, %struct._dnode* noundef nonnull %7) #26, !dbg !16299
  br label %49, !dbg !16300

44:                                               ; preds = %34
  %45 = sub nsw i64 %35, %38, !dbg !16301
  store i64 %45, i64* %31, align 8, !dbg !16301
  %46 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %36) #26, !dbg !16302
  call void @llvm.dbg.value(metadata %struct._timeout* %46, metadata !16225, metadata !DIExpression()), !dbg !16287
  %47 = icmp eq %struct._timeout* %46, null, !dbg !16288
  br i1 %47, label %48, label %34, !dbg !16288, !llvm.loop !16303

48:                                               ; preds = %44, %29
  tail call fastcc void @sys_dlist_append.351(%struct._dnode* noundef nonnull %7) #26, !dbg !16305
  br label %49, !dbg !16308

49:                                               ; preds = %40, %48
  %50 = tail call fastcc %struct._timeout* @first() #26, !dbg !16309
  %51 = icmp eq %struct._timeout* %50, %0, !dbg !16310
  br i1 %51, label %52, label %59, !dbg !16311

52:                                               ; preds = %49
  %53 = tail call fastcc i32 @next_timeout() #26, !dbg !16312
  call void @llvm.dbg.value(metadata i32 %53, metadata !16231, metadata !DIExpression()), !dbg !16313
  %54 = icmp ne i32 %53, 0, !dbg !16314
  %55 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4
  %56 = icmp eq i32 %55, %53
  %57 = select i1 %54, i1 %56, i1 false, !dbg !16316
  br i1 %57, label %59, label %58, !dbg !16316

58:                                               ; preds = %52
  tail call void @sys_clock_set_timeout(i32 noundef %53, i1 noundef zeroext false) #25, !dbg !16317
  br label %59, !dbg !16319

59:                                               ; preds = %58, %52, %49
  call void @llvm.dbg.value(metadata i32 undef, metadata !16320, metadata !DIExpression()) #24, !dbg !16326
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16325, metadata !DIExpression()) #24, !dbg !16326
  %60 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16328
  br i1 %60, label %62, label %61, !dbg !16331

61:                                               ; preds = %59
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.352, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.347, i32 0, i32 0), i32 noundef 194) #25, !dbg !16332
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.353, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16332
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.347, i32 0, i32 0), i32 noundef 194) #25, !dbg !16332
  unreachable, !dbg !16332

62:                                               ; preds = %59
  call void @llvm.dbg.value(metadata i32 %16, metadata !16320, metadata !DIExpression()) #24, !dbg !16326
  call void @llvm.dbg.value(metadata i32 %16, metadata !16334, metadata !DIExpression()) #24, !dbg !16337
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #24, !dbg !16339, !srcloc !16340
  call void @llvm.dbg.value(metadata i32 undef, metadata !16218, metadata !DIExpression()), !dbg !16246
  br label %63

63:                                               ; preds = %3, %62
  ret void, !dbg !16341
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked.341(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #13 !dbg !16342 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16348, metadata !DIExpression()), !dbg !16349
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16350
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !16350
  %4 = icmp ne %struct._dnode* %3, null, !dbg !16351
  ret i1 %4, !dbg !16352
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @elapsed.349() unnamed_addr #1 !dbg !16353 {
  %1 = load i32, i32* @announce_remaining, align 4, !dbg !16356
  %2 = icmp eq i32 %1, 0, !dbg !16357
  br i1 %2, label %3, label %5, !dbg !16356

3:                                                ; preds = %0
  %4 = tail call i32 @sys_clock_elapsed() #25, !dbg !16358
  br label %5, !dbg !16356

5:                                                ; preds = %0, %3
  %6 = phi i32 [ %4, %3 ], [ 0, %0 ], !dbg !16356
  ret i32 %6, !dbg !16359
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @first() unnamed_addr #13 !dbg !16360 {
  %1 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.356() #26, !dbg !16366
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16364, metadata !DIExpression()), !dbg !16367
  %2 = bitcast %struct._dnode* %1 to %struct._timeout*, !dbg !16368
  ret %struct._timeout* %2, !dbg !16369
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert.350(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #14 !dbg !16370 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16374, metadata !DIExpression()), !dbg !16378
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16375, metadata !DIExpression()), !dbg !16378
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16379
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !16379
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !16376, metadata !DIExpression()), !dbg !16378
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !16380
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !16381
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !16382
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !16383
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !16384
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !16385
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !16386
  ret void, !dbg !16387
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @next(%struct._timeout* noundef readonly %0) unnamed_addr #13 !dbg !16388 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16392, metadata !DIExpression()), !dbg !16394
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16395
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_next.354(%struct._dnode* noundef %2) #26, !dbg !16396
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !16393, metadata !DIExpression()), !dbg !16394
  %4 = bitcast %struct._dnode* %3 to %struct._timeout*, !dbg !16397
  ret %struct._timeout* %4, !dbg !16398
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append.351(%struct._dnode* noundef %0) unnamed_addr #14 !dbg !16399 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16404, metadata !DIExpression()), !dbg !16407
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16405, metadata !DIExpression()), !dbg !16407
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !16408
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !16406, metadata !DIExpression()), !dbg !16407
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16409
  store %struct._dnode* @timeout_list, %struct._dnode** %3, align 4, !dbg !16410
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16411
  store %struct._dnode* %2, %struct._dnode** %4, align 4, !dbg !16412
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %2, i32 0, i32 0, i32 0, !dbg !16413
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !16414
  store %struct._dnode* %0, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !16415
  ret void, !dbg !16416
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @next_timeout() unnamed_addr #1 !dbg !16417 {
  %1 = tail call fastcc %struct._timeout* @first() #26, !dbg !16422
  call void @llvm.dbg.value(metadata %struct._timeout* %1, metadata !16419, metadata !DIExpression()), !dbg !16423
  %2 = tail call fastcc i32 @elapsed.349() #26, !dbg !16424
  call void @llvm.dbg.value(metadata i32 %2, metadata !16420, metadata !DIExpression()), !dbg !16423
  %3 = icmp eq %struct._timeout* %1, null, !dbg !16425
  br i1 %3, label %14, label %4, !dbg !16427

4:                                                ; preds = %0
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %1, i32 0, i32 2, !dbg !16428
  %6 = load i64, i64* %5, align 8, !dbg !16428
  %7 = sext i32 %2 to i64, !dbg !16429
  %8 = sub nsw i64 %6, %7, !dbg !16430
  %9 = icmp sgt i64 %8, 2147483647, !dbg !16431
  br i1 %9, label %14, label %10, !dbg !16432

10:                                               ; preds = %4
  %11 = icmp sgt i64 %8, 0, !dbg !16433
  %12 = select i1 %11, i64 %8, i64 0, !dbg !16433
  %13 = trunc i64 %12 to i32, !dbg !16433
  call void @llvm.dbg.value(metadata i32 %13, metadata !16421, metadata !DIExpression()), !dbg !16423
  br label %14

14:                                               ; preds = %0, %4, %10
  %15 = phi i32 [ %13, %10 ], [ 2147483647, %4 ], [ 2147483647, %0 ], !dbg !16435
  call void @llvm.dbg.value(metadata i32 %15, metadata !16421, metadata !DIExpression()), !dbg !16423
  %16 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !16436
  %17 = icmp ne i32 %16, 0, !dbg !16438
  %18 = icmp slt i32 %16, %15
  %19 = select i1 %17, i1 %18, i1 false, !dbg !16439
  %20 = select i1 %19, i32 %16, i32 %15, !dbg !16439
  call void @llvm.dbg.value(metadata i32 %20, metadata !16421, metadata !DIExpression()), !dbg !16423
  ret i32 %20, !dbg !16440
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next.354(%struct._dnode* noundef readonly %0) unnamed_addr #13 !dbg !16441 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16445, metadata !DIExpression()), !dbg !16447
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16446, metadata !DIExpression()), !dbg !16447
  %2 = icmp eq %struct._dnode* %0, null, !dbg !16448
  br i1 %2, label %5, label %3, !dbg !16449

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check.355(%struct._dnode* noundef nonnull %0) #26, !dbg !16450
  br label %5, !dbg !16449

5:                                                ; preds = %1, %3
  %6 = phi %struct._dnode* [ %4, %3 ], [ null, %1 ], !dbg !16449
  ret %struct._dnode* %6, !dbg !16451
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check.355(%struct._dnode* noundef readonly %0) unnamed_addr #13 !dbg !16452 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16454, metadata !DIExpression()), !dbg !16456
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16455, metadata !DIExpression()), !dbg !16456
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !16457
  %3 = icmp eq %struct._dnode* %2, %0, !dbg !16458
  br i1 %3, label %7, label %4, !dbg !16459

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16460
  %6 = load %struct._dnode*, %struct._dnode** %5, align 4, !dbg !16460
  br label %7, !dbg !16459

7:                                                ; preds = %1, %4
  %8 = phi %struct._dnode* [ %6, %4 ], [ null, %1 ], !dbg !16459
  ret %struct._dnode* %8, !dbg !16461
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.356() unnamed_addr #13 !dbg !16462 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16466, metadata !DIExpression()), !dbg !16467
  %1 = tail call fastcc zeroext i1 @sys_dlist_is_empty.357() #26, !dbg !16468
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4
  %3 = select i1 %1, %struct._dnode* null, %struct._dnode* %2, !dbg !16468
  ret %struct._dnode* %3, !dbg !16469
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.357() unnamed_addr #13 !dbg !16470 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16474, metadata !DIExpression()), !dbg !16475
  %1 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4, !dbg !16476
  %2 = icmp eq %struct._dnode* %1, @timeout_list, !dbg !16477
  ret i1 %2, !dbg !16478
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_abort_timeout(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !16479 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16483, metadata !DIExpression()), !dbg !16488
  call void @llvm.dbg.value(metadata i32 -22, metadata !16484, metadata !DIExpression()), !dbg !16488
  call void @llvm.dbg.value(metadata i32 0, metadata !16485, metadata !DIExpression()), !dbg !16489
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16247, metadata !DIExpression()) #24, !dbg !16490
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !16492, !srcloc !16262
  call void @llvm.dbg.value(metadata i32 undef, metadata !16259, metadata !DIExpression()) #24, !dbg !16494
  call void @llvm.dbg.value(metadata i32 undef, metadata !16260, metadata !DIExpression()) #24, !dbg !16494
  call void @llvm.dbg.value(metadata i32 undef, metadata !16253, metadata !DIExpression()) #24, !dbg !16490
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16495
  br i1 %3, label %5, label %4, !dbg !16496

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.346, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.347, i32 0, i32 0), i32 noundef 148) #25, !dbg !16497
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.348, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16497
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.347, i32 0, i32 0), i32 noundef 148) #25, !dbg !16497
  unreachable, !dbg !16497

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16259, metadata !DIExpression()) #24, !dbg !16494
  call void @llvm.dbg.value(metadata i32 undef, metadata !16253, metadata !DIExpression()) #24, !dbg !16490
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16498
  call void @llvm.dbg.value(metadata i32 undef, metadata !16487, metadata !DIExpression()), !dbg !16489
  call void @llvm.dbg.value(metadata i32 -22, metadata !16484, metadata !DIExpression()), !dbg !16488
  call void @llvm.dbg.value(metadata i32 undef, metadata !16485, metadata !DIExpression()), !dbg !16489
  %6 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 -22, metadata !16484, metadata !DIExpression()), !dbg !16488
  %7 = tail call fastcc zeroext i1 @sys_dnode_is_linked.341(%struct._dnode* noundef %6) #26, !dbg !16499
  br i1 %7, label %8, label %9, !dbg !16503

8:                                                ; preds = %5
  tail call fastcc void @remove_timeout(%struct._timeout* noundef %0) #26, !dbg !16504
  call void @llvm.dbg.value(metadata i32 0, metadata !16484, metadata !DIExpression()), !dbg !16488
  br label %9, !dbg !16506

9:                                                ; preds = %5, %8
  %10 = phi i32 [ 0, %8 ], [ -22, %5 ], !dbg !16488
  call void @llvm.dbg.value(metadata i32 %10, metadata !16484, metadata !DIExpression()), !dbg !16488
  call void @llvm.dbg.value(metadata i32 undef, metadata !16320, metadata !DIExpression()) #24, !dbg !16507
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16325, metadata !DIExpression()) #24, !dbg !16507
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16509
  br i1 %11, label %13, label %12, !dbg !16510

12:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.352, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.347, i32 0, i32 0), i32 noundef 194) #25, !dbg !16511
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.353, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16511
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.347, i32 0, i32 0), i32 noundef 194) #25, !dbg !16511
  unreachable, !dbg !16511

13:                                               ; preds = %9
  %14 = extractvalue { i32, i32 } %2, 0, !dbg !16492
  call void @llvm.dbg.value(metadata i32 %14, metadata !16259, metadata !DIExpression()) #24, !dbg !16494
  call void @llvm.dbg.value(metadata i32 %14, metadata !16253, metadata !DIExpression()) #24, !dbg !16490
  call void @llvm.dbg.value(metadata i32 %14, metadata !16487, metadata !DIExpression()), !dbg !16489
  call void @llvm.dbg.value(metadata i32 undef, metadata !16320, metadata !DIExpression()) #24, !dbg !16507
  call void @llvm.dbg.value(metadata i32 undef, metadata !16334, metadata !DIExpression()) #24, !dbg !16512
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #24, !dbg !16514, !srcloc !16340
  call void @llvm.dbg.value(metadata i32 %10, metadata !16484, metadata !DIExpression()), !dbg !16488
  call void @llvm.dbg.value(metadata i32 undef, metadata !16485, metadata !DIExpression()), !dbg !16489
  ret i32 %10, !dbg !16515
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @remove_timeout(%struct._timeout* noundef %0) unnamed_addr #14 !dbg !16516 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16518, metadata !DIExpression()), !dbg !16519
  %2 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef %0) #26, !dbg !16520
  %3 = icmp eq %struct._timeout* %2, null, !dbg !16522
  br i1 %3, label %10, label %4, !dbg !16523

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !16524
  %6 = load i64, i64* %5, align 8, !dbg !16524
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %2, i32 0, i32 2, !dbg !16526
  %8 = load i64, i64* %7, align 8, !dbg !16527
  %9 = add nsw i64 %8, %6, !dbg !16527
  store i64 %9, i64* %7, align 8, !dbg !16527
  br label %10, !dbg !16528

10:                                               ; preds = %4, %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16529
  tail call fastcc void @sys_dlist_remove.360(%struct._dnode* noundef %11) #26, !dbg !16530
  ret void, !dbg !16531
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove.360(%struct._dnode* nocapture noundef %0) unnamed_addr #14 !dbg !16532 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16536, metadata !DIExpression()), !dbg !16539
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16540
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !16540
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !16537, metadata !DIExpression()), !dbg !16539
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16541
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !16541
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !16538, metadata !DIExpression()), !dbg !16539
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !16542
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !16543
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !16544
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !16545
  tail call fastcc void @sys_dnode_init.361(%struct._dnode* noundef %0) #26, !dbg !16546
  ret void, !dbg !16547
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.361(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #12 !dbg !16548 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16550, metadata !DIExpression()), !dbg !16551
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16552
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !16553
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16554
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !16555
  ret void, !dbg !16556
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_remaining(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !16557 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16563, metadata !DIExpression()), !dbg !16568
  call void @llvm.dbg.value(metadata i64 0, metadata !16564, metadata !DIExpression()), !dbg !16568
  call void @llvm.dbg.value(metadata i32 0, metadata !16565, metadata !DIExpression()), !dbg !16569
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16247, metadata !DIExpression()) #24, !dbg !16570
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !16572, !srcloc !16262
  call void @llvm.dbg.value(metadata i32 undef, metadata !16259, metadata !DIExpression()) #24, !dbg !16574
  call void @llvm.dbg.value(metadata i32 undef, metadata !16260, metadata !DIExpression()) #24, !dbg !16574
  call void @llvm.dbg.value(metadata i32 undef, metadata !16253, metadata !DIExpression()) #24, !dbg !16570
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16575
  br i1 %3, label %5, label %4, !dbg !16576

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.346, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.347, i32 0, i32 0), i32 noundef 148) #25, !dbg !16577
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.348, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16577
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.347, i32 0, i32 0), i32 noundef 148) #25, !dbg !16577
  unreachable, !dbg !16577

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16259, metadata !DIExpression()) #24, !dbg !16574
  call void @llvm.dbg.value(metadata i32 undef, metadata !16253, metadata !DIExpression()) #24, !dbg !16570
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16578
  call void @llvm.dbg.value(metadata i32 undef, metadata !16567, metadata !DIExpression()), !dbg !16569
  call void @llvm.dbg.value(metadata i64 0, metadata !16564, metadata !DIExpression()), !dbg !16568
  call void @llvm.dbg.value(metadata i32 undef, metadata !16565, metadata !DIExpression()), !dbg !16569
  %6 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #26, !dbg !16579
  call void @llvm.dbg.value(metadata i64 %6, metadata !16564, metadata !DIExpression()), !dbg !16568
  call void @llvm.dbg.value(metadata i32 undef, metadata !16320, metadata !DIExpression()) #24, !dbg !16582
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16325, metadata !DIExpression()) #24, !dbg !16582
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16584
  br i1 %7, label %9, label %8, !dbg !16585

8:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.352, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.347, i32 0, i32 0), i32 noundef 194) #25, !dbg !16586
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.353, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16586
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.347, i32 0, i32 0), i32 noundef 194) #25, !dbg !16586
  unreachable, !dbg !16586

9:                                                ; preds = %5
  %10 = extractvalue { i32, i32 } %2, 0, !dbg !16572
  call void @llvm.dbg.value(metadata i32 %10, metadata !16259, metadata !DIExpression()) #24, !dbg !16574
  call void @llvm.dbg.value(metadata i32 %10, metadata !16253, metadata !DIExpression()) #24, !dbg !16570
  call void @llvm.dbg.value(metadata i32 %10, metadata !16567, metadata !DIExpression()), !dbg !16569
  call void @llvm.dbg.value(metadata i32 undef, metadata !16320, metadata !DIExpression()) #24, !dbg !16582
  call void @llvm.dbg.value(metadata i32 undef, metadata !16334, metadata !DIExpression()) #24, !dbg !16587
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %10) #24, !dbg !16589, !srcloc !16340
  call void @llvm.dbg.value(metadata i64 %6, metadata !16564, metadata !DIExpression()), !dbg !16568
  call void @llvm.dbg.value(metadata i32 undef, metadata !16565, metadata !DIExpression()), !dbg !16569
  ret i64 %6, !dbg !16590
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @timeout_rem(%struct._timeout* noundef readonly %0) unnamed_addr #1 !dbg !16591 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16593, metadata !DIExpression()), !dbg !16597
  call void @llvm.dbg.value(metadata i64 0, metadata !16594, metadata !DIExpression()), !dbg !16597
  %2 = tail call fastcc zeroext i1 @z_is_inactive_timeout.362(%struct._timeout* noundef %0) #26, !dbg !16598
  br i1 %2, label %21, label %3, !dbg !16600

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._timeout* @first() #26, !dbg !16601
  call void @llvm.dbg.value(metadata %struct._timeout* %4, metadata !16595, metadata !DIExpression()), !dbg !16602
  call void @llvm.dbg.value(metadata i64 0, metadata !16594, metadata !DIExpression()), !dbg !16597
  %5 = icmp eq %struct._timeout* %4, null, !dbg !16603
  br i1 %5, label %16, label %6, !dbg !16605

6:                                                ; preds = %3, %13
  %7 = phi %struct._timeout* [ %14, %13 ], [ %4, %3 ]
  %8 = phi i64 [ %11, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %7, metadata !16595, metadata !DIExpression()), !dbg !16602
  call void @llvm.dbg.value(metadata i64 %8, metadata !16594, metadata !DIExpression()), !dbg !16597
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %7, i32 0, i32 2, !dbg !16606
  %10 = load i64, i64* %9, align 8, !dbg !16606
  %11 = add nsw i64 %10, %8, !dbg !16608
  call void @llvm.dbg.value(metadata i64 %11, metadata !16594, metadata !DIExpression()), !dbg !16597
  %12 = icmp eq %struct._timeout* %7, %0, !dbg !16609
  br i1 %12, label %16, label %13, !dbg !16611

13:                                               ; preds = %6
  %14 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %7) #26, !dbg !16612
  call void @llvm.dbg.value(metadata %struct._timeout* %14, metadata !16595, metadata !DIExpression()), !dbg !16602
  call void @llvm.dbg.value(metadata i64 %11, metadata !16594, metadata !DIExpression()), !dbg !16597
  %15 = icmp eq %struct._timeout* %14, null, !dbg !16603
  br i1 %15, label %16, label %6, !dbg !16605, !llvm.loop !16613

16:                                               ; preds = %13, %6, %3
  %17 = phi i64 [ 0, %3 ], [ %11, %6 ], [ %11, %13 ], !dbg !16597
  call void @llvm.dbg.value(metadata i64 %17, metadata !16594, metadata !DIExpression()), !dbg !16597
  %18 = tail call fastcc i32 @elapsed.349() #26, !dbg !16615
  %19 = sext i32 %18 to i64, !dbg !16615
  %20 = sub nsw i64 %17, %19, !dbg !16616
  br label %21, !dbg !16617

21:                                               ; preds = %1, %16
  %22 = phi i64 [ %20, %16 ], [ 0, %1 ], !dbg !16597
  ret i64 %22, !dbg !16618
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout.362(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #13 !dbg !16619 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16623, metadata !DIExpression()), !dbg !16624
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16625
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked.341(%struct._dnode* noundef %2) #26, !dbg !16626
  %4 = xor i1 %3, true, !dbg !16627
  ret i1 %4, !dbg !16628
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_expires(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !16629 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16631, metadata !DIExpression()), !dbg !16636
  call void @llvm.dbg.value(metadata i64 0, metadata !16632, metadata !DIExpression()), !dbg !16636
  call void @llvm.dbg.value(metadata i32 0, metadata !16633, metadata !DIExpression()), !dbg !16637
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16247, metadata !DIExpression()) #24, !dbg !16638
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !16640, !srcloc !16262
  call void @llvm.dbg.value(metadata i32 undef, metadata !16259, metadata !DIExpression()) #24, !dbg !16642
  call void @llvm.dbg.value(metadata i32 undef, metadata !16260, metadata !DIExpression()) #24, !dbg !16642
  call void @llvm.dbg.value(metadata i32 undef, metadata !16253, metadata !DIExpression()) #24, !dbg !16638
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16643
  br i1 %3, label %5, label %4, !dbg !16644

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.346, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.347, i32 0, i32 0), i32 noundef 148) #25, !dbg !16645
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.348, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16645
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.347, i32 0, i32 0), i32 noundef 148) #25, !dbg !16645
  unreachable, !dbg !16645

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16259, metadata !DIExpression()) #24, !dbg !16642
  call void @llvm.dbg.value(metadata i32 undef, metadata !16253, metadata !DIExpression()) #24, !dbg !16638
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16646
  call void @llvm.dbg.value(metadata i32 undef, metadata !16635, metadata !DIExpression()), !dbg !16637
  call void @llvm.dbg.value(metadata i64 0, metadata !16632, metadata !DIExpression()), !dbg !16636
  call void @llvm.dbg.value(metadata i32 undef, metadata !16633, metadata !DIExpression()), !dbg !16637
  %6 = load i64, i64* @curr_tick, align 8, !dbg !16647
  %7 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #26, !dbg !16650
  call void @llvm.dbg.value(metadata !DIArgList(i64 %6, i64 %7), metadata !16632, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !16636
  call void @llvm.dbg.value(metadata i32 undef, metadata !16320, metadata !DIExpression()) #24, !dbg !16651
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16325, metadata !DIExpression()) #24, !dbg !16651
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16653
  br i1 %8, label %10, label %9, !dbg !16654

9:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.352, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.347, i32 0, i32 0), i32 noundef 194) #25, !dbg !16655
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.353, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16655
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.347, i32 0, i32 0), i32 noundef 194) #25, !dbg !16655
  unreachable, !dbg !16655

10:                                               ; preds = %5
  %11 = extractvalue { i32, i32 } %2, 0, !dbg !16640
  call void @llvm.dbg.value(metadata i32 %11, metadata !16259, metadata !DIExpression()) #24, !dbg !16642
  call void @llvm.dbg.value(metadata i32 %11, metadata !16253, metadata !DIExpression()) #24, !dbg !16638
  call void @llvm.dbg.value(metadata i32 %11, metadata !16635, metadata !DIExpression()), !dbg !16637
  call void @llvm.dbg.value(metadata !DIArgList(i64 %7, i64 %6), metadata !16632, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !16636
  call void @llvm.dbg.value(metadata i32 undef, metadata !16320, metadata !DIExpression()) #24, !dbg !16651
  call void @llvm.dbg.value(metadata i32 undef, metadata !16334, metadata !DIExpression()) #24, !dbg !16656
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %11) #24, !dbg !16658, !srcloc !16340
  call void @llvm.dbg.value(metadata i32 undef, metadata !16633, metadata !DIExpression()), !dbg !16637
  %12 = add i64 %7, %6, !dbg !16659
  ret i64 %12, !dbg !16660
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_get_next_timeout_expiry() local_unnamed_addr #1 !dbg !16661 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !16663, metadata !DIExpression()), !dbg !16667
  call void @llvm.dbg.value(metadata i32 0, metadata !16664, metadata !DIExpression()), !dbg !16668
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16247, metadata !DIExpression()) #24, !dbg !16669
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !16671, !srcloc !16262
  call void @llvm.dbg.value(metadata i32 undef, metadata !16259, metadata !DIExpression()) #24, !dbg !16673
  call void @llvm.dbg.value(metadata i32 undef, metadata !16260, metadata !DIExpression()) #24, !dbg !16673
  call void @llvm.dbg.value(metadata i32 undef, metadata !16253, metadata !DIExpression()) #24, !dbg !16669
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16674
  br i1 %2, label %4, label %3, !dbg !16675

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.346, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.347, i32 0, i32 0), i32 noundef 148) #25, !dbg !16676
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.348, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16676
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.347, i32 0, i32 0), i32 noundef 148) #25, !dbg !16676
  unreachable, !dbg !16676

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !16259, metadata !DIExpression()) #24, !dbg !16673
  call void @llvm.dbg.value(metadata i32 undef, metadata !16253, metadata !DIExpression()) #24, !dbg !16669
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16677
  call void @llvm.dbg.value(metadata i32 undef, metadata !16666, metadata !DIExpression()), !dbg !16668
  call void @llvm.dbg.value(metadata i32 -1, metadata !16663, metadata !DIExpression()), !dbg !16667
  call void @llvm.dbg.value(metadata i32 undef, metadata !16664, metadata !DIExpression()), !dbg !16668
  %5 = tail call fastcc i32 @next_timeout() #26, !dbg !16678
  call void @llvm.dbg.value(metadata i32 %5, metadata !16663, metadata !DIExpression()), !dbg !16667
  call void @llvm.dbg.value(metadata i32 undef, metadata !16320, metadata !DIExpression()) #24, !dbg !16681
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16325, metadata !DIExpression()) #24, !dbg !16681
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16683
  br i1 %6, label %8, label %7, !dbg !16684

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.352, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.347, i32 0, i32 0), i32 noundef 194) #25, !dbg !16685
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.353, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16685
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.347, i32 0, i32 0), i32 noundef 194) #25, !dbg !16685
  unreachable, !dbg !16685

8:                                                ; preds = %4
  %9 = extractvalue { i32, i32 } %1, 0, !dbg !16671
  call void @llvm.dbg.value(metadata i32 %9, metadata !16259, metadata !DIExpression()) #24, !dbg !16673
  call void @llvm.dbg.value(metadata i32 %9, metadata !16253, metadata !DIExpression()) #24, !dbg !16669
  call void @llvm.dbg.value(metadata i32 %9, metadata !16666, metadata !DIExpression()), !dbg !16668
  call void @llvm.dbg.value(metadata i32 undef, metadata !16320, metadata !DIExpression()) #24, !dbg !16681
  call void @llvm.dbg.value(metadata i32 undef, metadata !16334, metadata !DIExpression()) #24, !dbg !16686
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #24, !dbg !16688, !srcloc !16340
  call void @llvm.dbg.value(metadata i32 %5, metadata !16663, metadata !DIExpression()), !dbg !16667
  call void @llvm.dbg.value(metadata i32 undef, metadata !16664, metadata !DIExpression()), !dbg !16668
  ret i32 %5, !dbg !16689
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_set_timeout_expiry(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !16690 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16692, metadata !DIExpression()), !dbg !16702
  call void @llvm.dbg.value(metadata i1 %1, metadata !16693, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16702
  call void @llvm.dbg.value(metadata i32 0, metadata !16694, metadata !DIExpression()), !dbg !16703
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16247, metadata !DIExpression()) #24, !dbg !16704
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !16706, !srcloc !16262
  call void @llvm.dbg.value(metadata i32 undef, metadata !16259, metadata !DIExpression()) #24, !dbg !16708
  call void @llvm.dbg.value(metadata i32 undef, metadata !16260, metadata !DIExpression()) #24, !dbg !16708
  call void @llvm.dbg.value(metadata i32 undef, metadata !16253, metadata !DIExpression()) #24, !dbg !16704
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16709
  br i1 %4, label %6, label %5, !dbg !16710

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.346, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.347, i32 0, i32 0), i32 noundef 148) #25, !dbg !16711
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.348, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16711
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.347, i32 0, i32 0), i32 noundef 148) #25, !dbg !16711
  unreachable, !dbg !16711

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !16259, metadata !DIExpression()) #24, !dbg !16708
  call void @llvm.dbg.value(metadata i32 undef, metadata !16253, metadata !DIExpression()) #24, !dbg !16704
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16712
  call void @llvm.dbg.value(metadata i32 undef, metadata !16696, metadata !DIExpression()), !dbg !16703
  call void @llvm.dbg.value(metadata i32 undef, metadata !16694, metadata !DIExpression()), !dbg !16703
  %7 = tail call fastcc i32 @next_timeout() #26, !dbg !16713
  call void @llvm.dbg.value(metadata i32 %7, metadata !16697, metadata !DIExpression()), !dbg !16714
  call void @llvm.dbg.value(metadata i1 undef, metadata !16700, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16714
  %8 = icmp slt i32 %7, 2, !dbg !16715
  call void @llvm.dbg.value(metadata i1 %8, metadata !16701, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16714
  %9 = icmp slt i32 %7, %0
  %10 = or i1 %8, %9, !dbg !16716
  call void @llvm.dbg.value(metadata i1 %9, metadata !16700, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16714
  br i1 %10, label %14, label %11, !dbg !16716

11:                                               ; preds = %6
  %12 = icmp sgt i32 %7, %0, !dbg !16718
  %13 = select i1 %12, i32 %0, i32 %7, !dbg !16718
  tail call void @sys_clock_set_timeout(i32 noundef %13, i1 noundef zeroext %1) #25, !dbg !16720
  br label %14, !dbg !16721

14:                                               ; preds = %11, %6
  call void @llvm.dbg.value(metadata i32 undef, metadata !16320, metadata !DIExpression()) #24, !dbg !16722
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16325, metadata !DIExpression()) #24, !dbg !16722
  %15 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16724
  br i1 %15, label %17, label %16, !dbg !16725

16:                                               ; preds = %14
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.352, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.347, i32 0, i32 0), i32 noundef 194) #25, !dbg !16726
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.353, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16726
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.347, i32 0, i32 0), i32 noundef 194) #25, !dbg !16726
  unreachable, !dbg !16726

17:                                               ; preds = %14
  %18 = extractvalue { i32, i32 } %3, 0, !dbg !16706
  call void @llvm.dbg.value(metadata i32 %18, metadata !16259, metadata !DIExpression()) #24, !dbg !16708
  call void @llvm.dbg.value(metadata i32 %18, metadata !16253, metadata !DIExpression()) #24, !dbg !16704
  call void @llvm.dbg.value(metadata i32 %18, metadata !16696, metadata !DIExpression()), !dbg !16703
  call void @llvm.dbg.value(metadata i32 undef, metadata !16320, metadata !DIExpression()) #24, !dbg !16722
  call void @llvm.dbg.value(metadata i32 undef, metadata !16334, metadata !DIExpression()) #24, !dbg !16727
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #24, !dbg !16729, !srcloc !16340
  call void @llvm.dbg.value(metadata i32 1, metadata !16694, metadata !DIExpression()), !dbg !16703
  call void @llvm.dbg.value(metadata i32 undef, metadata !16694, metadata !DIExpression()), !dbg !16703
  ret void, !dbg !16730
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_announce(i32 noundef %0) local_unnamed_addr #1 !dbg !16731 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16735, metadata !DIExpression()), !dbg !16740
  tail call void @z_time_slice(i32 noundef %0) #25, !dbg !16741
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16247, metadata !DIExpression()) #24, !dbg !16742
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !16744, !srcloc !16262
  call void @llvm.dbg.value(metadata i32 undef, metadata !16259, metadata !DIExpression()) #24, !dbg !16746
  call void @llvm.dbg.value(metadata i32 undef, metadata !16260, metadata !DIExpression()) #24, !dbg !16746
  call void @llvm.dbg.value(metadata i32 undef, metadata !16253, metadata !DIExpression()) #24, !dbg !16742
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16747
  br i1 %3, label %5, label %4, !dbg !16748

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.346, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.347, i32 0, i32 0), i32 noundef 148) #25, !dbg !16749
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.348, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16749
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.347, i32 0, i32 0), i32 noundef 148) #25, !dbg !16749
  unreachable, !dbg !16749

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16259, metadata !DIExpression()) #24, !dbg !16746
  call void @llvm.dbg.value(metadata i32 undef, metadata !16253, metadata !DIExpression()) #24, !dbg !16742
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16750
  call void @llvm.dbg.value(metadata i32 undef, metadata !16736, metadata !DIExpression()), !dbg !16740
  store i32 %0, i32* @announce_remaining, align 4, !dbg !16740
  call void @llvm.dbg.value(metadata i32 undef, metadata !16736, metadata !DIExpression()), !dbg !16740
  %6 = tail call fastcc %struct._timeout* @first() #26, !dbg !16751
  %7 = icmp eq %struct._timeout* %6, null, !dbg !16752
  br i1 %7, label %37, label %8, !dbg !16753

8:                                                ; preds = %5, %30
  %9 = phi %struct._timeout* [ %33, %30 ], [ %6, %5 ]
  %10 = phi { i32, i32 } [ %27, %30 ], [ %2, %5 ]
  %11 = phi i32 [ %32, %30 ], [ %0, %5 ]
  %12 = extractvalue { i32, i32 } %10, 0, !dbg !16740
  %13 = getelementptr inbounds %struct._timeout, %struct._timeout* %9, i32 0, i32 2, !dbg !16754
  %14 = load i64, i64* %13, align 8, !dbg !16754
  %15 = sext i32 %11 to i64, !dbg !16755
  %16 = icmp sgt i64 %14, %15, !dbg !16756
  br i1 %16, label %35, label %17, !dbg !16757

17:                                               ; preds = %8
  call void @llvm.dbg.value(metadata %struct._timeout* %9, metadata !16737, metadata !DIExpression()), !dbg !16758
  %18 = trunc i64 %14 to i32, !dbg !16759
  call void @llvm.dbg.value(metadata i32 %18, metadata !16739, metadata !DIExpression()), !dbg !16758
  %19 = sext i32 %18 to i64, !dbg !16760
  %20 = load i64, i64* @curr_tick, align 8, !dbg !16761
  %21 = add i64 %20, %19, !dbg !16761
  store i64 %21, i64* @curr_tick, align 8, !dbg !16761
  store i64 0, i64* %13, align 8, !dbg !16762
  tail call fastcc void @remove_timeout(%struct._timeout* noundef nonnull %9) #26, !dbg !16763
  call void @llvm.dbg.value(metadata i32 undef, metadata !16320, metadata !DIExpression()) #24, !dbg !16764
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16325, metadata !DIExpression()) #24, !dbg !16764
  %22 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16766
  br i1 %22, label %24, label %23, !dbg !16767

23:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.352, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.347, i32 0, i32 0), i32 noundef 194) #25, !dbg !16768
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.353, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16768
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.347, i32 0, i32 0), i32 noundef 194) #25, !dbg !16768
  unreachable, !dbg !16768

24:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 %12, metadata !16320, metadata !DIExpression()) #24, !dbg !16764
  call void @llvm.dbg.value(metadata i32 %12, metadata !16334, metadata !DIExpression()) #24, !dbg !16769
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #24, !dbg !16771, !srcloc !16340
  %25 = getelementptr inbounds %struct._timeout, %struct._timeout* %9, i32 0, i32 1, !dbg !16772
  %26 = load void (%struct._timeout*)*, void (%struct._timeout*)** %25, align 8, !dbg !16772
  tail call void %26(%struct._timeout* noundef nonnull %9) #25, !dbg !16773
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16247, metadata !DIExpression()) #24, !dbg !16774
  %27 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !16776, !srcloc !16262
  call void @llvm.dbg.value(metadata i32 undef, metadata !16259, metadata !DIExpression()) #24, !dbg !16778
  call void @llvm.dbg.value(metadata i32 undef, metadata !16260, metadata !DIExpression()) #24, !dbg !16778
  call void @llvm.dbg.value(metadata i32 undef, metadata !16253, metadata !DIExpression()) #24, !dbg !16774
  %28 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16779
  br i1 %28, label %30, label %29, !dbg !16780

29:                                               ; preds = %24
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.346, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.347, i32 0, i32 0), i32 noundef 148) #25, !dbg !16781
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.348, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16781
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.347, i32 0, i32 0), i32 noundef 148) #25, !dbg !16781
  unreachable, !dbg !16781

30:                                               ; preds = %24
  call void @llvm.dbg.value(metadata i32 undef, metadata !16259, metadata !DIExpression()) #24, !dbg !16778
  call void @llvm.dbg.value(metadata i32 undef, metadata !16253, metadata !DIExpression()) #24, !dbg !16774
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16782
  call void @llvm.dbg.value(metadata i32 undef, metadata !16736, metadata !DIExpression()), !dbg !16740
  %31 = load i32, i32* @announce_remaining, align 4, !dbg !16783
  %32 = sub nsw i32 %31, %18, !dbg !16783
  store i32 %32, i32* @announce_remaining, align 4, !dbg !16740
  call void @llvm.dbg.value(metadata i32 undef, metadata !16736, metadata !DIExpression()), !dbg !16740
  %33 = tail call fastcc %struct._timeout* @first() #26, !dbg !16751
  %34 = icmp eq %struct._timeout* %33, null, !dbg !16752
  br i1 %34, label %37, label %8, !dbg !16753, !llvm.loop !16784

35:                                               ; preds = %8
  %36 = sub nsw i64 %14, %15, !dbg !16786
  store i64 %36, i64* %13, align 8, !dbg !16786
  br label %41, !dbg !16789

37:                                               ; preds = %30, %5
  %38 = phi { i32, i32 } [ %2, %5 ], [ %27, %30 ]
  %39 = phi i32 [ %0, %5 ], [ %32, %30 ], !dbg !16740
  %40 = sext i32 %39 to i64, !dbg !16790
  br label %41, !dbg !16790

41:                                               ; preds = %37, %35
  %42 = phi i64 [ %40, %37 ], [ %15, %35 ], !dbg !16790
  %43 = phi { i32, i32 } [ %38, %37 ], [ %10, %35 ]
  %44 = load i64, i64* @curr_tick, align 8, !dbg !16791
  %45 = add i64 %44, %42, !dbg !16791
  store i64 %45, i64* @curr_tick, align 8, !dbg !16791
  store i32 0, i32* @announce_remaining, align 4, !dbg !16792
  %46 = tail call fastcc i32 @next_timeout() #26, !dbg !16793
  tail call void @sys_clock_set_timeout(i32 noundef %46, i1 noundef zeroext false) #25, !dbg !16794
  call void @llvm.dbg.value(metadata i32 undef, metadata !16320, metadata !DIExpression()) #24, !dbg !16795
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16325, metadata !DIExpression()) #24, !dbg !16795
  %47 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16797
  br i1 %47, label %49, label %48, !dbg !16798

48:                                               ; preds = %41
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.352, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.347, i32 0, i32 0), i32 noundef 194) #25, !dbg !16799
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.353, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16799
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.347, i32 0, i32 0), i32 noundef 194) #25, !dbg !16799
  unreachable, !dbg !16799

49:                                               ; preds = %41
  %50 = extractvalue { i32, i32 } %43, 0, !dbg !16740
  call void @llvm.dbg.value(metadata i32 %50, metadata !16320, metadata !DIExpression()) #24, !dbg !16795
  call void @llvm.dbg.value(metadata i32 %50, metadata !16334, metadata !DIExpression()) #24, !dbg !16800
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %50) #24, !dbg !16802, !srcloc !16340
  ret void, !dbg !16803
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_tick_get() local_unnamed_addr #1 !dbg !16804 {
  call void @llvm.dbg.value(metadata i64 0, metadata !16808, metadata !DIExpression()), !dbg !16812
  call void @llvm.dbg.value(metadata i32 0, metadata !16809, metadata !DIExpression()), !dbg !16813
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16247, metadata !DIExpression()) #24, !dbg !16814
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !16816, !srcloc !16262
  call void @llvm.dbg.value(metadata i32 undef, metadata !16259, metadata !DIExpression()) #24, !dbg !16818
  call void @llvm.dbg.value(metadata i32 undef, metadata !16260, metadata !DIExpression()) #24, !dbg !16818
  call void @llvm.dbg.value(metadata i32 undef, metadata !16253, metadata !DIExpression()) #24, !dbg !16814
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16819
  br i1 %2, label %4, label %3, !dbg !16820

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.346, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.347, i32 0, i32 0), i32 noundef 148) #25, !dbg !16821
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.348, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16821
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.347, i32 0, i32 0), i32 noundef 148) #25, !dbg !16821
  unreachable, !dbg !16821

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !16259, metadata !DIExpression()) #24, !dbg !16818
  call void @llvm.dbg.value(metadata i32 undef, metadata !16253, metadata !DIExpression()) #24, !dbg !16814
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16822
  call void @llvm.dbg.value(metadata i32 undef, metadata !16811, metadata !DIExpression()), !dbg !16813
  call void @llvm.dbg.value(metadata i64 0, metadata !16808, metadata !DIExpression()), !dbg !16812
  call void @llvm.dbg.value(metadata i32 undef, metadata !16809, metadata !DIExpression()), !dbg !16813
  %5 = load i64, i64* @curr_tick, align 8, !dbg !16823
  %6 = tail call fastcc i32 @elapsed.349() #26, !dbg !16826
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i32 %6), metadata !16808, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_plus, DW_OP_stack_value)), !dbg !16812
  call void @llvm.dbg.value(metadata i32 undef, metadata !16320, metadata !DIExpression()) #24, !dbg !16827
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16325, metadata !DIExpression()) #24, !dbg !16827
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16829
  br i1 %7, label %9, label %8, !dbg !16830

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.352, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.347, i32 0, i32 0), i32 noundef 194) #25, !dbg !16831
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.353, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16831
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.347, i32 0, i32 0), i32 noundef 194) #25, !dbg !16831
  unreachable, !dbg !16831

9:                                                ; preds = %4
  %10 = extractvalue { i32, i32 } %1, 0, !dbg !16816
  call void @llvm.dbg.value(metadata i32 %10, metadata !16259, metadata !DIExpression()) #24, !dbg !16818
  call void @llvm.dbg.value(metadata i32 %10, metadata !16253, metadata !DIExpression()) #24, !dbg !16814
  call void @llvm.dbg.value(metadata i32 %10, metadata !16811, metadata !DIExpression()), !dbg !16813
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i32 %6), metadata !16808, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_plus, DW_OP_stack_value)), !dbg !16812
  call void @llvm.dbg.value(metadata !DIArgList(i32 %6, i64 %5), metadata !16808, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !16812
  call void @llvm.dbg.value(metadata i32 undef, metadata !16320, metadata !DIExpression()) #24, !dbg !16827
  call void @llvm.dbg.value(metadata i32 undef, metadata !16334, metadata !DIExpression()) #24, !dbg !16832
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %10) #24, !dbg !16834, !srcloc !16340
  call void @llvm.dbg.value(metadata i32 undef, metadata !16809, metadata !DIExpression()), !dbg !16813
  %11 = sext i32 %6 to i64, !dbg !16826
  %12 = add i64 %5, %11, !dbg !16835
  ret i64 %12, !dbg !16836
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_tick_get_32() local_unnamed_addr #1 !dbg !16837 {
  %1 = tail call i64 @sys_clock_tick_get() #26, !dbg !16838
  %2 = trunc i64 %1 to i32, !dbg !16839
  ret i32 %2, !dbg !16840
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_impl_k_uptime_ticks() local_unnamed_addr #1 !dbg !16841 {
  %1 = tail call i64 @sys_clock_tick_get() #26, !dbg !16842
  ret i64 %1, !dbg !16843
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_busy_wait(i32 noundef %0) local_unnamed_addr #1 !dbg !16844 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16846, metadata !DIExpression()), !dbg !16853
  %2 = icmp eq i32 %0, 0, !dbg !16854
  br i1 %2, label %10, label %3, !dbg !16856

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @k_cycle_get_32.369() #26, !dbg !16857
  call void @llvm.dbg.value(metadata i32 %4, metadata !16847, metadata !DIExpression()), !dbg !16853
  %5 = mul i32 %0, 200, !dbg !16858
  call void @llvm.dbg.value(metadata i32 %5, metadata !16848, metadata !DIExpression()), !dbg !16853
  br label %6, !dbg !16859

6:                                                ; preds = %6, %3
  %7 = tail call fastcc i32 @k_cycle_get_32.369() #26, !dbg !16860
  call void @llvm.dbg.value(metadata i32 %7, metadata !16849, metadata !DIExpression()), !dbg !16861
  %8 = sub i32 %7, %4, !dbg !16862
  %9 = icmp ult i32 %8, %5, !dbg !16864
  br i1 %9, label %6, label %10

10:                                               ; preds = %6, %1
  ret void, !dbg !16865
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32.369() unnamed_addr #1 !dbg !16866 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32.370() #26, !dbg !16867
  ret i32 %1, !dbg !16868
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32.370() unnamed_addr #1 !dbg !16869 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #25, !dbg !16870
  ret i32 %1, !dbg !16871
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_timeout_end_calc([1 x i64] %0) local_unnamed_addr #1 !dbg !16872 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !16876, metadata !DIExpression()), !dbg !16878
  switch i64 %2, label %5 [
    i64 -1, label %14
    i64 0, label %3
  ], !dbg !16879

3:                                                ; preds = %1
  %4 = tail call i64 @sys_clock_tick_get() #26, !dbg !16880
  br label %14, !dbg !16884

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !16877, metadata !DIExpression()), !dbg !16878
  %6 = icmp slt i64 %2, -1, !dbg !16885
  br i1 %6, label %7, label %9, !dbg !16888

7:                                                ; preds = %5
  %8 = sub nuw nsw i64 -2, %2, !dbg !16889
  br label %14, !dbg !16890

9:                                                ; preds = %5
  %10 = tail call i64 @sys_clock_tick_get() #26, !dbg !16892
  %11 = icmp ugt i64 %2, 1, !dbg !16893
  %12 = select i1 %11, i64 %2, i64 1, !dbg !16893
  %13 = add nsw i64 %10, %12, !dbg !16894
  br label %14, !dbg !16895

14:                                               ; preds = %1, %9, %7, %3
  %15 = phi i64 [ %4, %3 ], [ %8, %7 ], [ %13, %9 ], [ %2, %1 ], !dbg !16896
  ret i64 %15, !dbg !16897
}

; Function Attrs: noinline nounwind optsize
define dso_local void @boot_banner() local_unnamed_addr #1 !dbg !16898 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.373, i32 0, i32 0)) #25, !dbg !16900
  ret void, !dbg !16901
}

; Function Attrs: noinline nounwind optsize
define internal i32 @statics_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !16902 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !16904, metadata !DIExpression()), !dbg !16926
  call void @llvm.dbg.value(metadata %struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), metadata !16905, metadata !DIExpression()), !dbg !16927
  br i1 icmp ugt (%struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), %struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_end, i32 0, i32 0)), label %2, label %3, !dbg !16928

2:                                                ; preds = %7, %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.375, i32 0, i32 0), i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.4.376, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.377, i32 0, i32 0), i32 noundef 24) #25, !dbg !16932
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.5.378, i32 0, i32 0)) #25, !dbg !16932
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.377, i32 0, i32 0), i32 noundef 24) #25, !dbg !16932
  unreachable, !dbg !16932

3:                                                ; preds = %1, %7
  %4 = phi %struct.k_heap* [ %12, %7 ], [ getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), %1 ]
  call void @llvm.dbg.value(metadata %struct.k_heap* %4, metadata !16905, metadata !DIExpression()), !dbg !16927
  %5 = icmp ult %struct.k_heap* %4, getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_end, i32 0, i32 0), !dbg !16935
  br i1 %5, label %7, label %6, !dbg !16936

6:                                                ; preds = %3
  ret i32 0, !dbg !16937

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 0, i32 0, i32 1, !dbg !16938
  %9 = load i8*, i8** %8, align 4, !dbg !16938
  %10 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 0, i32 0, i32 2, !dbg !16941
  %11 = load i32, i32* %10, align 4, !dbg !16941
  tail call void @k_heap_init(%struct.k_heap* noundef %4, i8* noundef %9, i32 noundef %11) #26, !dbg !16942
  %12 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 1, !dbg !16943
  call void @llvm.dbg.value(metadata %struct.k_heap* %12, metadata !16905, metadata !DIExpression()), !dbg !16927
  %13 = icmp ugt %struct.k_heap* %12, getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_end, i32 0, i32 0), !dbg !16944
  br i1 %13, label %2, label %3, !dbg !16928, !llvm.loop !16945
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_heap_init(%struct.k_heap* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !16947 {
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !16951, metadata !DIExpression()), !dbg !16954
  call void @llvm.dbg.value(metadata i8* %1, metadata !16952, metadata !DIExpression()), !dbg !16954
  call void @llvm.dbg.value(metadata i32 %2, metadata !16953, metadata !DIExpression()), !dbg !16954
  %4 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1, !dbg !16955
  tail call fastcc void @z_waitq_init.379(%union.anon* noundef nonnull %4) #26, !dbg !16956
  %5 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0, !dbg !16957
  tail call void @sys_heap_init(%struct.sys_heap* noundef %5, i8* noundef %1, i32 noundef %2) #25, !dbg !16958
  ret void, !dbg !16959
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.379(%union.anon* noundef %0) unnamed_addr #12 !dbg !16960 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !16965, metadata !DIExpression()), !dbg !16966
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !16967
  tail call fastcc void @sys_dlist_init.380(%struct._dnode* noundef %2) #26, !dbg !16968
  ret void, !dbg !16969
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.380(%struct._dnode* noundef %0) unnamed_addr #12 !dbg !16970 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16975, metadata !DIExpression()), !dbg !16976
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16977
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !16978
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16979
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !16980
  ret void, !dbg !16981
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef %1, i32 noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !16982 {
  %5 = extractvalue [1 x i64] %3, 0
  call void @llvm.dbg.value(metadata i64 %5, metadata !16993, metadata !DIExpression()), !dbg !17003
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !16990, metadata !DIExpression()), !dbg !17003
  call void @llvm.dbg.value(metadata i32 %1, metadata !16991, metadata !DIExpression()), !dbg !17003
  call void @llvm.dbg.value(metadata i32 %2, metadata !16992, metadata !DIExpression()), !dbg !17003
  %6 = tail call i64 @sys_clock_timeout_end_calc([1 x i64] %3) #25, !dbg !17004
  call void @llvm.dbg.value(metadata i64 %6, metadata !16995, metadata !DIExpression()), !dbg !17003
  call void @llvm.dbg.value(metadata i8* null, metadata !16996, metadata !DIExpression()), !dbg !17003
  %7 = icmp eq i64 %5, -1, !dbg !17005
  %8 = select i1 %7, i64 9223372036854775807, i64 %6, !dbg !17005
  call void @llvm.dbg.value(metadata i64 %8, metadata !16995, metadata !DIExpression()), !dbg !17003
  %9 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 2, !dbg !17006
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %9, metadata !17007, metadata !DIExpression()) #24, !dbg !17014
  %10 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !17016, !srcloc !17022
  call void @llvm.dbg.value(metadata i32 undef, metadata !17019, metadata !DIExpression()) #24, !dbg !17023
  call void @llvm.dbg.value(metadata i32 undef, metadata !17020, metadata !DIExpression()) #24, !dbg !17023
  call void @llvm.dbg.value(metadata i32 undef, metadata !17013, metadata !DIExpression()) #24, !dbg !17014
  %11 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull %9) #25, !dbg !17024
  br i1 %11, label %13, label %12, !dbg !17027

12:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.375, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6.381, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.382, i32 0, i32 0), i32 noundef 148) #25, !dbg !17028
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8.383, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %9) #25, !dbg !17028
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.382, i32 0, i32 0), i32 noundef 148) #25, !dbg !17028
  unreachable, !dbg !17028

13:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i32 undef, metadata !17019, metadata !DIExpression()) #24, !dbg !17023
  call void @llvm.dbg.value(metadata i32 undef, metadata !17013, metadata !DIExpression()) #24, !dbg !17014
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull %9) #25, !dbg !17030
  call void @llvm.dbg.value(metadata i32 undef, metadata !16997, metadata !DIExpression()), !dbg !17003
  %14 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #24, !dbg !17031, !srcloc !17040
  call void @llvm.dbg.value(metadata i32 %14, metadata !17034, metadata !DIExpression()) #24, !dbg !17041
  %15 = icmp eq i32 %14, 0, !dbg !17042
  %16 = icmp eq i64 %5, 0, !dbg !17043
  %17 = select i1 %15, i1 true, i1 %16, !dbg !17043
  br i1 %17, label %18, label %25, !dbg !17043

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i8* null, metadata !16996, metadata !DIExpression()), !dbg !17003
  call void @llvm.dbg.value(metadata i8 0, metadata !17002, metadata !DIExpression()), !dbg !17003
  call void @llvm.dbg.value(metadata i32 undef, metadata !16997, metadata !DIExpression()), !dbg !17003
  %20 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef %19, i32 noundef %1, i32 noundef %2) #25, !dbg !17044
  call void @llvm.dbg.value(metadata i8* %20, metadata !16996, metadata !DIExpression()), !dbg !17003
  %21 = tail call i64 @sys_clock_tick_get() #25, !dbg !17046
  call void @llvm.dbg.value(metadata i64 %21, metadata !16994, metadata !DIExpression()), !dbg !17003
  %22 = icmp eq i8* %20, null, !dbg !17047
  br i1 %22, label %23, label %43, !dbg !17049

23:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 undef, metadata !16997, metadata !DIExpression()), !dbg !17003
  %24 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1
  br label %26, !dbg !17049

25:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.375, i32 0, i32 0), i8* noundef getelementptr inbounds ([70 x i8], [70 x i8]* @.str.1.384, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.377, i32 0, i32 0), i32 noundef 76) #25, !dbg !17050
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.385, i32 0, i32 0)) #25, !dbg !17050
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.377, i32 0, i32 0), i32 noundef 76) #25, !dbg !17050
  unreachable, !dbg !17050

26:                                               ; preds = %23, %39
  %27 = phi i64 [ %21, %23 ], [ %41, %39 ]
  %28 = phi { i32, i32 } [ %10, %23 ], [ %36, %39 ]
  call void @llvm.dbg.value(metadata i8 undef, metadata !17002, metadata !DIExpression()), !dbg !17003
  %29 = sub nsw i64 %8, %27, !dbg !17052
  %30 = icmp slt i64 %29, 1, !dbg !17053
  br i1 %30, label %43, label %31, !dbg !17054

31:                                               ; preds = %26
  %32 = extractvalue { i32, i32 } %28, 0, !dbg !17003
  call void @llvm.dbg.value(metadata i8 undef, metadata !17002, metadata !DIExpression()), !dbg !17003
  %33 = insertvalue [1 x i32] poison, i32 %32, 0, !dbg !17055
  %34 = insertvalue [1 x i64] poison, i64 %29, 0, !dbg !17055
  %35 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull %9, [1 x i32] %33, %union.anon* noundef nonnull %24, [1 x i64] %34) #25, !dbg !17055
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %9, metadata !17007, metadata !DIExpression()) #24, !dbg !17056
  %36 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !17058, !srcloc !17022
  call void @llvm.dbg.value(metadata i32 undef, metadata !17019, metadata !DIExpression()) #24, !dbg !17060
  call void @llvm.dbg.value(metadata i32 undef, metadata !17020, metadata !DIExpression()) #24, !dbg !17060
  call void @llvm.dbg.value(metadata i32 undef, metadata !17013, metadata !DIExpression()) #24, !dbg !17056
  %37 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull %9) #25, !dbg !17061
  br i1 %37, label %39, label %38, !dbg !17062

38:                                               ; preds = %31
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.375, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6.381, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.382, i32 0, i32 0), i32 noundef 148) #25, !dbg !17063
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8.383, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %9) #25, !dbg !17063
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.382, i32 0, i32 0), i32 noundef 148) #25, !dbg !17063
  unreachable, !dbg !17063

39:                                               ; preds = %31
  call void @llvm.dbg.value(metadata i8 undef, metadata !17002, metadata !DIExpression()), !dbg !17003
  call void @llvm.dbg.value(metadata i32 undef, metadata !17019, metadata !DIExpression()) #24, !dbg !17060
  call void @llvm.dbg.value(metadata i32 undef, metadata !17013, metadata !DIExpression()) #24, !dbg !17056
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull %9) #25, !dbg !17064
  call void @llvm.dbg.value(metadata i32 undef, metadata !16997, metadata !DIExpression()), !dbg !17003
  call void @llvm.dbg.value(metadata i8* null, metadata !16996, metadata !DIExpression()), !dbg !17003
  call void @llvm.dbg.value(metadata i32 undef, metadata !16997, metadata !DIExpression()), !dbg !17003
  %40 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef %19, i32 noundef %1, i32 noundef %2) #25, !dbg !17044
  call void @llvm.dbg.value(metadata i8* %40, metadata !16996, metadata !DIExpression()), !dbg !17003
  %41 = tail call i64 @sys_clock_tick_get() #25, !dbg !17046
  call void @llvm.dbg.value(metadata i64 %41, metadata !16994, metadata !DIExpression()), !dbg !17003
  %42 = icmp eq i8* %40, null, !dbg !17047
  br i1 %42, label %26, label %43, !dbg !17049, !llvm.loop !17065

43:                                               ; preds = %39, %26, %18
  %44 = phi { i32, i32 } [ %10, %18 ], [ %28, %26 ], [ %36, %39 ]
  %45 = phi i8* [ %20, %18 ], [ null, %26 ], [ %40, %39 ], !dbg !17044
  call void @llvm.dbg.value(metadata i8* %45, metadata !16996, metadata !DIExpression()), !dbg !17003
  call void @llvm.dbg.value(metadata i32 undef, metadata !17068, metadata !DIExpression()) #24, !dbg !17074
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %9, metadata !17073, metadata !DIExpression()) #24, !dbg !17074
  %46 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull %9) #25, !dbg !17076
  br i1 %46, label %48, label %47, !dbg !17079

47:                                               ; preds = %43
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.375, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9.386, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.382, i32 0, i32 0), i32 noundef 194) #25, !dbg !17080
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.10.387, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %9) #25, !dbg !17080
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.382, i32 0, i32 0), i32 noundef 194) #25, !dbg !17080
  unreachable, !dbg !17080

48:                                               ; preds = %43
  %49 = extractvalue { i32, i32 } %44, 0, !dbg !17003
  call void @llvm.dbg.value(metadata i32 %49, metadata !17068, metadata !DIExpression()) #24, !dbg !17074
  call void @llvm.dbg.value(metadata i32 %49, metadata !17082, metadata !DIExpression()) #24, !dbg !17085
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %49) #24, !dbg !17087, !srcloc !17088
  ret i8* %45, !dbg !17089
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_heap_alloc(%struct.k_heap* noundef %0, i32 noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !17090 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !17096, metadata !DIExpression()), !dbg !17098
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !17094, metadata !DIExpression()), !dbg !17098
  call void @llvm.dbg.value(metadata i32 %1, metadata !17095, metadata !DIExpression()), !dbg !17098
  %4 = tail call i8* @k_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef 4, i32 noundef %1, [1 x i64] %2) #26, !dbg !17099
  call void @llvm.dbg.value(metadata i8* %4, metadata !17097, metadata !DIExpression()), !dbg !17098
  ret i8* %4, !dbg !17100
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_heap_free(%struct.k_heap* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !17101 {
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !17105, metadata !DIExpression()), !dbg !17108
  call void @llvm.dbg.value(metadata i8* %1, metadata !17106, metadata !DIExpression()), !dbg !17108
  %3 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 2, !dbg !17109
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %3, metadata !17007, metadata !DIExpression()) #24, !dbg !17110
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #24, !dbg !17112, !srcloc !17022
  call void @llvm.dbg.value(metadata i32 undef, metadata !17019, metadata !DIExpression()) #24, !dbg !17114
  call void @llvm.dbg.value(metadata i32 undef, metadata !17020, metadata !DIExpression()) #24, !dbg !17114
  call void @llvm.dbg.value(metadata i32 undef, metadata !17013, metadata !DIExpression()) #24, !dbg !17110
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull %3) #25, !dbg !17115
  br i1 %5, label %7, label %6, !dbg !17116

6:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.375, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6.381, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.382, i32 0, i32 0), i32 noundef 148) #25, !dbg !17117
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8.383, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %3) #25, !dbg !17117
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.382, i32 0, i32 0), i32 noundef 148) #25, !dbg !17117
  unreachable, !dbg !17117

7:                                                ; preds = %2
  %8 = extractvalue { i32, i32 } %4, 0, !dbg !17112
  call void @llvm.dbg.value(metadata i32 %8, metadata !17019, metadata !DIExpression()) #24, !dbg !17114
  call void @llvm.dbg.value(metadata i32 %8, metadata !17013, metadata !DIExpression()) #24, !dbg !17110
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull %3) #25, !dbg !17118
  call void @llvm.dbg.value(metadata i32 %8, metadata !17107, metadata !DIExpression()), !dbg !17108
  %9 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0, !dbg !17119
  tail call void @sys_heap_free(%struct.sys_heap* noundef %9, i8* noundef %1) #25, !dbg !17120
  %10 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1, !dbg !17121
  %11 = tail call i32 @z_unpend_all(%union.anon* noundef nonnull %10) #25, !dbg !17123
  %12 = icmp eq i32 %11, 0, !dbg !17124
  br i1 %12, label %15, label %13, !dbg !17125

13:                                               ; preds = %7
  %14 = insertvalue [1 x i32] poison, i32 %8, 0, !dbg !17126
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %3, [1 x i32] %14) #25, !dbg !17126
  br label %19, !dbg !17128

15:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i32 undef, metadata !17068, metadata !DIExpression()) #24, !dbg !17129
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %3, metadata !17073, metadata !DIExpression()) #24, !dbg !17129
  %16 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull %3) #25, !dbg !17132
  br i1 %16, label %18, label %17, !dbg !17133

17:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.375, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9.386, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.382, i32 0, i32 0), i32 noundef 194) #25, !dbg !17134
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.10.387, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %3) #25, !dbg !17134
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.382, i32 0, i32 0), i32 noundef 194) #25, !dbg !17134
  unreachable, !dbg !17134

18:                                               ; preds = %15
  call void @llvm.dbg.value(metadata i32 %8, metadata !17068, metadata !DIExpression()) #24, !dbg !17129
  call void @llvm.dbg.value(metadata i32 %8, metadata !17082, metadata !DIExpression()) #24, !dbg !17135
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #24, !dbg !17137, !srcloc !17088
  br label %19

19:                                               ; preds = %18, %13
  ret void, !dbg !17138
}

attributes #0 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #1 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #2 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #3 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #4 = { argmemonly nofree nosync nounwind willreturn }
attributes #5 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #6 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #7 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #8 = { nofree noinline nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { nofree noinline nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #10 = { nofree nosync nounwind willreturn }
attributes #11 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #13 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #14 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #15 = { mustprogress nofree noinline nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { argmemonly nofree nounwind willreturn writeonly }
attributes #17 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #18 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #19 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #21 = { mustprogress nofree noinline nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #22 = { alwaysinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #23 = { mustprogress nofree noinline nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #24 = { nounwind }
attributes #25 = { nobuiltin nounwind optsize "no-builtins" }
attributes #26 = { nobuiltin optsize "no-builtins" }
attributes #27 = { nobuiltin nounwind optsize readnone willreturn "no-builtins" }
attributes #28 = { nobuiltin noreturn nounwind optsize "no-builtins" }
attributes #29 = { nobuiltin noreturn optsize "no-builtins" }

!llvm.dbg.cu = !{!1174, !2, !2344, !27, !348, !414, !436, !2346, !2348, !2381, !2415, !2417, !446, !2419, !2422, !2433, !2480, !2482, !2510, !2538, !2581, !2652, !2697, !2725, !875, !885, !991, !1185, !1466, !2730, !1726, !2732, !2735, !2812, !2826, !2838, !2963, !1756, !2966, !1762, !2121, !2984, !2986, !2142, !2167, !3086, !2278, !3089, !2319}
!llvm.ident = !{!3091, !3091, !3091, !3091, !3091, !3091, !3091, !3091, !3091, !3091, !3091, !3091, !3091, !3091, !3091, !3091, !3091, !3091, !3091, !3091, !3091, !3091, !3091, !3091, !3091, !3091, !3091, !3091, !3091, !3091, !3091, !3091, !3091, !3091, !3091, !3091, !3091, !3091, !3091, !3091, !3091, !3091, !3091, !3091, !3091, !3091, !3091, !3091, !3091}
!llvm.module.flags = !{!3092, !3093, !3094, !3095, !3096, !3097, !3098, !3099, !3100}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "_irq_vector_table", scope: !2, file: !7, line: 10, type: !21, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/metairq_dispatch/zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/metairq_dispatch")
!4 = !{!0, !5}
!5 = !DIGlobalVariableExpression(var: !6, expr: !DIExpression())
!6 = distinct !DIGlobalVariable(name: "_sw_isr_table", scope: !2, file: !7, line: 139, type: !8, isLocal: false, isDefinition: true)
!7 = !DIFile(filename: "zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/metairq_dispatch")
!8 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 8128, elements: !19)
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_table_entry", file: !10, line: 36, size: 64, elements: !11)
!10 = !DIFile(filename: "zephyr/include/zephyr/sw_isr_table.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11 = !{!12, !15}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !9, file: !10, line: 37, baseType: !13, size: 32)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 32)
!14 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "isr", scope: !9, file: !10, line: 38, baseType: !16, size: 32, offset: 32)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 32)
!17 = !DISubroutineType(types: !18)
!18 = !{null, !13}
!19 = !{!20}
!20 = !DISubrange(count: 127)
!21 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 4064, elements: !19)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !23, line: 105, baseType: !24)
!23 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdint.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!24 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(name: "log_const_main", scope: !27, file: !120, line: 10, type: !340, isLocal: false, isDefinition: true)
!27 = distinct !DICompileUnit(language: DW_LANG_C99, file: !28, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !117, splitDebugInlining: false, nameTableKind: None)
!28 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/kernel/metairq_dispatch/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/metairq_dispatch")
!29 = !{!30}
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_objects", file: !31, line: 27, baseType: !32, size: 32, elements: !33)
!31 = !DIFile(filename: "zephyr/include/zephyr/sys/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!32 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!33 = !{!34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100}
!34 = !DIEnumerator(name: "K_OBJ_ANY", value: 0)
!35 = !DIEnumerator(name: "K_OBJ_MEM_SLAB", value: 1)
!36 = !DIEnumerator(name: "K_OBJ_MSGQ", value: 2)
!37 = !DIEnumerator(name: "K_OBJ_MUTEX", value: 3)
!38 = !DIEnumerator(name: "K_OBJ_PIPE", value: 4)
!39 = !DIEnumerator(name: "K_OBJ_QUEUE", value: 5)
!40 = !DIEnumerator(name: "K_OBJ_POLL_SIGNAL", value: 6)
!41 = !DIEnumerator(name: "K_OBJ_SEM", value: 7)
!42 = !DIEnumerator(name: "K_OBJ_STACK", value: 8)
!43 = !DIEnumerator(name: "K_OBJ_THREAD", value: 9)
!44 = !DIEnumerator(name: "K_OBJ_TIMER", value: 10)
!45 = !DIEnumerator(name: "K_OBJ_THREAD_STACK_ELEMENT", value: 11)
!46 = !DIEnumerator(name: "K_OBJ_NET_SOCKET", value: 12)
!47 = !DIEnumerator(name: "K_OBJ_NET_IF", value: 13)
!48 = !DIEnumerator(name: "K_OBJ_SYS_MUTEX", value: 14)
!49 = !DIEnumerator(name: "K_OBJ_FUTEX", value: 15)
!50 = !DIEnumerator(name: "K_OBJ_CONDVAR", value: 16)
!51 = !DIEnumerator(name: "K_OBJ_DRIVER_CRYPTO", value: 17)
!52 = !DIEnumerator(name: "K_OBJ_DRIVER_ADC", value: 18)
!53 = !DIEnumerator(name: "K_OBJ_DRIVER_BBRAM", value: 19)
!54 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN", value: 20)
!55 = !DIEnumerator(name: "K_OBJ_DRIVER_COREDUMP", value: 21)
!56 = !DIEnumerator(name: "K_OBJ_DRIVER_COUNTER", value: 22)
!57 = !DIEnumerator(name: "K_OBJ_DRIVER_DAC", value: 23)
!58 = !DIEnumerator(name: "K_OBJ_DRIVER_DAI", value: 24)
!59 = !DIEnumerator(name: "K_OBJ_DRIVER_DMA", value: 25)
!60 = !DIEnumerator(name: "K_OBJ_DRIVER_EDAC", value: 26)
!61 = !DIEnumerator(name: "K_OBJ_DRIVER_EEPROM", value: 27)
!62 = !DIEnumerator(name: "K_OBJ_DRIVER_ENTROPY", value: 28)
!63 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI", value: 29)
!64 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI_SAF", value: 30)
!65 = !DIEnumerator(name: "K_OBJ_DRIVER_FLASH", value: 31)
!66 = !DIEnumerator(name: "K_OBJ_DRIVER_FPGA", value: 32)
!67 = !DIEnumerator(name: "K_OBJ_DRIVER_BATTERY", value: 33)
!68 = !DIEnumerator(name: "K_OBJ_DRIVER_GPIO", value: 34)
!69 = !DIEnumerator(name: "K_OBJ_DRIVER_I2C", value: 35)
!70 = !DIEnumerator(name: "K_OBJ_DRIVER_I2S", value: 36)
!71 = !DIEnumerator(name: "K_OBJ_DRIVER_I3C", value: 37)
!72 = !DIEnumerator(name: "K_OBJ_DRIVER_IPM", value: 38)
!73 = !DIEnumerator(name: "K_OBJ_DRIVER_KSCAN", value: 39)
!74 = !DIEnumerator(name: "K_OBJ_DRIVER_LED", value: 40)
!75 = !DIEnumerator(name: "K_OBJ_DRIVER_MBOX", value: 41)
!76 = !DIEnumerator(name: "K_OBJ_DRIVER_MDIO", value: 42)
!77 = !DIEnumerator(name: "K_OBJ_DRIVER_MIPI_DSI", value: 43)
!78 = !DIEnumerator(name: "K_OBJ_DRIVER_PECI", value: 44)
!79 = !DIEnumerator(name: "K_OBJ_DRIVER_PINMUX", value: 45)
!80 = !DIEnumerator(name: "K_OBJ_DRIVER_PS2", value: 46)
!81 = !DIEnumerator(name: "K_OBJ_DRIVER_PTP_CLOCK", value: 47)
!82 = !DIEnumerator(name: "K_OBJ_DRIVER_PWM", value: 48)
!83 = !DIEnumerator(name: "K_OBJ_DRIVER_REGULATOR", value: 49)
!84 = !DIEnumerator(name: "K_OBJ_DRIVER_RESET", value: 50)
!85 = !DIEnumerator(name: "K_OBJ_DRIVER_SDHC", value: 51)
!86 = !DIEnumerator(name: "K_OBJ_DRIVER_SENSOR", value: 52)
!87 = !DIEnumerator(name: "K_OBJ_DRIVER_SPI", value: 53)
!88 = !DIEnumerator(name: "K_OBJ_DRIVER_SYSCON", value: 54)
!89 = !DIEnumerator(name: "K_OBJ_DRIVER_UART", value: 55)
!90 = !DIEnumerator(name: "K_OBJ_DRIVER_W1", value: 56)
!91 = !DIEnumerator(name: "K_OBJ_DRIVER_WDT", value: 57)
!92 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN_TRANSCEIVER", value: 58)
!93 = !DIEnumerator(name: "K_OBJ_DRIVER_UART_MUX", value: 59)
!94 = !DIEnumerator(name: "K_OBJ_DRIVER_EC_HOST_CMD_PERIPH_API", value: 60)
!95 = !DIEnumerator(name: "K_OBJ_DRIVER_ITS", value: 61)
!96 = !DIEnumerator(name: "K_OBJ_DRIVER_PCIE_CTRL", value: 62)
!97 = !DIEnumerator(name: "K_OBJ_DRIVER_TCPC", value: 63)
!98 = !DIEnumerator(name: "K_OBJ_DRIVER_IVSHMEM", value: 64)
!99 = !DIEnumerator(name: "K_OBJ_DRIVER_ETHPHY", value: 65)
!100 = !DIEnumerator(name: "K_OBJ_LAST", value: 66)
!101 = !{!102, !104, !105, !106, !107, !111, !113, !114, !116}
!102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !103, size: 32)
!103 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!105 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!106 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!107 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_ticks_t", file: !108, line: 46, baseType: !109)
!108 = !DIFile(filename: "zephyr/include/zephyr/sys_clock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!109 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !23, line: 75, baseType: !110)
!110 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!111 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !112, line: 214, baseType: !32)
!112 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stddef.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!113 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !23, line: 90, baseType: !32)
!114 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !23, line: 91, baseType: !115)
!115 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!116 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !23, line: 74, baseType: !105)
!117 = !{!25, !118, !265, !269, !276, !309, !314, !318, !320}
!118 = !DIGlobalVariableExpression(var: !119, expr: !DIExpression())
!119 = distinct !DIGlobalVariable(name: "_k_thread_data_metairq_thread", scope: !27, file: !120, line: 28, type: !121, isLocal: false, isDefinition: true, align: 32)
!120 = !DIFile(filename: "zephyr/samples/kernel/metairq_dispatch/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!121 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !122, line: 620, size: 384, elements: !123)
!122 = !DIFile(filename: "zephyr/include/zephyr/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!123 = !{!124, !238, !246, !247, !252, !253, !254, !255, !256, !257, !258, !262}
!124 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !121, file: !122, line: 621, baseType: !125, size: 32)
!125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !126, size: 32)
!126 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !127, line: 245, size: 896, elements: !128)
!127 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!128 = !{!129, !198, !211, !212, !213, !214, !233}
!129 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !126, file: !127, line: 247, baseType: !130, size: 384)
!130 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !127, line: 57, size: 384, elements: !131)
!131 = !{!132, !160, !168, !171, !172, !185, !186, !187}
!132 = !DIDerivedType(tag: DW_TAG_member, scope: !130, file: !127, line: 60, baseType: !133, size: 64)
!133 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !130, file: !127, line: 60, size: 64, elements: !134)
!134 = !{!135, !151}
!135 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !133, file: !127, line: 61, baseType: !136, size: 64)
!136 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !137, line: 49, baseType: !138)
!137 = !DIFile(filename: "zephyr/include/zephyr/sys/dlist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!138 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !137, line: 37, size: 64, elements: !139)
!139 = !{!140, !146}
!140 = !DIDerivedType(tag: DW_TAG_member, scope: !138, file: !137, line: 38, baseType: !141, size: 32)
!141 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !138, file: !137, line: 38, size: 32, elements: !142)
!142 = !{!143, !145}
!143 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !141, file: !137, line: 39, baseType: !144, size: 32)
!144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !138, size: 32)
!145 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !141, file: !137, line: 40, baseType: !144, size: 32)
!146 = !DIDerivedType(tag: DW_TAG_member, scope: !138, file: !137, line: 42, baseType: !147, size: 32, offset: 32)
!147 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !138, file: !137, line: 42, size: 32, elements: !148)
!148 = !{!149, !150}
!149 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !147, file: !137, line: 43, baseType: !144, size: 32)
!150 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !147, file: !137, line: 44, baseType: !144, size: 32)
!151 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !133, file: !127, line: 62, baseType: !152, size: 64)
!152 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !153, line: 49, size: 64, elements: !154)
!153 = !DIFile(filename: "zephyr/include/zephyr/sys/rb.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!154 = !{!155}
!155 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !152, file: !153, line: 50, baseType: !156, size: 64)
!156 = !DICompositeType(tag: DW_TAG_array_type, baseType: !157, size: 64, elements: !158)
!157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !152, size: 32)
!158 = !{!159}
!159 = !DISubrange(count: 2)
!160 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !130, file: !127, line: 68, baseType: !161, size: 32, offset: 64)
!161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !162, size: 32)
!162 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !163, line: 233, baseType: !164)
!163 = !DIFile(filename: "zephyr/include/zephyr/kernel_structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!164 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !163, line: 231, size: 64, elements: !165)
!165 = !{!166}
!166 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !164, file: !163, line: 232, baseType: !167, size: 64)
!167 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !137, line: 48, baseType: !138)
!168 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !130, file: !127, line: 71, baseType: !169, size: 8, offset: 96)
!169 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !23, line: 88, baseType: !170)
!170 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!171 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !130, file: !127, line: 74, baseType: !169, size: 8, offset: 104)
!172 = !DIDerivedType(tag: DW_TAG_member, scope: !130, file: !127, line: 90, baseType: !173, size: 16, offset: 112)
!173 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !130, file: !127, line: 90, size: 16, elements: !174)
!174 = !{!175, !182}
!175 = !DIDerivedType(tag: DW_TAG_member, scope: !173, file: !127, line: 91, baseType: !176, size: 16)
!176 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !173, file: !127, line: 91, size: 16, elements: !177)
!177 = !{!178, !181}
!178 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !176, file: !127, line: 96, baseType: !179, size: 8)
!179 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !23, line: 72, baseType: !180)
!180 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!181 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !176, file: !127, line: 97, baseType: !169, size: 8, offset: 8)
!182 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !173, file: !127, line: 100, baseType: !183, size: 16)
!183 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !23, line: 89, baseType: !184)
!184 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!185 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !130, file: !127, line: 107, baseType: !113, size: 32, offset: 128)
!186 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !130, file: !127, line: 127, baseType: !104, size: 32, offset: 160)
!187 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !130, file: !127, line: 131, baseType: !188, size: 192, offset: 192)
!188 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !163, line: 244, size: 192, elements: !189)
!189 = !{!190, !191, !197}
!190 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !188, file: !163, line: 245, baseType: !136, size: 64)
!191 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !188, file: !163, line: 246, baseType: !192, size: 32, offset: 64)
!192 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !163, line: 242, baseType: !193)
!193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !194, size: 32)
!194 = !DISubroutineType(types: !195)
!195 = !{null, !196}
!196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !188, size: 32)
!197 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !188, file: !163, line: 249, baseType: !109, size: 64, offset: 128)
!198 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !126, file: !127, line: 250, baseType: !199, size: 288, offset: 384)
!199 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !200, line: 25, size: 288, elements: !201)
!200 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!201 = !{!202, !203, !204, !205, !206, !207, !208, !209, !210}
!202 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !199, file: !200, line: 26, baseType: !113, size: 32)
!203 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !199, file: !200, line: 27, baseType: !113, size: 32, offset: 32)
!204 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !199, file: !200, line: 28, baseType: !113, size: 32, offset: 64)
!205 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !199, file: !200, line: 29, baseType: !113, size: 32, offset: 96)
!206 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !199, file: !200, line: 30, baseType: !113, size: 32, offset: 128)
!207 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !199, file: !200, line: 31, baseType: !113, size: 32, offset: 160)
!208 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !199, file: !200, line: 32, baseType: !113, size: 32, offset: 192)
!209 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !199, file: !200, line: 33, baseType: !113, size: 32, offset: 224)
!210 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !199, file: !200, line: 34, baseType: !113, size: 32, offset: 256)
!211 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !126, file: !127, line: 253, baseType: !104, size: 32, offset: 672)
!212 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !126, file: !127, line: 256, baseType: !162, size: 64, offset: 704)
!213 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !126, file: !127, line: 294, baseType: !105, size: 32, offset: 768)
!214 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !126, file: !127, line: 325, baseType: !215, size: 32, offset: 800)
!215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !216, size: 32)
!216 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !122, line: 5073, size: 192, elements: !217)
!217 = !{!218, !227, !228}
!218 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !216, file: !122, line: 5074, baseType: !219, size: 96)
!219 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !220, line: 56, size: 96, elements: !221)
!220 = !DIFile(filename: "zephyr/include/zephyr/sys/sys_heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!221 = !{!222, !225, !226}
!222 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !219, file: !220, line: 57, baseType: !223, size: 32)
!223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !224, size: 32)
!224 = !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !220, line: 57, flags: DIFlagFwdDecl)
!225 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !219, file: !220, line: 58, baseType: !104, size: 32, offset: 32)
!226 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !219, file: !220, line: 59, baseType: !111, size: 32, offset: 64)
!227 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !216, file: !122, line: 5075, baseType: !162, size: 64, offset: 96)
!228 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !216, file: !122, line: 5076, baseType: !229, size: 32, offset: 160)
!229 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !230, line: 43, size: 32, elements: !231)
!230 = !DIFile(filename: "zephyr/include/zephyr/spinlock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!231 = !{!232}
!232 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !229, file: !230, line: 52, baseType: !22, size: 32)
!233 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !126, file: !127, line: 343, baseType: !234, size: 64, offset: 832)
!234 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !200, line: 60, size: 64, elements: !235)
!235 = !{!236, !237}
!236 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !234, file: !200, line: 63, baseType: !113, size: 32)
!237 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !234, file: !200, line: 66, baseType: !113, size: 32, offset: 32)
!238 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !121, file: !122, line: 622, baseType: !239, size: 32, offset: 32)
!239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !240, size: 32)
!240 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !241, line: 44, baseType: !242)
!241 = !DIFile(filename: "zephyr/include/zephyr/sys/arch_interface.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!242 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !243, line: 47, size: 8, elements: !244)
!243 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread_stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!244 = !{!245}
!245 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !242, file: !243, line: 48, baseType: !103, size: 8)
!246 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !121, file: !122, line: 623, baseType: !32, size: 32, offset: 64)
!247 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !121, file: !122, line: 624, baseType: !248, size: 32, offset: 96)
!248 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_entry_t", file: !241, line: 46, baseType: !249)
!249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !250, size: 32)
!250 = !DISubroutineType(types: !251)
!251 = !{null, !104, !104, !104}
!252 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !121, file: !122, line: 625, baseType: !104, size: 32, offset: 128)
!253 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !121, file: !122, line: 626, baseType: !104, size: 32, offset: 160)
!254 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !121, file: !122, line: 627, baseType: !104, size: 32, offset: 192)
!255 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !121, file: !122, line: 628, baseType: !105, size: 32, offset: 224)
!256 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !121, file: !122, line: 629, baseType: !113, size: 32, offset: 256)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !121, file: !122, line: 630, baseType: !116, size: 32, offset: 288)
!258 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !121, file: !122, line: 631, baseType: !259, size: 32, offset: 320)
!259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !260, size: 32)
!260 = !DISubroutineType(types: !261)
!261 = !{null}
!262 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !121, file: !122, line: 632, baseType: !263, size: 32, offset: 352)
!263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !264, size: 32)
!264 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !103)
!265 = !DIGlobalVariableExpression(var: !266, expr: !DIExpression())
!266 = distinct !DIGlobalVariable(name: "metairq_thread", scope: !27, file: !120, line: 28, type: !267, isLocal: false, isDefinition: true)
!267 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !268)
!268 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !127, line: 347, baseType: !125)
!269 = !DIGlobalVariableExpression(var: !270, expr: !DIExpression())
!270 = distinct !DIGlobalVariable(name: "report_cookie", scope: !27, file: !120, line: 46, type: !271, isLocal: false, isDefinition: true, align: 32)
!271 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sem", file: !122, line: 2909, size: 128, elements: !272)
!272 = !{!273, !274, !275}
!273 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !271, file: !122, line: 2910, baseType: !162, size: 64)
!274 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !271, file: !122, line: 2911, baseType: !32, size: 32, offset: 64)
!275 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !271, file: !122, line: 2912, baseType: !32, size: 32, offset: 96)
!276 = !DIGlobalVariableExpression(var: !277, expr: !DIExpression())
!277 = distinct !DIGlobalVariable(name: "threads", scope: !27, file: !120, line: 22, type: !278, isLocal: true, isDefinition: true)
!278 = !DICompositeType(tag: DW_TAG_array_type, baseType: !279, size: 15360, elements: !307)
!279 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_rec", file: !120, line: 18, size: 3840, elements: !280)
!280 = !{!281, !282, !295}
!281 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !279, file: !120, line: 19, baseType: !126, size: 896)
!282 = !DIDerivedType(tag: DW_TAG_member, name: "msgq", scope: !279, file: !120, line: 20, baseType: !283, size: 352, offset: 896)
!283 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq", file: !122, line: 4204, size: 352, elements: !284)
!284 = !{!285, !286, !287, !288, !289, !290, !291, !292, !293, !294}
!285 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !283, file: !122, line: 4206, baseType: !162, size: 64)
!286 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !283, file: !122, line: 4208, baseType: !229, size: 32, offset: 64)
!287 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !283, file: !122, line: 4210, baseType: !111, size: 32, offset: 96)
!288 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !283, file: !122, line: 4212, baseType: !113, size: 32, offset: 128)
!289 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_start", scope: !283, file: !122, line: 4214, baseType: !102, size: 32, offset: 160)
!290 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !283, file: !122, line: 4216, baseType: !102, size: 32, offset: 192)
!291 = !DIDerivedType(tag: DW_TAG_member, name: "read_ptr", scope: !283, file: !122, line: 4218, baseType: !102, size: 32, offset: 224)
!292 = !DIDerivedType(tag: DW_TAG_member, name: "write_ptr", scope: !283, file: !122, line: 4220, baseType: !102, size: 32, offset: 256)
!293 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !283, file: !122, line: 4222, baseType: !113, size: 32, offset: 288)
!294 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !283, file: !122, line: 4227, baseType: !169, size: 8, offset: 320)
!295 = !DIDerivedType(tag: DW_TAG_member, name: "msgq_buf", scope: !279, file: !120, line: 21, baseType: !296, size: 2560, offset: 1248)
!296 = !DICompositeType(tag: DW_TAG_array_type, baseType: !297, size: 2560, elements: !305)
!297 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "msg", file: !298, line: 44, size: 160, elements: !299)
!298 = !DIFile(filename: "zephyr/samples/kernel/metairq_dispatch/src/msgdev.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!299 = !{!300, !301, !302, !303, !304}
!300 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !297, file: !298, line: 46, baseType: !113, size: 32)
!301 = !DIDerivedType(tag: DW_TAG_member, name: "timestamp", scope: !297, file: !298, line: 49, baseType: !113, size: 32, offset: 32)
!302 = !DIDerivedType(tag: DW_TAG_member, name: "target", scope: !297, file: !298, line: 52, baseType: !113, size: 32, offset: 64)
!303 = !DIDerivedType(tag: DW_TAG_member, name: "proc_cyc", scope: !297, file: !298, line: 55, baseType: !113, size: 32, offset: 96)
!304 = !DIDerivedType(tag: DW_TAG_member, name: "metairq_latency", scope: !297, file: !298, line: 58, baseType: !113, size: 32, offset: 128)
!305 = !{!306}
!306 = !DISubrange(count: 16)
!307 = !{!308}
!308 = !DISubrange(count: 4)
!309 = !DIGlobalVariableExpression(var: !310, expr: !DIExpression())
!310 = distinct !DIGlobalVariable(name: "thread_stacks", scope: !27, file: !120, line: 24, type: !311, isLocal: false, isDefinition: true, align: 64)
!311 = !DICompositeType(tag: DW_TAG_array_type, baseType: !242, size: 65536, elements: !312)
!312 = !{!308, !313}
!313 = !DISubrange(count: 2048)
!314 = !DIGlobalVariableExpression(var: !315, expr: !DIExpression())
!315 = distinct !DIGlobalVariable(name: "_k_thread_stack_metairq_thread", scope: !27, file: !120, line: 28, type: !316, isLocal: false, isDefinition: true, align: 64)
!316 = !DICompositeType(tag: DW_TAG_array_type, baseType: !242, size: 16384, elements: !317)
!317 = !{!313}
!318 = !DIGlobalVariableExpression(var: !319, expr: !DIExpression())
!319 = distinct !DIGlobalVariable(name: "_k_thread_obj_metairq_thread", scope: !27, file: !120, line: 28, type: !126, isLocal: false, isDefinition: true)
!320 = !DIGlobalVariableExpression(var: !321, expr: !DIExpression())
!321 = distinct !DIGlobalVariable(name: "stats", scope: !27, file: !120, line: 41, type: !322, isLocal: false, isDefinition: true)
!322 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !120, line: 34, size: 4000, elements: !323)
!323 = !{!324, !327, !331}
!324 = !DIDerivedType(tag: DW_TAG_member, name: "num_mirq", scope: !322, file: !120, line: 35, baseType: !325, size: 32)
!325 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_t", file: !326, line: 22, baseType: !106)
!326 = !DIFile(filename: "zephyr/include/zephyr/sys/atomic.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!327 = !DIDerivedType(tag: DW_TAG_member, name: "mirq_latencies", scope: !322, file: !120, line: 36, baseType: !328, size: 1280, offset: 32)
!328 = !DICompositeType(tag: DW_TAG_array_type, baseType: !113, size: 1280, elements: !329)
!329 = !{!330}
!330 = !DISubrange(count: 40)
!331 = !DIDerivedType(tag: DW_TAG_member, name: "threads", scope: !322, file: !120, line: 40, baseType: !332, size: 2688, offset: 1312)
!332 = !DICompositeType(tag: DW_TAG_array_type, baseType: !333, size: 2688, elements: !307)
!333 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !322, file: !120, line: 37, size: 672, elements: !334)
!334 = !{!335, !336}
!335 = !DIDerivedType(tag: DW_TAG_member, name: "nevt", scope: !333, file: !120, line: 38, baseType: !113, size: 32)
!336 = !DIDerivedType(tag: DW_TAG_member, name: "latencies", scope: !333, file: !120, line: 39, baseType: !337, size: 640, offset: 32)
!337 = !DICompositeType(tag: DW_TAG_array_type, baseType: !113, size: 640, elements: !338)
!338 = !{!339}
!339 = !DISubrange(count: 20)
!340 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !341)
!341 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !342, line: 16, size: 64, elements: !343)
!342 = !DIFile(filename: "zephyr/include/zephyr/logging/log_instance.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!343 = !{!344, !345}
!344 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !341, file: !342, line: 17, baseType: !263, size: 32)
!345 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !341, file: !342, line: 18, baseType: !169, size: 8, offset: 32)
!346 = !DIGlobalVariableExpression(var: !347, expr: !DIExpression())
!347 = distinct !DIGlobalVariable(name: "hw_msgs", scope: !348, file: !354, line: 27, type: !392, isLocal: false, isDefinition: true, align: 32)
!348 = distinct !DICompileUnit(language: DW_LANG_C99, file: !349, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !350, globals: !351, splitDebugInlining: false, nameTableKind: None)
!349 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/kernel/metairq_dispatch/src/msgdev.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/metairq_dispatch")
!350 = !{!107, !104, !105, !113, !114}
!351 = !{!346, !352, !379, !381, !383, !386}
!352 = !DIGlobalVariableExpression(var: !353, expr: !DIExpression())
!353 = distinct !DIGlobalVariable(name: "timeout", scope: !348, file: !354, line: 17, type: !355, isLocal: true, isDefinition: true)
!354 = !DIFile(filename: "zephyr/samples/kernel/metairq_dispatch/src/msgdev.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!355 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !163, line: 244, size: 192, elements: !356)
!356 = !{!357, !372, !378}
!357 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !355, file: !163, line: 245, baseType: !358, size: 64)
!358 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !137, line: 49, baseType: !359)
!359 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !137, line: 37, size: 64, elements: !360)
!360 = !{!361, !367}
!361 = !DIDerivedType(tag: DW_TAG_member, scope: !359, file: !137, line: 38, baseType: !362, size: 32)
!362 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !359, file: !137, line: 38, size: 32, elements: !363)
!363 = !{!364, !366}
!364 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !362, file: !137, line: 39, baseType: !365, size: 32)
!365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !359, size: 32)
!366 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !362, file: !137, line: 40, baseType: !365, size: 32)
!367 = !DIDerivedType(tag: DW_TAG_member, scope: !359, file: !137, line: 42, baseType: !368, size: 32, offset: 32)
!368 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !359, file: !137, line: 42, size: 32, elements: !369)
!369 = !{!370, !371}
!370 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !368, file: !137, line: 43, baseType: !365, size: 32)
!371 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !368, file: !137, line: 44, baseType: !365, size: 32)
!372 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !355, file: !163, line: 246, baseType: !373, size: 32, offset: 64)
!373 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !163, line: 242, baseType: !374)
!374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !375, size: 32)
!375 = !DISubroutineType(types: !376)
!376 = !{null, !377}
!377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !355, size: 32)
!378 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !355, file: !163, line: 249, baseType: !109, size: 64, offset: 128)
!379 = !DIGlobalVariableExpression(var: !380, expr: !DIExpression())
!380 = distinct !DIGlobalVariable(name: "max_duty_cyc", scope: !348, file: !354, line: 23, type: !113, isLocal: false, isDefinition: true)
!381 = !DIGlobalVariableExpression(var: !382, expr: !DIExpression())
!382 = distinct !DIGlobalVariable(name: "msg_seq", scope: !348, file: !354, line: 25, type: !113, isLocal: false, isDefinition: true)
!383 = !DIGlobalVariableExpression(var: !384, expr: !DIExpression())
!384 = distinct !DIGlobalVariable(name: "_k_fifo_buf_hw_msgs", scope: !348, file: !354, line: 27, type: !385, isLocal: true, isDefinition: true, align: 32)
!385 = !DICompositeType(tag: DW_TAG_array_type, baseType: !103, size: 320, elements: !329)
!386 = !DIGlobalVariableExpression(var: !387, expr: !DIExpression())
!387 = distinct !DIGlobalVariable(name: "state", scope: !388, file: !354, line: 38, type: !114, isLocal: true, isDefinition: true)
!388 = distinct !DISubprogram(name: "rand32", scope: !354, file: !354, line: 36, type: !389, scopeLine: 37, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !348, retainedNodes: !391)
!389 = !DISubroutineType(types: !390)
!390 = !{!113}
!391 = !{}
!392 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq", file: !122, line: 4204, size: 352, elements: !393)
!393 = !{!394, !400, !404, !405, !406, !407, !408, !409, !410, !411}
!394 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !392, file: !122, line: 4206, baseType: !395, size: 64)
!395 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !163, line: 233, baseType: !396)
!396 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !163, line: 231, size: 64, elements: !397)
!397 = !{!398}
!398 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !396, file: !163, line: 232, baseType: !399, size: 64)
!399 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !137, line: 48, baseType: !359)
!400 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !392, file: !122, line: 4208, baseType: !401, size: 32, offset: 64)
!401 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !230, line: 43, size: 32, elements: !402)
!402 = !{!403}
!403 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !401, file: !230, line: 52, baseType: !22, size: 32)
!404 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !392, file: !122, line: 4210, baseType: !111, size: 32, offset: 96)
!405 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !392, file: !122, line: 4212, baseType: !113, size: 32, offset: 128)
!406 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_start", scope: !392, file: !122, line: 4214, baseType: !102, size: 32, offset: 160)
!407 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !392, file: !122, line: 4216, baseType: !102, size: 32, offset: 192)
!408 = !DIDerivedType(tag: DW_TAG_member, name: "read_ptr", scope: !392, file: !122, line: 4218, baseType: !102, size: 32, offset: 224)
!409 = !DIDerivedType(tag: DW_TAG_member, name: "write_ptr", scope: !392, file: !122, line: 4220, baseType: !102, size: 32, offset: 256)
!410 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !392, file: !122, line: 4222, baseType: !113, size: 32, offset: 288)
!411 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !392, file: !122, line: 4227, baseType: !169, size: 8, offset: 320)
!412 = !DIGlobalVariableExpression(var: !413, expr: !DIExpression())
!413 = distinct !DIGlobalVariable(name: "log_const_cbprintf_package", scope: !414, file: !428, line: 18, type: !429, isLocal: false, isDefinition: true)
!414 = distinct !DICompileUnit(language: DW_LANG_C99, file: !415, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !416, globals: !427, splitDebugInlining: false, nameTableKind: None)
!415 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_packaged.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/metairq_dispatch")
!416 = !{!22, !104, !24, !417, !419, !421, !111, !105, !422, !423, !424, !425, !102, !426, !183, !263}
!417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !418, size: 32)
!418 = !DIBasicType(name: "long double", size: 64, encoding: DW_ATE_float)
!419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !420, size: 32)
!420 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !263, size: 32)
!422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !105, size: 32)
!423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !106, size: 32)
!424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !110, size: 32)
!425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !102, size: 32)
!426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !169, size: 32)
!427 = !{!412}
!428 = !DIFile(filename: "zephyr/lib/os/cbprintf_packaged.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!429 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !430)
!430 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !342, line: 16, size: 64, elements: !431)
!431 = !{!432, !433}
!432 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !430, file: !342, line: 17, baseType: !263, size: 32)
!433 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !430, file: !342, line: 18, baseType: !169, size: 8, offset: 32)
!434 = !DIGlobalVariableExpression(var: !435, expr: !DIExpression())
!435 = distinct !DIGlobalVariable(name: "_char_out", scope: !436, file: !440, line: 54, type: !441, isLocal: false, isDefinition: true)
!436 = distinct !DICompileUnit(language: DW_LANG_C99, file: !437, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !438, globals: !439, splitDebugInlining: false, nameTableKind: None)
!437 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/metairq_dispatch")
!438 = !{!104, !105}
!439 = !{!434}
!440 = !DIFile(filename: "zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !442, size: 32)
!442 = !DISubroutineType(types: !443)
!443 = !{!105, !105}
!444 = !DIGlobalVariableExpression(var: !445, expr: !DIExpression())
!445 = distinct !DIGlobalVariable(name: "__init_nxp_mcimx7_init", scope: !446, file: !860, line: 258, type: !861, isLocal: true, isDefinition: true, align: 32)
!446 = distinct !DICompileUnit(language: DW_LANG_C99, file: !447, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !448, retainedTypes: !731, globals: !859, splitDebugInlining: false, nameTableKind: None)
!447 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/nxp_imx/mcimx7_m4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/metairq_dispatch")
!448 = !{!449, !481, !491, !540, !546, !667, !702}
!449 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_ccm_root_control", file: !450, line: 54, baseType: !32, size: 32, elements: !451)
!450 = !DIFile(filename: "modules/hal/nxp/imx/drivers/./ccm_imx7d.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!451 = !{!452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480}
!452 = !DIEnumerator(name: "ccmRootM4", value: 809009280)
!453 = !DIEnumerator(name: "ccmRootAxi", value: 809011200)
!454 = !DIEnumerator(name: "ccmRootAhb", value: 809013248)
!455 = !DIEnumerator(name: "ccmRootIpg", value: 809013376)
!456 = !DIEnumerator(name: "ccmRootQspi", value: 809020032)
!457 = !DIEnumerator(name: "ccmRootCan1", value: 809020544)
!458 = !DIEnumerator(name: "ccmRootCan2", value: 809020672)
!459 = !DIEnumerator(name: "ccmRootI2c1", value: 809020800)
!460 = !DIEnumerator(name: "ccmRootI2c2", value: 809020928)
!461 = !DIEnumerator(name: "ccmRootI2c3", value: 809021056)
!462 = !DIEnumerator(name: "ccmRootI2c4", value: 809021184)
!463 = !DIEnumerator(name: "ccmRootUart1", value: 809021312)
!464 = !DIEnumerator(name: "ccmRootUart2", value: 809021440)
!465 = !DIEnumerator(name: "ccmRootUart3", value: 809021568)
!466 = !DIEnumerator(name: "ccmRootUart4", value: 809021696)
!467 = !DIEnumerator(name: "ccmRootUart5", value: 809021824)
!468 = !DIEnumerator(name: "ccmRootUart6", value: 809021952)
!469 = !DIEnumerator(name: "ccmRootUart7", value: 809022080)
!470 = !DIEnumerator(name: "ccmRootEcspi1", value: 809022208)
!471 = !DIEnumerator(name: "ccmRootEcspi2", value: 809022336)
!472 = !DIEnumerator(name: "ccmRootEcspi3", value: 809022464)
!473 = !DIEnumerator(name: "ccmRootEcspi4", value: 809022592)
!474 = !DIEnumerator(name: "ccmRootFtm1", value: 809023232)
!475 = !DIEnumerator(name: "ccmRootFtm2", value: 809023360)
!476 = !DIEnumerator(name: "ccmRootGpt1", value: 809023744)
!477 = !DIEnumerator(name: "ccmRootGpt2", value: 809023872)
!478 = !DIEnumerator(name: "ccmRootGpt3", value: 809024000)
!479 = !DIEnumerator(name: "ccmRootGpt4", value: 809024128)
!480 = !DIEnumerator(name: "ccmRootWdog", value: 809024384)
!481 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_ccm_rootmux_wdog", file: !450, line: 224, baseType: !32, size: 32, elements: !482)
!482 = !{!483, !484, !485, !486, !487, !488, !489, !490}
!483 = !DIEnumerator(name: "ccmRootmuxWdogOsc24m", value: 0)
!484 = !DIEnumerator(name: "ccmRootmuxWdogSysPllPfd2Div2", value: 1)
!485 = !DIEnumerator(name: "ccmRootmuxWdogSysPllDiv4", value: 2)
!486 = !DIEnumerator(name: "ccmRootmuxWdogDdrPllDiv2", value: 3)
!487 = !DIEnumerator(name: "ccmRootmuxWdogEnetPll125m", value: 4)
!488 = !DIEnumerator(name: "ccmRootmuxWdogUsbPll", value: 5)
!489 = !DIEnumerator(name: "ccmRootmuxWdogRef1m", value: 6)
!490 = !DIEnumerator(name: "ccmRootmuxWdogSysPllPfd1Div2", value: 7)
!491 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_ccm_ccgr_gate", file: !450, line: 275, baseType: !32, size: 32, elements: !492)
!492 = !{!493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539}
!493 = !DIEnumerator(name: "ccmCcgrGateSimWakeup", value: 808992912)
!494 = !DIEnumerator(name: "ccmCcgrGateIpmux1", value: 808992928)
!495 = !DIEnumerator(name: "ccmCcgrGateIpmux2", value: 808992944)
!496 = !DIEnumerator(name: "ccmCcgrGateIpmux3", value: 808992960)
!497 = !DIEnumerator(name: "ccmCcgrGateOcram", value: 808993040)
!498 = !DIEnumerator(name: "ccmCcgrGateOcramS", value: 808993056)
!499 = !DIEnumerator(name: "ccmCcgrGateQspi", value: 808993104)
!500 = !DIEnumerator(name: "ccmCcgrGateAdc", value: 808993280)
!501 = !DIEnumerator(name: "ccmCcgrGateRdc", value: 808993376)
!502 = !DIEnumerator(name: "ccmCcgrGateMu", value: 808993392)
!503 = !DIEnumerator(name: "ccmCcgrGateSemaHs", value: 808993408)
!504 = !DIEnumerator(name: "ccmCcgrGateSema1", value: 808993792)
!505 = !DIEnumerator(name: "ccmCcgrGateSema2", value: 808993808)
!506 = !DIEnumerator(name: "ccmCcgrGateCan1", value: 808994624)
!507 = !DIEnumerator(name: "ccmCcgrGateCan2", value: 808994640)
!508 = !DIEnumerator(name: "ccmCcgrGateEcspi1", value: 808994688)
!509 = !DIEnumerator(name: "ccmCcgrGateEcspi2", value: 808994704)
!510 = !DIEnumerator(name: "ccmCcgrGateEcspi3", value: 808994720)
!511 = !DIEnumerator(name: "ccmCcgrGateEcspi4", value: 808994736)
!512 = !DIEnumerator(name: "ccmCcgrGateGpt1", value: 808994752)
!513 = !DIEnumerator(name: "ccmCcgrGateGpt2", value: 808994768)
!514 = !DIEnumerator(name: "ccmCcgrGateGpt3", value: 808994784)
!515 = !DIEnumerator(name: "ccmCcgrGateGpt4", value: 808994800)
!516 = !DIEnumerator(name: "ccmCcgrGateI2c1", value: 808994944)
!517 = !DIEnumerator(name: "ccmCcgrGateI2c2", value: 808994960)
!518 = !DIEnumerator(name: "ccmCcgrGateI2c3", value: 808994976)
!519 = !DIEnumerator(name: "ccmCcgrGateI2c4", value: 808994992)
!520 = !DIEnumerator(name: "ccmCcgrGateUart1", value: 808995136)
!521 = !DIEnumerator(name: "ccmCcgrGateUart2", value: 808995152)
!522 = !DIEnumerator(name: "ccmCcgrGateUart3", value: 808995168)
!523 = !DIEnumerator(name: "ccmCcgrGateUart4", value: 808995184)
!524 = !DIEnumerator(name: "ccmCcgrGateUart5", value: 808995200)
!525 = !DIEnumerator(name: "ccmCcgrGateUart6", value: 808995216)
!526 = !DIEnumerator(name: "ccmCcgrGateUart7", value: 808995232)
!527 = !DIEnumerator(name: "ccmCcgrGateWdog1", value: 808995264)
!528 = !DIEnumerator(name: "ccmCcgrGateWdog2", value: 808995280)
!529 = !DIEnumerator(name: "ccmCcgrGateWdog3", value: 808995296)
!530 = !DIEnumerator(name: "ccmCcgrGateWdog4", value: 808995312)
!531 = !DIEnumerator(name: "ccmCcgrGateGpio1", value: 808995328)
!532 = !DIEnumerator(name: "ccmCcgrGateGpio2", value: 808995344)
!533 = !DIEnumerator(name: "ccmCcgrGateGpio3", value: 808995360)
!534 = !DIEnumerator(name: "ccmCcgrGateGpio4", value: 808995376)
!535 = !DIEnumerator(name: "ccmCcgrGateGpio5", value: 808995392)
!536 = !DIEnumerator(name: "ccmCcgrGateGpio6", value: 808995408)
!537 = !DIEnumerator(name: "ccmCcgrGateGpio7", value: 808995424)
!538 = !DIEnumerator(name: "ccmCcgrGateIomux", value: 808995456)
!539 = !DIEnumerator(name: "ccmCcgrGateIomuxLpsr", value: 808995472)
!540 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_ccm_gate_value", file: !450, line: 327, baseType: !32, size: 32, elements: !541)
!541 = !{!542, !543, !544, !545}
!542 = !DIEnumerator(name: "ccmClockNotNeeded", value: 0)
!543 = !DIEnumerator(name: "ccmClockNeededRun", value: 4369)
!544 = !DIEnumerator(name: "ccmClockNeededRunWait", value: 8738)
!545 = !DIEnumerator(name: "ccmClockNeededAll", value: 13107)
!546 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_rdc_pdap", file: !547, line: 76, baseType: !32, size: 32, elements: !548)
!547 = !DIFile(filename: "modules/hal/nxp/imx/drivers/./rdc_defs_imx7d.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!548 = !{!549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666}
!549 = !DIEnumerator(name: "rdcPdapGpio1", value: 0)
!550 = !DIEnumerator(name: "rdcPdapGpio2", value: 1)
!551 = !DIEnumerator(name: "rdcPdapGpio3", value: 2)
!552 = !DIEnumerator(name: "rdcPdapGpio4", value: 3)
!553 = !DIEnumerator(name: "rdcPdapGpio5", value: 4)
!554 = !DIEnumerator(name: "rdcPdapGpio6", value: 5)
!555 = !DIEnumerator(name: "rdcPdapGpio7", value: 6)
!556 = !DIEnumerator(name: "rdcPdapIomuxcLpsrGpr", value: 7)
!557 = !DIEnumerator(name: "rdcPdapWdog1", value: 8)
!558 = !DIEnumerator(name: "rdcPdapWdog2", value: 9)
!559 = !DIEnumerator(name: "rdcPdapWdog3", value: 10)
!560 = !DIEnumerator(name: "rdcPdapWdog4", value: 11)
!561 = !DIEnumerator(name: "rdcPdapIomuxcLpsr", value: 12)
!562 = !DIEnumerator(name: "rdcPdapGpt1", value: 13)
!563 = !DIEnumerator(name: "rdcPdapGpt2", value: 14)
!564 = !DIEnumerator(name: "rdcPdapGpt3", value: 15)
!565 = !DIEnumerator(name: "rdcPdapGpt4", value: 16)
!566 = !DIEnumerator(name: "rdcPdapRomcp", value: 17)
!567 = !DIEnumerator(name: "rdcPdapKpp", value: 18)
!568 = !DIEnumerator(name: "rdcPdapIomuxc", value: 19)
!569 = !DIEnumerator(name: "rdcPdapIomuxcGpr", value: 20)
!570 = !DIEnumerator(name: "rdcPdapOcotpCtrl", value: 21)
!571 = !DIEnumerator(name: "rdcPdapAnatopDig", value: 22)
!572 = !DIEnumerator(name: "rdcPdapSnvs", value: 23)
!573 = !DIEnumerator(name: "rdcPdapCcm", value: 24)
!574 = !DIEnumerator(name: "rdcPdapSrc", value: 25)
!575 = !DIEnumerator(name: "rdcPdapGpc", value: 26)
!576 = !DIEnumerator(name: "rdcPdapSemaphore1", value: 27)
!577 = !DIEnumerator(name: "rdcPdapSemaphore2", value: 28)
!578 = !DIEnumerator(name: "rdcPdapRdc", value: 29)
!579 = !DIEnumerator(name: "rdcPdapCsu", value: 30)
!580 = !DIEnumerator(name: "rdcPdapReserved1", value: 31)
!581 = !DIEnumerator(name: "rdcPdapReserved2", value: 32)
!582 = !DIEnumerator(name: "rdcPdapAdc1", value: 33)
!583 = !DIEnumerator(name: "rdcPdapAdc2", value: 34)
!584 = !DIEnumerator(name: "rdcPdapEcspi4", value: 35)
!585 = !DIEnumerator(name: "rdcPdapFlexTimer1", value: 36)
!586 = !DIEnumerator(name: "rdcPdapFlexTimer2", value: 37)
!587 = !DIEnumerator(name: "rdcPdapPwm1", value: 38)
!588 = !DIEnumerator(name: "rdcPdapPwm2", value: 39)
!589 = !DIEnumerator(name: "rdcPdapPwm3", value: 40)
!590 = !DIEnumerator(name: "rdcPdapPwm4", value: 41)
!591 = !DIEnumerator(name: "rdcPdapSystemCounterRead", value: 42)
!592 = !DIEnumerator(name: "rdcPdapSystemCounterCompare", value: 43)
!593 = !DIEnumerator(name: "rdcPdapSystemCounterControl", value: 44)
!594 = !DIEnumerator(name: "rdcPdapPcie", value: 45)
!595 = !DIEnumerator(name: "rdcPdapReserved3", value: 46)
!596 = !DIEnumerator(name: "rdcPdapEpdc", value: 47)
!597 = !DIEnumerator(name: "rdcPdapPxp", value: 48)
!598 = !DIEnumerator(name: "rdcPdapCsi", value: 49)
!599 = !DIEnumerator(name: "rdcPdapReserved4", value: 50)
!600 = !DIEnumerator(name: "rdcPdapLcdif", value: 51)
!601 = !DIEnumerator(name: "rdcPdapReserved5", value: 52)
!602 = !DIEnumerator(name: "rdcPdapMipiCsi", value: 53)
!603 = !DIEnumerator(name: "rdcPdapMipiDsi", value: 54)
!604 = !DIEnumerator(name: "rdcPdapReserved6", value: 55)
!605 = !DIEnumerator(name: "rdcPdapTzasc", value: 56)
!606 = !DIEnumerator(name: "rdcPdapDdrPhy", value: 57)
!607 = !DIEnumerator(name: "rdcPdapDdrc", value: 58)
!608 = !DIEnumerator(name: "rdcPdapReserved7", value: 59)
!609 = !DIEnumerator(name: "rdcPdapPerfMon1", value: 60)
!610 = !DIEnumerator(name: "rdcPdapPerfMon2", value: 61)
!611 = !DIEnumerator(name: "rdcPdapAxi", value: 62)
!612 = !DIEnumerator(name: "rdcPdapQosc", value: 63)
!613 = !DIEnumerator(name: "rdcPdapFlexCan1", value: 64)
!614 = !DIEnumerator(name: "rdcPdapFlexCan2", value: 65)
!615 = !DIEnumerator(name: "rdcPdapI2c1", value: 66)
!616 = !DIEnumerator(name: "rdcPdapI2c2", value: 67)
!617 = !DIEnumerator(name: "rdcPdapI2c3", value: 68)
!618 = !DIEnumerator(name: "rdcPdapI2c4", value: 69)
!619 = !DIEnumerator(name: "rdcPdapUart4", value: 70)
!620 = !DIEnumerator(name: "rdcPdapUart5", value: 71)
!621 = !DIEnumerator(name: "rdcPdapUart6", value: 72)
!622 = !DIEnumerator(name: "rdcPdapUart7", value: 73)
!623 = !DIEnumerator(name: "rdcPdapMuA", value: 74)
!624 = !DIEnumerator(name: "rdcPdapMuB", value: 75)
!625 = !DIEnumerator(name: "rdcPdapSemaphoreHs", value: 76)
!626 = !DIEnumerator(name: "rdcPdapUsbPl301", value: 77)
!627 = !DIEnumerator(name: "rdcPdapReserved8", value: 78)
!628 = !DIEnumerator(name: "rdcPdapReserved9", value: 79)
!629 = !DIEnumerator(name: "rdcPdapReserved10", value: 80)
!630 = !DIEnumerator(name: "rdcPdapUSB1Otg1", value: 81)
!631 = !DIEnumerator(name: "rdcPdapUSB2Otg2", value: 82)
!632 = !DIEnumerator(name: "rdcPdapUSB3Host", value: 83)
!633 = !DIEnumerator(name: "rdcPdapUsdhc1", value: 84)
!634 = !DIEnumerator(name: "rdcPdapUsdhc2", value: 85)
!635 = !DIEnumerator(name: "rdcPdapUsdhc3", value: 86)
!636 = !DIEnumerator(name: "rdcPdapReserved11", value: 87)
!637 = !DIEnumerator(name: "rdcPdapReserved12", value: 88)
!638 = !DIEnumerator(name: "rdcPdapSim1", value: 89)
!639 = !DIEnumerator(name: "rdcPdapSim2", value: 90)
!640 = !DIEnumerator(name: "rdcPdapQspi", value: 91)
!641 = !DIEnumerator(name: "rdcPdapWeim", value: 92)
!642 = !DIEnumerator(name: "rdcPdapSdma", value: 93)
!643 = !DIEnumerator(name: "rdcPdapEnet1", value: 94)
!644 = !DIEnumerator(name: "rdcPdapEnet2", value: 95)
!645 = !DIEnumerator(name: "rdcPdapReserved13", value: 96)
!646 = !DIEnumerator(name: "rdcPdapReserved14", value: 97)
!647 = !DIEnumerator(name: "rdcPdapEcspi1", value: 98)
!648 = !DIEnumerator(name: "rdcPdapEcspi2", value: 99)
!649 = !DIEnumerator(name: "rdcPdapEcspi3", value: 100)
!650 = !DIEnumerator(name: "rdcPdapReserved15", value: 101)
!651 = !DIEnumerator(name: "rdcPdapUart1", value: 102)
!652 = !DIEnumerator(name: "rdcPdapReserved16", value: 103)
!653 = !DIEnumerator(name: "rdcPdapUart3", value: 104)
!654 = !DIEnumerator(name: "rdcPdapUart2", value: 105)
!655 = !DIEnumerator(name: "rdcPdapSai1", value: 106)
!656 = !DIEnumerator(name: "rdcPdapSai2", value: 107)
!657 = !DIEnumerator(name: "rdcPdapSai3", value: 108)
!658 = !DIEnumerator(name: "rdcPdapReserved17", value: 109)
!659 = !DIEnumerator(name: "rdcPdapReserved18", value: 110)
!660 = !DIEnumerator(name: "rdcPdapSpba", value: 111)
!661 = !DIEnumerator(name: "rdcPdapDap", value: 112)
!662 = !DIEnumerator(name: "rdcPdapReserved19", value: 113)
!663 = !DIEnumerator(name: "rdcPdapReserved20", value: 114)
!664 = !DIEnumerator(name: "rdcPdapReserved21", value: 115)
!665 = !DIEnumerator(name: "rdcPdapCaam", value: 116)
!666 = !DIEnumerator(name: "rdcPdapReserved22", value: 117)
!667 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_ccm_pll_gate", file: !450, line: 237, baseType: !32, size: 32, elements: !668)
!668 = !{!669, !670, !671, !672, !673, !674, !675, !676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689, !690, !691, !692, !693, !694, !695, !696, !697, !698, !699, !700, !701}
!669 = !DIEnumerator(name: "ccmPllGateCkil", value: 808978432)
!670 = !DIEnumerator(name: "ccmPllGateArm", value: 808978448)
!671 = !DIEnumerator(name: "ccmPllGateArmDiv1", value: 808978464)
!672 = !DIEnumerator(name: "ccmPllGateDdr", value: 808978480)
!673 = !DIEnumerator(name: "ccmPllGateDdrDiv1", value: 808978496)
!674 = !DIEnumerator(name: "ccmPllGateDdrDiv2", value: 808978512)
!675 = !DIEnumerator(name: "ccmPllGateSys", value: 808978528)
!676 = !DIEnumerator(name: "ccmPllGateSysDiv1", value: 808978544)
!677 = !DIEnumerator(name: "ccmPllGateSysDiv2", value: 808978560)
!678 = !DIEnumerator(name: "ccmPllGateSysDiv4", value: 808978576)
!679 = !DIEnumerator(name: "ccmPllGatePfd0", value: 808978592)
!680 = !DIEnumerator(name: "ccmPllGatePfd0Div2", value: 808978608)
!681 = !DIEnumerator(name: "ccmPllGatePfd1", value: 808978624)
!682 = !DIEnumerator(name: "ccmPllGatePfd1Div2", value: 808978640)
!683 = !DIEnumerator(name: "ccmPllGatePfd2", value: 808978656)
!684 = !DIEnumerator(name: "ccmPllGatePfd2Div2", value: 808978672)
!685 = !DIEnumerator(name: "ccmPllGatePfd3", value: 808978688)
!686 = !DIEnumerator(name: "ccmPllGatePfd4", value: 808978704)
!687 = !DIEnumerator(name: "ccmPllGatePfd5", value: 808978720)
!688 = !DIEnumerator(name: "ccmPllGatePfd6", value: 808978736)
!689 = !DIEnumerator(name: "ccmPllGatePfd7", value: 808978752)
!690 = !DIEnumerator(name: "ccmPllGateEnet", value: 808978768)
!691 = !DIEnumerator(name: "ccmPllGateEnet500m", value: 808978784)
!692 = !DIEnumerator(name: "ccmPllGateEnet250m", value: 808978800)
!693 = !DIEnumerator(name: "ccmPllGateEnet125m", value: 808978816)
!694 = !DIEnumerator(name: "ccmPllGateEnet100m", value: 808978832)
!695 = !DIEnumerator(name: "ccmPllGateEnet50m", value: 808978848)
!696 = !DIEnumerator(name: "ccmPllGateEnet40m", value: 808978864)
!697 = !DIEnumerator(name: "ccmPllGateEnet25m", value: 808978880)
!698 = !DIEnumerator(name: "ccmPllGateAudio", value: 808978896)
!699 = !DIEnumerator(name: "ccmPllGateAudioDiv1", value: 808978912)
!700 = !DIEnumerator(name: "ccmPllGateVideo", value: 808978928)
!701 = !DIEnumerator(name: "ccmPllGateVideoDiv1", value: 808978944)
!702 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_rdc_mda", file: !547, line: 44, baseType: !32, size: 32, elements: !703)
!703 = !{!704, !705, !706, !707, !708, !709, !710, !711, !712, !713, !714, !715, !716, !717, !718, !719, !720, !721, !722, !723, !724, !725, !726, !727, !728, !729, !730}
!704 = !DIEnumerator(name: "rdcMdaA7", value: 0)
!705 = !DIEnumerator(name: "rdcMdaM4", value: 1)
!706 = !DIEnumerator(name: "rdcMdaPcie", value: 2)
!707 = !DIEnumerator(name: "rdcMdaCsi", value: 3)
!708 = !DIEnumerator(name: "rdcMdaEpdc", value: 4)
!709 = !DIEnumerator(name: "rdcMdaLcdif", value: 5)
!710 = !DIEnumerator(name: "rdcMdaDisplayPort", value: 6)
!711 = !DIEnumerator(name: "rdcMdaPxp", value: 7)
!712 = !DIEnumerator(name: "rdcMdaCoresight", value: 8)
!713 = !DIEnumerator(name: "rdcMdaDap", value: 9)
!714 = !DIEnumerator(name: "rdcMdaCaam", value: 10)
!715 = !DIEnumerator(name: "rdcMdaSdmaPeriph", value: 11)
!716 = !DIEnumerator(name: "rdcMdaSdmaBurst", value: 12)
!717 = !DIEnumerator(name: "rdcMdaApbhdma", value: 13)
!718 = !DIEnumerator(name: "rdcMdaRawnand", value: 14)
!719 = !DIEnumerator(name: "rdcMdaUsdhc1", value: 15)
!720 = !DIEnumerator(name: "rdcMdaUsdhc2", value: 16)
!721 = !DIEnumerator(name: "rdcMdaUsdhc3", value: 17)
!722 = !DIEnumerator(name: "rdcMdaNc1", value: 18)
!723 = !DIEnumerator(name: "rdcMdaUsb", value: 19)
!724 = !DIEnumerator(name: "rdcMdaNc2", value: 20)
!725 = !DIEnumerator(name: "rdcMdaTest", value: 21)
!726 = !DIEnumerator(name: "rdcMdaEnet1Tx", value: 22)
!727 = !DIEnumerator(name: "rdcMdaEnet1Rx", value: 23)
!728 = !DIEnumerator(name: "rdcMdaEnet2Tx", value: 24)
!729 = !DIEnumerator(name: "rdcMdaEnet2Rx", value: 25)
!730 = !DIEnumerator(name: "rdcMdaSdmaPort", value: 26)
!731 = !{!732, !804, !847, !858, !113}
!732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !733, size: 32)
!733 = !DIDerivedType(tag: DW_TAG_typedef, name: "CCM_Type", file: !734, line: 4575, baseType: !735)
!734 = !DIFile(filename: "modules/hal/nxp/imx/devices/MCIMX7D/./MCIMX7D_M4.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!735 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !734, line: 4532, size: 390144, elements: !736)
!736 = !{!737, !739, !740, !741, !742, !746, !756, !760, !770, !774}
!737 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0", scope: !735, file: !734, line: 4533, baseType: !738, size: 32)
!738 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !113)
!739 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0_SET", scope: !735, file: !734, line: 4534, baseType: !738, size: 32, offset: 32)
!740 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0_CLR", scope: !735, file: !734, line: 4535, baseType: !738, size: 32, offset: 64)
!741 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0_TOG", scope: !735, file: !734, line: 4536, baseType: !738, size: 32, offset: 96)
!742 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !735, file: !734, line: 4537, baseType: !743, size: 16256, offset: 128)
!743 = !DICompositeType(tag: DW_TAG_array_type, baseType: !169, size: 16256, elements: !744)
!744 = !{!745}
!745 = !DISubrange(count: 2032)
!746 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL", scope: !735, file: !734, line: 4543, baseType: !747, size: 4224, offset: 16384)
!747 = !DICompositeType(tag: DW_TAG_array_type, baseType: !748, size: 4224, elements: !754)
!748 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !735, file: !734, line: 4538, size: 128, elements: !749)
!749 = !{!750, !751, !752, !753}
!750 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL", scope: !748, file: !734, line: 4539, baseType: !738, size: 32)
!751 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL_SET", scope: !748, file: !734, line: 4540, baseType: !738, size: 32, offset: 32)
!752 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL_CLR", scope: !748, file: !734, line: 4541, baseType: !738, size: 32, offset: 64)
!753 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL_TOG", scope: !748, file: !734, line: 4542, baseType: !738, size: 32, offset: 96)
!754 = !{!755}
!755 = !DISubrange(count: 33)
!756 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !735, file: !734, line: 4544, baseType: !757, size: 110464, offset: 20608)
!757 = !DICompositeType(tag: DW_TAG_array_type, baseType: !169, size: 110464, elements: !758)
!758 = !{!759}
!759 = !DISubrange(count: 13808)
!760 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR", scope: !735, file: !734, line: 4550, baseType: !761, size: 24448, offset: 131072)
!761 = !DICompositeType(tag: DW_TAG_array_type, baseType: !762, size: 24448, elements: !768)
!762 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !735, file: !734, line: 4545, size: 128, elements: !763)
!763 = !{!764, !765, !766, !767}
!764 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR", scope: !762, file: !734, line: 4546, baseType: !738, size: 32)
!765 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR_SET", scope: !762, file: !734, line: 4547, baseType: !738, size: 32, offset: 32)
!766 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR_CLR", scope: !762, file: !734, line: 4548, baseType: !738, size: 32, offset: 64)
!767 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR_TOG", scope: !762, file: !734, line: 4549, baseType: !738, size: 32, offset: 96)
!768 = !{!769}
!769 = !DISubrange(count: 191)
!770 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_2", scope: !735, file: !734, line: 4551, baseType: !771, size: 106624, offset: 155520)
!771 = !DICompositeType(tag: DW_TAG_array_type, baseType: !169, size: 106624, elements: !772)
!772 = !{!773}
!773 = !DISubrange(count: 13328)
!774 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_TOG", scope: !735, file: !734, line: 4574, baseType: !775, size: 128000, offset: 262144)
!775 = !DICompositeType(tag: DW_TAG_array_type, baseType: !776, size: 128000, elements: !802)
!776 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !735, file: !734, line: 4552, size: 1024, elements: !777)
!777 = !{!778, !779, !780, !781, !782, !783, !784, !785, !786, !787, !788, !789, !790, !791, !792, !793, !794, !798, !799, !800, !801}
!778 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT", scope: !776, file: !734, line: 4553, baseType: !738, size: 32)
!779 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT_SET", scope: !776, file: !734, line: 4554, baseType: !738, size: 32, offset: 32)
!780 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT_CLR", scope: !776, file: !734, line: 4555, baseType: !738, size: 32, offset: 64)
!781 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT_TOG", scope: !776, file: !734, line: 4556, baseType: !738, size: 32, offset: 96)
!782 = !DIDerivedType(tag: DW_TAG_member, name: "MISC", scope: !776, file: !734, line: 4557, baseType: !738, size: 32, offset: 128)
!783 = !DIDerivedType(tag: DW_TAG_member, name: "MISC_ROOT_SET", scope: !776, file: !734, line: 4558, baseType: !738, size: 32, offset: 160)
!784 = !DIDerivedType(tag: DW_TAG_member, name: "MISC_ROOT_CLR", scope: !776, file: !734, line: 4559, baseType: !738, size: 32, offset: 192)
!785 = !DIDerivedType(tag: DW_TAG_member, name: "MISC_ROOT_TOG", scope: !776, file: !734, line: 4560, baseType: !738, size: 32, offset: 224)
!786 = !DIDerivedType(tag: DW_TAG_member, name: "POST", scope: !776, file: !734, line: 4561, baseType: !738, size: 32, offset: 256)
!787 = !DIDerivedType(tag: DW_TAG_member, name: "POST_ROOT_SET", scope: !776, file: !734, line: 4562, baseType: !738, size: 32, offset: 288)
!788 = !DIDerivedType(tag: DW_TAG_member, name: "POST_ROOT_CLR", scope: !776, file: !734, line: 4563, baseType: !738, size: 32, offset: 320)
!789 = !DIDerivedType(tag: DW_TAG_member, name: "POST_ROOT_TOG", scope: !776, file: !734, line: 4564, baseType: !738, size: 32, offset: 352)
!790 = !DIDerivedType(tag: DW_TAG_member, name: "PRE", scope: !776, file: !734, line: 4565, baseType: !738, size: 32, offset: 384)
!791 = !DIDerivedType(tag: DW_TAG_member, name: "PRE_ROOT_SET", scope: !776, file: !734, line: 4566, baseType: !738, size: 32, offset: 416)
!792 = !DIDerivedType(tag: DW_TAG_member, name: "PRE_ROOT_CLR", scope: !776, file: !734, line: 4567, baseType: !738, size: 32, offset: 448)
!793 = !DIDerivedType(tag: DW_TAG_member, name: "PRE_ROOT_TOG", scope: !776, file: !734, line: 4568, baseType: !738, size: 32, offset: 480)
!794 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !776, file: !734, line: 4569, baseType: !795, size: 384, offset: 512)
!795 = !DICompositeType(tag: DW_TAG_array_type, baseType: !169, size: 384, elements: !796)
!796 = !{!797}
!797 = !DISubrange(count: 48)
!798 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL", scope: !776, file: !734, line: 4570, baseType: !738, size: 32, offset: 896)
!799 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_SET", scope: !776, file: !734, line: 4571, baseType: !738, size: 32, offset: 928)
!800 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_CLR", scope: !776, file: !734, line: 4572, baseType: !738, size: 32, offset: 960)
!801 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_TOG", scope: !776, file: !734, line: 4573, baseType: !738, size: 32, offset: 992)
!802 = !{!803}
!803 = !DISubrange(count: 125)
!804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !805, size: 32)
!805 = !DIDerivedType(tag: DW_TAG_typedef, name: "RDC_Type", file: !734, line: 38320, baseType: !806)
!806 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !734, line: 38303, size: 23040, elements: !807)
!807 = !{!808, !810, !814, !815, !816, !817, !821, !825, !829, !833, !837}
!808 = !DIDerivedType(tag: DW_TAG_member, name: "VIR", scope: !806, file: !734, line: 38304, baseType: !809, size: 32)
!809 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !738)
!810 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !806, file: !734, line: 38305, baseType: !811, size: 256, offset: 32)
!811 = !DICompositeType(tag: DW_TAG_array_type, baseType: !169, size: 256, elements: !812)
!812 = !{!813}
!813 = !DISubrange(count: 32)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "STAT", scope: !806, file: !734, line: 38306, baseType: !738, size: 32, offset: 288)
!815 = !DIDerivedType(tag: DW_TAG_member, name: "INTCTRL", scope: !806, file: !734, line: 38307, baseType: !738, size: 32, offset: 320)
!816 = !DIDerivedType(tag: DW_TAG_member, name: "INTSTAT", scope: !806, file: !734, line: 38308, baseType: !738, size: 32, offset: 352)
!817 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !806, file: !734, line: 38309, baseType: !818, size: 3712, offset: 384)
!818 = !DICompositeType(tag: DW_TAG_array_type, baseType: !169, size: 3712, elements: !819)
!819 = !{!820}
!820 = !DISubrange(count: 464)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "MDA", scope: !806, file: !734, line: 38310, baseType: !822, size: 864, offset: 4096)
!822 = !DICompositeType(tag: DW_TAG_array_type, baseType: !738, size: 864, elements: !823)
!823 = !{!824}
!824 = !DISubrange(count: 27)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_2", scope: !806, file: !734, line: 38311, baseType: !826, size: 3232, offset: 4960)
!826 = !DICompositeType(tag: DW_TAG_array_type, baseType: !169, size: 3232, elements: !827)
!827 = !{!828}
!828 = !DISubrange(count: 404)
!829 = !DIDerivedType(tag: DW_TAG_member, name: "PDAP", scope: !806, file: !734, line: 38312, baseType: !830, size: 3776, offset: 8192)
!830 = !DICompositeType(tag: DW_TAG_array_type, baseType: !738, size: 3776, elements: !831)
!831 = !{!832}
!832 = !DISubrange(count: 118)
!833 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_3", scope: !806, file: !734, line: 38313, baseType: !834, size: 4416, offset: 11968)
!834 = !DICompositeType(tag: DW_TAG_array_type, baseType: !169, size: 4416, elements: !835)
!835 = !{!836}
!836 = !DISubrange(count: 552)
!837 = !DIDerivedType(tag: DW_TAG_member, name: "MR", scope: !806, file: !734, line: 38319, baseType: !838, size: 6656, offset: 16384)
!838 = !DICompositeType(tag: DW_TAG_array_type, baseType: !839, size: 6656, elements: !845)
!839 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !806, file: !734, line: 38314, size: 128, elements: !840)
!840 = !{!841, !842, !843, !844}
!841 = !DIDerivedType(tag: DW_TAG_member, name: "MRSA", scope: !839, file: !734, line: 38315, baseType: !738, size: 32)
!842 = !DIDerivedType(tag: DW_TAG_member, name: "MREA", scope: !839, file: !734, line: 38316, baseType: !738, size: 32, offset: 32)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "MRC", scope: !839, file: !734, line: 38317, baseType: !738, size: 32, offset: 64)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "MRVS", scope: !839, file: !734, line: 38318, baseType: !738, size: 32, offset: 96)
!845 = !{!846}
!846 = !DISubrange(count: 52)
!847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !848, size: 32)
!848 = !DIDerivedType(tag: DW_TAG_typedef, name: "WDOG_Type", file: !734, line: 43319, baseType: !849)
!849 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !734, line: 43313, size: 80, elements: !850)
!850 = !{!851, !853, !854, !856, !857}
!851 = !DIDerivedType(tag: DW_TAG_member, name: "WCR", scope: !849, file: !734, line: 43314, baseType: !852, size: 16)
!852 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !183)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "WSR", scope: !849, file: !734, line: 43315, baseType: !852, size: 16, offset: 16)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "WRSR", scope: !849, file: !734, line: 43316, baseType: !855, size: 16, offset: 32)
!855 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !852)
!856 = !DIDerivedType(tag: DW_TAG_member, name: "WICR", scope: !849, file: !734, line: 43317, baseType: !852, size: 16, offset: 48)
!857 = !DIDerivedType(tag: DW_TAG_member, name: "WMCR", scope: !849, file: !734, line: 43318, baseType: !852, size: 16, offset: 64)
!858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !738, size: 32)
!859 = !{!444}
!860 = !DIFile(filename: "zephyr/soc/arm/nxp_imx/mcimx7_m4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!861 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !862)
!862 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !863, line: 51, size: 64, elements: !864)
!863 = !DIFile(filename: "zephyr/include/zephyr/init.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!864 = !{!865, !872}
!865 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !862, file: !863, line: 60, baseType: !866, size: 32)
!866 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !867, size: 32)
!867 = !DISubroutineType(types: !868)
!868 = !{!105, !869}
!869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !870, size: 32)
!870 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !871)
!871 = !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !863, line: 48, flags: DIFlagFwdDecl)
!872 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !862, file: !863, line: 65, baseType: !869, size: 32, offset: 32)
!873 = !DIGlobalVariableExpression(var: !874, expr: !DIExpression())
!874 = distinct !DIGlobalVariable(name: "_stdout_hook", scope: !875, file: !882, line: 21, type: !441, isLocal: true, isDefinition: true)
!875 = distinct !DICompileUnit(language: DW_LANG_C99, file: !876, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !877, globals: !881, splitDebugInlining: false, nameTableKind: None)
!876 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/metairq_dispatch")
!877 = !{!878, !105, !104}
!878 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !879, size: 32)
!879 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !880, line: 22, baseType: !105)
!880 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!881 = !{!873}
!882 = !DIFile(filename: "zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!883 = !DIGlobalVariableExpression(var: !884, expr: !DIExpression())
!884 = distinct !DIGlobalVariable(name: "__init_uart_console_init", scope: !885, file: !982, line: 603, type: !984, isLocal: true, isDefinition: true, align: 32)
!885 = distinct !DICompileUnit(language: DW_LANG_C99, file: !886, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !887, globals: !979, splitDebugInlining: false, nameTableKind: None)
!886 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/metairq_dispatch")
!887 = !{!104, !105, !888}
!888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !889, size: 32)
!889 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !890)
!890 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !891, line: 336, size: 608, elements: !892)
!891 = !DIFile(filename: "zephyr/include/zephyr/drivers/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!892 = !{!893, !920, !924, !928, !941, !946, !952, !957, !961, !962, !963, !964, !965, !966, !967, !968, !969, !970, !971}
!893 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !890, file: !891, line: 365, baseType: !894, size: 32)
!894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !895, size: 32)
!895 = !DISubroutineType(types: !896)
!896 = !{!105, !897, !919}
!897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !898, size: 32)
!898 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !899)
!899 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !900, line: 378, size: 192, elements: !901)
!900 = !DIFile(filename: "zephyr/include/zephyr/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!901 = !{!902, !903, !904, !905, !912, !913}
!902 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !899, file: !900, line: 380, baseType: !263, size: 32)
!903 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !899, file: !900, line: 382, baseType: !13, size: 32, offset: 32)
!904 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !899, file: !900, line: 384, baseType: !13, size: 32, offset: 64)
!905 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !899, file: !900, line: 386, baseType: !906, size: 32, offset: 96)
!906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !907, size: 32)
!907 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !900, line: 351, size: 16, elements: !908)
!908 = !{!909, !910}
!909 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !907, file: !900, line: 359, baseType: !169, size: 8)
!910 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !907, file: !900, line: 364, baseType: !911, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!911 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!912 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !899, file: !900, line: 388, baseType: !104, size: 32, offset: 128)
!913 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !899, file: !900, line: 396, baseType: !914, size: 32, offset: 160)
!914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !915, size: 32)
!915 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !916)
!916 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_handle_t", file: !900, line: 43, baseType: !917)
!917 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !23, line: 73, baseType: !918)
!918 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !170, size: 32)
!920 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !890, file: !891, line: 366, baseType: !921, size: 32, offset: 32)
!921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !922, size: 32)
!922 = !DISubroutineType(types: !923)
!923 = !{null, !897, !170}
!924 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !890, file: !891, line: 374, baseType: !925, size: 32, offset: 64)
!925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !926, size: 32)
!926 = !DISubroutineType(types: !927)
!927 = !{!105, !897}
!928 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !890, file: !891, line: 377, baseType: !929, size: 32, offset: 96)
!929 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !930, size: 32)
!930 = !DISubroutineType(types: !931)
!931 = !{!105, !897, !932}
!932 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !933, size: 32)
!933 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !934)
!934 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !891, line: 122, size: 64, elements: !935)
!935 = !{!936, !937, !938, !939, !940}
!936 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !934, file: !891, line: 123, baseType: !113, size: 32)
!937 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !934, file: !891, line: 124, baseType: !169, size: 8, offset: 32)
!938 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !934, file: !891, line: 125, baseType: !169, size: 8, offset: 40)
!939 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !934, file: !891, line: 126, baseType: !169, size: 8, offset: 48)
!940 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !934, file: !891, line: 127, baseType: !169, size: 8, offset: 56)
!941 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !890, file: !891, line: 379, baseType: !942, size: 32, offset: 128)
!942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !943, size: 32)
!943 = !DISubroutineType(types: !944)
!944 = !{!105, !897, !945}
!945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !934, size: 32)
!946 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_fill", scope: !890, file: !891, line: 384, baseType: !947, size: 32, offset: 160)
!947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !948, size: 32)
!948 = !DISubroutineType(types: !949)
!949 = !{!105, !897, !950, !105}
!950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !951, size: 32)
!951 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !169)
!952 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_read", scope: !890, file: !891, line: 393, baseType: !953, size: 32, offset: 192)
!953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !954, size: 32)
!954 = !DISubroutineType(types: !955)
!955 = !{!105, !897, !426, !956}
!956 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !105)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_enable", scope: !890, file: !891, line: 402, baseType: !958, size: 32, offset: 224)
!958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !959, size: 32)
!959 = !DISubroutineType(types: !960)
!960 = !{null, !897}
!961 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_disable", scope: !890, file: !891, line: 405, baseType: !958, size: 32, offset: 256)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_ready", scope: !890, file: !891, line: 408, baseType: !925, size: 32, offset: 288)
!963 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_enable", scope: !890, file: !891, line: 411, baseType: !958, size: 32, offset: 320)
!964 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_disable", scope: !890, file: !891, line: 414, baseType: !958, size: 32, offset: 352)
!965 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_complete", scope: !890, file: !891, line: 417, baseType: !925, size: 32, offset: 384)
!966 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_ready", scope: !890, file: !891, line: 420, baseType: !925, size: 32, offset: 416)
!967 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_enable", scope: !890, file: !891, line: 423, baseType: !958, size: 32, offset: 448)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_disable", scope: !890, file: !891, line: 426, baseType: !958, size: 32, offset: 480)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "irq_is_pending", scope: !890, file: !891, line: 429, baseType: !925, size: 32, offset: 512)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "irq_update", scope: !890, file: !891, line: 432, baseType: !925, size: 32, offset: 544)
!971 = !DIDerivedType(tag: DW_TAG_member, name: "irq_callback_set", scope: !890, file: !891, line: 435, baseType: !972, size: 32, offset: 576)
!972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !973, size: 32)
!973 = !DISubroutineType(types: !974)
!974 = !{null, !897, !975, !104}
!975 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_irq_callback_user_data_t", file: !891, line: 142, baseType: !976)
!976 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !977, size: 32)
!977 = !DISubroutineType(types: !978)
!978 = !{null, !897, !104}
!979 = !{!883, !980}
!980 = !DIGlobalVariableExpression(var: !981, expr: !DIExpression())
!981 = distinct !DIGlobalVariable(name: "uart_console_dev", scope: !885, file: !982, line: 38, type: !983, isLocal: true, isDefinition: true)
!982 = !DIFile(filename: "zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!983 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !897)
!984 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !985)
!985 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !863, line: 51, size: 64, elements: !986)
!986 = !{!987, !988}
!987 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !985, file: !863, line: 60, baseType: !925, size: 32)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !985, file: !863, line: 65, baseType: !897, size: 32, offset: 32)
!989 = !DIGlobalVariableExpression(var: !990, expr: !DIExpression())
!990 = distinct !DIGlobalVariable(name: "mcux_igpio_pinmux_0", scope: !991, file: !1095, line: 318, type: !1171, isLocal: false, isDefinition: true)
!991 = distinct !DICompileUnit(language: DW_LANG_C99, file: !992, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !993, retainedTypes: !1010, globals: !1092, splitDebugInlining: false, nameTableKind: None)
!992 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/gpio/gpio_imx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/metairq_dispatch")
!993 = !{!994, !1000, !1005}
!994 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_mode", file: !995, line: 506, baseType: !32, size: 32, elements: !996)
!995 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!996 = !{!997, !998, !999}
!997 = !DIEnumerator(name: "GPIO_INT_MODE_DISABLED", value: 2097152)
!998 = !DIEnumerator(name: "GPIO_INT_MODE_LEVEL", value: 4194304)
!999 = !DIEnumerator(name: "GPIO_INT_MODE_EDGE", value: 20971520)
!1000 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_trig", file: !995, line: 512, baseType: !32, size: 32, elements: !1001)
!1001 = !{!1002, !1003, !1004}
!1002 = !DIEnumerator(name: "GPIO_INT_TRIG_LOW", value: 33554432)
!1003 = !DIEnumerator(name: "GPIO_INT_TRIG_HIGH", value: 67108864)
!1004 = !DIEnumerator(name: "GPIO_INT_TRIG_BOTH", value: 100663296)
!1005 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_gpio_pin_action", file: !1006, line: 66, baseType: !32, size: 32, elements: !1007)
!1006 = !DIFile(filename: "modules/hal/nxp/imx/drivers/./gpio_imx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1007 = !{!1008, !1009}
!1008 = !DIEnumerator(name: "gpioPinClear", value: 0)
!1009 = !DIEnumerator(name: "gpioPinSet", value: 1)
!1010 = !{!1011, !1081, !1086, !1046, !1000, !994, !1091, !104, !858, !1061, !102}
!1011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1012, size: 32)
!1012 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1013)
!1013 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !995, line: 523, size: 288, elements: !1014)
!1014 = !{!1015, !1036, !1042, !1047, !1051, !1052, !1053, !1057, !1077}
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1013, file: !995, line: 524, baseType: !1016, size: 32)
!1016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1017, size: 32)
!1017 = !DISubroutineType(types: !1018)
!1018 = !{!105, !1019, !1034, !1035}
!1019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1020, size: 32)
!1020 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1021)
!1021 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !900, line: 378, size: 192, elements: !1022)
!1022 = !{!1023, !1024, !1025, !1026, !1032, !1033}
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1021, file: !900, line: 380, baseType: !263, size: 32)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1021, file: !900, line: 382, baseType: !13, size: 32, offset: 32)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1021, file: !900, line: 384, baseType: !13, size: 32, offset: 64)
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1021, file: !900, line: 386, baseType: !1027, size: 32, offset: 96)
!1027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1028, size: 32)
!1028 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !900, line: 351, size: 16, elements: !1029)
!1029 = !{!1030, !1031}
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1028, file: !900, line: 359, baseType: !169, size: 8)
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1028, file: !900, line: 364, baseType: !911, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1021, file: !900, line: 388, baseType: !104, size: 32, offset: 128)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1021, file: !900, line: 396, baseType: !914, size: 32, offset: 160)
!1034 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_t", file: !995, line: 237, baseType: !169)
!1035 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_flags_t", file: !995, line: 257, baseType: !113)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1013, file: !995, line: 530, baseType: !1037, size: 32, offset: 32)
!1037 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1038, size: 32)
!1038 = !DISubroutineType(types: !1039)
!1039 = !{!105, !1019, !1040}
!1040 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1041, size: 32)
!1041 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_value_t", file: !995, line: 229, baseType: !113)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1013, file: !995, line: 532, baseType: !1043, size: 32, offset: 64)
!1043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1044, size: 32)
!1044 = !DISubroutineType(types: !1045)
!1045 = !{!105, !1019, !1046, !1041}
!1046 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_pins_t", file: !995, line: 216, baseType: !113)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1013, file: !995, line: 535, baseType: !1048, size: 32, offset: 96)
!1048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1049, size: 32)
!1049 = !DISubroutineType(types: !1050)
!1050 = !{!105, !1019, !1046}
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1013, file: !995, line: 537, baseType: !1048, size: 32, offset: 128)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1013, file: !995, line: 539, baseType: !1048, size: 32, offset: 160)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1013, file: !995, line: 541, baseType: !1054, size: 32, offset: 192)
!1054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1055, size: 32)
!1055 = !DISubroutineType(types: !1056)
!1056 = !{!105, !1019, !1034, !994, !1000}
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1013, file: !995, line: 544, baseType: !1058, size: 32, offset: 224)
!1058 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1059, size: 32)
!1059 = !DISubroutineType(types: !1060)
!1060 = !{!105, !1019, !1061, !911}
!1061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1062, size: 32)
!1062 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !995, line: 478, size: 96, elements: !1063)
!1063 = !{!1064, !1071, !1076}
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1062, file: !995, line: 482, baseType: !1065, size: 32)
!1065 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1066, line: 33, baseType: !1067)
!1066 = !DIFile(filename: "zephyr/include/zephyr/sys/slist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1067 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1066, line: 29, size: 32, elements: !1068)
!1068 = !{!1069}
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1067, file: !1066, line: 30, baseType: !1070, size: 32)
!1070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1067, size: 32)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1062, file: !995, line: 485, baseType: !1072, size: 32, offset: 32)
!1072 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !995, line: 464, baseType: !1073)
!1073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1074, size: 32)
!1074 = !DISubroutineType(types: !1075)
!1075 = !{null, !1019, !1061, !1046}
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1062, file: !995, line: 493, baseType: !1046, size: 32, offset: 64)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1013, file: !995, line: 547, baseType: !1078, size: 32, offset: 256)
!1078 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1079, size: 32)
!1079 = !DISubroutineType(types: !1080)
!1080 = !{!113, !1019}
!1081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1082, size: 32)
!1082 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1083)
!1083 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !995, line: 428, size: 32, elements: !1084)
!1084 = !{!1085}
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1083, file: !995, line: 434, baseType: !1046, size: 32)
!1086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1087, size: 32)
!1087 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1088)
!1088 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !995, line: 441, size: 32, elements: !1089)
!1089 = !{!1090}
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1088, file: !995, line: 447, baseType: !1046, size: 32)
!1091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1088, size: 32)
!1092 = !{!989, !1093, !1099, !1101, !1111, !1123, !1125, !1156, !1158, !1169}
!1093 = !DIGlobalVariableExpression(var: !1094, expr: !DIExpression())
!1094 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_25", scope: !991, file: !1095, line: 318, type: !1096, isLocal: false, isDefinition: true, align: 16)
!1095 = !DIFile(filename: "zephyr/drivers/gpio/gpio_imx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1096 = !DICompositeType(tag: DW_TAG_array_type, baseType: !915, size: 400, elements: !1097)
!1097 = !{!1098}
!1098 = !DISubrange(count: 25)
!1099 = !DIGlobalVariableExpression(var: !1100, expr: !DIExpression())
!1100 = distinct !DIGlobalVariable(name: "__device_dts_ord_25", scope: !991, file: !1095, line: 318, type: !1020, isLocal: false, isDefinition: true, align: 32)
!1101 = !DIGlobalVariableExpression(var: !1102, expr: !DIExpression())
!1102 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_25", scope: !991, file: !1095, line: 318, type: !1103, isLocal: true, isDefinition: true, align: 32)
!1103 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1104)
!1104 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !863, line: 51, size: 64, elements: !1105)
!1105 = !{!1106, !1110}
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1104, file: !863, line: 60, baseType: !1107, size: 32)
!1107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1108, size: 32)
!1108 = !DISubroutineType(types: !1109)
!1109 = !{!105, !1019}
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1104, file: !863, line: 65, baseType: !1019, size: 32, offset: 32)
!1111 = !DIGlobalVariableExpression(var: !1112, expr: !DIExpression())
!1112 = distinct !DIGlobalVariable(name: "imx_gpio_0_data", scope: !991, file: !1095, line: 318, type: !1113, isLocal: true, isDefinition: true)
!1113 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "imx_gpio_data", file: !1095, line: 33, size: 96, elements: !1114)
!1114 = !{!1115, !1116}
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1113, file: !1095, line: 35, baseType: !1088, size: 32)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "callbacks", scope: !1113, file: !1095, line: 37, baseType: !1117, size: 64, offset: 32)
!1117 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !1066, line: 40, baseType: !1118)
!1118 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !1066, line: 35, size: 64, elements: !1119)
!1119 = !{!1120, !1122}
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1118, file: !1066, line: 36, baseType: !1121, size: 32)
!1121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1065, size: 32)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1118, file: !1066, line: 37, baseType: !1121, size: 32, offset: 32)
!1123 = !DIGlobalVariableExpression(var: !1124, expr: !DIExpression())
!1124 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_25", scope: !991, file: !1095, line: 318, type: !1028, isLocal: true, isDefinition: true, align: 8)
!1125 = !DIGlobalVariableExpression(var: !1126, expr: !DIExpression())
!1126 = distinct !DIGlobalVariable(name: "imx_gpio_0_config", scope: !991, file: !1095, line: 318, type: !1127, isLocal: true, isDefinition: true)
!1127 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1128)
!1128 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "imx_gpio_config", file: !1095, line: 23, size: 128, elements: !1129)
!1129 = !{!1130, !1131, !1144, !1155}
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1128, file: !1095, line: 25, baseType: !1083, size: 32)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1128, file: !1095, line: 26, baseType: !1132, size: 32, offset: 32)
!1132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1133, size: 32)
!1133 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_Type", file: !734, line: 19729, baseType: !1134)
!1134 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !734, line: 19720, size: 256, elements: !1135)
!1135 = !{!1136, !1137, !1138, !1139, !1140, !1141, !1142, !1143}
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !1134, file: !734, line: 19721, baseType: !738, size: 32)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "GDIR", scope: !1134, file: !734, line: 19722, baseType: !738, size: 32, offset: 32)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "PSR", scope: !1134, file: !734, line: 19723, baseType: !809, size: 32, offset: 64)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "ICR1", scope: !1134, file: !734, line: 19724, baseType: !738, size: 32, offset: 96)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "ICR2", scope: !1134, file: !734, line: 19725, baseType: !738, size: 32, offset: 128)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !1134, file: !734, line: 19726, baseType: !738, size: 32, offset: 160)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "ISR", scope: !1134, file: !734, line: 19727, baseType: !738, size: 32, offset: 192)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "EDGE_SEL", scope: !1134, file: !734, line: 19728, baseType: !738, size: 32, offset: 224)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "pin_muxes", scope: !1128, file: !1095, line: 28, baseType: !1145, size: 32, offset: 64)
!1145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1146, size: 32)
!1146 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1147)
!1147 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pinmux", file: !1148, line: 51, size: 128, elements: !1149)
!1148 = !DIFile(filename: "zephyr/soc/arm/nxp_imx/mcimx7_m4/pinctrl_soc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1149 = !{!1150, !1151, !1152, !1153, !1154}
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "mux_register", scope: !1147, file: !1148, line: 52, baseType: !113, size: 32)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "config_register", scope: !1147, file: !1148, line: 53, baseType: !113, size: 32, offset: 32)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "input_register", scope: !1147, file: !1148, line: 54, baseType: !113, size: 32, offset: 64)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "mux_mode", scope: !1147, file: !1148, line: 55, baseType: !169, size: 4, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "input_daisy", scope: !1147, file: !1148, line: 56, baseType: !113, size: 4, offset: 100, flags: DIFlagBitField, extraData: i64 96)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "mux_count", scope: !1128, file: !1095, line: 29, baseType: !169, size: 8, offset: 96)
!1156 = !DIGlobalVariableExpression(var: !1157, expr: !DIExpression())
!1157 = distinct !DIGlobalVariable(name: "imx_gpio_driver_api", scope: !991, file: !1095, line: 249, type: !1012, isLocal: true, isDefinition: true)
!1158 = !DIGlobalVariableExpression(var: !1159, expr: !DIExpression())
!1159 = distinct !DIGlobalVariable(name: "__isr_imx_gpio_port_isr_irq_0", scope: !1160, file: !1095, line: 318, type: !1163, isLocal: true, isDefinition: true, align: 32)
!1160 = distinct !DISubprogram(name: "imx_gpio_0_init", scope: !1095, file: !1095, line: 318, type: !1108, scopeLine: 318, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !991, retainedNodes: !1161)
!1161 = !{!1162}
!1162 = !DILocalVariable(name: "port", arg: 1, scope: !1160, file: !1095, line: 318, type: !1019)
!1163 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !1164)
!1164 = !{!1165, !1166, !1167, !1168}
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !1163, file: !10, line: 55, baseType: !116, size: 32)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1163, file: !10, line: 57, baseType: !116, size: 32, offset: 32)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1163, file: !10, line: 59, baseType: !104, size: 32, offset: 64)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !1163, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!1169 = !DIGlobalVariableExpression(var: !1170, expr: !DIExpression())
!1170 = distinct !DIGlobalVariable(name: "__isr_imx_gpio_port_isr_irq_1", scope: !1160, file: !1095, line: 318, type: !1163, isLocal: true, isDefinition: true, align: 32)
!1171 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1146, size: 2048, elements: !305)
!1172 = !DIGlobalVariableExpression(var: !1173, expr: !DIExpression())
!1173 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_25", scope: !1174, file: !1179, line: 7, type: !1180, isLocal: false, isDefinition: true, align: 16)
!1174 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1175, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !1176, splitDebugInlining: false, nameTableKind: None)
!1175 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/metairq_dispatch/zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/metairq_dispatch")
!1176 = !{!1172, !1177}
!1177 = !DIGlobalVariableExpression(var: !1178, expr: !DIExpression())
!1178 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_198", scope: !1174, file: !1179, line: 12, type: !1180, isLocal: false, isDefinition: true, align: 16)
!1179 = !DIFile(filename: "zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/metairq_dispatch")
!1180 = !DICompositeType(tag: DW_TAG_array_type, baseType: !915, size: 48, elements: !1181)
!1181 = !{!1182}
!1182 = !DISubrange(count: 3)
!1183 = !DIGlobalVariableExpression(var: !1184, expr: !DIExpression())
!1184 = distinct !DIGlobalVariable(name: "imx_uart_0_config", scope: !1185, file: !1382, line: 339, type: !1380, isLocal: true, isDefinition: true)
!1185 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1186, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1187, retainedTypes: !1273, globals: !1418, splitDebugInlining: false, nameTableKind: None)
!1186 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/serial/uart_imx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/metairq_dispatch")
!1187 = !{!30, !1188, !1226, !1254, !1258, !1262, !1267}
!1188 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_uart_status_flag", file: !1189, line: 122, baseType: !32, size: 32, elements: !1190)
!1189 = !DIFile(filename: "modules/hal/nxp/imx/drivers/./uart_imx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1190 = !{!1191, !1192, !1193, !1194, !1195, !1196, !1197, !1198, !1199, !1200, !1201, !1202, !1203, !1204, !1205, !1206, !1207, !1208, !1209, !1210, !1211, !1212, !1213, !1214, !1215, !1216, !1217, !1218, !1219, !1220, !1221, !1222, !1223, !1224, !1225}
!1191 = !DIEnumerator(name: "uartStatusRxCharReady", value: 15)
!1192 = !DIEnumerator(name: "uartStatusRxError", value: 14)
!1193 = !DIEnumerator(name: "uartStatusRxOverrunError", value: 13)
!1194 = !DIEnumerator(name: "uartStatusRxFrameError", value: 12)
!1195 = !DIEnumerator(name: "uartStatusRxBreakDetect", value: 11)
!1196 = !DIEnumerator(name: "uartStatusRxParityError", value: 10)
!1197 = !DIEnumerator(name: "uartStatusParityError", value: 9699343)
!1198 = !DIEnumerator(name: "uartStatusRtsStatus", value: 9699342)
!1199 = !DIEnumerator(name: "uartStatusTxReady", value: 9699341)
!1200 = !DIEnumerator(name: "uartStatusRtsDelta", value: 9699340)
!1201 = !DIEnumerator(name: "uartStatusEscape", value: 9699339)
!1202 = !DIEnumerator(name: "uartStatusFrameError", value: 9699338)
!1203 = !DIEnumerator(name: "uartStatusRxReady", value: 9699337)
!1204 = !DIEnumerator(name: "uartStatusAgingTimer", value: 9699336)
!1205 = !DIEnumerator(name: "uartStatusDtrDelta", value: 9699335)
!1206 = !DIEnumerator(name: "uartStatusRxDs", value: 9699334)
!1207 = !DIEnumerator(name: "uartStatustAirWake", value: 9699333)
!1208 = !DIEnumerator(name: "uartStatusAwake", value: 9699332)
!1209 = !DIEnumerator(name: "uartStatusRs485SlaveAddrMatch", value: 9699331)
!1210 = !DIEnumerator(name: "uartStatusAutoBaud", value: 9961487)
!1211 = !DIEnumerator(name: "uartStatusTxEmpty", value: 9961486)
!1212 = !DIEnumerator(name: "uartStatusDtr", value: 9961485)
!1213 = !DIEnumerator(name: "uartStatusIdle", value: 9961484)
!1214 = !DIEnumerator(name: "uartStatusAutoBaudCntStop", value: 9961483)
!1215 = !DIEnumerator(name: "uartStatusRiDelta", value: 9961482)
!1216 = !DIEnumerator(name: "uartStatusRi", value: 9961481)
!1217 = !DIEnumerator(name: "uartStatusIr", value: 9961480)
!1218 = !DIEnumerator(name: "uartStatusWake", value: 9961479)
!1219 = !DIEnumerator(name: "uartStatusDcdDelta", value: 9961478)
!1220 = !DIEnumerator(name: "uartStatusDcd", value: 9961477)
!1221 = !DIEnumerator(name: "uartStatusRts", value: 9961476)
!1222 = !DIEnumerator(name: "uartStatusTxComplete", value: 9961475)
!1223 = !DIEnumerator(name: "uartStatusBreakDetect", value: 9961474)
!1224 = !DIEnumerator(name: "uartStatusRxOverrun", value: 9961473)
!1225 = !DIEnumerator(name: "uartStatusRxDataReady", value: 9961472)
!1226 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_uart_interrupt", file: !1189, line: 91, baseType: !32, size: 32, elements: !1227)
!1227 = !{!1228, !1229, !1230, !1231, !1232, !1233, !1234, !1235, !1236, !1237, !1238, !1239, !1240, !1241, !1242, !1243, !1244, !1245, !1246, !1247, !1248, !1249, !1250, !1251, !1252, !1253}
!1228 = !DIEnumerator(name: "uartIntAutoBaud", value: 8388623)
!1229 = !DIEnumerator(name: "uartIntTxReady", value: 8388621)
!1230 = !DIEnumerator(name: "uartIntIdle", value: 8388620)
!1231 = !DIEnumerator(name: "uartIntRxReady", value: 8388617)
!1232 = !DIEnumerator(name: "uartIntTxEmpty", value: 8388614)
!1233 = !DIEnumerator(name: "uartIntRtsDelta", value: 8388613)
!1234 = !DIEnumerator(name: "uartIntEscape", value: 8650767)
!1235 = !DIEnumerator(name: "uartIntRts", value: 8650756)
!1236 = !DIEnumerator(name: "uartIntAgingTimer", value: 8650755)
!1237 = !DIEnumerator(name: "uartIntDtr", value: 8912909)
!1238 = !DIEnumerator(name: "uartIntParityError", value: 8912908)
!1239 = !DIEnumerator(name: "uartIntFrameError", value: 8912907)
!1240 = !DIEnumerator(name: "uartIntDcd", value: 8912905)
!1241 = !DIEnumerator(name: "uartIntRi", value: 8912904)
!1242 = !DIEnumerator(name: "uartIntRxDs", value: 8912902)
!1243 = !DIEnumerator(name: "uartInttAirWake", value: 8912901)
!1244 = !DIEnumerator(name: "uartIntAwake", value: 8912900)
!1245 = !DIEnumerator(name: "uartIntDtrDelta", value: 8912899)
!1246 = !DIEnumerator(name: "uartIntAutoBaudCnt", value: 8912896)
!1247 = !DIEnumerator(name: "uartIntIr", value: 9175048)
!1248 = !DIEnumerator(name: "uartIntWake", value: 9175047)
!1249 = !DIEnumerator(name: "uartIntTxComplete", value: 9175043)
!1250 = !DIEnumerator(name: "uartIntBreakDetect", value: 9175042)
!1251 = !DIEnumerator(name: "uartIntRxOverrun", value: 9175041)
!1252 = !DIEnumerator(name: "uartIntRxDataReady", value: 9175040)
!1253 = !DIEnumerator(name: "uartIntRs485SlaveAddrMatch", value: 12058627)
!1254 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_uart_word_length", file: !1189, line: 60, baseType: !32, size: 32, elements: !1255)
!1255 = !{!1256, !1257}
!1256 = !DIEnumerator(name: "uartWordLength7Bits", value: 0)
!1257 = !DIEnumerator(name: "uartWordLength8Bits", value: 32)
!1258 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_uart_stop_bit_num", file: !1189, line: 67, baseType: !32, size: 32, elements: !1259)
!1259 = !{!1260, !1261}
!1260 = !DIEnumerator(name: "uartStopBitNumOne", value: 0)
!1261 = !DIEnumerator(name: "uartStopBitNumTwo", value: 64)
!1262 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_uart_partity_mode", file: !1189, line: 74, baseType: !32, size: 32, elements: !1263)
!1263 = !{!1264, !1265, !1266}
!1264 = !DIEnumerator(name: "uartParityDisable", value: 0)
!1265 = !DIEnumerator(name: "uartParityEven", value: 256)
!1266 = !DIEnumerator(name: "uartParityOdd", value: 384)
!1267 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_uart_direction_mode", file: !1189, line: 82, baseType: !32, size: 32, elements: !1268)
!1268 = !{!1269, !1270, !1271, !1272}
!1269 = !DIEnumerator(name: "uartDirectionDisable", value: 0)
!1270 = !DIEnumerator(name: "uartDirectionTx", value: 4)
!1271 = !DIEnumerator(name: "uartDirectionRx", value: 2)
!1272 = !DIEnumerator(name: "uartDirectionTxRx", value: 6)
!1273 = !{!104, !105, !1274, !1353, !1379, !1417, !113, !911, !169}
!1274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1275, size: 32)
!1275 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1276)
!1276 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !891, line: 336, size: 608, elements: !1277)
!1277 = !{!1278, !1297, !1301, !1305, !1318, !1323, !1327, !1331, !1335, !1336, !1337, !1338, !1339, !1340, !1341, !1342, !1343, !1344, !1345}
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1276, file: !891, line: 365, baseType: !1279, size: 32)
!1279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1280, size: 32)
!1280 = !DISubroutineType(types: !1281)
!1281 = !{!105, !1282, !919}
!1282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1283, size: 32)
!1283 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1284)
!1284 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !900, line: 378, size: 192, elements: !1285)
!1285 = !{!1286, !1287, !1288, !1289, !1295, !1296}
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1284, file: !900, line: 380, baseType: !263, size: 32)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1284, file: !900, line: 382, baseType: !13, size: 32, offset: 32)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1284, file: !900, line: 384, baseType: !13, size: 32, offset: 64)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1284, file: !900, line: 386, baseType: !1290, size: 32, offset: 96)
!1290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1291, size: 32)
!1291 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !900, line: 351, size: 16, elements: !1292)
!1292 = !{!1293, !1294}
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1291, file: !900, line: 359, baseType: !169, size: 8)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1291, file: !900, line: 364, baseType: !911, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1284, file: !900, line: 388, baseType: !104, size: 32, offset: 128)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1284, file: !900, line: 396, baseType: !914, size: 32, offset: 160)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1276, file: !891, line: 366, baseType: !1298, size: 32, offset: 32)
!1298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1299, size: 32)
!1299 = !DISubroutineType(types: !1300)
!1300 = !{null, !1282, !170}
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1276, file: !891, line: 374, baseType: !1302, size: 32, offset: 64)
!1302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1303, size: 32)
!1303 = !DISubroutineType(types: !1304)
!1304 = !{!105, !1282}
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1276, file: !891, line: 377, baseType: !1306, size: 32, offset: 96)
!1306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1307, size: 32)
!1307 = !DISubroutineType(types: !1308)
!1308 = !{!105, !1282, !1309}
!1309 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1310, size: 32)
!1310 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1311)
!1311 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !891, line: 122, size: 64, elements: !1312)
!1312 = !{!1313, !1314, !1315, !1316, !1317}
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1311, file: !891, line: 123, baseType: !113, size: 32)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1311, file: !891, line: 124, baseType: !169, size: 8, offset: 32)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1311, file: !891, line: 125, baseType: !169, size: 8, offset: 40)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1311, file: !891, line: 126, baseType: !169, size: 8, offset: 48)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1311, file: !891, line: 127, baseType: !169, size: 8, offset: 56)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1276, file: !891, line: 379, baseType: !1319, size: 32, offset: 128)
!1319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1320, size: 32)
!1320 = !DISubroutineType(types: !1321)
!1321 = !{!105, !1282, !1322}
!1322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1311, size: 32)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_fill", scope: !1276, file: !891, line: 384, baseType: !1324, size: 32, offset: 160)
!1324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1325, size: 32)
!1325 = !DISubroutineType(types: !1326)
!1326 = !{!105, !1282, !950, !105}
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_read", scope: !1276, file: !891, line: 393, baseType: !1328, size: 32, offset: 192)
!1328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1329, size: 32)
!1329 = !DISubroutineType(types: !1330)
!1330 = !{!105, !1282, !426, !956}
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_enable", scope: !1276, file: !891, line: 402, baseType: !1332, size: 32, offset: 224)
!1332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1333, size: 32)
!1333 = !DISubroutineType(types: !1334)
!1334 = !{null, !1282}
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_disable", scope: !1276, file: !891, line: 405, baseType: !1332, size: 32, offset: 256)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_ready", scope: !1276, file: !891, line: 408, baseType: !1302, size: 32, offset: 288)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_enable", scope: !1276, file: !891, line: 411, baseType: !1332, size: 32, offset: 320)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_disable", scope: !1276, file: !891, line: 414, baseType: !1332, size: 32, offset: 352)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_complete", scope: !1276, file: !891, line: 417, baseType: !1302, size: 32, offset: 384)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_ready", scope: !1276, file: !891, line: 420, baseType: !1302, size: 32, offset: 416)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_enable", scope: !1276, file: !891, line: 423, baseType: !1332, size: 32, offset: 448)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_disable", scope: !1276, file: !891, line: 426, baseType: !1332, size: 32, offset: 480)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "irq_is_pending", scope: !1276, file: !891, line: 429, baseType: !1302, size: 32, offset: 512)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "irq_update", scope: !1276, file: !891, line: 432, baseType: !1302, size: 32, offset: 544)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "irq_callback_set", scope: !1276, file: !891, line: 435, baseType: !1346, size: 32, offset: 576)
!1346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1347, size: 32)
!1347 = !DISubroutineType(types: !1348)
!1348 = !{null, !1282, !1349, !104}
!1349 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_irq_callback_user_data_t", file: !891, line: 142, baseType: !1350)
!1350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1351, size: 32)
!1351 = !DISubroutineType(types: !1352)
!1352 = !{null, !1282, !104}
!1353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1354, size: 32)
!1354 = !DIDerivedType(tag: DW_TAG_typedef, name: "UART_Type", file: !734, line: 41342, baseType: !1355)
!1355 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !734, line: 41322, size: 1504, elements: !1356)
!1356 = !{!1357, !1358, !1362, !1363, !1364, !1365, !1366, !1367, !1368, !1369, !1370, !1371, !1372, !1373, !1374, !1375, !1376, !1377, !1378}
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "URXD", scope: !1355, file: !734, line: 41323, baseType: !809, size: 32)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !1355, file: !734, line: 41324, baseType: !1359, size: 480, offset: 32)
!1359 = !DICompositeType(tag: DW_TAG_array_type, baseType: !169, size: 480, elements: !1360)
!1360 = !{!1361}
!1361 = !DISubrange(count: 60)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "UTXD", scope: !1355, file: !734, line: 41325, baseType: !738, size: 32, offset: 512)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !1355, file: !734, line: 41326, baseType: !1359, size: 480, offset: 544)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "UCR1", scope: !1355, file: !734, line: 41327, baseType: !738, size: 32, offset: 1024)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "UCR2", scope: !1355, file: !734, line: 41328, baseType: !738, size: 32, offset: 1056)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "UCR3", scope: !1355, file: !734, line: 41329, baseType: !738, size: 32, offset: 1088)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "UCR4", scope: !1355, file: !734, line: 41330, baseType: !738, size: 32, offset: 1120)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "UFCR", scope: !1355, file: !734, line: 41331, baseType: !738, size: 32, offset: 1152)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "USR1", scope: !1355, file: !734, line: 41332, baseType: !738, size: 32, offset: 1184)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "USR2", scope: !1355, file: !734, line: 41333, baseType: !738, size: 32, offset: 1216)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "UESC", scope: !1355, file: !734, line: 41334, baseType: !738, size: 32, offset: 1248)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "UTIM", scope: !1355, file: !734, line: 41335, baseType: !738, size: 32, offset: 1280)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "UBIR", scope: !1355, file: !734, line: 41336, baseType: !738, size: 32, offset: 1312)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "UBMR", scope: !1355, file: !734, line: 41337, baseType: !738, size: 32, offset: 1344)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "UBRC", scope: !1355, file: !734, line: 41338, baseType: !809, size: 32, offset: 1376)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "ONEMS", scope: !1355, file: !734, line: 41339, baseType: !738, size: 32, offset: 1408)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "UTS", scope: !1355, file: !734, line: 41340, baseType: !738, size: 32, offset: 1440)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "UMCR", scope: !1355, file: !734, line: 41341, baseType: !738, size: 32, offset: 1472)
!1379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1380, size: 32)
!1380 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1381)
!1381 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "imx_uart_config", file: !1382, line: 29, size: 160, elements: !1383)
!1382 = !DIFile(filename: "zephyr/drivers/serial/uart_imx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1383 = !{!1384, !1385, !1386, !1387, !1416}
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1381, file: !1382, line: 30, baseType: !1353, size: 32)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "baud_rate", scope: !1381, file: !1382, line: 31, baseType: !113, size: 32, offset: 32)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "modem_mode", scope: !1381, file: !1382, line: 32, baseType: !169, size: 8, offset: 64)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !1381, file: !1382, line: 33, baseType: !1388, size: 32, offset: 96)
!1388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1389, size: 32)
!1389 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1390)
!1390 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1391, line: 60, size: 64, elements: !1392)
!1391 = !DIFile(filename: "zephyr/include/zephyr/drivers/pinctrl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1392 = !{!1393, !1415}
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !1390, file: !1391, line: 69, baseType: !1394, size: 32)
!1394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1395, size: 32)
!1395 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1396)
!1396 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1391, line: 50, size: 64, elements: !1397)
!1397 = !{!1398, !1413, !1414}
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !1396, file: !1391, line: 52, baseType: !1399, size: 32)
!1399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1400, size: 32)
!1400 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1401)
!1401 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1148, line: 64, baseType: !1402)
!1402 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1148, line: 59, size: 160, elements: !1403)
!1403 = !{!1404, !1412}
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !1402, file: !1148, line: 60, baseType: !1405, size: 128)
!1405 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pinmux", file: !1148, line: 51, size: 128, elements: !1406)
!1406 = !{!1407, !1408, !1409, !1410, !1411}
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "mux_register", scope: !1405, file: !1148, line: 52, baseType: !113, size: 32)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "config_register", scope: !1405, file: !1148, line: 53, baseType: !113, size: 32, offset: 32)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "input_register", scope: !1405, file: !1148, line: 54, baseType: !113, size: 32, offset: 64)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "mux_mode", scope: !1405, file: !1148, line: 55, baseType: !169, size: 4, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "input_daisy", scope: !1405, file: !1148, line: 56, baseType: !113, size: 4, offset: 100, flags: DIFlagBitField, extraData: i64 96)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "pin_ctrl_flags", scope: !1402, file: !1148, line: 61, baseType: !113, size: 32, offset: 128)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !1396, file: !1391, line: 54, baseType: !169, size: 8, offset: 32)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1396, file: !1391, line: 56, baseType: !169, size: 8, offset: 40)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !1390, file: !1391, line: 71, baseType: !169, size: 8, offset: 32)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "irq_config_func", scope: !1381, file: !1382, line: 35, baseType: !1332, size: 32, offset: 128)
!1417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !113, size: 32)
!1418 = !{!1419, !1424, !1426, !1433, !1439, !1441, !1183, !1443, !1445, !1450, !1453}
!1419 = !DIGlobalVariableExpression(var: !1420, expr: !DIExpression())
!1420 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_198", scope: !1185, file: !1382, line: 339, type: !1421, isLocal: false, isDefinition: true, align: 16)
!1421 = !DICompositeType(tag: DW_TAG_array_type, baseType: !915, size: 96, elements: !1422)
!1422 = !{!1423}
!1423 = !DISubrange(count: 6)
!1424 = !DIGlobalVariableExpression(var: !1425, expr: !DIExpression())
!1425 = distinct !DIGlobalVariable(name: "__device_dts_ord_198", scope: !1185, file: !1382, line: 339, type: !1283, isLocal: false, isDefinition: true, align: 32)
!1426 = !DIGlobalVariableExpression(var: !1427, expr: !DIExpression())
!1427 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_198", scope: !1185, file: !1382, line: 339, type: !1428, isLocal: true, isDefinition: true, align: 32)
!1428 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1429)
!1429 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !863, line: 51, size: 64, elements: !1430)
!1430 = !{!1431, !1432}
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1429, file: !863, line: 60, baseType: !1302, size: 32)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1429, file: !863, line: 65, baseType: !1282, size: 32, offset: 32)
!1433 = !DIGlobalVariableExpression(var: !1434, expr: !DIExpression())
!1434 = distinct !DIGlobalVariable(name: "imx_uart_0_data", scope: !1185, file: !1382, line: 339, type: !1435, isLocal: true, isDefinition: true)
!1435 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "imx_uart_data", file: !1382, line: 39, size: 64, elements: !1436)
!1436 = !{!1437, !1438}
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !1435, file: !1382, line: 41, baseType: !1349, size: 32)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "cb_data", scope: !1435, file: !1382, line: 42, baseType: !104, size: 32, offset: 32)
!1439 = !DIGlobalVariableExpression(var: !1440, expr: !DIExpression())
!1440 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_198", scope: !1185, file: !1382, line: 339, type: !1291, isLocal: true, isDefinition: true, align: 8)
!1441 = !DIGlobalVariableExpression(var: !1442, expr: !DIExpression())
!1442 = distinct !DIGlobalVariable(name: "uart_imx_driver_api", scope: !1185, file: !1382, line: 270, type: !1275, isLocal: true, isDefinition: true)
!1443 = !DIGlobalVariableExpression(var: !1444, expr: !DIExpression())
!1444 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_198", scope: !1185, file: !1382, line: 339, type: !1389, isLocal: true, isDefinition: true)
!1445 = !DIGlobalVariableExpression(var: !1446, expr: !DIExpression())
!1446 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_198", scope: !1185, file: !1382, line: 339, type: !1447, isLocal: true, isDefinition: true)
!1447 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1395, size: 64, elements: !1448)
!1448 = !{!1449}
!1449 = !DISubrange(count: 1)
!1450 = !DIGlobalVariableExpression(var: !1451, expr: !DIExpression())
!1451 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_198", scope: !1185, file: !1382, line: 339, type: !1452, isLocal: true, isDefinition: true)
!1452 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1400, size: 320, elements: !158)
!1453 = !DIGlobalVariableExpression(var: !1454, expr: !DIExpression())
!1454 = distinct !DIGlobalVariable(name: "__isr_uart_imx_isr_irq_0", scope: !1455, file: !1382, line: 339, type: !1458, isLocal: true, isDefinition: true, align: 32)
!1455 = distinct !DISubprogram(name: "irq_config_func_0", scope: !1382, file: !1382, line: 339, type: !1333, scopeLine: 339, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1185, retainedNodes: !1456)
!1456 = !{!1457}
!1457 = !DILocalVariable(name: "dev", arg: 1, scope: !1455, file: !1382, line: 339, type: !1282)
!1458 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !1459)
!1459 = !{!1460, !1461, !1462, !1463}
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !1458, file: !10, line: 55, baseType: !116, size: 32)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1458, file: !10, line: 57, baseType: !116, size: 32, offset: 32)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1458, file: !10, line: 59, baseType: !104, size: 32, offset: 64)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !1458, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!1464 = !DIGlobalVariableExpression(var: !1465, expr: !DIExpression())
!1465 = distinct !DIGlobalVariable(name: "overflow_cyc", scope: !1466, file: !1689, line: 65, type: !738, isLocal: true, isDefinition: true)
!1466 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1467, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1468, retainedTypes: !1609, globals: !1686, splitDebugInlining: false, nameTableKind: None)
!1467 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/metairq_dispatch")
!1468 = !{!1469}
!1469 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "IRQn", file: !734, line: 103, baseType: !105, size: 32, elements: !1470)
!1470 = !{!1471, !1472, !1473, !1474, !1475, !1476, !1477, !1478, !1479, !1480, !1481, !1482, !1483, !1484, !1485, !1486, !1487, !1488, !1489, !1490, !1491, !1492, !1493, !1494, !1495, !1496, !1497, !1498, !1499, !1500, !1501, !1502, !1503, !1504, !1505, !1506, !1507, !1508, !1509, !1510, !1511, !1512, !1513, !1514, !1515, !1516, !1517, !1518, !1519, !1520, !1521, !1522, !1523, !1524, !1525, !1526, !1527, !1528, !1529, !1530, !1531, !1532, !1533, !1534, !1535, !1536, !1537, !1538, !1539, !1540, !1541, !1542, !1543, !1544, !1545, !1546, !1547, !1548, !1549, !1550, !1551, !1552, !1553, !1554, !1555, !1556, !1557, !1558, !1559, !1560, !1561, !1562, !1563, !1564, !1565, !1566, !1567, !1568, !1569, !1570, !1571, !1572, !1573, !1574, !1575, !1576, !1577, !1578, !1579, !1580, !1581, !1582, !1583, !1584, !1585, !1586, !1587, !1588, !1589, !1590, !1591, !1592, !1593, !1594, !1595, !1596, !1597, !1598, !1599, !1600, !1601, !1602, !1603, !1604, !1605, !1606, !1607, !1608}
!1471 = !DIEnumerator(name: "NotAvail_IRQn", value: -128)
!1472 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!1473 = !DIEnumerator(name: "HardFault_IRQn", value: -13)
!1474 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!1475 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!1476 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!1477 = !DIEnumerator(name: "SVCall_IRQn", value: -5)
!1478 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!1479 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!1480 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!1481 = !DIEnumerator(name: "GPR_IRQn", value: 0)
!1482 = !DIEnumerator(name: "DAP_IRQn", value: 1)
!1483 = !DIEnumerator(name: "SDMA_IRQn", value: 2)
!1484 = !DIEnumerator(name: "DBGMON_IRQn", value: 3)
!1485 = !DIEnumerator(name: "SNVS_IRQn", value: 4)
!1486 = !DIEnumerator(name: "LCDIF_IRQn", value: 5)
!1487 = !DIEnumerator(name: "SIM2_IRQn", value: 6)
!1488 = !DIEnumerator(name: "CSI_IRQn", value: 7)
!1489 = !DIEnumerator(name: "PXP1_IRQn", value: 8)
!1490 = !DIEnumerator(name: "Reserved_IRQn", value: 9)
!1491 = !DIEnumerator(name: "WDOG3_IRQn", value: 10)
!1492 = !DIEnumerator(name: "SEMA4_HS_M4_IRQn", value: 11)
!1493 = !DIEnumerator(name: "APBHDMA_IRQn", value: 12)
!1494 = !DIEnumerator(name: "EIM_IRQn", value: 13)
!1495 = !DIEnumerator(name: "BCH_IRQn", value: 14)
!1496 = !DIEnumerator(name: "GPMI_IRQn", value: 15)
!1497 = !DIEnumerator(name: "UART6_IRQn", value: 16)
!1498 = !DIEnumerator(name: "FTM1_IRQn", value: 17)
!1499 = !DIEnumerator(name: "FTM2_IRQn", value: 18)
!1500 = !DIEnumerator(name: "SNVS_CONSOLIDATED_IRQn", value: 19)
!1501 = !DIEnumerator(name: "SNVS_SECURITY_IRQn", value: 20)
!1502 = !DIEnumerator(name: "CSU_IRQn", value: 21)
!1503 = !DIEnumerator(name: "uSDHC1_IRQn", value: 22)
!1504 = !DIEnumerator(name: "uSDHC2_IRQn", value: 23)
!1505 = !DIEnumerator(name: "uSDHC3_IRQn", value: 24)
!1506 = !DIEnumerator(name: "MIPI_CSI_IRQn", value: 25)
!1507 = !DIEnumerator(name: "UART1_IRQn", value: 26)
!1508 = !DIEnumerator(name: "UART2_IRQn", value: 27)
!1509 = !DIEnumerator(name: "UART3_IRQn", value: 28)
!1510 = !DIEnumerator(name: "UART4_IRQn", value: 29)
!1511 = !DIEnumerator(name: "UART5_IRQn", value: 30)
!1512 = !DIEnumerator(name: "eCSPI1_IRQn", value: 31)
!1513 = !DIEnumerator(name: "eCSPI2_IRQn", value: 32)
!1514 = !DIEnumerator(name: "eCSPI3_IRQn", value: 33)
!1515 = !DIEnumerator(name: "eCSPI4_IRQn", value: 34)
!1516 = !DIEnumerator(name: "I2C1_IRQn", value: 35)
!1517 = !DIEnumerator(name: "I2C2_IRQn", value: 36)
!1518 = !DIEnumerator(name: "I2C3_IRQn", value: 37)
!1519 = !DIEnumerator(name: "I2C4_IRQn", value: 38)
!1520 = !DIEnumerator(name: "RDC_IRQn", value: 39)
!1521 = !DIEnumerator(name: "USB_OH3_OTG2_1_IRQn", value: 40)
!1522 = !DIEnumerator(name: "MIPI_DSI_IRQn", value: 41)
!1523 = !DIEnumerator(name: "USB_OH3_OTG2_2_IRQn", value: 42)
!1524 = !DIEnumerator(name: "USB_OH2_OTG_IRQn", value: 43)
!1525 = !DIEnumerator(name: "USB_OTG1_IRQn", value: 44)
!1526 = !DIEnumerator(name: "USB_OTG2_IRQn", value: 45)
!1527 = !DIEnumerator(name: "PXP2_IRQn", value: 46)
!1528 = !DIEnumerator(name: "SCTR1_IRQn", value: 47)
!1529 = !DIEnumerator(name: "SCTR2_IRQn", value: 48)
!1530 = !DIEnumerator(name: "Analog_TempSensor_IRQn", value: 49)
!1531 = !DIEnumerator(name: "SAI3_IRQn", value: 50)
!1532 = !DIEnumerator(name: "Analog_brown_out_IRQn", value: 51)
!1533 = !DIEnumerator(name: "GPT4_IRQn", value: 52)
!1534 = !DIEnumerator(name: "GPT3_IRQn", value: 53)
!1535 = !DIEnumerator(name: "GPT2_IRQn", value: 54)
!1536 = !DIEnumerator(name: "GPT1_IRQn", value: 55)
!1537 = !DIEnumerator(name: "GPIO1_INT7_IRQn", value: 56)
!1538 = !DIEnumerator(name: "GPIO1_INT6_IRQn", value: 57)
!1539 = !DIEnumerator(name: "GPIO1_INT5_IRQn", value: 58)
!1540 = !DIEnumerator(name: "GPIO1_INT4_IRQn", value: 59)
!1541 = !DIEnumerator(name: "GPIO1_INT3_IRQn", value: 60)
!1542 = !DIEnumerator(name: "GPIO1_INT2_IRQn", value: 61)
!1543 = !DIEnumerator(name: "GPIO1_INT1_IRQn", value: 62)
!1544 = !DIEnumerator(name: "GPIO1_INT0_IRQn", value: 63)
!1545 = !DIEnumerator(name: "GPIO1_INT15_0_IRQn", value: 64)
!1546 = !DIEnumerator(name: "GPIO1_INT31_16_IRQn", value: 65)
!1547 = !DIEnumerator(name: "GPIO2_INT15_0_IRQn", value: 66)
!1548 = !DIEnumerator(name: "GPIO2_INT31_16_IRQn", value: 67)
!1549 = !DIEnumerator(name: "GPIO3_INT15_0_IRQn", value: 68)
!1550 = !DIEnumerator(name: "GPIO3_INT31_16_IRQn", value: 69)
!1551 = !DIEnumerator(name: "GPIO4_INT15_0_IRQn", value: 70)
!1552 = !DIEnumerator(name: "GPIO4_INT31_16_IRQn", value: 71)
!1553 = !DIEnumerator(name: "GPIO5_INT15_0_IRQn", value: 72)
!1554 = !DIEnumerator(name: "GPIO5_INT31_16_IRQn", value: 73)
!1555 = !DIEnumerator(name: "GPIO6_INT15_0_IRQn", value: 74)
!1556 = !DIEnumerator(name: "GPIO6_INT31_16_IRQn", value: 75)
!1557 = !DIEnumerator(name: "GPIO7_INT15_0_IRQn", value: 76)
!1558 = !DIEnumerator(name: "GPIO7_INT31_16_IRQn", value: 77)
!1559 = !DIEnumerator(name: "WDOG1_IRQn", value: 78)
!1560 = !DIEnumerator(name: "WDOG2_IRQn", value: 79)
!1561 = !DIEnumerator(name: "KPP_IRQn", value: 80)
!1562 = !DIEnumerator(name: "PWM1_IRQn", value: 81)
!1563 = !DIEnumerator(name: "PWM2_IRQn", value: 82)
!1564 = !DIEnumerator(name: "PWM3_IRQn", value: 83)
!1565 = !DIEnumerator(name: "PWM4_IRQn", value: 84)
!1566 = !DIEnumerator(name: "CCM1_IRQn", value: 85)
!1567 = !DIEnumerator(name: "CCM2_IRQn", value: 86)
!1568 = !DIEnumerator(name: "GPC_IRQn", value: 87)
!1569 = !DIEnumerator(name: "MU_A7_IRQn", value: 88)
!1570 = !DIEnumerator(name: "SRC_IRQn", value: 89)
!1571 = !DIEnumerator(name: "SIM1_IRQn", value: 90)
!1572 = !DIEnumerator(name: "RTIC_IRQn", value: 91)
!1573 = !DIEnumerator(name: "CPU_IRQn", value: 92)
!1574 = !DIEnumerator(name: "CPU_CTI_IRQn", value: 93)
!1575 = !DIEnumerator(name: "CCM_SRC_GPC_IRQn", value: 94)
!1576 = !DIEnumerator(name: "SAI1_IRQn", value: 95)
!1577 = !DIEnumerator(name: "SAI2_IRQn", value: 96)
!1578 = !DIEnumerator(name: "MU_M4_IRQn", value: 97)
!1579 = !DIEnumerator(name: "ADC1_IRQn", value: 98)
!1580 = !DIEnumerator(name: "ADC2_IRQn", value: 99)
!1581 = !DIEnumerator(name: "ENET2_MAC0_TRANS1_IRQn", value: 100)
!1582 = !DIEnumerator(name: "ENET2_MAC0_TRANS2_IRQn", value: 101)
!1583 = !DIEnumerator(name: "ENET2_MAC0_IRQ_IRQn", value: 102)
!1584 = !DIEnumerator(name: "ENET2_1588_TIMER_IRQ_IRQn", value: 103)
!1585 = !DIEnumerator(name: "TPR_IRQn", value: 104)
!1586 = !DIEnumerator(name: "CAAM_QUEUE_IRQn", value: 105)
!1587 = !DIEnumerator(name: "CAAM_ERROR_IRQn", value: 106)
!1588 = !DIEnumerator(name: "QSPI_IRQn", value: 107)
!1589 = !DIEnumerator(name: "TZASC1_IRQn", value: 108)
!1590 = !DIEnumerator(name: "WDOG4_IRQn", value: 109)
!1591 = !DIEnumerator(name: "FLEXCAN1_IRQn", value: 110)
!1592 = !DIEnumerator(name: "FLEXCAN2_IRQn", value: 111)
!1593 = !DIEnumerator(name: "PERFMON1_IRQn", value: 112)
!1594 = !DIEnumerator(name: "PERFMON2_IRQn", value: 113)
!1595 = !DIEnumerator(name: "CAAM_WRAPPER1_IRQn", value: 114)
!1596 = !DIEnumerator(name: "CAAM_WRAPPER2_IRQn", value: 115)
!1597 = !DIEnumerator(name: "SEMA4_HS_A7_IRQn", value: 116)
!1598 = !DIEnumerator(name: "EPDC_IRQn", value: 117)
!1599 = !DIEnumerator(name: "ENET1_MAC0_TRANS1_IRQn", value: 118)
!1600 = !DIEnumerator(name: "ENET1_MAC0_TRANS2_IRQn", value: 119)
!1601 = !DIEnumerator(name: "ENET1_MAC0_IRQn", value: 120)
!1602 = !DIEnumerator(name: "ENET1_1588_TIMER_IRQn", value: 121)
!1603 = !DIEnumerator(name: "PCIE_CTRL1_IRQn", value: 122)
!1604 = !DIEnumerator(name: "PCIE_CTRL2_IRQn", value: 123)
!1605 = !DIEnumerator(name: "PCIE_CTRL3_IRQn", value: 124)
!1606 = !DIEnumerator(name: "PCIE_CTRL4_IRQn", value: 125)
!1607 = !DIEnumerator(name: "UART7_IRQn", value: 126)
!1608 = !DIEnumerator(name: "PCIE_CTRL_REQUEST_IRQn", value: 127)
!1609 = !{!107, !1610, !116, !169, !113, !1619, !1652}
!1610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1611, size: 32)
!1611 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !1612, line: 770, baseType: !1613)
!1612 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/core_cm4.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1613 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1612, line: 764, size: 128, elements: !1614)
!1614 = !{!1615, !1616, !1617, !1618}
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1613, file: !1612, line: 766, baseType: !738, size: 32)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !1613, file: !1612, line: 767, baseType: !738, size: 32, offset: 32)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !1613, file: !1612, line: 768, baseType: !738, size: 32, offset: 64)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !1613, file: !1612, line: 769, baseType: !809, size: 32, offset: 96)
!1619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1620, size: 32)
!1620 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !1612, line: 426, baseType: !1621)
!1621 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1612, line: 411, size: 28704, elements: !1622)
!1622 = !{!1623, !1627, !1631, !1632, !1633, !1634, !1635, !1636, !1637, !1638, !1642, !1647, !1651}
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1621, file: !1612, line: 413, baseType: !1624, size: 256)
!1624 = !DICompositeType(tag: DW_TAG_array_type, baseType: !738, size: 256, elements: !1625)
!1625 = !{!1626}
!1626 = !DISubrange(count: 8)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1621, file: !1612, line: 414, baseType: !1628, size: 768, offset: 256)
!1628 = !DICompositeType(tag: DW_TAG_array_type, baseType: !113, size: 768, elements: !1629)
!1629 = !{!1630}
!1630 = !DISubrange(count: 24)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1621, file: !1612, line: 415, baseType: !1624, size: 256, offset: 1024)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1621, file: !1612, line: 416, baseType: !1628, size: 768, offset: 1280)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1621, file: !1612, line: 417, baseType: !1624, size: 256, offset: 2048)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1621, file: !1612, line: 418, baseType: !1628, size: 768, offset: 2304)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1621, file: !1612, line: 419, baseType: !1624, size: 256, offset: 3072)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1621, file: !1612, line: 420, baseType: !1628, size: 768, offset: 3328)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1621, file: !1612, line: 421, baseType: !1624, size: 256, offset: 4096)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1621, file: !1612, line: 422, baseType: !1639, size: 1792, offset: 4352)
!1639 = !DICompositeType(tag: DW_TAG_array_type, baseType: !113, size: 1792, elements: !1640)
!1640 = !{!1641}
!1641 = !DISubrange(count: 56)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1621, file: !1612, line: 423, baseType: !1643, size: 1920, offset: 6144)
!1643 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1644, size: 1920, elements: !1645)
!1644 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !169)
!1645 = !{!1646}
!1646 = !DISubrange(count: 240)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1621, file: !1612, line: 424, baseType: !1648, size: 20608, offset: 8064)
!1648 = !DICompositeType(tag: DW_TAG_array_type, baseType: !113, size: 20608, elements: !1649)
!1649 = !{!1650}
!1650 = !DISubrange(count: 644)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1621, file: !1612, line: 425, baseType: !738, size: 32, offset: 28672)
!1652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1653, size: 32)
!1653 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1612, line: 468, baseType: !1654)
!1654 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1612, line: 445, size: 1120, elements: !1655)
!1655 = !{!1656, !1657, !1658, !1659, !1660, !1661, !1662, !1666, !1667, !1668, !1669, !1670, !1671, !1672, !1673, !1675, !1676, !1677, !1679, !1683, !1685}
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1654, file: !1612, line: 447, baseType: !809, size: 32)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1654, file: !1612, line: 448, baseType: !738, size: 32, offset: 32)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1654, file: !1612, line: 449, baseType: !738, size: 32, offset: 64)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1654, file: !1612, line: 450, baseType: !738, size: 32, offset: 96)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1654, file: !1612, line: 451, baseType: !738, size: 32, offset: 128)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1654, file: !1612, line: 452, baseType: !738, size: 32, offset: 160)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1654, file: !1612, line: 453, baseType: !1663, size: 96, offset: 192)
!1663 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1644, size: 96, elements: !1664)
!1664 = !{!1665}
!1665 = !DISubrange(count: 12)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1654, file: !1612, line: 454, baseType: !738, size: 32, offset: 288)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1654, file: !1612, line: 455, baseType: !738, size: 32, offset: 320)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1654, file: !1612, line: 456, baseType: !738, size: 32, offset: 352)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1654, file: !1612, line: 457, baseType: !738, size: 32, offset: 384)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1654, file: !1612, line: 458, baseType: !738, size: 32, offset: 416)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1654, file: !1612, line: 459, baseType: !738, size: 32, offset: 448)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1654, file: !1612, line: 460, baseType: !738, size: 32, offset: 480)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1654, file: !1612, line: 461, baseType: !1674, size: 64, offset: 512)
!1674 = !DICompositeType(tag: DW_TAG_array_type, baseType: !809, size: 64, elements: !158)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1654, file: !1612, line: 462, baseType: !809, size: 32, offset: 576)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1654, file: !1612, line: 463, baseType: !809, size: 32, offset: 608)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1654, file: !1612, line: 464, baseType: !1678, size: 128, offset: 640)
!1678 = !DICompositeType(tag: DW_TAG_array_type, baseType: !809, size: 128, elements: !307)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1654, file: !1612, line: 465, baseType: !1680, size: 160, offset: 768)
!1680 = !DICompositeType(tag: DW_TAG_array_type, baseType: !809, size: 160, elements: !1681)
!1681 = !{!1682}
!1682 = !DISubrange(count: 5)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1654, file: !1612, line: 466, baseType: !1684, size: 160, offset: 928)
!1684 = !DICompositeType(tag: DW_TAG_array_type, baseType: !113, size: 160, elements: !1681)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1654, file: !1612, line: 467, baseType: !738, size: 32, offset: 1088)
!1686 = !{!1687, !1713, !1718, !1720, !1722, !1464}
!1687 = !DIGlobalVariableExpression(var: !1688, expr: !DIExpression())
!1688 = distinct !DIGlobalVariable(name: "__init_sys_clock_driver_init", scope: !1466, file: !1689, line: 285, type: !1690, isLocal: true, isDefinition: true, align: 32)
!1689 = !DIFile(filename: "zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1690 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1691)
!1691 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !863, line: 51, size: 64, elements: !1692)
!1692 = !{!1693, !1712}
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1691, file: !863, line: 60, baseType: !1694, size: 32)
!1694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1695, size: 32)
!1695 = !DISubroutineType(types: !1696)
!1696 = !{!105, !1697}
!1697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1698, size: 32)
!1698 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1699)
!1699 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !900, line: 378, size: 192, elements: !1700)
!1700 = !{!1701, !1702, !1703, !1704, !1710, !1711}
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1699, file: !900, line: 380, baseType: !263, size: 32)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1699, file: !900, line: 382, baseType: !13, size: 32, offset: 32)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1699, file: !900, line: 384, baseType: !13, size: 32, offset: 64)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1699, file: !900, line: 386, baseType: !1705, size: 32, offset: 96)
!1705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1706, size: 32)
!1706 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !900, line: 351, size: 16, elements: !1707)
!1707 = !{!1708, !1709}
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1706, file: !900, line: 359, baseType: !169, size: 8)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1706, file: !900, line: 364, baseType: !911, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1699, file: !900, line: 388, baseType: !104, size: 32, offset: 128)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1699, file: !900, line: 396, baseType: !914, size: 32, offset: 160)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1691, file: !863, line: 65, baseType: !1697, size: 32, offset: 32)
!1713 = !DIGlobalVariableExpression(var: !1714, expr: !DIExpression())
!1714 = distinct !DIGlobalVariable(name: "lock", scope: !1466, file: !1689, line: 34, type: !1715, isLocal: true, isDefinition: true)
!1715 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !230, line: 43, size: 32, elements: !1716)
!1716 = !{!1717}
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !1715, file: !230, line: 52, baseType: !22, size: 32)
!1718 = !DIGlobalVariableExpression(var: !1719, expr: !DIExpression())
!1719 = distinct !DIGlobalVariable(name: "last_load", scope: !1466, file: !1689, line: 36, type: !113, isLocal: true, isDefinition: true)
!1720 = !DIGlobalVariableExpression(var: !1721, expr: !DIExpression())
!1721 = distinct !DIGlobalVariable(name: "cycle_count", scope: !1466, file: !1689, line: 48, type: !113, isLocal: true, isDefinition: true)
!1722 = !DIGlobalVariableExpression(var: !1723, expr: !DIExpression())
!1723 = distinct !DIGlobalVariable(name: "announced_cycles", scope: !1466, file: !1689, line: 54, type: !113, isLocal: true, isDefinition: true)
!1724 = !DIGlobalVariableExpression(var: !1725, expr: !DIExpression())
!1725 = distinct !DIGlobalVariable(name: "__init_imx_pinctrl_init", scope: !1726, file: !1730, line: 69, type: !1731, isLocal: true, isDefinition: true, align: 32)
!1726 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1727, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1728, globals: !1729, splitDebugInlining: false, nameTableKind: None)
!1727 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/pinctrl_imx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/metairq_dispatch")
!1728 = !{!858, !22}
!1729 = !{!1724}
!1730 = !DIFile(filename: "zephyr/drivers/pinctrl/pinctrl_imx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1731 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1732)
!1732 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !863, line: 51, size: 64, elements: !1733)
!1733 = !{!1734, !1753}
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1732, file: !863, line: 60, baseType: !1735, size: 32)
!1735 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1736, size: 32)
!1736 = !DISubroutineType(types: !1737)
!1737 = !{!105, !1738}
!1738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1739, size: 32)
!1739 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1740)
!1740 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !900, line: 378, size: 192, elements: !1741)
!1741 = !{!1742, !1743, !1744, !1745, !1751, !1752}
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1740, file: !900, line: 380, baseType: !263, size: 32)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1740, file: !900, line: 382, baseType: !13, size: 32, offset: 32)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1740, file: !900, line: 384, baseType: !13, size: 32, offset: 64)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1740, file: !900, line: 386, baseType: !1746, size: 32, offset: 96)
!1746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1747, size: 32)
!1747 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !900, line: 351, size: 16, elements: !1748)
!1748 = !{!1749, !1750}
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1747, file: !900, line: 359, baseType: !169, size: 8)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1747, file: !900, line: 364, baseType: !911, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1740, file: !900, line: 388, baseType: !104, size: 32, offset: 128)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1740, file: !900, line: 396, baseType: !914, size: 32, offset: 160)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1732, file: !863, line: 65, baseType: !1738, size: 32, offset: 32)
!1754 = !DIGlobalVariableExpression(var: !1755, expr: !DIExpression())
!1755 = distinct !DIGlobalVariable(name: "_k_neg_eagain", scope: !1756, file: !1759, line: 23, type: !956, isLocal: false, isDefinition: true)
!1756 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1757, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !438, globals: !1758, splitDebugInlining: false, nameTableKind: None)
!1757 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/metairq_dispatch")
!1758 = !{!1754}
!1759 = !DIFile(filename: "zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1760 = !DIGlobalVariableExpression(var: !1761, expr: !DIExpression())
!1761 = distinct !DIGlobalVariable(name: "log_const_os", scope: !1762, file: !1766, line: 37, type: !2013, isLocal: false, isDefinition: true)
!1762 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1763, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1764, retainedTypes: !1773, globals: !1846, splitDebugInlining: false, nameTableKind: None)
!1763 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/metairq_dispatch")
!1764 = !{!1765, !30, !1469}
!1765 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "init_level", file: !1766, line: 63, baseType: !32, size: 32, elements: !1767)
!1766 = !DIFile(filename: "zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1767 = !{!1768, !1769, !1770, !1771, !1772}
!1768 = !DIEnumerator(name: "INIT_LEVEL_EARLY", value: 0)
!1769 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_1", value: 1)
!1770 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_2", value: 2)
!1771 = !DIEnumerator(name: "INIT_LEVEL_POST_KERNEL", value: 3)
!1772 = !DIEnumerator(name: "INIT_LEVEL_APPLICATION", value: 4)
!1773 = !{!111, !104, !105, !1774, !102, !113, !1804, !116, !169, !1829}
!1774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1775, size: 32)
!1775 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1776)
!1776 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "entropy_driver_api", file: !1777, line: 51, size: 64, elements: !1778)
!1777 = !DIFile(filename: "zephyr/include/zephyr/drivers/entropy.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1778 = !{!1779, !1799}
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy", scope: !1776, file: !1777, line: 52, baseType: !1780, size: 32)
!1780 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_t", file: !1777, line: 38, baseType: !1781)
!1781 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1782, size: 32)
!1782 = !DISubroutineType(types: !1783)
!1783 = !{!105, !1784, !426, !183}
!1784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1785, size: 32)
!1785 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1786)
!1786 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !900, line: 378, size: 192, elements: !1787)
!1787 = !{!1788, !1789, !1790, !1791, !1797, !1798}
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1786, file: !900, line: 380, baseType: !263, size: 32)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1786, file: !900, line: 382, baseType: !13, size: 32, offset: 32)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1786, file: !900, line: 384, baseType: !13, size: 32, offset: 64)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1786, file: !900, line: 386, baseType: !1792, size: 32, offset: 96)
!1792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1793, size: 32)
!1793 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !900, line: 351, size: 16, elements: !1794)
!1794 = !{!1795, !1796}
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1793, file: !900, line: 359, baseType: !169, size: 8)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1793, file: !900, line: 364, baseType: !911, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1786, file: !900, line: 388, baseType: !104, size: 32, offset: 128)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1786, file: !900, line: 396, baseType: !914, size: 32, offset: 160)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy_isr", scope: !1776, file: !1777, line: 53, baseType: !1800, size: 32, offset: 32)
!1800 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_isr_t", file: !1777, line: 47, baseType: !1801)
!1801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1802, size: 32)
!1802 = !DISubroutineType(types: !1803)
!1803 = !{!105, !1784, !426, !183, !113}
!1804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1805, size: 32)
!1805 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1612, line: 468, baseType: !1806)
!1806 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1612, line: 445, size: 1120, elements: !1807)
!1807 = !{!1808, !1809, !1810, !1811, !1812, !1813, !1814, !1815, !1816, !1817, !1818, !1819, !1820, !1821, !1822, !1823, !1824, !1825, !1826, !1827, !1828}
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1806, file: !1612, line: 447, baseType: !809, size: 32)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1806, file: !1612, line: 448, baseType: !738, size: 32, offset: 32)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1806, file: !1612, line: 449, baseType: !738, size: 32, offset: 64)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1806, file: !1612, line: 450, baseType: !738, size: 32, offset: 96)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1806, file: !1612, line: 451, baseType: !738, size: 32, offset: 128)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1806, file: !1612, line: 452, baseType: !738, size: 32, offset: 160)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1806, file: !1612, line: 453, baseType: !1663, size: 96, offset: 192)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1806, file: !1612, line: 454, baseType: !738, size: 32, offset: 288)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1806, file: !1612, line: 455, baseType: !738, size: 32, offset: 320)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1806, file: !1612, line: 456, baseType: !738, size: 32, offset: 352)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1806, file: !1612, line: 457, baseType: !738, size: 32, offset: 384)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1806, file: !1612, line: 458, baseType: !738, size: 32, offset: 416)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1806, file: !1612, line: 459, baseType: !738, size: 32, offset: 448)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1806, file: !1612, line: 460, baseType: !738, size: 32, offset: 480)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1806, file: !1612, line: 461, baseType: !1674, size: 64, offset: 512)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1806, file: !1612, line: 462, baseType: !809, size: 32, offset: 576)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1806, file: !1612, line: 463, baseType: !809, size: 32, offset: 608)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1806, file: !1612, line: 464, baseType: !1678, size: 128, offset: 640)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1806, file: !1612, line: 465, baseType: !1680, size: 160, offset: 768)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1806, file: !1612, line: 466, baseType: !1684, size: 160, offset: 928)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1806, file: !1612, line: 467, baseType: !738, size: 32, offset: 1088)
!1829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1830, size: 32)
!1830 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !1612, line: 426, baseType: !1831)
!1831 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1612, line: 411, size: 28704, elements: !1832)
!1832 = !{!1833, !1834, !1835, !1836, !1837, !1838, !1839, !1840, !1841, !1842, !1843, !1844, !1845}
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1831, file: !1612, line: 413, baseType: !1624, size: 256)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1831, file: !1612, line: 414, baseType: !1628, size: 768, offset: 256)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1831, file: !1612, line: 415, baseType: !1624, size: 256, offset: 1024)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1831, file: !1612, line: 416, baseType: !1628, size: 768, offset: 1280)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1831, file: !1612, line: 417, baseType: !1624, size: 256, offset: 2048)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1831, file: !1612, line: 418, baseType: !1628, size: 768, offset: 2304)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1831, file: !1612, line: 419, baseType: !1624, size: 256, offset: 3072)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1831, file: !1612, line: 420, baseType: !1628, size: 768, offset: 3328)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1831, file: !1612, line: 421, baseType: !1624, size: 256, offset: 4096)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1831, file: !1612, line: 422, baseType: !1639, size: 1792, offset: 4352)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1831, file: !1612, line: 423, baseType: !1643, size: 1920, offset: 6144)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1831, file: !1612, line: 424, baseType: !1648, size: 20608, offset: 8064)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1831, file: !1612, line: 425, baseType: !738, size: 32, offset: 28672)
!1846 = !{!1760, !1847, !1966, !1974, !1976, !1979, !1983, !1985, !1990}
!1847 = !DIGlobalVariableExpression(var: !1848, expr: !DIExpression())
!1848 = distinct !DIGlobalVariable(name: "_kernel", scope: !1762, file: !1766, line: 40, type: !1849, isLocal: false, isDefinition: true)
!1849 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_kernel", file: !163, line: 158, size: 320, elements: !1850)
!1850 = !{!1851, !1961}
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "cpus", scope: !1849, file: !163, line: 159, baseType: !1852, size: 224)
!1852 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1853, size: 224, elements: !1448)
!1853 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu", file: !163, line: 100, size: 224, elements: !1854)
!1854 = !{!1855, !1856, !1857, !1954, !1955, !1956, !1957, !1958}
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !1853, file: !163, line: 102, baseType: !113, size: 32)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "irq_stack", scope: !1853, file: !163, line: 105, baseType: !102, size: 32, offset: 32)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !1853, file: !163, line: 108, baseType: !1858, size: 32, offset: 64)
!1858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1859, size: 32)
!1859 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !127, line: 245, size: 896, elements: !1860)
!1860 = !{!1861, !1919, !1931, !1932, !1933, !1934, !1949}
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1859, file: !127, line: 247, baseType: !1862, size: 384)
!1862 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !127, line: 57, size: 384, elements: !1863)
!1863 = !{!1864, !1888, !1895, !1896, !1897, !1906, !1907, !1908}
!1864 = !DIDerivedType(tag: DW_TAG_member, scope: !1862, file: !127, line: 60, baseType: !1865, size: 64)
!1865 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1862, file: !127, line: 60, size: 64, elements: !1866)
!1866 = !{!1867, !1882}
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !1865, file: !127, line: 61, baseType: !1868, size: 64)
!1868 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !137, line: 49, baseType: !1869)
!1869 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !137, line: 37, size: 64, elements: !1870)
!1870 = !{!1871, !1877}
!1871 = !DIDerivedType(tag: DW_TAG_member, scope: !1869, file: !137, line: 38, baseType: !1872, size: 32)
!1872 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1869, file: !137, line: 38, size: 32, elements: !1873)
!1873 = !{!1874, !1876}
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1872, file: !137, line: 39, baseType: !1875, size: 32)
!1875 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1869, size: 32)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1872, file: !137, line: 40, baseType: !1875, size: 32)
!1877 = !DIDerivedType(tag: DW_TAG_member, scope: !1869, file: !137, line: 42, baseType: !1878, size: 32, offset: 32)
!1878 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1869, file: !137, line: 42, size: 32, elements: !1879)
!1879 = !{!1880, !1881}
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1878, file: !137, line: 43, baseType: !1875, size: 32)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1878, file: !137, line: 44, baseType: !1875, size: 32)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !1865, file: !127, line: 62, baseType: !1883, size: 64)
!1883 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !153, line: 49, size: 64, elements: !1884)
!1884 = !{!1885}
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1883, file: !153, line: 50, baseType: !1886, size: 64)
!1886 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1887, size: 64, elements: !158)
!1887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1883, size: 32)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !1862, file: !127, line: 68, baseType: !1889, size: 32, offset: 64)
!1889 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1890, size: 32)
!1890 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !163, line: 233, baseType: !1891)
!1891 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !163, line: 231, size: 64, elements: !1892)
!1892 = !{!1893}
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !1891, file: !163, line: 232, baseType: !1894, size: 64)
!1894 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !137, line: 48, baseType: !1869)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !1862, file: !127, line: 71, baseType: !169, size: 8, offset: 96)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !1862, file: !127, line: 74, baseType: !169, size: 8, offset: 104)
!1897 = !DIDerivedType(tag: DW_TAG_member, scope: !1862, file: !127, line: 90, baseType: !1898, size: 16, offset: 112)
!1898 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1862, file: !127, line: 90, size: 16, elements: !1899)
!1899 = !{!1900, !1905}
!1900 = !DIDerivedType(tag: DW_TAG_member, scope: !1898, file: !127, line: 91, baseType: !1901, size: 16)
!1901 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1898, file: !127, line: 91, size: 16, elements: !1902)
!1902 = !{!1903, !1904}
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1901, file: !127, line: 96, baseType: !179, size: 8)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !1901, file: !127, line: 97, baseType: !169, size: 8, offset: 8)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !1898, file: !127, line: 100, baseType: !183, size: 16)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !1862, file: !127, line: 107, baseType: !113, size: 32, offset: 128)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !1862, file: !127, line: 127, baseType: !104, size: 32, offset: 160)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1862, file: !127, line: 131, baseType: !1909, size: 192, offset: 192)
!1909 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !163, line: 244, size: 192, elements: !1910)
!1910 = !{!1911, !1912, !1918}
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1909, file: !163, line: 245, baseType: !1868, size: 64)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1909, file: !163, line: 246, baseType: !1913, size: 32, offset: 64)
!1913 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !163, line: 242, baseType: !1914)
!1914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1915, size: 32)
!1915 = !DISubroutineType(types: !1916)
!1916 = !{null, !1917}
!1917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1909, size: 32)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !1909, file: !163, line: 249, baseType: !109, size: 64, offset: 128)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !1859, file: !127, line: 250, baseType: !1920, size: 288, offset: 384)
!1920 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !200, line: 25, size: 288, elements: !1921)
!1921 = !{!1922, !1923, !1924, !1925, !1926, !1927, !1928, !1929, !1930}
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !1920, file: !200, line: 26, baseType: !113, size: 32)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !1920, file: !200, line: 27, baseType: !113, size: 32, offset: 32)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !1920, file: !200, line: 28, baseType: !113, size: 32, offset: 64)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !1920, file: !200, line: 29, baseType: !113, size: 32, offset: 96)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !1920, file: !200, line: 30, baseType: !113, size: 32, offset: 128)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !1920, file: !200, line: 31, baseType: !113, size: 32, offset: 160)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !1920, file: !200, line: 32, baseType: !113, size: 32, offset: 192)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !1920, file: !200, line: 33, baseType: !113, size: 32, offset: 224)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !1920, file: !200, line: 34, baseType: !113, size: 32, offset: 256)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !1859, file: !127, line: 253, baseType: !104, size: 32, offset: 672)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !1859, file: !127, line: 256, baseType: !1890, size: 64, offset: 704)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !1859, file: !127, line: 294, baseType: !105, size: 32, offset: 768)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !1859, file: !127, line: 325, baseType: !1935, size: 32, offset: 800)
!1935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1936, size: 32)
!1936 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !122, line: 5073, size: 192, elements: !1937)
!1937 = !{!1938, !1944, !1945}
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !1936, file: !122, line: 5074, baseType: !1939, size: 96)
!1939 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !220, line: 56, size: 96, elements: !1940)
!1940 = !{!1941, !1942, !1943}
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !1939, file: !220, line: 57, baseType: !223, size: 32)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !1939, file: !220, line: 58, baseType: !104, size: 32, offset: 32)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !1939, file: !220, line: 59, baseType: !111, size: 32, offset: 64)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !1936, file: !122, line: 5075, baseType: !1890, size: 64, offset: 96)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1936, file: !122, line: 5076, baseType: !1946, size: 32, offset: 160)
!1946 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !230, line: 43, size: 32, elements: !1947)
!1947 = !{!1948}
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !1946, file: !230, line: 52, baseType: !22, size: 32)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1859, file: !127, line: 343, baseType: !1950, size: 64, offset: 832)
!1950 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !200, line: 60, size: 64, elements: !1951)
!1951 = !{!1952, !1953}
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !1950, file: !200, line: 63, baseType: !113, size: 32)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !1950, file: !200, line: 66, baseType: !113, size: 32, offset: 32)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "idle_thread", scope: !1853, file: !163, line: 111, baseType: !1858, size: 32, offset: 96)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "metairq_preempted", scope: !1853, file: !163, line: 119, baseType: !1858, size: 32, offset: 128)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "slice_ticks", scope: !1853, file: !163, line: 124, baseType: !105, size: 32, offset: 160)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1853, file: !163, line: 127, baseType: !169, size: 8, offset: 192)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1853, file: !163, line: 153, baseType: !1959, offset: 200)
!1959 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu_arch", file: !1960, line: 33, elements: !391)
!1960 = !DIFile(filename: "zephyr/include/zephyr/arch/structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "ready_q", scope: !1849, file: !163, line: 170, baseType: !1962, size: 96, offset: 224)
!1962 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !163, line: 83, size: 96, elements: !1963)
!1963 = !{!1964, !1965}
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !1962, file: !163, line: 86, baseType: !1858, size: 32)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !1962, file: !163, line: 90, baseType: !1894, size: 64, offset: 32)
!1966 = !DIGlobalVariableExpression(var: !1967, expr: !DIExpression())
!1967 = distinct !DIGlobalVariable(name: "z_main_stack", scope: !1762, file: !1766, line: 43, type: !1968, isLocal: false, isDefinition: true, align: 64)
!1968 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1969, size: 8192, elements: !1972)
!1969 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !243, line: 47, size: 8, elements: !1970)
!1970 = !{!1971}
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1969, file: !243, line: 48, baseType: !103, size: 8)
!1972 = !{!1973}
!1973 = !DISubrange(count: 1024)
!1974 = !DIGlobalVariableExpression(var: !1975, expr: !DIExpression())
!1975 = distinct !DIGlobalVariable(name: "z_main_thread", scope: !1762, file: !1766, line: 44, type: !1859, isLocal: false, isDefinition: true)
!1976 = !DIGlobalVariableExpression(var: !1977, expr: !DIExpression())
!1977 = distinct !DIGlobalVariable(name: "z_idle_threads", scope: !1762, file: !1766, line: 48, type: !1978, isLocal: false, isDefinition: true)
!1978 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1859, size: 896, elements: !1448)
!1979 = !DIGlobalVariableExpression(var: !1980, expr: !DIExpression())
!1980 = distinct !DIGlobalVariable(name: "z_interrupt_stacks", scope: !1762, file: !1766, line: 86, type: !1981, isLocal: false, isDefinition: true, align: 64)
!1981 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1969, size: 16384, elements: !1982)
!1982 = !{!1449, !313}
!1983 = !DIGlobalVariableExpression(var: !1984, expr: !DIExpression())
!1984 = distinct !DIGlobalVariable(name: "z_sys_post_kernel", scope: !1762, file: !1766, line: 217, type: !911, isLocal: false, isDefinition: true)
!1985 = !DIGlobalVariableExpression(var: !1986, expr: !DIExpression())
!1986 = distinct !DIGlobalVariable(name: "z_idle_stacks", scope: !1762, file: !1766, line: 50, type: !1987, isLocal: true, isDefinition: true, align: 64)
!1987 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1969, size: 2560, elements: !1988)
!1988 = !{!1449, !1989}
!1989 = !DISubrange(count: 320)
!1990 = !DIGlobalVariableExpression(var: !1991, expr: !DIExpression())
!1991 = distinct !DIGlobalVariable(name: "levels", scope: !1992, file: !1766, line: 232, type: !2012, isLocal: true, isDefinition: true)
!1992 = distinct !DISubprogram(name: "z_sys_init_run_level", scope: !1766, file: !1766, line: 230, type: !1993, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1762, retainedNodes: !1995)
!1993 = !DISubroutineType(types: !1994)
!1994 = !{null, !1765}
!1995 = !{!1996, !1997, !2007, !2011}
!1996 = !DILocalVariable(name: "level", arg: 1, scope: !1992, file: !1766, line: 230, type: !1765)
!1997 = !DILocalVariable(name: "entry", scope: !1992, file: !1766, line: 244, type: !1998)
!1998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1999, size: 32)
!1999 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2000)
!2000 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !863, line: 51, size: 64, elements: !2001)
!2001 = !{!2002, !2006}
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2000, file: !863, line: 60, baseType: !2003, size: 32)
!2003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2004, size: 32)
!2004 = !DISubroutineType(types: !2005)
!2005 = !{!105, !1784}
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2000, file: !863, line: 65, baseType: !1784, size: 32, offset: 32)
!2007 = !DILocalVariable(name: "dev", scope: !2008, file: !1766, line: 247, type: !1784)
!2008 = distinct !DILexicalBlock(scope: !2009, file: !1766, line: 246, column: 64)
!2009 = distinct !DILexicalBlock(scope: !2010, file: !1766, line: 246, column: 2)
!2010 = distinct !DILexicalBlock(scope: !1992, file: !1766, line: 246, column: 2)
!2011 = !DILocalVariable(name: "rc", scope: !2008, file: !1766, line: 248, type: !105)
!2012 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1998, size: 192, elements: !1422)
!2013 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2014)
!2014 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !342, line: 16, size: 64, elements: !2015)
!2015 = !{!2016, !2017}
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2014, file: !342, line: 17, baseType: !263, size: 32)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !2014, file: !342, line: 18, baseType: !169, size: 8, offset: 32)
!2018 = !DIGlobalVariableExpression(var: !2019, expr: !DIExpression())
!2019 = distinct !DIGlobalVariable(name: "states_str", scope: !2020, file: !2021, line: 276, type: !2139, isLocal: true, isDefinition: true)
!2020 = distinct !DISubprogram(name: "k_thread_state_str", scope: !2021, file: !2021, line: 271, type: !2022, scopeLine: 272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2121, retainedNodes: !2130)
!2021 = !DIFile(filename: "zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2022 = !DISubroutineType(types: !2023)
!2023 = !{!263, !2024, !102, !111}
!2024 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !127, line: 347, baseType: !2025)
!2025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2026, size: 32)
!2026 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !127, line: 245, size: 896, elements: !2027)
!2027 = !{!2028, !2086, !2098, !2099, !2100, !2101, !2116}
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2026, file: !127, line: 247, baseType: !2029, size: 384)
!2029 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !127, line: 57, size: 384, elements: !2030)
!2030 = !{!2031, !2055, !2062, !2063, !2064, !2073, !2074, !2075}
!2031 = !DIDerivedType(tag: DW_TAG_member, scope: !2029, file: !127, line: 60, baseType: !2032, size: 64)
!2032 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2029, file: !127, line: 60, size: 64, elements: !2033)
!2033 = !{!2034, !2049}
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2032, file: !127, line: 61, baseType: !2035, size: 64)
!2035 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !137, line: 49, baseType: !2036)
!2036 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !137, line: 37, size: 64, elements: !2037)
!2037 = !{!2038, !2044}
!2038 = !DIDerivedType(tag: DW_TAG_member, scope: !2036, file: !137, line: 38, baseType: !2039, size: 32)
!2039 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2036, file: !137, line: 38, size: 32, elements: !2040)
!2040 = !{!2041, !2043}
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2039, file: !137, line: 39, baseType: !2042, size: 32)
!2042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2036, size: 32)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2039, file: !137, line: 40, baseType: !2042, size: 32)
!2044 = !DIDerivedType(tag: DW_TAG_member, scope: !2036, file: !137, line: 42, baseType: !2045, size: 32, offset: 32)
!2045 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2036, file: !137, line: 42, size: 32, elements: !2046)
!2046 = !{!2047, !2048}
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2045, file: !137, line: 43, baseType: !2042, size: 32)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2045, file: !137, line: 44, baseType: !2042, size: 32)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2032, file: !127, line: 62, baseType: !2050, size: 64)
!2050 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !153, line: 49, size: 64, elements: !2051)
!2051 = !{!2052}
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2050, file: !153, line: 50, baseType: !2053, size: 64)
!2053 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2054, size: 64, elements: !158)
!2054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2050, size: 32)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2029, file: !127, line: 68, baseType: !2056, size: 32, offset: 64)
!2056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2057, size: 32)
!2057 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !163, line: 233, baseType: !2058)
!2058 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !163, line: 231, size: 64, elements: !2059)
!2059 = !{!2060}
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2058, file: !163, line: 232, baseType: !2061, size: 64)
!2061 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !137, line: 48, baseType: !2036)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2029, file: !127, line: 71, baseType: !169, size: 8, offset: 96)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2029, file: !127, line: 74, baseType: !169, size: 8, offset: 104)
!2064 = !DIDerivedType(tag: DW_TAG_member, scope: !2029, file: !127, line: 90, baseType: !2065, size: 16, offset: 112)
!2065 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2029, file: !127, line: 90, size: 16, elements: !2066)
!2066 = !{!2067, !2072}
!2067 = !DIDerivedType(tag: DW_TAG_member, scope: !2065, file: !127, line: 91, baseType: !2068, size: 16)
!2068 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2065, file: !127, line: 91, size: 16, elements: !2069)
!2069 = !{!2070, !2071}
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2068, file: !127, line: 96, baseType: !179, size: 8)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2068, file: !127, line: 97, baseType: !169, size: 8, offset: 8)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2065, file: !127, line: 100, baseType: !183, size: 16)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2029, file: !127, line: 107, baseType: !113, size: 32, offset: 128)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2029, file: !127, line: 127, baseType: !104, size: 32, offset: 160)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2029, file: !127, line: 131, baseType: !2076, size: 192, offset: 192)
!2076 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !163, line: 244, size: 192, elements: !2077)
!2077 = !{!2078, !2079, !2085}
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2076, file: !163, line: 245, baseType: !2035, size: 64)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2076, file: !163, line: 246, baseType: !2080, size: 32, offset: 64)
!2080 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !163, line: 242, baseType: !2081)
!2081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2082, size: 32)
!2082 = !DISubroutineType(types: !2083)
!2083 = !{null, !2084}
!2084 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2076, size: 32)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2076, file: !163, line: 249, baseType: !109, size: 64, offset: 128)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2026, file: !127, line: 250, baseType: !2087, size: 288, offset: 384)
!2087 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !200, line: 25, size: 288, elements: !2088)
!2088 = !{!2089, !2090, !2091, !2092, !2093, !2094, !2095, !2096, !2097}
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2087, file: !200, line: 26, baseType: !113, size: 32)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2087, file: !200, line: 27, baseType: !113, size: 32, offset: 32)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2087, file: !200, line: 28, baseType: !113, size: 32, offset: 64)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2087, file: !200, line: 29, baseType: !113, size: 32, offset: 96)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2087, file: !200, line: 30, baseType: !113, size: 32, offset: 128)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2087, file: !200, line: 31, baseType: !113, size: 32, offset: 160)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2087, file: !200, line: 32, baseType: !113, size: 32, offset: 192)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2087, file: !200, line: 33, baseType: !113, size: 32, offset: 224)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2087, file: !200, line: 34, baseType: !113, size: 32, offset: 256)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2026, file: !127, line: 253, baseType: !104, size: 32, offset: 672)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2026, file: !127, line: 256, baseType: !2057, size: 64, offset: 704)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2026, file: !127, line: 294, baseType: !105, size: 32, offset: 768)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2026, file: !127, line: 325, baseType: !2102, size: 32, offset: 800)
!2102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2103, size: 32)
!2103 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !122, line: 5073, size: 192, elements: !2104)
!2104 = !{!2105, !2111, !2112}
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2103, file: !122, line: 5074, baseType: !2106, size: 96)
!2106 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !220, line: 56, size: 96, elements: !2107)
!2107 = !{!2108, !2109, !2110}
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2106, file: !220, line: 57, baseType: !223, size: 32)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2106, file: !220, line: 58, baseType: !104, size: 32, offset: 32)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2106, file: !220, line: 59, baseType: !111, size: 32, offset: 64)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2103, file: !122, line: 5075, baseType: !2057, size: 64, offset: 96)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2103, file: !122, line: 5076, baseType: !2113, size: 32, offset: 160)
!2113 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !230, line: 43, size: 32, elements: !2114)
!2114 = !{!2115}
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2113, file: !230, line: 52, baseType: !22, size: 32)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2026, file: !127, line: 343, baseType: !2117, size: 64, offset: 832)
!2117 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !200, line: 60, size: 64, elements: !2118)
!2118 = !{!2119, !2120}
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2117, file: !200, line: 63, baseType: !113, size: 32)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2117, file: !200, line: 66, baseType: !113, size: 32, offset: 32)
!2121 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2122, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2123, globals: !2125, splitDebugInlining: false, nameTableKind: None)
!2122 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/metairq_dispatch")
!2123 = !{!104, !263, !107, !169, !22, !105, !2124, !24, !111, !102, !113, !114}
!2124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2035, size: 32)
!2125 = !{!2018, !2126}
!2126 = !DIGlobalVariableExpression(var: !2127, expr: !DIExpression())
!2127 = distinct !DIGlobalVariable(name: "states_sz", scope: !2020, file: !2021, line: 279, type: !2128, isLocal: true, isDefinition: true)
!2128 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2129, size: 256, elements: !1625)
!2129 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !111)
!2130 = !{!2131, !2132, !2133, !2134, !2135, !2136, !2137}
!2131 = !DILocalVariable(name: "thread_id", arg: 1, scope: !2020, file: !2021, line: 271, type: !2024)
!2132 = !DILocalVariable(name: "buf", arg: 2, scope: !2020, file: !2021, line: 271, type: !102)
!2133 = !DILocalVariable(name: "buf_size", arg: 3, scope: !2020, file: !2021, line: 271, type: !111)
!2134 = !DILocalVariable(name: "off", scope: !2020, file: !2021, line: 273, type: !111)
!2135 = !DILocalVariable(name: "bit", scope: !2020, file: !2021, line: 274, type: !169)
!2136 = !DILocalVariable(name: "thread_state", scope: !2020, file: !2021, line: 275, type: !169)
!2137 = !DILocalVariable(name: "index", scope: !2138, file: !2021, line: 293, type: !169)
!2138 = distinct !DILexicalBlock(scope: !2020, file: !2021, line: 293, column: 2)
!2139 = !DICompositeType(tag: DW_TAG_array_type, baseType: !263, size: 256, elements: !1625)
!2140 = !DIGlobalVariableExpression(var: !2141, expr: !DIExpression())
!2141 = distinct !DIGlobalVariable(name: "lock", scope: !2142, file: !2161, line: 39, type: !2162, isLocal: true, isDefinition: true)
!2142 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2143, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2144, globals: !2160, splitDebugInlining: false, nameTableKind: None)
!2143 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sem.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/metairq_dispatch")
!2144 = !{!104, !911, !105, !2145}
!2145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2146, size: 32)
!2146 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !137, line: 49, baseType: !2147)
!2147 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !137, line: 37, size: 64, elements: !2148)
!2148 = !{!2149, !2155}
!2149 = !DIDerivedType(tag: DW_TAG_member, scope: !2147, file: !137, line: 38, baseType: !2150, size: 32)
!2150 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2147, file: !137, line: 38, size: 32, elements: !2151)
!2151 = !{!2152, !2154}
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2150, file: !137, line: 39, baseType: !2153, size: 32)
!2153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2147, size: 32)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2150, file: !137, line: 40, baseType: !2153, size: 32)
!2155 = !DIDerivedType(tag: DW_TAG_member, scope: !2147, file: !137, line: 42, baseType: !2156, size: 32, offset: 32)
!2156 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2147, file: !137, line: 42, size: 32, elements: !2157)
!2157 = !{!2158, !2159}
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2156, file: !137, line: 43, baseType: !2153, size: 32)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2156, file: !137, line: 44, baseType: !2153, size: 32)
!2160 = !{!2140}
!2161 = !DIFile(filename: "zephyr/kernel/sem.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2162 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !230, line: 43, size: 32, elements: !2163)
!2163 = !{!2164}
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2162, file: !230, line: 52, baseType: !22, size: 32)
!2165 = !DIGlobalVariableExpression(var: !2166, expr: !DIExpression())
!2166 = distinct !DIGlobalVariable(name: "sched_spinlock", scope: !2167, file: !2271, line: 56, type: !2258, isLocal: false, isDefinition: true)
!2167 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2168, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2169, globals: !2268, splitDebugInlining: false, nameTableKind: None)
!2168 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/metairq_dispatch")
!2169 = !{!2170, !102, !104, !2266, !426, !107, !116, !105, !113, !114, !2267}
!2170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2171, size: 32)
!2171 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !127, line: 245, size: 896, elements: !2172)
!2172 = !{!2173, !2231, !2243, !2244, !2245, !2246, !2261}
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2171, file: !127, line: 247, baseType: !2174, size: 384)
!2174 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !127, line: 57, size: 384, elements: !2175)
!2175 = !{!2176, !2200, !2207, !2208, !2209, !2218, !2219, !2220}
!2176 = !DIDerivedType(tag: DW_TAG_member, scope: !2174, file: !127, line: 60, baseType: !2177, size: 64)
!2177 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2174, file: !127, line: 60, size: 64, elements: !2178)
!2178 = !{!2179, !2194}
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2177, file: !127, line: 61, baseType: !2180, size: 64)
!2180 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !137, line: 49, baseType: !2181)
!2181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !137, line: 37, size: 64, elements: !2182)
!2182 = !{!2183, !2189}
!2183 = !DIDerivedType(tag: DW_TAG_member, scope: !2181, file: !137, line: 38, baseType: !2184, size: 32)
!2184 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2181, file: !137, line: 38, size: 32, elements: !2185)
!2185 = !{!2186, !2188}
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2184, file: !137, line: 39, baseType: !2187, size: 32)
!2187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2181, size: 32)
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2184, file: !137, line: 40, baseType: !2187, size: 32)
!2189 = !DIDerivedType(tag: DW_TAG_member, scope: !2181, file: !137, line: 42, baseType: !2190, size: 32, offset: 32)
!2190 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2181, file: !137, line: 42, size: 32, elements: !2191)
!2191 = !{!2192, !2193}
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2190, file: !137, line: 43, baseType: !2187, size: 32)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2190, file: !137, line: 44, baseType: !2187, size: 32)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2177, file: !127, line: 62, baseType: !2195, size: 64)
!2195 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !153, line: 49, size: 64, elements: !2196)
!2196 = !{!2197}
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2195, file: !153, line: 50, baseType: !2198, size: 64)
!2198 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2199, size: 64, elements: !158)
!2199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2195, size: 32)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2174, file: !127, line: 68, baseType: !2201, size: 32, offset: 64)
!2201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2202, size: 32)
!2202 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !163, line: 233, baseType: !2203)
!2203 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !163, line: 231, size: 64, elements: !2204)
!2204 = !{!2205}
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2203, file: !163, line: 232, baseType: !2206, size: 64)
!2206 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !137, line: 48, baseType: !2181)
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2174, file: !127, line: 71, baseType: !169, size: 8, offset: 96)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2174, file: !127, line: 74, baseType: !169, size: 8, offset: 104)
!2209 = !DIDerivedType(tag: DW_TAG_member, scope: !2174, file: !127, line: 90, baseType: !2210, size: 16, offset: 112)
!2210 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2174, file: !127, line: 90, size: 16, elements: !2211)
!2211 = !{!2212, !2217}
!2212 = !DIDerivedType(tag: DW_TAG_member, scope: !2210, file: !127, line: 91, baseType: !2213, size: 16)
!2213 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2210, file: !127, line: 91, size: 16, elements: !2214)
!2214 = !{!2215, !2216}
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2213, file: !127, line: 96, baseType: !179, size: 8)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2213, file: !127, line: 97, baseType: !169, size: 8, offset: 8)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2210, file: !127, line: 100, baseType: !183, size: 16)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2174, file: !127, line: 107, baseType: !113, size: 32, offset: 128)
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2174, file: !127, line: 127, baseType: !104, size: 32, offset: 160)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2174, file: !127, line: 131, baseType: !2221, size: 192, offset: 192)
!2221 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !163, line: 244, size: 192, elements: !2222)
!2222 = !{!2223, !2224, !2230}
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2221, file: !163, line: 245, baseType: !2180, size: 64)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2221, file: !163, line: 246, baseType: !2225, size: 32, offset: 64)
!2225 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !163, line: 242, baseType: !2226)
!2226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2227, size: 32)
!2227 = !DISubroutineType(types: !2228)
!2228 = !{null, !2229}
!2229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2221, size: 32)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2221, file: !163, line: 249, baseType: !109, size: 64, offset: 128)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2171, file: !127, line: 250, baseType: !2232, size: 288, offset: 384)
!2232 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !200, line: 25, size: 288, elements: !2233)
!2233 = !{!2234, !2235, !2236, !2237, !2238, !2239, !2240, !2241, !2242}
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2232, file: !200, line: 26, baseType: !113, size: 32)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2232, file: !200, line: 27, baseType: !113, size: 32, offset: 32)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2232, file: !200, line: 28, baseType: !113, size: 32, offset: 64)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2232, file: !200, line: 29, baseType: !113, size: 32, offset: 96)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2232, file: !200, line: 30, baseType: !113, size: 32, offset: 128)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2232, file: !200, line: 31, baseType: !113, size: 32, offset: 160)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2232, file: !200, line: 32, baseType: !113, size: 32, offset: 192)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2232, file: !200, line: 33, baseType: !113, size: 32, offset: 224)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2232, file: !200, line: 34, baseType: !113, size: 32, offset: 256)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2171, file: !127, line: 253, baseType: !104, size: 32, offset: 672)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2171, file: !127, line: 256, baseType: !2202, size: 64, offset: 704)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2171, file: !127, line: 294, baseType: !105, size: 32, offset: 768)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2171, file: !127, line: 325, baseType: !2247, size: 32, offset: 800)
!2247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2248, size: 32)
!2248 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !122, line: 5073, size: 192, elements: !2249)
!2249 = !{!2250, !2256, !2257}
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2248, file: !122, line: 5074, baseType: !2251, size: 96)
!2251 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !220, line: 56, size: 96, elements: !2252)
!2252 = !{!2253, !2254, !2255}
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2251, file: !220, line: 57, baseType: !223, size: 32)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2251, file: !220, line: 58, baseType: !104, size: 32, offset: 32)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2251, file: !220, line: 59, baseType: !111, size: 32, offset: 64)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2248, file: !122, line: 5075, baseType: !2202, size: 64, offset: 96)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2248, file: !122, line: 5076, baseType: !2258, size: 32, offset: 160)
!2258 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !230, line: 43, size: 32, elements: !2259)
!2259 = !{!2260}
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2258, file: !230, line: 52, baseType: !22, size: 32)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2171, file: !127, line: 343, baseType: !2262, size: 64, offset: 832)
!2262 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !200, line: 60, size: 64, elements: !2263)
!2263 = !{!2264, !2265}
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2262, file: !200, line: 63, baseType: !113, size: 32)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2262, file: !200, line: 66, baseType: !113, size: 32, offset: 32)
!2266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2199, size: 32)
!2267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2180, size: 32)
!2268 = !{!2165, !2269, !2272, !2274}
!2269 = !DIGlobalVariableExpression(var: !2270, expr: !DIExpression())
!2270 = distinct !DIGlobalVariable(name: "slice_ticks", scope: !2167, file: !2271, line: 404, type: !105, isLocal: true, isDefinition: true)
!2271 = !DIFile(filename: "zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2272 = !DIGlobalVariableExpression(var: !2273, expr: !DIExpression())
!2273 = distinct !DIGlobalVariable(name: "slice_max_prio", scope: !2167, file: !2271, line: 405, type: !105, isLocal: true, isDefinition: true)
!2274 = !DIGlobalVariableExpression(var: !2275, expr: !DIExpression())
!2275 = distinct !DIGlobalVariable(name: "pending_current", scope: !2167, file: !2271, line: 425, type: !2170, isLocal: true, isDefinition: true)
!2276 = !DIGlobalVariableExpression(var: !2277, expr: !DIExpression())
!2277 = distinct !DIGlobalVariable(name: "timeout_lock", scope: !2278, file: !2308, line: 19, type: !2314, isLocal: true, isDefinition: true)
!2278 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2279, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2280, globals: !2305, splitDebugInlining: false, nameTableKind: None)
!2279 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/metairq_dispatch")
!2280 = !{!107, !104, !116, !113, !114, !105, !2281, !102, !109}
!2281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2282, size: 32)
!2282 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !163, line: 244, size: 192, elements: !2283)
!2283 = !{!2284, !2299, !2304}
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2282, file: !163, line: 245, baseType: !2285, size: 64)
!2285 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !137, line: 49, baseType: !2286)
!2286 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !137, line: 37, size: 64, elements: !2287)
!2287 = !{!2288, !2294}
!2288 = !DIDerivedType(tag: DW_TAG_member, scope: !2286, file: !137, line: 38, baseType: !2289, size: 32)
!2289 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2286, file: !137, line: 38, size: 32, elements: !2290)
!2290 = !{!2291, !2293}
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2289, file: !137, line: 39, baseType: !2292, size: 32)
!2292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2286, size: 32)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2289, file: !137, line: 40, baseType: !2292, size: 32)
!2294 = !DIDerivedType(tag: DW_TAG_member, scope: !2286, file: !137, line: 42, baseType: !2295, size: 32, offset: 32)
!2295 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2286, file: !137, line: 42, size: 32, elements: !2296)
!2296 = !{!2297, !2298}
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2295, file: !137, line: 43, baseType: !2292, size: 32)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2295, file: !137, line: 44, baseType: !2292, size: 32)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2282, file: !163, line: 246, baseType: !2300, size: 32, offset: 64)
!2300 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !163, line: 242, baseType: !2301)
!2301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2302, size: 32)
!2302 = !DISubroutineType(types: !2303)
!2303 = !{null, !2281}
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2282, file: !163, line: 249, baseType: !109, size: 64, offset: 128)
!2305 = !{!2306, !2276, !2309, !2311}
!2306 = !DIGlobalVariableExpression(var: !2307, expr: !DIExpression())
!2307 = distinct !DIGlobalVariable(name: "curr_tick", scope: !2278, file: !2308, line: 15, type: !114, isLocal: true, isDefinition: true)
!2308 = !DIFile(filename: "zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2309 = !DIGlobalVariableExpression(var: !2310, expr: !DIExpression())
!2310 = distinct !DIGlobalVariable(name: "announce_remaining", scope: !2278, file: !2308, line: 25, type: !105, isLocal: true, isDefinition: true)
!2311 = !DIGlobalVariableExpression(var: !2312, expr: !DIExpression())
!2312 = distinct !DIGlobalVariable(name: "timeout_list", scope: !2278, file: !2308, line: 17, type: !2313, isLocal: true, isDefinition: true)
!2313 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !137, line: 48, baseType: !2286)
!2314 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !230, line: 43, size: 32, elements: !2315)
!2315 = !{!2316}
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2314, file: !230, line: 52, baseType: !22, size: 32)
!2317 = !DIGlobalVariableExpression(var: !2318, expr: !DIExpression())
!2318 = distinct !DIGlobalVariable(name: "__init_statics_init_pre", scope: !2319, file: !2338, line: 55, type: !2339, isLocal: true, isDefinition: true, align: 32)
!2319 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2320, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2321, globals: !2337, splitDebugInlining: false, nameTableKind: None)
!2320 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/kheap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/metairq_dispatch")
!2321 = !{!104, !107, !105, !2322}
!2322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2323, size: 32)
!2323 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !137, line: 49, baseType: !2324)
!2324 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !137, line: 37, size: 64, elements: !2325)
!2325 = !{!2326, !2332}
!2326 = !DIDerivedType(tag: DW_TAG_member, scope: !2324, file: !137, line: 38, baseType: !2327, size: 32)
!2327 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2324, file: !137, line: 38, size: 32, elements: !2328)
!2328 = !{!2329, !2331}
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2327, file: !137, line: 39, baseType: !2330, size: 32)
!2330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2324, size: 32)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2327, file: !137, line: 40, baseType: !2330, size: 32)
!2332 = !DIDerivedType(tag: DW_TAG_member, scope: !2324, file: !137, line: 42, baseType: !2333, size: 32, offset: 32)
!2333 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2324, file: !137, line: 42, size: 32, elements: !2334)
!2334 = !{!2335, !2336}
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2333, file: !137, line: 43, baseType: !2330, size: 32)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2333, file: !137, line: 44, baseType: !2330, size: 32)
!2337 = !{!2317}
!2338 = !DIFile(filename: "zephyr/kernel/kheap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2339 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2340)
!2340 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !863, line: 51, size: 64, elements: !2341)
!2341 = !{!2342, !2343}
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2340, file: !863, line: 60, baseType: !866, size: 32)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2340, file: !863, line: 65, baseType: !869, size: 32, offset: 32)
!2344 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2345, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !438, splitDebugInlining: false, nameTableKind: None)
!2345 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/metairq_dispatch")
!2346 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2347, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !438, splitDebugInlining: false, nameTableKind: None)
!2347 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/metairq_dispatch")
!2348 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2349, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2350, retainedTypes: !2358, splitDebugInlining: false, nameTableKind: None)
!2349 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/heap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/metairq_dispatch")
!2350 = !{!30, !2351}
!2351 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "chunk_fields", file: !2352, line: 54, baseType: !32, size: 32, elements: !2353)
!2352 = !DIFile(filename: "zephyr/lib/os/heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2353 = !{!2354, !2355, !2356, !2357}
!2354 = !DIEnumerator(name: "LEFT_SIZE", value: 0)
!2355 = !DIEnumerator(name: "SIZE_AND_USED", value: 1)
!2356 = !DIEnumerator(name: "FREE_PREV", value: 2)
!2357 = !DIEnumerator(name: "FREE_NEXT", value: 3)
!2358 = !{!104, !111, !426, !24, !2359, !22, !2365, !105, !1417, !2380}
!2359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2360, size: 32)
!2360 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunk_unit_t", file: !2352, line: 58, baseType: !2361)
!2361 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2352, line: 58, size: 64, elements: !2362)
!2362 = !{!2363}
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !2361, file: !2352, line: 58, baseType: !2364, size: 64)
!2364 = !DICompositeType(tag: DW_TAG_array_type, baseType: !103, size: 64, elements: !1625)
!2365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2366, size: 32)
!2366 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !2352, line: 68, size: 128, elements: !2367)
!2367 = !{!2368, !2371, !2372, !2373}
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "chunk0_hdr", scope: !2366, file: !2352, line: 69, baseType: !2369, size: 64)
!2369 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2370, size: 64, elements: !158)
!2370 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunkid_t", file: !2352, line: 61, baseType: !113)
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "end_chunk", scope: !2366, file: !2352, line: 70, baseType: !2370, size: 32, offset: 64)
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "avail_buckets", scope: !2366, file: !2352, line: 71, baseType: !113, size: 32, offset: 96)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "buckets", scope: !2366, file: !2352, line: 77, baseType: !2374, offset: 128)
!2374 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2375, elements: !2378)
!2375 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap_bucket", file: !2352, line: 64, size: 32, elements: !2376)
!2376 = !{!2377}
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2375, file: !2352, line: 65, baseType: !2370, size: 32)
!2378 = !{!2379}
!2379 = !DISubrange(count: 0)
!2380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !183, size: 32)
!2381 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2382, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2383, retainedTypes: !2403, splitDebugInlining: false, nameTableKind: None)
!2382 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/metairq_dispatch")
!2383 = !{!2384, !2392}
!2384 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "specifier_cat_enum", file: !2385, line: 69, baseType: !32, size: 32, elements: !2386)
!2385 = !DIFile(filename: "zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2386 = !{!2387, !2388, !2389, !2390, !2391}
!2387 = !DIEnumerator(name: "SPECIFIER_INVALID", value: 0)
!2388 = !DIEnumerator(name: "SPECIFIER_SINT", value: 1)
!2389 = !DIEnumerator(name: "SPECIFIER_UINT", value: 2)
!2390 = !DIEnumerator(name: "SPECIFIER_PTR", value: 3)
!2391 = !DIEnumerator(name: "SPECIFIER_FP", value: 4)
!2392 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "length_mod_enum", file: !2385, line: 56, baseType: !32, size: 32, elements: !2393)
!2393 = !{!2394, !2395, !2396, !2397, !2398, !2399, !2400, !2401, !2402}
!2394 = !DIEnumerator(name: "LENGTH_NONE", value: 0)
!2395 = !DIEnumerator(name: "LENGTH_HH", value: 1)
!2396 = !DIEnumerator(name: "LENGTH_H", value: 2)
!2397 = !DIEnumerator(name: "LENGTH_L", value: 3)
!2398 = !DIEnumerator(name: "LENGTH_LL", value: 4)
!2399 = !DIEnumerator(name: "LENGTH_J", value: 5)
!2400 = !DIEnumerator(name: "LENGTH_Z", value: 6)
!2401 = !DIEnumerator(name: "LENGTH_T", value: 7)
!2402 = !DIEnumerator(name: "LENGTH_UPPER_L", value: 8)
!2403 = !{!105, !2384, !2392, !2404, !180, !918, !2406, !2407, !170, !184, !263, !111, !104, !22, !32, !422, !2409, !2410, !106, !423, !110, !424, !2405, !2411, !2412, !2413, !2414}
!2404 = !DIDerivedType(tag: DW_TAG_typedef, name: "sint_value_type", file: !2385, line: 31, baseType: !2405)
!2405 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !23, line: 76, baseType: !110)
!2406 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !112, line: 329, baseType: !32)
!2407 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_value_type", file: !2385, line: 32, baseType: !2408)
!2408 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !23, line: 92, baseType: !115)
!2409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !180, size: 32)
!2410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !918, size: 32)
!2411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2405, size: 32)
!2412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !111, size: 32)
!2413 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !112, line: 145, baseType: !105)
!2414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2413, size: 32)
!2415 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2416, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !438, splitDebugInlining: false, nameTableKind: None)
!2416 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/assert.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/metairq_dispatch")
!2417 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2418, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2418 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/metairq_dispatch/zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/metairq_dispatch")
!2419 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2420, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2421, splitDebugInlining: false, nameTableKind: None)
!2420 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/logging/log_minimal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/metairq_dispatch")
!2421 = !{!263, !170, !105, !32}
!2422 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2423, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2424, retainedTypes: !438, splitDebugInlining: false, nameTableKind: None)
!2423 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/metairq_dispatch")
!2424 = !{!2425, !30}
!2425 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_fatal_error_reason", file: !2426, line: 27, baseType: !32, size: 32, elements: !2427)
!2426 = !DIFile(filename: "zephyr/include/zephyr/fatal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2427 = !{!2428, !2429, !2430, !2431, !2432}
!2428 = !DIEnumerator(name: "K_ERR_CPU_EXCEPTION", value: 0)
!2429 = !DIEnumerator(name: "K_ERR_SPURIOUS_IRQ", value: 1)
!2430 = !DIEnumerator(name: "K_ERR_STACK_CHK_FAIL", value: 2)
!2431 = !DIEnumerator(name: "K_ERR_KERNEL_OOPS", value: 3)
!2432 = !DIEnumerator(name: "K_ERR_KERNEL_PANIC", value: 4)
!2433 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2434, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2435, retainedTypes: !2436, splitDebugInlining: false, nameTableKind: None)
!2434 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/metairq_dispatch")
!2435 = !{!1469, !2425, !30}
!2436 = !{!2437, !2438, !104, !105, !116, !113, !169, !2455}
!2437 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !734, line: 249, baseType: !1469)
!2438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2439, size: 32)
!2439 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !1612, line: 426, baseType: !2440)
!2440 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1612, line: 411, size: 28704, elements: !2441)
!2441 = !{!2442, !2443, !2444, !2445, !2446, !2447, !2448, !2449, !2450, !2451, !2452, !2453, !2454}
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2440, file: !1612, line: 413, baseType: !1624, size: 256)
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2440, file: !1612, line: 414, baseType: !1628, size: 768, offset: 256)
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2440, file: !1612, line: 415, baseType: !1624, size: 256, offset: 1024)
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2440, file: !1612, line: 416, baseType: !1628, size: 768, offset: 1280)
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2440, file: !1612, line: 417, baseType: !1624, size: 256, offset: 2048)
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2440, file: !1612, line: 418, baseType: !1628, size: 768, offset: 2304)
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2440, file: !1612, line: 419, baseType: !1624, size: 256, offset: 3072)
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2440, file: !1612, line: 420, baseType: !1628, size: 768, offset: 3328)
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2440, file: !1612, line: 421, baseType: !1624, size: 256, offset: 4096)
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2440, file: !1612, line: 422, baseType: !1639, size: 1792, offset: 4352)
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2440, file: !1612, line: 423, baseType: !1643, size: 1920, offset: 6144)
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2440, file: !1612, line: 424, baseType: !1648, size: 20608, offset: 8064)
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2440, file: !1612, line: 425, baseType: !738, size: 32, offset: 28672)
!2455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2456, size: 32)
!2456 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1612, line: 468, baseType: !2457)
!2457 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1612, line: 445, size: 1120, elements: !2458)
!2458 = !{!2459, !2460, !2461, !2462, !2463, !2464, !2465, !2466, !2467, !2468, !2469, !2470, !2471, !2472, !2473, !2474, !2475, !2476, !2477, !2478, !2479}
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2457, file: !1612, line: 447, baseType: !809, size: 32)
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2457, file: !1612, line: 448, baseType: !738, size: 32, offset: 32)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2457, file: !1612, line: 449, baseType: !738, size: 32, offset: 64)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2457, file: !1612, line: 450, baseType: !738, size: 32, offset: 96)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2457, file: !1612, line: 451, baseType: !738, size: 32, offset: 128)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2457, file: !1612, line: 452, baseType: !738, size: 32, offset: 160)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2457, file: !1612, line: 453, baseType: !1663, size: 96, offset: 192)
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2457, file: !1612, line: 454, baseType: !738, size: 32, offset: 288)
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2457, file: !1612, line: 455, baseType: !738, size: 32, offset: 320)
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2457, file: !1612, line: 456, baseType: !738, size: 32, offset: 352)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2457, file: !1612, line: 457, baseType: !738, size: 32, offset: 384)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2457, file: !1612, line: 458, baseType: !738, size: 32, offset: 416)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2457, file: !1612, line: 459, baseType: !738, size: 32, offset: 448)
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2457, file: !1612, line: 460, baseType: !738, size: 32, offset: 480)
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2457, file: !1612, line: 461, baseType: !1674, size: 64, offset: 512)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2457, file: !1612, line: 462, baseType: !809, size: 32, offset: 576)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2457, file: !1612, line: 463, baseType: !809, size: 32, offset: 608)
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2457, file: !1612, line: 464, baseType: !1678, size: 128, offset: 640)
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2457, file: !1612, line: 465, baseType: !1680, size: 160, offset: 768)
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2457, file: !1612, line: 466, baseType: !1684, size: 160, offset: 928)
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2457, file: !1612, line: 467, baseType: !738, size: 32, offset: 1088)
!2480 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2481, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !438, splitDebugInlining: false, nameTableKind: None)
!2481 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/metairq_dispatch")
!2482 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2483, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2484, splitDebugInlining: false, nameTableKind: None)
!2483 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/metairq_dispatch")
!2484 = !{!104, !105, !22, !2485}
!2485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2486, size: 32)
!2486 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1612, line: 468, baseType: !2487)
!2487 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1612, line: 445, size: 1120, elements: !2488)
!2488 = !{!2489, !2490, !2491, !2492, !2493, !2494, !2495, !2496, !2497, !2498, !2499, !2500, !2501, !2502, !2503, !2504, !2505, !2506, !2507, !2508, !2509}
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2487, file: !1612, line: 447, baseType: !809, size: 32)
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2487, file: !1612, line: 448, baseType: !738, size: 32, offset: 32)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2487, file: !1612, line: 449, baseType: !738, size: 32, offset: 64)
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2487, file: !1612, line: 450, baseType: !738, size: 32, offset: 96)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2487, file: !1612, line: 451, baseType: !738, size: 32, offset: 128)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2487, file: !1612, line: 452, baseType: !738, size: 32, offset: 160)
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2487, file: !1612, line: 453, baseType: !1663, size: 96, offset: 192)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2487, file: !1612, line: 454, baseType: !738, size: 32, offset: 288)
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2487, file: !1612, line: 455, baseType: !738, size: 32, offset: 320)
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2487, file: !1612, line: 456, baseType: !738, size: 32, offset: 352)
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2487, file: !1612, line: 457, baseType: !738, size: 32, offset: 384)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2487, file: !1612, line: 458, baseType: !738, size: 32, offset: 416)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2487, file: !1612, line: 459, baseType: !738, size: 32, offset: 448)
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2487, file: !1612, line: 460, baseType: !738, size: 32, offset: 480)
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2487, file: !1612, line: 461, baseType: !1674, size: 64, offset: 512)
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2487, file: !1612, line: 462, baseType: !809, size: 32, offset: 576)
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2487, file: !1612, line: 463, baseType: !809, size: 32, offset: 608)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2487, file: !1612, line: 464, baseType: !1678, size: 128, offset: 640)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2487, file: !1612, line: 465, baseType: !1680, size: 160, offset: 768)
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2487, file: !1612, line: 466, baseType: !1684, size: 160, offset: 928)
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2487, file: !1612, line: 467, baseType: !738, size: 32, offset: 1088)
!2510 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2511, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2512, splitDebugInlining: false, nameTableKind: None)
!2511 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/metairq_dispatch")
!2512 = !{!2513, !104, !105}
!2513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2514, size: 32)
!2514 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1612, line: 468, baseType: !2515)
!2515 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1612, line: 445, size: 1120, elements: !2516)
!2516 = !{!2517, !2518, !2519, !2520, !2521, !2522, !2523, !2524, !2525, !2526, !2527, !2528, !2529, !2530, !2531, !2532, !2533, !2534, !2535, !2536, !2537}
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2515, file: !1612, line: 447, baseType: !809, size: 32)
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2515, file: !1612, line: 448, baseType: !738, size: 32, offset: 32)
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2515, file: !1612, line: 449, baseType: !738, size: 32, offset: 64)
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2515, file: !1612, line: 450, baseType: !738, size: 32, offset: 96)
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2515, file: !1612, line: 451, baseType: !738, size: 32, offset: 128)
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2515, file: !1612, line: 452, baseType: !738, size: 32, offset: 160)
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2515, file: !1612, line: 453, baseType: !1663, size: 96, offset: 192)
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2515, file: !1612, line: 454, baseType: !738, size: 32, offset: 288)
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2515, file: !1612, line: 455, baseType: !738, size: 32, offset: 320)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2515, file: !1612, line: 456, baseType: !738, size: 32, offset: 352)
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2515, file: !1612, line: 457, baseType: !738, size: 32, offset: 384)
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2515, file: !1612, line: 458, baseType: !738, size: 32, offset: 416)
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2515, file: !1612, line: 459, baseType: !738, size: 32, offset: 448)
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2515, file: !1612, line: 460, baseType: !738, size: 32, offset: 480)
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2515, file: !1612, line: 461, baseType: !1674, size: 64, offset: 512)
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2515, file: !1612, line: 462, baseType: !809, size: 32, offset: 576)
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2515, file: !1612, line: 463, baseType: !809, size: 32, offset: 608)
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2515, file: !1612, line: 464, baseType: !1678, size: 128, offset: 640)
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2515, file: !1612, line: 465, baseType: !1680, size: 160, offset: 768)
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2515, file: !1612, line: 466, baseType: !1684, size: 160, offset: 928)
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2515, file: !1612, line: 467, baseType: !738, size: 32, offset: 1088)
!2538 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2539, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2540, splitDebugInlining: false, nameTableKind: None)
!2539 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/metairq_dispatch")
!2540 = !{!2541, !113, !104, !105}
!2541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2542, size: 32)
!2542 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2543, line: 98, size: 256, elements: !2544)
!2543 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2544 = !{!2545, !2550, !2555, !2560, !2565, !2570, !2575, !2580}
!2545 = !DIDerivedType(tag: DW_TAG_member, scope: !2542, file: !2543, line: 99, baseType: !2546, size: 32)
!2546 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2542, file: !2543, line: 99, size: 32, elements: !2547)
!2547 = !{!2548, !2549}
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2546, file: !2543, line: 99, baseType: !113, size: 32)
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2546, file: !2543, line: 99, baseType: !113, size: 32)
!2550 = !DIDerivedType(tag: DW_TAG_member, scope: !2542, file: !2543, line: 100, baseType: !2551, size: 32, offset: 32)
!2551 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2542, file: !2543, line: 100, size: 32, elements: !2552)
!2552 = !{!2553, !2554}
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2551, file: !2543, line: 100, baseType: !113, size: 32)
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2551, file: !2543, line: 100, baseType: !113, size: 32)
!2555 = !DIDerivedType(tag: DW_TAG_member, scope: !2542, file: !2543, line: 101, baseType: !2556, size: 32, offset: 64)
!2556 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2542, file: !2543, line: 101, size: 32, elements: !2557)
!2557 = !{!2558, !2559}
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2556, file: !2543, line: 101, baseType: !113, size: 32)
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2556, file: !2543, line: 101, baseType: !113, size: 32)
!2560 = !DIDerivedType(tag: DW_TAG_member, scope: !2542, file: !2543, line: 102, baseType: !2561, size: 32, offset: 96)
!2561 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2542, file: !2543, line: 102, size: 32, elements: !2562)
!2562 = !{!2563, !2564}
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2561, file: !2543, line: 102, baseType: !113, size: 32)
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2561, file: !2543, line: 102, baseType: !113, size: 32)
!2565 = !DIDerivedType(tag: DW_TAG_member, scope: !2542, file: !2543, line: 103, baseType: !2566, size: 32, offset: 128)
!2566 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2542, file: !2543, line: 103, size: 32, elements: !2567)
!2567 = !{!2568, !2569}
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2566, file: !2543, line: 103, baseType: !113, size: 32)
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2566, file: !2543, line: 103, baseType: !113, size: 32)
!2570 = !DIDerivedType(tag: DW_TAG_member, scope: !2542, file: !2543, line: 104, baseType: !2571, size: 32, offset: 160)
!2571 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2542, file: !2543, line: 104, size: 32, elements: !2572)
!2572 = !{!2573, !2574}
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2571, file: !2543, line: 104, baseType: !113, size: 32)
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2571, file: !2543, line: 104, baseType: !113, size: 32)
!2575 = !DIDerivedType(tag: DW_TAG_member, scope: !2542, file: !2543, line: 105, baseType: !2576, size: 32, offset: 192)
!2576 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2542, file: !2543, line: 105, size: 32, elements: !2577)
!2577 = !{!2578, !2579}
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2576, file: !2543, line: 105, baseType: !113, size: 32)
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2576, file: !2543, line: 105, baseType: !113, size: 32)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2542, file: !2543, line: 106, baseType: !113, size: 32, offset: 224)
!2581 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2582, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2424, retainedTypes: !2583, splitDebugInlining: false, nameTableKind: None)
!2582 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/metairq_dispatch")
!2583 = !{!2584, !104, !105, !2609, !2380, !113}
!2584 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2585, size: 32)
!2585 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1612, line: 468, baseType: !2586)
!2586 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1612, line: 445, size: 1120, elements: !2587)
!2587 = !{!2588, !2589, !2590, !2591, !2592, !2593, !2594, !2595, !2596, !2597, !2598, !2599, !2600, !2601, !2602, !2603, !2604, !2605, !2606, !2607, !2608}
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2586, file: !1612, line: 447, baseType: !809, size: 32)
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2586, file: !1612, line: 448, baseType: !738, size: 32, offset: 32)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2586, file: !1612, line: 449, baseType: !738, size: 32, offset: 64)
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2586, file: !1612, line: 450, baseType: !738, size: 32, offset: 96)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2586, file: !1612, line: 451, baseType: !738, size: 32, offset: 128)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2586, file: !1612, line: 452, baseType: !738, size: 32, offset: 160)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2586, file: !1612, line: 453, baseType: !1663, size: 96, offset: 192)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2586, file: !1612, line: 454, baseType: !738, size: 32, offset: 288)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2586, file: !1612, line: 455, baseType: !738, size: 32, offset: 320)
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2586, file: !1612, line: 456, baseType: !738, size: 32, offset: 352)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2586, file: !1612, line: 457, baseType: !738, size: 32, offset: 384)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2586, file: !1612, line: 458, baseType: !738, size: 32, offset: 416)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2586, file: !1612, line: 459, baseType: !738, size: 32, offset: 448)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2586, file: !1612, line: 460, baseType: !738, size: 32, offset: 480)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2586, file: !1612, line: 461, baseType: !1674, size: 64, offset: 512)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2586, file: !1612, line: 462, baseType: !809, size: 32, offset: 576)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2586, file: !1612, line: 463, baseType: !809, size: 32, offset: 608)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2586, file: !1612, line: 464, baseType: !1678, size: 128, offset: 640)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2586, file: !1612, line: 465, baseType: !1680, size: 160, offset: 768)
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2586, file: !1612, line: 466, baseType: !1684, size: 160, offset: 928)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2586, file: !1612, line: 467, baseType: !738, size: 32, offset: 1088)
!2609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2610, size: 32)
!2610 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2543, line: 141, baseType: !2611)
!2611 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2543, line: 97, size: 256, elements: !2612)
!2612 = !{!2613}
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !2611, file: !2543, line: 107, baseType: !2614, size: 256)
!2614 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2543, line: 98, size: 256, elements: !2615)
!2615 = !{!2616, !2621, !2626, !2631, !2636, !2641, !2646, !2651}
!2616 = !DIDerivedType(tag: DW_TAG_member, scope: !2614, file: !2543, line: 99, baseType: !2617, size: 32)
!2617 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2614, file: !2543, line: 99, size: 32, elements: !2618)
!2618 = !{!2619, !2620}
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2617, file: !2543, line: 99, baseType: !113, size: 32)
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2617, file: !2543, line: 99, baseType: !113, size: 32)
!2621 = !DIDerivedType(tag: DW_TAG_member, scope: !2614, file: !2543, line: 100, baseType: !2622, size: 32, offset: 32)
!2622 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2614, file: !2543, line: 100, size: 32, elements: !2623)
!2623 = !{!2624, !2625}
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2622, file: !2543, line: 100, baseType: !113, size: 32)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2622, file: !2543, line: 100, baseType: !113, size: 32)
!2626 = !DIDerivedType(tag: DW_TAG_member, scope: !2614, file: !2543, line: 101, baseType: !2627, size: 32, offset: 64)
!2627 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2614, file: !2543, line: 101, size: 32, elements: !2628)
!2628 = !{!2629, !2630}
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2627, file: !2543, line: 101, baseType: !113, size: 32)
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2627, file: !2543, line: 101, baseType: !113, size: 32)
!2631 = !DIDerivedType(tag: DW_TAG_member, scope: !2614, file: !2543, line: 102, baseType: !2632, size: 32, offset: 96)
!2632 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2614, file: !2543, line: 102, size: 32, elements: !2633)
!2633 = !{!2634, !2635}
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2632, file: !2543, line: 102, baseType: !113, size: 32)
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2632, file: !2543, line: 102, baseType: !113, size: 32)
!2636 = !DIDerivedType(tag: DW_TAG_member, scope: !2614, file: !2543, line: 103, baseType: !2637, size: 32, offset: 128)
!2637 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2614, file: !2543, line: 103, size: 32, elements: !2638)
!2638 = !{!2639, !2640}
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2637, file: !2543, line: 103, baseType: !113, size: 32)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2637, file: !2543, line: 103, baseType: !113, size: 32)
!2641 = !DIDerivedType(tag: DW_TAG_member, scope: !2614, file: !2543, line: 104, baseType: !2642, size: 32, offset: 160)
!2642 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2614, file: !2543, line: 104, size: 32, elements: !2643)
!2643 = !{!2644, !2645}
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2642, file: !2543, line: 104, baseType: !113, size: 32)
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2642, file: !2543, line: 104, baseType: !113, size: 32)
!2646 = !DIDerivedType(tag: DW_TAG_member, scope: !2614, file: !2543, line: 105, baseType: !2647, size: 32, offset: 192)
!2647 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2614, file: !2543, line: 105, size: 32, elements: !2648)
!2648 = !{!2649, !2650}
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2647, file: !2543, line: 105, baseType: !113, size: 32)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2647, file: !2543, line: 105, baseType: !113, size: 32)
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2614, file: !2543, line: 106, baseType: !113, size: 32, offset: 224)
!2652 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2653, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1468, retainedTypes: !2654, splitDebugInlining: false, nameTableKind: None)
!2653 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/metairq_dispatch")
!2654 = !{!2437, !116, !169, !113, !2655, !2672}
!2655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2656, size: 32)
!2656 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !1612, line: 426, baseType: !2657)
!2657 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1612, line: 411, size: 28704, elements: !2658)
!2658 = !{!2659, !2660, !2661, !2662, !2663, !2664, !2665, !2666, !2667, !2668, !2669, !2670, !2671}
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2657, file: !1612, line: 413, baseType: !1624, size: 256)
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2657, file: !1612, line: 414, baseType: !1628, size: 768, offset: 256)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2657, file: !1612, line: 415, baseType: !1624, size: 256, offset: 1024)
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2657, file: !1612, line: 416, baseType: !1628, size: 768, offset: 1280)
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2657, file: !1612, line: 417, baseType: !1624, size: 256, offset: 2048)
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2657, file: !1612, line: 418, baseType: !1628, size: 768, offset: 2304)
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2657, file: !1612, line: 419, baseType: !1624, size: 256, offset: 3072)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2657, file: !1612, line: 420, baseType: !1628, size: 768, offset: 3328)
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2657, file: !1612, line: 421, baseType: !1624, size: 256, offset: 4096)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2657, file: !1612, line: 422, baseType: !1639, size: 1792, offset: 4352)
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2657, file: !1612, line: 423, baseType: !1643, size: 1920, offset: 6144)
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2657, file: !1612, line: 424, baseType: !1648, size: 20608, offset: 8064)
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2657, file: !1612, line: 425, baseType: !738, size: 32, offset: 28672)
!2672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2673, size: 32)
!2673 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1612, line: 468, baseType: !2674)
!2674 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1612, line: 445, size: 1120, elements: !2675)
!2675 = !{!2676, !2677, !2678, !2679, !2680, !2681, !2682, !2683, !2684, !2685, !2686, !2687, !2688, !2689, !2690, !2691, !2692, !2693, !2694, !2695, !2696}
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2674, file: !1612, line: 447, baseType: !809, size: 32)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2674, file: !1612, line: 448, baseType: !738, size: 32, offset: 32)
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2674, file: !1612, line: 449, baseType: !738, size: 32, offset: 64)
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2674, file: !1612, line: 450, baseType: !738, size: 32, offset: 96)
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2674, file: !1612, line: 451, baseType: !738, size: 32, offset: 128)
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2674, file: !1612, line: 452, baseType: !738, size: 32, offset: 160)
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2674, file: !1612, line: 453, baseType: !1663, size: 96, offset: 192)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2674, file: !1612, line: 454, baseType: !738, size: 32, offset: 288)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2674, file: !1612, line: 455, baseType: !738, size: 32, offset: 320)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2674, file: !1612, line: 456, baseType: !738, size: 32, offset: 352)
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2674, file: !1612, line: 457, baseType: !738, size: 32, offset: 384)
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2674, file: !1612, line: 458, baseType: !738, size: 32, offset: 416)
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2674, file: !1612, line: 459, baseType: !738, size: 32, offset: 448)
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2674, file: !1612, line: 460, baseType: !738, size: 32, offset: 480)
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2674, file: !1612, line: 461, baseType: !1674, size: 64, offset: 512)
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2674, file: !1612, line: 462, baseType: !809, size: 32, offset: 576)
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2674, file: !1612, line: 463, baseType: !809, size: 32, offset: 608)
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2674, file: !1612, line: 464, baseType: !1678, size: 128, offset: 640)
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2674, file: !1612, line: 465, baseType: !1680, size: 160, offset: 768)
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2674, file: !1612, line: 466, baseType: !1684, size: 160, offset: 928)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2674, file: !1612, line: 467, baseType: !738, size: 32, offset: 1088)
!2697 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2698, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2699, splitDebugInlining: false, nameTableKind: None)
!2698 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/metairq_dispatch")
!2699 = !{!2700, !104, !105}
!2700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2701, size: 32)
!2701 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1612, line: 468, baseType: !2702)
!2702 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1612, line: 445, size: 1120, elements: !2703)
!2703 = !{!2704, !2705, !2706, !2707, !2708, !2709, !2710, !2711, !2712, !2713, !2714, !2715, !2716, !2717, !2718, !2719, !2720, !2721, !2722, !2723, !2724}
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2702, file: !1612, line: 447, baseType: !809, size: 32)
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2702, file: !1612, line: 448, baseType: !738, size: 32, offset: 32)
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2702, file: !1612, line: 449, baseType: !738, size: 32, offset: 64)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2702, file: !1612, line: 450, baseType: !738, size: 32, offset: 96)
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2702, file: !1612, line: 451, baseType: !738, size: 32, offset: 128)
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2702, file: !1612, line: 452, baseType: !738, size: 32, offset: 160)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2702, file: !1612, line: 453, baseType: !1663, size: 96, offset: 192)
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2702, file: !1612, line: 454, baseType: !738, size: 32, offset: 288)
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2702, file: !1612, line: 455, baseType: !738, size: 32, offset: 320)
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2702, file: !1612, line: 456, baseType: !738, size: 32, offset: 352)
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2702, file: !1612, line: 457, baseType: !738, size: 32, offset: 384)
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2702, file: !1612, line: 458, baseType: !738, size: 32, offset: 416)
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2702, file: !1612, line: 459, baseType: !738, size: 32, offset: 448)
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2702, file: !1612, line: 460, baseType: !738, size: 32, offset: 480)
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2702, file: !1612, line: 461, baseType: !1674, size: 64, offset: 512)
!2719 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2702, file: !1612, line: 462, baseType: !809, size: 32, offset: 576)
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2702, file: !1612, line: 463, baseType: !809, size: 32, offset: 608)
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2702, file: !1612, line: 464, baseType: !1678, size: 128, offset: 640)
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2702, file: !1612, line: 465, baseType: !1680, size: 160, offset: 768)
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2702, file: !1612, line: 466, baseType: !1684, size: 160, offset: 928)
!2724 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2702, file: !1612, line: 467, baseType: !738, size: 32, offset: 1088)
!2725 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2726, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2727, splitDebugInlining: false, nameTableKind: None)
!2726 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/metairq_dispatch")
!2727 = !{!103, !102, !111, !919, !2728, !170, !104}
!2728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2729, size: 32)
!2729 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !170)
!2730 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2731, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2731 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/metairq_dispatch")
!2732 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2733, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2734, splitDebugInlining: false, nameTableKind: None)
!2733 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/nxp/imx/drivers/./ccm_imx7d.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/metairq_dispatch")
!2734 = !{!858, !113}
!2735 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2736, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2737, retainedTypes: !2747, splitDebugInlining: false, nameTableKind: None)
!2736 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/nxp/imx/drivers/./ccm_analog_imx7d.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/metairq_dispatch")
!2737 = !{!2738}
!2738 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_ccm_analog_pll_control", file: !2739, line: 62, baseType: !32, size: 32, elements: !2740)
!2739 = !DIFile(filename: "modules/hal/nxp/imx/drivers/./ccm_analog_imx7d.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2740 = !{!2741, !2742, !2743, !2744, !2745, !2746}
!2741 = !DIEnumerator(name: "ccmAnalogPllArmControl", value: 786528)
!2742 = !DIEnumerator(name: "ccmAnalogPllDdrControl", value: 1310832)
!2743 = !DIEnumerator(name: "ccmAnalogPll480Control", value: 786608)
!2744 = !DIEnumerator(name: "ccmAnalogPllEnetControl", value: 327904)
!2745 = !DIEnumerator(name: "ccmAnalogPllAudioControl", value: 786672)
!2746 = !DIEnumerator(name: "ccmAnalogPllVideoControl", value: 786736)
!2747 = !{!2748, !2811, !113, !911, !858}
!2748 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2749, size: 32)
!2749 = !DIDerivedType(tag: DW_TAG_typedef, name: "CCM_ANALOG_Type", file: !734, line: 8619, baseType: !2750)
!2750 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !734, line: 8563, size: 3072, elements: !2751)
!2751 = !{!2752, !2756, !2757, !2758, !2759, !2760, !2761, !2762, !2763, !2764, !2765, !2767, !2768, !2769, !2770, !2771, !2772, !2773, !2774, !2775, !2776, !2777, !2778, !2779, !2780, !2781, !2782, !2783, !2784, !2785, !2786, !2787, !2788, !2789, !2790, !2791, !2792, !2793, !2794, !2795, !2796, !2797, !2798, !2799, !2800, !2801, !2802, !2803, !2804, !2805, !2806, !2807, !2808, !2809, !2810}
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !2750, file: !734, line: 8564, baseType: !2753, size: 768)
!2753 = !DICompositeType(tag: DW_TAG_array_type, baseType: !169, size: 768, elements: !2754)
!2754 = !{!2755}
!2755 = !DISubrange(count: 96)
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ARM", scope: !2750, file: !734, line: 8565, baseType: !738, size: 32, offset: 768)
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ARM_SET", scope: !2750, file: !734, line: 8566, baseType: !738, size: 32, offset: 800)
!2758 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ARM_CLR", scope: !2750, file: !734, line: 8567, baseType: !738, size: 32, offset: 832)
!2759 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ARM_TOG", scope: !2750, file: !734, line: 8568, baseType: !738, size: 32, offset: 864)
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR", scope: !2750, file: !734, line: 8569, baseType: !738, size: 32, offset: 896)
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_SET", scope: !2750, file: !734, line: 8570, baseType: !738, size: 32, offset: 928)
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_CLR", scope: !2750, file: !734, line: 8571, baseType: !738, size: 32, offset: 960)
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_TOG", scope: !2750, file: !734, line: 8572, baseType: !738, size: 32, offset: 992)
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_SS", scope: !2750, file: !734, line: 8573, baseType: !738, size: 32, offset: 1024)
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !2750, file: !734, line: 8574, baseType: !2766, size: 96, offset: 1056)
!2766 = !DICompositeType(tag: DW_TAG_array_type, baseType: !169, size: 96, elements: !1664)
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_NUM", scope: !2750, file: !734, line: 8575, baseType: !738, size: 32, offset: 1152)
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_2", scope: !2750, file: !734, line: 8576, baseType: !2766, size: 96, offset: 1184)
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_DENOM", scope: !2750, file: !734, line: 8577, baseType: !738, size: 32, offset: 1280)
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_3", scope: !2750, file: !734, line: 8578, baseType: !2766, size: 96, offset: 1312)
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_480", scope: !2750, file: !734, line: 8579, baseType: !738, size: 32, offset: 1408)
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_480_SET", scope: !2750, file: !734, line: 8580, baseType: !738, size: 32, offset: 1440)
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_480_CLR", scope: !2750, file: !734, line: 8581, baseType: !738, size: 32, offset: 1472)
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_480_TOG", scope: !2750, file: !734, line: 8582, baseType: !738, size: 32, offset: 1504)
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480A", scope: !2750, file: !734, line: 8583, baseType: !738, size: 32, offset: 1536)
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480A_SET", scope: !2750, file: !734, line: 8584, baseType: !738, size: 32, offset: 1568)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480A_CLR", scope: !2750, file: !734, line: 8585, baseType: !738, size: 32, offset: 1600)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480A_TOG", scope: !2750, file: !734, line: 8586, baseType: !738, size: 32, offset: 1632)
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480B", scope: !2750, file: !734, line: 8587, baseType: !738, size: 32, offset: 1664)
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480B_SET", scope: !2750, file: !734, line: 8588, baseType: !738, size: 32, offset: 1696)
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480B_CLR", scope: !2750, file: !734, line: 8589, baseType: !738, size: 32, offset: 1728)
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480B_TOG", scope: !2750, file: !734, line: 8590, baseType: !738, size: 32, offset: 1760)
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ENET", scope: !2750, file: !734, line: 8591, baseType: !738, size: 32, offset: 1792)
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ENET_SET", scope: !2750, file: !734, line: 8592, baseType: !738, size: 32, offset: 1824)
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ENET_CLR", scope: !2750, file: !734, line: 8593, baseType: !738, size: 32, offset: 1856)
!2786 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ENET_TOG", scope: !2750, file: !734, line: 8594, baseType: !738, size: 32, offset: 1888)
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO", scope: !2750, file: !734, line: 8595, baseType: !738, size: 32, offset: 1920)
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_SET", scope: !2750, file: !734, line: 8596, baseType: !738, size: 32, offset: 1952)
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_CLR", scope: !2750, file: !734, line: 8597, baseType: !738, size: 32, offset: 1984)
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_TOG", scope: !2750, file: !734, line: 8598, baseType: !738, size: 32, offset: 2016)
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_SS", scope: !2750, file: !734, line: 8599, baseType: !738, size: 32, offset: 2048)
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_4", scope: !2750, file: !734, line: 8600, baseType: !2766, size: 96, offset: 2080)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_NUM", scope: !2750, file: !734, line: 8601, baseType: !738, size: 32, offset: 2176)
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_5", scope: !2750, file: !734, line: 8602, baseType: !2766, size: 96, offset: 2208)
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_DENOM", scope: !2750, file: !734, line: 8603, baseType: !738, size: 32, offset: 2304)
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_6", scope: !2750, file: !734, line: 8604, baseType: !2766, size: 96, offset: 2336)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO", scope: !2750, file: !734, line: 8605, baseType: !738, size: 32, offset: 2432)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_SET", scope: !2750, file: !734, line: 8606, baseType: !738, size: 32, offset: 2464)
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_CLR", scope: !2750, file: !734, line: 8607, baseType: !738, size: 32, offset: 2496)
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_TOG", scope: !2750, file: !734, line: 8608, baseType: !738, size: 32, offset: 2528)
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_SS", scope: !2750, file: !734, line: 8609, baseType: !738, size: 32, offset: 2560)
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_7", scope: !2750, file: !734, line: 8610, baseType: !2766, size: 96, offset: 2592)
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_NUM", scope: !2750, file: !734, line: 8611, baseType: !738, size: 32, offset: 2688)
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_8", scope: !2750, file: !734, line: 8612, baseType: !2766, size: 96, offset: 2720)
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_DENOM", scope: !2750, file: !734, line: 8613, baseType: !738, size: 32, offset: 2816)
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_9", scope: !2750, file: !734, line: 8614, baseType: !2766, size: 96, offset: 2848)
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_MISC0", scope: !2750, file: !734, line: 8615, baseType: !738, size: 32, offset: 2944)
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_MISC0_SET", scope: !2750, file: !734, line: 8616, baseType: !738, size: 32, offset: 2976)
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_MISC0_CLR", scope: !2750, file: !734, line: 8617, baseType: !738, size: 32, offset: 3008)
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_MISC0_TOG", scope: !2750, file: !734, line: 8618, baseType: !738, size: 32, offset: 3040)
!2811 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!2812 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2813, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2814, splitDebugInlining: false, nameTableKind: None)
!2813 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/nxp/imx/drivers/./gpio_imx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/metairq_dispatch")
!2814 = !{!2815, !2819, !1005}
!2815 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_gpio_pin_direction", file: !1006, line: 49, baseType: !32, size: 32, elements: !2816)
!2816 = !{!2817, !2818}
!2817 = !DIEnumerator(name: "gpioDigitalInput", value: 0)
!2818 = !DIEnumerator(name: "gpioDigitalOutput", value: 1)
!2819 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_gpio_interrupt_mode", file: !1006, line: 56, baseType: !32, size: 32, elements: !2820)
!2820 = !{!2821, !2822, !2823, !2824, !2825}
!2821 = !DIEnumerator(name: "gpioIntLowLevel", value: 0)
!2822 = !DIEnumerator(name: "gpioIntHighLevel", value: 1)
!2823 = !DIEnumerator(name: "gpioIntRisingEdge", value: 2)
!2824 = !DIEnumerator(name: "gpioIntFallingEdge", value: 3)
!2825 = !DIEnumerator(name: "gpioNoIntmode", value: 4)
!2826 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2827, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2828, retainedTypes: !2837, splitDebugInlining: false, nameTableKind: None)
!2827 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/nxp/imx/drivers/./uart_imx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/metairq_dispatch")
!2828 = !{!1267, !2829, !2833}
!2829 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_uart_modem_mode", file: !1189, line: 179, baseType: !32, size: 32, elements: !2830)
!2830 = !{!2831, !2832}
!2831 = !DIEnumerator(name: "uartModemModeDce", value: 0)
!2832 = !DIEnumerator(name: "uartModemModeDte", value: 64)
!2833 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_uart_irda_vote_clock", file: !1189, line: 194, baseType: !32, size: 32, elements: !2834)
!2834 = !{!2835, !2836}
!2835 = !DIEnumerator(name: "uartIrdaVoteClockSampling", value: 0)
!2836 = !DIEnumerator(name: "uartIrdaVoteClockReference", value: 32)
!2837 = !{!113, !1417}
!2838 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2839, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2840, retainedTypes: !2851, splitDebugInlining: false, nameTableKind: None)
!2839 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/nxp/imx/devices/MCIMX7D/./clock_freq.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/metairq_dispatch")
!2840 = !{!449, !2841}
!2841 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_ccm_analog_pfd_frac", file: !2739, line: 128, baseType: !32, size: 32, elements: !2842)
!2842 = !{!2843, !2844, !2845, !2846, !2847, !2848, !2849, !2850}
!2843 = !DIEnumerator(name: "ccmAnalogPfd0Frac", value: 192)
!2844 = !DIEnumerator(name: "ccmAnalogPfd1Frac", value: 524480)
!2845 = !DIEnumerator(name: "ccmAnalogPfd2Frac", value: 1048768)
!2846 = !DIEnumerator(name: "ccmAnalogPfd3Frac", value: 1573056)
!2847 = !DIEnumerator(name: "ccmAnalogPfd4Frac", value: 208)
!2848 = !DIEnumerator(name: "ccmAnalogPfd5Frac", value: 524496)
!2849 = !DIEnumerator(name: "ccmAnalogPfd6Frac", value: 1048784)
!2850 = !DIEnumerator(name: "ccmAnalogPfd7Frac", value: 1573072)
!2851 = !{!113, !2852, !2904, !858}
!2852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2853, size: 32)
!2853 = !DIDerivedType(tag: DW_TAG_typedef, name: "CCM_Type", file: !734, line: 4575, baseType: !2854)
!2854 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !734, line: 4532, size: 390144, elements: !2855)
!2855 = !{!2856, !2857, !2858, !2859, !2860, !2861, !2869, !2870, !2878, !2879}
!2856 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0", scope: !2854, file: !734, line: 4533, baseType: !738, size: 32)
!2857 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0_SET", scope: !2854, file: !734, line: 4534, baseType: !738, size: 32, offset: 32)
!2858 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0_CLR", scope: !2854, file: !734, line: 4535, baseType: !738, size: 32, offset: 64)
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0_TOG", scope: !2854, file: !734, line: 4536, baseType: !738, size: 32, offset: 96)
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !2854, file: !734, line: 4537, baseType: !743, size: 16256, offset: 128)
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL", scope: !2854, file: !734, line: 4543, baseType: !2862, size: 4224, offset: 16384)
!2862 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2863, size: 4224, elements: !754)
!2863 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2854, file: !734, line: 4538, size: 128, elements: !2864)
!2864 = !{!2865, !2866, !2867, !2868}
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL", scope: !2863, file: !734, line: 4539, baseType: !738, size: 32)
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL_SET", scope: !2863, file: !734, line: 4540, baseType: !738, size: 32, offset: 32)
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL_CLR", scope: !2863, file: !734, line: 4541, baseType: !738, size: 32, offset: 64)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL_TOG", scope: !2863, file: !734, line: 4542, baseType: !738, size: 32, offset: 96)
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !2854, file: !734, line: 4544, baseType: !757, size: 110464, offset: 20608)
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR", scope: !2854, file: !734, line: 4550, baseType: !2871, size: 24448, offset: 131072)
!2871 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2872, size: 24448, elements: !768)
!2872 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2854, file: !734, line: 4545, size: 128, elements: !2873)
!2873 = !{!2874, !2875, !2876, !2877}
!2874 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR", scope: !2872, file: !734, line: 4546, baseType: !738, size: 32)
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR_SET", scope: !2872, file: !734, line: 4547, baseType: !738, size: 32, offset: 32)
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR_CLR", scope: !2872, file: !734, line: 4548, baseType: !738, size: 32, offset: 64)
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR_TOG", scope: !2872, file: !734, line: 4549, baseType: !738, size: 32, offset: 96)
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_2", scope: !2854, file: !734, line: 4551, baseType: !771, size: 106624, offset: 155520)
!2879 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_TOG", scope: !2854, file: !734, line: 4574, baseType: !2880, size: 128000, offset: 262144)
!2880 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2881, size: 128000, elements: !802)
!2881 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2854, file: !734, line: 4552, size: 1024, elements: !2882)
!2882 = !{!2883, !2884, !2885, !2886, !2887, !2888, !2889, !2890, !2891, !2892, !2893, !2894, !2895, !2896, !2897, !2898, !2899, !2900, !2901, !2902, !2903}
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT", scope: !2881, file: !734, line: 4553, baseType: !738, size: 32)
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT_SET", scope: !2881, file: !734, line: 4554, baseType: !738, size: 32, offset: 32)
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT_CLR", scope: !2881, file: !734, line: 4555, baseType: !738, size: 32, offset: 64)
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT_TOG", scope: !2881, file: !734, line: 4556, baseType: !738, size: 32, offset: 96)
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "MISC", scope: !2881, file: !734, line: 4557, baseType: !738, size: 32, offset: 128)
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "MISC_ROOT_SET", scope: !2881, file: !734, line: 4558, baseType: !738, size: 32, offset: 160)
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "MISC_ROOT_CLR", scope: !2881, file: !734, line: 4559, baseType: !738, size: 32, offset: 192)
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "MISC_ROOT_TOG", scope: !2881, file: !734, line: 4560, baseType: !738, size: 32, offset: 224)
!2891 = !DIDerivedType(tag: DW_TAG_member, name: "POST", scope: !2881, file: !734, line: 4561, baseType: !738, size: 32, offset: 256)
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "POST_ROOT_SET", scope: !2881, file: !734, line: 4562, baseType: !738, size: 32, offset: 288)
!2893 = !DIDerivedType(tag: DW_TAG_member, name: "POST_ROOT_CLR", scope: !2881, file: !734, line: 4563, baseType: !738, size: 32, offset: 320)
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "POST_ROOT_TOG", scope: !2881, file: !734, line: 4564, baseType: !738, size: 32, offset: 352)
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "PRE", scope: !2881, file: !734, line: 4565, baseType: !738, size: 32, offset: 384)
!2896 = !DIDerivedType(tag: DW_TAG_member, name: "PRE_ROOT_SET", scope: !2881, file: !734, line: 4566, baseType: !738, size: 32, offset: 416)
!2897 = !DIDerivedType(tag: DW_TAG_member, name: "PRE_ROOT_CLR", scope: !2881, file: !734, line: 4567, baseType: !738, size: 32, offset: 448)
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "PRE_ROOT_TOG", scope: !2881, file: !734, line: 4568, baseType: !738, size: 32, offset: 480)
!2899 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !2881, file: !734, line: 4569, baseType: !795, size: 384, offset: 512)
!2900 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL", scope: !2881, file: !734, line: 4570, baseType: !738, size: 32, offset: 896)
!2901 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_SET", scope: !2881, file: !734, line: 4571, baseType: !738, size: 32, offset: 928)
!2902 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_CLR", scope: !2881, file: !734, line: 4572, baseType: !738, size: 32, offset: 960)
!2903 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_TOG", scope: !2881, file: !734, line: 4573, baseType: !738, size: 32, offset: 992)
!2904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2905, size: 32)
!2905 = !DIDerivedType(tag: DW_TAG_typedef, name: "CCM_ANALOG_Type", file: !734, line: 8619, baseType: !2906)
!2906 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !734, line: 8563, size: 3072, elements: !2907)
!2907 = !{!2908, !2909, !2910, !2911, !2912, !2913, !2914, !2915, !2916, !2917, !2918, !2919, !2920, !2921, !2922, !2923, !2924, !2925, !2926, !2927, !2928, !2929, !2930, !2931, !2932, !2933, !2934, !2935, !2936, !2937, !2938, !2939, !2940, !2941, !2942, !2943, !2944, !2945, !2946, !2947, !2948, !2949, !2950, !2951, !2952, !2953, !2954, !2955, !2956, !2957, !2958, !2959, !2960, !2961, !2962}
!2908 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !2906, file: !734, line: 8564, baseType: !2753, size: 768)
!2909 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ARM", scope: !2906, file: !734, line: 8565, baseType: !738, size: 32, offset: 768)
!2910 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ARM_SET", scope: !2906, file: !734, line: 8566, baseType: !738, size: 32, offset: 800)
!2911 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ARM_CLR", scope: !2906, file: !734, line: 8567, baseType: !738, size: 32, offset: 832)
!2912 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ARM_TOG", scope: !2906, file: !734, line: 8568, baseType: !738, size: 32, offset: 864)
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR", scope: !2906, file: !734, line: 8569, baseType: !738, size: 32, offset: 896)
!2914 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_SET", scope: !2906, file: !734, line: 8570, baseType: !738, size: 32, offset: 928)
!2915 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_CLR", scope: !2906, file: !734, line: 8571, baseType: !738, size: 32, offset: 960)
!2916 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_TOG", scope: !2906, file: !734, line: 8572, baseType: !738, size: 32, offset: 992)
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_SS", scope: !2906, file: !734, line: 8573, baseType: !738, size: 32, offset: 1024)
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !2906, file: !734, line: 8574, baseType: !2766, size: 96, offset: 1056)
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_NUM", scope: !2906, file: !734, line: 8575, baseType: !738, size: 32, offset: 1152)
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_2", scope: !2906, file: !734, line: 8576, baseType: !2766, size: 96, offset: 1184)
!2921 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_DENOM", scope: !2906, file: !734, line: 8577, baseType: !738, size: 32, offset: 1280)
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_3", scope: !2906, file: !734, line: 8578, baseType: !2766, size: 96, offset: 1312)
!2923 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_480", scope: !2906, file: !734, line: 8579, baseType: !738, size: 32, offset: 1408)
!2924 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_480_SET", scope: !2906, file: !734, line: 8580, baseType: !738, size: 32, offset: 1440)
!2925 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_480_CLR", scope: !2906, file: !734, line: 8581, baseType: !738, size: 32, offset: 1472)
!2926 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_480_TOG", scope: !2906, file: !734, line: 8582, baseType: !738, size: 32, offset: 1504)
!2927 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480A", scope: !2906, file: !734, line: 8583, baseType: !738, size: 32, offset: 1536)
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480A_SET", scope: !2906, file: !734, line: 8584, baseType: !738, size: 32, offset: 1568)
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480A_CLR", scope: !2906, file: !734, line: 8585, baseType: !738, size: 32, offset: 1600)
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480A_TOG", scope: !2906, file: !734, line: 8586, baseType: !738, size: 32, offset: 1632)
!2931 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480B", scope: !2906, file: !734, line: 8587, baseType: !738, size: 32, offset: 1664)
!2932 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480B_SET", scope: !2906, file: !734, line: 8588, baseType: !738, size: 32, offset: 1696)
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480B_CLR", scope: !2906, file: !734, line: 8589, baseType: !738, size: 32, offset: 1728)
!2934 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480B_TOG", scope: !2906, file: !734, line: 8590, baseType: !738, size: 32, offset: 1760)
!2935 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ENET", scope: !2906, file: !734, line: 8591, baseType: !738, size: 32, offset: 1792)
!2936 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ENET_SET", scope: !2906, file: !734, line: 8592, baseType: !738, size: 32, offset: 1824)
!2937 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ENET_CLR", scope: !2906, file: !734, line: 8593, baseType: !738, size: 32, offset: 1856)
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ENET_TOG", scope: !2906, file: !734, line: 8594, baseType: !738, size: 32, offset: 1888)
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO", scope: !2906, file: !734, line: 8595, baseType: !738, size: 32, offset: 1920)
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_SET", scope: !2906, file: !734, line: 8596, baseType: !738, size: 32, offset: 1952)
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_CLR", scope: !2906, file: !734, line: 8597, baseType: !738, size: 32, offset: 1984)
!2942 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_TOG", scope: !2906, file: !734, line: 8598, baseType: !738, size: 32, offset: 2016)
!2943 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_SS", scope: !2906, file: !734, line: 8599, baseType: !738, size: 32, offset: 2048)
!2944 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_4", scope: !2906, file: !734, line: 8600, baseType: !2766, size: 96, offset: 2080)
!2945 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_NUM", scope: !2906, file: !734, line: 8601, baseType: !738, size: 32, offset: 2176)
!2946 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_5", scope: !2906, file: !734, line: 8602, baseType: !2766, size: 96, offset: 2208)
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_DENOM", scope: !2906, file: !734, line: 8603, baseType: !738, size: 32, offset: 2304)
!2948 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_6", scope: !2906, file: !734, line: 8604, baseType: !2766, size: 96, offset: 2336)
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO", scope: !2906, file: !734, line: 8605, baseType: !738, size: 32, offset: 2432)
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_SET", scope: !2906, file: !734, line: 8606, baseType: !738, size: 32, offset: 2464)
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_CLR", scope: !2906, file: !734, line: 8607, baseType: !738, size: 32, offset: 2496)
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_TOG", scope: !2906, file: !734, line: 8608, baseType: !738, size: 32, offset: 2528)
!2953 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_SS", scope: !2906, file: !734, line: 8609, baseType: !738, size: 32, offset: 2560)
!2954 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_7", scope: !2906, file: !734, line: 8610, baseType: !2766, size: 96, offset: 2592)
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_NUM", scope: !2906, file: !734, line: 8611, baseType: !738, size: 32, offset: 2688)
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_8", scope: !2906, file: !734, line: 8612, baseType: !2766, size: 96, offset: 2720)
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_DENOM", scope: !2906, file: !734, line: 8613, baseType: !738, size: 32, offset: 2816)
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_9", scope: !2906, file: !734, line: 8614, baseType: !2766, size: 96, offset: 2848)
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_MISC0", scope: !2906, file: !734, line: 8615, baseType: !738, size: 32, offset: 2944)
!2960 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_MISC0_SET", scope: !2906, file: !734, line: 8616, baseType: !738, size: 32, offset: 2976)
!2961 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_MISC0_CLR", scope: !2906, file: !734, line: 8617, baseType: !738, size: 32, offset: 3008)
!2962 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_MISC0_TOG", scope: !2906, file: !734, line: 8618, baseType: !738, size: 32, offset: 3040)
!2963 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2964, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2965, splitDebugInlining: false, nameTableKind: None)
!2964 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/metairq_dispatch")
!2965 = !{!104, !111}
!2966 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2967, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2968, retainedTypes: !438, splitDebugInlining: false, nameTableKind: None)
!2967 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/metairq_dispatch")
!2968 = !{!2969, !2976, !2425, !30}
!2969 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_query_id", file: !2970, line: 14, baseType: !32, size: 32, elements: !2971)
!2970 = !DIFile(filename: "zephyr/include/zephyr/debug/coredump.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2971 = !{!2972, !2973, !2974, !2975}
!2972 = !DIEnumerator(name: "COREDUMP_QUERY_GET_ERROR", value: 0)
!2973 = !DIEnumerator(name: "COREDUMP_QUERY_HAS_STORED_DUMP", value: 1)
!2974 = !DIEnumerator(name: "COREDUMP_QUERY_GET_STORED_DUMP_SIZE", value: 2)
!2975 = !DIEnumerator(name: "COREDUMP_QUERY_MAX", value: 3)
!2976 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_cmd_id", file: !2970, line: 42, baseType: !32, size: 32, elements: !2977)
!2977 = !{!2978, !2979, !2980, !2981, !2982, !2983}
!2978 = !DIEnumerator(name: "COREDUMP_CMD_CLEAR_ERROR", value: 0)
!2979 = !DIEnumerator(name: "COREDUMP_CMD_VERIFY_STORED_DUMP", value: 1)
!2980 = !DIEnumerator(name: "COREDUMP_CMD_ERASE_STORED_DUMP", value: 2)
!2981 = !DIEnumerator(name: "COREDUMP_CMD_COPY_STORED_DUMP", value: 3)
!2982 = !DIEnumerator(name: "COREDUMP_CMD_INVALIDATE_STORED_DUMP", value: 4)
!2983 = !DIEnumerator(name: "COREDUMP_CMD_MAX", value: 5)
!2984 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2985, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !438, splitDebugInlining: false, nameTableKind: None)
!2985 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/metairq_dispatch")
!2986 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2987, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2988, splitDebugInlining: false, nameTableKind: None)
!2987 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/msg_q.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/metairq_dispatch")
!2988 = !{!104, !105, !2989, !3004}
!2989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2990, size: 32)
!2990 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !137, line: 49, baseType: !2991)
!2991 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !137, line: 37, size: 64, elements: !2992)
!2992 = !{!2993, !2999}
!2993 = !DIDerivedType(tag: DW_TAG_member, scope: !2991, file: !137, line: 38, baseType: !2994, size: 32)
!2994 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2991, file: !137, line: 38, size: 32, elements: !2995)
!2995 = !{!2996, !2998}
!2996 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2994, file: !137, line: 39, baseType: !2997, size: 32)
!2997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2991, size: 32)
!2998 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2994, file: !137, line: 40, baseType: !2997, size: 32)
!2999 = !DIDerivedType(tag: DW_TAG_member, scope: !2991, file: !137, line: 42, baseType: !3000, size: 32, offset: 32)
!3000 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2991, file: !137, line: 42, size: 32, elements: !3001)
!3001 = !{!3002, !3003}
!3002 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3000, file: !137, line: 43, baseType: !2997, size: 32)
!3003 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3000, file: !137, line: 44, baseType: !2997, size: 32)
!3004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3005, size: 32)
!3005 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !127, line: 245, size: 896, elements: !3006)
!3006 = !{!3007, !3051, !3063, !3064, !3065, !3066, !3081}
!3007 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3005, file: !127, line: 247, baseType: !3008, size: 384)
!3008 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !127, line: 57, size: 384, elements: !3009)
!3009 = !{!3010, !3020, !3027, !3028, !3029, !3038, !3039, !3040}
!3010 = !DIDerivedType(tag: DW_TAG_member, scope: !3008, file: !127, line: 60, baseType: !3011, size: 64)
!3011 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3008, file: !127, line: 60, size: 64, elements: !3012)
!3012 = !{!3013, !3014}
!3013 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !3011, file: !127, line: 61, baseType: !2990, size: 64)
!3014 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !3011, file: !127, line: 62, baseType: !3015, size: 64)
!3015 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !153, line: 49, size: 64, elements: !3016)
!3016 = !{!3017}
!3017 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3015, file: !153, line: 50, baseType: !3018, size: 64)
!3018 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3019, size: 64, elements: !158)
!3019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3015, size: 32)
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !3008, file: !127, line: 68, baseType: !3021, size: 32, offset: 64)
!3021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3022, size: 32)
!3022 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !163, line: 233, baseType: !3023)
!3023 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !163, line: 231, size: 64, elements: !3024)
!3024 = !{!3025}
!3025 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !3023, file: !163, line: 232, baseType: !3026, size: 64)
!3026 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !137, line: 48, baseType: !2991)
!3027 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !3008, file: !127, line: 71, baseType: !169, size: 8, offset: 96)
!3028 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !3008, file: !127, line: 74, baseType: !169, size: 8, offset: 104)
!3029 = !DIDerivedType(tag: DW_TAG_member, scope: !3008, file: !127, line: 90, baseType: !3030, size: 16, offset: 112)
!3030 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3008, file: !127, line: 90, size: 16, elements: !3031)
!3031 = !{!3032, !3037}
!3032 = !DIDerivedType(tag: DW_TAG_member, scope: !3030, file: !127, line: 91, baseType: !3033, size: 16)
!3033 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3030, file: !127, line: 91, size: 16, elements: !3034)
!3034 = !{!3035, !3036}
!3035 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !3033, file: !127, line: 96, baseType: !179, size: 8)
!3036 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !3033, file: !127, line: 97, baseType: !169, size: 8, offset: 8)
!3037 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !3030, file: !127, line: 100, baseType: !183, size: 16)
!3038 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !3008, file: !127, line: 107, baseType: !113, size: 32, offset: 128)
!3039 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !3008, file: !127, line: 127, baseType: !104, size: 32, offset: 160)
!3040 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3008, file: !127, line: 131, baseType: !3041, size: 192, offset: 192)
!3041 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !163, line: 244, size: 192, elements: !3042)
!3042 = !{!3043, !3044, !3050}
!3043 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3041, file: !163, line: 245, baseType: !2990, size: 64)
!3044 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !3041, file: !163, line: 246, baseType: !3045, size: 32, offset: 64)
!3045 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !163, line: 242, baseType: !3046)
!3046 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3047, size: 32)
!3047 = !DISubroutineType(types: !3048)
!3048 = !{null, !3049}
!3049 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3041, size: 32)
!3050 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !3041, file: !163, line: 249, baseType: !109, size: 64, offset: 128)
!3051 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !3005, file: !127, line: 250, baseType: !3052, size: 288, offset: 384)
!3052 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !200, line: 25, size: 288, elements: !3053)
!3053 = !{!3054, !3055, !3056, !3057, !3058, !3059, !3060, !3061, !3062}
!3054 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !3052, file: !200, line: 26, baseType: !113, size: 32)
!3055 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !3052, file: !200, line: 27, baseType: !113, size: 32, offset: 32)
!3056 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !3052, file: !200, line: 28, baseType: !113, size: 32, offset: 64)
!3057 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !3052, file: !200, line: 29, baseType: !113, size: 32, offset: 96)
!3058 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !3052, file: !200, line: 30, baseType: !113, size: 32, offset: 128)
!3059 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !3052, file: !200, line: 31, baseType: !113, size: 32, offset: 160)
!3060 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !3052, file: !200, line: 32, baseType: !113, size: 32, offset: 192)
!3061 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !3052, file: !200, line: 33, baseType: !113, size: 32, offset: 224)
!3062 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !3052, file: !200, line: 34, baseType: !113, size: 32, offset: 256)
!3063 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !3005, file: !127, line: 253, baseType: !104, size: 32, offset: 672)
!3064 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !3005, file: !127, line: 256, baseType: !3022, size: 64, offset: 704)
!3065 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !3005, file: !127, line: 294, baseType: !105, size: 32, offset: 768)
!3066 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !3005, file: !127, line: 325, baseType: !3067, size: 32, offset: 800)
!3067 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3068, size: 32)
!3068 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !122, line: 5073, size: 192, elements: !3069)
!3069 = !{!3070, !3076, !3077}
!3070 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3068, file: !122, line: 5074, baseType: !3071, size: 96)
!3071 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !220, line: 56, size: 96, elements: !3072)
!3072 = !{!3073, !3074, !3075}
!3073 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3071, file: !220, line: 57, baseType: !223, size: 32)
!3074 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !3071, file: !220, line: 58, baseType: !104, size: 32, offset: 32)
!3075 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !3071, file: !220, line: 59, baseType: !111, size: 32, offset: 64)
!3076 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !3068, file: !122, line: 5075, baseType: !3022, size: 64, offset: 96)
!3077 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3068, file: !122, line: 5076, baseType: !3078, size: 32, offset: 160)
!3078 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !230, line: 43, size: 32, elements: !3079)
!3079 = !{!3080}
!3080 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !3078, file: !230, line: 52, baseType: !22, size: 32)
!3081 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !3005, file: !127, line: 343, baseType: !3082, size: 64, offset: 832)
!3082 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !200, line: 60, size: 64, elements: !3083)
!3083 = !{!3084, !3085}
!3084 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !3082, file: !200, line: 63, baseType: !113, size: 32)
!3085 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !3082, file: !200, line: 66, baseType: !113, size: 32, offset: 32)
!3086 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3087, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3088, splitDebugInlining: false, nameTableKind: None)
!3087 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/metairq_dispatch")
!3088 = !{!22, !104, !105}
!3089 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3090, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !438, splitDebugInlining: false, nameTableKind: None)
!3090 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/metairq_dispatch")
!3091 = !{!"Ubuntu clang version 14.0.6"}
!3092 = !{i32 7, !"Dwarf Version", i32 4}
!3093 = !{i32 2, !"Debug Info Version", i32 3}
!3094 = !{i32 1, !"wchar_size", i32 4}
!3095 = !{i32 1, !"min_enum_size", i32 4}
!3096 = !{i32 1, !"branch-target-enforcement", i32 0}
!3097 = !{i32 1, !"sign-return-address", i32 0}
!3098 = !{i32 1, !"sign-return-address-all", i32 0}
!3099 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!3100 = !{i32 7, !"frame-pointer", i32 2}
!3101 = distinct !DISubprogram(name: "_OffsetAbsSyms", scope: !3102, file: !3102, line: 26, type: !260, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2344, retainedNodes: !391)
!3102 = !DIFile(filename: "zephyr/kernel/include/kernel_offsets.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3103 = !DILocation(line: 28, column: 1, scope: !3101)
!3104 = !{i64 2155083528, i64 2155083548, i64 2155083611}
!3105 = !DILocation(line: 29, column: 1, scope: !3101)
!3106 = !{i64 2155083943, i64 2155083963, i64 2155084026}
!3107 = !DILocation(line: 30, column: 1, scope: !3101)
!3108 = !{i64 2155084362, i64 2155084382, i64 2155084445}
!3109 = !DILocation(line: 31, column: 1, scope: !3101)
!3110 = !{i64 2155088842, i64 2155088862, i64 2155088925}
!3111 = !DILocation(line: 33, column: 1, scope: !3101)
!3112 = !{i64 2155089134, i64 2155089154, i64 2155089217}
!3113 = !DILocation(line: 35, column: 1, scope: !3101)
!3114 = !{i64 2155089459, i64 2155089479, i64 2155089542}
!3115 = !DILocation(line: 50, column: 1, scope: !3101)
!3116 = !{i64 2155089886, i64 2155089906, i64 2155089969}
!3117 = !DILocation(line: 54, column: 1, scope: !3101)
!3118 = !{i64 2155090325, i64 2155090345, i64 2155090408}
!3119 = !DILocation(line: 61, column: 1, scope: !3101)
!3120 = !{i64 2155090642, i64 2155090662, i64 2155090725}
!3121 = !DILocation(line: 63, column: 1, scope: !3101)
!3122 = !{i64 2155091022, i64 2155091042, i64 2155091105}
!3123 = !DILocation(line: 64, column: 1, scope: !3101)
!3124 = !{i64 2155091544, i64 2155091564, i64 2155091627}
!3125 = !DILocation(line: 65, column: 1, scope: !3101)
!3126 = !{i64 2155092042, i64 2155092062, i64 2155092125}
!3127 = !DILocation(line: 66, column: 1, scope: !3101)
!3128 = !{i64 2155092524, i64 2155092544, i64 2155092607}
!3129 = !DILocation(line: 67, column: 1, scope: !3101)
!3130 = !{i64 2155093031, i64 2155093051, i64 2155093114}
!3131 = !DILocation(line: 68, column: 1, scope: !3101)
!3132 = !{i64 2155093519, i64 2155093539, i64 2155093602}
!3133 = !DILocation(line: 70, column: 1, scope: !3101)
!3134 = !{i64 2155093987, i64 2155094007, i64 2155094070}
!3135 = !DILocation(line: 71, column: 1, scope: !3101)
!3136 = !{i64 2155094429, i64 2155094449, i64 2155094512}
!3137 = !DILocation(line: 72, column: 1, scope: !3101)
!3138 = !{i64 2155094887, i64 2155094907, i64 2155094970}
!3139 = !DILocation(line: 97, column: 1, scope: !3101)
!3140 = !{i64 2155095194, i64 2155095214, i64 2155095277}
!3141 = !DILocation(line: 99, column: 1, scope: !3101)
!3142 = !{i64 2155095412, i64 2155095432, i64 2155095495}
!3143 = !DILocation(line: 102, column: 1, scope: !3101)
!3144 = !{i64 2155095669, i64 2155095689, i64 2155095752}
!3145 = !DILocation(line: 105, column: 1, scope: !3101)
!3146 = !{i64 2155095909, i64 2155095929, i64 2155095992}
!3147 = !DILocation(line: 115, column: 1, scope: !3101)
!3148 = !{i64 2155096248, i64 2155096268, i64 2155096331}
!3149 = !DILocation(line: 118, column: 1, scope: !3101)
!3150 = !{i64 2155096592, i64 2155096612, i64 2155096675}
!3151 = !DILocation(line: 32, column: 1, scope: !3152)
!3152 = !DILexicalBlockFile(scope: !3101, file: !3153, discriminator: 0)
!3153 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets_aarch32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3154 = !{i64 2155096948, i64 2155096968, i64 2155097031}
!3155 = !DILocation(line: 33, column: 1, scope: !3152)
!3156 = !{i64 2155097460, i64 2155097480, i64 2155097543}
!3157 = !DILocation(line: 53, column: 1, scope: !3152)
!3158 = !{i64 2155097968, i64 2155097988, i64 2155098051}
!3159 = !DILocation(line: 54, column: 1, scope: !3152)
!3160 = !{i64 2155102447, i64 2155102467, i64 2155102530}
!3161 = !DILocation(line: 55, column: 1, scope: !3152)
!3162 = !{i64 2155102865, i64 2155102885, i64 2155102948}
!3163 = !DILocation(line: 56, column: 1, scope: !3152)
!3164 = !{i64 2155103283, i64 2155103303, i64 2155103366}
!3165 = !DILocation(line: 57, column: 1, scope: !3152)
!3166 = !{i64 2155103701, i64 2155103721, i64 2155103784}
!3167 = !DILocation(line: 58, column: 1, scope: !3152)
!3168 = !{i64 2155104119, i64 2155104139, i64 2155104202}
!3169 = !DILocation(line: 59, column: 1, scope: !3152)
!3170 = !{i64 2155104537, i64 2155104557, i64 2155104620}
!3171 = !DILocation(line: 60, column: 1, scope: !3152)
!3172 = !{i64 2155104961, i64 2155104981, i64 2155105044}
!3173 = !DILocation(line: 61, column: 1, scope: !3152)
!3174 = !{i64 2155105278, i64 2155105298, i64 2155105361}
!3175 = !DILocation(line: 70, column: 1, scope: !3152)
!3176 = !{i64 2155105507, i64 2155105527, i64 2155105590}
!3177 = !DILocation(line: 72, column: 1, scope: !3152)
!3178 = !{i64 2155105839, i64 2155105859, i64 2155105922}
!3179 = !DILocation(line: 73, column: 1, scope: !3152)
!3180 = !{i64 2155106289, i64 2155106309, i64 2155106372}
!3181 = !DILocation(line: 74, column: 1, scope: !3152)
!3182 = !{i64 2155106739, i64 2155106759, i64 2155106822}
!3183 = !DILocation(line: 75, column: 1, scope: !3152)
!3184 = !{i64 2155107189, i64 2155107209, i64 2155107272}
!3185 = !DILocation(line: 76, column: 1, scope: !3152)
!3186 = !{i64 2155107639, i64 2155107659, i64 2155107722}
!3187 = !DILocation(line: 77, column: 1, scope: !3152)
!3188 = !{i64 2155108089, i64 2155108109, i64 2155108172}
!3189 = !DILocation(line: 78, column: 1, scope: !3152)
!3190 = !{i64 2155108539, i64 2155108559, i64 2155108622}
!3191 = !DILocation(line: 79, column: 1, scope: !3152)
!3192 = !{i64 2155108989, i64 2155109009, i64 2155109072}
!3193 = !DILocation(line: 80, column: 1, scope: !3152)
!3194 = !{i64 2155109442, i64 2155109462, i64 2155109525}
!3195 = !DILocation(line: 84, column: 1, scope: !3152)
!3196 = !{i64 2155109774, i64 2155109794, i64 2155109857}
!3197 = !DILocation(line: 106, column: 1, scope: !3152)
!3198 = !{i64 2155110024, i64 2155110044, i64 2155110107}
!3199 = !DILocation(line: 11, column: 1, scope: !3200)
!3200 = !DILexicalBlockFile(scope: !3101, file: !3201, discriminator: 0)
!3201 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3202 = distinct !DISubprogram(name: "metairq_fn", scope: !120, file: !120, line: 48, type: !250, scopeLine: 49, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3203)
!3203 = !{!3204, !3205, !3206, !3207, !3209}
!3204 = !DILocalVariable(name: "p1", arg: 1, scope: !3202, file: !120, line: 48, type: !104)
!3205 = !DILocalVariable(name: "p2", arg: 2, scope: !3202, file: !120, line: 48, type: !104)
!3206 = !DILocalVariable(name: "p3", arg: 3, scope: !3202, file: !120, line: 48, type: !104)
!3207 = !DILocalVariable(name: "m", scope: !3208, file: !120, line: 59, type: !297)
!3208 = distinct !DILexicalBlock(scope: !3202, file: !120, line: 54, column: 15)
!3209 = !DILocalVariable(name: "ret", scope: !3208, file: !120, line: 64, type: !105)
!3210 = !DILocation(line: 0, scope: !3202)
!3211 = !DILocation(line: 54, column: 2, scope: !3202)
!3212 = !DILocation(line: 59, column: 3, scope: !3208)
!3213 = !DILocation(line: 59, column: 14, scope: !3208)
!3214 = !DILocation(line: 61, column: 3, scope: !3208)
!3215 = !DILocation(line: 62, column: 23, scope: !3208)
!3216 = !DILocation(line: 62, column: 44, scope: !3208)
!3217 = !DILocation(line: 62, column: 40, scope: !3208)
!3218 = !DILocation(line: 62, column: 21, scope: !3208)
!3219 = !DILocation(line: 64, column: 35, scope: !3208)
!3220 = !DILocation(line: 64, column: 43, scope: !3208)
!3221 = !DILocation(line: 64, column: 13, scope: !3208)
!3222 = !DILocation(line: 0, scope: !3208)
!3223 = !DILocation(line: 66, column: 7, scope: !3224)
!3224 = distinct !DILexicalBlock(scope: !3208, file: !120, line: 66, column: 7)
!3225 = !DILocation(line: 66, column: 7, scope: !3208)
!3226 = !DILocation(line: 67, column: 4, scope: !3227)
!3227 = distinct !DILexicalBlock(scope: !3228, file: !120, line: 67, column: 4)
!3228 = distinct !DILexicalBlock(scope: !3229, file: !120, line: 67, column: 4)
!3229 = distinct !DILexicalBlock(scope: !3230, file: !120, line: 67, column: 4)
!3230 = distinct !DILexicalBlock(scope: !3231, file: !120, line: 67, column: 4)
!3231 = distinct !DILexicalBlock(scope: !3224, file: !120, line: 66, column: 12)
!3232 = !DILocation(line: 69, column: 3, scope: !3231)
!3233 = !DILocation(line: 70, column: 2, scope: !3202)
!3234 = distinct !{!3234, !3211, !3233}
!3235 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !122, file: !122, line: 1675, type: !389, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !391)
!3236 = !DILocation(line: 1677, column: 9, scope: !3235)
!3237 = !DILocation(line: 1677, column: 2, scope: !3235)
!3238 = distinct !DISubprogram(name: "k_msgq_put", scope: !3239, file: !3239, line: 1129, type: !3240, scopeLine: 1130, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3247)
!3239 = !DIFile(filename: "zephyr/include/generated/syscalls/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/metairq_dispatch")
!3240 = !DISubroutineType(types: !3241)
!3241 = !{!105, !3242, !13, !3243}
!3242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !283, size: 32)
!3243 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !108, line: 67, baseType: !3244)
!3244 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !108, line: 65, size: 64, elements: !3245)
!3245 = !{!3246}
!3246 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !3244, file: !108, line: 66, baseType: !107, size: 64)
!3247 = !{!3248, !3249, !3250}
!3248 = !DILocalVariable(name: "msgq", arg: 1, scope: !3238, file: !3239, line: 1129, type: !3242)
!3249 = !DILocalVariable(name: "data", arg: 2, scope: !3238, file: !3239, line: 1129, type: !13)
!3250 = !DILocalVariable(name: "timeout", arg: 3, scope: !3238, file: !3239, line: 1129, type: !3243)
!3251 = !DILocation(line: 0, scope: !3238)
!3252 = !DILocation(line: 1139, column: 2, scope: !3253)
!3253 = distinct !DILexicalBlock(scope: !3238, file: !3239, line: 1139, column: 2)
!3254 = !{i64 2151050804}
!3255 = !DILocation(line: 1140, column: 9, scope: !3238)
!3256 = !DILocation(line: 1140, column: 2, scope: !3238)
!3257 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !3258, file: !3258, line: 175, type: !3259, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3261)
!3258 = !DIFile(filename: "zephyr/include/zephyr/logging/log_core.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3259 = !DISubroutineType(types: !3260)
!3260 = !{!103, !105}
!3261 = !{!3262}
!3262 = !DILocalVariable(name: "level", arg: 1, scope: !3257, file: !3258, line: 175, type: !105)
!3263 = !DILocation(line: 0, scope: !3257)
!3264 = !DILocation(line: 177, column: 2, scope: !3257)
!3265 = !DILocation(line: 189, column: 1, scope: !3257)
!3266 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !3267, file: !3267, line: 24, type: !389, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !391)
!3267 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/misc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3268 = !DILocation(line: 26, column: 9, scope: !3266)
!3269 = !DILocation(line: 26, column: 2, scope: !3266)
!3270 = distinct !DISubprogram(name: "main", scope: !120, file: !120, line: 226, type: !260, scopeLine: 227, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3271)
!3271 = !{!3272, !3274}
!3272 = !DILocalVariable(name: "i", scope: !3273, file: !120, line: 228, type: !106)
!3273 = distinct !DILexicalBlock(scope: !3270, file: !120, line: 228, column: 2)
!3274 = !DILocalVariable(name: "prio", scope: !3275, file: !120, line: 235, type: !105)
!3275 = distinct !DILexicalBlock(scope: !3276, file: !120, line: 228, column: 41)
!3276 = distinct !DILexicalBlock(scope: !3273, file: !120, line: 228, column: 2)
!3277 = !DILocation(line: 0, scope: !3273)
!3278 = !DILocation(line: 228, column: 2, scope: !3273)
!3279 = !DILocation(line: 246, column: 2, scope: !3270)
!3280 = !DILocation(line: 247, column: 1, scope: !3270)
!3281 = !DILocation(line: 235, column: 31, scope: !3275)
!3282 = !DILocation(line: 0, scope: !3275)
!3283 = !DILocation(line: 237, column: 27, scope: !3275)
!3284 = !DILocation(line: 237, column: 41, scope: !3275)
!3285 = !DILocation(line: 237, column: 33, scope: !3275)
!3286 = !DILocation(line: 237, column: 3, scope: !3275)
!3287 = !DILocation(line: 240, column: 31, scope: !3275)
!3288 = !DILocation(line: 241, column: 5, scope: !3275)
!3289 = !DILocation(line: 242, column: 16, scope: !3275)
!3290 = !DILocation(line: 240, column: 3, scope: !3275)
!3291 = !DILocation(line: 228, column: 37, scope: !3276)
!3292 = !DILocation(line: 228, column: 21, scope: !3276)
!3293 = distinct !{!3293, !3278, !3294}
!3294 = !DILocation(line: 244, column: 2, scope: !3273)
!3295 = distinct !DISubprogram(name: "k_thread_create", scope: !3239, file: !3239, line: 24, type: !3296, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3298)
!3296 = !DISubroutineType(types: !3297)
!3297 = !{!268, !125, !239, !111, !248, !104, !104, !104, !105, !113, !3243}
!3298 = !{!3299, !3300, !3301, !3302, !3303, !3304, !3305, !3306, !3307, !3308}
!3299 = !DILocalVariable(name: "new_thread", arg: 1, scope: !3295, file: !3239, line: 24, type: !125)
!3300 = !DILocalVariable(name: "stack", arg: 2, scope: !3295, file: !3239, line: 24, type: !239)
!3301 = !DILocalVariable(name: "stack_size", arg: 3, scope: !3295, file: !3239, line: 24, type: !111)
!3302 = !DILocalVariable(name: "entry", arg: 4, scope: !3295, file: !3239, line: 24, type: !248)
!3303 = !DILocalVariable(name: "p1", arg: 5, scope: !3295, file: !3239, line: 24, type: !104)
!3304 = !DILocalVariable(name: "p2", arg: 6, scope: !3295, file: !3239, line: 24, type: !104)
!3305 = !DILocalVariable(name: "p3", arg: 7, scope: !3295, file: !3239, line: 24, type: !104)
!3306 = !DILocalVariable(name: "prio", arg: 8, scope: !3295, file: !3239, line: 24, type: !105)
!3307 = !DILocalVariable(name: "options", arg: 9, scope: !3295, file: !3239, line: 24, type: !113)
!3308 = !DILocalVariable(name: "delay", arg: 10, scope: !3295, file: !3239, line: 24, type: !3243)
!3309 = !DILocation(line: 0, scope: !3295)
!3310 = !DILocation(line: 49, column: 2, scope: !3311)
!3311 = distinct !DILexicalBlock(scope: !3295, file: !3239, line: 49, column: 2)
!3312 = !{i64 2151046416}
!3313 = !DILocation(line: 50, column: 9, scope: !3295)
!3314 = !DILocation(line: 50, column: 2, scope: !3295)
!3315 = distinct !DISubprogram(name: "thread_fn", scope: !120, file: !120, line: 177, type: !250, scopeLine: 178, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3316)
!3316 = !{!3317, !3318, !3319, !3320, !3321, !3322, !3324, !3325, !3329}
!3317 = !DILocalVariable(name: "p1", arg: 1, scope: !3315, file: !120, line: 177, type: !104)
!3318 = !DILocalVariable(name: "p2", arg: 2, scope: !3315, file: !120, line: 177, type: !104)
!3319 = !DILocalVariable(name: "p3", arg: 3, scope: !3315, file: !120, line: 177, type: !104)
!3320 = !DILocalVariable(name: "id", scope: !3315, file: !120, line: 181, type: !105)
!3321 = !DILocalVariable(name: "m", scope: !3315, file: !120, line: 182, type: !297)
!3322 = !DILocalVariable(name: "ret", scope: !3323, file: !120, line: 188, type: !105)
!3323 = distinct !DILexicalBlock(scope: !3315, file: !120, line: 187, column: 15)
!3324 = !DILocalVariable(name: "start", scope: !3323, file: !120, line: 189, type: !113)
!3325 = !DILocalVariable(name: "i", scope: !3326, file: !120, line: 202, type: !3328)
!3326 = distinct !DILexicalBlock(scope: !3327, file: !120, line: 202, column: 4)
!3327 = distinct !DILexicalBlock(scope: !3323, file: !120, line: 201, column: 49)
!3328 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !105)
!3329 = !DILocalVariable(name: "dur", scope: !3323, file: !120, line: 206, type: !113)
!3330 = !DILocation(line: 0, scope: !3315)
!3331 = !DILocation(line: 181, column: 11, scope: !3315)
!3332 = !DILocation(line: 182, column: 2, scope: !3315)
!3333 = !DILocation(line: 182, column: 13, scope: !3315)
!3334 = !DILocation(line: 184, column: 2, scope: !3335)
!3335 = distinct !DILexicalBlock(scope: !3336, file: !120, line: 184, column: 2)
!3336 = distinct !DILexicalBlock(scope: !3337, file: !120, line: 184, column: 2)
!3337 = distinct !DILexicalBlock(scope: !3338, file: !120, line: 184, column: 2)
!3338 = distinct !DILexicalBlock(scope: !3315, file: !120, line: 184, column: 2)
!3339 = !DILocation(line: 188, column: 13, scope: !3323)
!3340 = !DILocation(line: 0, scope: !3323)
!3341 = !DILocation(line: 189, column: 20, scope: !3323)
!3342 = !DILocation(line: 191, column: 3, scope: !3343)
!3343 = distinct !DILexicalBlock(scope: !3344, file: !120, line: 191, column: 3)
!3344 = distinct !DILexicalBlock(scope: !3323, file: !120, line: 191, column: 3)
!3345 = !DILocation(line: 191, column: 3, scope: !3344)
!3346 = !DILocation(line: 201, column: 10, scope: !3323)
!3347 = !DILocation(line: 201, column: 27, scope: !3323)
!3348 = !DILocation(line: 201, column: 39, scope: !3323)
!3349 = !DILocation(line: 201, column: 35, scope: !3323)
!3350 = !DILocation(line: 201, column: 3, scope: !3323)
!3351 = !DILocation(line: 191, column: 3, scope: !3352)
!3352 = distinct !DILexicalBlock(scope: !3343, file: !120, line: 191, column: 3)
!3353 = !DILocation(line: 202, column: 9, scope: !3326)
!3354 = !DILocation(line: 202, column: 22, scope: !3326)
!3355 = !DILocation(line: 202, column: 29, scope: !3356)
!3356 = distinct !DILexicalBlock(scope: !3326, file: !120, line: 202, column: 4)
!3357 = !DILocation(line: 202, column: 31, scope: !3356)
!3358 = !DILocation(line: 202, column: 4, scope: !3326)
!3359 = !DILocation(line: 202, column: 4, scope: !3356)
!3360 = distinct !{!3360, !3350, !3361}
!3361 = !DILocation(line: 204, column: 3, scope: !3323)
!3362 = !DILocation(line: 202, column: 39, scope: !3356)
!3363 = distinct !{!3363, !3358, !3364}
!3364 = !DILocation(line: 203, column: 4, scope: !3326)
!3365 = !DILocation(line: 206, column: 18, scope: !3323)
!3366 = !DILocation(line: 206, column: 35, scope: !3323)
!3367 = !DILocation(line: 216, column: 3, scope: !3368)
!3368 = distinct !DILexicalBlock(scope: !3369, file: !120, line: 216, column: 3)
!3369 = distinct !DILexicalBlock(scope: !3370, file: !120, line: 216, column: 3)
!3370 = distinct !DILexicalBlock(scope: !3371, file: !120, line: 216, column: 3)
!3371 = distinct !DILexicalBlock(scope: !3323, file: !120, line: 216, column: 3)
!3372 = !DILocation(line: 222, column: 34, scope: !3323)
!3373 = !DILocation(line: 222, column: 30, scope: !3323)
!3374 = !DILocation(line: 222, column: 3, scope: !3323)
!3375 = distinct !{!3375, !3376, !3377}
!3376 = !DILocation(line: 187, column: 2, scope: !3315)
!3377 = !DILocation(line: 223, column: 2, scope: !3315)
!3378 = distinct !DISubprogram(name: "k_current_get", scope: !122, file: !122, line: 530, type: !3379, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !391)
!3379 = !DISubroutineType(types: !3380)
!3380 = !{!268}
!3381 = !DILocation(line: 535, column: 9, scope: !3378)
!3382 = !DILocation(line: 535, column: 2, scope: !3378)
!3383 = distinct !DISubprogram(name: "k_thread_priority_get", scope: !3239, file: !3239, line: 258, type: !3384, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3386)
!3384 = !DISubroutineType(types: !3385)
!3385 = !{!105, !268}
!3386 = !{!3387}
!3387 = !DILocalVariable(name: "thread", arg: 1, scope: !3383, file: !3239, line: 258, type: !268)
!3388 = !DILocation(line: 0, scope: !3383)
!3389 = !DILocation(line: 266, column: 2, scope: !3390)
!3390 = distinct !DILexicalBlock(scope: !3383, file: !3239, line: 266, column: 2)
!3391 = !{i64 2151047300}
!3392 = !DILocation(line: 267, column: 9, scope: !3383)
!3393 = !DILocation(line: 267, column: 2, scope: !3383)
!3394 = distinct !DISubprogram(name: "k_msgq_get", scope: !3239, file: !3239, line: 1147, type: !3395, scopeLine: 1148, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3397)
!3395 = !DISubroutineType(types: !3396)
!3396 = !{!105, !3242, !104, !3243}
!3397 = !{!3398, !3399, !3400}
!3398 = !DILocalVariable(name: "msgq", arg: 1, scope: !3394, file: !3239, line: 1147, type: !3242)
!3399 = !DILocalVariable(name: "data", arg: 2, scope: !3394, file: !3239, line: 1147, type: !104)
!3400 = !DILocalVariable(name: "timeout", arg: 3, scope: !3394, file: !3239, line: 1147, type: !3243)
!3401 = !DILocation(line: 0, scope: !3394)
!3402 = !DILocation(line: 1157, column: 2, scope: !3403)
!3403 = distinct !DILexicalBlock(scope: !3394, file: !3239, line: 1157, column: 2)
!3404 = !{i64 2151050872}
!3405 = !DILocation(line: 1158, column: 9, scope: !3394)
!3406 = !DILocation(line: 1158, column: 2, scope: !3394)
!3407 = distinct !DISubprogram(name: "record_latencies", scope: !120, file: !120, line: 111, type: !3408, scopeLine: 112, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3411)
!3408 = !DISubroutineType(types: !3409)
!3409 = !{null, !3410, !113}
!3410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !297, size: 32)
!3411 = !{!3412, !3413, !3414, !3415, !3416, !3419, !3420, !3421, !3422, !3423}
!3412 = !DILocalVariable(name: "m", arg: 1, scope: !3407, file: !120, line: 111, type: !3410)
!3413 = !DILocalVariable(name: "latency", arg: 2, scope: !3407, file: !120, line: 111, type: !113)
!3414 = !DILocalVariable(name: "t", scope: !3407, file: !120, line: 129, type: !105)
!3415 = !DILocalVariable(name: "lidx", scope: !3407, file: !120, line: 130, type: !105)
!3416 = !DILocalVariable(name: "hi", scope: !3417, file: !120, line: 145, type: !113)
!3417 = distinct !DILexicalBlock(scope: !3418, file: !120, line: 144, column: 32)
!3418 = distinct !DILexicalBlock(scope: !3407, file: !120, line: 144, column: 6)
!3419 = !DILocalVariable(name: "lo", scope: !3417, file: !120, line: 145, type: !113)
!3420 = !DILocalVariable(name: "mean", scope: !3417, file: !120, line: 145, type: !113)
!3421 = !DILocalVariable(name: "stdev", scope: !3417, file: !120, line: 145, type: !113)
!3422 = !DILocalVariable(name: "ret", scope: !3417, file: !120, line: 145, type: !113)
!3423 = !DILocalVariable(name: "i", scope: !3424, file: !120, line: 159, type: !105)
!3424 = distinct !DILexicalBlock(scope: !3417, file: !120, line: 159, column: 3)
!3425 = !DILocation(line: 0, scope: !3407)
!3426 = !DILocation(line: 125, column: 9, scope: !3427)
!3427 = distinct !DILexicalBlock(scope: !3407, file: !120, line: 125, column: 6)
!3428 = !DILocation(line: 125, column: 13, scope: !3427)
!3429 = !DILocation(line: 125, column: 6, scope: !3407)
!3430 = !DILocation(line: 129, column: 13, scope: !3407)
!3431 = !DILocation(line: 130, column: 30, scope: !3407)
!3432 = !DILocation(line: 130, column: 34, scope: !3407)
!3433 = !DILocation(line: 132, column: 11, scope: !3434)
!3434 = distinct !DILexicalBlock(scope: !3407, file: !120, line: 132, column: 6)
!3435 = !DILocation(line: 132, column: 6, scope: !3407)
!3436 = !DILocation(line: 133, column: 3, scope: !3437)
!3437 = distinct !DILexicalBlock(scope: !3434, file: !120, line: 132, column: 53)
!3438 = !DILocation(line: 133, column: 36, scope: !3437)
!3439 = !DILocation(line: 134, column: 2, scope: !3437)
!3440 = !DILocation(line: 136, column: 57, scope: !3407)
!3441 = !DILocation(line: 136, column: 23, scope: !3407)
!3442 = !DILocation(line: 136, column: 2, scope: !3407)
!3443 = !DILocation(line: 136, column: 52, scope: !3407)
!3444 = !DILocation(line: 144, column: 9, scope: !3418)
!3445 = !DILocation(line: 144, column: 13, scope: !3418)
!3446 = !DILocation(line: 144, column: 6, scope: !3407)
!3447 = !DILocation(line: 145, column: 3, scope: !3417)
!3448 = !DILocation(line: 147, column: 9, scope: !3417)
!3449 = !DILocation(line: 0, scope: !3417)
!3450 = !DILocation(line: 148, column: 3, scope: !3451)
!3451 = distinct !DILexicalBlock(scope: !3452, file: !120, line: 148, column: 3)
!3452 = distinct !DILexicalBlock(scope: !3417, file: !120, line: 148, column: 3)
!3453 = !DILocation(line: 148, column: 3, scope: !3452)
!3454 = !DILocation(line: 148, column: 3, scope: !3455)
!3455 = distinct !DILexicalBlock(scope: !3451, file: !120, line: 148, column: 3)
!3456 = !DILocation(line: 149, column: 3, scope: !3417)
!3457 = !DILocation(line: 151, column: 42, scope: !3417)
!3458 = !DILocation(line: 151, column: 3, scope: !3417)
!3459 = !DILocation(line: 154, column: 3, scope: !3460)
!3460 = distinct !DILexicalBlock(scope: !3461, file: !120, line: 154, column: 3)
!3461 = distinct !DILexicalBlock(scope: !3462, file: !120, line: 154, column: 3)
!3462 = distinct !DILexicalBlock(scope: !3463, file: !120, line: 154, column: 3)
!3463 = distinct !DILexicalBlock(scope: !3417, file: !120, line: 154, column: 3)
!3464 = !DILocation(line: 155, column: 3, scope: !3465)
!3465 = distinct !DILexicalBlock(scope: !3466, file: !120, line: 155, column: 3)
!3466 = distinct !DILexicalBlock(scope: !3467, file: !120, line: 155, column: 3)
!3467 = distinct !DILexicalBlock(scope: !3468, file: !120, line: 155, column: 3)
!3468 = distinct !DILexicalBlock(scope: !3417, file: !120, line: 155, column: 3)
!3469 = !DILocation(line: 156, column: 3, scope: !3470)
!3470 = distinct !DILexicalBlock(scope: !3471, file: !120, line: 156, column: 3)
!3471 = distinct !DILexicalBlock(scope: !3472, file: !120, line: 156, column: 3)
!3472 = distinct !DILexicalBlock(scope: !3473, file: !120, line: 156, column: 3)
!3473 = distinct !DILexicalBlock(scope: !3417, file: !120, line: 156, column: 3)
!3474 = !DILocation(line: 0, scope: !3424)
!3475 = !DILocation(line: 159, column: 3, scope: !3424)
!3476 = !DILocation(line: 173, column: 3, scope: !3477)
!3477 = distinct !DILexicalBlock(scope: !3478, file: !120, line: 173, column: 3)
!3478 = distinct !DILexicalBlock(scope: !3479, file: !120, line: 173, column: 3)
!3479 = distinct !DILexicalBlock(scope: !3480, file: !120, line: 173, column: 3)
!3480 = distinct !DILexicalBlock(scope: !3417, file: !120, line: 173, column: 3)
!3481 = !DILocation(line: 174, column: 2, scope: !3418)
!3482 = !DILocation(line: 174, column: 2, scope: !3417)
!3483 = !DILocation(line: 160, column: 25, scope: !3484)
!3484 = distinct !DILexicalBlock(scope: !3485, file: !120, line: 160, column: 8)
!3485 = distinct !DILexicalBlock(scope: !3486, file: !120, line: 159, column: 41)
!3486 = distinct !DILexicalBlock(scope: !3424, file: !120, line: 159, column: 3)
!3487 = !DILocation(line: 160, column: 30, scope: !3484)
!3488 = !DILocation(line: 160, column: 8, scope: !3485)
!3489 = !DILocation(line: 161, column: 5, scope: !3490)
!3490 = distinct !DILexicalBlock(scope: !3491, file: !120, line: 161, column: 5)
!3491 = distinct !DILexicalBlock(scope: !3492, file: !120, line: 161, column: 5)
!3492 = distinct !DILexicalBlock(scope: !3493, file: !120, line: 161, column: 5)
!3493 = distinct !DILexicalBlock(scope: !3494, file: !120, line: 161, column: 5)
!3494 = distinct !DILexicalBlock(scope: !3484, file: !120, line: 160, column: 36)
!3495 = !DILocation(line: 162, column: 5, scope: !3494)
!3496 = !DILocation(line: 165, column: 15, scope: !3485)
!3497 = !DILocation(line: 165, column: 4, scope: !3485)
!3498 = !DILocation(line: 169, column: 4, scope: !3499)
!3499 = distinct !DILexicalBlock(scope: !3500, file: !120, line: 169, column: 4)
!3500 = distinct !DILexicalBlock(scope: !3501, file: !120, line: 169, column: 4)
!3501 = distinct !DILexicalBlock(scope: !3502, file: !120, line: 169, column: 4)
!3502 = distinct !DILexicalBlock(scope: !3485, file: !120, line: 169, column: 4)
!3503 = !DILocation(line: 171, column: 3, scope: !3485)
!3504 = !DILocation(line: 159, column: 37, scope: !3486)
!3505 = !DILocation(line: 159, column: 21, scope: !3486)
!3506 = distinct !{!3506, !3475, !3507}
!3507 = !DILocation(line: 171, column: 3, scope: !3424)
!3508 = !DILocation(line: 175, column: 1, scope: !3407)
!3509 = distinct !DISubprogram(name: "atomic_inc", scope: !3510, file: !3510, line: 123, type: !3511, scopeLine: 124, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3515)
!3510 = !DIFile(filename: "zephyr/include/zephyr/sys/atomic_builtin.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3511 = !DISubroutineType(types: !3512)
!3512 = !{!3513, !3514}
!3513 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_val_t", file: !326, line: 23, baseType: !325)
!3514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !325, size: 32)
!3515 = !{!3516}
!3516 = !DILocalVariable(name: "target", arg: 1, scope: !3509, file: !3510, line: 123, type: !3514)
!3517 = !DILocation(line: 0, scope: !3509)
!3518 = !DILocation(line: 125, column: 9, scope: !3509)
!3519 = !DILocation(line: 125, column: 2, scope: !3509)
!3520 = distinct !DISubprogram(name: "k_sem_take", scope: !3239, file: !3239, line: 1044, type: !3521, scopeLine: 1045, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3524)
!3521 = !DISubroutineType(types: !3522)
!3522 = !{!105, !3523, !3243}
!3523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !271, size: 32)
!3524 = !{!3525, !3526}
!3525 = !DILocalVariable(name: "sem", arg: 1, scope: !3520, file: !3239, line: 1044, type: !3523)
!3526 = !DILocalVariable(name: "timeout", arg: 2, scope: !3520, file: !3239, line: 1044, type: !3243)
!3527 = !DILocation(line: 0, scope: !3520)
!3528 = !DILocation(line: 1053, column: 2, scope: !3529)
!3529 = distinct !DILexicalBlock(scope: !3520, file: !3239, line: 1053, column: 2)
!3530 = !{i64 2151050464}
!3531 = !DILocation(line: 1054, column: 9, scope: !3520)
!3532 = !DILocation(line: 1054, column: 2, scope: !3520)
!3533 = distinct !DISubprogram(name: "k_msleep", scope: !122, file: !122, line: 439, type: !3534, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3536)
!3534 = !DISubroutineType(types: !3535)
!3535 = !{!116, !116}
!3536 = !{!3537}
!3537 = !DILocalVariable(name: "ms", arg: 1, scope: !3533, file: !122, line: 439, type: !116)
!3538 = !DILocation(line: 0, scope: !3533)
!3539 = !DILocation(line: 441, column: 9, scope: !3533)
!3540 = !DILocation(line: 441, column: 2, scope: !3533)
!3541 = distinct !DISubprogram(name: "calc_stats", scope: !120, file: !120, line: 87, type: !3542, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3546)
!3542 = !DISubroutineType(types: !3543)
!3543 = !{null, !3544, !113, !1417, !1417, !1417, !1417}
!3544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3545, size: 32)
!3545 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !113)
!3546 = !{!3547, !3548, !3549, !3550, !3551, !3552, !3553, !3554, !3555, !3557, !3559}
!3547 = !DILocalVariable(name: "array", arg: 1, scope: !3541, file: !120, line: 87, type: !3544)
!3548 = !DILocalVariable(name: "n", arg: 2, scope: !3541, file: !120, line: 87, type: !113)
!3549 = !DILocalVariable(name: "lo", arg: 3, scope: !3541, file: !120, line: 88, type: !1417)
!3550 = !DILocalVariable(name: "hi", arg: 4, scope: !3541, file: !120, line: 88, type: !1417)
!3551 = !DILocalVariable(name: "mean", arg: 5, scope: !3541, file: !120, line: 88, type: !1417)
!3552 = !DILocalVariable(name: "stdev", arg: 6, scope: !3541, file: !120, line: 88, type: !1417)
!3553 = !DILocalVariable(name: "tot", scope: !3541, file: !120, line: 90, type: !114)
!3554 = !DILocalVariable(name: "totsq", scope: !3541, file: !120, line: 90, type: !114)
!3555 = !DILocalVariable(name: "i", scope: !3556, file: !120, line: 94, type: !105)
!3556 = distinct !DILexicalBlock(scope: !3541, file: !120, line: 94, column: 2)
!3557 = !DILocalVariable(name: "i", scope: !3558, file: !120, line: 102, type: !105)
!3558 = distinct !DILexicalBlock(scope: !3541, file: !120, line: 102, column: 2)
!3559 = !DILocalVariable(name: "d", scope: !3560, file: !120, line: 103, type: !109)
!3560 = distinct !DILexicalBlock(scope: !3561, file: !120, line: 102, column: 30)
!3561 = distinct !DILexicalBlock(scope: !3558, file: !120, line: 102, column: 2)
!3562 = !DILocation(line: 0, scope: !3541)
!3563 = !DILocation(line: 92, column: 6, scope: !3541)
!3564 = !DILocation(line: 93, column: 6, scope: !3541)
!3565 = !DILocation(line: 0, scope: !3556)
!3566 = !DILocation(line: 94, column: 20, scope: !3567)
!3567 = distinct !DILexicalBlock(scope: !3556, file: !120, line: 94, column: 2)
!3568 = !DILocation(line: 94, column: 2, scope: !3556)
!3569 = !DILocation(line: 100, column: 31, scope: !3541)
!3570 = !DILocation(line: 100, column: 37, scope: !3541)
!3571 = !DILocation(line: 100, column: 10, scope: !3541)
!3572 = !DILocation(line: 100, column: 8, scope: !3541)
!3573 = !DILocation(line: 0, scope: !3558)
!3574 = !DILocation(line: 102, column: 2, scope: !3558)
!3575 = !DILocation(line: 100, column: 28, scope: !3541)
!3576 = !DILocation(line: 100, column: 26, scope: !3541)
!3577 = !DILocation(line: 100, column: 39, scope: !3541)
!3578 = !DILocation(line: 95, column: 9, scope: !3579)
!3579 = distinct !DILexicalBlock(scope: !3567, file: !120, line: 94, column: 30)
!3580 = !DILocation(line: 95, column: 7, scope: !3579)
!3581 = !DILocation(line: 96, column: 9, scope: !3579)
!3582 = !DILocation(line: 96, column: 7, scope: !3579)
!3583 = !DILocation(line: 97, column: 10, scope: !3579)
!3584 = !DILocation(line: 97, column: 7, scope: !3579)
!3585 = !DILocation(line: 94, column: 26, scope: !3567)
!3586 = distinct !{!3586, !3568, !3587}
!3587 = !DILocation(line: 98, column: 2, scope: !3556)
!3588 = !DILocation(line: 108, column: 24, scope: !3541)
!3589 = !DILocation(line: 108, column: 35, scope: !3541)
!3590 = !DILocation(line: 108, column: 11, scope: !3541)
!3591 = !DILocation(line: 108, column: 9, scope: !3541)
!3592 = !DILocation(line: 109, column: 1, scope: !3541)
!3593 = !DILocation(line: 103, column: 26, scope: !3560)
!3594 = !DILocation(line: 103, column: 35, scope: !3560)
!3595 = !DILocation(line: 103, column: 15, scope: !3560)
!3596 = !DILocation(line: 0, scope: !3560)
!3597 = !DILocation(line: 105, column: 14, scope: !3560)
!3598 = !DILocation(line: 105, column: 9, scope: !3560)
!3599 = !DILocation(line: 102, column: 26, scope: !3561)
!3600 = !DILocation(line: 102, column: 20, scope: !3561)
!3601 = distinct !{!3601, !3574, !3602}
!3602 = !DILocation(line: 106, column: 2, scope: !3558)
!3603 = distinct !DISubprogram(name: "isqrt", scope: !120, file: !120, line: 76, type: !3604, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3606)
!3604 = !DISubroutineType(types: !3605)
!3605 = !{!113, !114}
!3606 = !{!3607, !3608, !3611}
!3607 = !DILocalVariable(name: "n", arg: 1, scope: !3603, file: !120, line: 76, type: !114)
!3608 = !DILocalVariable(name: "lo", scope: !3609, file: !120, line: 79, type: !114)
!3609 = distinct !DILexicalBlock(scope: !3610, file: !120, line: 78, column: 13)
!3610 = distinct !DILexicalBlock(scope: !3603, file: !120, line: 78, column: 6)
!3611 = !DILocalVariable(name: "hi", scope: !3609, file: !120, line: 80, type: !114)
!3612 = !DILocation(line: 0, scope: !3603)
!3613 = !DILocation(line: 78, column: 8, scope: !3610)
!3614 = !DILocation(line: 78, column: 6, scope: !3603)
!3615 = !DILocation(line: 85, column: 1, scope: !3603)
!3616 = !DILocation(line: 79, column: 25, scope: !3609)
!3617 = !DILocation(line: 79, column: 17, scope: !3609)
!3618 = !DILocation(line: 79, column: 31, scope: !3609)
!3619 = !DILocation(line: 0, scope: !3609)
!3620 = !DILocation(line: 80, column: 20, scope: !3609)
!3621 = !DILocation(line: 82, column: 26, scope: !3609)
!3622 = !DILocation(line: 82, column: 32, scope: !3609)
!3623 = !DILocation(line: 82, column: 21, scope: !3609)
!3624 = distinct !DISubprogram(name: "k_sleep", scope: !3239, file: !3239, line: 91, type: !3625, scopeLine: 92, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3627)
!3625 = !DISubroutineType(types: !3626)
!3626 = !{!116, !3243}
!3627 = !{!3628}
!3628 = !DILocalVariable(name: "timeout", arg: 1, scope: !3624, file: !3239, line: 91, type: !3243)
!3629 = !DILocation(line: 0, scope: !3624)
!3630 = !DILocation(line: 99, column: 2, scope: !3631)
!3631 = distinct !DILexicalBlock(scope: !3624, file: !3239, line: 99, column: 2)
!3632 = !{i64 2151046620}
!3633 = !DILocation(line: 100, column: 9, scope: !3624)
!3634 = !DILocation(line: 100, column: 2, scope: !3624)
!3635 = distinct !DISubprogram(name: "atomic_add", scope: !3510, file: !3510, line: 86, type: !3636, scopeLine: 87, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3638)
!3636 = !DISubroutineType(types: !3637)
!3637 = !{!3513, !3514, !3513}
!3638 = !{!3639, !3640}
!3639 = !DILocalVariable(name: "target", arg: 1, scope: !3635, file: !3510, line: 86, type: !3514)
!3640 = !DILocalVariable(name: "value", arg: 2, scope: !3635, file: !3510, line: 86, type: !3513)
!3641 = !DILocation(line: 0, scope: !3635)
!3642 = !DILocation(line: 88, column: 9, scope: !3635)
!3643 = !DILocation(line: 88, column: 2, scope: !3635)
!3644 = distinct !DISubprogram(name: "z_current_get", scope: !3239, file: !3239, line: 173, type: !3379, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !391)
!3645 = !DILocation(line: 180, column: 2, scope: !3646)
!3646 = distinct !DILexicalBlock(scope: !3644, file: !3239, line: 180, column: 2)
!3647 = !{i64 2151046960}
!3648 = !DILocation(line: 181, column: 9, scope: !3644)
!3649 = !DILocation(line: 181, column: 2, scope: !3644)
!3650 = distinct !DISubprogram(name: "message_dev_init", scope: !354, file: !354, line: 83, type: !260, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !348, retainedNodes: !3651)
!3651 = !{!3652, !3653, !3654}
!3652 = !DILocalVariable(name: "cyc_per_tick", scope: !3650, file: !354, line: 90, type: !114)
!3653 = !DILocalVariable(name: "avg_ticks_per_event", scope: !3650, file: !354, line: 91, type: !114)
!3654 = !DILocalVariable(name: "avg_cyc_per_event", scope: !3650, file: !354, line: 92, type: !114)
!3655 = !DILocation(line: 0, scope: !3650)
!3656 = !DILocation(line: 94, column: 15, scope: !3650)
!3657 = !DILocation(line: 96, column: 2, scope: !3650)
!3658 = !DILocation(line: 97, column: 1, scope: !3650)
!3659 = distinct !DISubprogram(name: "dev_timer_expired", scope: !354, file: !354, line: 54, type: !375, scopeLine: 55, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !348, retainedNodes: !3660)
!3660 = !{!3661, !3662, !3663, !3671}
!3661 = !DILocalVariable(name: "t", arg: 1, scope: !3659, file: !354, line: 54, type: !377)
!3662 = !DILocalVariable(name: "timestamp", scope: !3659, file: !354, line: 57, type: !113)
!3663 = !DILocalVariable(name: "m", scope: !3659, file: !354, line: 58, type: !3664)
!3664 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "msg", file: !298, line: 44, size: 160, elements: !3665)
!3665 = !{!3666, !3667, !3668, !3669, !3670}
!3666 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !3664, file: !298, line: 46, baseType: !113, size: 32)
!3667 = !DIDerivedType(tag: DW_TAG_member, name: "timestamp", scope: !3664, file: !298, line: 49, baseType: !113, size: 32, offset: 32)
!3668 = !DIDerivedType(tag: DW_TAG_member, name: "target", scope: !3664, file: !298, line: 52, baseType: !113, size: 32, offset: 64)
!3669 = !DIDerivedType(tag: DW_TAG_member, name: "proc_cyc", scope: !3664, file: !298, line: 55, baseType: !113, size: 32, offset: 96)
!3670 = !DIDerivedType(tag: DW_TAG_member, name: "metairq_latency", scope: !3664, file: !298, line: 58, baseType: !113, size: 32, offset: 128)
!3671 = !DILocalVariable(name: "ret", scope: !3659, file: !354, line: 65, type: !105)
!3672 = !DILocation(line: 0, scope: !3659)
!3673 = !DILocation(line: 56, column: 2, scope: !3674)
!3674 = distinct !DILexicalBlock(scope: !3675, file: !354, line: 56, column: 2)
!3675 = distinct !DILexicalBlock(scope: !3659, file: !354, line: 56, column: 2)
!3676 = !DILocation(line: 56, column: 2, scope: !3675)
!3677 = !DILocation(line: 56, column: 2, scope: !3678)
!3678 = distinct !DILexicalBlock(scope: !3674, file: !354, line: 56, column: 2)
!3679 = !DILocation(line: 57, column: 23, scope: !3659)
!3680 = !DILocation(line: 58, column: 2, scope: !3659)
!3681 = !DILocation(line: 58, column: 13, scope: !3659)
!3682 = !DILocation(line: 60, column: 17, scope: !3659)
!3683 = !DILocation(line: 60, column: 4, scope: !3659)
!3684 = !DILocation(line: 60, column: 8, scope: !3659)
!3685 = !DILocation(line: 61, column: 4, scope: !3659)
!3686 = !DILocation(line: 61, column: 14, scope: !3659)
!3687 = !DILocation(line: 62, column: 13, scope: !3659)
!3688 = !DILocation(line: 62, column: 22, scope: !3659)
!3689 = !DILocation(line: 62, column: 4, scope: !3659)
!3690 = !DILocation(line: 62, column: 11, scope: !3659)
!3691 = !DILocation(line: 63, column: 15, scope: !3659)
!3692 = !DILocation(line: 63, column: 26, scope: !3659)
!3693 = !DILocation(line: 63, column: 24, scope: !3659)
!3694 = !DILocation(line: 63, column: 4, scope: !3659)
!3695 = !DILocation(line: 63, column: 13, scope: !3659)
!3696 = !DILocation(line: 65, column: 12, scope: !3659)
!3697 = !DILocation(line: 67, column: 10, scope: !3698)
!3698 = distinct !DILexicalBlock(scope: !3659, file: !354, line: 67, column: 6)
!3699 = !DILocation(line: 67, column: 6, scope: !3659)
!3700 = !DILocation(line: 68, column: 3, scope: !3701)
!3701 = distinct !DILexicalBlock(scope: !3698, file: !354, line: 67, column: 16)
!3702 = !DILocation(line: 69, column: 2, scope: !3701)
!3703 = !DILocation(line: 71, column: 8, scope: !3704)
!3704 = distinct !DILexicalBlock(scope: !3659, file: !354, line: 71, column: 6)
!3705 = !DILocation(line: 71, column: 12, scope: !3704)
!3706 = !DILocation(line: 71, column: 6, scope: !3659)
!3707 = !DILocation(line: 72, column: 3, scope: !3708)
!3708 = distinct !DILexicalBlock(scope: !3704, file: !354, line: 71, column: 26)
!3709 = !DILocation(line: 73, column: 2, scope: !3708)
!3710 = !DILocation(line: 74, column: 1, scope: !3659)
!3711 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !122, file: !122, line: 1675, type: !389, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !348, retainedNodes: !391)
!3712 = !DILocation(line: 1677, column: 9, scope: !3711)
!3713 = !DILocation(line: 1677, column: 2, scope: !3711)
!3714 = !DILocation(line: 40, column: 7, scope: !3715)
!3715 = distinct !DILexicalBlock(scope: !388, file: !354, line: 40, column: 6)
!3716 = !DILocation(line: 40, column: 6, scope: !388)
!3717 = !DILocation(line: 41, column: 22, scope: !3718)
!3718 = distinct !DILexicalBlock(scope: !3715, file: !354, line: 40, column: 14)
!3719 = !DILocation(line: 41, column: 12, scope: !3718)
!3720 = !DILocation(line: 41, column: 40, scope: !3718)
!3721 = !DILocation(line: 42, column: 2, scope: !3718)
!3722 = !DILocation(line: 45, column: 10, scope: !388)
!3723 = !DILocation(line: 45, column: 16, scope: !388)
!3724 = !DILocation(line: 45, column: 41, scope: !388)
!3725 = !DILocation(line: 45, column: 8, scope: !388)
!3726 = !DILocation(line: 46, column: 26, scope: !388)
!3727 = !DILocation(line: 46, column: 9, scope: !388)
!3728 = !DILocation(line: 46, column: 2, scope: !388)
!3729 = distinct !DISubprogram(name: "k_msgq_put", scope: !3239, file: !3239, line: 1129, type: !3730, scopeLine: 1130, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !348, retainedNodes: !3737)
!3730 = !DISubroutineType(types: !3731)
!3731 = !{!105, !3732, !13, !3733}
!3732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !392, size: 32)
!3733 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !108, line: 67, baseType: !3734)
!3734 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !108, line: 65, size: 64, elements: !3735)
!3735 = !{!3736}
!3736 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !3734, file: !108, line: 66, baseType: !107, size: 64)
!3737 = !{!3738, !3739, !3740}
!3738 = !DILocalVariable(name: "msgq", arg: 1, scope: !3729, file: !3239, line: 1129, type: !3732)
!3739 = !DILocalVariable(name: "data", arg: 2, scope: !3729, file: !3239, line: 1129, type: !13)
!3740 = !DILocalVariable(name: "timeout", arg: 3, scope: !3729, file: !3239, line: 1129, type: !3733)
!3741 = !DILocation(line: 0, scope: !3729)
!3742 = !DILocation(line: 1139, column: 2, scope: !3743)
!3743 = distinct !DILexicalBlock(scope: !3729, file: !3239, line: 1139, column: 2)
!3744 = !{i64 2151049067}
!3745 = !DILocation(line: 1140, column: 9, scope: !3729)
!3746 = !DILocation(line: 1140, column: 2, scope: !3729)
!3747 = distinct !DISubprogram(name: "timeout_reset", scope: !354, file: !354, line: 76, type: !260, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !348, retainedNodes: !3748)
!3748 = !{!3749}
!3749 = !DILocalVariable(name: "ticks", scope: !3747, file: !354, line: 78, type: !113)
!3750 = !DILocation(line: 78, column: 19, scope: !3747)
!3751 = !DILocation(line: 78, column: 28, scope: !3747)
!3752 = !DILocation(line: 0, scope: !3747)
!3753 = !DILocation(line: 80, column: 45, scope: !3747)
!3754 = !DILocation(line: 80, column: 2, scope: !3747)
!3755 = !DILocation(line: 81, column: 1, scope: !3747)
!3756 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !3267, file: !3267, line: 24, type: !389, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !348, retainedNodes: !391)
!3757 = !DILocation(line: 26, column: 9, scope: !3756)
!3758 = !DILocation(line: 26, column: 2, scope: !3756)
!3759 = distinct !DISubprogram(name: "message_dev_fetch", scope: !354, file: !354, line: 99, type: !3760, scopeLine: 100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !348, retainedNodes: !3763)
!3760 = !DISubroutineType(types: !3761)
!3761 = !{null, !3762}
!3762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3664, size: 32)
!3763 = !{!3764, !3765}
!3764 = !DILocalVariable(name: "m", arg: 1, scope: !3759, file: !354, line: 99, type: !3762)
!3765 = !DILocalVariable(name: "ret", scope: !3759, file: !354, line: 101, type: !105)
!3766 = !DILocation(line: 0, scope: !3759)
!3767 = !DILocation(line: 101, column: 33, scope: !3759)
!3768 = !DILocation(line: 101, column: 12, scope: !3759)
!3769 = !DILocation(line: 103, column: 2, scope: !3770)
!3770 = distinct !DILexicalBlock(scope: !3771, file: !354, line: 103, column: 2)
!3771 = distinct !DILexicalBlock(scope: !3759, file: !354, line: 103, column: 2)
!3772 = !DILocation(line: 103, column: 2, scope: !3771)
!3773 = !DILocation(line: 103, column: 2, scope: !3774)
!3774 = distinct !DILexicalBlock(scope: !3770, file: !354, line: 103, column: 2)
!3775 = !DILocation(line: 104, column: 1, scope: !3759)
!3776 = distinct !DISubprogram(name: "k_msgq_get", scope: !3239, file: !3239, line: 1147, type: !3777, scopeLine: 1148, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !348, retainedNodes: !3779)
!3777 = !DISubroutineType(types: !3778)
!3778 = !{!105, !3732, !104, !3733}
!3779 = !{!3780, !3781, !3782}
!3780 = !DILocalVariable(name: "msgq", arg: 1, scope: !3776, file: !3239, line: 1147, type: !3732)
!3781 = !DILocalVariable(name: "data", arg: 2, scope: !3776, file: !3239, line: 1147, type: !104)
!3782 = !DILocalVariable(name: "timeout", arg: 3, scope: !3776, file: !3239, line: 1147, type: !3733)
!3783 = !DILocation(line: 0, scope: !3776)
!3784 = !DILocation(line: 1157, column: 2, scope: !3785)
!3785 = distinct !DILexicalBlock(scope: !3776, file: !3239, line: 1157, column: 2)
!3786 = !{i64 2151049135}
!3787 = !DILocation(line: 1158, column: 9, scope: !3776)
!3788 = !DILocation(line: 1158, column: 2, scope: !3776)
!3789 = distinct !DISubprogram(name: "cbvprintf_package", scope: !428, file: !428, line: 233, type: !3790, scopeLine: 235, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !414, retainedNodes: !3799)
!3790 = !DISubroutineType(types: !3791)
!3791 = !{!105, !104, !111, !113, !263, !3792}
!3792 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3793, line: 99, baseType: !3794)
!3793 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stdarg.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3794 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3793, line: 40, baseType: !3795)
!3795 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !428, baseType: !3796)
!3796 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !3797)
!3797 = !{!3798}
!3798 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !3796, file: !428, line: 18, baseType: !104, size: 32)
!3799 = !{!3800, !3801, !3802, !3803, !3804, !3805, !3806, !3807, !3808, !3809, !3811, !3812, !3813, !3814, !3815, !3816, !3817, !3818, !3819, !3820, !3821, !3822, !3835, !3844, !3847, !3848, !3851, !3854, !3857, !3860, !3866}
!3800 = !DILocalVariable(name: "packaged", arg: 1, scope: !3789, file: !428, line: 233, type: !104)
!3801 = !DILocalVariable(name: "len", arg: 2, scope: !3789, file: !428, line: 233, type: !111)
!3802 = !DILocalVariable(name: "flags", arg: 3, scope: !3789, file: !428, line: 233, type: !113)
!3803 = !DILocalVariable(name: "fmt", arg: 4, scope: !3789, file: !428, line: 234, type: !263)
!3804 = !DILocalVariable(name: "ap", arg: 5, scope: !3789, file: !428, line: 234, type: !3792)
!3805 = !DILocalVariable(name: "buf0", scope: !3789, file: !428, line: 247, type: !426)
!3806 = !DILocalVariable(name: "buf", scope: !3789, file: !428, line: 248, type: !426)
!3807 = !DILocalVariable(name: "size", scope: !3789, file: !428, line: 249, type: !32)
!3808 = !DILocalVariable(name: "align", scope: !3789, file: !428, line: 250, type: !32)
!3809 = !DILocalVariable(name: "str_ptr_pos", scope: !3789, file: !428, line: 251, type: !3810)
!3810 = !DICompositeType(tag: DW_TAG_array_type, baseType: !169, size: 128, elements: !305)
!3811 = !DILocalVariable(name: "str_ptr_arg", scope: !3789, file: !428, line: 252, type: !3810)
!3812 = !DILocalVariable(name: "s_idx", scope: !3789, file: !428, line: 253, type: !32)
!3813 = !DILocalVariable(name: "s_rw_cnt", scope: !3789, file: !428, line: 254, type: !32)
!3814 = !DILocalVariable(name: "s_ro_cnt", scope: !3789, file: !428, line: 255, type: !32)
!3815 = !DILocalVariable(name: "arg_idx", scope: !3789, file: !428, line: 256, type: !105)
!3816 = !DILocalVariable(name: "i", scope: !3789, file: !428, line: 257, type: !32)
!3817 = !DILocalVariable(name: "s", scope: !3789, file: !428, line: 258, type: !263)
!3818 = !DILocalVariable(name: "parsing", scope: !3789, file: !428, line: 259, type: !911)
!3819 = !DILocalVariable(name: "rws_pos_en", scope: !3789, file: !428, line: 263, type: !911)
!3820 = !DILocalVariable(name: "fros_cnt", scope: !3789, file: !428, line: 268, type: !105)
!3821 = !DILocalVariable(name: "is_str_arg", scope: !3789, file: !428, line: 269, type: !911)
!3822 = !DILocalVariable(name: "pkg_hdr", scope: !3789, file: !428, line: 270, type: !3823)
!3823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3824, size: 32)
!3824 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "cbprintf_package_hdr", file: !3825, line: 78, size: 32, elements: !3826)
!3825 = !DIFile(filename: "zephyr/include/zephyr/sys/cbprintf.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3826 = !{!3827, !3834}
!3827 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !3824, file: !3825, line: 80, baseType: !3828, size: 32)
!3828 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cbprintf_package_desc", file: !3825, line: 45, size: 32, elements: !3829)
!3829 = !{!3830, !3831, !3832, !3833}
!3830 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !3828, file: !3825, line: 47, baseType: !169, size: 8)
!3831 = !DIDerivedType(tag: DW_TAG_member, name: "str_cnt", scope: !3828, file: !3825, line: 50, baseType: !169, size: 8, offset: 8)
!3832 = !DIDerivedType(tag: DW_TAG_member, name: "ro_str_cnt", scope: !3828, file: !3825, line: 53, baseType: !169, size: 8, offset: 16)
!3833 = !DIDerivedType(tag: DW_TAG_member, name: "rw_str_cnt", scope: !3828, file: !3825, line: 56, baseType: !169, size: 8, offset: 24)
!3834 = !DIDerivedType(tag: DW_TAG_member, name: "raw", scope: !3824, file: !3825, line: 82, baseType: !104, size: 32)
!3835 = !DILocalVariable(name: "v", scope: !3836, file: !428, line: 567, type: !3840)
!3836 = distinct !DILexicalBlock(scope: !3837, file: !428, line: 562, column: 14)
!3837 = distinct !DILexicalBlock(scope: !3838, file: !428, line: 481, column: 18)
!3838 = distinct !DILexicalBlock(scope: !3839, file: !428, line: 466, column: 3)
!3839 = distinct !DILexicalBlock(scope: !3789, file: !428, line: 343, column: 15)
!3840 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3789, file: !428, line: 567, size: 64, elements: !3841)
!3841 = !{!3842, !3843}
!3842 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !3840, file: !428, line: 567, baseType: !420, size: 64)
!3843 = !DIDerivedType(tag: DW_TAG_member, name: "ld", scope: !3840, file: !428, line: 567, baseType: !418, size: 64)
!3844 = !DILocalVariable(name: "is_ro", scope: !3845, file: !428, line: 620, type: !911)
!3845 = distinct !DILexicalBlock(scope: !3846, file: !428, line: 613, column: 19)
!3846 = distinct !DILexicalBlock(scope: !3839, file: !428, line: 613, column: 7)
!3847 = !DILocalVariable(name: "do_ro", scope: !3845, file: !428, line: 621, type: !911)
!3848 = !DILocalVariable(name: "s_ptr_idx", scope: !3849, file: !428, line: 626, type: !113)
!3849 = distinct !DILexicalBlock(scope: !3850, file: !428, line: 625, column: 11)
!3850 = distinct !DILexicalBlock(scope: !3845, file: !428, line: 623, column: 8)
!3851 = !DILocalVariable(name: "v", scope: !3852, file: !428, line: 684, type: !105)
!3852 = distinct !DILexicalBlock(scope: !3853, file: !428, line: 683, column: 35)
!3853 = distinct !DILexicalBlock(scope: !3846, file: !428, line: 683, column: 14)
!3854 = !DILocalVariable(name: "v", scope: !3855, file: !428, line: 691, type: !106)
!3855 = distinct !DILexicalBlock(scope: !3856, file: !428, line: 690, column: 36)
!3856 = distinct !DILexicalBlock(scope: !3853, file: !428, line: 690, column: 14)
!3857 = !DILocalVariable(name: "v", scope: !3858, file: !428, line: 698, type: !110)
!3858 = distinct !DILexicalBlock(scope: !3859, file: !428, line: 697, column: 41)
!3859 = distinct !DILexicalBlock(scope: !3856, file: !428, line: 697, column: 14)
!3860 = !DILocalVariable(name: "pos", scope: !3861, file: !428, line: 762, type: !169)
!3861 = distinct !DILexicalBlock(scope: !3862, file: !428, line: 757, column: 31)
!3862 = distinct !DILexicalBlock(scope: !3863, file: !428, line: 757, column: 3)
!3863 = distinct !DILexicalBlock(scope: !3864, file: !428, line: 757, column: 3)
!3864 = distinct !DILexicalBlock(scope: !3865, file: !428, line: 756, column: 16)
!3865 = distinct !DILexicalBlock(scope: !3789, file: !428, line: 756, column: 6)
!3866 = !DILabel(scope: !3845, name: "process_string", file: !428, line: 615)
!3867 = !DILocation(line: 0, scope: !3789)
!3868 = !DILocation(line: 251, column: 2, scope: !3789)
!3869 = !DILocation(line: 251, column: 10, scope: !3789)
!3870 = !DILocation(line: 252, column: 2, scope: !3789)
!3871 = !DILocation(line: 252, column: 10, scope: !3789)
!3872 = !DILocation(line: 263, column: 29, scope: !3789)
!3873 = !DILocation(line: 263, column: 21, scope: !3789)
!3874 = !DILocation(line: 268, column: 21, scope: !3789)
!3875 = !DILocation(line: 268, column: 19, scope: !3789)
!3876 = !DILocation(line: 273, column: 6, scope: !3877)
!3877 = distinct !DILexicalBlock(scope: !3789, file: !428, line: 273, column: 6)
!3878 = !DILocation(line: 273, column: 26, scope: !3877)
!3879 = !DILocation(line: 273, column: 6, scope: !3789)
!3880 = !DILocation(line: 297, column: 6, scope: !3789)
!3881 = !DILocation(line: 305, column: 11, scope: !3882)
!3882 = distinct !DILexicalBlock(scope: !3789, file: !428, line: 305, column: 6)
!3883 = !DILocation(line: 305, column: 6, scope: !3789)
!3884 = !DILocation(line: 327, column: 19, scope: !3885)
!3885 = distinct !DILexicalBlock(scope: !3789, file: !428, line: 327, column: 6)
!3886 = !DILocation(line: 327, column: 22, scope: !3885)
!3887 = !DILocation(line: 327, column: 33, scope: !3885)
!3888 = !DILocation(line: 327, column: 50, scope: !3885)
!3889 = !DILocation(line: 327, column: 6, scope: !3789)
!3890 = !DILocation(line: 338, column: 9, scope: !3789)
!3891 = !DILocation(line: 341, column: 2, scope: !3789)
!3892 = !DILocation(line: 472, column: 8, scope: !3838)
!3893 = !DILocation(line: 473, column: 14, scope: !3894)
!3894 = distinct !DILexicalBlock(scope: !3895, file: !428, line: 473, column: 9)
!3895 = distinct !DILexicalBlock(scope: !3896, file: !428, line: 472, column: 18)
!3896 = distinct !DILexicalBlock(scope: !3838, file: !428, line: 472, column: 8)
!3897 = !DILocation(line: 473, column: 9, scope: !3895)
!3898 = !DILocation(line: 479, column: 5, scope: !3895)
!3899 = !DILocation(line: 468, column: 9, scope: !3900)
!3900 = distinct !DILexicalBlock(scope: !3838, file: !428, line: 468, column: 8)
!3901 = !DILocation(line: 468, column: 8, scope: !3900)
!3902 = !DILocation(line: 468, column: 15, scope: !3900)
!3903 = !DILocation(line: 468, column: 8, scope: !3838)
!3904 = distinct !{!3904, !3905, !3906}
!3905 = !DILocation(line: 343, column: 2, scope: !3789)
!3906 = !DILocation(line: 712, column: 2, scope: !3789)
!3907 = !DILocation(line: 481, column: 4, scope: !3838)
!3908 = !DILocation(line: 484, column: 12, scope: !3837)
!3909 = !DILocation(line: 485, column: 5, scope: !3837)
!3910 = !DILocation(line: 505, column: 5, scope: !3837)
!3911 = !DILocation(line: 518, column: 5, scope: !3837)
!3912 = !DILocation(line: 523, column: 5, scope: !3837)
!3913 = !DILocation(line: 532, column: 9, scope: !3914)
!3914 = distinct !DILexicalBlock(scope: !3837, file: !428, line: 532, column: 9)
!3915 = !DILocation(line: 532, column: 17, scope: !3914)
!3916 = !DILocation(line: 532, column: 9, scope: !3837)
!3917 = !DILocation(line: 533, column: 10, scope: !3918)
!3918 = distinct !DILexicalBlock(scope: !3919, file: !428, line: 533, column: 10)
!3919 = distinct !DILexicalBlock(scope: !3914, file: !428, line: 532, column: 25)
!3920 = !DILocation(line: 533, column: 18, scope: !3918)
!3921 = !DILocation(line: 0, scope: !3922)
!3922 = distinct !DILexicalBlock(scope: !3836, file: !428, line: 569, column: 9)
!3923 = !DILocation(line: 0, scope: !3836)
!3924 = !DILocation(line: 579, column: 20, scope: !3836)
!3925 = !DILocation(line: 579, column: 11, scope: !3836)
!3926 = !DILocation(line: 580, column: 9, scope: !3836)
!3927 = !DILocation(line: 582, column: 21, scope: !3928)
!3928 = distinct !DILexicalBlock(scope: !3929, file: !428, line: 582, column: 10)
!3929 = distinct !DILexicalBlock(scope: !3930, file: !428, line: 580, column: 23)
!3930 = distinct !DILexicalBlock(scope: !3836, file: !428, line: 580, column: 9)
!3931 = !DILocation(line: 582, column: 28, scope: !3928)
!3932 = !DILocation(line: 582, column: 10, scope: !3929)
!3933 = !DILocation(line: 0, scope: !3934)
!3934 = distinct !DILexicalBlock(scope: !3935, file: !428, line: 587, column: 17)
!3935 = distinct !DILexicalBlock(scope: !3929, file: !428, line: 585, column: 10)
!3936 = !DILocation(line: 593, column: 9, scope: !3836)
!3937 = !DILocation(line: 600, column: 5, scope: !3837)
!3938 = !DILocation(line: 605, column: 18, scope: !3839)
!3939 = !DILocation(line: 605, column: 9, scope: !3839)
!3940 = !DILocation(line: 608, column: 20, scope: !3941)
!3941 = distinct !DILexicalBlock(scope: !3839, file: !428, line: 608, column: 7)
!3942 = !DILocation(line: 608, column: 23, scope: !3941)
!3943 = !DILocation(line: 608, column: 34, scope: !3941)
!3944 = !DILocation(line: 608, column: 41, scope: !3941)
!3945 = !DILocation(line: 608, column: 7, scope: !3839)
!3946 = !DILocation(line: 613, column: 7, scope: !3839)
!3947 = !DILocation(line: 614, column: 8, scope: !3845)
!3948 = !DILocation(line: 614, column: 4, scope: !3845)
!3949 = !DILocation(line: 256, column: 6, scope: !3789)
!3950 = !DILocation(line: 254, column: 15, scope: !3789)
!3951 = !DILocation(line: 320, column: 7, scope: !3952)
!3952 = distinct !DILexicalBlock(scope: !3882, file: !428, line: 305, column: 20)
!3953 = !DILocation(line: 615, column: 1, scope: !3845)
!3954 = !DILocation(line: 616, column: 8, scope: !3845)
!3955 = !DILocation(line: 617, column: 5, scope: !3956)
!3956 = distinct !DILexicalBlock(scope: !3957, file: !428, line: 616, column: 22)
!3957 = distinct !DILexicalBlock(scope: !3845, file: !428, line: 616, column: 8)
!3958 = !DILocation(line: 617, column: 25, scope: !3956)
!3959 = !DILocation(line: 618, column: 4, scope: !3956)
!3960 = !DILocation(line: 620, column: 26, scope: !3845)
!3961 = !DILocation(line: 620, column: 29, scope: !3845)
!3962 = !DILocation(line: 620, column: 17, scope: !3845)
!3963 = !DILocation(line: 620, column: 43, scope: !3845)
!3964 = !DILocation(line: 0, scope: !3845)
!3965 = !DILocation(line: 623, column: 14, scope: !3850)
!3966 = !DILocation(line: 626, column: 26, scope: !3849)
!3967 = !DILocation(line: 626, column: 37, scope: !3849)
!3968 = !DILocation(line: 0, scope: !3849)
!3969 = !DILocation(line: 634, column: 15, scope: !3970)
!3970 = distinct !DILexicalBlock(scope: !3849, file: !428, line: 634, column: 9)
!3971 = !DILocation(line: 635, column: 6, scope: !3972)
!3972 = distinct !DILexicalBlock(scope: !3973, file: !428, line: 635, column: 6)
!3973 = distinct !DILexicalBlock(scope: !3974, file: !428, line: 635, column: 6)
!3974 = distinct !DILexicalBlock(scope: !3975, file: !428, line: 635, column: 6)
!3975 = distinct !DILexicalBlock(scope: !3970, file: !428, line: 634, column: 44)
!3976 = !DILocation(line: 639, column: 15, scope: !3977)
!3977 = distinct !DILexicalBlock(scope: !3849, file: !428, line: 639, column: 9)
!3978 = !DILocation(line: 639, column: 9, scope: !3849)
!3979 = !DILocation(line: 640, column: 6, scope: !3980)
!3980 = distinct !DILexicalBlock(scope: !3981, file: !428, line: 640, column: 6)
!3981 = distinct !DILexicalBlock(scope: !3982, file: !428, line: 640, column: 6)
!3982 = distinct !DILexicalBlock(scope: !3983, file: !428, line: 640, column: 6)
!3983 = distinct !DILexicalBlock(scope: !3977, file: !428, line: 639, column: 43)
!3984 = !DILocation(line: 644, column: 9, scope: !3849)
!3985 = !DILocation(line: 649, column: 27, scope: !3986)
!3986 = distinct !DILexicalBlock(scope: !3987, file: !428, line: 644, column: 23)
!3987 = distinct !DILexicalBlock(scope: !3849, file: !428, line: 644, column: 9)
!3988 = !DILocation(line: 649, column: 6, scope: !3986)
!3989 = !DILocation(line: 649, column: 25, scope: !3986)
!3990 = !DILocation(line: 650, column: 27, scope: !3986)
!3991 = !DILocation(line: 650, column: 6, scope: !3986)
!3992 = !DILocation(line: 650, column: 25, scope: !3986)
!3993 = !DILocation(line: 651, column: 10, scope: !3986)
!3994 = !DILocation(line: 653, column: 26, scope: !3995)
!3995 = distinct !DILexicalBlock(scope: !3996, file: !428, line: 651, column: 17)
!3996 = distinct !DILexicalBlock(scope: !3986, file: !428, line: 651, column: 10)
!3997 = !DILocation(line: 654, column: 15, scope: !3995)
!3998 = !DILocation(line: 655, column: 6, scope: !3995)
!3999 = !DILocation(line: 656, column: 15, scope: !4000)
!4000 = distinct !DILexicalBlock(scope: !3996, file: !428, line: 655, column: 13)
!4001 = !DILocation(line: 658, column: 16, scope: !3987)
!4002 = !DILocation(line: 663, column: 10, scope: !4003)
!4003 = distinct !DILexicalBlock(scope: !4004, file: !428, line: 658, column: 23)
!4004 = distinct !DILexicalBlock(scope: !3987, file: !428, line: 658, column: 16)
!4005 = !DILocation(line: 664, column: 5, scope: !4003)
!4006 = !DILocation(line: 664, column: 16, scope: !4004)
!4007 = !DILocation(line: 669, column: 10, scope: !4008)
!4008 = distinct !DILexicalBlock(scope: !4009, file: !428, line: 664, column: 28)
!4009 = distinct !DILexicalBlock(scope: !4004, file: !428, line: 664, column: 16)
!4010 = !DILocation(line: 670, column: 5, scope: !4008)
!4011 = !DILocation(line: 675, column: 13, scope: !4012)
!4012 = distinct !DILexicalBlock(scope: !4009, file: !428, line: 670, column: 12)
!4013 = !DILocation(line: 675, column: 27, scope: !4012)
!4014 = !DILocation(line: 675, column: 10, scope: !4012)
!4015 = !DILocation(line: 678, column: 10, scope: !3849)
!4016 = !DILocation(line: 680, column: 8, scope: !3845)
!4017 = !DILocation(line: 683, column: 14, scope: !3846)
!4018 = !DILocation(line: 684, column: 12, scope: !3852)
!4019 = !DILocation(line: 0, scope: !3852)
!4020 = !DILocation(line: 686, column: 8, scope: !3852)
!4021 = !DILocation(line: 687, column: 5, scope: !4022)
!4022 = distinct !DILexicalBlock(scope: !4023, file: !428, line: 686, column: 22)
!4023 = distinct !DILexicalBlock(scope: !3852, file: !428, line: 686, column: 8)
!4024 = !DILocation(line: 687, column: 17, scope: !4022)
!4025 = !DILocation(line: 688, column: 4, scope: !4022)
!4026 = !DILocation(line: 698, column: 18, scope: !3858)
!4027 = !DILocation(line: 0, scope: !3858)
!4028 = !DILocation(line: 700, column: 8, scope: !3858)
!4029 = !DILocation(line: 704, column: 6, scope: !4030)
!4030 = distinct !DILexicalBlock(scope: !4031, file: !428, line: 703, column: 12)
!4031 = distinct !DILexicalBlock(scope: !4032, file: !428, line: 701, column: 9)
!4032 = distinct !DILexicalBlock(scope: !4033, file: !428, line: 700, column: 22)
!4033 = distinct !DILexicalBlock(scope: !3858, file: !428, line: 700, column: 8)
!4034 = !DILocation(line: 704, column: 24, scope: !4030)
!4035 = !DILocation(line: 706, column: 4, scope: !4032)
!4036 = !DILocation(line: 709, column: 4, scope: !4037)
!4037 = distinct !DILexicalBlock(scope: !4038, file: !428, line: 709, column: 4)
!4038 = distinct !DILexicalBlock(scope: !4039, file: !428, line: 709, column: 4)
!4039 = distinct !DILexicalBlock(scope: !4040, file: !428, line: 709, column: 4)
!4040 = distinct !DILexicalBlock(scope: !3859, file: !428, line: 708, column: 10)
!4041 = !DILocation(line: 0, scope: !3853)
!4042 = !DILocation(line: 0, scope: !3839)
!4043 = !DILocation(line: 720, column: 6, scope: !4044)
!4044 = distinct !DILexicalBlock(scope: !3789, file: !428, line: 720, column: 6)
!4045 = !DILocation(line: 720, column: 17, scope: !4044)
!4046 = !DILocation(line: 720, column: 31, scope: !4044)
!4047 = !DILocation(line: 720, column: 6, scope: !3789)
!4048 = !DILocation(line: 721, column: 3, scope: !4049)
!4049 = distinct !DILexicalBlock(scope: !4050, file: !428, line: 721, column: 3)
!4050 = distinct !DILexicalBlock(scope: !4051, file: !428, line: 721, column: 3)
!4051 = distinct !DILexicalBlock(scope: !4052, file: !428, line: 721, column: 3)
!4052 = distinct !DILexicalBlock(scope: !4044, file: !428, line: 720, column: 38)
!4053 = !DILocation(line: 729, column: 6, scope: !3789)
!4054 = !DILocation(line: 730, column: 21, scope: !4055)
!4055 = distinct !DILexicalBlock(scope: !4056, file: !428, line: 729, column: 20)
!4056 = distinct !DILexicalBlock(scope: !3789, file: !428, line: 729, column: 6)
!4057 = !DILocation(line: 730, column: 27, scope: !4055)
!4058 = !DILocation(line: 730, column: 3, scope: !4055)
!4059 = !DILocation(line: 737, column: 22, scope: !3789)
!4060 = !DILocation(line: 737, column: 20, scope: !3789)
!4061 = !DILocation(line: 0, scope: !4062)
!4062 = distinct !DILexicalBlock(scope: !3789, file: !428, line: 739, column: 6)
!4063 = !DILocation(line: 745, column: 17, scope: !4064)
!4064 = distinct !DILexicalBlock(scope: !4062, file: !428, line: 743, column: 9)
!4065 = !DILocation(line: 745, column: 25, scope: !4064)
!4066 = !DILocation(line: 746, column: 17, scope: !4064)
!4067 = !DILocation(line: 746, column: 28, scope: !4064)
!4068 = !DILocation(line: 749, column: 29, scope: !3789)
!4069 = !DILocation(line: 749, column: 16, scope: !3789)
!4070 = !DILocation(line: 749, column: 27, scope: !3789)
!4071 = !DILocation(line: 756, column: 6, scope: !3865)
!4072 = !DILocation(line: 756, column: 6, scope: !3789)
!4073 = !DILocation(line: 757, column: 3, scope: !3863)
!4074 = !DILocation(line: 758, column: 10, scope: !4075)
!4075 = distinct !DILexicalBlock(scope: !3861, file: !428, line: 758, column: 8)
!4076 = !DILocation(line: 758, column: 25, scope: !4075)
!4077 = !DILocation(line: 758, column: 8, scope: !3861)
!4078 = !DILocation(line: 0, scope: !3861)
!4079 = !DILocation(line: 765, column: 8, scope: !4080)
!4080 = distinct !DILexicalBlock(scope: !3861, file: !428, line: 765, column: 8)
!4081 = !DILocation(line: 765, column: 19, scope: !4080)
!4082 = !DILocation(line: 765, column: 23, scope: !4080)
!4083 = !DILocation(line: 765, column: 8, scope: !3861)
!4084 = !DILocation(line: 762, column: 33, scope: !3861)
!4085 = !DILocation(line: 769, column: 8, scope: !3861)
!4086 = !DILocation(line: 769, column: 11, scope: !3861)
!4087 = !DILocation(line: 757, column: 27, scope: !3862)
!4088 = !DILocation(line: 757, column: 17, scope: !3862)
!4089 = distinct !{!4089, !4073, !4090}
!4090 = !DILocation(line: 770, column: 3, scope: !3863)
!4091 = !DILocation(line: 774, column: 16, scope: !4092)
!4092 = distinct !DILexicalBlock(scope: !4093, file: !428, line: 774, column: 2)
!4093 = distinct !DILexicalBlock(scope: !3789, file: !428, line: 774, column: 2)
!4094 = !DILocation(line: 774, column: 2, scope: !4093)
!4095 = !DILocation(line: 776, column: 16, scope: !4096)
!4096 = distinct !DILexicalBlock(scope: !4097, file: !428, line: 776, column: 7)
!4097 = distinct !DILexicalBlock(scope: !4092, file: !428, line: 774, column: 30)
!4098 = !DILocation(line: 776, column: 19, scope: !4096)
!4099 = !DILocation(line: 776, column: 34, scope: !4096)
!4100 = !DILocation(line: 776, column: 7, scope: !4097)
!4101 = !DILocation(line: 780, column: 7, scope: !4097)
!4102 = !DILocation(line: 782, column: 13, scope: !4103)
!4103 = distinct !DILexicalBlock(scope: !4104, file: !428, line: 780, column: 19)
!4104 = distinct !DILexicalBlock(scope: !4097, file: !428, line: 780, column: 7)
!4105 = !DILocation(line: 782, column: 8, scope: !4103)
!4106 = !DILocation(line: 782, column: 11, scope: !4103)
!4107 = !DILocation(line: 783, column: 3, scope: !4103)
!4108 = !DILocation(line: 785, column: 26, scope: !4109)
!4109 = distinct !DILexicalBlock(scope: !4104, file: !428, line: 783, column: 10)
!4110 = !DILocation(line: 785, column: 41, scope: !4109)
!4111 = !DILocation(line: 785, column: 24, scope: !4109)
!4112 = !DILocation(line: 785, column: 8, scope: !4109)
!4113 = !DILocation(line: 787, column: 52, scope: !4109)
!4114 = !DILocation(line: 789, column: 11, scope: !4109)
!4115 = !DILocation(line: 789, column: 21, scope: !4109)
!4116 = !DILocation(line: 0, scope: !4104)
!4117 = !DILocation(line: 793, column: 7, scope: !4118)
!4118 = distinct !DILexicalBlock(scope: !4097, file: !428, line: 793, column: 7)
!4119 = !DILocation(line: 793, column: 18, scope: !4118)
!4120 = !DILocation(line: 793, column: 22, scope: !4118)
!4121 = !DILocation(line: 793, column: 29, scope: !4118)
!4122 = !DILocation(line: 793, column: 7, scope: !4097)
!4123 = !DILocation(line: 797, column: 12, scope: !4097)
!4124 = !DILocation(line: 797, column: 7, scope: !4097)
!4125 = !DILocation(line: 797, column: 10, scope: !4097)
!4126 = !DILocation(line: 799, column: 3, scope: !4097)
!4127 = !DILocation(line: 800, column: 7, scope: !4097)
!4128 = !DILocation(line: 801, column: 2, scope: !4097)
!4129 = !DILocation(line: 338, column: 4, scope: !3789)
!4130 = !DILocation(line: 774, column: 26, scope: !4092)
!4131 = distinct !{!4131, !4094, !4132}
!4132 = !DILocation(line: 801, column: 2, scope: !4093)
!4133 = !DILocation(line: 808, column: 9, scope: !3789)
!4134 = !DILocation(line: 808, column: 2, scope: !3789)
!4135 = !DILocation(line: 813, column: 1, scope: !3789)
!4136 = distinct !DISubprogram(name: "ptr_in_rodata", scope: !428, file: !428, line: 33, type: !4137, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !414, retainedNodes: !4139)
!4137 = !DISubroutineType(types: !4138)
!4138 = !{!911, !263}
!4139 = !{!4140}
!4140 = !DILocalVariable(name: "addr", arg: 1, scope: !4136, file: !428, line: 33, type: !263)
!4141 = !DILocation(line: 0, scope: !4136)
!4142 = !DILocation(line: 41, column: 9, scope: !4136)
!4143 = !DILocation(line: 41, column: 2, scope: !4136)
!4144 = distinct !DISubprogram(name: "linker_is_in_rodata", scope: !4145, file: !4145, line: 24, type: !4146, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !414, retainedNodes: !4148)
!4145 = !DIFile(filename: "zephyr/include/zephyr/linker/utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4146 = !DISubroutineType(types: !4147)
!4147 = !{!911, !13}
!4148 = !{!4149}
!4149 = !DILocalVariable(name: "addr", arg: 1, scope: !4144, file: !4145, line: 24, type: !13)
!4150 = !DILocation(line: 0, scope: !4144)
!4151 = !DILocation(line: 49, column: 30, scope: !4144)
!4152 = !DILocation(line: 49, column: 57, scope: !4144)
!4153 = !DILocation(line: 49, column: 2, scope: !4144)
!4154 = distinct !DISubprogram(name: "cbprintf_package", scope: !428, file: !428, line: 815, type: !4155, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !414, retainedNodes: !4157)
!4155 = !DISubroutineType(types: !4156)
!4156 = !{!105, !104, !111, !113, !263, null}
!4157 = !{!4158, !4159, !4160, !4161, !4162, !4163}
!4158 = !DILocalVariable(name: "packaged", arg: 1, scope: !4154, file: !428, line: 815, type: !104)
!4159 = !DILocalVariable(name: "len", arg: 2, scope: !4154, file: !428, line: 815, type: !111)
!4160 = !DILocalVariable(name: "flags", arg: 3, scope: !4154, file: !428, line: 815, type: !113)
!4161 = !DILocalVariable(name: "format", arg: 4, scope: !4154, file: !428, line: 816, type: !263)
!4162 = !DILocalVariable(name: "ap", scope: !4154, file: !428, line: 818, type: !3792)
!4163 = !DILocalVariable(name: "ret", scope: !4154, file: !428, line: 819, type: !105)
!4164 = !DILocation(line: 0, scope: !4154)
!4165 = !DILocation(line: 818, column: 2, scope: !4154)
!4166 = !DILocation(line: 818, column: 10, scope: !4154)
!4167 = !DILocation(line: 821, column: 2, scope: !4154)
!4168 = !DILocation(line: 822, column: 8, scope: !4154)
!4169 = !DILocation(line: 823, column: 2, scope: !4154)
!4170 = !DILocation(line: 825, column: 1, scope: !4154)
!4171 = !DILocation(line: 824, column: 2, scope: !4154)
!4172 = distinct !DISubprogram(name: "cbpprintf_external", scope: !428, file: !428, line: 827, type: !4173, scopeLine: 830, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !414, retainedNodes: !4183)
!4173 = !DISubroutineType(types: !4174)
!4174 = !{!105, !4175, !4179, !104, !104}
!4175 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_cb", file: !3825, line: 297, baseType: !4176)
!4176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4177, size: 32)
!4177 = !DISubroutineType(types: !4178)
!4178 = !{!105, null}
!4179 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbvprintf_external_formatter_func", file: !3825, line: 328, baseType: !4180)
!4180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4181, size: 32)
!4181 = !DISubroutineType(types: !4182)
!4182 = !{!105, !4175, !104, !263, !3792}
!4183 = !{!4184, !4185, !4186, !4187, !4188, !4189, !4195, !4196, !4197, !4198, !4199, !4200, !4201, !4202}
!4184 = !DILocalVariable(name: "out", arg: 1, scope: !4172, file: !428, line: 827, type: !4175)
!4185 = !DILocalVariable(name: "formatter", arg: 2, scope: !4172, file: !428, line: 828, type: !4179)
!4186 = !DILocalVariable(name: "ctx", arg: 3, scope: !4172, file: !428, line: 829, type: !104)
!4187 = !DILocalVariable(name: "packaged", arg: 4, scope: !4172, file: !428, line: 829, type: !104)
!4188 = !DILocalVariable(name: "buf", scope: !4172, file: !428, line: 831, type: !426)
!4189 = !DILocalVariable(name: "hdr", scope: !4172, file: !428, line: 832, type: !4190)
!4190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4191, size: 32)
!4191 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cbprintf_package_hdr_ext", file: !3825, line: 96, size: 64, elements: !4192)
!4192 = !{!4193, !4194}
!4193 = !DIDerivedType(tag: DW_TAG_member, name: "hdr", scope: !4191, file: !3825, line: 98, baseType: !3824, size: 32)
!4194 = !DIDerivedType(tag: DW_TAG_member, name: "fmt", scope: !4191, file: !3825, line: 101, baseType: !102, size: 32, offset: 32)
!4195 = !DILocalVariable(name: "s", scope: !4172, file: !428, line: 833, type: !102)
!4196 = !DILocalVariable(name: "ps", scope: !4172, file: !428, line: 833, type: !425)
!4197 = !DILocalVariable(name: "i", scope: !4172, file: !428, line: 834, type: !32)
!4198 = !DILocalVariable(name: "args_size", scope: !4172, file: !428, line: 834, type: !32)
!4199 = !DILocalVariable(name: "s_nbr", scope: !4172, file: !428, line: 834, type: !32)
!4200 = !DILocalVariable(name: "ros_nbr", scope: !4172, file: !428, line: 834, type: !32)
!4201 = !DILocalVariable(name: "rws_nbr", scope: !4172, file: !428, line: 834, type: !32)
!4202 = !DILocalVariable(name: "s_idx", scope: !4172, file: !428, line: 834, type: !32)
!4203 = !DILocation(line: 0, scope: !4172)
!4204 = !DILocation(line: 836, column: 10, scope: !4205)
!4205 = distinct !DILexicalBlock(scope: !4172, file: !428, line: 836, column: 6)
!4206 = !DILocation(line: 836, column: 6, scope: !4172)
!4207 = !DILocation(line: 842, column: 28, scope: !4172)
!4208 = !DILocation(line: 842, column: 14, scope: !4172)
!4209 = !DILocation(line: 852, column: 16, scope: !4210)
!4210 = distinct !DILexicalBlock(scope: !4211, file: !428, line: 852, column: 2)
!4211 = distinct !DILexicalBlock(scope: !4172, file: !428, line: 852, column: 2)
!4212 = !DILocation(line: 852, column: 2, scope: !4211)
!4213 = !DILocation(line: 841, column: 28, scope: !4172)
!4214 = !DILocation(line: 841, column: 14, scope: !4172)
!4215 = !DILocation(line: 841, column: 32, scope: !4172)
!4216 = !DILocation(line: 847, column: 19, scope: !4172)
!4217 = !DILocation(line: 843, column: 28, scope: !4172)
!4218 = !DILocation(line: 843, column: 14, scope: !4172)
!4219 = !DILocation(line: 847, column: 31, scope: !4172)
!4220 = !DILocation(line: 844, column: 28, scope: !4172)
!4221 = !DILocation(line: 844, column: 14, scope: !4172)
!4222 = !DILocation(line: 847, column: 45, scope: !4172)
!4223 = !DILocation(line: 847, column: 41, scope: !4172)
!4224 = !DILocation(line: 854, column: 24, scope: !4225)
!4225 = distinct !DILexicalBlock(scope: !4210, file: !428, line: 852, column: 30)
!4226 = !DILocation(line: 854, column: 11, scope: !4225)
!4227 = !DILocation(line: 855, column: 30, scope: !4225)
!4228 = !DILocation(line: 855, column: 22, scope: !4225)
!4229 = !DILocation(line: 855, column: 8, scope: !4225)
!4230 = !DILocation(line: 857, column: 7, scope: !4225)
!4231 = !DILocation(line: 859, column: 8, scope: !4225)
!4232 = !DILocation(line: 859, column: 18, scope: !4225)
!4233 = !DILocation(line: 859, column: 5, scope: !4225)
!4234 = !DILocation(line: 852, column: 26, scope: !4210)
!4235 = distinct !{!4235, !4212, !4236}
!4236 = !DILocation(line: 860, column: 2, scope: !4211)
!4237 = !DILocation(line: 863, column: 6, scope: !4172)
!4238 = !DILocation(line: 866, column: 56, scope: !4172)
!4239 = !DILocation(line: 866, column: 9, scope: !4172)
!4240 = !DILocation(line: 866, column: 2, scope: !4172)
!4241 = !DILocation(line: 867, column: 1, scope: !4172)
!4242 = distinct !DISubprogram(name: "cbprintf_via_va_list", scope: !428, file: !428, line: 179, type: !4243, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !414, retainedNodes: !4245)
!4243 = !DISubroutineType(types: !4244)
!4244 = !{!105, !4175, !4179, !104, !263, !104}
!4245 = !{!4246, !4247, !4248, !4249, !4250, !4251}
!4246 = !DILocalVariable(name: "out", arg: 1, scope: !4242, file: !428, line: 179, type: !4175)
!4247 = !DILocalVariable(name: "formatter", arg: 2, scope: !4242, file: !428, line: 180, type: !4179)
!4248 = !DILocalVariable(name: "ctx", arg: 3, scope: !4242, file: !428, line: 181, type: !104)
!4249 = !DILocalVariable(name: "fmt", arg: 4, scope: !4242, file: !428, line: 182, type: !263)
!4250 = !DILocalVariable(name: "buf", arg: 5, scope: !4242, file: !428, line: 182, type: !104)
!4251 = !DILocalVariable(name: "u", scope: !4242, file: !428, line: 187, type: !4252)
!4252 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4242, file: !428, line: 184, size: 32, elements: !4253)
!4253 = !{!4254, !4255}
!4254 = !DIDerivedType(tag: DW_TAG_member, name: "ap", scope: !4252, file: !428, line: 185, baseType: !3792, size: 32)
!4255 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4252, file: !428, line: 186, baseType: !104, size: 32)
!4256 = !DILocation(line: 0, scope: !4242)
!4257 = !DILocation(line: 191, column: 9, scope: !4242)
!4258 = !DILocation(line: 191, column: 2, scope: !4242)
!4259 = distinct !DISubprogram(name: "is_ptr", scope: !428, file: !428, line: 881, type: !4260, scopeLine: 882, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !414, retainedNodes: !4262)
!4260 = !DISubroutineType(types: !4261)
!4261 = !{!911, !263, !105}
!4262 = !{!4263, !4264, !4265, !4266, !4267}
!4263 = !DILocalVariable(name: "fmt", arg: 1, scope: !4259, file: !428, line: 881, type: !263)
!4264 = !DILocalVariable(name: "n", arg: 2, scope: !4259, file: !428, line: 881, type: !105)
!4265 = !DILocalVariable(name: "c", scope: !4259, file: !428, line: 883, type: !103)
!4266 = !DILocalVariable(name: "mod", scope: !4259, file: !428, line: 884, type: !911)
!4267 = !DILocalVariable(name: "cnt", scope: !4259, file: !428, line: 885, type: !105)
!4268 = !DILocation(line: 0, scope: !4259)
!4269 = !DILocation(line: 887, column: 14, scope: !4259)
!4270 = !DILocation(line: 887, column: 22, scope: !4259)
!4271 = !DILocation(line: 887, column: 2, scope: !4259)
!4272 = !DILocation(line: 887, column: 18, scope: !4259)
!4273 = !DILocation(line: 888, column: 7, scope: !4274)
!4274 = distinct !DILexicalBlock(scope: !4259, file: !428, line: 887, column: 31)
!4275 = !DILocation(line: 889, column: 12, scope: !4276)
!4276 = distinct !DILexicalBlock(scope: !4277, file: !428, line: 889, column: 8)
!4277 = distinct !DILexicalBlock(scope: !4278, file: !428, line: 888, column: 12)
!4278 = distinct !DILexicalBlock(scope: !4274, file: !428, line: 888, column: 7)
!4279 = !DILocation(line: 889, column: 8, scope: !4277)
!4280 = !DILocation(line: 890, column: 11, scope: !4281)
!4281 = distinct !DILexicalBlock(scope: !4282, file: !428, line: 890, column: 9)
!4282 = distinct !DILexicalBlock(scope: !4276, file: !428, line: 889, column: 18)
!4283 = !DILocation(line: 890, column: 9, scope: !4282)
!4284 = !DILocation(line: 892, column: 16, scope: !4285)
!4285 = distinct !DILexicalBlock(scope: !4281, file: !428, line: 892, column: 16)
!4286 = !DILocation(line: 892, column: 16, scope: !4281)
!4287 = !DILocation(line: 895, column: 15, scope: !4288)
!4288 = distinct !DILexicalBlock(scope: !4276, file: !428, line: 895, column: 15)
!4289 = !DILocation(line: 895, column: 15, scope: !4276)
!4290 = !DILocation(line: 900, column: 9, scope: !4291)
!4291 = distinct !DILexicalBlock(scope: !4274, file: !428, line: 900, column: 7)
!4292 = !DILocation(line: 900, column: 7, scope: !4274)
!4293 = distinct !{!4293, !4271, !4294}
!4294 = !DILocation(line: 903, column: 2, scope: !4259)
!4295 = !DILocation(line: 906, column: 1, scope: !4259)
!4296 = distinct !DISubprogram(name: "is_fmt_spec", scope: !428, file: !428, line: 873, type: !4297, scopeLine: 874, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !414, retainedNodes: !4299)
!4297 = !DISubroutineType(types: !4298)
!4298 = !{!911, !103}
!4299 = !{!4300}
!4300 = !DILocalVariable(name: "c", arg: 1, scope: !4296, file: !428, line: 873, type: !103)
!4301 = !DILocation(line: 0, scope: !4296)
!4302 = !DILocation(line: 875, column: 19, scope: !4296)
!4303 = !DILocation(line: 875, column: 2, scope: !4296)
!4304 = distinct !DISubprogram(name: "cbprintf_package_convert", scope: !428, file: !428, line: 908, type: !4305, scopeLine: 915, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !414, retainedNodes: !4311)
!4305 = !DISubroutineType(types: !4306)
!4306 = !{!105, !104, !111, !4307, !104, !113, !2380, !111}
!4307 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_convert_cb", file: !3825, line: 308, baseType: !4308)
!4308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4309, size: 32)
!4309 = !DISubroutineType(types: !4310)
!4310 = !{!105, !13, !111, !104}
!4311 = !{!4312, !4313, !4314, !4315, !4316, !4317, !4318, !4319, !4320, !4321, !4322, !4323, !4324, !4325, !4326, !4327, !4329, !4330, !4331, !4332, !4333, !4339, !4342, !4343, !4344, !4346, !4349, !4350, !4351, !4352, !4353, !4354, !4355, !4356, !4357, !4358, !4359, !4360, !4362, !4365, !4366, !4367, !4368, !4369, !4370, !4372, !4375, !4376, !4377}
!4312 = !DILocalVariable(name: "in_packaged", arg: 1, scope: !4304, file: !428, line: 908, type: !104)
!4313 = !DILocalVariable(name: "in_len", arg: 2, scope: !4304, file: !428, line: 909, type: !111)
!4314 = !DILocalVariable(name: "cb", arg: 3, scope: !4304, file: !428, line: 910, type: !4307)
!4315 = !DILocalVariable(name: "ctx", arg: 4, scope: !4304, file: !428, line: 911, type: !104)
!4316 = !DILocalVariable(name: "flags", arg: 5, scope: !4304, file: !428, line: 912, type: !113)
!4317 = !DILocalVariable(name: "strl", arg: 6, scope: !4304, file: !428, line: 913, type: !2380)
!4318 = !DILocalVariable(name: "strl_len", arg: 7, scope: !4304, file: !428, line: 914, type: !111)
!4319 = !DILocalVariable(name: "buf", scope: !4304, file: !428, line: 918, type: !426)
!4320 = !DILocalVariable(name: "buf32", scope: !4304, file: !428, line: 919, type: !1417)
!4321 = !DILocalVariable(name: "args_size", scope: !4304, file: !428, line: 920, type: !32)
!4322 = !DILocalVariable(name: "ros_nbr", scope: !4304, file: !428, line: 920, type: !32)
!4323 = !DILocalVariable(name: "rws_nbr", scope: !4304, file: !428, line: 920, type: !32)
!4324 = !DILocalVariable(name: "fmt_present", scope: !4304, file: !428, line: 921, type: !911)
!4325 = !DILocalVariable(name: "rw_cpy", scope: !4304, file: !428, line: 922, type: !911)
!4326 = !DILocalVariable(name: "ro_cpy", scope: !4304, file: !428, line: 923, type: !911)
!4327 = !DILocalVariable(name: "in_desc", scope: !4304, file: !428, line: 924, type: !4328)
!4328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3828, size: 32)
!4329 = !DILocalVariable(name: "out_len", scope: !4304, file: !428, line: 960, type: !105)
!4330 = !DILocalVariable(name: "fmt", scope: !4304, file: !428, line: 965, type: !263)
!4331 = !DILocalVariable(name: "str_pos", scope: !4304, file: !428, line: 966, type: !426)
!4332 = !DILocalVariable(name: "strl_cnt", scope: !4304, file: !428, line: 967, type: !111)
!4333 = !DILocalVariable(name: "i", scope: !4334, file: !428, line: 973, type: !105)
!4334 = distinct !DILexicalBlock(scope: !4335, file: !428, line: 973, column: 4)
!4335 = distinct !DILexicalBlock(scope: !4336, file: !428, line: 972, column: 15)
!4336 = distinct !DILexicalBlock(scope: !4337, file: !428, line: 972, column: 7)
!4337 = distinct !DILexicalBlock(scope: !4338, file: !428, line: 970, column: 18)
!4338 = distinct !DILexicalBlock(scope: !4304, file: !428, line: 970, column: 6)
!4339 = !DILocalVariable(name: "str", scope: !4340, file: !428, line: 974, type: !263)
!4340 = distinct !DILexicalBlock(scope: !4341, file: !428, line: 973, column: 38)
!4341 = distinct !DILexicalBlock(scope: !4334, file: !428, line: 973, column: 4)
!4342 = !DILocalVariable(name: "len", scope: !4340, file: !428, line: 975, type: !105)
!4343 = !DILocalVariable(name: "drop_ro_str_pos", scope: !4337, file: !428, line: 990, type: !911)
!4344 = !DILocalVariable(name: "i", scope: !4345, file: !428, line: 995, type: !105)
!4345 = distinct !DILexicalBlock(scope: !4337, file: !428, line: 995, column: 3)
!4346 = !DILocalVariable(name: "arg_idx", scope: !4347, file: !428, line: 996, type: !169)
!4347 = distinct !DILexicalBlock(scope: !4348, file: !428, line: 995, column: 37)
!4348 = distinct !DILexicalBlock(scope: !4345, file: !428, line: 995, column: 3)
!4349 = !DILocalVariable(name: "arg_pos", scope: !4347, file: !428, line: 997, type: !169)
!4350 = !DILocalVariable(name: "str", scope: !4347, file: !428, line: 998, type: !263)
!4351 = !DILocalVariable(name: "is_ro", scope: !4347, file: !428, line: 999, type: !911)
!4352 = !DILocalVariable(name: "len", scope: !4347, file: !428, line: 1000, type: !105)
!4353 = !DILocalVariable(name: "out_desc", scope: !4304, file: !428, line: 1038, type: !3828)
!4354 = !DILocalVariable(name: "cpy_str_pos", scope: !4304, file: !428, line: 1040, type: !3810)
!4355 = !DILocalVariable(name: "keep_str_pos", scope: !4304, file: !428, line: 1042, type: !3810)
!4356 = !DILocalVariable(name: "scpy_cnt", scope: !4304, file: !428, line: 1043, type: !169)
!4357 = !DILocalVariable(name: "keep_cnt", scope: !4304, file: !428, line: 1044, type: !169)
!4358 = !DILocalVariable(name: "dst", scope: !4304, file: !428, line: 1045, type: !426)
!4359 = !DILocalVariable(name: "rv", scope: !4304, file: !428, line: 1046, type: !105)
!4360 = !DILocalVariable(name: "i", scope: !4361, file: !428, line: 1074, type: !105)
!4361 = distinct !DILexicalBlock(scope: !4304, file: !428, line: 1074, column: 2)
!4362 = !DILocalVariable(name: "arg_idx", scope: !4363, file: !428, line: 1075, type: !169)
!4363 = distinct !DILexicalBlock(scope: !4364, file: !428, line: 1074, column: 36)
!4364 = distinct !DILexicalBlock(scope: !4361, file: !428, line: 1074, column: 2)
!4365 = !DILocalVariable(name: "arg_pos", scope: !4363, file: !428, line: 1076, type: !169)
!4366 = !DILocalVariable(name: "str", scope: !4363, file: !428, line: 1077, type: !263)
!4367 = !DILocalVariable(name: "is_ro", scope: !4363, file: !428, line: 1078, type: !911)
!4368 = !DILocalVariable(name: "in_desc_backup", scope: !4304, file: !428, line: 1114, type: !3828)
!4369 = !DILocalVariable(name: "strs_len", scope: !4304, file: !428, line: 1134, type: !111)
!4370 = !DILocalVariable(name: "i", scope: !4371, file: !428, line: 1143, type: !105)
!4371 = distinct !DILexicalBlock(scope: !4304, file: !428, line: 1143, column: 2)
!4372 = !DILocalVariable(name: "loc", scope: !4373, file: !428, line: 1144, type: !169)
!4373 = distinct !DILexicalBlock(scope: !4374, file: !428, line: 1143, column: 37)
!4374 = distinct !DILexicalBlock(scope: !4371, file: !428, line: 1143, column: 2)
!4375 = !DILocalVariable(name: "str", scope: !4373, file: !428, line: 1145, type: !263)
!4376 = !DILocalVariable(name: "str_len", scope: !4373, file: !428, line: 1146, type: !183)
!4377 = !DILabel(scope: !4378, name: "calculate_string_length", file: !428, line: 1021)
!4378 = distinct !DILexicalBlock(scope: !4379, file: !428, line: 1020, column: 56)
!4379 = distinct !DILexicalBlock(scope: !4380, file: !428, line: 1020, column: 15)
!4380 = distinct !DILexicalBlock(scope: !4347, file: !428, line: 1014, column: 8)
!4381 = !DILocation(line: 0, scope: !4304)
!4382 = !DILocation(line: 916, column: 2, scope: !4383)
!4383 = distinct !DILexicalBlock(scope: !4384, file: !428, line: 916, column: 2)
!4384 = distinct !DILexicalBlock(scope: !4304, file: !428, line: 916, column: 2)
!4385 = !DILocation(line: 916, column: 2, scope: !4384)
!4386 = !DILocation(line: 916, column: 2, scope: !4387)
!4387 = distinct !DILexicalBlock(scope: !4383, file: !428, line: 916, column: 2)
!4388 = !DILocation(line: 919, column: 20, scope: !4304)
!4389 = !DILocation(line: 921, column: 27, scope: !4304)
!4390 = !DILocation(line: 921, column: 21, scope: !4304)
!4391 = !DILocation(line: 926, column: 18, scope: !4304)
!4392 = !DILocation(line: 926, column: 11, scope: !4304)
!4393 = !DILocation(line: 926, column: 34, scope: !4304)
!4394 = !DILocation(line: 931, column: 21, scope: !4304)
!4395 = !DILocation(line: 931, column: 12, scope: !4304)
!4396 = !DILocation(line: 932, column: 11, scope: !4304)
!4397 = !DILocation(line: 932, column: 19, scope: !4304)
!4398 = !DILocation(line: 938, column: 21, scope: !4304)
!4399 = !DILocation(line: 938, column: 12, scope: !4304)
!4400 = !DILocation(line: 939, column: 19, scope: !4304)
!4401 = !DILocation(line: 939, column: 23, scope: !4304)
!4402 = !DILocation(line: 946, column: 14, scope: !4403)
!4403 = distinct !DILexicalBlock(scope: !4304, file: !428, line: 946, column: 6)
!4404 = !DILocation(line: 947, column: 7, scope: !4405)
!4405 = distinct !DILexicalBlock(scope: !4406, file: !428, line: 947, column: 7)
!4406 = distinct !DILexicalBlock(scope: !4403, file: !428, line: 946, column: 26)
!4407 = !DILocation(line: 947, column: 7, scope: !4406)
!4408 = !DILocation(line: 948, column: 4, scope: !4409)
!4409 = distinct !DILexicalBlock(scope: !4405, file: !428, line: 947, column: 11)
!4410 = !DILocation(line: 949, column: 3, scope: !4409)
!4411 = !DILocation(line: 958, column: 23, scope: !4304)
!4412 = !DILocation(line: 958, column: 14, scope: !4304)
!4413 = !DILocation(line: 958, column: 27, scope: !4304)
!4414 = !DILocation(line: 965, column: 41, scope: !4304)
!4415 = !DILocation(line: 965, column: 20, scope: !4304)
!4416 = !DILocation(line: 966, column: 22, scope: !4304)
!4417 = !DILocation(line: 970, column: 9, scope: !4338)
!4418 = !DILocation(line: 970, column: 6, scope: !4304)
!4419 = !DILocation(line: 972, column: 7, scope: !4337)
!4420 = !DILocation(line: 0, scope: !4334)
!4421 = !DILocation(line: 973, column: 4, scope: !4334)
!4422 = !DILocation(line: 974, column: 46, scope: !4340)
!4423 = !DILocation(line: 974, column: 40, scope: !4340)
!4424 = !DILocation(line: 974, column: 23, scope: !4340)
!4425 = !DILocation(line: 0, scope: !4340)
!4426 = !DILocation(line: 975, column: 15, scope: !4340)
!4427 = !DILocation(line: 978, column: 14, scope: !4428)
!4428 = distinct !DILexicalBlock(scope: !4340, file: !428, line: 978, column: 9)
!4429 = !DILocation(line: 979, column: 25, scope: !4430)
!4430 = distinct !DILexicalBlock(scope: !4428, file: !428, line: 978, column: 38)
!4431 = !DILocation(line: 979, column: 19, scope: !4430)
!4432 = !DILocation(line: 979, column: 6, scope: !4430)
!4433 = !DILocation(line: 979, column: 23, scope: !4430)
!4434 = !DILocation(line: 980, column: 5, scope: !4430)
!4435 = !DILocation(line: 981, column: 13, scope: !4340)
!4436 = !DILocation(line: 982, column: 12, scope: !4340)
!4437 = !DILocation(line: 973, column: 34, scope: !4341)
!4438 = !DILocation(line: 973, column: 22, scope: !4341)
!4439 = distinct !{!4439, !4421, !4440}
!4440 = !DILocation(line: 983, column: 4, scope: !4334)
!4441 = !DILocation(line: 985, column: 16, scope: !4442)
!4442 = distinct !DILexicalBlock(scope: !4443, file: !428, line: 985, column: 8)
!4443 = distinct !DILexicalBlock(scope: !4336, file: !428, line: 984, column: 10)
!4444 = !DILocation(line: 967, column: 9, scope: !4304)
!4445 = !DILocation(line: 971, column: 11, scope: !4337)
!4446 = !DILocation(line: 0, scope: !4337)
!4447 = !DILocation(line: 0, scope: !4345)
!4448 = !DILocation(line: 995, column: 21, scope: !4348)
!4449 = !DILocation(line: 995, column: 3, scope: !4345)
!4450 = !DILocation(line: 990, column: 34, scope: !4337)
!4451 = !DILocation(line: 990, column: 26, scope: !4337)
!4452 = !DILocation(line: 996, column: 30, scope: !4347)
!4453 = !DILocation(line: 0, scope: !4347)
!4454 = !DILocation(line: 997, column: 30, scope: !4347)
!4455 = !DILocation(line: 997, column: 22, scope: !4347)
!4456 = !DILocation(line: 998, column: 39, scope: !4347)
!4457 = !DILocation(line: 998, column: 22, scope: !4347)
!4458 = !DILocation(line: 999, column: 17, scope: !4347)
!4459 = !DILocation(line: 1002, column: 20, scope: !4460)
!4460 = distinct !DILexicalBlock(scope: !4347, file: !428, line: 1002, column: 8)
!4461 = !DILocation(line: 996, column: 22, scope: !4347)
!4462 = !DILocation(line: 1002, column: 35, scope: !4460)
!4463 = !DILocation(line: 1002, column: 23, scope: !4460)
!4464 = !DILocation(line: 1002, column: 8, scope: !4347)
!4465 = !DILocation(line: 1003, column: 5, scope: !4466)
!4466 = distinct !DILexicalBlock(scope: !4467, file: !428, line: 1003, column: 5)
!4467 = distinct !DILexicalBlock(scope: !4468, file: !428, line: 1003, column: 5)
!4468 = distinct !DILexicalBlock(scope: !4469, file: !428, line: 1003, column: 5)
!4469 = distinct !DILexicalBlock(scope: !4470, file: !428, line: 1003, column: 5)
!4470 = distinct !DILexicalBlock(scope: !4460, file: !428, line: 1002, column: 45)
!4471 = !DILocation(line: 1010, column: 13, scope: !4470)
!4472 = !DILocation(line: 1011, column: 5, scope: !4470)
!4473 = !DILocation(line: 1014, column: 8, scope: !4347)
!4474 = !DILocation(line: 1015, column: 9, scope: !4475)
!4475 = distinct !DILexicalBlock(scope: !4380, file: !428, line: 1014, column: 15)
!4476 = !DILocation(line: 1018, column: 14, scope: !4477)
!4477 = distinct !DILexicalBlock(scope: !4478, file: !428, line: 1017, column: 12)
!4478 = distinct !DILexicalBlock(scope: !4475, file: !428, line: 1015, column: 9)
!4479 = !DILocation(line: 1020, column: 4, scope: !4475)
!4480 = !DILocation(line: 1020, column: 15, scope: !4380)
!4481 = !DILocation(line: 1021, column: 1, scope: !4378)
!4482 = !DILocation(line: 1022, column: 11, scope: !4378)
!4483 = !DILocation(line: 1025, column: 14, scope: !4484)
!4484 = distinct !DILexicalBlock(scope: !4378, file: !428, line: 1025, column: 9)
!4485 = !DILocation(line: 1026, column: 25, scope: !4486)
!4486 = distinct !DILexicalBlock(scope: !4484, file: !428, line: 1025, column: 38)
!4487 = !DILocation(line: 1026, column: 19, scope: !4486)
!4488 = !DILocation(line: 1026, column: 6, scope: !4486)
!4489 = !DILocation(line: 1026, column: 23, scope: !4486)
!4490 = !DILocation(line: 1027, column: 5, scope: !4486)
!4491 = !DILocation(line: 1031, column: 21, scope: !4378)
!4492 = !DILocation(line: 1031, column: 13, scope: !4378)
!4493 = !DILocation(line: 1032, column: 4, scope: !4378)
!4494 = !DILocation(line: 995, column: 33, scope: !4348)
!4495 = distinct !{!4495, !4449, !4496}
!4496 = !DILocation(line: 1033, column: 3, scope: !4345)
!4497 = !DILocation(line: 1040, column: 10, scope: !4304)
!4498 = !DILocation(line: 1042, column: 10, scope: !4304)
!4499 = !DILocation(line: 1052, column: 6, scope: !4304)
!4500 = !DILocation(line: 1055, column: 9, scope: !4501)
!4501 = distinct !DILexicalBlock(scope: !4502, file: !428, line: 1052, column: 14)
!4502 = distinct !DILexicalBlock(scope: !4304, file: !428, line: 1052, column: 6)
!4503 = !DILocation(line: 1056, column: 2, scope: !4501)
!4504 = !DILocation(line: 1056, column: 21, scope: !4505)
!4505 = distinct !DILexicalBlock(scope: !4502, file: !428, line: 1056, column: 13)
!4506 = !DILocation(line: 1066, column: 3, scope: !4507)
!4507 = distinct !DILexicalBlock(scope: !4508, file: !428, line: 1065, column: 11)
!4508 = distinct !DILexicalBlock(scope: !4304, file: !428, line: 1065, column: 6)
!4509 = !DILocation(line: 1067, column: 2, scope: !4507)
!4510 = !DILocation(line: 1068, column: 10, scope: !4304)
!4511 = !DILocation(line: 0, scope: !4361)
!4512 = !DILocation(line: 1074, column: 20, scope: !4364)
!4513 = !DILocation(line: 1074, column: 2, scope: !4361)
!4514 = !DILocation(line: 1110, column: 24, scope: !4304)
!4515 = !DILocation(line: 1053, column: 12, scope: !4501)
!4516 = !DILocation(line: 1054, column: 12, scope: !4501)
!4517 = !DILocation(line: 1108, column: 30, scope: !4304)
!4518 = !DILocation(line: 1108, column: 40, scope: !4304)
!4519 = !DILocation(line: 1108, column: 38, scope: !4304)
!4520 = !DILocation(line: 1109, column: 31, scope: !4304)
!4521 = !DILocation(line: 1109, column: 24, scope: !4304)
!4522 = !DILocation(line: 1110, column: 31, scope: !4304)
!4523 = !DILocation(line: 1114, column: 31, scope: !4304)
!4524 = !DILocation(line: 1114, column: 48, scope: !4304)
!4525 = !DILocation(line: 1115, column: 13, scope: !4304)
!4526 = !DILocation(line: 1118, column: 7, scope: !4304)
!4527 = !DILocation(line: 1119, column: 9, scope: !4528)
!4528 = distinct !DILexicalBlock(scope: !4304, file: !428, line: 1119, column: 6)
!4529 = !DILocation(line: 1119, column: 6, scope: !4304)
!4530 = !DILocation(line: 1075, column: 29, scope: !4363)
!4531 = !DILocation(line: 1075, column: 21, scope: !4363)
!4532 = !DILocation(line: 0, scope: !4363)
!4533 = !DILocation(line: 1076, column: 29, scope: !4363)
!4534 = !DILocation(line: 1076, column: 21, scope: !4363)
!4535 = !DILocation(line: 1077, column: 38, scope: !4363)
!4536 = !DILocation(line: 1077, column: 21, scope: !4363)
!4537 = !DILocation(line: 1078, column: 16, scope: !4363)
!4538 = !DILocation(line: 1080, column: 19, scope: !4539)
!4539 = distinct !DILexicalBlock(scope: !4363, file: !428, line: 1080, column: 7)
!4540 = !DILocation(line: 1080, column: 34, scope: !4539)
!4541 = !DILocation(line: 1080, column: 22, scope: !4539)
!4542 = !DILocation(line: 1080, column: 7, scope: !4363)
!4543 = !DILocation(line: 1084, column: 7, scope: !4363)
!4544 = !DILocation(line: 1085, column: 8, scope: !4545)
!4545 = distinct !DILexicalBlock(scope: !4546, file: !428, line: 1084, column: 14)
!4546 = distinct !DILexicalBlock(scope: !4363, file: !428, line: 1084, column: 7)
!4547 = !DILocation(line: 1086, column: 5, scope: !4548)
!4548 = distinct !DILexicalBlock(scope: !4549, file: !428, line: 1086, column: 5)
!4549 = distinct !DILexicalBlock(scope: !4550, file: !428, line: 1086, column: 5)
!4550 = distinct !DILexicalBlock(scope: !4551, file: !428, line: 1085, column: 49)
!4551 = distinct !DILexicalBlock(scope: !4545, file: !428, line: 1085, column: 8)
!4552 = !DILocation(line: 1086, column: 5, scope: !4549)
!4553 = !DILocation(line: 1086, column: 5, scope: !4554)
!4554 = distinct !DILexicalBlock(scope: !4548, file: !428, line: 1086, column: 5)
!4555 = !DILocation(line: 1087, column: 25, scope: !4550)
!4556 = !DILocation(line: 1087, column: 5, scope: !4550)
!4557 = !DILocation(line: 1088, column: 4, scope: !4550)
!4558 = !DILocation(line: 1088, column: 15, scope: !4551)
!4559 = !DILocation(line: 1089, column: 5, scope: !4560)
!4560 = distinct !DILexicalBlock(scope: !4561, file: !428, line: 1089, column: 5)
!4561 = distinct !DILexicalBlock(scope: !4562, file: !428, line: 1089, column: 5)
!4562 = distinct !DILexicalBlock(scope: !4563, file: !428, line: 1088, column: 61)
!4563 = distinct !DILexicalBlock(scope: !4551, file: !428, line: 1088, column: 15)
!4564 = !DILocation(line: 1089, column: 5, scope: !4561)
!4565 = !DILocation(line: 1089, column: 5, scope: !4566)
!4566 = distinct !DILexicalBlock(scope: !4560, file: !428, line: 1089, column: 5)
!4567 = !DILocation(line: 1090, column: 26, scope: !4562)
!4568 = !DILocation(line: 1090, column: 5, scope: !4562)
!4569 = !DILocation(line: 1091, column: 4, scope: !4562)
!4570 = !DILocation(line: 1095, column: 8, scope: !4571)
!4571 = distinct !DILexicalBlock(scope: !4546, file: !428, line: 1094, column: 10)
!4572 = !DILocation(line: 1096, column: 5, scope: !4573)
!4573 = distinct !DILexicalBlock(scope: !4574, file: !428, line: 1096, column: 5)
!4574 = distinct !DILexicalBlock(scope: !4575, file: !428, line: 1096, column: 5)
!4575 = distinct !DILexicalBlock(scope: !4576, file: !428, line: 1095, column: 49)
!4576 = distinct !DILexicalBlock(scope: !4571, file: !428, line: 1095, column: 8)
!4577 = !DILocation(line: 1096, column: 5, scope: !4574)
!4578 = !DILocation(line: 1096, column: 5, scope: !4579)
!4579 = distinct !DILexicalBlock(scope: !4573, file: !428, line: 1096, column: 5)
!4580 = !DILocation(line: 1097, column: 25, scope: !4575)
!4581 = !DILocation(line: 1097, column: 5, scope: !4575)
!4582 = !DILocation(line: 1098, column: 4, scope: !4575)
!4583 = !DILocation(line: 1099, column: 5, scope: !4584)
!4584 = distinct !DILexicalBlock(scope: !4585, file: !428, line: 1099, column: 5)
!4585 = distinct !DILexicalBlock(scope: !4586, file: !428, line: 1099, column: 5)
!4586 = distinct !DILexicalBlock(scope: !4576, file: !428, line: 1098, column: 11)
!4587 = !DILocation(line: 1099, column: 5, scope: !4585)
!4588 = !DILocation(line: 1099, column: 5, scope: !4589)
!4589 = distinct !DILexicalBlock(scope: !4584, file: !428, line: 1099, column: 5)
!4590 = !DILocation(line: 1100, column: 26, scope: !4586)
!4591 = !DILocation(line: 1100, column: 5, scope: !4586)
!4592 = !DILocation(line: 1100, column: 30, scope: !4586)
!4593 = !DILocation(line: 1101, column: 26, scope: !4586)
!4594 = !DILocation(line: 1101, column: 5, scope: !4586)
!4595 = !DILocation(line: 0, scope: !4546)
!4596 = !DILocation(line: 1074, column: 32, scope: !4364)
!4597 = distinct !{!4597, !4513, !4598}
!4598 = !DILocation(line: 1104, column: 2, scope: !4361)
!4599 = !DILocation(line: 1124, column: 13, scope: !4304)
!4600 = !DILocation(line: 1127, column: 10, scope: !4304)
!4601 = !DILocation(line: 1127, column: 7, scope: !4304)
!4602 = !DILocation(line: 1128, column: 9, scope: !4603)
!4603 = distinct !DILexicalBlock(scope: !4304, file: !428, line: 1128, column: 6)
!4604 = !DILocation(line: 1128, column: 6, scope: !4304)
!4605 = !DILocation(line: 1134, column: 27, scope: !4304)
!4606 = !DILocation(line: 1136, column: 7, scope: !4304)
!4607 = !DILocation(line: 1137, column: 9, scope: !4608)
!4608 = distinct !DILexicalBlock(scope: !4304, file: !428, line: 1137, column: 6)
!4609 = !DILocation(line: 1137, column: 6, scope: !4304)
!4610 = !DILocation(line: 1131, column: 10, scope: !4304)
!4611 = !DILocation(line: 1140, column: 10, scope: !4304)
!4612 = !DILocation(line: 0, scope: !4371)
!4613 = !DILocation(line: 1143, column: 20, scope: !4374)
!4614 = !DILocation(line: 1143, column: 2, scope: !4371)
!4615 = !DILocation(line: 1144, column: 3, scope: !4373)
!4616 = !DILocation(line: 1144, column: 17, scope: !4373)
!4617 = !DILocation(line: 0, scope: !4373)
!4618 = !DILocation(line: 1144, column: 11, scope: !4373)
!4619 = !DILocation(line: 1145, column: 38, scope: !4373)
!4620 = !DILocation(line: 1145, column: 21, scope: !4373)
!4621 = !DILocation(line: 1146, column: 22, scope: !4373)
!4622 = !DILocation(line: 1146, column: 29, scope: !4373)
!4623 = !DILocation(line: 1148, column: 8, scope: !4373)
!4624 = !DILocation(line: 1149, column: 10, scope: !4625)
!4625 = distinct !DILexicalBlock(scope: !4373, file: !428, line: 1149, column: 7)
!4626 = !DILocation(line: 1149, column: 7, scope: !4373)
!4627 = !DILocation(line: 1154, column: 8, scope: !4373)
!4628 = !DILocation(line: 1155, column: 10, scope: !4629)
!4629 = distinct !DILexicalBlock(scope: !4373, file: !428, line: 1155, column: 7)
!4630 = !DILocation(line: 1155, column: 7, scope: !4373)
!4631 = !DILocation(line: 1159, column: 2, scope: !4374)
!4632 = !DILocation(line: 1152, column: 11, scope: !4373)
!4633 = !DILocation(line: 1158, column: 11, scope: !4373)
!4634 = !DILocation(line: 1143, column: 33, scope: !4374)
!4635 = distinct !{!4635, !4614, !4636}
!4636 = !DILocation(line: 1159, column: 2, scope: !4371)
!4637 = !DILocation(line: 1162, column: 8, scope: !4304)
!4638 = !DILocation(line: 1164, column: 2, scope: !4304)
!4639 = !DILocation(line: 1165, column: 1, scope: !4304)
!4640 = distinct !DISubprogram(name: "get_package_len", scope: !428, file: !428, line: 196, type: !4641, scopeLine: 197, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !414, retainedNodes: !4643)
!4641 = !DISubroutineType(types: !4642)
!4642 = !{!111, !104}
!4643 = !{!4644, !4645, !4646, !4647, !4648, !4649, !4650}
!4644 = !DILocalVariable(name: "packaged", arg: 1, scope: !4640, file: !428, line: 196, type: !104)
!4645 = !DILocalVariable(name: "buf", scope: !4640, file: !428, line: 200, type: !426)
!4646 = !DILocalVariable(name: "start", scope: !4640, file: !428, line: 201, type: !426)
!4647 = !DILocalVariable(name: "args_size", scope: !4640, file: !428, line: 202, type: !32)
!4648 = !DILocalVariable(name: "s_nbr", scope: !4640, file: !428, line: 202, type: !32)
!4649 = !DILocalVariable(name: "ros_nbr", scope: !4640, file: !428, line: 202, type: !32)
!4650 = !DILocalVariable(name: "i", scope: !4651, file: !428, line: 215, type: !105)
!4651 = distinct !DILexicalBlock(scope: !4640, file: !428, line: 215, column: 2)
!4652 = !DILocation(line: 0, scope: !4640)
!4653 = !DILocation(line: 198, column: 2, scope: !4654)
!4654 = distinct !DILexicalBlock(scope: !4655, file: !428, line: 198, column: 2)
!4655 = distinct !DILexicalBlock(scope: !4640, file: !428, line: 198, column: 2)
!4656 = !DILocation(line: 198, column: 2, scope: !4655)
!4657 = !DILocation(line: 198, column: 2, scope: !4658)
!4658 = distinct !DILexicalBlock(scope: !4654, file: !428, line: 198, column: 2)
!4659 = !DILocation(line: 204, column: 14, scope: !4640)
!4660 = !DILocation(line: 204, column: 21, scope: !4640)
!4661 = !DILocation(line: 205, column: 14, scope: !4640)
!4662 = !DILocation(line: 206, column: 14, scope: !4640)
!4663 = !DILocation(line: 209, column: 6, scope: !4640)
!4664 = !DILocation(line: 212, column: 6, scope: !4640)
!4665 = !DILocation(line: 0, scope: !4651)
!4666 = !DILocation(line: 215, column: 20, scope: !4667)
!4667 = distinct !DILexicalBlock(scope: !4651, file: !428, line: 215, column: 2)
!4668 = !DILocation(line: 215, column: 2, scope: !4651)
!4669 = !DILocation(line: 220, column: 33, scope: !4640)
!4670 = !DILocation(line: 220, column: 2, scope: !4640)
!4671 = !DILocation(line: 216, column: 6, scope: !4672)
!4672 = distinct !DILexicalBlock(scope: !4667, file: !428, line: 215, column: 34)
!4673 = !DILocation(line: 217, column: 10, scope: !4672)
!4674 = !DILocation(line: 217, column: 36, scope: !4672)
!4675 = !DILocation(line: 217, column: 7, scope: !4672)
!4676 = !DILocation(line: 215, column: 30, scope: !4667)
!4677 = distinct !{!4677, !4668, !4678}
!4678 = !DILocation(line: 218, column: 2, scope: !4651)
!4679 = distinct !DISubprogram(name: "append_string", scope: !428, file: !428, line: 223, type: !4680, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !414, retainedNodes: !4682)
!4680 = !DISubroutineType(types: !4681)
!4681 = !{!105, !4307, !104, !263, !183}
!4682 = !{!4683, !4684, !4685, !4686}
!4683 = !DILocalVariable(name: "cb", arg: 1, scope: !4679, file: !428, line: 223, type: !4307)
!4684 = !DILocalVariable(name: "ctx", arg: 2, scope: !4679, file: !428, line: 223, type: !104)
!4685 = !DILocalVariable(name: "str", arg: 3, scope: !4679, file: !428, line: 223, type: !263)
!4686 = !DILocalVariable(name: "strl", arg: 4, scope: !4679, file: !428, line: 223, type: !183)
!4687 = !DILocation(line: 0, scope: !4679)
!4688 = !DILocation(line: 225, column: 9, scope: !4689)
!4689 = distinct !DILexicalBlock(scope: !4679, file: !428, line: 225, column: 6)
!4690 = !DILocation(line: 225, column: 6, scope: !4679)
!4691 = !DILocation(line: 226, column: 14, scope: !4692)
!4692 = distinct !DILexicalBlock(scope: !4689, file: !428, line: 225, column: 18)
!4693 = !DILocation(line: 226, column: 12, scope: !4692)
!4694 = !DILocation(line: 226, column: 3, scope: !4692)
!4695 = !DILocation(line: 229, column: 14, scope: !4679)
!4696 = !DILocation(line: 229, column: 9, scope: !4679)
!4697 = !DILocation(line: 229, column: 27, scope: !4679)
!4698 = !DILocation(line: 229, column: 39, scope: !4679)
!4699 = !DILocation(line: 230, column: 17, scope: !4679)
!4700 = !DILocation(line: 230, column: 9, scope: !4679)
!4701 = !DILocation(line: 230, column: 2, scope: !4679)
!4702 = !DILocation(line: 231, column: 1, scope: !4679)
!4703 = distinct !DISubprogram(name: "arch_printk_char_out", scope: !440, file: !440, line: 45, type: !442, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !436, retainedNodes: !4704)
!4704 = !{!4705}
!4705 = !DILocalVariable(name: "c", arg: 1, scope: !4703, file: !440, line: 45, type: !105)
!4706 = !DILocation(line: 0, scope: !4703)
!4707 = !DILocation(line: 50, column: 2, scope: !4703)
!4708 = distinct !DISubprogram(name: "__printk_hook_install", scope: !440, file: !440, line: 63, type: !4709, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !436, retainedNodes: !4711)
!4709 = !DISubroutineType(types: !4710)
!4710 = !{null, !441}
!4711 = !{!4712}
!4712 = !DILocalVariable(name: "fn", arg: 1, scope: !4708, file: !440, line: 63, type: !441)
!4713 = !DILocation(line: 0, scope: !4708)
!4714 = !DILocation(line: 65, column: 12, scope: !4708)
!4715 = !DILocation(line: 66, column: 1, scope: !4708)
!4716 = distinct !DISubprogram(name: "__printk_get_hook", scope: !440, file: !440, line: 76, type: !4717, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !436, retainedNodes: !391)
!4717 = !DISubroutineType(types: !4718)
!4718 = !{!104}
!4719 = !DILocation(line: 78, column: 9, scope: !4716)
!4720 = !DILocation(line: 78, column: 2, scope: !4716)
!4721 = distinct !DISubprogram(name: "vprintk", scope: !440, file: !440, line: 113, type: !4722, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !436, retainedNodes: !4730)
!4722 = !DISubroutineType(types: !4723)
!4723 = !{null, !263, !4724}
!4724 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3793, line: 99, baseType: !4725)
!4725 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3793, line: 40, baseType: !4726)
!4726 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !440, baseType: !4727)
!4727 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4728)
!4728 = !{!4729}
!4729 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4727, file: !440, line: 79, baseType: !104, size: 32)
!4730 = !{!4731, !4732, !4733}
!4731 = !DILocalVariable(name: "fmt", arg: 1, scope: !4721, file: !440, line: 113, type: !263)
!4732 = !DILocalVariable(name: "ap", arg: 2, scope: !4721, file: !440, line: 113, type: !4724)
!4733 = !DILocalVariable(name: "ctx", scope: !4734, file: !440, line: 121, type: !4736)
!4734 = distinct !DILexicalBlock(scope: !4735, file: !440, line: 120, column: 27)
!4735 = distinct !DILexicalBlock(scope: !4721, file: !440, line: 120, column: 6)
!4736 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "buf_out_context", file: !440, line: 81, size: 32, elements: !4737)
!4737 = !{!4738, !4739}
!4738 = !DIDerivedType(tag: DW_TAG_member, name: "buf_count", scope: !4736, file: !440, line: 85, baseType: !32, size: 32)
!4739 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !4736, file: !440, line: 86, baseType: !4740, offset: 32)
!4740 = !DICompositeType(tag: DW_TAG_array_type, baseType: !103, elements: !2378)
!4741 = !DILocation(line: 0, scope: !4721)
!4742 = !DILocation(line: 148, column: 3, scope: !4743)
!4743 = distinct !DILexicalBlock(scope: !4735, file: !440, line: 138, column: 9)
!4744 = !DILocation(line: 155, column: 1, scope: !4721)
!4745 = distinct !DISubprogram(name: "char_out", scope: !440, file: !440, line: 107, type: !4746, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !436, retainedNodes: !4748)
!4746 = !DISubroutineType(types: !4747)
!4747 = !{!105, !105, !104}
!4748 = !{!4749, !4750}
!4749 = !DILocalVariable(name: "c", arg: 1, scope: !4745, file: !440, line: 107, type: !105)
!4750 = !DILocalVariable(name: "ctx_p", arg: 2, scope: !4745, file: !440, line: 107, type: !104)
!4751 = !DILocation(line: 0, scope: !4745)
!4752 = !DILocation(line: 110, column: 9, scope: !4745)
!4753 = !DILocation(line: 110, column: 2, scope: !4745)
!4754 = distinct !DISubprogram(name: "cbvprintf", scope: !3825, file: !3825, line: 739, type: !4755, scopeLine: 740, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !436, retainedNodes: !4757)
!4755 = !DISubroutineType(types: !4756)
!4756 = !{!105, !4175, !104, !263, !4724}
!4757 = !{!4758, !4759, !4760, !4761}
!4758 = !DILocalVariable(name: "out", arg: 1, scope: !4754, file: !3825, line: 739, type: !4175)
!4759 = !DILocalVariable(name: "ctx", arg: 2, scope: !4754, file: !3825, line: 739, type: !104)
!4760 = !DILocalVariable(name: "format", arg: 3, scope: !4754, file: !3825, line: 739, type: !263)
!4761 = !DILocalVariable(name: "ap", arg: 4, scope: !4754, file: !3825, line: 739, type: !4724)
!4762 = !DILocation(line: 0, scope: !4754)
!4763 = !DILocation(line: 741, column: 9, scope: !4754)
!4764 = !DILocation(line: 741, column: 2, scope: !4754)
!4765 = distinct !DISubprogram(name: "z_impl_k_str_out", scope: !440, file: !440, line: 157, type: !4766, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !436, retainedNodes: !4768)
!4766 = !DISubroutineType(types: !4767)
!4767 = !{null, !102, !111}
!4768 = !{!4769, !4770, !4771}
!4769 = !DILocalVariable(name: "c", arg: 1, scope: !4765, file: !440, line: 157, type: !102)
!4770 = !DILocalVariable(name: "n", arg: 2, scope: !4765, file: !440, line: 157, type: !111)
!4771 = !DILocalVariable(name: "i", scope: !4765, file: !440, line: 159, type: !111)
!4772 = !DILocation(line: 0, scope: !4765)
!4773 = !DILocation(line: 164, column: 16, scope: !4774)
!4774 = distinct !DILexicalBlock(scope: !4775, file: !440, line: 164, column: 2)
!4775 = distinct !DILexicalBlock(scope: !4765, file: !440, line: 164, column: 2)
!4776 = !DILocation(line: 164, column: 2, scope: !4775)
!4777 = !DILocation(line: 165, column: 3, scope: !4778)
!4778 = distinct !DILexicalBlock(scope: !4774, file: !440, line: 164, column: 26)
!4779 = !DILocation(line: 165, column: 13, scope: !4778)
!4780 = !DILocation(line: 164, column: 22, scope: !4774)
!4781 = distinct !{!4781, !4776, !4782}
!4782 = !DILocation(line: 166, column: 2, scope: !4775)
!4783 = !DILocation(line: 171, column: 1, scope: !4765)
!4784 = distinct !DISubprogram(name: "printk", scope: !440, file: !440, line: 203, type: !4785, scopeLine: 204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !436, retainedNodes: !4787)
!4785 = !DISubroutineType(types: !4786)
!4786 = !{null, !263, null}
!4787 = !{!4788, !4789}
!4788 = !DILocalVariable(name: "fmt", arg: 1, scope: !4784, file: !440, line: 203, type: !263)
!4789 = !DILocalVariable(name: "ap", scope: !4784, file: !440, line: 205, type: !4724)
!4790 = !DILocation(line: 0, scope: !4784)
!4791 = !DILocation(line: 205, column: 2, scope: !4784)
!4792 = !DILocation(line: 205, column: 10, scope: !4784)
!4793 = !DILocation(line: 207, column: 2, scope: !4784)
!4794 = !DILocation(line: 209, column: 2, scope: !4784)
!4795 = !DILocation(line: 211, column: 2, scope: !4784)
!4796 = !DILocation(line: 212, column: 1, scope: !4784)
!4797 = distinct !DISubprogram(name: "snprintk", scope: !440, file: !440, line: 239, type: !4798, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !436, retainedNodes: !4800)
!4798 = !DISubroutineType(types: !4799)
!4799 = !{!105, !102, !111, !263, null}
!4800 = !{!4801, !4802, !4803, !4804, !4805}
!4801 = !DILocalVariable(name: "str", arg: 1, scope: !4797, file: !440, line: 239, type: !102)
!4802 = !DILocalVariable(name: "size", arg: 2, scope: !4797, file: !440, line: 239, type: !111)
!4803 = !DILocalVariable(name: "fmt", arg: 3, scope: !4797, file: !440, line: 239, type: !263)
!4804 = !DILocalVariable(name: "ap", scope: !4797, file: !440, line: 241, type: !4724)
!4805 = !DILocalVariable(name: "ret", scope: !4797, file: !440, line: 242, type: !105)
!4806 = !DILocation(line: 0, scope: !4797)
!4807 = !DILocation(line: 241, column: 2, scope: !4797)
!4808 = !DILocation(line: 241, column: 10, scope: !4797)
!4809 = !DILocation(line: 244, column: 2, scope: !4797)
!4810 = !DILocation(line: 245, column: 8, scope: !4797)
!4811 = !DILocation(line: 246, column: 2, scope: !4797)
!4812 = !DILocation(line: 249, column: 1, scope: !4797)
!4813 = !DILocation(line: 248, column: 2, scope: !4797)
!4814 = distinct !DISubprogram(name: "vsnprintk", scope: !440, file: !440, line: 251, type: !4815, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !436, retainedNodes: !4817)
!4815 = !DISubroutineType(types: !4816)
!4816 = !{!105, !102, !111, !263, !4724}
!4817 = !{!4818, !4819, !4820, !4821, !4822}
!4818 = !DILocalVariable(name: "str", arg: 1, scope: !4814, file: !440, line: 251, type: !102)
!4819 = !DILocalVariable(name: "size", arg: 2, scope: !4814, file: !440, line: 251, type: !111)
!4820 = !DILocalVariable(name: "fmt", arg: 3, scope: !4814, file: !440, line: 251, type: !263)
!4821 = !DILocalVariable(name: "ap", arg: 4, scope: !4814, file: !440, line: 251, type: !4724)
!4822 = !DILocalVariable(name: "ctx", scope: !4814, file: !440, line: 253, type: !4823)
!4823 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "str_context", file: !440, line: 217, size: 96, elements: !4824)
!4824 = !{!4825, !4826, !4827}
!4825 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !4823, file: !440, line: 218, baseType: !102, size: 32)
!4826 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !4823, file: !440, line: 219, baseType: !105, size: 32, offset: 32)
!4827 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4823, file: !440, line: 220, baseType: !105, size: 32, offset: 64)
!4828 = !DILocation(line: 0, scope: !4814)
!4829 = !DILocation(line: 253, column: 2, scope: !4814)
!4830 = !DILocation(line: 253, column: 21, scope: !4814)
!4831 = !DILocation(line: 253, column: 27, scope: !4814)
!4832 = !DILocation(line: 255, column: 2, scope: !4814)
!4833 = !DILocation(line: 257, column: 10, scope: !4834)
!4834 = distinct !DILexicalBlock(scope: !4814, file: !440, line: 257, column: 6)
!4835 = !DILocation(line: 257, column: 22, scope: !4834)
!4836 = !DILocation(line: 257, column: 16, scope: !4834)
!4837 = !DILocation(line: 257, column: 6, scope: !4814)
!4838 = !DILocation(line: 258, column: 3, scope: !4839)
!4839 = distinct !DILexicalBlock(scope: !4834, file: !440, line: 257, column: 27)
!4840 = !DILocation(line: 258, column: 18, scope: !4839)
!4841 = !DILocation(line: 259, column: 2, scope: !4839)
!4842 = !DILocation(line: 262, column: 1, scope: !4814)
!4843 = !DILocation(line: 261, column: 2, scope: !4814)
!4844 = distinct !DISubprogram(name: "str_out", scope: !440, file: !440, line: 223, type: !4845, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !436, retainedNodes: !4848)
!4845 = !DISubroutineType(types: !4846)
!4846 = !{!105, !105, !4847}
!4847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4823, size: 32)
!4848 = !{!4849, !4850}
!4849 = !DILocalVariable(name: "c", arg: 1, scope: !4844, file: !440, line: 223, type: !105)
!4850 = !DILocalVariable(name: "ctx", arg: 2, scope: !4844, file: !440, line: 223, type: !4847)
!4851 = !DILocation(line: 0, scope: !4844)
!4852 = !DILocation(line: 225, column: 11, scope: !4853)
!4853 = distinct !DILexicalBlock(scope: !4844, file: !440, line: 225, column: 6)
!4854 = !DILocation(line: 225, column: 15, scope: !4853)
!4855 = !DILocation(line: 0, scope: !4853)
!4856 = !DILocation(line: 225, column: 23, scope: !4853)
!4857 = !DILocation(line: 225, column: 45, scope: !4853)
!4858 = !DILocation(line: 225, column: 37, scope: !4853)
!4859 = !DILocation(line: 225, column: 6, scope: !4844)
!4860 = !DILocation(line: 226, column: 8, scope: !4861)
!4861 = distinct !DILexicalBlock(scope: !4853, file: !440, line: 225, column: 50)
!4862 = !DILocation(line: 226, column: 13, scope: !4861)
!4863 = !DILocation(line: 227, column: 3, scope: !4861)
!4864 = !DILocation(line: 230, column: 29, scope: !4865)
!4865 = distinct !DILexicalBlock(scope: !4844, file: !440, line: 230, column: 6)
!4866 = !DILocation(line: 230, column: 17, scope: !4865)
!4867 = !DILocation(line: 230, column: 6, scope: !4844)
!4868 = !DILocation(line: 231, column: 22, scope: !4869)
!4869 = distinct !DILexicalBlock(scope: !4865, file: !440, line: 230, column: 34)
!4870 = !DILocation(line: 231, column: 3, scope: !4869)
!4871 = !DILocation(line: 231, column: 26, scope: !4869)
!4872 = !DILocation(line: 232, column: 2, scope: !4869)
!4873 = !DILocation(line: 233, column: 28, scope: !4874)
!4874 = distinct !DILexicalBlock(scope: !4865, file: !440, line: 232, column: 9)
!4875 = !DILocation(line: 233, column: 22, scope: !4874)
!4876 = !DILocation(line: 233, column: 3, scope: !4874)
!4877 = !DILocation(line: 233, column: 26, scope: !4874)
!4878 = !DILocation(line: 237, column: 1, scope: !4844)
!4879 = distinct !DISubprogram(name: "z_thread_entry", scope: !4880, file: !4880, line: 30, type: !4881, scopeLine: 32, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2346, retainedNodes: !4883)
!4880 = !DIFile(filename: "zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4881 = !DISubroutineType(types: !4882)
!4882 = !{null, !248, !104, !104, !104}
!4883 = !{!4884, !4885, !4886, !4887}
!4884 = !DILocalVariable(name: "entry", arg: 1, scope: !4879, file: !4880, line: 30, type: !248)
!4885 = !DILocalVariable(name: "p1", arg: 2, scope: !4879, file: !4880, line: 31, type: !104)
!4886 = !DILocalVariable(name: "p2", arg: 3, scope: !4879, file: !4880, line: 31, type: !104)
!4887 = !DILocalVariable(name: "p3", arg: 4, scope: !4879, file: !4880, line: 31, type: !104)
!4888 = !DILocation(line: 0, scope: !4879)
!4889 = !DILocation(line: 36, column: 2, scope: !4879)
!4890 = !DILocation(line: 38, column: 17, scope: !4879)
!4891 = !DILocation(line: 38, column: 2, scope: !4879)
!4892 = !DILocation(line: 45, column: 2, scope: !4879)
!4893 = distinct !DISubprogram(name: "k_current_get", scope: !122, file: !122, line: 530, type: !4894, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2346, retainedNodes: !391)
!4894 = !DISubroutineType(types: !4895)
!4895 = !{!4896}
!4896 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !127, line: 347, baseType: !4897)
!4897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4898, size: 32)
!4898 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !127, line: 245, size: 896, elements: !4899)
!4899 = !{!4900, !4958, !4970, !4971, !4972, !4973, !4988}
!4900 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !4898, file: !127, line: 247, baseType: !4901, size: 384)
!4901 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !127, line: 57, size: 384, elements: !4902)
!4902 = !{!4903, !4927, !4934, !4935, !4936, !4945, !4946, !4947}
!4903 = !DIDerivedType(tag: DW_TAG_member, scope: !4901, file: !127, line: 60, baseType: !4904, size: 64)
!4904 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4901, file: !127, line: 60, size: 64, elements: !4905)
!4905 = !{!4906, !4921}
!4906 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !4904, file: !127, line: 61, baseType: !4907, size: 64)
!4907 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !137, line: 49, baseType: !4908)
!4908 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !137, line: 37, size: 64, elements: !4909)
!4909 = !{!4910, !4916}
!4910 = !DIDerivedType(tag: DW_TAG_member, scope: !4908, file: !137, line: 38, baseType: !4911, size: 32)
!4911 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4908, file: !137, line: 38, size: 32, elements: !4912)
!4912 = !{!4913, !4915}
!4913 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !4911, file: !137, line: 39, baseType: !4914, size: 32)
!4914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4908, size: 32)
!4915 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4911, file: !137, line: 40, baseType: !4914, size: 32)
!4916 = !DIDerivedType(tag: DW_TAG_member, scope: !4908, file: !137, line: 42, baseType: !4917, size: 32, offset: 32)
!4917 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4908, file: !137, line: 42, size: 32, elements: !4918)
!4918 = !{!4919, !4920}
!4919 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !4917, file: !137, line: 43, baseType: !4914, size: 32)
!4920 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !4917, file: !137, line: 44, baseType: !4914, size: 32)
!4921 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !4904, file: !127, line: 62, baseType: !4922, size: 64)
!4922 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !153, line: 49, size: 64, elements: !4923)
!4923 = !{!4924}
!4924 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !4922, file: !153, line: 50, baseType: !4925, size: 64)
!4925 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4926, size: 64, elements: !158)
!4926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4922, size: 32)
!4927 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !4901, file: !127, line: 68, baseType: !4928, size: 32, offset: 64)
!4928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4929, size: 32)
!4929 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !163, line: 233, baseType: !4930)
!4930 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !163, line: 231, size: 64, elements: !4931)
!4931 = !{!4932}
!4932 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !4930, file: !163, line: 232, baseType: !4933, size: 64)
!4933 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !137, line: 48, baseType: !4908)
!4934 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !4901, file: !127, line: 71, baseType: !169, size: 8, offset: 96)
!4935 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !4901, file: !127, line: 74, baseType: !169, size: 8, offset: 104)
!4936 = !DIDerivedType(tag: DW_TAG_member, scope: !4901, file: !127, line: 90, baseType: !4937, size: 16, offset: 112)
!4937 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4901, file: !127, line: 90, size: 16, elements: !4938)
!4938 = !{!4939, !4944}
!4939 = !DIDerivedType(tag: DW_TAG_member, scope: !4937, file: !127, line: 91, baseType: !4940, size: 16)
!4940 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4937, file: !127, line: 91, size: 16, elements: !4941)
!4941 = !{!4942, !4943}
!4942 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !4940, file: !127, line: 96, baseType: !179, size: 8)
!4943 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !4940, file: !127, line: 97, baseType: !169, size: 8, offset: 8)
!4944 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !4937, file: !127, line: 100, baseType: !183, size: 16)
!4945 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !4901, file: !127, line: 107, baseType: !113, size: 32, offset: 128)
!4946 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !4901, file: !127, line: 127, baseType: !104, size: 32, offset: 160)
!4947 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !4901, file: !127, line: 131, baseType: !4948, size: 192, offset: 192)
!4948 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !163, line: 244, size: 192, elements: !4949)
!4949 = !{!4950, !4951, !4957}
!4950 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !4948, file: !163, line: 245, baseType: !4907, size: 64)
!4951 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !4948, file: !163, line: 246, baseType: !4952, size: 32, offset: 64)
!4952 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !163, line: 242, baseType: !4953)
!4953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4954, size: 32)
!4954 = !DISubroutineType(types: !4955)
!4955 = !{null, !4956}
!4956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4948, size: 32)
!4957 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !4948, file: !163, line: 249, baseType: !109, size: 64, offset: 128)
!4958 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !4898, file: !127, line: 250, baseType: !4959, size: 288, offset: 384)
!4959 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !200, line: 25, size: 288, elements: !4960)
!4960 = !{!4961, !4962, !4963, !4964, !4965, !4966, !4967, !4968, !4969}
!4961 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !4959, file: !200, line: 26, baseType: !113, size: 32)
!4962 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !4959, file: !200, line: 27, baseType: !113, size: 32, offset: 32)
!4963 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !4959, file: !200, line: 28, baseType: !113, size: 32, offset: 64)
!4964 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !4959, file: !200, line: 29, baseType: !113, size: 32, offset: 96)
!4965 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !4959, file: !200, line: 30, baseType: !113, size: 32, offset: 128)
!4966 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !4959, file: !200, line: 31, baseType: !113, size: 32, offset: 160)
!4967 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !4959, file: !200, line: 32, baseType: !113, size: 32, offset: 192)
!4968 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !4959, file: !200, line: 33, baseType: !113, size: 32, offset: 224)
!4969 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !4959, file: !200, line: 34, baseType: !113, size: 32, offset: 256)
!4970 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !4898, file: !127, line: 253, baseType: !104, size: 32, offset: 672)
!4971 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !4898, file: !127, line: 256, baseType: !4929, size: 64, offset: 704)
!4972 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !4898, file: !127, line: 294, baseType: !105, size: 32, offset: 768)
!4973 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !4898, file: !127, line: 325, baseType: !4974, size: 32, offset: 800)
!4974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4975, size: 32)
!4975 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !122, line: 5073, size: 192, elements: !4976)
!4976 = !{!4977, !4983, !4984}
!4977 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !4975, file: !122, line: 5074, baseType: !4978, size: 96)
!4978 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !220, line: 56, size: 96, elements: !4979)
!4979 = !{!4980, !4981, !4982}
!4980 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !4978, file: !220, line: 57, baseType: !223, size: 32)
!4981 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !4978, file: !220, line: 58, baseType: !104, size: 32, offset: 32)
!4982 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !4978, file: !220, line: 59, baseType: !111, size: 32, offset: 64)
!4983 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !4975, file: !122, line: 5075, baseType: !4929, size: 64, offset: 96)
!4984 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4975, file: !122, line: 5076, baseType: !4985, size: 32, offset: 160)
!4985 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !230, line: 43, size: 32, elements: !4986)
!4986 = !{!4987}
!4987 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !4985, file: !230, line: 52, baseType: !22, size: 32)
!4988 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !4898, file: !127, line: 343, baseType: !4989, size: 64, offset: 832)
!4989 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !200, line: 60, size: 64, elements: !4990)
!4990 = !{!4991, !4992}
!4991 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !4989, file: !200, line: 63, baseType: !113, size: 32)
!4992 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !4989, file: !200, line: 66, baseType: !113, size: 32, offset: 32)
!4993 = !DILocation(line: 535, column: 9, scope: !4893)
!4994 = !DILocation(line: 535, column: 2, scope: !4893)
!4995 = distinct !DISubprogram(name: "k_thread_abort", scope: !3239, file: !3239, line: 188, type: !4996, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2346, retainedNodes: !4998)
!4996 = !DISubroutineType(types: !4997)
!4997 = !{null, !4896}
!4998 = !{!4999}
!4999 = !DILocalVariable(name: "thread", arg: 1, scope: !4995, file: !3239, line: 188, type: !4896)
!5000 = !DILocation(line: 0, scope: !4995)
!5001 = !DILocation(line: 197, column: 2, scope: !5002)
!5002 = distinct !DILexicalBlock(scope: !4995, file: !3239, line: 197, column: 2)
!5003 = !{i64 2151041748}
!5004 = !DILocation(line: 198, column: 2, scope: !4995)
!5005 = !DILocation(line: 199, column: 1, scope: !4995)
!5006 = distinct !DISubprogram(name: "z_current_get", scope: !3239, file: !3239, line: 173, type: !4894, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2346, retainedNodes: !391)
!5007 = !DILocation(line: 180, column: 2, scope: !5008)
!5008 = distinct !DILexicalBlock(scope: !5006, file: !3239, line: 180, column: 2)
!5009 = !{i64 2151041680}
!5010 = !DILocation(line: 181, column: 9, scope: !5006)
!5011 = !DILocation(line: 181, column: 2, scope: !5006)
!5012 = distinct !DISubprogram(name: "sys_heap_free", scope: !5013, file: !5013, line: 163, type: !5014, scopeLine: 164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2348, retainedNodes: !5022)
!5013 = !DIFile(filename: "zephyr/lib/os/heap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5014 = !DISubroutineType(types: !5015)
!5015 = !{null, !5016, !104}
!5016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5017, size: 32)
!5017 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !220, line: 56, size: 96, elements: !5018)
!5018 = !{!5019, !5020, !5021}
!5019 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !5017, file: !220, line: 57, baseType: !2365, size: 32)
!5020 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !5017, file: !220, line: 58, baseType: !104, size: 32, offset: 32)
!5021 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !5017, file: !220, line: 59, baseType: !111, size: 32, offset: 64)
!5022 = !{!5023, !5024, !5025, !5026}
!5023 = !DILocalVariable(name: "heap", arg: 1, scope: !5012, file: !5013, line: 163, type: !5016)
!5024 = !DILocalVariable(name: "mem", arg: 2, scope: !5012, file: !5013, line: 163, type: !104)
!5025 = !DILocalVariable(name: "h", scope: !5012, file: !5013, line: 168, type: !2365)
!5026 = !DILocalVariable(name: "c", scope: !5012, file: !5013, line: 169, type: !2370)
!5027 = !DILocation(line: 0, scope: !5012)
!5028 = !DILocation(line: 165, column: 10, scope: !5029)
!5029 = distinct !DILexicalBlock(scope: !5012, file: !5013, line: 165, column: 6)
!5030 = !DILocation(line: 165, column: 6, scope: !5012)
!5031 = !DILocation(line: 168, column: 27, scope: !5012)
!5032 = !DILocation(line: 169, column: 16, scope: !5012)
!5033 = !{i32 0, i32 536870912}
!5034 = !DILocation(line: 175, column: 2, scope: !5035)
!5035 = distinct !DILexicalBlock(scope: !5036, file: !5013, line: 175, column: 2)
!5036 = distinct !DILexicalBlock(scope: !5012, file: !5013, line: 175, column: 2)
!5037 = !DILocation(line: 175, column: 2, scope: !5036)
!5038 = !DILocation(line: 175, column: 2, scope: !5039)
!5039 = distinct !DILexicalBlock(scope: !5035, file: !5013, line: 175, column: 2)
!5040 = !DILocation(line: 183, column: 2, scope: !5041)
!5041 = distinct !DILexicalBlock(scope: !5042, file: !5013, line: 183, column: 2)
!5042 = distinct !DILexicalBlock(scope: !5012, file: !5013, line: 183, column: 2)
!5043 = !DILocation(line: 183, column: 2, scope: !5042)
!5044 = !DILocation(line: 183, column: 2, scope: !5045)
!5045 = distinct !DILexicalBlock(scope: !5041, file: !5013, line: 183, column: 2)
!5046 = !DILocation(line: 187, column: 2, scope: !5012)
!5047 = !DILocation(line: 197, column: 2, scope: !5012)
!5048 = !DILocation(line: 198, column: 1, scope: !5012)
!5049 = distinct !DISubprogram(name: "mem_to_chunkid", scope: !5013, file: !5013, line: 157, type: !5050, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2348, retainedNodes: !5052)
!5050 = !DISubroutineType(types: !5051)
!5051 = !{!2370, !2365, !104}
!5052 = !{!5053, !5054, !5055, !5056}
!5053 = !DILocalVariable(name: "h", arg: 1, scope: !5049, file: !5013, line: 157, type: !2365)
!5054 = !DILocalVariable(name: "p", arg: 2, scope: !5049, file: !5013, line: 157, type: !104)
!5055 = !DILocalVariable(name: "mem", scope: !5049, file: !5013, line: 159, type: !426)
!5056 = !DILocalVariable(name: "base", scope: !5049, file: !5013, line: 159, type: !426)
!5057 = !DILocation(line: 0, scope: !5049)
!5058 = !DILocation(line: 159, column: 39, scope: !5049)
!5059 = !DILocation(line: 160, column: 14, scope: !5049)
!5060 = !DILocation(line: 160, column: 38, scope: !5049)
!5061 = !DILocation(line: 160, column: 46, scope: !5049)
!5062 = !DILocation(line: 160, column: 2, scope: !5049)
!5063 = distinct !DISubprogram(name: "chunk_used", scope: !2352, file: !2352, line: 137, type: !5064, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2348, retainedNodes: !5066)
!5064 = !DISubroutineType(types: !5065)
!5065 = !{!911, !2365, !2370}
!5066 = !{!5067, !5068}
!5067 = !DILocalVariable(name: "h", arg: 1, scope: !5063, file: !2352, line: 137, type: !2365)
!5068 = !DILocalVariable(name: "c", arg: 2, scope: !5063, file: !2352, line: 137, type: !2370)
!5069 = !DILocation(line: 0, scope: !5063)
!5070 = !DILocation(line: 139, column: 9, scope: !5063)
!5071 = !DILocation(line: 139, column: 42, scope: !5063)
!5072 = !DILocation(line: 139, column: 2, scope: !5063)
!5073 = distinct !DISubprogram(name: "right_chunk", scope: !2352, file: !2352, line: 204, type: !5074, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2348, retainedNodes: !5076)
!5074 = !DISubroutineType(types: !5075)
!5075 = !{!2370, !2365, !2370}
!5076 = !{!5077, !5078}
!5077 = !DILocalVariable(name: "h", arg: 1, scope: !5073, file: !2352, line: 204, type: !2365)
!5078 = !DILocalVariable(name: "c", arg: 2, scope: !5073, file: !2352, line: 204, type: !2370)
!5079 = !DILocation(line: 0, scope: !5073)
!5080 = !DILocation(line: 206, column: 13, scope: !5073)
!5081 = !DILocation(line: 206, column: 11, scope: !5073)
!5082 = !DILocation(line: 206, column: 2, scope: !5073)
!5083 = distinct !DISubprogram(name: "left_chunk", scope: !2352, file: !2352, line: 199, type: !5074, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2348, retainedNodes: !5084)
!5084 = !{!5085, !5086}
!5085 = !DILocalVariable(name: "h", arg: 1, scope: !5083, file: !2352, line: 199, type: !2365)
!5086 = !DILocalVariable(name: "c", arg: 2, scope: !5083, file: !2352, line: 199, type: !2370)
!5087 = !DILocation(line: 0, scope: !5083)
!5088 = !DILocation(line: 201, column: 13, scope: !5083)
!5089 = !DILocation(line: 201, column: 11, scope: !5083)
!5090 = !DILocation(line: 201, column: 2, scope: !5083)
!5091 = distinct !DISubprogram(name: "set_chunk_used", scope: !2352, file: !2352, line: 147, type: !5092, scopeLine: 148, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2348, retainedNodes: !5094)
!5092 = !DISubroutineType(types: !5093)
!5093 = !{null, !2365, !2370, !911}
!5094 = !{!5095, !5096, !5097, !5098, !5099}
!5095 = !DILocalVariable(name: "h", arg: 1, scope: !5091, file: !2352, line: 147, type: !2365)
!5096 = !DILocalVariable(name: "c", arg: 2, scope: !5091, file: !2352, line: 147, type: !2370)
!5097 = !DILocalVariable(name: "used", arg: 3, scope: !5091, file: !2352, line: 147, type: !911)
!5098 = !DILocalVariable(name: "buf", scope: !5091, file: !2352, line: 149, type: !2359)
!5099 = !DILocalVariable(name: "cmem", scope: !5091, file: !2352, line: 150, type: !104)
!5100 = !DILocation(line: 0, scope: !5091)
!5101 = !DILocation(line: 149, column: 22, scope: !5091)
!5102 = !DILocation(line: 0, scope: !5103)
!5103 = distinct !DILexicalBlock(scope: !5104, file: !2352, line: 159, column: 7)
!5104 = distinct !DILexicalBlock(scope: !5105, file: !2352, line: 158, column: 9)
!5105 = distinct !DILexicalBlock(scope: !5091, file: !2352, line: 152, column: 6)
!5106 = !DILocation(line: 159, column: 7, scope: !5104)
!5107 = !DILocation(line: 165, column: 1, scope: !5091)
!5108 = distinct !DISubprogram(name: "free_chunk", scope: !5013, file: !5013, line: 133, type: !5109, scopeLine: 134, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2348, retainedNodes: !5111)
!5109 = !DISubroutineType(types: !5110)
!5110 = !{null, !2365, !2370}
!5111 = !{!5112, !5113}
!5112 = !DILocalVariable(name: "h", arg: 1, scope: !5108, file: !5013, line: 133, type: !2365)
!5113 = !DILocalVariable(name: "c", arg: 2, scope: !5108, file: !5013, line: 133, type: !2370)
!5114 = !DILocation(line: 0, scope: !5108)
!5115 = !DILocation(line: 136, column: 21, scope: !5116)
!5116 = distinct !DILexicalBlock(scope: !5108, file: !5013, line: 136, column: 6)
!5117 = !DILocation(line: 136, column: 7, scope: !5116)
!5118 = !DILocation(line: 136, column: 6, scope: !5108)
!5119 = !DILocation(line: 137, column: 3, scope: !5120)
!5120 = distinct !DILexicalBlock(scope: !5116, file: !5013, line: 136, column: 41)
!5121 = !DILocation(line: 138, column: 22, scope: !5120)
!5122 = !DILocation(line: 138, column: 3, scope: !5120)
!5123 = !DILocation(line: 139, column: 2, scope: !5120)
!5124 = !DILocation(line: 142, column: 21, scope: !5125)
!5125 = distinct !DILexicalBlock(scope: !5108, file: !5013, line: 142, column: 6)
!5126 = !DILocation(line: 142, column: 7, scope: !5125)
!5127 = !DILocation(line: 142, column: 6, scope: !5108)
!5128 = !DILocation(line: 143, column: 3, scope: !5129)
!5129 = distinct !DILexicalBlock(scope: !5125, file: !5013, line: 142, column: 40)
!5130 = !DILocation(line: 144, column: 19, scope: !5129)
!5131 = !DILocation(line: 144, column: 3, scope: !5129)
!5132 = !DILocation(line: 145, column: 7, scope: !5129)
!5133 = !DILocation(line: 146, column: 2, scope: !5129)
!5134 = !DILocation(line: 148, column: 2, scope: !5108)
!5135 = !DILocation(line: 149, column: 1, scope: !5108)
!5136 = distinct !DISubprogram(name: "free_list_remove", scope: !5013, file: !5013, line: 60, type: !5109, scopeLine: 61, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2348, retainedNodes: !5137)
!5137 = !{!5138, !5139, !5140}
!5138 = !DILocalVariable(name: "h", arg: 1, scope: !5136, file: !5013, line: 60, type: !2365)
!5139 = !DILocalVariable(name: "c", arg: 2, scope: !5136, file: !5013, line: 60, type: !2370)
!5140 = !DILocalVariable(name: "bidx", scope: !5141, file: !5013, line: 63, type: !105)
!5141 = distinct !DILexicalBlock(scope: !5142, file: !5013, line: 62, column: 31)
!5142 = distinct !DILexicalBlock(scope: !5136, file: !5013, line: 62, column: 6)
!5143 = !DILocation(line: 0, scope: !5136)
!5144 = !DILocation(line: 63, column: 28, scope: !5141)
!5145 = !{i32 0, i32 32768}
!5146 = !DILocation(line: 63, column: 14, scope: !5141)
!5147 = !DILocation(line: 0, scope: !5141)
!5148 = !DILocation(line: 64, column: 3, scope: !5141)
!5149 = !DILocation(line: 66, column: 1, scope: !5136)
!5150 = distinct !DISubprogram(name: "merge_chunks", scope: !5013, file: !5013, line: 125, type: !5151, scopeLine: 126, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2348, retainedNodes: !5153)
!5151 = !DISubroutineType(types: !5152)
!5152 = !{null, !2365, !2370, !2370}
!5153 = !{!5154, !5155, !5156, !5157}
!5154 = !DILocalVariable(name: "h", arg: 1, scope: !5150, file: !5013, line: 125, type: !2365)
!5155 = !DILocalVariable(name: "lc", arg: 2, scope: !5150, file: !5013, line: 125, type: !2370)
!5156 = !DILocalVariable(name: "rc", arg: 3, scope: !5150, file: !5013, line: 125, type: !2370)
!5157 = !DILocalVariable(name: "newsz", scope: !5150, file: !5013, line: 127, type: !5158)
!5158 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunksz_t", file: !2352, line: 62, baseType: !113)
!5159 = !DILocation(line: 0, scope: !5150)
!5160 = !DILocation(line: 127, column: 20, scope: !5150)
!5161 = !DILocation(line: 127, column: 40, scope: !5150)
!5162 = !DILocation(line: 127, column: 38, scope: !5150)
!5163 = !DILocation(line: 129, column: 2, scope: !5150)
!5164 = !DILocation(line: 130, column: 25, scope: !5150)
!5165 = !DILocation(line: 130, column: 2, scope: !5150)
!5166 = !DILocation(line: 131, column: 1, scope: !5150)
!5167 = distinct !DISubprogram(name: "free_list_add", scope: !5013, file: !5013, line: 98, type: !5109, scopeLine: 99, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2348, retainedNodes: !5168)
!5168 = !{!5169, !5170, !5171}
!5169 = !DILocalVariable(name: "h", arg: 1, scope: !5167, file: !5013, line: 98, type: !2365)
!5170 = !DILocalVariable(name: "c", arg: 2, scope: !5167, file: !5013, line: 98, type: !2370)
!5171 = !DILocalVariable(name: "bidx", scope: !5172, file: !5013, line: 101, type: !105)
!5172 = distinct !DILexicalBlock(scope: !5173, file: !5013, line: 100, column: 31)
!5173 = distinct !DILexicalBlock(scope: !5167, file: !5013, line: 100, column: 6)
!5174 = !DILocation(line: 0, scope: !5167)
!5175 = !DILocation(line: 101, column: 28, scope: !5172)
!5176 = !DILocation(line: 101, column: 14, scope: !5172)
!5177 = !DILocation(line: 0, scope: !5172)
!5178 = !DILocation(line: 102, column: 3, scope: !5172)
!5179 = !DILocation(line: 104, column: 1, scope: !5167)
!5180 = distinct !DISubprogram(name: "chunk_size", scope: !2352, file: !2352, line: 142, type: !5181, scopeLine: 143, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2348, retainedNodes: !5183)
!5181 = !DISubroutineType(types: !5182)
!5182 = !{!5158, !2365, !2370}
!5183 = !{!5184, !5185}
!5184 = !DILocalVariable(name: "h", arg: 1, scope: !5180, file: !2352, line: 142, type: !2365)
!5185 = !DILocalVariable(name: "c", arg: 2, scope: !5180, file: !2352, line: 142, type: !2370)
!5186 = !DILocation(line: 0, scope: !5180)
!5187 = !DILocation(line: 144, column: 9, scope: !5180)
!5188 = !DILocation(line: 144, column: 42, scope: !5180)
!5189 = !DILocation(line: 144, column: 2, scope: !5180)
!5190 = distinct !DISubprogram(name: "bucket_idx", scope: !2352, file: !2352, line: 250, type: !5191, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2348, retainedNodes: !5193)
!5191 = !DISubroutineType(types: !5192)
!5192 = !{!105, !2365, !5158}
!5193 = !{!5194, !5195, !5196}
!5194 = !DILocalVariable(name: "h", arg: 1, scope: !5190, file: !2352, line: 250, type: !2365)
!5195 = !DILocalVariable(name: "sz", arg: 2, scope: !5190, file: !2352, line: 250, type: !5158)
!5196 = !DILocalVariable(name: "usable_sz", scope: !5190, file: !2352, line: 252, type: !32)
!5197 = !DILocation(line: 0, scope: !5190)
!5198 = !DILocation(line: 252, column: 32, scope: !5190)
!5199 = !DILocation(line: 252, column: 30, scope: !5190)
!5200 = !DILocation(line: 252, column: 50, scope: !5190)
!5201 = !DILocation(line: 253, column: 14, scope: !5190)
!5202 = !{i32 0, i32 33}
!5203 = !DILocation(line: 253, column: 12, scope: !5190)
!5204 = !DILocation(line: 253, column: 2, scope: !5190)
!5205 = distinct !DISubprogram(name: "free_list_add_bidx", scope: !5013, file: !5013, line: 68, type: !5206, scopeLine: 69, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2348, retainedNodes: !5208)
!5206 = !DISubroutineType(types: !5207)
!5207 = !{null, !2365, !2370, !105}
!5208 = !{!5209, !5210, !5211, !5212, !5214, !5217}
!5209 = !DILocalVariable(name: "h", arg: 1, scope: !5205, file: !5013, line: 68, type: !2365)
!5210 = !DILocalVariable(name: "c", arg: 2, scope: !5205, file: !5013, line: 68, type: !2370)
!5211 = !DILocalVariable(name: "bidx", arg: 3, scope: !5205, file: !5013, line: 68, type: !105)
!5212 = !DILocalVariable(name: "b", scope: !5205, file: !5013, line: 70, type: !5213)
!5213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2375, size: 32)
!5214 = !DILocalVariable(name: "second", scope: !5215, file: !5013, line: 84, type: !2370)
!5215 = distinct !DILexicalBlock(scope: !5216, file: !5013, line: 80, column: 9)
!5216 = distinct !DILexicalBlock(scope: !5205, file: !5013, line: 72, column: 6)
!5217 = !DILocalVariable(name: "first", scope: !5215, file: !5013, line: 85, type: !2370)
!5218 = !DILocation(line: 0, scope: !5205)
!5219 = !DILocation(line: 72, column: 9, scope: !5216)
!5220 = !DILocation(line: 72, column: 14, scope: !5216)
!5221 = !DILocation(line: 72, column: 6, scope: !5205)
!5222 = !DILocation(line: 76, column: 23, scope: !5223)
!5223 = distinct !DILexicalBlock(scope: !5216, file: !5013, line: 72, column: 21)
!5224 = !DILocation(line: 76, column: 6, scope: !5223)
!5225 = !DILocation(line: 76, column: 20, scope: !5223)
!5226 = !DILocation(line: 77, column: 11, scope: !5223)
!5227 = !DILocation(line: 78, column: 3, scope: !5223)
!5228 = !DILocation(line: 79, column: 3, scope: !5223)
!5229 = !DILocation(line: 80, column: 2, scope: !5223)
!5230 = !DILocation(line: 0, scope: !5215)
!5231 = !DILocation(line: 85, column: 21, scope: !5215)
!5232 = !{i32 0, i32 65536}
!5233 = !DILocation(line: 87, column: 3, scope: !5215)
!5234 = !DILocation(line: 88, column: 3, scope: !5215)
!5235 = !DILocation(line: 89, column: 3, scope: !5215)
!5236 = !DILocation(line: 90, column: 3, scope: !5215)
!5237 = !DILocation(line: 96, column: 1, scope: !5205)
!5238 = distinct !DISubprogram(name: "set_prev_free_chunk", scope: !2352, file: !2352, line: 187, type: !5151, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2348, retainedNodes: !5239)
!5239 = !{!5240, !5241, !5242}
!5240 = !DILocalVariable(name: "h", arg: 1, scope: !5238, file: !2352, line: 187, type: !2365)
!5241 = !DILocalVariable(name: "c", arg: 2, scope: !5238, file: !2352, line: 187, type: !2370)
!5242 = !DILocalVariable(name: "prev", arg: 3, scope: !5238, file: !2352, line: 188, type: !2370)
!5243 = !DILocation(line: 0, scope: !5238)
!5244 = !DILocation(line: 190, column: 2, scope: !5238)
!5245 = !DILocation(line: 191, column: 1, scope: !5238)
!5246 = distinct !DISubprogram(name: "set_next_free_chunk", scope: !2352, file: !2352, line: 193, type: !5151, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2348, retainedNodes: !5247)
!5247 = !{!5248, !5249, !5250}
!5248 = !DILocalVariable(name: "h", arg: 1, scope: !5246, file: !2352, line: 193, type: !2365)
!5249 = !DILocalVariable(name: "c", arg: 2, scope: !5246, file: !2352, line: 193, type: !2370)
!5250 = !DILocalVariable(name: "next", arg: 3, scope: !5246, file: !2352, line: 194, type: !2370)
!5251 = !DILocation(line: 0, scope: !5246)
!5252 = !DILocation(line: 196, column: 2, scope: !5246)
!5253 = !DILocation(line: 197, column: 1, scope: !5246)
!5254 = distinct !DISubprogram(name: "prev_free_chunk", scope: !2352, file: !2352, line: 177, type: !5074, scopeLine: 178, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2348, retainedNodes: !5255)
!5255 = !{!5256, !5257}
!5256 = !DILocalVariable(name: "h", arg: 1, scope: !5254, file: !2352, line: 177, type: !2365)
!5257 = !DILocalVariable(name: "c", arg: 2, scope: !5254, file: !2352, line: 177, type: !2370)
!5258 = !DILocation(line: 0, scope: !5254)
!5259 = !DILocation(line: 179, column: 9, scope: !5254)
!5260 = !DILocation(line: 179, column: 2, scope: !5254)
!5261 = distinct !DISubprogram(name: "chunk_field", scope: !2352, file: !2352, line: 107, type: !5262, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2348, retainedNodes: !5264)
!5262 = !DISubroutineType(types: !5263)
!5263 = !{!2370, !2365, !2370, !2351}
!5264 = !{!5265, !5266, !5267, !5268, !5269}
!5265 = !DILocalVariable(name: "h", arg: 1, scope: !5261, file: !2352, line: 107, type: !2365)
!5266 = !DILocalVariable(name: "c", arg: 2, scope: !5261, file: !2352, line: 107, type: !2370)
!5267 = !DILocalVariable(name: "f", arg: 3, scope: !5261, file: !2352, line: 108, type: !2351)
!5268 = !DILocalVariable(name: "buf", scope: !5261, file: !2352, line: 110, type: !2359)
!5269 = !DILocalVariable(name: "cmem", scope: !5261, file: !2352, line: 111, type: !104)
!5270 = !DILocation(line: 0, scope: !5261)
!5271 = !DILocation(line: 110, column: 22, scope: !5261)
!5272 = !DILocation(line: 111, column: 15, scope: !5261)
!5273 = !DILocation(line: 116, column: 11, scope: !5274)
!5274 = distinct !DILexicalBlock(scope: !5275, file: !2352, line: 115, column: 9)
!5275 = distinct !DILexicalBlock(scope: !5261, file: !2352, line: 113, column: 6)
!5276 = !DILocation(line: 116, column: 10, scope: !5274)
!5277 = !DILocation(line: 118, column: 1, scope: !5261)
!5278 = distinct !DISubprogram(name: "chunk_buf", scope: !2352, file: !2352, line: 101, type: !5279, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2348, retainedNodes: !5281)
!5279 = !DISubroutineType(types: !5280)
!5280 = !{!2359, !2365}
!5281 = !{!5282}
!5282 = !DILocalVariable(name: "h", arg: 1, scope: !5278, file: !2352, line: 101, type: !2365)
!5283 = !DILocation(line: 0, scope: !5278)
!5284 = !DILocation(line: 104, column: 9, scope: !5278)
!5285 = !DILocation(line: 104, column: 2, scope: !5278)
!5286 = distinct !DISubprogram(name: "chunk_set", scope: !2352, file: !2352, line: 120, type: !5287, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2348, retainedNodes: !5289)
!5287 = !DISubroutineType(types: !5288)
!5288 = !{null, !2365, !2370, !2351, !2370}
!5289 = !{!5290, !5291, !5292, !5293, !5294, !5295}
!5290 = !DILocalVariable(name: "h", arg: 1, scope: !5286, file: !2352, line: 120, type: !2365)
!5291 = !DILocalVariable(name: "c", arg: 2, scope: !5286, file: !2352, line: 120, type: !2370)
!5292 = !DILocalVariable(name: "f", arg: 3, scope: !5286, file: !2352, line: 121, type: !2351)
!5293 = !DILocalVariable(name: "val", arg: 4, scope: !5286, file: !2352, line: 121, type: !2370)
!5294 = !DILocalVariable(name: "buf", scope: !5286, file: !2352, line: 125, type: !2359)
!5295 = !DILocalVariable(name: "cmem", scope: !5286, file: !2352, line: 126, type: !104)
!5296 = !DILocation(line: 0, scope: !5286)
!5297 = !DILocation(line: 125, column: 22, scope: !5286)
!5298 = !DILocation(line: 126, column: 15, scope: !5286)
!5299 = !DILocation(line: 133, column: 27, scope: !5300)
!5300 = distinct !DILexicalBlock(scope: !5301, file: !2352, line: 131, column: 9)
!5301 = distinct !DILexicalBlock(scope: !5286, file: !2352, line: 128, column: 6)
!5302 = !DILocation(line: 133, column: 4, scope: !5300)
!5303 = !DILocation(line: 133, column: 3, scope: !5300)
!5304 = !DILocation(line: 133, column: 25, scope: !5300)
!5305 = !DILocation(line: 135, column: 1, scope: !5286)
!5306 = distinct !DISubprogram(name: "min_chunk_size", scope: !2352, file: !2352, line: 240, type: !5307, scopeLine: 241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2348, retainedNodes: !5309)
!5307 = !DISubroutineType(types: !5308)
!5308 = !{!5158, !2365}
!5309 = !{!5310}
!5310 = !DILocalVariable(name: "h", arg: 1, scope: !5306, file: !2352, line: 240, type: !2365)
!5311 = !DILocation(line: 0, scope: !5306)
!5312 = !DILocation(line: 242, column: 9, scope: !5306)
!5313 = !DILocation(line: 242, column: 2, scope: !5306)
!5314 = distinct !DISubprogram(name: "bytes_to_chunksz", scope: !2352, file: !2352, line: 235, type: !5315, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2348, retainedNodes: !5317)
!5315 = !DISubroutineType(types: !5316)
!5316 = !{!5158, !2365, !111}
!5317 = !{!5318, !5319}
!5318 = !DILocalVariable(name: "h", arg: 1, scope: !5314, file: !2352, line: 235, type: !2365)
!5319 = !DILocalVariable(name: "bytes", arg: 2, scope: !5314, file: !2352, line: 235, type: !111)
!5320 = !DILocation(line: 0, scope: !5314)
!5321 = !DILocation(line: 237, column: 39, scope: !5314)
!5322 = !DILocation(line: 237, column: 9, scope: !5314)
!5323 = !DILocation(line: 237, column: 2, scope: !5314)
!5324 = distinct !DISubprogram(name: "chunksz", scope: !2352, file: !2352, line: 230, type: !5325, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2348, retainedNodes: !5327)
!5325 = !DISubroutineType(types: !5326)
!5326 = !{!5158, !111}
!5327 = !{!5328}
!5328 = !DILocalVariable(name: "bytes", arg: 1, scope: !5324, file: !2352, line: 230, type: !111)
!5329 = !DILocation(line: 0, scope: !5324)
!5330 = !DILocation(line: 232, column: 29, scope: !5324)
!5331 = !DILocation(line: 232, column: 35, scope: !5324)
!5332 = !DILocation(line: 232, column: 2, scope: !5324)
!5333 = distinct !DISubprogram(name: "set_chunk_size", scope: !2352, file: !2352, line: 172, type: !5334, scopeLine: 173, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2348, retainedNodes: !5336)
!5334 = !DISubroutineType(types: !5335)
!5335 = !{null, !2365, !2370, !5158}
!5336 = !{!5337, !5338, !5339}
!5337 = !DILocalVariable(name: "h", arg: 1, scope: !5333, file: !2352, line: 172, type: !2365)
!5338 = !DILocalVariable(name: "c", arg: 2, scope: !5333, file: !2352, line: 172, type: !2370)
!5339 = !DILocalVariable(name: "size", arg: 3, scope: !5333, file: !2352, line: 172, type: !5158)
!5340 = !DILocation(line: 0, scope: !5333)
!5341 = !DILocation(line: 174, column: 38, scope: !5333)
!5342 = !DILocation(line: 174, column: 2, scope: !5333)
!5343 = !DILocation(line: 175, column: 1, scope: !5333)
!5344 = distinct !DISubprogram(name: "set_left_chunk_size", scope: !2352, file: !2352, line: 209, type: !5334, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2348, retainedNodes: !5345)
!5345 = !{!5346, !5347, !5348}
!5346 = !DILocalVariable(name: "h", arg: 1, scope: !5344, file: !2352, line: 209, type: !2365)
!5347 = !DILocalVariable(name: "c", arg: 2, scope: !5344, file: !2352, line: 209, type: !2370)
!5348 = !DILocalVariable(name: "size", arg: 3, scope: !5344, file: !2352, line: 210, type: !5158)
!5349 = !DILocation(line: 0, scope: !5344)
!5350 = !DILocation(line: 212, column: 2, scope: !5344)
!5351 = !DILocation(line: 213, column: 1, scope: !5344)
!5352 = distinct !DISubprogram(name: "free_list_remove_bidx", scope: !5013, file: !5013, line: 34, type: !5206, scopeLine: 35, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2348, retainedNodes: !5353)
!5353 = !{!5354, !5355, !5356, !5357, !5358, !5361}
!5354 = !DILocalVariable(name: "h", arg: 1, scope: !5352, file: !5013, line: 34, type: !2365)
!5355 = !DILocalVariable(name: "c", arg: 2, scope: !5352, file: !5013, line: 34, type: !2370)
!5356 = !DILocalVariable(name: "bidx", arg: 3, scope: !5352, file: !5013, line: 34, type: !105)
!5357 = !DILocalVariable(name: "b", scope: !5352, file: !5013, line: 36, type: !5213)
!5358 = !DILocalVariable(name: "first", scope: !5359, file: !5013, line: 47, type: !2370)
!5359 = distinct !DILexicalBlock(scope: !5360, file: !5013, line: 46, column: 9)
!5360 = distinct !DILexicalBlock(scope: !5352, file: !5013, line: 42, column: 6)
!5361 = !DILocalVariable(name: "second", scope: !5359, file: !5013, line: 48, type: !2370)
!5362 = !DILocation(line: 0, scope: !5352)
!5363 = !DILocation(line: 36, column: 29, scope: !5352)
!5364 = !DILocation(line: 42, column: 6, scope: !5360)
!5365 = !DILocation(line: 42, column: 28, scope: !5360)
!5366 = !DILocation(line: 42, column: 6, scope: !5352)
!5367 = !DILocation(line: 44, column: 24, scope: !5368)
!5368 = distinct !DILexicalBlock(scope: !5360, file: !5013, line: 42, column: 34)
!5369 = !DILocation(line: 44, column: 23, scope: !5368)
!5370 = !DILocation(line: 44, column: 6, scope: !5368)
!5371 = !DILocation(line: 44, column: 20, scope: !5368)
!5372 = !DILocation(line: 45, column: 6, scope: !5368)
!5373 = !DILocation(line: 45, column: 11, scope: !5368)
!5374 = !DILocation(line: 46, column: 2, scope: !5368)
!5375 = !DILocation(line: 47, column: 21, scope: !5359)
!5376 = !DILocation(line: 0, scope: !5359)
!5377 = !DILocation(line: 50, column: 6, scope: !5359)
!5378 = !DILocation(line: 50, column: 11, scope: !5359)
!5379 = !DILocation(line: 51, column: 3, scope: !5359)
!5380 = !DILocation(line: 52, column: 3, scope: !5359)
!5381 = !DILocation(line: 58, column: 1, scope: !5352)
!5382 = distinct !DISubprogram(name: "next_free_chunk", scope: !2352, file: !2352, line: 182, type: !5074, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2348, retainedNodes: !5383)
!5383 = !{!5384, !5385}
!5384 = !DILocalVariable(name: "h", arg: 1, scope: !5382, file: !2352, line: 182, type: !2365)
!5385 = !DILocalVariable(name: "c", arg: 2, scope: !5382, file: !2352, line: 182, type: !2370)
!5386 = !DILocation(line: 0, scope: !5382)
!5387 = !DILocation(line: 184, column: 9, scope: !5382)
!5388 = !DILocation(line: 184, column: 2, scope: !5382)
!5389 = distinct !DISubprogram(name: "sys_heap_usable_size", scope: !5013, file: !5013, line: 200, type: !5390, scopeLine: 201, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2348, retainedNodes: !5392)
!5390 = !DISubroutineType(types: !5391)
!5391 = !{!111, !5016, !104}
!5392 = !{!5393, !5394, !5395, !5396, !5397, !5398, !5399}
!5393 = !DILocalVariable(name: "heap", arg: 1, scope: !5389, file: !5013, line: 200, type: !5016)
!5394 = !DILocalVariable(name: "mem", arg: 2, scope: !5389, file: !5013, line: 200, type: !104)
!5395 = !DILocalVariable(name: "h", scope: !5389, file: !5013, line: 202, type: !2365)
!5396 = !DILocalVariable(name: "c", scope: !5389, file: !5013, line: 203, type: !2370)
!5397 = !DILocalVariable(name: "addr", scope: !5389, file: !5013, line: 204, type: !111)
!5398 = !DILocalVariable(name: "chunk_base", scope: !5389, file: !5013, line: 205, type: !111)
!5399 = !DILocalVariable(name: "chunk_sz", scope: !5389, file: !5013, line: 206, type: !111)
!5400 = !DILocation(line: 0, scope: !5389)
!5401 = !DILocation(line: 202, column: 27, scope: !5389)
!5402 = !DILocation(line: 203, column: 16, scope: !5389)
!5403 = !DILocation(line: 204, column: 16, scope: !5389)
!5404 = !DILocation(line: 205, column: 31, scope: !5389)
!5405 = !DILocation(line: 205, column: 22, scope: !5389)
!5406 = !DILocation(line: 206, column: 20, scope: !5389)
!5407 = !DILocation(line: 206, column: 37, scope: !5389)
!5408 = !DILocation(line: 208, column: 26, scope: !5389)
!5409 = !DILocation(line: 208, column: 18, scope: !5389)
!5410 = !DILocation(line: 208, column: 2, scope: !5389)
!5411 = distinct !DISubprogram(name: "sys_heap_alloc", scope: !5013, file: !5013, line: 263, type: !5412, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2348, retainedNodes: !5414)
!5412 = !DISubroutineType(types: !5413)
!5413 = !{!104, !5016, !111}
!5414 = !{!5415, !5416, !5417, !5418, !5419, !5420}
!5415 = !DILocalVariable(name: "heap", arg: 1, scope: !5411, file: !5013, line: 263, type: !5016)
!5416 = !DILocalVariable(name: "bytes", arg: 2, scope: !5411, file: !5013, line: 263, type: !111)
!5417 = !DILocalVariable(name: "h", scope: !5411, file: !5013, line: 265, type: !2365)
!5418 = !DILocalVariable(name: "mem", scope: !5411, file: !5013, line: 266, type: !104)
!5419 = !DILocalVariable(name: "chunk_sz", scope: !5411, file: !5013, line: 272, type: !5158)
!5420 = !DILocalVariable(name: "c", scope: !5411, file: !5013, line: 273, type: !2370)
!5421 = !DILocation(line: 0, scope: !5411)
!5422 = !DILocation(line: 265, column: 27, scope: !5411)
!5423 = !DILocation(line: 268, column: 12, scope: !5424)
!5424 = distinct !DILexicalBlock(scope: !5411, file: !5013, line: 268, column: 6)
!5425 = !DILocation(line: 268, column: 18, scope: !5424)
!5426 = !DILocation(line: 268, column: 21, scope: !5424)
!5427 = !DILocation(line: 268, column: 6, scope: !5411)
!5428 = !DILocation(line: 272, column: 23, scope: !5411)
!5429 = !DILocation(line: 273, column: 16, scope: !5411)
!5430 = !DILocation(line: 274, column: 8, scope: !5431)
!5431 = distinct !DILexicalBlock(scope: !5411, file: !5013, line: 274, column: 6)
!5432 = !DILocation(line: 274, column: 6, scope: !5411)
!5433 = !DILocation(line: 279, column: 6, scope: !5434)
!5434 = distinct !DILexicalBlock(scope: !5411, file: !5013, line: 279, column: 6)
!5435 = !DILocation(line: 279, column: 23, scope: !5434)
!5436 = !DILocation(line: 279, column: 6, scope: !5411)
!5437 = !DILocation(line: 280, column: 24, scope: !5438)
!5438 = distinct !DILexicalBlock(scope: !5434, file: !5013, line: 279, column: 35)
!5439 = !DILocation(line: 280, column: 3, scope: !5438)
!5440 = !DILocation(line: 281, column: 3, scope: !5438)
!5441 = !DILocation(line: 282, column: 2, scope: !5438)
!5442 = !DILocation(line: 284, column: 2, scope: !5411)
!5443 = !DILocation(line: 286, column: 8, scope: !5411)
!5444 = !DILocation(line: 298, column: 2, scope: !5411)
!5445 = !DILocation(line: 299, column: 1, scope: !5411)
!5446 = distinct !DISubprogram(name: "size_too_big", scope: !2352, file: !2352, line: 256, type: !5447, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2348, retainedNodes: !5449)
!5447 = !DISubroutineType(types: !5448)
!5448 = !{!911, !2365, !111}
!5449 = !{!5450, !5451}
!5450 = !DILocalVariable(name: "h", arg: 1, scope: !5446, file: !2352, line: 256, type: !2365)
!5451 = !DILocalVariable(name: "bytes", arg: 2, scope: !5446, file: !2352, line: 256, type: !111)
!5452 = !DILocation(line: 0, scope: !5446)
!5453 = !DILocation(line: 262, column: 16, scope: !5446)
!5454 = !DILocation(line: 262, column: 36, scope: !5446)
!5455 = !DILocation(line: 262, column: 30, scope: !5446)
!5456 = !DILocation(line: 262, column: 2, scope: !5446)
!5457 = distinct !DISubprogram(name: "alloc_chunk", scope: !5013, file: !5013, line: 211, type: !5458, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2348, retainedNodes: !5460)
!5458 = !DISubroutineType(types: !5459)
!5459 = !{!2370, !2365, !5158}
!5460 = !{!5461, !5462, !5463, !5464, !5465, !5468, !5469, !5471, !5472, !5475}
!5461 = !DILocalVariable(name: "h", arg: 1, scope: !5457, file: !5013, line: 211, type: !2365)
!5462 = !DILocalVariable(name: "sz", arg: 2, scope: !5457, file: !5013, line: 211, type: !5158)
!5463 = !DILocalVariable(name: "bi", scope: !5457, file: !5013, line: 213, type: !105)
!5464 = !DILocalVariable(name: "b", scope: !5457, file: !5013, line: 214, type: !5213)
!5465 = !DILocalVariable(name: "first", scope: !5466, file: !5013, line: 233, type: !2370)
!5466 = distinct !DILexicalBlock(scope: !5467, file: !5013, line: 232, column: 15)
!5467 = distinct !DILexicalBlock(scope: !5457, file: !5013, line: 232, column: 6)
!5468 = !DILocalVariable(name: "i", scope: !5466, file: !5013, line: 234, type: !105)
!5469 = !DILocalVariable(name: "c", scope: !5470, file: !5013, line: 236, type: !2370)
!5470 = distinct !DILexicalBlock(scope: !5466, file: !5013, line: 235, column: 6)
!5471 = !DILocalVariable(name: "bmask", scope: !5457, file: !5013, line: 249, type: !113)
!5472 = !DILocalVariable(name: "minbucket", scope: !5473, file: !5013, line: 252, type: !105)
!5473 = distinct !DILexicalBlock(scope: !5474, file: !5013, line: 251, column: 19)
!5474 = distinct !DILexicalBlock(scope: !5457, file: !5013, line: 251, column: 6)
!5475 = !DILocalVariable(name: "c", scope: !5473, file: !5013, line: 253, type: !2370)
!5476 = !DILocation(line: 0, scope: !5457)
!5477 = !DILocation(line: 213, column: 11, scope: !5457)
!5478 = !DILocation(line: 232, column: 9, scope: !5467)
!5479 = !DILocation(line: 232, column: 6, scope: !5467)
!5480 = !DILocation(line: 232, column: 6, scope: !5457)
!5481 = !DILocation(line: 236, column: 21, scope: !5470)
!5482 = !DILocation(line: 0, scope: !5466)
!5483 = !DILocation(line: 0, scope: !5470)
!5484 = !DILocation(line: 237, column: 8, scope: !5485)
!5485 = distinct !DILexicalBlock(scope: !5470, file: !5013, line: 237, column: 8)
!5486 = !DILocation(line: 237, column: 25, scope: !5485)
!5487 = !DILocation(line: 237, column: 8, scope: !5470)
!5488 = !DILocation(line: 238, column: 5, scope: !5489)
!5489 = distinct !DILexicalBlock(scope: !5485, file: !5013, line: 237, column: 32)
!5490 = !DILocation(line: 241, column: 14, scope: !5470)
!5491 = !DILocation(line: 241, column: 12, scope: !5470)
!5492 = !DILocation(line: 243, column: 12, scope: !5466)
!5493 = !DILocation(line: 243, column: 16, scope: !5466)
!5494 = distinct !{!5494, !5495, !5496}
!5495 = !DILocation(line: 235, column: 3, scope: !5466)
!5496 = !DILocation(line: 243, column: 35, scope: !5466)
!5497 = !DILocation(line: 249, column: 22, scope: !5457)
!5498 = !DILocation(line: 249, column: 39, scope: !5457)
!5499 = !DILocation(line: 249, column: 36, scope: !5457)
!5500 = !DILocation(line: 251, column: 12, scope: !5474)
!5501 = !DILocation(line: 251, column: 6, scope: !5457)
!5502 = !DILocation(line: 252, column: 19, scope: !5473)
!5503 = !DILocation(line: 0, scope: !5473)
!5504 = !DILocation(line: 253, column: 39, scope: !5473)
!5505 = !DILocation(line: 255, column: 3, scope: !5473)
!5506 = !DILocation(line: 261, column: 1, scope: !5457)
!5507 = distinct !DISubprogram(name: "split_chunks", scope: !5013, file: !5013, line: 109, type: !5151, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2348, retainedNodes: !5508)
!5508 = !{!5509, !5510, !5511, !5512, !5513, !5514}
!5509 = !DILocalVariable(name: "h", arg: 1, scope: !5507, file: !5013, line: 109, type: !2365)
!5510 = !DILocalVariable(name: "lc", arg: 2, scope: !5507, file: !5013, line: 109, type: !2370)
!5511 = !DILocalVariable(name: "rc", arg: 3, scope: !5507, file: !5013, line: 109, type: !2370)
!5512 = !DILocalVariable(name: "sz0", scope: !5507, file: !5013, line: 114, type: !5158)
!5513 = !DILocalVariable(name: "lsz", scope: !5507, file: !5013, line: 115, type: !5158)
!5514 = !DILocalVariable(name: "rsz", scope: !5507, file: !5013, line: 116, type: !5158)
!5515 = !DILocation(line: 0, scope: !5507)
!5516 = !DILocation(line: 114, column: 18, scope: !5507)
!5517 = !DILocation(line: 115, column: 21, scope: !5507)
!5518 = !DILocation(line: 116, column: 22, scope: !5507)
!5519 = !DILocation(line: 118, column: 2, scope: !5507)
!5520 = !DILocation(line: 119, column: 2, scope: !5507)
!5521 = !DILocation(line: 120, column: 2, scope: !5507)
!5522 = !DILocation(line: 121, column: 25, scope: !5507)
!5523 = !DILocation(line: 121, column: 2, scope: !5507)
!5524 = !DILocation(line: 122, column: 1, scope: !5507)
!5525 = distinct !DISubprogram(name: "chunk_mem", scope: !5013, file: !5013, line: 24, type: !5526, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2348, retainedNodes: !5528)
!5526 = !DISubroutineType(types: !5527)
!5527 = !{!104, !2365, !2370}
!5528 = !{!5529, !5530, !5531, !5532}
!5529 = !DILocalVariable(name: "h", arg: 1, scope: !5525, file: !5013, line: 24, type: !2365)
!5530 = !DILocalVariable(name: "c", arg: 2, scope: !5525, file: !5013, line: 24, type: !2370)
!5531 = !DILocalVariable(name: "buf", scope: !5525, file: !5013, line: 26, type: !2359)
!5532 = !DILocalVariable(name: "ret", scope: !5525, file: !5013, line: 27, type: !426)
!5533 = !DILocation(line: 0, scope: !5525)
!5534 = !DILocation(line: 26, column: 22, scope: !5525)
!5535 = !DILocation(line: 27, column: 38, scope: !5525)
!5536 = !DILocation(line: 31, column: 2, scope: !5525)
!5537 = distinct !DISubprogram(name: "sys_heap_aligned_alloc", scope: !5013, file: !5013, line: 301, type: !5538, scopeLine: 302, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2348, retainedNodes: !5540)
!5538 = !DISubroutineType(types: !5539)
!5539 = !{!104, !5016, !111, !111}
!5540 = !{!5541, !5542, !5543, !5544, !5545, !5546, !5547, !5548, !5549, !5550, !5551, !5552}
!5541 = !DILocalVariable(name: "heap", arg: 1, scope: !5537, file: !5013, line: 301, type: !5016)
!5542 = !DILocalVariable(name: "align", arg: 2, scope: !5537, file: !5013, line: 301, type: !111)
!5543 = !DILocalVariable(name: "bytes", arg: 3, scope: !5537, file: !5013, line: 301, type: !111)
!5544 = !DILocalVariable(name: "h", scope: !5537, file: !5013, line: 303, type: !2365)
!5545 = !DILocalVariable(name: "gap", scope: !5537, file: !5013, line: 304, type: !111)
!5546 = !DILocalVariable(name: "rew", scope: !5537, file: !5013, line: 304, type: !111)
!5547 = !DILocalVariable(name: "padded_sz", scope: !5537, file: !5013, line: 335, type: !5158)
!5548 = !DILocalVariable(name: "c0", scope: !5537, file: !5013, line: 336, type: !2370)
!5549 = !DILocalVariable(name: "mem", scope: !5537, file: !5013, line: 341, type: !426)
!5550 = !DILocalVariable(name: "end", scope: !5537, file: !5013, line: 345, type: !2359)
!5551 = !DILocalVariable(name: "c", scope: !5537, file: !5013, line: 348, type: !2370)
!5552 = !DILocalVariable(name: "c_end", scope: !5537, file: !5013, line: 349, type: !2370)
!5553 = !DILocation(line: 0, scope: !5537)
!5554 = !DILocation(line: 303, column: 27, scope: !5537)
!5555 = !DILocation(line: 313, column: 16, scope: !5537)
!5556 = !DILocation(line: 313, column: 14, scope: !5537)
!5557 = !DILocation(line: 314, column: 12, scope: !5558)
!5558 = distinct !DILexicalBlock(scope: !5537, file: !5013, line: 314, column: 6)
!5559 = !DILocation(line: 314, column: 6, scope: !5537)
!5560 = !DILocation(line: 315, column: 9, scope: !5561)
!5561 = distinct !DILexicalBlock(scope: !5558, file: !5013, line: 314, column: 20)
!5562 = !DILocation(line: 316, column: 9, scope: !5561)
!5563 = !DILocation(line: 318, column: 13, scope: !5564)
!5564 = distinct !DILexicalBlock(scope: !5565, file: !5013, line: 318, column: 7)
!5565 = distinct !DILexicalBlock(scope: !5558, file: !5013, line: 317, column: 9)
!5566 = !DILocation(line: 318, column: 7, scope: !5565)
!5567 = !DILocation(line: 319, column: 11, scope: !5568)
!5568 = distinct !DILexicalBlock(scope: !5564, file: !5013, line: 318, column: 39)
!5569 = !DILocation(line: 319, column: 4, scope: !5568)
!5570 = !DILocation(line: 0, scope: !5558)
!5571 = !DILocation(line: 324, column: 2, scope: !5572)
!5572 = distinct !DILexicalBlock(scope: !5573, file: !5013, line: 324, column: 2)
!5573 = distinct !DILexicalBlock(scope: !5537, file: !5013, line: 324, column: 2)
!5574 = !DILocation(line: 324, column: 2, scope: !5573)
!5575 = !DILocation(line: 324, column: 2, scope: !5576)
!5576 = distinct !DILexicalBlock(scope: !5572, file: !5013, line: 324, column: 2)
!5577 = !DILocation(line: 326, column: 12, scope: !5578)
!5578 = distinct !DILexicalBlock(scope: !5537, file: !5013, line: 326, column: 6)
!5579 = !DILocation(line: 326, column: 17, scope: !5578)
!5580 = !DILocation(line: 326, column: 20, scope: !5578)
!5581 = !DILocation(line: 326, column: 6, scope: !5537)
!5582 = !DILocation(line: 335, column: 50, scope: !5537)
!5583 = !DILocation(line: 335, column: 58, scope: !5537)
!5584 = !DILocation(line: 335, column: 24, scope: !5537)
!5585 = !DILocation(line: 336, column: 17, scope: !5537)
!5586 = !DILocation(line: 338, column: 9, scope: !5587)
!5587 = distinct !DILexicalBlock(scope: !5537, file: !5013, line: 338, column: 6)
!5588 = !DILocation(line: 338, column: 6, scope: !5537)
!5589 = !DILocation(line: 341, column: 17, scope: !5537)
!5590 = !DILocation(line: 344, column: 20, scope: !5537)
!5591 = !DILocation(line: 344, column: 8, scope: !5537)
!5592 = !DILocation(line: 344, column: 47, scope: !5537)
!5593 = !DILocation(line: 345, column: 39, scope: !5537)
!5594 = !DILocation(line: 348, column: 16, scope: !5537)
!5595 = !DILocation(line: 349, column: 26, scope: !5537)
!5596 = !DILocation(line: 349, column: 24, scope: !5537)
!5597 = !DILocation(line: 353, column: 8, scope: !5598)
!5598 = distinct !DILexicalBlock(scope: !5537, file: !5013, line: 353, column: 6)
!5599 = !DILocation(line: 353, column: 6, scope: !5537)
!5600 = !DILocation(line: 354, column: 3, scope: !5601)
!5601 = distinct !DILexicalBlock(scope: !5598, file: !5013, line: 353, column: 14)
!5602 = !DILocation(line: 355, column: 3, scope: !5601)
!5603 = !DILocation(line: 356, column: 2, scope: !5601)
!5604 = !DILocation(line: 359, column: 6, scope: !5605)
!5605 = distinct !DILexicalBlock(scope: !5537, file: !5013, line: 359, column: 6)
!5606 = !DILocation(line: 359, column: 24, scope: !5605)
!5607 = !DILocation(line: 359, column: 6, scope: !5537)
!5608 = !DILocation(line: 360, column: 3, scope: !5609)
!5609 = distinct !DILexicalBlock(scope: !5605, file: !5013, line: 359, column: 33)
!5610 = !DILocation(line: 361, column: 3, scope: !5609)
!5611 = !DILocation(line: 362, column: 2, scope: !5609)
!5612 = !DILocation(line: 364, column: 2, scope: !5537)
!5613 = !DILocation(line: 377, column: 1, scope: !5537)
!5614 = distinct !DISubprogram(name: "sys_heap_aligned_realloc", scope: !5013, file: !5013, line: 379, type: !5615, scopeLine: 381, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2348, retainedNodes: !5617)
!5615 = !DISubroutineType(types: !5616)
!5616 = !{!104, !5016, !104, !111, !111}
!5617 = !{!5618, !5619, !5620, !5621, !5622, !5623, !5624, !5625, !5626, !5627, !5633, !5634}
!5618 = !DILocalVariable(name: "heap", arg: 1, scope: !5614, file: !5013, line: 379, type: !5016)
!5619 = !DILocalVariable(name: "ptr", arg: 2, scope: !5614, file: !5013, line: 379, type: !104)
!5620 = !DILocalVariable(name: "align", arg: 3, scope: !5614, file: !5013, line: 380, type: !111)
!5621 = !DILocalVariable(name: "bytes", arg: 4, scope: !5614, file: !5013, line: 380, type: !111)
!5622 = !DILocalVariable(name: "h", scope: !5614, file: !5013, line: 382, type: !2365)
!5623 = !DILocalVariable(name: "c", scope: !5614, file: !5013, line: 399, type: !2370)
!5624 = !DILocalVariable(name: "rc", scope: !5614, file: !5013, line: 400, type: !2370)
!5625 = !DILocalVariable(name: "align_gap", scope: !5614, file: !5013, line: 401, type: !111)
!5626 = !DILocalVariable(name: "chunks_need", scope: !5614, file: !5013, line: 402, type: !5158)
!5627 = !DILocalVariable(name: "split_size", scope: !5628, file: !5013, line: 435, type: !5158)
!5628 = distinct !DILexicalBlock(scope: !5629, file: !5013, line: 433, column: 61)
!5629 = distinct !DILexicalBlock(scope: !5630, file: !5013, line: 432, column: 13)
!5630 = distinct !DILexicalBlock(scope: !5631, file: !5013, line: 409, column: 13)
!5631 = distinct !DILexicalBlock(scope: !5632, file: !5013, line: 406, column: 13)
!5632 = distinct !DILexicalBlock(scope: !5614, file: !5013, line: 404, column: 6)
!5633 = !DILocalVariable(name: "ptr2", scope: !5614, file: !5013, line: 474, type: !104)
!5634 = !DILocalVariable(name: "prev_size", scope: !5635, file: !5013, line: 477, type: !111)
!5635 = distinct !DILexicalBlock(scope: !5636, file: !5013, line: 476, column: 20)
!5636 = distinct !DILexicalBlock(scope: !5614, file: !5013, line: 476, column: 6)
!5637 = !DILocation(line: 0, scope: !5614)
!5638 = !DILocation(line: 382, column: 27, scope: !5614)
!5639 = !DILocation(line: 385, column: 10, scope: !5640)
!5640 = distinct !DILexicalBlock(scope: !5614, file: !5013, line: 385, column: 6)
!5641 = !DILocation(line: 385, column: 6, scope: !5614)
!5642 = !DILocation(line: 386, column: 10, scope: !5643)
!5643 = distinct !DILexicalBlock(scope: !5640, file: !5013, line: 385, column: 19)
!5644 = !DILocation(line: 386, column: 3, scope: !5643)
!5645 = !DILocation(line: 388, column: 12, scope: !5646)
!5646 = distinct !DILexicalBlock(scope: !5614, file: !5013, line: 388, column: 6)
!5647 = !DILocation(line: 388, column: 6, scope: !5614)
!5648 = !DILocation(line: 389, column: 3, scope: !5649)
!5649 = distinct !DILexicalBlock(scope: !5646, file: !5013, line: 388, column: 18)
!5650 = !DILocation(line: 390, column: 3, scope: !5649)
!5651 = !DILocation(line: 393, column: 2, scope: !5652)
!5652 = distinct !DILexicalBlock(scope: !5653, file: !5013, line: 393, column: 2)
!5653 = distinct !DILexicalBlock(scope: !5614, file: !5013, line: 393, column: 2)
!5654 = !DILocation(line: 393, column: 2, scope: !5653)
!5655 = !DILocation(line: 393, column: 2, scope: !5656)
!5656 = distinct !DILexicalBlock(scope: !5652, file: !5013, line: 393, column: 2)
!5657 = !DILocation(line: 395, column: 6, scope: !5658)
!5658 = distinct !DILexicalBlock(scope: !5614, file: !5013, line: 395, column: 6)
!5659 = !DILocation(line: 395, column: 6, scope: !5614)
!5660 = !DILocation(line: 399, column: 16, scope: !5614)
!5661 = !DILocation(line: 400, column: 17, scope: !5614)
!5662 = !DILocation(line: 401, column: 49, scope: !5614)
!5663 = !DILocation(line: 401, column: 36, scope: !5614)
!5664 = !DILocation(line: 402, column: 52, scope: !5614)
!5665 = !DILocation(line: 402, column: 26, scope: !5614)
!5666 = !DILocation(line: 404, column: 6, scope: !5632)
!5667 = !DILocation(line: 404, column: 12, scope: !5632)
!5668 = !DILocation(line: 406, column: 13, scope: !5631)
!5669 = !DILocation(line: 406, column: 30, scope: !5631)
!5670 = !DILocation(line: 406, column: 13, scope: !5632)
!5671 = !DILocation(line: 409, column: 30, scope: !5630)
!5672 = !DILocation(line: 409, column: 13, scope: !5631)
!5673 = !DILocation(line: 420, column: 24, scope: !5674)
!5674 = distinct !DILexicalBlock(scope: !5630, file: !5013, line: 409, column: 45)
!5675 = !DILocation(line: 420, column: 3, scope: !5674)
!5676 = !DILocation(line: 421, column: 3, scope: !5674)
!5677 = !DILocation(line: 422, column: 3, scope: !5674)
!5678 = !DILocation(line: 431, column: 3, scope: !5674)
!5679 = !DILocation(line: 432, column: 14, scope: !5629)
!5680 = !DILocation(line: 432, column: 32, scope: !5629)
!5681 = !DILocation(line: 433, column: 26, scope: !5629)
!5682 = !DILocation(line: 433, column: 24, scope: !5629)
!5683 = !DILocation(line: 433, column: 44, scope: !5629)
!5684 = !DILocation(line: 432, column: 13, scope: !5630)
!5685 = !DILocation(line: 435, column: 38, scope: !5628)
!5686 = !DILocation(line: 0, scope: !5628)
!5687 = !DILocation(line: 445, column: 3, scope: !5628)
!5688 = !DILocation(line: 447, column: 20, scope: !5689)
!5689 = distinct !DILexicalBlock(scope: !5628, file: !5013, line: 447, column: 7)
!5690 = !DILocation(line: 447, column: 18, scope: !5689)
!5691 = !DILocation(line: 447, column: 7, scope: !5628)
!5692 = !DILocation(line: 448, column: 27, scope: !5693)
!5693 = distinct !DILexicalBlock(scope: !5689, file: !5013, line: 447, column: 39)
!5694 = !DILocation(line: 448, column: 4, scope: !5693)
!5695 = !DILocation(line: 449, column: 4, scope: !5693)
!5696 = !DILocation(line: 450, column: 3, scope: !5693)
!5697 = !DILocation(line: 452, column: 3, scope: !5628)
!5698 = !DILocation(line: 453, column: 3, scope: !5628)
!5699 = !DILocation(line: 474, column: 15, scope: !5614)
!5700 = !DILocation(line: 476, column: 11, scope: !5636)
!5701 = !DILocation(line: 476, column: 6, scope: !5614)
!5702 = !DILocation(line: 477, column: 42, scope: !5635)
!5703 = !DILocation(line: 477, column: 22, scope: !5635)
!5704 = !DILocation(line: 477, column: 60, scope: !5635)
!5705 = !DILocation(line: 0, scope: !5635)
!5706 = !DILocation(line: 479, column: 21, scope: !5635)
!5707 = !DILocation(line: 479, column: 3, scope: !5635)
!5708 = !DILocation(line: 480, column: 3, scope: !5635)
!5709 = !DILocation(line: 481, column: 2, scope: !5635)
!5710 = !DILocation(line: 483, column: 1, scope: !5614)
!5711 = distinct !DISubprogram(name: "chunksz_to_bytes", scope: !2352, file: !2352, line: 245, type: !5712, scopeLine: 246, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2348, retainedNodes: !5714)
!5712 = !DISubroutineType(types: !5713)
!5713 = !{!111, !2365, !5158}
!5714 = !{!5715, !5716}
!5715 = !DILocalVariable(name: "h", arg: 1, scope: !5711, file: !2352, line: 245, type: !2365)
!5716 = !DILocalVariable(name: "chunksz_in", arg: 2, scope: !5711, file: !2352, line: 245, type: !5158)
!5717 = !DILocation(line: 0, scope: !5711)
!5718 = !DILocation(line: 247, column: 20, scope: !5711)
!5719 = !DILocation(line: 247, column: 33, scope: !5711)
!5720 = !DILocation(line: 247, column: 2, scope: !5711)
!5721 = distinct !DISubprogram(name: "sys_heap_init", scope: !5013, file: !5013, line: 485, type: !5722, scopeLine: 486, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2348, retainedNodes: !5724)
!5722 = !DISubroutineType(types: !5723)
!5723 = !{null, !5016, !104, !111}
!5724 = !{!5725, !5726, !5727, !5728, !5729, !5730, !5731, !5732, !5733, !5734}
!5725 = !DILocalVariable(name: "heap", arg: 1, scope: !5721, file: !5013, line: 485, type: !5016)
!5726 = !DILocalVariable(name: "mem", arg: 2, scope: !5721, file: !5013, line: 485, type: !104)
!5727 = !DILocalVariable(name: "bytes", arg: 3, scope: !5721, file: !5013, line: 485, type: !111)
!5728 = !DILocalVariable(name: "addr", scope: !5721, file: !5013, line: 502, type: !22)
!5729 = !DILocalVariable(name: "end", scope: !5721, file: !5013, line: 503, type: !22)
!5730 = !DILocalVariable(name: "heap_sz", scope: !5721, file: !5013, line: 504, type: !5158)
!5731 = !DILocalVariable(name: "h", scope: !5721, file: !5013, line: 509, type: !2365)
!5732 = !DILocalVariable(name: "nb_buckets", scope: !5721, file: !5013, line: 520, type: !105)
!5733 = !DILocalVariable(name: "chunk0_size", scope: !5721, file: !5013, line: 521, type: !5158)
!5734 = !DILocalVariable(name: "i", scope: !5735, file: !5013, line: 526, type: !105)
!5735 = distinct !DILexicalBlock(scope: !5721, file: !5013, line: 526, column: 2)
!5736 = !DILocation(line: 0, scope: !5721)
!5737 = !DILocation(line: 491, column: 3, scope: !5738)
!5738 = distinct !DILexicalBlock(scope: !5739, file: !5013, line: 491, column: 3)
!5739 = distinct !DILexicalBlock(scope: !5740, file: !5013, line: 491, column: 3)
!5740 = distinct !DILexicalBlock(scope: !5741, file: !5013, line: 489, column: 46)
!5741 = distinct !DILexicalBlock(scope: !5721, file: !5013, line: 489, column: 6)
!5742 = !DILocation(line: 491, column: 3, scope: !5739)
!5743 = !DILocation(line: 491, column: 3, scope: !5744)
!5744 = distinct !DILexicalBlock(scope: !5738, file: !5013, line: 491, column: 3)
!5745 = !DILocation(line: 498, column: 2, scope: !5746)
!5746 = distinct !DILexicalBlock(scope: !5747, file: !5013, line: 498, column: 2)
!5747 = distinct !DILexicalBlock(scope: !5721, file: !5013, line: 498, column: 2)
!5748 = !DILocation(line: 498, column: 2, scope: !5747)
!5749 = !DILocation(line: 498, column: 2, scope: !5750)
!5750 = distinct !DILexicalBlock(scope: !5746, file: !5013, line: 498, column: 2)
!5751 = !DILocation(line: 499, column: 8, scope: !5721)
!5752 = !DILocation(line: 502, column: 19, scope: !5721)
!5753 = !DILocation(line: 503, column: 18, scope: !5721)
!5754 = !DILocation(line: 504, column: 27, scope: !5721)
!5755 = !DILocation(line: 504, column: 35, scope: !5721)
!5756 = !DILocation(line: 507, column: 2, scope: !5757)
!5757 = distinct !DILexicalBlock(scope: !5758, file: !5013, line: 507, column: 2)
!5758 = distinct !DILexicalBlock(scope: !5721, file: !5013, line: 507, column: 2)
!5759 = !DILocation(line: 507, column: 2, scope: !5758)
!5760 = !DILocation(line: 507, column: 2, scope: !5761)
!5761 = distinct !DILexicalBlock(scope: !5757, file: !5013, line: 507, column: 2)
!5762 = !DILocation(line: 509, column: 21, scope: !5721)
!5763 = !DILocation(line: 510, column: 8, scope: !5721)
!5764 = !DILocation(line: 510, column: 13, scope: !5721)
!5765 = !DILocation(line: 511, column: 5, scope: !5721)
!5766 = !DILocation(line: 511, column: 15, scope: !5721)
!5767 = !DILocation(line: 512, column: 5, scope: !5721)
!5768 = !DILocation(line: 512, column: 19, scope: !5721)
!5769 = !DILocation(line: 520, column: 19, scope: !5721)
!5770 = !DILocation(line: 522, column: 21, scope: !5721)
!5771 = !DILocation(line: 521, column: 56, scope: !5721)
!5772 = !DILocation(line: 521, column: 26, scope: !5721)
!5773 = !DILocation(line: 524, column: 2, scope: !5774)
!5774 = distinct !DILexicalBlock(scope: !5775, file: !5013, line: 524, column: 2)
!5775 = distinct !DILexicalBlock(scope: !5721, file: !5013, line: 524, column: 2)
!5776 = !DILocation(line: 524, column: 2, scope: !5775)
!5777 = !DILocation(line: 0, scope: !5735)
!5778 = !DILocation(line: 526, column: 20, scope: !5779)
!5779 = distinct !DILexicalBlock(scope: !5735, file: !5013, line: 526, column: 2)
!5780 = !DILocation(line: 526, column: 2, scope: !5735)
!5781 = !DILocation(line: 524, column: 2, scope: !5782)
!5782 = distinct !DILexicalBlock(scope: !5774, file: !5013, line: 524, column: 2)
!5783 = !DILocation(line: 531, column: 2, scope: !5721)
!5784 = !DILocation(line: 532, column: 2, scope: !5721)
!5785 = !DILocation(line: 533, column: 2, scope: !5721)
!5786 = !DILocation(line: 536, column: 41, scope: !5721)
!5787 = !DILocation(line: 536, column: 2, scope: !5721)
!5788 = !DILocation(line: 537, column: 2, scope: !5721)
!5789 = !DILocation(line: 540, column: 2, scope: !5721)
!5790 = !DILocation(line: 541, column: 2, scope: !5721)
!5791 = !DILocation(line: 542, column: 2, scope: !5721)
!5792 = !DILocation(line: 544, column: 2, scope: !5721)
!5793 = !DILocation(line: 545, column: 1, scope: !5721)
!5794 = !DILocation(line: 527, column: 17, scope: !5795)
!5795 = distinct !DILexicalBlock(scope: !5779, file: !5013, line: 526, column: 39)
!5796 = !DILocation(line: 527, column: 22, scope: !5795)
!5797 = !DILocation(line: 526, column: 35, scope: !5779)
!5798 = distinct !{!5798, !5780, !5799}
!5799 = !DILocation(line: 528, column: 2, scope: !5735)
!5800 = distinct !DISubprogram(name: "z_cbvprintf_impl", scope: !2385, file: !2385, line: 1338, type: !5801, scopeLine: 1340, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2381, retainedNodes: !5809)
!5801 = !DISubroutineType(types: !5802)
!5802 = !{!105, !4175, !104, !263, !5803, !113}
!5803 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3793, line: 99, baseType: !5804)
!5804 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3793, line: 40, baseType: !5805)
!5805 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2385, baseType: !5806)
!5806 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !5807)
!5807 = !{!5808}
!5808 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !5806, file: !2385, baseType: !104, size: 32)
!5809 = !{!5810, !5811, !5812, !5813, !5814, !5815, !5819, !5820, !5821, !5823, !5828, !5871, !5874, !5877, !5878, !5879, !5880, !5881, !5882, !5883, !5886, !5887, !5888, !5892, !5895, !5897, !5900, !5901, !5902, !5907, !5913, !5916, !5920, !5926, !5930, !5933, !5935, !5938}
!5810 = !DILocalVariable(name: "out", arg: 1, scope: !5800, file: !2385, line: 1338, type: !4175)
!5811 = !DILocalVariable(name: "ctx", arg: 2, scope: !5800, file: !2385, line: 1338, type: !104)
!5812 = !DILocalVariable(name: "fp", arg: 3, scope: !5800, file: !2385, line: 1338, type: !263)
!5813 = !DILocalVariable(name: "ap", arg: 4, scope: !5800, file: !2385, line: 1339, type: !5803)
!5814 = !DILocalVariable(name: "flags", arg: 5, scope: !5800, file: !2385, line: 1339, type: !113)
!5815 = !DILocalVariable(name: "buf", scope: !5800, file: !2385, line: 1341, type: !5816)
!5816 = !DICompositeType(tag: DW_TAG_array_type, baseType: !103, size: 176, elements: !5817)
!5817 = !{!5818}
!5818 = !DISubrange(count: 22)
!5819 = !DILocalVariable(name: "count", scope: !5800, file: !2385, line: 1342, type: !111)
!5820 = !DILocalVariable(name: "sint", scope: !5800, file: !2385, line: 1343, type: !2404)
!5821 = !DILocalVariable(name: "tagged_ap", scope: !5800, file: !2385, line: 1345, type: !5822)
!5822 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !911)
!5823 = !DILocalVariable(name: "rc", scope: !5824, file: !2385, line: 1377, type: !105)
!5824 = distinct !DILexicalBlock(scope: !5825, file: !2385, line: 1377, column: 4)
!5825 = distinct !DILexicalBlock(scope: !5826, file: !2385, line: 1376, column: 19)
!5826 = distinct !DILexicalBlock(scope: !5827, file: !2385, line: 1376, column: 7)
!5827 = distinct !DILexicalBlock(scope: !5800, file: !2385, line: 1375, column: 19)
!5828 = !DILocalVariable(name: "state", scope: !5827, file: !2385, line: 1395, type: !5829)
!5829 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5800, file: !2385, line: 1392, size: 192, elements: !5830)
!5830 = !{!5831, !5839}
!5831 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !5829, file: !2385, line: 1393, baseType: !5832, size: 64)
!5832 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "argument_value", file: !2385, line: 166, size: 64, elements: !5833)
!5833 = !{!5834, !5835, !5836, !5837, !5838}
!5834 = !DIDerivedType(tag: DW_TAG_member, name: "sint", scope: !5832, file: !2385, line: 168, baseType: !2404, size: 64)
!5835 = !DIDerivedType(tag: DW_TAG_member, name: "uint", scope: !5832, file: !2385, line: 171, baseType: !2407, size: 64)
!5836 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !5832, file: !2385, line: 174, baseType: !420, size: 64)
!5837 = !DIDerivedType(tag: DW_TAG_member, name: "ldbl", scope: !5832, file: !2385, line: 177, baseType: !418, size: 64)
!5838 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !5832, file: !2385, line: 180, baseType: !104, size: 32)
!5839 = !DIDerivedType(tag: DW_TAG_member, name: "conv", scope: !5829, file: !2385, line: 1394, baseType: !5840, size: 96, offset: 64)
!5840 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conversion", file: !2385, line: 189, size: 96, elements: !5841)
!5841 = !{!5842, !5843, !5844, !5845, !5846, !5847, !5848, !5849, !5850, !5851, !5852, !5853, !5854, !5855, !5856, !5857, !5858, !5859, !5860, !5861, !5866}
!5842 = !DIDerivedType(tag: DW_TAG_member, name: "invalid", scope: !5840, file: !2385, line: 191, baseType: !911, size: 1, flags: DIFlagBitField, extraData: i64 0)
!5843 = !DIDerivedType(tag: DW_TAG_member, name: "unsupported", scope: !5840, file: !2385, line: 194, baseType: !911, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!5844 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dash", scope: !5840, file: !2385, line: 197, baseType: !911, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!5845 = !DIDerivedType(tag: DW_TAG_member, name: "flag_plus", scope: !5840, file: !2385, line: 200, baseType: !911, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!5846 = !DIDerivedType(tag: DW_TAG_member, name: "flag_space", scope: !5840, file: !2385, line: 203, baseType: !911, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!5847 = !DIDerivedType(tag: DW_TAG_member, name: "flag_hash", scope: !5840, file: !2385, line: 206, baseType: !911, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!5848 = !DIDerivedType(tag: DW_TAG_member, name: "flag_zero", scope: !5840, file: !2385, line: 209, baseType: !911, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!5849 = !DIDerivedType(tag: DW_TAG_member, name: "width_present", scope: !5840, file: !2385, line: 212, baseType: !911, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!5850 = !DIDerivedType(tag: DW_TAG_member, name: "width_star", scope: !5840, file: !2385, line: 219, baseType: !911, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!5851 = !DIDerivedType(tag: DW_TAG_member, name: "prec_present", scope: !5840, file: !2385, line: 222, baseType: !911, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!5852 = !DIDerivedType(tag: DW_TAG_member, name: "prec_star", scope: !5840, file: !2385, line: 229, baseType: !911, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!5853 = !DIDerivedType(tag: DW_TAG_member, name: "length_mod", scope: !5840, file: !2385, line: 232, baseType: !32, size: 4, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!5854 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_a", scope: !5840, file: !2385, line: 238, baseType: !911, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!5855 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_cat", scope: !5840, file: !2385, line: 241, baseType: !32, size: 3, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!5856 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0", scope: !5840, file: !2385, line: 244, baseType: !911, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!5857 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0c", scope: !5840, file: !2385, line: 247, baseType: !911, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!5858 = !DIDerivedType(tag: DW_TAG_member, name: "pad_postdp", scope: !5840, file: !2385, line: 252, baseType: !911, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!5859 = !DIDerivedType(tag: DW_TAG_member, name: "pad_fp", scope: !5840, file: !2385, line: 257, baseType: !911, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!5860 = !DIDerivedType(tag: DW_TAG_member, name: "specifier", scope: !5840, file: !2385, line: 260, baseType: !170, size: 8, offset: 24)
!5861 = !DIDerivedType(tag: DW_TAG_member, scope: !5840, file: !2385, line: 262, baseType: !5862, size: 32, offset: 32)
!5862 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5840, file: !2385, line: 262, size: 32, elements: !5863)
!5863 = !{!5864, !5865}
!5864 = !DIDerivedType(tag: DW_TAG_member, name: "width_value", scope: !5862, file: !2385, line: 267, baseType: !105, size: 32)
!5865 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_value", scope: !5862, file: !2385, line: 289, baseType: !105, size: 32)
!5866 = !DIDerivedType(tag: DW_TAG_member, scope: !5840, file: !2385, line: 292, baseType: !5867, size: 32, offset: 64)
!5867 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5840, file: !2385, line: 292, size: 32, elements: !5868)
!5868 = !{!5869, !5870}
!5869 = !DIDerivedType(tag: DW_TAG_member, name: "prec_value", scope: !5867, file: !2385, line: 297, baseType: !105, size: 32)
!5870 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_pre_exp", scope: !5867, file: !2385, line: 306, baseType: !105, size: 32)
!5871 = !DILocalVariable(name: "conv", scope: !5827, file: !2385, line: 1400, type: !5872)
!5872 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5873)
!5873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5840, size: 32)
!5874 = !DILocalVariable(name: "value", scope: !5827, file: !2385, line: 1401, type: !5875)
!5875 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5876)
!5876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5832, size: 32)
!5877 = !DILocalVariable(name: "sp", scope: !5827, file: !2385, line: 1402, type: !263)
!5878 = !DILocalVariable(name: "width", scope: !5827, file: !2385, line: 1403, type: !105)
!5879 = !DILocalVariable(name: "precision", scope: !5827, file: !2385, line: 1404, type: !105)
!5880 = !DILocalVariable(name: "bps", scope: !5827, file: !2385, line: 1405, type: !263)
!5881 = !DILocalVariable(name: "bpe", scope: !5827, file: !2385, line: 1406, type: !263)
!5882 = !DILocalVariable(name: "sign", scope: !5827, file: !2385, line: 1407, type: !103)
!5883 = !DILocalVariable(name: "arg", scope: !5884, file: !2385, line: 1432, type: !105)
!5884 = distinct !DILexicalBlock(scope: !5885, file: !2385, line: 1431, column: 24)
!5885 = distinct !DILexicalBlock(scope: !5827, file: !2385, line: 1431, column: 7)
!5886 = !DILocalVariable(name: "specifier_cat", scope: !5827, file: !2385, line: 1468, type: !2384)
!5887 = !DILocalVariable(name: "length_mod", scope: !5827, file: !2385, line: 1470, type: !2392)
!5888 = !DILocalVariable(name: "rc", scope: !5889, file: !2385, line: 1575, type: !105)
!5889 = distinct !DILexicalBlock(scope: !5890, file: !2385, line: 1575, column: 4)
!5890 = distinct !DILexicalBlock(scope: !5891, file: !2385, line: 1574, column: 43)
!5891 = distinct !DILexicalBlock(scope: !5827, file: !2385, line: 1574, column: 7)
!5892 = !DILocalVariable(name: "rc", scope: !5893, file: !2385, line: 1584, type: !105)
!5893 = distinct !DILexicalBlock(scope: !5894, file: !2385, line: 1584, column: 4)
!5894 = distinct !DILexicalBlock(scope: !5827, file: !2385, line: 1582, column: 28)
!5895 = !DILocalVariable(name: "len", scope: !5896, file: !2385, line: 1589, type: !111)
!5896 = distinct !DILexicalBlock(scope: !5894, file: !2385, line: 1586, column: 13)
!5897 = !DILocalVariable(name: "len", scope: !5898, file: !2385, line: 1641, type: !111)
!5898 = distinct !DILexicalBlock(scope: !5899, file: !2385, line: 1640, column: 24)
!5899 = distinct !DILexicalBlock(scope: !5894, file: !2385, line: 1640, column: 8)
!5900 = !DILocalVariable(name: "nj_len", scope: !5827, file: !2385, line: 1722, type: !111)
!5901 = !DILocalVariable(name: "pad_len", scope: !5827, file: !2385, line: 1723, type: !105)
!5902 = !DILocalVariable(name: "pad", scope: !5903, file: !2385, line: 1751, type: !103)
!5903 = distinct !DILexicalBlock(scope: !5904, file: !2385, line: 1750, column: 26)
!5904 = distinct !DILexicalBlock(scope: !5905, file: !2385, line: 1750, column: 8)
!5905 = distinct !DILexicalBlock(scope: !5906, file: !2385, line: 1747, column: 18)
!5906 = distinct !DILexicalBlock(scope: !5827, file: !2385, line: 1747, column: 7)
!5907 = !DILocalVariable(name: "rc", scope: !5908, file: !2385, line: 1758, type: !105)
!5908 = distinct !DILexicalBlock(scope: !5909, file: !2385, line: 1758, column: 7)
!5909 = distinct !DILexicalBlock(scope: !5910, file: !2385, line: 1757, column: 21)
!5910 = distinct !DILexicalBlock(scope: !5911, file: !2385, line: 1757, column: 10)
!5911 = distinct !DILexicalBlock(scope: !5912, file: !2385, line: 1756, column: 26)
!5912 = distinct !DILexicalBlock(scope: !5903, file: !2385, line: 1756, column: 9)
!5913 = !DILocalVariable(name: "rc", scope: !5914, file: !2385, line: 1765, type: !105)
!5914 = distinct !DILexicalBlock(scope: !5915, file: !2385, line: 1765, column: 6)
!5915 = distinct !DILexicalBlock(scope: !5903, file: !2385, line: 1764, column: 25)
!5916 = !DILocalVariable(name: "rc", scope: !5917, file: !2385, line: 1774, type: !105)
!5917 = distinct !DILexicalBlock(scope: !5918, file: !2385, line: 1774, column: 4)
!5918 = distinct !DILexicalBlock(scope: !5919, file: !2385, line: 1773, column: 18)
!5919 = distinct !DILexicalBlock(scope: !5827, file: !2385, line: 1773, column: 7)
!5920 = !DILocalVariable(name: "rc", scope: !5921, file: !2385, line: 1819, type: !105)
!5921 = distinct !DILexicalBlock(scope: !5922, file: !2385, line: 1819, column: 5)
!5922 = distinct !DILexicalBlock(scope: !5923, file: !2385, line: 1818, column: 44)
!5923 = distinct !DILexicalBlock(scope: !5924, file: !2385, line: 1818, column: 8)
!5924 = distinct !DILexicalBlock(scope: !5925, file: !2385, line: 1817, column: 10)
!5925 = distinct !DILexicalBlock(scope: !5827, file: !2385, line: 1777, column: 7)
!5926 = !DILocalVariable(name: "rc", scope: !5927, file: !2385, line: 1823, type: !105)
!5927 = distinct !DILexicalBlock(scope: !5928, file: !2385, line: 1823, column: 5)
!5928 = distinct !DILexicalBlock(scope: !5929, file: !2385, line: 1822, column: 26)
!5929 = distinct !DILexicalBlock(scope: !5924, file: !2385, line: 1822, column: 8)
!5930 = !DILocalVariable(name: "rc", scope: !5931, file: !2385, line: 1828, type: !105)
!5931 = distinct !DILexicalBlock(scope: !5932, file: !2385, line: 1828, column: 5)
!5932 = distinct !DILexicalBlock(scope: !5924, file: !2385, line: 1827, column: 26)
!5933 = !DILocalVariable(name: "rc", scope: !5934, file: !2385, line: 1831, type: !105)
!5934 = distinct !DILexicalBlock(scope: !5924, file: !2385, line: 1831, column: 4)
!5935 = !DILocalVariable(name: "rc", scope: !5936, file: !2385, line: 1836, type: !105)
!5936 = distinct !DILexicalBlock(scope: !5937, file: !2385, line: 1836, column: 4)
!5937 = distinct !DILexicalBlock(scope: !5827, file: !2385, line: 1835, column: 21)
!5938 = !DILabel(scope: !5894, name: "prec_int_pad0", file: !2385, line: 1634)
!5939 = !DILocation(line: 0, scope: !5800)
!5940 = !DILocation(line: 1341, column: 2, scope: !5800)
!5941 = !DILocation(line: 1341, column: 7, scope: !5800)
!5942 = !DILocation(line: 1375, column: 2, scope: !5800)
!5943 = !DILocation(line: 1342, column: 9, scope: !5800)
!5944 = !DILocation(line: 1375, column: 9, scope: !5800)
!5945 = !DILocation(line: 1377, column: 4, scope: !5824)
!5946 = !DILocation(line: 0, scope: !5824)
!5947 = !DILocation(line: 1377, column: 4, scope: !5948)
!5948 = distinct !DILexicalBlock(scope: !5824, file: !2385, line: 1377, column: 4)
!5949 = distinct !{!5949, !5942, !5950}
!5950 = !DILocation(line: 1839, column: 2, scope: !5800)
!5951 = !DILocation(line: 1392, column: 3, scope: !5827)
!5952 = !DILocation(line: 1395, column: 5, scope: !5827)
!5953 = !DILocation(line: 0, scope: !5827)
!5954 = !DILocation(line: 1409, column: 8, scope: !5827)
!5955 = !DILocation(line: 1414, column: 13, scope: !5956)
!5956 = distinct !DILexicalBlock(scope: !5827, file: !2385, line: 1414, column: 7)
!5957 = !DILocation(line: 1414, column: 7, scope: !5827)
!5958 = !DILocation(line: 1415, column: 12, scope: !5959)
!5959 = distinct !DILexicalBlock(scope: !5956, file: !2385, line: 1414, column: 25)
!5960 = !DILocation(line: 1417, column: 14, scope: !5961)
!5961 = distinct !DILexicalBlock(scope: !5959, file: !2385, line: 1417, column: 8)
!5962 = !DILocation(line: 1417, column: 8, scope: !5959)
!5963 = !DILocation(line: 1418, column: 21, scope: !5964)
!5964 = distinct !DILexicalBlock(scope: !5961, file: !2385, line: 1417, column: 19)
!5965 = !DILocation(line: 1419, column: 13, scope: !5964)
!5966 = !DILocation(line: 1420, column: 4, scope: !5964)
!5967 = !DILocation(line: 1421, column: 20, scope: !5968)
!5968 = distinct !DILexicalBlock(scope: !5956, file: !2385, line: 1421, column: 14)
!5969 = !DILocation(line: 1421, column: 14, scope: !5956)
!5970 = !DILocation(line: 1431, column: 13, scope: !5885)
!5971 = !DILocation(line: 1431, column: 7, scope: !5827)
!5972 = !DILocation(line: 1432, column: 14, scope: !5884)
!5973 = !DILocation(line: 0, scope: !5884)
!5974 = !DILocation(line: 1434, column: 12, scope: !5975)
!5975 = distinct !DILexicalBlock(scope: !5884, file: !2385, line: 1434, column: 8)
!5976 = !DILocation(line: 1434, column: 8, scope: !5884)
!5977 = !DILocation(line: 1435, column: 24, scope: !5978)
!5978 = distinct !DILexicalBlock(scope: !5975, file: !2385, line: 1434, column: 17)
!5979 = !DILocation(line: 1436, column: 4, scope: !5978)
!5980 = !DILocation(line: 1439, column: 20, scope: !5981)
!5981 = distinct !DILexicalBlock(scope: !5885, file: !2385, line: 1439, column: 14)
!5982 = !DILocation(line: 1439, column: 14, scope: !5885)
!5983 = !DILocation(line: 1469, column: 37, scope: !5827)
!5984 = !DILocation(line: 1448, column: 20, scope: !5827)
!5985 = !DILocation(line: 1449, column: 22, scope: !5827)
!5986 = !DILocation(line: 1471, column: 34, scope: !5827)
!5987 = !DILocation(line: 1478, column: 7, scope: !5827)
!5988 = !DILocation(line: 1479, column: 4, scope: !5989)
!5989 = distinct !DILexicalBlock(scope: !5990, file: !2385, line: 1478, column: 40)
!5990 = distinct !DILexicalBlock(scope: !5827, file: !2385, line: 1478, column: 7)
!5991 = !DILocation(line: 1484, column: 19, scope: !5992)
!5992 = distinct !DILexicalBlock(scope: !5989, file: !2385, line: 1479, column: 24)
!5993 = !DILocation(line: 1484, column: 17, scope: !5992)
!5994 = !DILocation(line: 1485, column: 5, scope: !5992)
!5995 = !DILocation(line: 1492, column: 20, scope: !5996)
!5996 = distinct !DILexicalBlock(scope: !5997, file: !2385, line: 1491, column: 12)
!5997 = distinct !DILexicalBlock(scope: !5992, file: !2385, line: 1487, column: 9)
!5998 = !DILocation(line: 1492, column: 18, scope: !5996)
!5999 = !DILocation(line: 1494, column: 5, scope: !5992)
!6000 = !DILocation(line: 1497, column: 23, scope: !5992)
!6001 = !DILocation(line: 1496, column: 17, scope: !5992)
!6002 = !DILocation(line: 1498, column: 5, scope: !5992)
!6003 = !DILocation(line: 1501, column: 23, scope: !5992)
!6004 = !DILocation(line: 1500, column: 17, scope: !5992)
!6005 = !DILocation(line: 1502, column: 5, scope: !5992)
!6006 = !DILocation(line: 1513, column: 23, scope: !5992)
!6007 = !DILocation(line: 1513, column: 6, scope: !5992)
!6008 = !DILocation(line: 1512, column: 17, scope: !5992)
!6009 = !DILocation(line: 1514, column: 5, scope: !5992)
!6010 = !DILocation(line: 0, scope: !5992)
!6011 = !DILocation(line: 1516, column: 8, scope: !5989)
!6012 = !DILocation(line: 1517, column: 19, scope: !6013)
!6013 = distinct !DILexicalBlock(scope: !6014, file: !2385, line: 1516, column: 33)
!6014 = distinct !DILexicalBlock(scope: !5989, file: !2385, line: 1516, column: 8)
!6015 = !DILocation(line: 1517, column: 17, scope: !6013)
!6016 = !DILocation(line: 1518, column: 4, scope: !6013)
!6017 = !DILocation(line: 1519, column: 19, scope: !6018)
!6018 = distinct !DILexicalBlock(scope: !6019, file: !2385, line: 1518, column: 39)
!6019 = distinct !DILexicalBlock(scope: !6014, file: !2385, line: 1518, column: 15)
!6020 = !DILocation(line: 1519, column: 17, scope: !6018)
!6021 = !DILocation(line: 1520, column: 4, scope: !6018)
!6022 = !DILocation(line: 1522, column: 4, scope: !6023)
!6023 = distinct !DILexicalBlock(scope: !6024, file: !2385, line: 1521, column: 47)
!6024 = distinct !DILexicalBlock(scope: !5990, file: !2385, line: 1521, column: 14)
!6025 = !DILocation(line: 1527, column: 19, scope: !6026)
!6026 = distinct !DILexicalBlock(scope: !6023, file: !2385, line: 1522, column: 24)
!6027 = !DILocation(line: 1527, column: 17, scope: !6026)
!6028 = !DILocation(line: 1528, column: 5, scope: !6026)
!6029 = !DILocation(line: 0, scope: !6030)
!6030 = distinct !DILexicalBlock(scope: !6026, file: !2385, line: 1530, column: 9)
!6031 = !DILocation(line: 1540, column: 23, scope: !6026)
!6032 = !DILocation(line: 1539, column: 17, scope: !6026)
!6033 = !DILocation(line: 1542, column: 5, scope: !6026)
!6034 = !DILocation(line: 1545, column: 23, scope: !6026)
!6035 = !DILocation(line: 1544, column: 17, scope: !6026)
!6036 = !DILocation(line: 1547, column: 5, scope: !6026)
!6037 = !DILocation(line: 1551, column: 23, scope: !6026)
!6038 = !DILocation(line: 1551, column: 6, scope: !6026)
!6039 = !DILocation(line: 1550, column: 17, scope: !6026)
!6040 = !DILocation(line: 1552, column: 5, scope: !6026)
!6041 = !DILocation(line: 0, scope: !6026)
!6042 = !DILocation(line: 1554, column: 8, scope: !6023)
!6043 = !DILocation(line: 1555, column: 19, scope: !6044)
!6044 = distinct !DILexicalBlock(scope: !6045, file: !2385, line: 1554, column: 33)
!6045 = distinct !DILexicalBlock(scope: !6023, file: !2385, line: 1554, column: 8)
!6046 = !DILocation(line: 1555, column: 17, scope: !6044)
!6047 = !DILocation(line: 1556, column: 4, scope: !6044)
!6048 = !DILocation(line: 1557, column: 19, scope: !6049)
!6049 = distinct !DILexicalBlock(scope: !6050, file: !2385, line: 1556, column: 39)
!6050 = distinct !DILexicalBlock(scope: !6045, file: !2385, line: 1556, column: 15)
!6051 = !DILocation(line: 1557, column: 17, scope: !6049)
!6052 = !DILocation(line: 1558, column: 4, scope: !6049)
!6053 = !DILocation(line: 0, scope: !6054)
!6054 = distinct !DILexicalBlock(scope: !6055, file: !2385, line: 1560, column: 8)
!6055 = distinct !DILexicalBlock(scope: !6056, file: !2385, line: 1559, column: 45)
!6056 = distinct !DILexicalBlock(scope: !6024, file: !2385, line: 1559, column: 14)
!6057 = !DILocation(line: 1566, column: 17, scope: !6058)
!6058 = distinct !DILexicalBlock(scope: !6059, file: !2385, line: 1565, column: 46)
!6059 = distinct !DILexicalBlock(scope: !6056, file: !2385, line: 1565, column: 14)
!6060 = !DILocation(line: 1566, column: 15, scope: !6058)
!6061 = !DILocation(line: 1567, column: 3, scope: !6058)
!6062 = !DILocation(line: 1574, column: 21, scope: !5891)
!6063 = !DILocation(line: 1575, column: 4, scope: !5889)
!6064 = !DILocation(line: 0, scope: !5889)
!6065 = !DILocation(line: 1575, column: 4, scope: !6066)
!6066 = distinct !DILexicalBlock(scope: !5889, file: !2385, line: 1575, column: 4)
!6067 = !DILocation(line: 1582, column: 17, scope: !5827)
!6068 = !DILocation(line: 1582, column: 3, scope: !5827)
!6069 = !DILocation(line: 1584, column: 4, scope: !5893)
!6070 = !DILocation(line: 0, scope: !5893)
!6071 = !DILocation(line: 1584, column: 4, scope: !6072)
!6072 = distinct !DILexicalBlock(scope: !5893, file: !2385, line: 1584, column: 4)
!6073 = !DILocation(line: 1587, column: 31, scope: !5896)
!6074 = !DILocation(line: 1591, column: 18, scope: !6075)
!6075 = distinct !DILexicalBlock(scope: !5896, file: !2385, line: 1591, column: 8)
!6076 = !DILocation(line: 1591, column: 8, scope: !5896)
!6077 = !DILocation(line: 1592, column: 11, scope: !6078)
!6078 = distinct !DILexicalBlock(scope: !6075, file: !2385, line: 1591, column: 24)
!6079 = !DILocation(line: 0, scope: !5896)
!6080 = !DILocation(line: 1593, column: 4, scope: !6078)
!6081 = !DILocation(line: 1594, column: 11, scope: !6082)
!6082 = distinct !DILexicalBlock(scope: !6075, file: !2385, line: 1593, column: 11)
!6083 = !DILocation(line: 1604, column: 51, scope: !5894)
!6084 = !DILocation(line: 1604, column: 13, scope: !5894)
!6085 = !DILocation(line: 1604, column: 11, scope: !5894)
!6086 = !DILocation(line: 1606, column: 4, scope: !5894)
!6087 = !DILocation(line: 1609, column: 14, scope: !6088)
!6088 = distinct !DILexicalBlock(scope: !5894, file: !2385, line: 1609, column: 8)
!6089 = !DILocation(line: 1609, column: 8, scope: !5894)
!6090 = !DILocation(line: 1619, column: 18, scope: !5894)
!6091 = !DILocation(line: 1620, column: 13, scope: !6092)
!6092 = distinct !DILexicalBlock(scope: !5894, file: !2385, line: 1620, column: 8)
!6093 = !DILocation(line: 1620, column: 8, scope: !5894)
!6094 = !DILocation(line: 1622, column: 36, scope: !6095)
!6095 = distinct !DILexicalBlock(scope: !6092, file: !2385, line: 1620, column: 18)
!6096 = !DILocation(line: 1622, column: 17, scope: !6095)
!6097 = !DILocation(line: 1623, column: 4, scope: !6095)
!6098 = !DILocation(line: 1632, column: 29, scope: !5894)
!6099 = !DILocation(line: 1632, column: 10, scope: !5894)
!6100 = !DILocation(line: 1632, column: 4, scope: !5894)
!6101 = !DILocation(line: 1407, column: 8, scope: !5827)
!6102 = !DILocation(line: 0, scope: !5894)
!6103 = !DILocation(line: 1634, column: 3, scope: !5894)
!6104 = !DILocation(line: 1640, column: 18, scope: !5899)
!6105 = !DILocation(line: 1640, column: 8, scope: !5894)
!6106 = !DILocation(line: 1729, column: 13, scope: !6107)
!6107 = distinct !DILexicalBlock(scope: !5827, file: !2385, line: 1729, column: 7)
!6108 = !DILocation(line: 1641, column: 22, scope: !5898)
!6109 = !DILocation(line: 0, scope: !5898)
!6110 = !DILocation(line: 1646, column: 21, scope: !5898)
!6111 = !DILocation(line: 1649, column: 13, scope: !6112)
!6112 = distinct !DILexicalBlock(scope: !5898, file: !2385, line: 1649, column: 9)
!6113 = !DILocation(line: 1649, column: 9, scope: !5898)
!6114 = !DILocation(line: 1650, column: 35, scope: !6115)
!6115 = distinct !DILexicalBlock(scope: !6112, file: !2385, line: 1649, column: 34)
!6116 = !DILocation(line: 1650, column: 23, scope: !6115)
!6117 = !DILocation(line: 1651, column: 5, scope: !6115)
!6118 = !DILocation(line: 1660, column: 15, scope: !6119)
!6119 = distinct !DILexicalBlock(scope: !5894, file: !2385, line: 1660, column: 8)
!6120 = !DILocation(line: 1660, column: 19, scope: !6119)
!6121 = !DILocation(line: 1660, column: 8, scope: !5894)
!6122 = !DILocation(line: 1661, column: 23, scope: !6123)
!6123 = distinct !DILexicalBlock(scope: !6119, file: !2385, line: 1660, column: 28)
!6124 = !DILocation(line: 1661, column: 11, scope: !6123)
!6125 = !DILocation(line: 1665, column: 22, scope: !6123)
!6126 = !DILocation(line: 1666, column: 21, scope: !6123)
!6127 = !DILocation(line: 1668, column: 5, scope: !6123)
!6128 = !DILocation(line: 1677, column: 30, scope: !6129)
!6129 = distinct !DILexicalBlock(scope: !6130, file: !2385, line: 1676, column: 49)
!6130 = distinct !DILexicalBlock(scope: !5894, file: !2385, line: 1676, column: 8)
!6131 = !DILocation(line: 1677, column: 5, scope: !6129)
!6132 = !DILocation(line: 1680, column: 4, scope: !5894)
!6133 = !DILocation(line: 0, scope: !6075)
!6134 = !DILocation(line: 1597, column: 14, scope: !5896)
!6135 = !DILocation(line: 1699, column: 11, scope: !6136)
!6136 = distinct !DILexicalBlock(scope: !5827, file: !2385, line: 1699, column: 7)
!6137 = !DILocation(line: 1699, column: 7, scope: !5827)
!6138 = !DILocation(line: 1725, column: 7, scope: !6139)
!6139 = distinct !DILexicalBlock(scope: !5827, file: !2385, line: 1725, column: 7)
!6140 = !DILocation(line: 1725, column: 12, scope: !6139)
!6141 = !DILocation(line: 1747, column: 13, scope: !5906)
!6142 = !DILocation(line: 1747, column: 7, scope: !5827)
!6143 = !DILocation(line: 1722, column: 24, scope: !5827)
!6144 = !DILocation(line: 1725, column: 7, scope: !5827)
!6145 = !DILocation(line: 1729, column: 7, scope: !5827)
!6146 = !DILocation(line: 1736, column: 13, scope: !6147)
!6147 = distinct !DILexicalBlock(scope: !5827, file: !2385, line: 1736, column: 7)
!6148 = !DILocation(line: 1735, column: 19, scope: !5827)
!6149 = !DILocation(line: 1736, column: 7, scope: !5827)
!6150 = !DILocation(line: 1748, column: 10, scope: !5905)
!6151 = !DILocation(line: 1750, column: 15, scope: !5904)
!6152 = !DILocation(line: 1750, column: 8, scope: !5905)
!6153 = !DILocation(line: 0, scope: !5903)
!6154 = !DILocation(line: 1756, column: 15, scope: !5912)
!6155 = !DILocation(line: 1756, column: 9, scope: !5903)
!6156 = !DILocation(line: 1758, column: 7, scope: !5908)
!6157 = !DILocation(line: 0, scope: !5908)
!6158 = !DILocation(line: 1758, column: 7, scope: !6159)
!6159 = distinct !DILexicalBlock(scope: !5908, file: !2385, line: 1758, column: 7)
!6160 = !DILocation(line: 1764, column: 5, scope: !5903)
!6161 = !DILocation(line: 0, scope: !5905)
!6162 = !DILocation(line: 1764, column: 20, scope: !5903)
!6163 = !DILocation(line: 1764, column: 17, scope: !5903)
!6164 = !DILocation(line: 1765, column: 6, scope: !5914)
!6165 = !DILocation(line: 0, scope: !5914)
!6166 = !DILocation(line: 1765, column: 6, scope: !6167)
!6167 = distinct !DILexicalBlock(scope: !5914, file: !2385, line: 1765, column: 6)
!6168 = distinct !{!6168, !6160, !6169}
!6169 = !DILocation(line: 1766, column: 5, scope: !5903)
!6170 = !DILocation(line: 1773, column: 12, scope: !5919)
!6171 = !DILocation(line: 1773, column: 7, scope: !5827)
!6172 = !DILocation(line: 1773, column: 7, scope: !5919)
!6173 = !DILocation(line: 1774, column: 4, scope: !5917)
!6174 = !DILocation(line: 0, scope: !5917)
!6175 = !DILocation(line: 1774, column: 4, scope: !6176)
!6176 = distinct !DILexicalBlock(scope: !5917, file: !2385, line: 1774, column: 4)
!6177 = !DILocation(line: 1818, column: 8, scope: !5923)
!6178 = !DILocation(line: 1818, column: 27, scope: !5923)
!6179 = !DILocation(line: 1818, column: 25, scope: !5923)
!6180 = !DILocation(line: 1818, column: 8, scope: !5924)
!6181 = !DILocation(line: 1819, column: 5, scope: !5921)
!6182 = !DILocation(line: 0, scope: !5921)
!6183 = !DILocation(line: 1819, column: 5, scope: !6184)
!6184 = distinct !DILexicalBlock(scope: !5921, file: !2385, line: 1819, column: 5)
!6185 = !DILocation(line: 1822, column: 14, scope: !5929)
!6186 = !DILocation(line: 1822, column: 8, scope: !5924)
!6187 = !DILocation(line: 1823, column: 5, scope: !5927)
!6188 = !DILocation(line: 0, scope: !5927)
!6189 = !DILocation(line: 1823, column: 5, scope: !6190)
!6190 = distinct !DILexicalBlock(scope: !5927, file: !2385, line: 1823, column: 5)
!6191 = !DILocation(line: 1826, column: 20, scope: !5924)
!6192 = !DILocation(line: 1827, column: 4, scope: !5924)
!6193 = !DILocation(line: 0, scope: !5924)
!6194 = !DILocation(line: 1827, column: 21, scope: !5924)
!6195 = !DILocation(line: 1827, column: 18, scope: !5924)
!6196 = !DILocation(line: 1828, column: 5, scope: !5931)
!6197 = !DILocation(line: 0, scope: !5931)
!6198 = !DILocation(line: 1828, column: 5, scope: !6199)
!6199 = distinct !DILexicalBlock(scope: !5931, file: !2385, line: 1828, column: 5)
!6200 = distinct !{!6200, !6192, !6201}
!6201 = !DILocation(line: 1829, column: 4, scope: !5924)
!6202 = !DILocation(line: 1831, column: 4, scope: !5934)
!6203 = !DILocation(line: 0, scope: !5934)
!6204 = !DILocation(line: 1831, column: 4, scope: !6205)
!6205 = distinct !DILexicalBlock(scope: !5934, file: !2385, line: 1831, column: 4)
!6206 = !DILocation(line: 1835, column: 16, scope: !5827)
!6207 = !DILocation(line: 1835, column: 3, scope: !5827)
!6208 = !DILocation(line: 1836, column: 4, scope: !5936)
!6209 = !DILocation(line: 0, scope: !5936)
!6210 = !DILocation(line: 1836, column: 4, scope: !6211)
!6211 = distinct !DILexicalBlock(scope: !5936, file: !2385, line: 1836, column: 4)
!6212 = !DILocation(line: 1837, column: 4, scope: !5937)
!6213 = distinct !{!6213, !6207, !6214}
!6214 = !DILocation(line: 1838, column: 3, scope: !5827)
!6215 = !DILocation(line: 1844, column: 1, scope: !5800)
!6216 = distinct !DISubprogram(name: "extract_conversion", scope: !2385, file: !2385, line: 642, type: !6217, scopeLine: 644, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2381, retainedNodes: !6219)
!6217 = !DISubroutineType(types: !6218)
!6218 = !{!263, !5873, !263}
!6219 = !{!6220, !6221}
!6220 = !DILocalVariable(name: "conv", arg: 1, scope: !6216, file: !2385, line: 642, type: !5873)
!6221 = !DILocalVariable(name: "sp", arg: 2, scope: !6216, file: !2385, line: 643, type: !263)
!6222 = !DILocation(line: 0, scope: !6216)
!6223 = !DILocation(line: 645, column: 10, scope: !6216)
!6224 = !DILocation(line: 653, column: 2, scope: !6216)
!6225 = !DILocation(line: 654, column: 6, scope: !6226)
!6226 = distinct !DILexicalBlock(scope: !6216, file: !2385, line: 654, column: 6)
!6227 = !DILocation(line: 654, column: 10, scope: !6226)
!6228 = !DILocation(line: 654, column: 6, scope: !6216)
!6229 = !DILocation(line: 655, column: 24, scope: !6230)
!6230 = distinct !DILexicalBlock(scope: !6226, file: !2385, line: 654, column: 18)
!6231 = !DILocation(line: 655, column: 19, scope: !6230)
!6232 = !DILocation(line: 656, column: 3, scope: !6230)
!6233 = !DILocation(line: 659, column: 7, scope: !6216)
!6234 = !DILocation(line: 660, column: 7, scope: !6216)
!6235 = !DILocation(line: 661, column: 7, scope: !6216)
!6236 = !DILocation(line: 662, column: 7, scope: !6216)
!6237 = !DILocation(line: 663, column: 7, scope: !6216)
!6238 = !DILocation(line: 665, column: 2, scope: !6216)
!6239 = !DILocation(line: 666, column: 1, scope: !6216)
!6240 = distinct !DISubprogram(name: "outs", scope: !2385, file: !2385, line: 1319, type: !6241, scopeLine: 1323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2381, retainedNodes: !6243)
!6241 = !DISubroutineType(types: !6242)
!6242 = !{!105, !4175, !104, !263, !263}
!6243 = !{!6244, !6245, !6246, !6247, !6248, !6249}
!6244 = !DILocalVariable(name: "out", arg: 1, scope: !6240, file: !2385, line: 1319, type: !4175)
!6245 = !DILocalVariable(name: "ctx", arg: 2, scope: !6240, file: !2385, line: 1320, type: !104)
!6246 = !DILocalVariable(name: "sp", arg: 3, scope: !6240, file: !2385, line: 1321, type: !263)
!6247 = !DILocalVariable(name: "ep", arg: 4, scope: !6240, file: !2385, line: 1322, type: !263)
!6248 = !DILocalVariable(name: "count", scope: !6240, file: !2385, line: 1324, type: !111)
!6249 = !DILocalVariable(name: "rc", scope: !6250, file: !2385, line: 1327, type: !105)
!6250 = distinct !DILexicalBlock(scope: !6240, file: !2385, line: 1326, column: 45)
!6251 = !DILocation(line: 0, scope: !6240)
!6252 = !DILocation(line: 1326, column: 2, scope: !6240)
!6253 = !DILocation(line: 1324, column: 9, scope: !6240)
!6254 = !DILocation(line: 1326, column: 13, scope: !6240)
!6255 = !DILocation(line: 1326, column: 19, scope: !6240)
!6256 = !DILocation(line: 1327, column: 21, scope: !6250)
!6257 = !DILocation(line: 1326, column: 36, scope: !6240)
!6258 = !DILocation(line: 1326, column: 39, scope: !6240)
!6259 = !DILocation(line: 1327, column: 24, scope: !6250)
!6260 = !DILocation(line: 1327, column: 16, scope: !6250)
!6261 = !DILocation(line: 1327, column: 12, scope: !6250)
!6262 = !DILocation(line: 0, scope: !6250)
!6263 = !DILocation(line: 1329, column: 10, scope: !6264)
!6264 = distinct !DILexicalBlock(scope: !6250, file: !2385, line: 1329, column: 7)
!6265 = !DILocation(line: 1329, column: 7, scope: !6250)
!6266 = distinct !{!6266, !6252, !6267}
!6267 = !DILocation(line: 1333, column: 2, scope: !6240)
!6268 = !DILocation(line: 1336, column: 1, scope: !6240)
!6269 = distinct !DISubprogram(name: "encode_uint", scope: !2385, file: !2385, line: 788, type: !6270, scopeLine: 792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2381, retainedNodes: !6272)
!6270 = !DISubroutineType(types: !6271)
!6271 = !{!102, !2407, !5873, !102, !263}
!6272 = !{!6273, !6274, !6275, !6276, !6277, !6278, !6280, !6281}
!6273 = !DILocalVariable(name: "value", arg: 1, scope: !6269, file: !2385, line: 788, type: !2407)
!6274 = !DILocalVariable(name: "conv", arg: 2, scope: !6269, file: !2385, line: 789, type: !5873)
!6275 = !DILocalVariable(name: "bps", arg: 3, scope: !6269, file: !2385, line: 790, type: !102)
!6276 = !DILocalVariable(name: "bpe", arg: 4, scope: !6269, file: !2385, line: 791, type: !263)
!6277 = !DILocalVariable(name: "upcase", scope: !6269, file: !2385, line: 793, type: !911)
!6278 = !DILocalVariable(name: "radix", scope: !6269, file: !2385, line: 794, type: !6279)
!6279 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !32)
!6280 = !DILocalVariable(name: "bp", scope: !6269, file: !2385, line: 795, type: !102)
!6281 = !DILocalVariable(name: "lsv", scope: !6282, file: !2385, line: 798, type: !32)
!6282 = distinct !DILexicalBlock(scope: !6269, file: !2385, line: 797, column: 5)
!6283 = !DILocation(line: 0, scope: !6269)
!6284 = !DILocation(line: 793, column: 35, scope: !6269)
!6285 = !DILocation(line: 793, column: 24, scope: !6269)
!6286 = !DILocation(line: 793, column: 16, scope: !6269)
!6287 = !DILocation(line: 794, column: 29, scope: !6269)
!6288 = !DILocation(line: 795, column: 24, scope: !6269)
!6289 = !DILocation(line: 795, column: 17, scope: !6269)
!6290 = !DILocation(line: 797, column: 2, scope: !6269)
!6291 = !DILocation(line: 802, column: 9, scope: !6282)
!6292 = !DILocation(line: 798, column: 22, scope: !6282)
!6293 = !DILocation(line: 0, scope: !6282)
!6294 = !DILocation(line: 800, column: 16, scope: !6282)
!6295 = !DILocation(line: 800, column: 11, scope: !6282)
!6296 = !DILocation(line: 800, column: 4, scope: !6282)
!6297 = !DILocation(line: 800, column: 9, scope: !6282)
!6298 = !DILocation(line: 803, column: 18, scope: !6269)
!6299 = !DILocation(line: 803, column: 24, scope: !6269)
!6300 = !DILocation(line: 803, column: 2, scope: !6282)
!6301 = distinct !{!6301, !6290, !6302}
!6302 = !DILocation(line: 803, column: 37, scope: !6269)
!6303 = !DILocation(line: 808, column: 12, scope: !6304)
!6304 = distinct !DILexicalBlock(scope: !6269, file: !2385, line: 808, column: 6)
!6305 = !DILocation(line: 808, column: 6, scope: !6269)
!6306 = !DILocation(line: 809, column: 7, scope: !6307)
!6307 = distinct !DILexicalBlock(scope: !6304, file: !2385, line: 808, column: 23)
!6308 = !DILocation(line: 813, column: 3, scope: !6309)
!6309 = distinct !DILexicalBlock(scope: !6310, file: !2385, line: 811, column: 27)
!6310 = distinct !DILexicalBlock(scope: !6311, file: !2385, line: 811, column: 14)
!6311 = distinct !DILexicalBlock(scope: !6307, file: !2385, line: 809, column: 7)
!6312 = !DILocation(line: 0, scope: !6311)
!6313 = !DILocation(line: 818, column: 2, scope: !6269)
!6314 = distinct !DISubprogram(name: "store_count", scope: !2385, file: !2385, line: 1280, type: !6315, scopeLine: 1283, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2381, retainedNodes: !6319)
!6315 = !DISubroutineType(types: !6316)
!6316 = !{null, !6317, !104, !105}
!6317 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6318, size: 32)
!6318 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5840)
!6319 = !{!6320, !6321, !6322}
!6320 = !DILocalVariable(name: "conv", arg: 1, scope: !6314, file: !2385, line: 1280, type: !6317)
!6321 = !DILocalVariable(name: "dp", arg: 2, scope: !6314, file: !2385, line: 1281, type: !104)
!6322 = !DILocalVariable(name: "count", arg: 3, scope: !6314, file: !2385, line: 1282, type: !105)
!6323 = !DILocation(line: 0, scope: !6314)
!6324 = !DILocation(line: 1284, column: 38, scope: !6314)
!6325 = !DILocation(line: 1284, column: 2, scope: !6314)
!6326 = !DILocation(line: 1286, column: 4, scope: !6327)
!6327 = distinct !DILexicalBlock(scope: !6314, file: !2385, line: 1284, column: 50)
!6328 = !DILocation(line: 1286, column: 14, scope: !6327)
!6329 = !DILocation(line: 1287, column: 3, scope: !6327)
!6330 = !DILocation(line: 1289, column: 24, scope: !6327)
!6331 = !DILocation(line: 1289, column: 22, scope: !6327)
!6332 = !DILocation(line: 1290, column: 3, scope: !6327)
!6333 = !DILocation(line: 1292, column: 18, scope: !6327)
!6334 = !DILocation(line: 1292, column: 4, scope: !6327)
!6335 = !DILocation(line: 1292, column: 16, scope: !6327)
!6336 = !DILocation(line: 1293, column: 3, scope: !6327)
!6337 = !DILocation(line: 1295, column: 4, scope: !6327)
!6338 = !DILocation(line: 1295, column: 15, scope: !6327)
!6339 = !DILocation(line: 1296, column: 3, scope: !6327)
!6340 = !DILocation(line: 1298, column: 22, scope: !6327)
!6341 = !DILocation(line: 1298, column: 4, scope: !6327)
!6342 = !DILocation(line: 1298, column: 20, scope: !6327)
!6343 = !DILocation(line: 1299, column: 3, scope: !6327)
!6344 = !DILocation(line: 1301, column: 21, scope: !6327)
!6345 = !DILocation(line: 1301, column: 4, scope: !6327)
!6346 = !DILocation(line: 1301, column: 19, scope: !6327)
!6347 = !DILocation(line: 1302, column: 3, scope: !6327)
!6348 = !DILocation(line: 1304, column: 4, scope: !6327)
!6349 = !DILocation(line: 1304, column: 17, scope: !6327)
!6350 = !DILocation(line: 1305, column: 3, scope: !6327)
!6351 = !DILocation(line: 1307, column: 4, scope: !6327)
!6352 = !DILocation(line: 1307, column: 20, scope: !6327)
!6353 = !DILocation(line: 1308, column: 3, scope: !6327)
!6354 = !DILocation(line: 1316, column: 1, scope: !6314)
!6355 = distinct !DISubprogram(name: "isupper", scope: !6356, file: !6356, line: 16, type: !442, scopeLine: 17, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2381, retainedNodes: !6357)
!6356 = !DIFile(filename: "zephyr/lib/libc/minimal/include/ctype.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6357 = !{!6358}
!6358 = !DILocalVariable(name: "a", arg: 1, scope: !6355, file: !6356, line: 16, type: !105)
!6359 = !DILocation(line: 0, scope: !6355)
!6360 = !DILocation(line: 18, column: 29, scope: !6355)
!6361 = !DILocation(line: 18, column: 45, scope: !6355)
!6362 = !DILocation(line: 18, column: 2, scope: !6355)
!6363 = distinct !DISubprogram(name: "conversion_radix", scope: !2385, file: !2385, line: 761, type: !6364, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2381, retainedNodes: !6366)
!6364 = !DISubroutineType(types: !6365)
!6365 = !{!111, !103}
!6366 = !{!6367}
!6367 = !DILocalVariable(name: "specifier", arg: 1, scope: !6363, file: !2385, line: 761, type: !103)
!6368 = !DILocation(line: 0, scope: !6363)
!6369 = !DILocation(line: 763, column: 2, scope: !6363)
!6370 = !DILocation(line: 770, column: 3, scope: !6371)
!6371 = distinct !DILexicalBlock(scope: !6363, file: !2385, line: 763, column: 21)
!6372 = !DILocation(line: 774, column: 3, scope: !6371)
!6373 = !DILocation(line: 0, scope: !6371)
!6374 = !DILocation(line: 776, column: 1, scope: !6363)
!6375 = distinct !DISubprogram(name: "extract_flags", scope: !2385, file: !2385, line: 339, type: !6217, scopeLine: 341, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2381, retainedNodes: !6376)
!6376 = !{!6377, !6378, !6379}
!6377 = !DILocalVariable(name: "conv", arg: 1, scope: !6375, file: !2385, line: 339, type: !5873)
!6378 = !DILocalVariable(name: "sp", arg: 2, scope: !6375, file: !2385, line: 340, type: !263)
!6379 = !DILocalVariable(name: "loop", scope: !6375, file: !2385, line: 342, type: !911)
!6380 = !DILocation(line: 0, scope: !6375)
!6381 = !DILocation(line: 344, column: 2, scope: !6375)
!6382 = !DILocation(line: 345, column: 11, scope: !6383)
!6383 = distinct !DILexicalBlock(scope: !6375, file: !2385, line: 344, column: 5)
!6384 = !DILocation(line: 345, column: 3, scope: !6383)
!6385 = !DILocation(line: 351, column: 4, scope: !6386)
!6386 = distinct !DILexicalBlock(scope: !6383, file: !2385, line: 345, column: 16)
!6387 = !DILocation(line: 354, column: 4, scope: !6386)
!6388 = !DILocation(line: 357, column: 4, scope: !6386)
!6389 = !DILocation(line: 360, column: 4, scope: !6386)
!6390 = !DILocation(line: 0, scope: !6386)
!6391 = !DILocation(line: 370, column: 12, scope: !6392)
!6392 = distinct !DILexicalBlock(scope: !6375, file: !2385, line: 370, column: 6)
!6393 = !DILocation(line: 370, column: 22, scope: !6392)
!6394 = !DILocation(line: 371, column: 19, scope: !6395)
!6395 = distinct !DILexicalBlock(scope: !6392, file: !2385, line: 370, column: 42)
!6396 = !DILocation(line: 372, column: 2, scope: !6395)
!6397 = !DILocation(line: 376, column: 2, scope: !6375)
!6398 = distinct !DISubprogram(name: "extract_width", scope: !2385, file: !2385, line: 388, type: !6217, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2381, retainedNodes: !6399)
!6399 = !{!6400, !6401, !6402, !6403}
!6400 = !DILocalVariable(name: "conv", arg: 1, scope: !6398, file: !2385, line: 388, type: !5873)
!6401 = !DILocalVariable(name: "sp", arg: 2, scope: !6398, file: !2385, line: 389, type: !263)
!6402 = !DILocalVariable(name: "wp", scope: !6398, file: !2385, line: 398, type: !263)
!6403 = !DILocalVariable(name: "width", scope: !6398, file: !2385, line: 399, type: !111)
!6404 = !DILocation(line: 0, scope: !6398)
!6405 = !DILocation(line: 391, column: 8, scope: !6398)
!6406 = !DILocation(line: 391, column: 22, scope: !6398)
!6407 = !DILocation(line: 393, column: 6, scope: !6408)
!6408 = distinct !DILexicalBlock(scope: !6398, file: !2385, line: 393, column: 6)
!6409 = !DILocation(line: 393, column: 10, scope: !6408)
!6410 = !DILocation(line: 393, column: 6, scope: !6398)
!6411 = !DILocation(line: 394, column: 20, scope: !6412)
!6412 = distinct !DILexicalBlock(scope: !6408, file: !2385, line: 393, column: 18)
!6413 = !DILocation(line: 395, column: 10, scope: !6412)
!6414 = !DILocation(line: 395, column: 3, scope: !6412)
!6415 = !DILocation(line: 399, column: 17, scope: !6398)
!6416 = !DILocation(line: 401, column: 6, scope: !6417)
!6417 = distinct !DILexicalBlock(scope: !6398, file: !2385, line: 401, column: 6)
!6418 = !DILocation(line: 401, column: 9, scope: !6417)
!6419 = !DILocation(line: 401, column: 6, scope: !6398)
!6420 = !DILocation(line: 402, column: 23, scope: !6421)
!6421 = distinct !DILexicalBlock(scope: !6417, file: !2385, line: 401, column: 16)
!6422 = !DILocation(line: 403, column: 9, scope: !6421)
!6423 = !DILocation(line: 403, column: 21, scope: !6421)
!6424 = !DILocation(line: 405, column: 11, scope: !6421)
!6425 = !DILocation(line: 404, column: 21, scope: !6421)
!6426 = !DILocation(line: 406, column: 2, scope: !6421)
!6427 = !DILocation(line: 409, column: 1, scope: !6398)
!6428 = distinct !DISubprogram(name: "extract_prec", scope: !2385, file: !2385, line: 420, type: !6217, scopeLine: 422, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2381, retainedNodes: !6429)
!6429 = !{!6430, !6431, !6432}
!6430 = !DILocalVariable(name: "conv", arg: 1, scope: !6428, file: !2385, line: 420, type: !5873)
!6431 = !DILocalVariable(name: "sp", arg: 2, scope: !6428, file: !2385, line: 421, type: !263)
!6432 = !DILocalVariable(name: "prec", scope: !6428, file: !2385, line: 435, type: !111)
!6433 = !DILocation(line: 0, scope: !6428)
!6434 = !DILocation(line: 423, column: 24, scope: !6428)
!6435 = !DILocation(line: 423, column: 28, scope: !6428)
!6436 = !DILocation(line: 423, column: 8, scope: !6428)
!6437 = !DILocation(line: 423, column: 21, scope: !6428)
!6438 = !DILocation(line: 425, column: 6, scope: !6428)
!6439 = !DILocation(line: 428, column: 2, scope: !6428)
!6440 = !DILocation(line: 430, column: 6, scope: !6441)
!6441 = distinct !DILexicalBlock(scope: !6428, file: !2385, line: 430, column: 6)
!6442 = !DILocation(line: 430, column: 10, scope: !6441)
!6443 = !DILocation(line: 430, column: 6, scope: !6428)
!6444 = !DILocation(line: 431, column: 19, scope: !6445)
!6445 = distinct !DILexicalBlock(scope: !6441, file: !2385, line: 430, column: 18)
!6446 = !DILocation(line: 432, column: 10, scope: !6445)
!6447 = !DILocation(line: 432, column: 3, scope: !6445)
!6448 = !DILocation(line: 435, column: 16, scope: !6428)
!6449 = !DILocation(line: 437, column: 8, scope: !6428)
!6450 = !DILocation(line: 437, column: 19, scope: !6428)
!6451 = !DILocation(line: 439, column: 10, scope: !6428)
!6452 = !DILocation(line: 438, column: 20, scope: !6428)
!6453 = !DILocation(line: 441, column: 9, scope: !6428)
!6454 = !DILocation(line: 442, column: 1, scope: !6428)
!6455 = distinct !DISubprogram(name: "extract_length", scope: !2385, file: !2385, line: 453, type: !6217, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2381, retainedNodes: !6456)
!6456 = !{!6457, !6458}
!6457 = !DILocalVariable(name: "conv", arg: 1, scope: !6455, file: !2385, line: 453, type: !5873)
!6458 = !DILocalVariable(name: "sp", arg: 2, scope: !6455, file: !2385, line: 454, type: !263)
!6459 = !DILocation(line: 0, scope: !6455)
!6460 = !DILocation(line: 456, column: 10, scope: !6455)
!6461 = !DILocation(line: 456, column: 2, scope: !6455)
!6462 = !DILocation(line: 458, column: 8, scope: !6463)
!6463 = distinct !DILexicalBlock(scope: !6464, file: !2385, line: 458, column: 7)
!6464 = distinct !DILexicalBlock(scope: !6455, file: !2385, line: 456, column: 15)
!6465 = !DILocation(line: 458, column: 7, scope: !6463)
!6466 = !DILocation(line: 458, column: 13, scope: !6463)
!6467 = !DILocation(line: 0, scope: !6463)
!6468 = !DILocation(line: 458, column: 7, scope: !6464)
!6469 = !DILocation(line: 459, column: 21, scope: !6470)
!6470 = distinct !DILexicalBlock(scope: !6463, file: !2385, line: 458, column: 21)
!6471 = !DILocation(line: 460, column: 4, scope: !6470)
!6472 = !DILocation(line: 461, column: 3, scope: !6470)
!6473 = !DILocation(line: 462, column: 21, scope: !6474)
!6474 = distinct !DILexicalBlock(scope: !6463, file: !2385, line: 461, column: 10)
!6475 = !DILocation(line: 466, column: 8, scope: !6476)
!6476 = distinct !DILexicalBlock(scope: !6464, file: !2385, line: 466, column: 7)
!6477 = !DILocation(line: 466, column: 7, scope: !6476)
!6478 = !DILocation(line: 466, column: 13, scope: !6476)
!6479 = !DILocation(line: 0, scope: !6476)
!6480 = !DILocation(line: 466, column: 7, scope: !6464)
!6481 = !DILocation(line: 467, column: 21, scope: !6482)
!6482 = distinct !DILexicalBlock(scope: !6476, file: !2385, line: 466, column: 21)
!6483 = !DILocation(line: 468, column: 4, scope: !6482)
!6484 = !DILocation(line: 469, column: 3, scope: !6482)
!6485 = !DILocation(line: 470, column: 21, scope: !6486)
!6486 = distinct !DILexicalBlock(scope: !6476, file: !2385, line: 469, column: 10)
!6487 = !DILocation(line: 474, column: 9, scope: !6464)
!6488 = !DILocation(line: 474, column: 20, scope: !6464)
!6489 = !DILocation(line: 475, column: 3, scope: !6464)
!6490 = !DILocation(line: 476, column: 3, scope: !6464)
!6491 = !DILocation(line: 478, column: 9, scope: !6464)
!6492 = !DILocation(line: 478, column: 20, scope: !6464)
!6493 = !DILocation(line: 479, column: 3, scope: !6464)
!6494 = !DILocation(line: 480, column: 3, scope: !6464)
!6495 = !DILocation(line: 482, column: 9, scope: !6464)
!6496 = !DILocation(line: 482, column: 20, scope: !6464)
!6497 = !DILocation(line: 483, column: 3, scope: !6464)
!6498 = !DILocation(line: 484, column: 3, scope: !6464)
!6499 = !DILocation(line: 486, column: 9, scope: !6464)
!6500 = !DILocation(line: 486, column: 20, scope: !6464)
!6501 = !DILocation(line: 487, column: 3, scope: !6464)
!6502 = !DILocation(line: 492, column: 21, scope: !6464)
!6503 = !DILocation(line: 493, column: 3, scope: !6464)
!6504 = !DILocation(line: 495, column: 9, scope: !6464)
!6505 = !DILocation(line: 495, column: 20, scope: !6464)
!6506 = !DILocation(line: 496, column: 3, scope: !6464)
!6507 = !DILocation(line: 498, column: 2, scope: !6455)
!6508 = distinct !DISubprogram(name: "extract_specifier", scope: !2385, file: !2385, line: 513, type: !6217, scopeLine: 515, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2381, retainedNodes: !6509)
!6509 = !{!6510, !6511, !6512, !6513}
!6510 = !DILocalVariable(name: "conv", arg: 1, scope: !6508, file: !2385, line: 513, type: !5873)
!6511 = !DILocalVariable(name: "sp", arg: 2, scope: !6508, file: !2385, line: 514, type: !263)
!6512 = !DILocalVariable(name: "unsupported", scope: !6508, file: !2385, line: 516, type: !911)
!6513 = !DILabel(scope: !6514, name: "int_conv", file: !2385, line: 526)
!6514 = distinct !DILexicalBlock(scope: !6508, file: !2385, line: 520, column: 27)
!6515 = !DILocation(line: 0, scope: !6508)
!6516 = !DILocation(line: 518, column: 20, scope: !6508)
!6517 = !DILocation(line: 518, column: 8, scope: !6508)
!6518 = !DILocation(line: 518, column: 18, scope: !6508)
!6519 = !DILocation(line: 520, column: 2, scope: !6508)
!6520 = !DILocation(line: 525, column: 3, scope: !6514)
!6521 = !DILocation(line: 0, scope: !6514)
!6522 = !DILocation(line: 526, column: 1, scope: !6514)
!6523 = !DILocation(line: 528, column: 24, scope: !6524)
!6524 = distinct !DILexicalBlock(scope: !6514, file: !2385, line: 528, column: 7)
!6525 = !DILocation(line: 528, column: 7, scope: !6514)
!6526 = !DILocation(line: 535, column: 23, scope: !6527)
!6527 = distinct !DILexicalBlock(scope: !6514, file: !2385, line: 535, column: 7)
!6528 = !DILocation(line: 535, column: 7, scope: !6514)
!6529 = !DILocation(line: 536, column: 36, scope: !6530)
!6530 = distinct !DILexicalBlock(scope: !6527, file: !2385, line: 535, column: 31)
!6531 = !DILocation(line: 537, column: 3, scope: !6530)
!6532 = !DILocation(line: 570, column: 9, scope: !6514)
!6533 = !DILocation(line: 570, column: 23, scope: !6514)
!6534 = !DILocation(line: 575, column: 4, scope: !6535)
!6535 = distinct !DILexicalBlock(scope: !6536, file: !2385, line: 573, column: 48)
!6536 = distinct !DILexicalBlock(scope: !6514, file: !2385, line: 573, column: 7)
!6537 = !DILocation(line: 603, column: 9, scope: !6514)
!6538 = !DILocation(line: 603, column: 23, scope: !6514)
!6539 = !DILocation(line: 605, column: 24, scope: !6540)
!6540 = distinct !DILexicalBlock(scope: !6514, file: !2385, line: 605, column: 7)
!6541 = !DILocation(line: 605, column: 7, scope: !6514)
!6542 = !DILocation(line: 612, column: 9, scope: !6514)
!6543 = !DILocation(line: 612, column: 23, scope: !6514)
!6544 = !DILocation(line: 619, column: 24, scope: !6545)
!6545 = distinct !DILexicalBlock(scope: !6514, file: !2385, line: 619, column: 7)
!6546 = !DILocation(line: 619, column: 7, scope: !6514)
!6547 = !DILocation(line: 625, column: 9, scope: !6514)
!6548 = !DILocation(line: 625, column: 17, scope: !6514)
!6549 = !DILocation(line: 626, column: 3, scope: !6514)
!6550 = !DILocation(line: 629, column: 20, scope: !6508)
!6551 = !DILocation(line: 629, column: 8, scope: !6508)
!6552 = !DILocation(line: 518, column: 23, scope: !6508)
!6553 = !DILocation(line: 631, column: 2, scope: !6508)
!6554 = distinct !DISubprogram(name: "extract_decimal", scope: !2385, file: !2385, line: 318, type: !6555, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2381, retainedNodes: !6557)
!6555 = !DISubroutineType(types: !6556)
!6556 = !{!111, !421}
!6557 = !{!6558, !6559, !6560}
!6558 = !DILocalVariable(name: "str", arg: 1, scope: !6554, file: !2385, line: 318, type: !421)
!6559 = !DILocalVariable(name: "sp", scope: !6554, file: !2385, line: 320, type: !263)
!6560 = !DILocalVariable(name: "val", scope: !6554, file: !2385, line: 321, type: !111)
!6561 = !DILocation(line: 0, scope: !6554)
!6562 = !DILocation(line: 320, column: 19, scope: !6554)
!6563 = !DILocation(line: 323, column: 37, scope: !6554)
!6564 = !DILocation(line: 323, column: 17, scope: !6554)
!6565 = !DILocation(line: 323, column: 9, scope: !6554)
!6566 = !DILocation(line: 323, column: 2, scope: !6554)
!6567 = !DILocation(line: 324, column: 13, scope: !6568)
!6568 = distinct !DILexicalBlock(scope: !6554, file: !2385, line: 323, column: 43)
!6569 = !DILocation(line: 324, column: 24, scope: !6568)
!6570 = !DILocation(line: 324, column: 19, scope: !6568)
!6571 = !DILocation(line: 324, column: 27, scope: !6568)
!6572 = distinct !{!6572, !6566, !6573}
!6573 = !DILocation(line: 325, column: 2, scope: !6554)
!6574 = !DILocation(line: 326, column: 7, scope: !6554)
!6575 = !DILocation(line: 327, column: 2, scope: !6554)
!6576 = distinct !DISubprogram(name: "isdigit", scope: !6356, file: !6356, line: 43, type: !442, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2381, retainedNodes: !6577)
!6577 = !{!6578}
!6578 = !DILocalVariable(name: "a", arg: 1, scope: !6576, file: !6356, line: 43, type: !105)
!6579 = !DILocation(line: 0, scope: !6576)
!6580 = !DILocation(line: 45, column: 29, scope: !6576)
!6581 = !DILocation(line: 45, column: 45, scope: !6576)
!6582 = !DILocation(line: 45, column: 2, scope: !6576)
!6583 = distinct !DISubprogram(name: "assert_post_action", scope: !6584, file: !6584, line: 26, type: !6585, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2415, retainedNodes: !6587)
!6584 = !DIFile(filename: "zephyr/lib/os/assert.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6585 = !DISubroutineType(types: !6586)
!6586 = !{null, !263, !32}
!6587 = !{!6588, !6589}
!6588 = !DILocalVariable(name: "file", arg: 1, scope: !6583, file: !6584, line: 26, type: !263)
!6589 = !DILocalVariable(name: "line", arg: 2, scope: !6583, file: !6584, line: 26, type: !32)
!6590 = !DILocation(line: 0, scope: !6583)
!6591 = !DILocation(line: 43, column: 2, scope: !6592)
!6592 = distinct !DILexicalBlock(scope: !6583, file: !6584, line: 43, column: 2)
!6593 = !{i64 2151047092, i64 2151047108, i64 2151047134, i64 2151047162, i64 2151047182}
!6594 = !DILocation(line: 44, column: 1, scope: !6583)
!6595 = distinct !DISubprogram(name: "assert_print", scope: !6584, file: !6584, line: 46, type: !4785, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2415, retainedNodes: !6596)
!6596 = !{!6597, !6598}
!6597 = !DILocalVariable(name: "fmt", arg: 1, scope: !6595, file: !6584, line: 46, type: !263)
!6598 = !DILocalVariable(name: "ap", scope: !6595, file: !6584, line: 48, type: !6599)
!6599 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3793, line: 99, baseType: !6600)
!6600 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3793, line: 40, baseType: !6601)
!6601 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !6584, baseType: !6602)
!6602 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !6603)
!6603 = !{!6604}
!6604 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !6602, file: !6584, line: 48, baseType: !104, size: 32)
!6605 = !DILocation(line: 0, scope: !6595)
!6606 = !DILocation(line: 48, column: 2, scope: !6595)
!6607 = !DILocation(line: 48, column: 10, scope: !6595)
!6608 = !DILocation(line: 50, column: 2, scope: !6595)
!6609 = !DILocation(line: 52, column: 2, scope: !6595)
!6610 = !DILocation(line: 54, column: 2, scope: !6595)
!6611 = !DILocation(line: 55, column: 1, scope: !6595)
!6612 = distinct !DISubprogram(name: "_ConfigAbsSyms", scope: !6613, file: !6613, line: 9, type: !260, scopeLine: 9, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2417, retainedNodes: !391)
!6613 = !DIFile(filename: "zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/metairq_dispatch")
!6614 = !DILocation(line: 11, column: 1, scope: !6612)
!6615 = !{i64 2147559373, i64 2147559416, i64 2147559456}
!6616 = !DILocation(line: 12, column: 1, scope: !6612)
!6617 = !{i64 2147563600, i64 2147563643, i64 2147563683}
!6618 = !DILocation(line: 13, column: 1, scope: !6612)
!6619 = !{i64 2147563809, i64 2147563852, i64 2147563892}
!6620 = !DILocation(line: 14, column: 1, scope: !6612)
!6621 = !{i64 2147564026, i64 2147564069, i64 2147564109}
!6622 = !DILocation(line: 15, column: 1, scope: !6612)
!6623 = !{i64 2147564195, i64 2147564238, i64 2147564278}
!6624 = !DILocation(line: 16, column: 1, scope: !6612)
!6625 = !{i64 2147564380, i64 2147564423, i64 2147564463}
!6626 = !DILocation(line: 17, column: 1, scope: !6612)
!6627 = !{i64 2147564597, i64 2147564640, i64 2147564680}
!6628 = !DILocation(line: 18, column: 1, scope: !6612)
!6629 = !{i64 2147564760, i64 2147564803, i64 2147564843}
!6630 = !DILocation(line: 19, column: 1, scope: !6612)
!6631 = !{i64 2147564944, i64 2147564987, i64 2147565027}
!6632 = !DILocation(line: 20, column: 1, scope: !6612)
!6633 = !{i64 2147565124, i64 2147565167, i64 2147565207}
!6634 = !DILocation(line: 21, column: 1, scope: !6612)
!6635 = !{i64 2147565367, i64 2147565410, i64 2147565450}
!6636 = !DILocation(line: 22, column: 1, scope: !6612)
!6637 = !{i64 2147565603, i64 2147565646, i64 2147565686}
!6638 = !DILocation(line: 23, column: 1, scope: !6612)
!6639 = !{i64 2147565806, i64 2147565849, i64 2147565889}
!6640 = !DILocation(line: 24, column: 1, scope: !6612)
!6641 = !{i64 2147566009, i64 2147566052, i64 2147566092}
!6642 = !DILocation(line: 25, column: 1, scope: !6612)
!6643 = !{i64 2147566208, i64 2147566251, i64 2147566291}
!6644 = !DILocation(line: 26, column: 1, scope: !6612)
!6645 = !{i64 2147566383, i64 2147566426, i64 2147566466}
!6646 = !DILocation(line: 27, column: 1, scope: !6612)
!6647 = !{i64 2147566591, i64 2147566634, i64 2147566674}
!6648 = !DILocation(line: 28, column: 1, scope: !6612)
!6649 = !{i64 2147566795, i64 2147566838, i64 2147566878}
!6650 = !DILocation(line: 29, column: 1, scope: !6612)
!6651 = !{i64 2147566988, i64 2147567031, i64 2147567071}
!6652 = !DILocation(line: 30, column: 1, scope: !6612)
!6653 = !{i64 2147567190, i64 2147567233, i64 2147567273}
!6654 = !DILocation(line: 31, column: 1, scope: !6612)
!6655 = !{i64 2147567389, i64 2147567432, i64 2147567472}
!6656 = !DILocation(line: 32, column: 1, scope: !6612)
!6657 = !{i64 2147567616, i64 2147567659, i64 2147567699}
!6658 = !DILocation(line: 33, column: 1, scope: !6612)
!6659 = !{i64 2147567831, i64 2147567874, i64 2147567914}
!6660 = !DILocation(line: 34, column: 1, scope: !6612)
!6661 = !{i64 2147568018, i64 2147568061, i64 2147568101}
!6662 = !DILocation(line: 35, column: 1, scope: !6612)
!6663 = !{i64 2147568190, i64 2147568233, i64 2147568273}
!6664 = !DILocation(line: 36, column: 1, scope: !6612)
!6665 = !{i64 2147568392, i64 2147568435, i64 2147568475}
!6666 = !DILocation(line: 37, column: 1, scope: !6612)
!6667 = !{i64 2147568591, i64 2147568634, i64 2147568674}
!6668 = !DILocation(line: 38, column: 1, scope: !6612)
!6669 = !{i64 2147568766, i64 2147568809, i64 2147568849}
!6670 = !DILocation(line: 39, column: 1, scope: !6612)
!6671 = !{i64 2147569019, i64 2147569062, i64 2147569102}
!6672 = !DILocation(line: 40, column: 1, scope: !6612)
!6673 = !{i64 2147569257, i64 2147569300, i64 2147569340}
!6674 = !DILocation(line: 41, column: 1, scope: !6612)
!6675 = !{i64 2147569492, i64 2147569535, i64 2147569575}
!6676 = !DILocation(line: 42, column: 1, scope: !6612)
!6677 = !{i64 2147569718, i64 2147569761, i64 2147569801}
!6678 = !DILocation(line: 43, column: 1, scope: !6612)
!6679 = !{i64 2147569953, i64 2147569996, i64 2147570036}
!6680 = !DILocation(line: 44, column: 1, scope: !6612)
!6681 = !{i64 2147570188, i64 2147570231, i64 2147570271}
!6682 = !DILocation(line: 45, column: 1, scope: !6612)
!6683 = !{i64 2147570429, i64 2147570472, i64 2147570512}
!6684 = !DILocation(line: 46, column: 1, scope: !6612)
!6685 = !{i64 2147570664, i64 2147570707, i64 2147570747}
!6686 = !DILocation(line: 47, column: 1, scope: !6612)
!6687 = !{i64 2147570893, i64 2147570936, i64 2147570976}
!6688 = !DILocation(line: 48, column: 1, scope: !6612)
!6689 = !{i64 2147571128, i64 2147571171, i64 2147571211}
!6690 = !DILocation(line: 49, column: 1, scope: !6612)
!6691 = !{i64 2147571378, i64 2147571421, i64 2147571461}
!6692 = !DILocation(line: 50, column: 1, scope: !6612)
!6693 = !{i64 2147571607, i64 2147571650, i64 2147571690}
!6694 = !DILocation(line: 51, column: 1, scope: !6612)
!6695 = !{i64 2147571815, i64 2147571858, i64 2147571898}
!6696 = !DILocation(line: 52, column: 1, scope: !6612)
!6697 = !{i64 2147572026, i64 2147572069, i64 2147572109}
!6698 = !DILocation(line: 53, column: 1, scope: !6612)
!6699 = !{i64 2147572261, i64 2147572304, i64 2147572344}
!6700 = !DILocation(line: 54, column: 1, scope: !6612)
!6701 = !{i64 2147576551, i64 2147576594, i64 2147576634}
!6702 = !DILocation(line: 55, column: 1, scope: !6612)
!6703 = !{i64 2147576768, i64 2147576811, i64 2147576851}
!6704 = !DILocation(line: 56, column: 1, scope: !6612)
!6705 = !{i64 2147576997, i64 2147577040, i64 2147577080}
!6706 = !DILocation(line: 57, column: 1, scope: !6612)
!6707 = !{i64 2147577235, i64 2147577278, i64 2147577318}
!6708 = !DILocation(line: 58, column: 1, scope: !6612)
!6709 = !{i64 2147577467, i64 2147577510, i64 2147577550}
!6710 = !DILocation(line: 59, column: 1, scope: !6612)
!6711 = !{i64 2147577693, i64 2147577736, i64 2147577776}
!6712 = !DILocation(line: 60, column: 1, scope: !6612)
!6713 = !{i64 2147577910, i64 2147577953, i64 2147577993}
!6714 = !DILocation(line: 61, column: 1, scope: !6612)
!6715 = !{i64 2147578142, i64 2147578185, i64 2147578225}
!6716 = !DILocation(line: 62, column: 1, scope: !6612)
!6717 = !{i64 2147578368, i64 2147578411, i64 2147578451}
!6718 = !DILocation(line: 63, column: 1, scope: !6612)
!6719 = !{i64 2147578582, i64 2147578625, i64 2147578665}
!6720 = !DILocation(line: 64, column: 1, scope: !6612)
!6721 = !{i64 2147578802, i64 2147578845, i64 2147578885}
!6722 = !DILocation(line: 65, column: 1, scope: !6612)
!6723 = !{i64 2147579034, i64 2147579077, i64 2147579117}
!6724 = !DILocation(line: 66, column: 1, scope: !6612)
!6725 = !{i64 2147579242, i64 2147579285, i64 2147579325}
!6726 = !DILocation(line: 67, column: 1, scope: !6612)
!6727 = !{i64 2147579447, i64 2147579490, i64 2147579530}
!6728 = !DILocation(line: 68, column: 1, scope: !6612)
!6729 = !{i64 2147579664, i64 2147579707, i64 2147579747}
!6730 = !DILocation(line: 69, column: 1, scope: !6612)
!6731 = !{i64 2147579878, i64 2147579921, i64 2147579961}
!6732 = !DILocation(line: 70, column: 1, scope: !6612)
!6733 = !{i64 2147580104, i64 2147580147, i64 2147580187}
!6734 = !DILocation(line: 71, column: 1, scope: !6612)
!6735 = !{i64 2147580324, i64 2147580367, i64 2147580407}
!6736 = !DILocation(line: 72, column: 1, scope: !6612)
!6737 = !{i64 2147580529, i64 2147580572, i64 2147580612}
!6738 = !DILocation(line: 73, column: 1, scope: !6612)
!6739 = !{i64 2147580761, i64 2147580804, i64 2147580844}
!6740 = !DILocation(line: 74, column: 1, scope: !6612)
!6741 = !{i64 2147580996, i64 2147581039, i64 2147581079}
!6742 = !DILocation(line: 75, column: 1, scope: !6612)
!6743 = !{i64 2147581246, i64 2147581289, i64 2147581329}
!6744 = !DILocation(line: 76, column: 1, scope: !6612)
!6745 = !{i64 2147581496, i64 2147581539, i64 2147581579}
!6746 = !DILocation(line: 77, column: 1, scope: !6612)
!6747 = !{i64 2147581734, i64 2147581777, i64 2147581817}
!6748 = !DILocation(line: 78, column: 1, scope: !6612)
!6749 = !{i64 2147581945, i64 2147581988, i64 2147582028}
!6750 = !DILocation(line: 79, column: 1, scope: !6612)
!6751 = !{i64 2147582162, i64 2147582205, i64 2147582245}
!6752 = !DILocation(line: 80, column: 1, scope: !6612)
!6753 = !{i64 2147582358, i64 2147582401, i64 2147582441}
!6754 = !DILocation(line: 81, column: 1, scope: !6612)
!6755 = !{i64 2147582560, i64 2147582603, i64 2147582643}
!6756 = !DILocation(line: 82, column: 1, scope: !6612)
!6757 = !{i64 2147582747, i64 2147582790, i64 2147582830}
!6758 = !DILocation(line: 83, column: 1, scope: !6612)
!6759 = !{i64 2147582937, i64 2147582980, i64 2147583020}
!6760 = !DILocation(line: 84, column: 1, scope: !6612)
!6761 = !{i64 2147583124, i64 2147583167, i64 2147583207}
!6762 = !DILocation(line: 85, column: 1, scope: !6612)
!6763 = !{i64 2147583320, i64 2147583363, i64 2147583403}
!6764 = !DILocation(line: 86, column: 1, scope: !6612)
!6765 = !{i64 2147583516, i64 2147583559, i64 2147583599}
!6766 = !DILocation(line: 87, column: 1, scope: !6612)
!6767 = !{i64 2147583727, i64 2147583770, i64 2147583810}
!6768 = !DILocation(line: 88, column: 1, scope: !6612)
!6769 = !{i64 2147583935, i64 2147583978, i64 2147584018}
!6770 = !DILocation(line: 89, column: 1, scope: !6612)
!6771 = !{i64 2147584119, i64 2147584162, i64 2147584202}
!6772 = !DILocation(line: 90, column: 1, scope: !6612)
!6773 = !{i64 2147584315, i64 2147584358, i64 2147584398}
!6774 = !DILocation(line: 91, column: 1, scope: !6612)
!6775 = !{i64 2147584508, i64 2147584551, i64 2147584591}
!6776 = !DILocation(line: 92, column: 1, scope: !6612)
!6777 = !{i64 2147584755, i64 2147584798, i64 2147584838}
!6778 = !DILocation(line: 93, column: 1, scope: !6612)
!6779 = !{i64 2147584978, i64 2147585021, i64 2147585061}
!6780 = !DILocation(line: 94, column: 1, scope: !6612)
!6781 = !{i64 2147585183, i64 2147585226, i64 2147585266}
!6782 = !DILocation(line: 95, column: 1, scope: !6612)
!6783 = !{i64 2147589437, i64 2147589480, i64 2147589520}
!6784 = !DILocation(line: 96, column: 1, scope: !6612)
!6785 = !{i64 2147589603, i64 2147589646, i64 2147589686}
!6786 = !DILocation(line: 97, column: 1, scope: !6612)
!6787 = !{i64 2147589787, i64 2147589830, i64 2147589870}
!6788 = !DILocation(line: 98, column: 1, scope: !6612)
!6789 = !{i64 2147589977, i64 2147590020, i64 2147590060}
!6790 = !DILocation(line: 99, column: 1, scope: !6612)
!6791 = !{i64 2147590161, i64 2147590204, i64 2147590244}
!6792 = !DILocation(line: 100, column: 1, scope: !6612)
!6793 = !{i64 2147590375, i64 2147590418, i64 2147590458}
!6794 = !DILocation(line: 101, column: 1, scope: !6612)
!6795 = !{i64 2147590586, i64 2147590629, i64 2147590669}
!6796 = !DILocation(line: 102, column: 1, scope: !6612)
!6797 = !{i64 2147590809, i64 2147590852, i64 2147590892}
!6798 = !DILocation(line: 103, column: 1, scope: !6612)
!6799 = !{i64 2147590993, i64 2147591036, i64 2147591076}
!6800 = !DILocation(line: 104, column: 1, scope: !6612)
!6801 = !{i64 2147591159, i64 2147591202, i64 2147591242}
!6802 = !DILocation(line: 105, column: 1, scope: !6612)
!6803 = !{i64 2147591340, i64 2147591383, i64 2147591423}
!6804 = !DILocation(line: 106, column: 1, scope: !6612)
!6805 = !{i64 2147591533, i64 2147591576, i64 2147591616}
!6806 = !DILocation(line: 107, column: 1, scope: !6612)
!6807 = !{i64 2147591759, i64 2147591802, i64 2147591842}
!6808 = !DILocation(line: 108, column: 1, scope: !6612)
!6809 = !{i64 2147591973, i64 2147592016, i64 2147592056}
!6810 = !DILocation(line: 109, column: 1, scope: !6612)
!6811 = !{i64 2147592199, i64 2147592242, i64 2147592282}
!6812 = !DILocation(line: 110, column: 1, scope: !6612)
!6813 = !{i64 2147592416, i64 2147592459, i64 2147592499}
!6814 = !DILocation(line: 111, column: 1, scope: !6612)
!6815 = !{i64 2147592693, i64 2147592736, i64 2147592776}
!6816 = !DILocation(line: 112, column: 1, scope: !6612)
!6817 = !{i64 2147592919, i64 2147592962, i64 2147593002}
!6818 = !DILocation(line: 113, column: 1, scope: !6612)
!6819 = !{i64 2147593127, i64 2147593170, i64 2147593210}
!6820 = !DILocation(line: 114, column: 1, scope: !6612)
!6821 = !{i64 2147593323, i64 2147593366, i64 2147593406}
!6822 = !DILocation(line: 115, column: 1, scope: !6612)
!6823 = !{i64 2147593588, i64 2147593631, i64 2147593671}
!6824 = !DILocation(line: 116, column: 1, scope: !6612)
!6825 = !{i64 2147593802, i64 2147593845, i64 2147593885}
!6826 = !DILocation(line: 117, column: 1, scope: !6612)
!6827 = !{i64 2147593965, i64 2147594008, i64 2147594048}
!6828 = !DILocation(line: 118, column: 1, scope: !6612)
!6829 = !{i64 2147594152, i64 2147594195, i64 2147594235}
!6830 = !DILocation(line: 119, column: 1, scope: !6612)
!6831 = !{i64 2147594360, i64 2147594403, i64 2147594443}
!6832 = !DILocation(line: 120, column: 1, scope: !6612)
!6833 = !{i64 2147594556, i64 2147594599, i64 2147594639}
!6834 = !DILocation(line: 121, column: 1, scope: !6612)
!6835 = !{i64 2147594749, i64 2147594792, i64 2147594832}
!6836 = !DILocation(line: 122, column: 1, scope: !6612)
!6837 = !{i64 2147594931, i64 2147594974, i64 2147595014}
!6838 = !DILocation(line: 123, column: 1, scope: !6612)
!6839 = !{i64 2147595145, i64 2147595188, i64 2147595228}
!6840 = !DILocation(line: 124, column: 1, scope: !6612)
!6841 = !{i64 2147595344, i64 2147595387, i64 2147595427}
!6842 = !DILocation(line: 125, column: 1, scope: !6612)
!6843 = !{i64 2147595579, i64 2147595622, i64 2147595662}
!6844 = !DILocation(line: 126, column: 1, scope: !6612)
!6845 = !{i64 2147595829, i64 2147595872, i64 2147595912}
!6846 = !DILocation(line: 127, column: 1, scope: !6612)
!6847 = !{i64 2147596031, i64 2147596074, i64 2147596114}
!6848 = !DILocation(line: 128, column: 1, scope: !6612)
!6849 = !{i64 2147596254, i64 2147596297, i64 2147596337}
!6850 = !DILocation(line: 129, column: 1, scope: !6612)
!6851 = !{i64 2147596468, i64 2147596511, i64 2147596551}
!6852 = !DILocation(line: 130, column: 1, scope: !6612)
!6853 = !{i64 2147596712, i64 2147596755, i64 2147596795}
!6854 = !DILocation(line: 131, column: 1, scope: !6612)
!6855 = !{i64 2147596941, i64 2147596984, i64 2147597024}
!6856 = !DILocation(line: 132, column: 1, scope: !6612)
!6857 = !{i64 2147597167, i64 2147597210, i64 2147597250}
!6858 = !DILocation(line: 133, column: 1, scope: !6612)
!6859 = !{i64 2147597426, i64 2147597469, i64 2147597509}
!6860 = !DILocation(line: 134, column: 1, scope: !6612)
!6861 = !{i64 2147597646, i64 2147597689, i64 2147597729}
!6862 = !DILocation(line: 135, column: 1, scope: !6612)
!6863 = !{i64 2147597878, i64 2147597921, i64 2147597961}
!6864 = !DILocation(line: 136, column: 1, scope: !6612)
!6865 = !{i64 2147598119, i64 2147598162, i64 2147598202}
!6866 = !DILocation(line: 137, column: 1, scope: !6612)
!6867 = !{i64 2147602421, i64 2147602464, i64 2147602504}
!6868 = !DILocation(line: 138, column: 1, scope: !6612)
!6869 = !{i64 2147602644, i64 2147602687, i64 2147602727}
!6870 = !DILocation(line: 139, column: 1, scope: !6612)
!6871 = !{i64 2147602861, i64 2147602904, i64 2147602944}
!6872 = !DILocation(line: 140, column: 1, scope: !6612)
!6873 = !{i64 2147603102, i64 2147603145, i64 2147603185}
!6874 = !DILocation(line: 141, column: 1, scope: !6612)
!6875 = !{i64 2147603289, i64 2147603332, i64 2147603372}
!6876 = !DILocation(line: 142, column: 1, scope: !6612)
!6877 = !{i64 2147603518, i64 2147603561, i64 2147603601}
!6878 = !DILocation(line: 143, column: 1, scope: !6612)
!6879 = !{i64 2147603732, i64 2147603775, i64 2147603815}
!6880 = !DILocation(line: 144, column: 1, scope: !6612)
!6881 = !{i64 2147603934, i64 2147603977, i64 2147604017}
!6882 = !DILocation(line: 145, column: 1, scope: !6612)
!6883 = !{i64 2147604130, i64 2147604173, i64 2147604213}
!6884 = !DILocation(line: 146, column: 1, scope: !6612)
!6885 = !{i64 2147604342, i64 2147604385, i64 2147604425}
!6886 = !DILocation(line: 147, column: 1, scope: !6612)
!6887 = !{i64 2147604563, i64 2147604606, i64 2147604646}
!6888 = !DILocation(line: 148, column: 1, scope: !6612)
!6889 = !{i64 2147604777, i64 2147604820, i64 2147604860}
!6890 = !DILocation(line: 149, column: 1, scope: !6612)
!6891 = !{i64 2147604967, i64 2147605010, i64 2147605050}
!6892 = !DILocation(line: 150, column: 1, scope: !6612)
!6893 = !{i64 2147605166, i64 2147605209, i64 2147605249}
!6894 = !DILocation(line: 151, column: 1, scope: !6612)
!6895 = !{i64 2147605371, i64 2147605414, i64 2147605454}
!6896 = !DILocation(line: 152, column: 1, scope: !6612)
!6897 = !{i64 2147605591, i64 2147605634, i64 2147605674}
!6898 = !DILocation(line: 153, column: 1, scope: !6612)
!6899 = !{i64 2147605792, i64 2147605835, i64 2147605875}
!6900 = !DILocation(line: 154, column: 1, scope: !6612)
!6901 = !{i64 2147605991, i64 2147606034, i64 2147606074}
!6902 = !DILocation(line: 155, column: 1, scope: !6612)
!6903 = !{i64 2147606160, i64 2147606203, i64 2147606243}
!6904 = !DILocation(line: 156, column: 1, scope: !6612)
!6905 = !{i64 2147606344, i64 2147606387, i64 2147606427}
!6906 = !DILocation(line: 157, column: 1, scope: !6612)
!6907 = !{i64 2147606528, i64 2147606571, i64 2147606611}
!6908 = !DILocation(line: 158, column: 1, scope: !6612)
!6909 = !{i64 2147606715, i64 2147606758, i64 2147606798}
!6910 = !DILocation(line: 159, column: 1, scope: !6612)
!6911 = !{i64 2147606899, i64 2147606942, i64 2147606982}
!6912 = !DILocation(line: 160, column: 1, scope: !6612)
!6913 = !{i64 2147607137, i64 2147607180, i64 2147607220}
!6914 = !DILocation(line: 161, column: 1, scope: !6612)
!6915 = !{i64 2147607367, i64 2147607410, i64 2147607450}
!6916 = !DILocation(line: 162, column: 1, scope: !6612)
!6917 = !{i64 2147607596, i64 2147607639, i64 2147607679}
!6918 = !DILocation(line: 163, column: 1, scope: !6612)
!6919 = !{i64 2147607783, i64 2147607826, i64 2147607866}
!6920 = !DILocation(line: 164, column: 1, scope: !6612)
!6921 = !{i64 2147607979, i64 2147608022, i64 2147608062}
!6922 = !DILocation(line: 165, column: 1, scope: !6612)
!6923 = !{i64 2147608187, i64 2147608230, i64 2147608270}
!6924 = !DILocation(line: 166, column: 1, scope: !6612)
!6925 = !{i64 2147608399, i64 2147608442, i64 2147608482}
!6926 = !DILocation(line: 167, column: 1, scope: !6612)
!6927 = !{i64 2147608598, i64 2147608641, i64 2147608681}
!6928 = !DILocation(line: 168, column: 1, scope: !6612)
!6929 = !{i64 2147608836, i64 2147608879, i64 2147608919}
!6930 = !DILocation(line: 169, column: 1, scope: !6612)
!6931 = !{i64 2147609032, i64 2147609075, i64 2147609115}
!6932 = !DILocation(line: 170, column: 1, scope: !6612)
!6933 = !{i64 2147609234, i64 2147609277, i64 2147609317}
!6934 = !DILocation(line: 171, column: 1, scope: !6612)
!6935 = !{i64 2147609427, i64 2147609470, i64 2147609510}
!6936 = !DILocation(line: 172, column: 1, scope: !6612)
!6937 = !{i64 2147609661, i64 2147609704, i64 2147609744}
!6938 = !DILocation(line: 173, column: 1, scope: !6612)
!6939 = !{i64 2147609824, i64 2147609867, i64 2147609907}
!6940 = !DILocation(line: 174, column: 1, scope: !6612)
!6941 = !{i64 2147610063, i64 2147610106, i64 2147610146}
!6942 = !DILocation(line: 175, column: 1, scope: !6612)
!6943 = !{i64 2147610302, i64 2147610345, i64 2147610385}
!6944 = !DILocation(line: 176, column: 1, scope: !6612)
!6945 = !{i64 2147610538, i64 2147610581, i64 2147610621}
!6946 = !DILocation(line: 177, column: 1, scope: !6612)
!6947 = !{i64 2147610768, i64 2147610811, i64 2147610851}
!6948 = !DILocation(line: 178, column: 1, scope: !6612)
!6949 = !{i64 2147610982, i64 2147611025, i64 2147611065}
!6950 = !DILocation(line: 179, column: 1, scope: !6612)
!6951 = !{i64 2147611169, i64 2147611212, i64 2147611252}
!6952 = !DILocation(line: 180, column: 1, scope: !6612)
!6953 = !{i64 2147611368, i64 2147611411, i64 2147611451}
!6954 = !DILocation(line: 181, column: 1, scope: !6612)
!6955 = !{i64 2147615700, i64 2147615743, i64 2147615783}
!6956 = !DILocation(line: 182, column: 1, scope: !6612)
!6957 = !{i64 2147615875, i64 2147615918, i64 2147615958}
!6958 = !DILocation(line: 183, column: 1, scope: !6612)
!6959 = !{i64 2147616109, i64 2147616152, i64 2147616192}
!6960 = !DILocation(line: 184, column: 1, scope: !6612)
!6961 = !{i64 2147616317, i64 2147616360, i64 2147616400}
!6962 = !DILocation(line: 185, column: 1, scope: !6612)
!6963 = !{i64 2147616535, i64 2147616578, i64 2147616618}
!6964 = !DILocation(line: 186, column: 1, scope: !6612)
!6965 = !{i64 2147616725, i64 2147616768, i64 2147616808}
!6966 = !DILocation(line: 187, column: 1, scope: !6612)
!6967 = !{i64 2147616957, i64 2147617000, i64 2147617040}
!6968 = !DILocation(line: 188, column: 1, scope: !6612)
!6969 = !{i64 2147617177, i64 2147617220, i64 2147617260}
!6970 = !DILocation(line: 189, column: 1, scope: !6612)
!6971 = !{i64 2147617373, i64 2147617416, i64 2147617456}
!6972 = !DILocation(line: 190, column: 1, scope: !6612)
!6973 = !{i64 2147617579, i64 2147617622, i64 2147617662}
!6974 = !DILocation(line: 191, column: 1, scope: !6612)
!6975 = !{i64 2147617784, i64 2147617827, i64 2147617867}
!6976 = !DILocation(line: 192, column: 1, scope: !6612)
!6977 = !{i64 2147618010, i64 2147618053, i64 2147618093}
!6978 = !DILocation(line: 193, column: 1, scope: !6612)
!6979 = !{i64 2147618218, i64 2147618261, i64 2147618301}
!6980 = !DILocation(line: 194, column: 1, scope: !6612)
!6981 = !{i64 2147618414, i64 2147618457, i64 2147618497}
!6982 = !DILocation(line: 195, column: 1, scope: !6612)
!6983 = !{i64 2147618646, i64 2147618689, i64 2147618729}
!6984 = !DILocation(line: 196, column: 1, scope: !6612)
!6985 = !{i64 2147618824, i64 2147618867, i64 2147618907}
!6986 = !DILocation(line: 197, column: 1, scope: !6612)
!6987 = !{i64 2147619033, i64 2147619076, i64 2147619116}
!6988 = !DILocation(line: 198, column: 1, scope: !6612)
!6989 = !{i64 2147619241, i64 2147619284, i64 2147619324}
!6990 = !DILocation(line: 199, column: 1, scope: !6612)
!6991 = !{i64 2147619437, i64 2147619480, i64 2147619520}
!6992 = !DILocation(line: 200, column: 1, scope: !6612)
!6993 = !{i64 2147619669, i64 2147619712, i64 2147619752}
!6994 = !DILocation(line: 201, column: 1, scope: !6612)
!6995 = !{i64 2147619871, i64 2147619914, i64 2147619954}
!6996 = !DILocation(line: 202, column: 1, scope: !6612)
!6997 = !{i64 2147620121, i64 2147620164, i64 2147620204}
!6998 = !DILocation(line: 203, column: 1, scope: !6612)
!6999 = !{i64 2147620359, i64 2147620402, i64 2147620442}
!7000 = !DILocation(line: 204, column: 1, scope: !6612)
!7001 = !{i64 2147620567, i64 2147620610, i64 2147620650}
!7002 = !DILocation(line: 205, column: 1, scope: !6612)
!7003 = !{i64 2147620763, i64 2147620806, i64 2147620846}
!7004 = !DILocation(line: 206, column: 1, scope: !6612)
!7005 = !{i64 2147620941, i64 2147620984, i64 2147621024}
!7006 = !DILocation(line: 207, column: 1, scope: !6612)
!7007 = !{i64 2147621158, i64 2147621201, i64 2147621241}
!7008 = !DILocation(line: 208, column: 1, scope: !6612)
!7009 = !{i64 2147621363, i64 2147621406, i64 2147621446}
!7010 = !DILocation(line: 209, column: 1, scope: !6612)
!7011 = !{i64 2147621598, i64 2147621641, i64 2147621681}
!7012 = !DILocation(line: 210, column: 1, scope: !6612)
!7013 = !{i64 2147621821, i64 2147621864, i64 2147621904}
!7014 = !DILocation(line: 211, column: 1, scope: !6612)
!7015 = !{i64 2147622038, i64 2147622081, i64 2147622121}
!7016 = !DILocation(line: 212, column: 1, scope: !6612)
!7017 = !{i64 2147622243, i64 2147622286, i64 2147622326}
!7018 = !DILocation(line: 213, column: 1, scope: !6612)
!7019 = !{i64 2147622451, i64 2147622494, i64 2147622534}
!7020 = !DILocation(line: 214, column: 1, scope: !6612)
!7021 = !{i64 2147622647, i64 2147622690, i64 2147622730}
!7022 = !DILocation(line: 215, column: 1, scope: !6612)
!7023 = !{i64 2147622861, i64 2147622904, i64 2147622944}
!7024 = !DILocation(line: 216, column: 1, scope: !6612)
!7025 = !{i64 2147623069, i64 2147623112, i64 2147623152}
!7026 = !DILocation(line: 217, column: 1, scope: !6612)
!7027 = !{i64 2147623259, i64 2147623302, i64 2147623342}
!7028 = !DILocation(line: 218, column: 1, scope: !6612)
!7029 = !{i64 2147623473, i64 2147623516, i64 2147623556}
!7030 = !DILocation(line: 219, column: 1, scope: !6612)
!7031 = !{i64 2147623735, i64 2147623778, i64 2147623818}
!7032 = !DILocation(line: 220, column: 1, scope: !6612)
!7033 = !{i64 2147623946, i64 2147623989, i64 2147624029}
!7034 = !DILocation(line: 221, column: 1, scope: !6612)
!7035 = !{i64 2147624190, i64 2147624233, i64 2147624273}
!7036 = !DILocation(line: 222, column: 1, scope: !6612)
!7037 = !{i64 2147624401, i64 2147624444, i64 2147624484}
!7038 = !DILocation(line: 223, column: 1, scope: !6612)
!7039 = !{i64 2147628691, i64 2147628734, i64 2147628774}
!7040 = !DILocation(line: 224, column: 1, scope: !6612)
!7041 = !{i64 2147628956, i64 2147628999, i64 2147629039}
!7042 = !DILocation(line: 225, column: 1, scope: !6612)
!7043 = !{i64 2147629161, i64 2147629204, i64 2147629244}
!7044 = !DILocation(line: 226, column: 1, scope: !6612)
!7045 = !{i64 2147629357, i64 2147629400, i64 2147629440}
!7046 = !DILocation(line: 227, column: 1, scope: !6612)
!7047 = !{i64 2147629580, i64 2147629623, i64 2147629663}
!7048 = !DILocation(line: 228, column: 1, scope: !6612)
!7049 = !{i64 2147629743, i64 2147629786, i64 2147629826}
!7050 = !DILocation(line: 229, column: 1, scope: !6612)
!7051 = !{i64 2147629948, i64 2147629991, i64 2147630031}
!7052 = !DILocation(line: 230, column: 1, scope: !6612)
!7053 = !{i64 2147630168, i64 2147630211, i64 2147630251}
!7054 = !DILocation(line: 231, column: 1, scope: !6612)
!7055 = !{i64 2147630382, i64 2147630425, i64 2147630465}
!7056 = !DILocation(line: 232, column: 1, scope: !6612)
!7057 = !{i64 2147630626, i64 2147630669, i64 2147630709}
!7058 = !DILocation(line: 233, column: 1, scope: !6612)
!7059 = !{i64 2147630858, i64 2147630901, i64 2147630941}
!7060 = !DILocation(line: 234, column: 1, scope: !6612)
!7061 = !{i64 2147631072, i64 2147631115, i64 2147631155}
!7062 = !DILocation(line: 235, column: 1, scope: !6612)
!7063 = !{i64 2147631283, i64 2147631326, i64 2147631366}
!7064 = !DILocation(line: 236, column: 1, scope: !6612)
!7065 = !{i64 2147631476, i64 2147631519, i64 2147631559}
!7066 = !DILocation(line: 237, column: 1, scope: !6612)
!7067 = !{i64 2147631675, i64 2147631718, i64 2147631758}
!7068 = !DILocation(line: 238, column: 1, scope: !6612)
!7069 = !{i64 2147631847, i64 2147631890, i64 2147631930}
!7070 = !DILocation(line: 239, column: 1, scope: !6612)
!7071 = !{i64 2147632040, i64 2147632083, i64 2147632123}
!7072 = !DILocation(line: 240, column: 1, scope: !6612)
!7073 = !{i64 2147632212, i64 2147632255, i64 2147632295}
!7074 = !DILocation(line: 241, column: 1, scope: !6612)
!7075 = !{i64 2147632402, i64 2147632445, i64 2147632485}
!7076 = !DILocation(line: 242, column: 1, scope: !6612)
!7077 = !{i64 2147632595, i64 2147632638, i64 2147632678}
!7078 = !DILocation(line: 243, column: 1, scope: !6612)
!7079 = !{i64 2147632791, i64 2147632834, i64 2147632874}
!7080 = !DILocation(line: 244, column: 1, scope: !6612)
!7081 = !{i64 2147632954, i64 2147632997, i64 2147633037}
!7082 = !DILocation(line: 245, column: 1, scope: !6612)
!7083 = !{i64 2147633156, i64 2147633199, i64 2147633239}
!7084 = !DILocation(line: 246, column: 1, scope: !6612)
!7085 = !{i64 2147633361, i64 2147633404, i64 2147633444}
!7086 = !DILocation(line: 247, column: 1, scope: !6612)
!7087 = !{i64 2147633569, i64 2147633612, i64 2147633652}
!7088 = !DILocation(line: 248, column: 1, scope: !6612)
!7089 = !{i64 2147633762, i64 2147633805, i64 2147633845}
!7090 = !DILocation(line: 249, column: 1, scope: !6612)
!7091 = !{i64 2147633949, i64 2147633992, i64 2147634032}
!7092 = !DILocation(line: 250, column: 1, scope: !6612)
!7093 = !{i64 2147634166, i64 2147634209, i64 2147634249}
!7094 = !DILocation(line: 251, column: 1, scope: !6612)
!7095 = !{i64 2147634386, i64 2147634429, i64 2147634469}
!7096 = !DILocation(line: 252, column: 1, scope: !6612)
!7097 = !{i64 2147634613, i64 2147634656, i64 2147634696}
!7098 = !DILocation(line: 253, column: 1, scope: !6612)
!7099 = !{i64 2147634830, i64 2147634873, i64 2147634913}
!7100 = !DILocation(line: 254, column: 1, scope: !6612)
!7101 = !{i64 2147635122, i64 2147635165, i64 2147635205}
!7102 = !DILocation(line: 255, column: 1, scope: !6612)
!7103 = !{i64 2147635354, i64 2147635397, i64 2147635437}
!7104 = !DILocation(line: 256, column: 1, scope: !6612)
!7105 = !{i64 2147635571, i64 2147635614, i64 2147635654}
!7106 = !DILocation(line: 257, column: 1, scope: !6612)
!7107 = !{i64 2147635778, i64 2147635821, i64 2147635861}
!7108 = !DILocation(line: 258, column: 1, scope: !6612)
!7109 = !{i64 2147635979, i64 2147636022, i64 2147636062}
!7110 = !DILocation(line: 259, column: 1, scope: !6612)
!7111 = !{i64 2147636211, i64 2147636254, i64 2147636294}
!7112 = !DILocation(line: 260, column: 1, scope: !6612)
!7113 = !{i64 2147636419, i64 2147636462, i64 2147636502}
!7114 = !DILocation(line: 261, column: 1, scope: !6612)
!7115 = !{i64 2147636609, i64 2147636652, i64 2147636692}
!7116 = !DILocation(line: 262, column: 1, scope: !6612)
!7117 = !{i64 2147636835, i64 2147636878, i64 2147636918}
!7118 = !DILocation(line: 263, column: 1, scope: !6612)
!7119 = !{i64 2147637024, i64 2147637067, i64 2147637107}
!7120 = !DILocation(line: 264, column: 1, scope: !6612)
!7121 = !{i64 2147637295, i64 2147637338, i64 2147637378}
!7122 = !DILocation(line: 265, column: 1, scope: !6612)
!7123 = !{i64 2147641576, i64 2147641619, i64 2147641659}
!7124 = !DILocation(line: 266, column: 1, scope: !6612)
!7125 = !{i64 2147641829, i64 2147641872, i64 2147641912}
!7126 = !DILocation(line: 267, column: 1, scope: !6612)
!7127 = !{i64 2147642037, i64 2147642080, i64 2147642120}
!7128 = !DILocation(line: 268, column: 1, scope: !6612)
!7129 = !{i64 2147642269, i64 2147642312, i64 2147642352}
!7130 = !DILocation(line: 269, column: 1, scope: !6612)
!7131 = !{i64 2147642480, i64 2147642523, i64 2147642563}
!7132 = !DILocation(line: 270, column: 1, scope: !6612)
!7133 = !{i64 2147642670, i64 2147642713, i64 2147642753}
!7134 = !DILocation(line: 271, column: 1, scope: !6612)
!7135 = !{i64 2147642884, i64 2147642927, i64 2147642967}
!7136 = !DILocation(line: 272, column: 1, scope: !6612)
!7137 = !{i64 2147643083, i64 2147643126, i64 2147643166}
!7138 = !DILocation(line: 273, column: 1, scope: !6612)
!7139 = !{i64 2147643270, i64 2147643313, i64 2147643353}
!7140 = !DILocation(line: 274, column: 1, scope: !6612)
!7141 = !{i64 2147643478, i64 2147643521, i64 2147643561}
!7142 = !DILocation(line: 275, column: 1, scope: !6612)
!7143 = !{i64 2147643707, i64 2147643750, i64 2147643790}
!7144 = !DILocation(line: 276, column: 1, scope: !6612)
!7145 = !{i64 2147643909, i64 2147643952, i64 2147643992}
!7146 = !DILocation(line: 277, column: 1, scope: !6612)
!7147 = !{i64 2147644108, i64 2147644151, i64 2147644191}
!7148 = !DILocation(line: 278, column: 1, scope: !6612)
!7149 = !{i64 2147644325, i64 2147644368, i64 2147644408}
!7150 = !DILocation(line: 280, column: 1, scope: !6612)
!7151 = distinct !DISubprogram(name: "nxp_mcimx7_init", scope: !860, file: !860, line: 225, type: !867, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !446, retainedNodes: !7152)
!7152 = !{!7153}
!7153 = !DILocalVariable(name: "arg", arg: 1, scope: !7151, file: !860, line: 225, type: !869)
!7154 = !DILocation(line: 0, scope: !7151)
!7155 = !DILocation(line: 230, column: 2, scope: !7151)
!7156 = !DILocation(line: 233, column: 2, scope: !7151)
!7157 = !DILocation(line: 236, column: 2, scope: !7151)
!7158 = !DILocation(line: 255, column: 2, scope: !7151)
!7159 = distinct !DISubprogram(name: "SOC_RdcInit", scope: !860, file: !860, line: 50, type: !260, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !446, retainedNodes: !391)
!7160 = !DILocation(line: 53, column: 2, scope: !7159)
!7161 = !DILocation(line: 54, column: 1, scope: !7159)
!7162 = distinct !DISubprogram(name: "SOC_ClockInit", scope: !860, file: !860, line: 14, type: !260, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !446, retainedNodes: !391)
!7163 = !DILocation(line: 23, column: 2, scope: !7162)
!7164 = !DILocation(line: 24, column: 2, scope: !7162)
!7165 = !DILocation(line: 25, column: 2, scope: !7162)
!7166 = !DILocation(line: 27, column: 2, scope: !7162)
!7167 = !DILocation(line: 31, column: 2, scope: !7162)
!7168 = !DILocation(line: 33, column: 2, scope: !7162)
!7169 = !DILocation(line: 36, column: 2, scope: !7162)
!7170 = !DILocation(line: 37, column: 2, scope: !7162)
!7171 = !DILocation(line: 40, column: 2, scope: !7162)
!7172 = !DILocation(line: 41, column: 2, scope: !7162)
!7173 = !DILocation(line: 42, column: 2, scope: !7162)
!7174 = !DILocation(line: 43, column: 2, scope: !7162)
!7175 = !DILocation(line: 44, column: 2, scope: !7162)
!7176 = !DILocation(line: 47, column: 2, scope: !7162)
!7177 = !DILocation(line: 48, column: 1, scope: !7162)
!7178 = distinct !DISubprogram(name: "nxp_mcimx7_gpio_config", scope: !860, file: !860, line: 57, type: !260, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !446, retainedNodes: !391)
!7179 = !DILocation(line: 61, column: 2, scope: !7178)
!7180 = !DILocation(line: 63, column: 2, scope: !7178)
!7181 = !DILocation(line: 80, column: 1, scope: !7178)
!7182 = distinct !DISubprogram(name: "RDC_SetPdapAccess", scope: !7183, file: !7183, line: 164, type: !7184, scopeLine: 165, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !446, retainedNodes: !7186)
!7183 = !DIFile(filename: "modules/hal/nxp/imx/drivers/./rdc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7184 = !DISubroutineType(types: !7185)
!7185 = !{null, !804, !113, !169, !911, !911}
!7186 = !{!7187, !7188, !7189, !7190, !7191}
!7187 = !DILocalVariable(name: "base", arg: 1, scope: !7182, file: !7183, line: 164, type: !804)
!7188 = !DILocalVariable(name: "pdap", arg: 2, scope: !7182, file: !7183, line: 164, type: !113)
!7189 = !DILocalVariable(name: "perm", arg: 3, scope: !7182, file: !7183, line: 164, type: !169)
!7190 = !DILocalVariable(name: "sreq", arg: 4, scope: !7182, file: !7183, line: 164, type: !911)
!7191 = !DILocalVariable(name: "lock", arg: 5, scope: !7182, file: !7183, line: 164, type: !911)
!7192 = !DILocation(line: 0, scope: !7182)
!7193 = !DILocation(line: 166, column: 24, scope: !7182)
!7194 = !DILocation(line: 166, column: 5, scope: !7182)
!7195 = !DILocation(line: 166, column: 22, scope: !7182)
!7196 = !DILocation(line: 167, column: 1, scope: !7182)
!7197 = distinct !DISubprogram(name: "CCM_ControlGate", scope: !450, file: !450, line: 454, type: !7198, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !446, retainedNodes: !7200)
!7198 = !DISubroutineType(types: !7199)
!7199 = !{null, !732, !113, !113}
!7200 = !{!7201, !7202, !7203}
!7201 = !DILocalVariable(name: "base", arg: 1, scope: !7197, file: !450, line: 454, type: !732)
!7202 = !DILocalVariable(name: "ccmGate", arg: 2, scope: !7197, file: !450, line: 454, type: !113)
!7203 = !DILocalVariable(name: "control", arg: 3, scope: !7197, file: !450, line: 454, type: !113)
!7204 = !DILocation(line: 0, scope: !7197)
!7205 = !DILocation(line: 456, column: 5, scope: !7197)
!7206 = !DILocation(line: 456, column: 22, scope: !7197)
!7207 = !DILocation(line: 457, column: 1, scope: !7197)
!7208 = distinct !DISubprogram(name: "CCM_EnableRoot", scope: !450, file: !450, line: 379, type: !7209, scopeLine: 380, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !446, retainedNodes: !7211)
!7209 = !DISubroutineType(types: !7210)
!7210 = !{null, !732, !113}
!7211 = !{!7212, !7213}
!7212 = !DILocalVariable(name: "base", arg: 1, scope: !7208, file: !450, line: 379, type: !732)
!7213 = !DILocalVariable(name: "ccmRoot", arg: 2, scope: !7208, file: !450, line: 379, type: !113)
!7214 = !DILocation(line: 0, scope: !7208)
!7215 = !DILocation(line: 381, column: 26, scope: !7208)
!7216 = !DILocation(line: 382, column: 1, scope: !7208)
!7217 = distinct !DISubprogram(name: "WDOG_DisablePowerdown", scope: !7218, file: !7218, line: 136, type: !7219, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !446, retainedNodes: !7221)
!7218 = !DIFile(filename: "modules/hal/nxp/imx/drivers/./wdog_imx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7219 = !DISubroutineType(types: !7220)
!7220 = !{null, !847}
!7221 = !{!7222}
!7222 = !DILocalVariable(name: "base", arg: 1, scope: !7217, file: !7218, line: 136, type: !847)
!7223 = !DILocation(line: 0, scope: !7217)
!7224 = !DILocation(line: 138, column: 16, scope: !7217)
!7225 = !DILocation(line: 139, column: 1, scope: !7217)
!7226 = distinct !DISubprogram(name: "RDC_SetDomainID", scope: !7183, file: !7183, line: 136, type: !7227, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !446, retainedNodes: !7229)
!7227 = !DISubroutineType(types: !7228)
!7228 = !{null, !804, !113, !113, !911}
!7229 = !{!7230, !7231, !7232, !7233}
!7230 = !DILocalVariable(name: "base", arg: 1, scope: !7226, file: !7183, line: 136, type: !804)
!7231 = !DILocalVariable(name: "mda", arg: 2, scope: !7226, file: !7183, line: 136, type: !113)
!7232 = !DILocalVariable(name: "domainId", arg: 3, scope: !7226, file: !7183, line: 136, type: !113)
!7233 = !DILocalVariable(name: "lock", arg: 4, scope: !7226, file: !7183, line: 136, type: !911)
!7234 = !DILocation(line: 0, scope: !7226)
!7235 = !DILocation(line: 140, column: 20, scope: !7226)
!7236 = !DILocation(line: 141, column: 1, scope: !7226)
!7237 = distinct !DISubprogram(name: "z_log_minimal_printk", scope: !7238, file: !7238, line: 14, type: !4785, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2419, retainedNodes: !7239)
!7238 = !DIFile(filename: "zephyr/subsys/logging/log_minimal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7239 = !{!7240, !7241}
!7240 = !DILocalVariable(name: "fmt", arg: 1, scope: !7237, file: !7238, line: 14, type: !263)
!7241 = !DILocalVariable(name: "ap", scope: !7237, file: !7238, line: 16, type: !7242)
!7242 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3793, line: 99, baseType: !7243)
!7243 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3793, line: 40, baseType: !7244)
!7244 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !7238, baseType: !7245)
!7245 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !7246)
!7246 = !{!7247}
!7247 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !7245, file: !7238, line: 16, baseType: !104, size: 32)
!7248 = !DILocation(line: 0, scope: !7237)
!7249 = !DILocation(line: 16, column: 2, scope: !7237)
!7250 = !DILocation(line: 16, column: 10, scope: !7237)
!7251 = !DILocation(line: 18, column: 2, scope: !7237)
!7252 = !DILocation(line: 19, column: 2, scope: !7237)
!7253 = !DILocation(line: 20, column: 2, scope: !7237)
!7254 = !DILocation(line: 21, column: 1, scope: !7237)
!7255 = distinct !DISubprogram(name: "z_log_minimal_vprintk", scope: !7238, file: !7238, line: 23, type: !7256, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2419, retainedNodes: !7258)
!7256 = !DISubroutineType(types: !7257)
!7257 = !{null, !263, !7242}
!7258 = !{!7259, !7260}
!7259 = !DILocalVariable(name: "fmt", arg: 1, scope: !7255, file: !7238, line: 23, type: !263)
!7260 = !DILocalVariable(name: "ap", arg: 2, scope: !7255, file: !7238, line: 23, type: !7242)
!7261 = !DILocation(line: 0, scope: !7255)
!7262 = !DILocation(line: 25, column: 2, scope: !7255)
!7263 = !DILocation(line: 26, column: 1, scope: !7255)
!7264 = distinct !DISubprogram(name: "z_log_minimal_hexdump_print", scope: !7238, file: !7238, line: 52, type: !7265, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2419, retainedNodes: !7267)
!7265 = !DISubroutineType(types: !7266)
!7266 = !{null, !105, !13, !111}
!7267 = !{!7268, !7269, !7270, !7271}
!7268 = !DILocalVariable(name: "level", arg: 1, scope: !7264, file: !7238, line: 52, type: !105)
!7269 = !DILocalVariable(name: "data", arg: 2, scope: !7264, file: !7238, line: 52, type: !13)
!7270 = !DILocalVariable(name: "size", arg: 3, scope: !7264, file: !7238, line: 52, type: !111)
!7271 = !DILocalVariable(name: "data_buffer", scope: !7264, file: !7238, line: 54, type: !263)
!7272 = !DILocation(line: 0, scope: !7264)
!7273 = !DILocation(line: 55, column: 14, scope: !7264)
!7274 = !DILocation(line: 55, column: 2, scope: !7264)
!7275 = !DILocation(line: 56, column: 3, scope: !7276)
!7276 = distinct !DILexicalBlock(scope: !7264, file: !7238, line: 55, column: 20)
!7277 = !DILocation(line: 57, column: 3, scope: !7276)
!7278 = !DILocation(line: 59, column: 7, scope: !7276)
!7279 = distinct !{!7279, !7274, !7280}
!7280 = !DILocation(line: 65, column: 2, scope: !7264)
!7281 = !DILocation(line: 66, column: 1, scope: !7264)
!7282 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !3258, file: !3258, line: 175, type: !3259, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2419, retainedNodes: !7283)
!7283 = !{!7284}
!7284 = !DILocalVariable(name: "level", arg: 1, scope: !7282, file: !3258, line: 175, type: !105)
!7285 = !DILocation(line: 0, scope: !7282)
!7286 = !DILocation(line: 177, column: 2, scope: !7282)
!7287 = !DILocation(line: 189, column: 1, scope: !7282)
!7288 = distinct !DISubprogram(name: "minimal_hexdump_line_print", scope: !7238, file: !7238, line: 28, type: !7289, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2419, retainedNodes: !7291)
!7289 = !DISubroutineType(types: !7290)
!7290 = !{null, !263, !111}
!7291 = !{!7292, !7293, !7294, !7296, !7298}
!7292 = !DILocalVariable(name: "data", arg: 1, scope: !7288, file: !7238, line: 28, type: !263)
!7293 = !DILocalVariable(name: "length", arg: 2, scope: !7288, file: !7238, line: 28, type: !111)
!7294 = !DILocalVariable(name: "i", scope: !7295, file: !7238, line: 30, type: !111)
!7295 = distinct !DILexicalBlock(scope: !7288, file: !7238, line: 30, column: 2)
!7296 = !DILocalVariable(name: "i", scope: !7297, file: !7238, line: 40, type: !111)
!7297 = distinct !DILexicalBlock(scope: !7288, file: !7238, line: 40, column: 2)
!7298 = !DILocalVariable(name: "c", scope: !7299, file: !7238, line: 42, type: !170)
!7299 = distinct !DILexicalBlock(scope: !7300, file: !7238, line: 41, column: 19)
!7300 = distinct !DILexicalBlock(scope: !7301, file: !7238, line: 41, column: 7)
!7301 = distinct !DILexicalBlock(scope: !7302, file: !7238, line: 40, column: 54)
!7302 = distinct !DILexicalBlock(scope: !7297, file: !7238, line: 40, column: 2)
!7303 = !DILocation(line: 0, scope: !7288)
!7304 = !DILocation(line: 0, scope: !7295)
!7305 = !DILocation(line: 30, column: 2, scope: !7295)
!7306 = !DILocation(line: 38, column: 2, scope: !7288)
!7307 = !DILocation(line: 0, scope: !7297)
!7308 = !DILocation(line: 40, column: 2, scope: !7297)
!7309 = !DILocation(line: 31, column: 9, scope: !7310)
!7310 = distinct !DILexicalBlock(scope: !7311, file: !7238, line: 31, column: 7)
!7311 = distinct !DILexicalBlock(scope: !7312, file: !7238, line: 30, column: 54)
!7312 = distinct !DILexicalBlock(scope: !7295, file: !7238, line: 30, column: 2)
!7313 = !DILocation(line: 31, column: 7, scope: !7311)
!7314 = !DILocation(line: 32, column: 35, scope: !7315)
!7315 = distinct !DILexicalBlock(scope: !7310, file: !7238, line: 31, column: 19)
!7316 = !DILocation(line: 32, column: 20, scope: !7315)
!7317 = !DILocation(line: 32, column: 4, scope: !7315)
!7318 = !DILocation(line: 33, column: 3, scope: !7315)
!7319 = !DILocation(line: 34, column: 4, scope: !7320)
!7320 = distinct !DILexicalBlock(scope: !7310, file: !7238, line: 33, column: 10)
!7321 = !DILocation(line: 30, column: 50, scope: !7312)
!7322 = !DILocation(line: 30, column: 24, scope: !7312)
!7323 = distinct !{!7323, !7305, !7324}
!7324 = !DILocation(line: 36, column: 2, scope: !7295)
!7325 = !DILocation(line: 49, column: 2, scope: !7288)
!7326 = !DILocation(line: 50, column: 1, scope: !7288)
!7327 = !DILocation(line: 41, column: 9, scope: !7300)
!7328 = !DILocation(line: 41, column: 7, scope: !7301)
!7329 = !DILocation(line: 42, column: 22, scope: !7299)
!7330 = !DILocation(line: 0, scope: !7299)
!7331 = !DILocation(line: 44, column: 25, scope: !7299)
!7332 = !DILocation(line: 44, column: 17, scope: !7299)
!7333 = !DILocation(line: 44, column: 33, scope: !7299)
!7334 = !DILocation(line: 44, column: 4, scope: !7299)
!7335 = !DILocation(line: 45, column: 3, scope: !7299)
!7336 = !DILocation(line: 46, column: 4, scope: !7337)
!7337 = distinct !DILexicalBlock(scope: !7300, file: !7238, line: 45, column: 10)
!7338 = !DILocation(line: 40, column: 50, scope: !7302)
!7339 = !DILocation(line: 40, column: 24, scope: !7302)
!7340 = distinct !{!7340, !7308, !7341}
!7341 = !DILocation(line: 48, column: 2, scope: !7297)
!7342 = distinct !DISubprogram(name: "isprint", scope: !6356, file: !6356, line: 37, type: !442, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2419, retainedNodes: !7343)
!7343 = !{!7344}
!7344 = !DILocalVariable(name: "c", arg: 1, scope: !7342, file: !6356, line: 37, type: !105)
!7345 = !DILocation(line: 0, scope: !7342)
!7346 = !DILocation(line: 39, column: 38, scope: !7342)
!7347 = !DILocation(line: 39, column: 2, scope: !7342)
!7348 = distinct !DISubprogram(name: "z_arm_fatal_error", scope: !7349, file: !7349, line: 57, type: !7350, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !7396)
!7349 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7350 = !DISubroutineType(types: !7351)
!7351 = !{null, !32, !7352}
!7352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7353, size: 32)
!7353 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7354)
!7354 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2543, line: 141, baseType: !7355)
!7355 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2543, line: 97, size: 256, elements: !7356)
!7356 = !{!7357}
!7357 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !7355, file: !2543, line: 107, baseType: !7358, size: 256)
!7358 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2543, line: 98, size: 256, elements: !7359)
!7359 = !{!7360, !7365, !7370, !7375, !7380, !7385, !7390, !7395}
!7360 = !DIDerivedType(tag: DW_TAG_member, scope: !7358, file: !2543, line: 99, baseType: !7361, size: 32)
!7361 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7358, file: !2543, line: 99, size: 32, elements: !7362)
!7362 = !{!7363, !7364}
!7363 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !7361, file: !2543, line: 99, baseType: !113, size: 32)
!7364 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !7361, file: !2543, line: 99, baseType: !113, size: 32)
!7365 = !DIDerivedType(tag: DW_TAG_member, scope: !7358, file: !2543, line: 100, baseType: !7366, size: 32, offset: 32)
!7366 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7358, file: !2543, line: 100, size: 32, elements: !7367)
!7367 = !{!7368, !7369}
!7368 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !7366, file: !2543, line: 100, baseType: !113, size: 32)
!7369 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !7366, file: !2543, line: 100, baseType: !113, size: 32)
!7370 = !DIDerivedType(tag: DW_TAG_member, scope: !7358, file: !2543, line: 101, baseType: !7371, size: 32, offset: 64)
!7371 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7358, file: !2543, line: 101, size: 32, elements: !7372)
!7372 = !{!7373, !7374}
!7373 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !7371, file: !2543, line: 101, baseType: !113, size: 32)
!7374 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !7371, file: !2543, line: 101, baseType: !113, size: 32)
!7375 = !DIDerivedType(tag: DW_TAG_member, scope: !7358, file: !2543, line: 102, baseType: !7376, size: 32, offset: 96)
!7376 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7358, file: !2543, line: 102, size: 32, elements: !7377)
!7377 = !{!7378, !7379}
!7378 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !7376, file: !2543, line: 102, baseType: !113, size: 32)
!7379 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !7376, file: !2543, line: 102, baseType: !113, size: 32)
!7380 = !DIDerivedType(tag: DW_TAG_member, scope: !7358, file: !2543, line: 103, baseType: !7381, size: 32, offset: 128)
!7381 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7358, file: !2543, line: 103, size: 32, elements: !7382)
!7382 = !{!7383, !7384}
!7383 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !7381, file: !2543, line: 103, baseType: !113, size: 32)
!7384 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !7381, file: !2543, line: 103, baseType: !113, size: 32)
!7385 = !DIDerivedType(tag: DW_TAG_member, scope: !7358, file: !2543, line: 104, baseType: !7386, size: 32, offset: 160)
!7386 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7358, file: !2543, line: 104, size: 32, elements: !7387)
!7387 = !{!7388, !7389}
!7388 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !7386, file: !2543, line: 104, baseType: !113, size: 32)
!7389 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !7386, file: !2543, line: 104, baseType: !113, size: 32)
!7390 = !DIDerivedType(tag: DW_TAG_member, scope: !7358, file: !2543, line: 105, baseType: !7391, size: 32, offset: 192)
!7391 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7358, file: !2543, line: 105, size: 32, elements: !7392)
!7392 = !{!7393, !7394}
!7393 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !7391, file: !2543, line: 105, baseType: !113, size: 32)
!7394 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !7391, file: !2543, line: 105, baseType: !113, size: 32)
!7395 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !7358, file: !2543, line: 106, baseType: !113, size: 32, offset: 224)
!7396 = !{!7397, !7398}
!7397 = !DILocalVariable(name: "reason", arg: 1, scope: !7348, file: !7349, line: 57, type: !32)
!7398 = !DILocalVariable(name: "esf", arg: 2, scope: !7348, file: !7349, line: 57, type: !7352)
!7399 = !DILocation(line: 0, scope: !7348)
!7400 = !DILocation(line: 60, column: 10, scope: !7401)
!7401 = distinct !DILexicalBlock(scope: !7348, file: !7349, line: 60, column: 6)
!7402 = !DILocation(line: 60, column: 6, scope: !7348)
!7403 = !DILocation(line: 61, column: 3, scope: !7404)
!7404 = distinct !DILexicalBlock(scope: !7401, file: !7349, line: 60, column: 19)
!7405 = !DILocation(line: 62, column: 2, scope: !7404)
!7406 = !DILocation(line: 63, column: 2, scope: !7348)
!7407 = !DILocation(line: 64, column: 1, scope: !7348)
!7408 = distinct !DISubprogram(name: "esf_dump", scope: !7349, file: !7349, line: 20, type: !7409, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !7411)
!7409 = !DISubroutineType(types: !7410)
!7410 = !{null, !7352}
!7411 = !{!7412}
!7412 = !DILocalVariable(name: "esf", arg: 1, scope: !7408, file: !7349, line: 20, type: !7352)
!7413 = !DILocation(line: 0, scope: !7408)
!7414 = !DILocation(line: 22, column: 2, scope: !7415)
!7415 = distinct !DILexicalBlock(scope: !7416, file: !7349, line: 22, column: 2)
!7416 = distinct !DILexicalBlock(scope: !7417, file: !7349, line: 22, column: 2)
!7417 = distinct !DILexicalBlock(scope: !7418, file: !7349, line: 22, column: 2)
!7418 = distinct !DILexicalBlock(scope: !7408, file: !7349, line: 22, column: 2)
!7419 = !DILocation(line: 24, column: 2, scope: !7420)
!7420 = distinct !DILexicalBlock(scope: !7421, file: !7349, line: 24, column: 2)
!7421 = distinct !DILexicalBlock(scope: !7422, file: !7349, line: 24, column: 2)
!7422 = distinct !DILexicalBlock(scope: !7423, file: !7349, line: 24, column: 2)
!7423 = distinct !DILexicalBlock(scope: !7408, file: !7349, line: 24, column: 2)
!7424 = !DILocation(line: 26, column: 2, scope: !7425)
!7425 = distinct !DILexicalBlock(scope: !7426, file: !7349, line: 26, column: 2)
!7426 = distinct !DILexicalBlock(scope: !7427, file: !7349, line: 26, column: 2)
!7427 = distinct !DILexicalBlock(scope: !7428, file: !7349, line: 26, column: 2)
!7428 = distinct !DILexicalBlock(scope: !7408, file: !7349, line: 26, column: 2)
!7429 = !DILocation(line: 53, column: 2, scope: !7430)
!7430 = distinct !DILexicalBlock(scope: !7431, file: !7349, line: 53, column: 2)
!7431 = distinct !DILexicalBlock(scope: !7432, file: !7349, line: 53, column: 2)
!7432 = distinct !DILexicalBlock(scope: !7433, file: !7349, line: 53, column: 2)
!7433 = distinct !DILexicalBlock(scope: !7408, file: !7349, line: 53, column: 2)
!7434 = !DILocation(line: 55, column: 1, scope: !7408)
!7435 = distinct !DISubprogram(name: "z_do_kernel_oops", scope: !7349, file: !7349, line: 82, type: !7436, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !7451)
!7436 = !DISubroutineType(types: !7437)
!7437 = !{null, !7352, !7438}
!7438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7439, size: 32)
!7439 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !200, line: 37, baseType: !7440)
!7440 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !200, line: 25, size: 288, elements: !7441)
!7441 = !{!7442, !7443, !7444, !7445, !7446, !7447, !7448, !7449, !7450}
!7442 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7440, file: !200, line: 26, baseType: !113, size: 32)
!7443 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7440, file: !200, line: 27, baseType: !113, size: 32, offset: 32)
!7444 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7440, file: !200, line: 28, baseType: !113, size: 32, offset: 64)
!7445 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7440, file: !200, line: 29, baseType: !113, size: 32, offset: 96)
!7446 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7440, file: !200, line: 30, baseType: !113, size: 32, offset: 128)
!7447 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7440, file: !200, line: 31, baseType: !113, size: 32, offset: 160)
!7448 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7440, file: !200, line: 32, baseType: !113, size: 32, offset: 192)
!7449 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7440, file: !200, line: 33, baseType: !113, size: 32, offset: 224)
!7450 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7440, file: !200, line: 34, baseType: !113, size: 32, offset: 256)
!7451 = !{!7452, !7453, !7454}
!7452 = !DILocalVariable(name: "esf", arg: 1, scope: !7435, file: !7349, line: 82, type: !7352)
!7453 = !DILocalVariable(name: "callee_regs", arg: 2, scope: !7435, file: !7349, line: 82, type: !7438)
!7454 = !DILocalVariable(name: "reason", scope: !7435, file: !7349, line: 88, type: !32)
!7455 = !DILocation(line: 0, scope: !7435)
!7456 = !DILocation(line: 88, column: 35, scope: !7435)
!7457 = !DILocation(line: 108, column: 2, scope: !7435)
!7458 = !DILocation(line: 131, column: 1, scope: !7435)
!7459 = distinct !DISubprogram(name: "arch_syscall_oops", scope: !7349, file: !7349, line: 133, type: !7460, scopeLine: 134, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2422, retainedNodes: !7462)
!7460 = !DISubroutineType(types: !7461)
!7461 = !{null, !104}
!7462 = !{!7463, !7464, !7465}
!7463 = !DILocalVariable(name: "ssf_ptr", arg: 1, scope: !7459, file: !7349, line: 133, type: !104)
!7464 = !DILocalVariable(name: "ssf_contents", scope: !7459, file: !7349, line: 135, type: !1417)
!7465 = !DILocalVariable(name: "oops_esf", scope: !7459, file: !7349, line: 136, type: !7354)
!7466 = !DILocation(line: 0, scope: !7459)
!7467 = !DILocation(line: 136, column: 2, scope: !7459)
!7468 = !DILocation(line: 136, column: 15, scope: !7459)
!7469 = !DILocation(line: 139, column: 22, scope: !7459)
!7470 = !DILocation(line: 139, column: 17, scope: !7459)
!7471 = !DILocation(line: 139, column: 20, scope: !7459)
!7472 = !DILocation(line: 141, column: 2, scope: !7459)
!7473 = !DILocation(line: 142, column: 2, scope: !7459)
!7474 = distinct !DISubprogram(name: "arch_irq_enable", scope: !7475, file: !7475, line: 40, type: !7476, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2433, retainedNodes: !7478)
!7475 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7476 = !DISubroutineType(types: !7477)
!7477 = !{null, !32}
!7478 = !{!7479}
!7479 = !DILocalVariable(name: "irq", arg: 1, scope: !7474, file: !7475, line: 40, type: !32)
!7480 = !DILocation(line: 0, scope: !7474)
!7481 = !DILocation(line: 42, column: 2, scope: !7474)
!7482 = !DILocation(line: 43, column: 1, scope: !7474)
!7483 = distinct !DISubprogram(name: "__NVIC_EnableIRQ", scope: !1612, file: !1612, line: 1684, type: !7484, scopeLine: 1685, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2433, retainedNodes: !7486)
!7484 = !DISubroutineType(types: !7485)
!7485 = !{null, !2437}
!7486 = !{!7487}
!7487 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7483, file: !1612, line: 1684, type: !2437)
!7488 = !DILocation(line: 0, scope: !7483)
!7489 = !DILocation(line: 1686, column: 23, scope: !7490)
!7490 = distinct !DILexicalBlock(scope: !7483, file: !1612, line: 1686, column: 7)
!7491 = !DILocation(line: 1686, column: 7, scope: !7483)
!7492 = !DILocation(line: 1688, column: 5, scope: !7493)
!7493 = distinct !DILexicalBlock(scope: !7490, file: !1612, line: 1687, column: 3)
!7494 = !{i64 2154452083}
!7495 = !DILocation(line: 1689, column: 81, scope: !7493)
!7496 = !DILocation(line: 1689, column: 60, scope: !7493)
!7497 = !DILocation(line: 1689, column: 34, scope: !7493)
!7498 = !DILocation(line: 1689, column: 5, scope: !7493)
!7499 = !DILocation(line: 1689, column: 43, scope: !7493)
!7500 = !DILocation(line: 1690, column: 5, scope: !7493)
!7501 = !{i64 2154452197}
!7502 = !DILocation(line: 1691, column: 3, scope: !7493)
!7503 = !DILocation(line: 1692, column: 1, scope: !7483)
!7504 = distinct !DISubprogram(name: "arch_irq_disable", scope: !7475, file: !7475, line: 45, type: !7476, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2433, retainedNodes: !7505)
!7505 = !{!7506}
!7506 = !DILocalVariable(name: "irq", arg: 1, scope: !7504, file: !7475, line: 45, type: !32)
!7507 = !DILocation(line: 0, scope: !7504)
!7508 = !DILocation(line: 47, column: 2, scope: !7504)
!7509 = !DILocation(line: 48, column: 1, scope: !7504)
!7510 = distinct !DISubprogram(name: "__NVIC_DisableIRQ", scope: !1612, file: !1612, line: 1722, type: !7484, scopeLine: 1723, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2433, retainedNodes: !7511)
!7511 = !{!7512}
!7512 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7510, file: !1612, line: 1722, type: !2437)
!7513 = !DILocation(line: 0, scope: !7510)
!7514 = !DILocation(line: 1724, column: 23, scope: !7515)
!7515 = distinct !DILexicalBlock(scope: !7510, file: !1612, line: 1724, column: 7)
!7516 = !DILocation(line: 1724, column: 7, scope: !7510)
!7517 = !DILocation(line: 1726, column: 81, scope: !7518)
!7518 = distinct !DILexicalBlock(scope: !7515, file: !1612, line: 1725, column: 3)
!7519 = !DILocation(line: 1726, column: 60, scope: !7518)
!7520 = !DILocation(line: 1726, column: 34, scope: !7518)
!7521 = !DILocation(line: 1726, column: 5, scope: !7518)
!7522 = !DILocation(line: 1726, column: 43, scope: !7518)
!7523 = !DILocation(line: 271, column: 3, scope: !7524, inlinedAt: !7526)
!7524 = distinct !DISubprogram(name: "__DSB", scope: !7525, file: !7525, line: 269, type: !260, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2433, retainedNodes: !391)
!7525 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/cmsis_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7526 = distinct !DILocation(line: 1727, column: 5, scope: !7518)
!7527 = !{i64 6906470}
!7528 = !DILocation(line: 260, column: 3, scope: !7529, inlinedAt: !7530)
!7529 = distinct !DISubprogram(name: "__ISB", scope: !7525, file: !7525, line: 258, type: !260, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2433, retainedNodes: !391)
!7530 = distinct !DILocation(line: 1728, column: 5, scope: !7518)
!7531 = !{i64 6906187}
!7532 = !DILocation(line: 1729, column: 3, scope: !7518)
!7533 = !DILocation(line: 1730, column: 1, scope: !7510)
!7534 = distinct !DISubprogram(name: "arch_irq_is_enabled", scope: !7475, file: !7475, line: 50, type: !7535, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2433, retainedNodes: !7537)
!7535 = !DISubroutineType(types: !7536)
!7536 = !{!105, !32}
!7537 = !{!7538}
!7538 = !DILocalVariable(name: "irq", arg: 1, scope: !7534, file: !7475, line: 50, type: !32)
!7539 = !DILocation(line: 0, scope: !7534)
!7540 = !DILocation(line: 52, column: 20, scope: !7534)
!7541 = !DILocation(line: 52, column: 9, scope: !7534)
!7542 = !DILocation(line: 52, column: 41, scope: !7534)
!7543 = !DILocation(line: 52, column: 39, scope: !7534)
!7544 = !DILocation(line: 52, column: 2, scope: !7534)
!7545 = distinct !DISubprogram(name: "z_arm_irq_priority_set", scope: !7475, file: !7475, line: 64, type: !7546, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2433, retainedNodes: !7548)
!7546 = !DISubroutineType(types: !7547)
!7547 = !{null, !32, !32, !113}
!7548 = !{!7549, !7550, !7551}
!7549 = !DILocalVariable(name: "irq", arg: 1, scope: !7545, file: !7475, line: 64, type: !32)
!7550 = !DILocalVariable(name: "prio", arg: 2, scope: !7545, file: !7475, line: 64, type: !32)
!7551 = !DILocalVariable(name: "flags", arg: 3, scope: !7545, file: !7475, line: 64, type: !113)
!7552 = !DILocation(line: 0, scope: !7545)
!7553 = !DILocation(line: 83, column: 8, scope: !7554)
!7554 = distinct !DILexicalBlock(scope: !7555, file: !7475, line: 82, column: 9)
!7555 = distinct !DILexicalBlock(scope: !7545, file: !7475, line: 76, column: 6)
!7556 = !DILocation(line: 91, column: 2, scope: !7557)
!7557 = distinct !DILexicalBlock(scope: !7558, file: !7475, line: 91, column: 2)
!7558 = distinct !DILexicalBlock(scope: !7545, file: !7475, line: 91, column: 2)
!7559 = !DILocation(line: 91, column: 2, scope: !7558)
!7560 = !DILocation(line: 91, column: 2, scope: !7561)
!7561 = distinct !DILexicalBlock(scope: !7557, file: !7475, line: 91, column: 2)
!7562 = !DILocation(line: 95, column: 2, scope: !7545)
!7563 = !DILocation(line: 96, column: 1, scope: !7545)
!7564 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !1612, file: !1612, line: 1814, type: !7565, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2433, retainedNodes: !7567)
!7565 = !DISubroutineType(types: !7566)
!7566 = !{null, !2437, !113}
!7567 = !{!7568, !7569}
!7568 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7564, file: !1612, line: 1814, type: !2437)
!7569 = !DILocalVariable(name: "priority", arg: 2, scope: !7564, file: !1612, line: 1814, type: !113)
!7570 = !DILocation(line: 0, scope: !7564)
!7571 = !DILocation(line: 0, scope: !7572)
!7572 = distinct !DILexicalBlock(scope: !7564, file: !1612, line: 1816, column: 7)
!7573 = !DILocation(line: 1816, column: 7, scope: !7564)
!7574 = !DILocation(line: 1824, column: 1, scope: !7564)
!7575 = distinct !DISubprogram(name: "z_irq_spurious", scope: !7475, file: !7475, line: 155, type: !17, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2433, retainedNodes: !7576)
!7576 = !{!7577}
!7577 = !DILocalVariable(name: "unused", arg: 1, scope: !7575, file: !7475, line: 155, type: !13)
!7578 = !DILocation(line: 0, scope: !7575)
!7579 = !DILocation(line: 159, column: 2, scope: !7575)
!7580 = !DILocation(line: 160, column: 1, scope: !7575)
!7581 = distinct !DISubprogram(name: "z_arm_nmi", scope: !7582, file: !7582, line: 87, type: !260, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2480, retainedNodes: !391)
!7582 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7583 = !DILocation(line: 89, column: 2, scope: !7581)
!7584 = !DILocation(line: 90, column: 2, scope: !7581)
!7585 = !DILocation(line: 91, column: 1, scope: !7581)
!7586 = !DISubprogram(name: "z_SysNmiOnReset", scope: !7582, file: !7582, line: 23, type: !260, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !391)
!7587 = !DISubprogram(name: "z_arm_int_exit", scope: !7588, file: !7588, line: 153, type: !260, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !391)
!7588 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/irq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7589 = distinct !DISubprogram(name: "z_arm_prep_c", scope: !7590, file: !7590, line: 256, type: !260, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2482, retainedNodes: !391)
!7590 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7591 = !DILocation(line: 258, column: 2, scope: !7589)
!7592 = !DILocation(line: 260, column: 2, scope: !7589)
!7593 = !DILocation(line: 262, column: 2, scope: !7589)
!7594 = !DILocation(line: 263, column: 2, scope: !7589)
!7595 = !DILocation(line: 267, column: 2, scope: !7589)
!7596 = !DILocation(line: 268, column: 2, scope: !7589)
!7597 = distinct !DISubprogram(name: "relocate_vector_table", scope: !7590, file: !7590, line: 53, type: !260, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2482, retainedNodes: !391)
!7598 = !DILocation(line: 55, column: 12, scope: !7597)
!7599 = !DILocation(line: 271, column: 3, scope: !7600, inlinedAt: !7601)
!7600 = distinct !DISubprogram(name: "__DSB", scope: !7525, file: !7525, line: 269, type: !260, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2482, retainedNodes: !391)
!7601 = distinct !DILocation(line: 56, column: 2, scope: !7597)
!7602 = !{i64 6942244}
!7603 = !DILocation(line: 260, column: 3, scope: !7604, inlinedAt: !7605)
!7604 = distinct !DISubprogram(name: "__ISB", scope: !7525, file: !7525, line: 258, type: !260, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2482, retainedNodes: !391)
!7605 = distinct !DILocation(line: 57, column: 2, scope: !7597)
!7606 = !{i64 6941961}
!7607 = !DILocation(line: 58, column: 1, scope: !7597)
!7608 = distinct !DISubprogram(name: "z_arm_floating_point_init", scope: !7590, file: !7590, line: 96, type: !260, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2482, retainedNodes: !391)
!7609 = !DILocation(line: 103, column: 13, scope: !7608)
!7610 = !DILocation(line: 975, column: 3, scope: !7611, inlinedAt: !7614)
!7611 = distinct !DISubprogram(name: "__get_CONTROL", scope: !7525, file: !7525, line: 971, type: !389, scopeLine: 972, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2482, retainedNodes: !7612)
!7612 = !{!7613}
!7613 = !DILocalVariable(name: "result", scope: !7611, file: !7525, line: 973, type: !113)
!7614 = distinct !DILocation(line: 189, column: 16, scope: !7608)
!7615 = !{i64 6963074}
!7616 = !DILocation(line: 0, scope: !7611, inlinedAt: !7614)
!7617 = !DILocation(line: 189, column: 32, scope: !7608)
!7618 = !DILocalVariable(name: "control", arg: 1, scope: !7619, file: !7525, line: 1001, type: !113)
!7619 = distinct !DISubprogram(name: "__set_CONTROL", scope: !7525, file: !7525, line: 1001, type: !7620, scopeLine: 1002, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2482, retainedNodes: !7622)
!7620 = !DISubroutineType(types: !7621)
!7621 = !{null, !113}
!7622 = !{!7618}
!7623 = !DILocation(line: 0, scope: !7619, inlinedAt: !7624)
!7624 = distinct !DILocation(line: 189, column: 2, scope: !7608)
!7625 = !DILocation(line: 1003, column: 3, scope: !7619, inlinedAt: !7624)
!7626 = !{i64 6963794}
!7627 = !DILocation(line: 260, column: 3, scope: !7604, inlinedAt: !7628)
!7628 = distinct !DILocation(line: 1004, column: 3, scope: !7619, inlinedAt: !7624)
!7629 = !DILocation(line: 191, column: 1, scope: !7608)
!7630 = distinct !DISubprogram(name: "arch_swap", scope: !7631, file: !7631, line: 33, type: !7535, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2510, retainedNodes: !7632)
!7631 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7632 = !{!7633}
!7633 = !DILocalVariable(name: "key", arg: 1, scope: !7630, file: !7631, line: 33, type: !32)
!7634 = !DILocation(line: 0, scope: !7630)
!7635 = !DILocation(line: 36, column: 2, scope: !7630)
!7636 = !DILocation(line: 36, column: 17, scope: !7630)
!7637 = !DILocation(line: 36, column: 25, scope: !7630)
!7638 = !DILocation(line: 37, column: 37, scope: !7630)
!7639 = !DILocation(line: 37, column: 17, scope: !7630)
!7640 = !DILocation(line: 37, column: 35, scope: !7630)
!7641 = !DILocation(line: 41, column: 12, scope: !7630)
!7642 = !DILocalVariable(name: "key", arg: 1, scope: !7643, file: !7644, line: 84, type: !32)
!7643 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7644, file: !7644, line: 84, type: !7476, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2510, retainedNodes: !7645)
!7644 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/asm_inline_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7645 = !{!7642}
!7646 = !DILocation(line: 0, scope: !7643, inlinedAt: !7647)
!7647 = distinct !DILocation(line: 44, column: 2, scope: !7630)
!7648 = !DILocation(line: 95, column: 2, scope: !7643, inlinedAt: !7647)
!7649 = !{i64 2844152}
!7650 = !DILocation(line: 53, column: 9, scope: !7630)
!7651 = !DILocation(line: 53, column: 24, scope: !7630)
!7652 = !DILocation(line: 53, column: 2, scope: !7630)
!7653 = distinct !DISubprogram(name: "arch_new_thread", scope: !7654, file: !7654, line: 56, type: !7655, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2538, retainedNodes: !7758)
!7654 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7655 = !DISubroutineType(types: !7656)
!7656 = !{null, !7657, !7753, !102, !248, !104, !104, !104}
!7657 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7658, size: 32)
!7658 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !127, line: 245, size: 896, elements: !7659)
!7659 = !{!7660, !7718, !7730, !7731, !7732, !7733, !7748}
!7660 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !7658, file: !127, line: 247, baseType: !7661, size: 384)
!7661 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !127, line: 57, size: 384, elements: !7662)
!7662 = !{!7663, !7687, !7694, !7695, !7696, !7705, !7706, !7707}
!7663 = !DIDerivedType(tag: DW_TAG_member, scope: !7661, file: !127, line: 60, baseType: !7664, size: 64)
!7664 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7661, file: !127, line: 60, size: 64, elements: !7665)
!7665 = !{!7666, !7681}
!7666 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !7664, file: !127, line: 61, baseType: !7667, size: 64)
!7667 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !137, line: 49, baseType: !7668)
!7668 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !137, line: 37, size: 64, elements: !7669)
!7669 = !{!7670, !7676}
!7670 = !DIDerivedType(tag: DW_TAG_member, scope: !7668, file: !137, line: 38, baseType: !7671, size: 32)
!7671 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7668, file: !137, line: 38, size: 32, elements: !7672)
!7672 = !{!7673, !7675}
!7673 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !7671, file: !137, line: 39, baseType: !7674, size: 32)
!7674 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7668, size: 32)
!7675 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7671, file: !137, line: 40, baseType: !7674, size: 32)
!7676 = !DIDerivedType(tag: DW_TAG_member, scope: !7668, file: !137, line: 42, baseType: !7677, size: 32, offset: 32)
!7677 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7668, file: !137, line: 42, size: 32, elements: !7678)
!7678 = !{!7679, !7680}
!7679 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !7677, file: !137, line: 43, baseType: !7674, size: 32)
!7680 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !7677, file: !137, line: 44, baseType: !7674, size: 32)
!7681 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !7664, file: !127, line: 62, baseType: !7682, size: 64)
!7682 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !153, line: 49, size: 64, elements: !7683)
!7683 = !{!7684}
!7684 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !7682, file: !153, line: 50, baseType: !7685, size: 64)
!7685 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7686, size: 64, elements: !158)
!7686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7682, size: 32)
!7687 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !7661, file: !127, line: 68, baseType: !7688, size: 32, offset: 64)
!7688 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7689, size: 32)
!7689 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !163, line: 233, baseType: !7690)
!7690 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !163, line: 231, size: 64, elements: !7691)
!7691 = !{!7692}
!7692 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !7690, file: !163, line: 232, baseType: !7693, size: 64)
!7693 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !137, line: 48, baseType: !7668)
!7694 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !7661, file: !127, line: 71, baseType: !169, size: 8, offset: 96)
!7695 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !7661, file: !127, line: 74, baseType: !169, size: 8, offset: 104)
!7696 = !DIDerivedType(tag: DW_TAG_member, scope: !7661, file: !127, line: 90, baseType: !7697, size: 16, offset: 112)
!7697 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7661, file: !127, line: 90, size: 16, elements: !7698)
!7698 = !{!7699, !7704}
!7699 = !DIDerivedType(tag: DW_TAG_member, scope: !7697, file: !127, line: 91, baseType: !7700, size: 16)
!7700 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7697, file: !127, line: 91, size: 16, elements: !7701)
!7701 = !{!7702, !7703}
!7702 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !7700, file: !127, line: 96, baseType: !179, size: 8)
!7703 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !7700, file: !127, line: 97, baseType: !169, size: 8, offset: 8)
!7704 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !7697, file: !127, line: 100, baseType: !183, size: 16)
!7705 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !7661, file: !127, line: 107, baseType: !113, size: 32, offset: 128)
!7706 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !7661, file: !127, line: 127, baseType: !104, size: 32, offset: 160)
!7707 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !7661, file: !127, line: 131, baseType: !7708, size: 192, offset: 192)
!7708 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !163, line: 244, size: 192, elements: !7709)
!7709 = !{!7710, !7711, !7717}
!7710 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !7708, file: !163, line: 245, baseType: !7667, size: 64)
!7711 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !7708, file: !163, line: 246, baseType: !7712, size: 32, offset: 64)
!7712 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !163, line: 242, baseType: !7713)
!7713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7714, size: 32)
!7714 = !DISubroutineType(types: !7715)
!7715 = !{null, !7716}
!7716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7708, size: 32)
!7717 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !7708, file: !163, line: 249, baseType: !109, size: 64, offset: 128)
!7718 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !7658, file: !127, line: 250, baseType: !7719, size: 288, offset: 384)
!7719 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !200, line: 25, size: 288, elements: !7720)
!7720 = !{!7721, !7722, !7723, !7724, !7725, !7726, !7727, !7728, !7729}
!7721 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7719, file: !200, line: 26, baseType: !113, size: 32)
!7722 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7719, file: !200, line: 27, baseType: !113, size: 32, offset: 32)
!7723 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7719, file: !200, line: 28, baseType: !113, size: 32, offset: 64)
!7724 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7719, file: !200, line: 29, baseType: !113, size: 32, offset: 96)
!7725 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7719, file: !200, line: 30, baseType: !113, size: 32, offset: 128)
!7726 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7719, file: !200, line: 31, baseType: !113, size: 32, offset: 160)
!7727 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7719, file: !200, line: 32, baseType: !113, size: 32, offset: 192)
!7728 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7719, file: !200, line: 33, baseType: !113, size: 32, offset: 224)
!7729 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7719, file: !200, line: 34, baseType: !113, size: 32, offset: 256)
!7730 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !7658, file: !127, line: 253, baseType: !104, size: 32, offset: 672)
!7731 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !7658, file: !127, line: 256, baseType: !7689, size: 64, offset: 704)
!7732 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !7658, file: !127, line: 294, baseType: !105, size: 32, offset: 768)
!7733 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !7658, file: !127, line: 325, baseType: !7734, size: 32, offset: 800)
!7734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7735, size: 32)
!7735 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !122, line: 5073, size: 192, elements: !7736)
!7736 = !{!7737, !7743, !7744}
!7737 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7735, file: !122, line: 5074, baseType: !7738, size: 96)
!7738 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !220, line: 56, size: 96, elements: !7739)
!7739 = !{!7740, !7741, !7742}
!7740 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7738, file: !220, line: 57, baseType: !223, size: 32)
!7741 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !7738, file: !220, line: 58, baseType: !104, size: 32, offset: 32)
!7742 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !7738, file: !220, line: 59, baseType: !111, size: 32, offset: 64)
!7743 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !7735, file: !122, line: 5075, baseType: !7689, size: 64, offset: 96)
!7744 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !7735, file: !122, line: 5076, baseType: !7745, size: 32, offset: 160)
!7745 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !230, line: 43, size: 32, elements: !7746)
!7746 = !{!7747}
!7747 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !7745, file: !230, line: 52, baseType: !22, size: 32)
!7748 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !7658, file: !127, line: 343, baseType: !7749, size: 64, offset: 832)
!7749 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !200, line: 60, size: 64, elements: !7750)
!7750 = !{!7751, !7752}
!7751 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !7749, file: !200, line: 63, baseType: !113, size: 32)
!7752 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !7749, file: !200, line: 66, baseType: !113, size: 32, offset: 32)
!7753 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7754, size: 32)
!7754 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !241, line: 44, baseType: !7755)
!7755 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !243, line: 47, size: 8, elements: !7756)
!7756 = !{!7757}
!7757 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !7755, file: !243, line: 48, baseType: !103, size: 8)
!7758 = !{!7759, !7760, !7761, !7762, !7763, !7764, !7765, !7766}
!7759 = !DILocalVariable(name: "thread", arg: 1, scope: !7653, file: !7654, line: 56, type: !7657)
!7760 = !DILocalVariable(name: "stack", arg: 2, scope: !7653, file: !7654, line: 56, type: !7753)
!7761 = !DILocalVariable(name: "stack_ptr", arg: 3, scope: !7653, file: !7654, line: 57, type: !102)
!7762 = !DILocalVariable(name: "entry", arg: 4, scope: !7653, file: !7654, line: 57, type: !248)
!7763 = !DILocalVariable(name: "p1", arg: 5, scope: !7653, file: !7654, line: 58, type: !104)
!7764 = !DILocalVariable(name: "p2", arg: 6, scope: !7653, file: !7654, line: 58, type: !104)
!7765 = !DILocalVariable(name: "p3", arg: 7, scope: !7653, file: !7654, line: 58, type: !104)
!7766 = !DILocalVariable(name: "iframe", scope: !7653, file: !7654, line: 60, type: !2541)
!7767 = !DILocation(line: 0, scope: !7653)
!7768 = !DILocation(line: 85, column: 11, scope: !7653)
!7769 = !DILocation(line: 93, column: 10, scope: !7653)
!7770 = !DILocation(line: 98, column: 13, scope: !7653)
!7771 = !DILocation(line: 100, column: 15, scope: !7653)
!7772 = !DILocation(line: 100, column: 10, scope: !7653)
!7773 = !DILocation(line: 100, column: 13, scope: !7653)
!7774 = !DILocation(line: 101, column: 15, scope: !7653)
!7775 = !DILocation(line: 101, column: 10, scope: !7653)
!7776 = !DILocation(line: 101, column: 13, scope: !7653)
!7777 = !DILocation(line: 102, column: 15, scope: !7653)
!7778 = !DILocation(line: 102, column: 10, scope: !7653)
!7779 = !DILocation(line: 102, column: 13, scope: !7653)
!7780 = !DILocation(line: 103, column: 15, scope: !7653)
!7781 = !DILocation(line: 103, column: 10, scope: !7653)
!7782 = !DILocation(line: 103, column: 13, scope: !7653)
!7783 = !DILocation(line: 106, column: 10, scope: !7653)
!7784 = !DILocation(line: 106, column: 15, scope: !7653)
!7785 = !DILocation(line: 122, column: 29, scope: !7653)
!7786 = !DILocation(line: 122, column: 23, scope: !7653)
!7787 = !DILocation(line: 122, column: 27, scope: !7653)
!7788 = !DILocation(line: 123, column: 15, scope: !7653)
!7789 = !DILocation(line: 123, column: 23, scope: !7653)
!7790 = !DILocation(line: 143, column: 1, scope: !7653)
!7791 = distinct !DISubprogram(name: "arch_switch_to_main_thread", scope: !7654, file: !7654, line: 530, type: !7792, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2538, retainedNodes: !7794)
!7792 = !DISubroutineType(types: !7793)
!7793 = !{null, !7657, !102, !248}
!7794 = !{!7795, !7796, !7797}
!7795 = !DILocalVariable(name: "main_thread", arg: 1, scope: !7791, file: !7654, line: 530, type: !7657)
!7796 = !DILocalVariable(name: "stack_ptr", arg: 2, scope: !7791, file: !7654, line: 530, type: !102)
!7797 = !DILocalVariable(name: "_main", arg: 3, scope: !7791, file: !7654, line: 531, type: !248)
!7798 = !DILocation(line: 0, scope: !7791)
!7799 = !DILocation(line: 535, column: 11, scope: !7791)
!7800 = !DILocation(line: 576, column: 2, scope: !7791)
!7801 = !{i64 18049, i64 18065, i64 18143, i64 18197, i64 18440, i64 18509, i64 18626, i64 18645, i64 18664, i64 18689}
!7802 = !DILocation(line: 603, column: 2, scope: !7791)
!7803 = distinct !DISubprogram(name: "z_arm_fault", scope: !7804, file: !7804, line: 1036, type: !7805, scopeLine: 1038, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2581, retainedNodes: !7820)
!7804 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7805 = !DISubroutineType(types: !7806)
!7806 = !{null, !113, !113, !113, !7807}
!7807 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7808, size: 32)
!7808 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !200, line: 37, baseType: !7809)
!7809 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !200, line: 25, size: 288, elements: !7810)
!7810 = !{!7811, !7812, !7813, !7814, !7815, !7816, !7817, !7818, !7819}
!7811 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7809, file: !200, line: 26, baseType: !113, size: 32)
!7812 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7809, file: !200, line: 27, baseType: !113, size: 32, offset: 32)
!7813 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7809, file: !200, line: 28, baseType: !113, size: 32, offset: 64)
!7814 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7809, file: !200, line: 29, baseType: !113, size: 32, offset: 96)
!7815 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7809, file: !200, line: 30, baseType: !113, size: 32, offset: 128)
!7816 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7809, file: !200, line: 31, baseType: !113, size: 32, offset: 160)
!7817 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7809, file: !200, line: 32, baseType: !113, size: 32, offset: 192)
!7818 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7809, file: !200, line: 33, baseType: !113, size: 32, offset: 224)
!7819 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7809, file: !200, line: 34, baseType: !113, size: 32, offset: 256)
!7820 = !{!7821, !7822, !7823, !7824, !7825, !7826, !7827, !7828, !7829, !7830}
!7821 = !DILocalVariable(name: "msp", arg: 1, scope: !7803, file: !7804, line: 1036, type: !113)
!7822 = !DILocalVariable(name: "psp", arg: 2, scope: !7803, file: !7804, line: 1036, type: !113)
!7823 = !DILocalVariable(name: "exc_return", arg: 3, scope: !7803, file: !7804, line: 1036, type: !113)
!7824 = !DILocalVariable(name: "callee_regs", arg: 4, scope: !7803, file: !7804, line: 1037, type: !7807)
!7825 = !DILocalVariable(name: "reason", scope: !7803, file: !7804, line: 1039, type: !113)
!7826 = !DILocalVariable(name: "fault", scope: !7803, file: !7804, line: 1040, type: !105)
!7827 = !DILocalVariable(name: "recoverable", scope: !7803, file: !7804, line: 1041, type: !911)
!7828 = !DILocalVariable(name: "nested_exc", scope: !7803, file: !7804, line: 1041, type: !911)
!7829 = !DILocalVariable(name: "esf", scope: !7803, file: !7804, line: 1042, type: !2609)
!7830 = !DILocalVariable(name: "esf_copy", scope: !7803, file: !7804, line: 1047, type: !2610)
!7831 = !DILocation(line: 0, scope: !7803)
!7832 = !DILocation(line: 1040, column: 19, scope: !7803)
!7833 = !DILocation(line: 1041, column: 2, scope: !7803)
!7834 = !DILocation(line: 1047, column: 2, scope: !7803)
!7835 = !DILocation(line: 1047, column: 15, scope: !7803)
!7836 = !DILocalVariable(name: "key", arg: 1, scope: !7837, file: !7644, line: 84, type: !32)
!7837 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7644, file: !7644, line: 84, type: !7476, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2581, retainedNodes: !7838)
!7838 = !{!7836}
!7839 = !DILocation(line: 0, scope: !7837, inlinedAt: !7840)
!7840 = distinct !DILocation(line: 1050, column: 2, scope: !7803)
!7841 = !DILocation(line: 95, column: 2, scope: !7837, inlinedAt: !7840)
!7842 = !{i64 2877396}
!7843 = !DILocation(line: 1055, column: 9, scope: !7803)
!7844 = !DILocation(line: 1056, column: 2, scope: !7845)
!7845 = distinct !DILexicalBlock(scope: !7846, file: !7804, line: 1056, column: 2)
!7846 = distinct !DILexicalBlock(scope: !7803, file: !7804, line: 1056, column: 2)
!7847 = !DILocation(line: 1056, column: 2, scope: !7846)
!7848 = !DILocation(line: 1056, column: 2, scope: !7849)
!7849 = distinct !DILexicalBlock(scope: !7845, file: !7804, line: 1056, column: 2)
!7850 = !DILocation(line: 1040, column: 24, scope: !7803)
!7851 = !DILocation(line: 1063, column: 11, scope: !7803)
!7852 = !DILocation(line: 1064, column: 6, scope: !7853)
!7853 = distinct !DILexicalBlock(scope: !7803, file: !7804, line: 1064, column: 6)
!7854 = !{i8 0, i8 2}
!7855 = !DILocation(line: 1064, column: 6, scope: !7803)
!7856 = !DILocation(line: 1070, column: 20, scope: !7803)
!7857 = !DILocation(line: 1070, column: 2, scope: !7803)
!7858 = !DILocation(line: 1089, column: 6, scope: !7859)
!7859 = distinct !DILexicalBlock(scope: !7803, file: !7804, line: 1089, column: 6)
!7860 = !DILocation(line: 0, scope: !7859)
!7861 = !DILocation(line: 1089, column: 6, scope: !7803)
!7862 = !DILocation(line: 1090, column: 28, scope: !7863)
!7863 = distinct !DILexicalBlock(scope: !7864, file: !7804, line: 1090, column: 7)
!7864 = distinct !DILexicalBlock(scope: !7859, file: !7804, line: 1089, column: 18)
!7865 = !DILocation(line: 1090, column: 44, scope: !7863)
!7866 = !DILocation(line: 1090, column: 7, scope: !7864)
!7867 = !DILocation(line: 1091, column: 24, scope: !7868)
!7868 = distinct !DILexicalBlock(scope: !7863, file: !7804, line: 1090, column: 50)
!7869 = !DILocation(line: 1092, column: 3, scope: !7868)
!7870 = !DILocation(line: 1094, column: 23, scope: !7871)
!7871 = distinct !DILexicalBlock(scope: !7859, file: !7804, line: 1093, column: 9)
!7872 = !DILocation(line: 1097, column: 2, scope: !7803)
!7873 = !DILocation(line: 1098, column: 1, scope: !7803)
!7874 = distinct !DISubprogram(name: "get_esf", scope: !7804, file: !7804, line: 894, type: !7875, scopeLine: 896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2581, retainedNodes: !7878)
!7875 = !DISubroutineType(types: !7876)
!7876 = !{!2609, !113, !113, !113, !7877}
!7877 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !911, size: 32)
!7878 = !{!7879, !7880, !7881, !7882, !7883, !7884}
!7879 = !DILocalVariable(name: "msp", arg: 1, scope: !7874, file: !7804, line: 894, type: !113)
!7880 = !DILocalVariable(name: "psp", arg: 2, scope: !7874, file: !7804, line: 894, type: !113)
!7881 = !DILocalVariable(name: "exc_return", arg: 3, scope: !7874, file: !7804, line: 894, type: !113)
!7882 = !DILocalVariable(name: "nested_exc", arg: 4, scope: !7874, file: !7804, line: 895, type: !7877)
!7883 = !DILocalVariable(name: "alternative_state_exc", scope: !7874, file: !7804, line: 897, type: !911)
!7884 = !DILocalVariable(name: "ptr_esf", scope: !7874, file: !7804, line: 898, type: !2609)
!7885 = !DILocation(line: 0, scope: !7874)
!7886 = !DILocation(line: 900, column: 14, scope: !7874)
!7887 = !DILocation(line: 902, column: 49, scope: !7888)
!7888 = distinct !DILexicalBlock(scope: !7874, file: !7804, line: 902, column: 6)
!7889 = !DILocation(line: 902, column: 6, scope: !7874)
!7890 = !DILocation(line: 983, column: 44, scope: !7891)
!7891 = distinct !DILexicalBlock(scope: !7874, file: !7804, line: 983, column: 6)
!7892 = !DILocation(line: 985, column: 3, scope: !7893)
!7893 = distinct !DILexicalBlock(scope: !7894, file: !7804, line: 985, column: 3)
!7894 = distinct !DILexicalBlock(scope: !7895, file: !7804, line: 985, column: 3)
!7895 = distinct !DILexicalBlock(scope: !7896, file: !7804, line: 985, column: 3)
!7896 = distinct !DILexicalBlock(scope: !7897, file: !7804, line: 985, column: 3)
!7897 = distinct !DILexicalBlock(scope: !7891, file: !7804, line: 984, column: 47)
!7898 = !DILocation(line: 986, column: 3, scope: !7897)
!7899 = !DILocation(line: 983, column: 18, scope: !7891)
!7900 = !DILocation(line: 991, column: 7, scope: !7901)
!7901 = distinct !DILexicalBlock(scope: !7902, file: !7804, line: 990, column: 30)
!7902 = distinct !DILexicalBlock(scope: !7874, file: !7804, line: 990, column: 6)
!7903 = !DILocation(line: 998, column: 16, scope: !7904)
!7904 = distinct !DILexicalBlock(scope: !7905, file: !7804, line: 995, column: 10)
!7905 = distinct !DILexicalBlock(scope: !7901, file: !7804, line: 991, column: 7)
!7906 = !DILocation(line: 1002, column: 2, scope: !7874)
!7907 = !DILocation(line: 1003, column: 1, scope: !7874)
!7908 = distinct !DISubprogram(name: "fault_handle", scope: !7804, file: !7804, line: 786, type: !7909, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2581, retainedNodes: !7911)
!7909 = !DISubroutineType(types: !7910)
!7910 = !{!113, !2609, !105, !7877}
!7911 = !{!7912, !7913, !7914, !7915}
!7912 = !DILocalVariable(name: "esf", arg: 1, scope: !7908, file: !7804, line: 786, type: !2609)
!7913 = !DILocalVariable(name: "fault", arg: 2, scope: !7908, file: !7804, line: 786, type: !105)
!7914 = !DILocalVariable(name: "recoverable", arg: 3, scope: !7908, file: !7804, line: 786, type: !7877)
!7915 = !DILocalVariable(name: "reason", scope: !7908, file: !7804, line: 788, type: !113)
!7916 = !DILocation(line: 0, scope: !7908)
!7917 = !DILocation(line: 790, column: 15, scope: !7908)
!7918 = !DILocation(line: 792, column: 2, scope: !7908)
!7919 = !DILocation(line: 794, column: 12, scope: !7920)
!7920 = distinct !DILexicalBlock(scope: !7908, file: !7804, line: 792, column: 17)
!7921 = !DILocation(line: 795, column: 3, scope: !7920)
!7922 = !DILocation(line: 800, column: 12, scope: !7920)
!7923 = !DILocation(line: 801, column: 3, scope: !7920)
!7924 = !DILocation(line: 803, column: 12, scope: !7920)
!7925 = !DILocation(line: 804, column: 3, scope: !7920)
!7926 = !DILocation(line: 806, column: 12, scope: !7920)
!7927 = !DILocation(line: 807, column: 3, scope: !7920)
!7928 = !DILocation(line: 814, column: 3, scope: !7920)
!7929 = !DILocation(line: 815, column: 3, scope: !7920)
!7930 = !DILocation(line: 820, column: 3, scope: !7920)
!7931 = !DILocation(line: 821, column: 3, scope: !7920)
!7932 = !DILocation(line: 829, column: 2, scope: !7908)
!7933 = distinct !DISubprogram(name: "hard_fault", scope: !7804, file: !7804, line: 709, type: !7934, scopeLine: 710, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2581, retainedNodes: !7936)
!7934 = !DISubroutineType(types: !7935)
!7935 = !{!113, !2609, !7877}
!7936 = !{!7937, !7938, !7939}
!7937 = !DILocalVariable(name: "esf", arg: 1, scope: !7933, file: !7804, line: 709, type: !2609)
!7938 = !DILocalVariable(name: "recoverable", arg: 2, scope: !7933, file: !7804, line: 709, type: !7877)
!7939 = !DILocalVariable(name: "reason", scope: !7933, file: !7804, line: 711, type: !113)
!7940 = !DILocation(line: 0, scope: !7933)
!7941 = !DILocation(line: 713, column: 2, scope: !7942)
!7942 = distinct !DILexicalBlock(scope: !7943, file: !7804, line: 713, column: 2)
!7943 = distinct !DILexicalBlock(scope: !7944, file: !7804, line: 713, column: 2)
!7944 = distinct !DILexicalBlock(scope: !7945, file: !7804, line: 713, column: 2)
!7945 = distinct !DILexicalBlock(scope: !7933, file: !7804, line: 713, column: 2)
!7946 = !DILocation(line: 732, column: 15, scope: !7933)
!7947 = !DILocation(line: 734, column: 12, scope: !7948)
!7948 = distinct !DILexicalBlock(scope: !7933, file: !7804, line: 734, column: 6)
!7949 = !DILocation(line: 734, column: 17, scope: !7948)
!7950 = !DILocation(line: 734, column: 41, scope: !7948)
!7951 = !DILocation(line: 734, column: 6, scope: !7933)
!7952 = !DILocation(line: 735, column: 3, scope: !7953)
!7953 = distinct !DILexicalBlock(scope: !7954, file: !7804, line: 735, column: 3)
!7954 = distinct !DILexicalBlock(scope: !7955, file: !7804, line: 735, column: 3)
!7955 = distinct !DILexicalBlock(scope: !7956, file: !7804, line: 735, column: 3)
!7956 = distinct !DILexicalBlock(scope: !7957, file: !7804, line: 735, column: 3)
!7957 = distinct !DILexicalBlock(scope: !7948, file: !7804, line: 734, column: 47)
!7958 = !DILocation(line: 736, column: 2, scope: !7957)
!7959 = !DILocation(line: 736, column: 19, scope: !7960)
!7960 = distinct !DILexicalBlock(scope: !7948, file: !7804, line: 736, column: 13)
!7961 = !DILocation(line: 736, column: 49, scope: !7960)
!7962 = !DILocation(line: 736, column: 13, scope: !7948)
!7963 = !DILocation(line: 737, column: 3, scope: !7964)
!7964 = distinct !DILexicalBlock(scope: !7965, file: !7804, line: 737, column: 3)
!7965 = distinct !DILexicalBlock(scope: !7966, file: !7804, line: 737, column: 3)
!7966 = distinct !DILexicalBlock(scope: !7967, file: !7804, line: 737, column: 3)
!7967 = distinct !DILexicalBlock(scope: !7968, file: !7804, line: 737, column: 3)
!7968 = distinct !DILexicalBlock(scope: !7960, file: !7804, line: 736, column: 55)
!7969 = !DILocation(line: 738, column: 2, scope: !7968)
!7970 = !DILocation(line: 738, column: 19, scope: !7971)
!7971 = distinct !DILexicalBlock(scope: !7960, file: !7804, line: 738, column: 13)
!7972 = !DILocation(line: 738, column: 24, scope: !7971)
!7973 = !DILocation(line: 738, column: 47, scope: !7971)
!7974 = !DILocation(line: 738, column: 13, scope: !7960)
!7975 = !DILocation(line: 739, column: 3, scope: !7976)
!7976 = distinct !DILexicalBlock(scope: !7977, file: !7804, line: 739, column: 3)
!7977 = distinct !DILexicalBlock(scope: !7978, file: !7804, line: 739, column: 3)
!7978 = distinct !DILexicalBlock(scope: !7979, file: !7804, line: 739, column: 3)
!7979 = distinct !DILexicalBlock(scope: !7980, file: !7804, line: 739, column: 3)
!7980 = distinct !DILexicalBlock(scope: !7971, file: !7804, line: 738, column: 53)
!7981 = !DILocation(line: 740, column: 7, scope: !7982)
!7982 = distinct !DILexicalBlock(scope: !7980, file: !7804, line: 740, column: 7)
!7983 = !DILocation(line: 740, column: 7, scope: !7980)
!7984 = !DILocation(line: 741, column: 4, scope: !7985)
!7985 = distinct !DILexicalBlock(scope: !7986, file: !7804, line: 741, column: 4)
!7986 = distinct !DILexicalBlock(scope: !7987, file: !7804, line: 741, column: 4)
!7987 = distinct !DILexicalBlock(scope: !7988, file: !7804, line: 741, column: 4)
!7988 = distinct !DILexicalBlock(scope: !7989, file: !7804, line: 741, column: 4)
!7989 = distinct !DILexicalBlock(scope: !7982, file: !7804, line: 740, column: 38)
!7990 = !DILocation(line: 742, column: 24, scope: !7989)
!7991 = !DILocation(line: 743, column: 3, scope: !7989)
!7992 = !DILocation(line: 743, column: 20, scope: !7993)
!7993 = distinct !DILexicalBlock(scope: !7982, file: !7804, line: 743, column: 14)
!7994 = !DILocation(line: 743, column: 25, scope: !7993)
!7995 = !DILocation(line: 743, column: 52, scope: !7993)
!7996 = !DILocation(line: 743, column: 14, scope: !7982)
!7997 = !DILocation(line: 744, column: 13, scope: !7998)
!7998 = distinct !DILexicalBlock(scope: !7993, file: !7804, line: 743, column: 58)
!7999 = !DILocation(line: 745, column: 3, scope: !7998)
!8000 = !DILocation(line: 745, column: 20, scope: !8001)
!8001 = distinct !DILexicalBlock(scope: !7993, file: !7804, line: 745, column: 14)
!8002 = !DILocation(line: 745, column: 25, scope: !8001)
!8003 = !DILocation(line: 745, column: 52, scope: !8001)
!8004 = !DILocation(line: 745, column: 14, scope: !7993)
!8005 = !DILocation(line: 746, column: 13, scope: !8006)
!8006 = distinct !DILexicalBlock(scope: !8001, file: !7804, line: 745, column: 58)
!8007 = !DILocation(line: 747, column: 3, scope: !8006)
!8008 = !DILocation(line: 747, column: 20, scope: !8009)
!8009 = distinct !DILexicalBlock(scope: !8001, file: !7804, line: 747, column: 14)
!8010 = !DILocation(line: 747, column: 52, scope: !8009)
!8011 = !DILocation(line: 747, column: 14, scope: !8001)
!8012 = !DILocation(line: 748, column: 13, scope: !8013)
!8013 = distinct !DILexicalBlock(scope: !8009, file: !7804, line: 747, column: 58)
!8014 = !DILocation(line: 754, column: 4, scope: !8015)
!8015 = distinct !DILexicalBlock(scope: !8016, file: !7804, line: 754, column: 4)
!8016 = distinct !DILexicalBlock(scope: !8017, file: !7804, line: 754, column: 4)
!8017 = distinct !DILexicalBlock(scope: !8018, file: !7804, line: 754, column: 4)
!8018 = distinct !DILexicalBlock(scope: !8009, file: !7804, line: 753, column: 10)
!8019 = !DILocation(line: 758, column: 3, scope: !8020)
!8020 = distinct !DILexicalBlock(scope: !8021, file: !7804, line: 758, column: 3)
!8021 = distinct !DILexicalBlock(scope: !8022, file: !7804, line: 758, column: 3)
!8022 = distinct !DILexicalBlock(scope: !8023, file: !7804, line: 758, column: 3)
!8023 = distinct !DILexicalBlock(scope: !7971, file: !7804, line: 757, column: 9)
!8024 = !DILocation(line: 766, column: 2, scope: !7933)
!8025 = distinct !DISubprogram(name: "mem_manage_fault", scope: !7804, file: !7804, line: 229, type: !7909, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2581, retainedNodes: !8026)
!8026 = !{!8027, !8028, !8029, !8030, !8031, !8032}
!8027 = !DILocalVariable(name: "esf", arg: 1, scope: !8025, file: !7804, line: 229, type: !2609)
!8028 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !8025, file: !7804, line: 229, type: !105)
!8029 = !DILocalVariable(name: "recoverable", arg: 3, scope: !8025, file: !7804, line: 230, type: !7877)
!8030 = !DILocalVariable(name: "reason", scope: !8025, file: !7804, line: 232, type: !113)
!8031 = !DILocalVariable(name: "mmfar", scope: !8025, file: !7804, line: 233, type: !113)
!8032 = !DILocalVariable(name: "temp", scope: !8033, file: !7804, line: 254, type: !113)
!8033 = distinct !DILexicalBlock(scope: !8034, file: !7804, line: 244, column: 48)
!8034 = distinct !DILexicalBlock(scope: !8025, file: !7804, line: 244, column: 6)
!8035 = !DILocation(line: 0, scope: !8025)
!8036 = !DILocation(line: 235, column: 2, scope: !8037)
!8037 = distinct !DILexicalBlock(scope: !8038, file: !7804, line: 235, column: 2)
!8038 = distinct !DILexicalBlock(scope: !8039, file: !7804, line: 235, column: 2)
!8039 = distinct !DILexicalBlock(scope: !8040, file: !7804, line: 235, column: 2)
!8040 = distinct !DILexicalBlock(scope: !8025, file: !7804, line: 235, column: 2)
!8041 = !DILocation(line: 237, column: 12, scope: !8042)
!8042 = distinct !DILexicalBlock(scope: !8025, file: !7804, line: 237, column: 6)
!8043 = !DILocation(line: 237, column: 17, scope: !8042)
!8044 = !DILocation(line: 237, column: 41, scope: !8042)
!8045 = !DILocation(line: 237, column: 6, scope: !8025)
!8046 = !DILocation(line: 238, column: 3, scope: !8047)
!8047 = distinct !DILexicalBlock(scope: !8048, file: !7804, line: 238, column: 3)
!8048 = distinct !DILexicalBlock(scope: !8049, file: !7804, line: 238, column: 3)
!8049 = distinct !DILexicalBlock(scope: !8050, file: !7804, line: 238, column: 3)
!8050 = distinct !DILexicalBlock(scope: !8051, file: !7804, line: 238, column: 3)
!8051 = distinct !DILexicalBlock(scope: !8042, file: !7804, line: 237, column: 47)
!8052 = !DILocation(line: 240, column: 2, scope: !8051)
!8053 = !DILocation(line: 241, column: 12, scope: !8054)
!8054 = distinct !DILexicalBlock(scope: !8025, file: !7804, line: 241, column: 6)
!8055 = !DILocation(line: 241, column: 17, scope: !8054)
!8056 = !DILocation(line: 241, column: 43, scope: !8054)
!8057 = !DILocation(line: 241, column: 6, scope: !8025)
!8058 = !DILocation(line: 242, column: 3, scope: !8059)
!8059 = distinct !DILexicalBlock(scope: !8060, file: !7804, line: 242, column: 3)
!8060 = distinct !DILexicalBlock(scope: !8061, file: !7804, line: 242, column: 3)
!8061 = distinct !DILexicalBlock(scope: !8062, file: !7804, line: 242, column: 3)
!8062 = distinct !DILexicalBlock(scope: !8063, file: !7804, line: 242, column: 3)
!8063 = distinct !DILexicalBlock(scope: !8054, file: !7804, line: 241, column: 49)
!8064 = !DILocation(line: 243, column: 2, scope: !8063)
!8065 = !DILocation(line: 244, column: 12, scope: !8034)
!8066 = !DILocation(line: 244, column: 17, scope: !8034)
!8067 = !DILocation(line: 244, column: 42, scope: !8034)
!8068 = !DILocation(line: 244, column: 6, scope: !8025)
!8069 = !DILocation(line: 245, column: 3, scope: !8070)
!8070 = distinct !DILexicalBlock(scope: !8071, file: !7804, line: 245, column: 3)
!8071 = distinct !DILexicalBlock(scope: !8072, file: !7804, line: 245, column: 3)
!8072 = distinct !DILexicalBlock(scope: !8073, file: !7804, line: 245, column: 3)
!8073 = distinct !DILexicalBlock(scope: !8033, file: !7804, line: 245, column: 3)
!8074 = !DILocation(line: 254, column: 24, scope: !8033)
!8075 = !DILocation(line: 0, scope: !8033)
!8076 = !DILocation(line: 256, column: 13, scope: !8077)
!8077 = distinct !DILexicalBlock(scope: !8033, file: !7804, line: 256, column: 7)
!8078 = !DILocation(line: 256, column: 18, scope: !8077)
!8079 = !DILocation(line: 256, column: 44, scope: !8077)
!8080 = !DILocation(line: 256, column: 7, scope: !8033)
!8081 = !DILocation(line: 258, column: 4, scope: !8082)
!8082 = distinct !DILexicalBlock(scope: !8083, file: !7804, line: 258, column: 4)
!8083 = distinct !DILexicalBlock(scope: !8084, file: !7804, line: 258, column: 4)
!8084 = distinct !DILexicalBlock(scope: !8085, file: !7804, line: 258, column: 4)
!8085 = distinct !DILexicalBlock(scope: !8086, file: !7804, line: 258, column: 4)
!8086 = distinct !DILexicalBlock(scope: !8077, file: !7804, line: 256, column: 50)
!8087 = !DILocation(line: 259, column: 24, scope: !8088)
!8088 = distinct !DILexicalBlock(scope: !8086, file: !7804, line: 259, column: 8)
!8089 = !DILocation(line: 259, column: 8, scope: !8086)
!8090 = !DILocation(line: 261, column: 15, scope: !8091)
!8091 = distinct !DILexicalBlock(scope: !8088, file: !7804, line: 259, column: 30)
!8092 = !DILocation(line: 262, column: 4, scope: !8091)
!8093 = !DILocation(line: 265, column: 12, scope: !8094)
!8094 = distinct !DILexicalBlock(scope: !8025, file: !7804, line: 265, column: 6)
!8095 = !DILocation(line: 265, column: 17, scope: !8094)
!8096 = !DILocation(line: 265, column: 42, scope: !8094)
!8097 = !DILocation(line: 265, column: 6, scope: !8025)
!8098 = !DILocation(line: 266, column: 3, scope: !8099)
!8099 = distinct !DILexicalBlock(scope: !8100, file: !7804, line: 266, column: 3)
!8100 = distinct !DILexicalBlock(scope: !8101, file: !7804, line: 266, column: 3)
!8101 = distinct !DILexicalBlock(scope: !8102, file: !7804, line: 266, column: 3)
!8102 = distinct !DILexicalBlock(scope: !8103, file: !7804, line: 266, column: 3)
!8103 = distinct !DILexicalBlock(scope: !8094, file: !7804, line: 265, column: 48)
!8104 = !DILocation(line: 267, column: 2, scope: !8103)
!8105 = !DILocation(line: 269, column: 12, scope: !8106)
!8106 = distinct !DILexicalBlock(scope: !8025, file: !7804, line: 269, column: 6)
!8107 = !DILocation(line: 269, column: 17, scope: !8106)
!8108 = !DILocation(line: 269, column: 41, scope: !8106)
!8109 = !DILocation(line: 269, column: 6, scope: !8025)
!8110 = !DILocation(line: 270, column: 3, scope: !8111)
!8111 = distinct !DILexicalBlock(scope: !8112, file: !7804, line: 270, column: 3)
!8112 = distinct !DILexicalBlock(scope: !8113, file: !7804, line: 270, column: 3)
!8113 = distinct !DILexicalBlock(scope: !8114, file: !7804, line: 270, column: 3)
!8114 = distinct !DILexicalBlock(scope: !8115, file: !7804, line: 270, column: 3)
!8115 = distinct !DILexicalBlock(scope: !8106, file: !7804, line: 269, column: 47)
!8116 = !DILocation(line: 272, column: 2, scope: !8115)
!8117 = !DILocation(line: 288, column: 12, scope: !8118)
!8118 = distinct !DILexicalBlock(scope: !8025, file: !7804, line: 288, column: 6)
!8119 = !DILocation(line: 288, column: 17, scope: !8118)
!8120 = !DILocation(line: 288, column: 41, scope: !8118)
!8121 = !DILocation(line: 289, column: 9, scope: !8118)
!8122 = !DILocation(line: 289, column: 14, scope: !8118)
!8123 = !DILocation(line: 288, column: 6, scope: !8025)
!8124 = !DILocation(line: 348, column: 2, scope: !8125)
!8125 = distinct !DILexicalBlock(scope: !8126, file: !7804, line: 348, column: 2)
!8126 = distinct !DILexicalBlock(scope: !8127, file: !7804, line: 348, column: 2)
!8127 = distinct !DILexicalBlock(scope: !8118, file: !7804, line: 289, column: 40)
!8128 = !DILocation(line: 348, column: 2, scope: !8126)
!8129 = !DILocation(line: 348, column: 2, scope: !8130)
!8130 = distinct !DILexicalBlock(scope: !8125, file: !7804, line: 348, column: 2)
!8131 = !DILocation(line: 360, column: 12, scope: !8132)
!8132 = distinct !DILexicalBlock(scope: !8025, file: !7804, line: 360, column: 6)
!8133 = !DILocation(line: 360, column: 17, scope: !8132)
!8134 = !DILocation(line: 360, column: 41, scope: !8132)
!8135 = !DILocation(line: 360, column: 6, scope: !8025)
!8136 = !DILocation(line: 361, column: 14, scope: !8137)
!8137 = distinct !DILexicalBlock(scope: !8132, file: !7804, line: 360, column: 47)
!8138 = !DILocation(line: 362, column: 2, scope: !8137)
!8139 = !DILocation(line: 366, column: 12, scope: !8025)
!8140 = !DILocation(line: 369, column: 15, scope: !8025)
!8141 = !DILocation(line: 371, column: 2, scope: !8025)
!8142 = distinct !DISubprogram(name: "bus_fault", scope: !7804, file: !7804, line: 383, type: !8143, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2581, retainedNodes: !8145)
!8143 = !DISubroutineType(types: !8144)
!8144 = !{!105, !2609, !105, !7877}
!8145 = !{!8146, !8147, !8148, !8149, !8150}
!8146 = !DILocalVariable(name: "esf", arg: 1, scope: !8142, file: !7804, line: 383, type: !2609)
!8147 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !8142, file: !7804, line: 383, type: !105)
!8148 = !DILocalVariable(name: "recoverable", arg: 3, scope: !8142, file: !7804, line: 383, type: !7877)
!8149 = !DILocalVariable(name: "reason", scope: !8142, file: !7804, line: 385, type: !113)
!8150 = !DILocalVariable(name: "bfar", scope: !8151, file: !7804, line: 405, type: !113)
!8151 = distinct !DILexicalBlock(scope: !8152, file: !7804, line: 395, column: 42)
!8152 = distinct !DILexicalBlock(scope: !8142, file: !7804, line: 395, column: 6)
!8153 = !DILocation(line: 0, scope: !8142)
!8154 = !DILocation(line: 387, column: 2, scope: !8155)
!8155 = distinct !DILexicalBlock(scope: !8156, file: !7804, line: 387, column: 2)
!8156 = distinct !DILexicalBlock(scope: !8157, file: !7804, line: 387, column: 2)
!8157 = distinct !DILexicalBlock(scope: !8158, file: !7804, line: 387, column: 2)
!8158 = distinct !DILexicalBlock(scope: !8142, file: !7804, line: 387, column: 2)
!8159 = !DILocation(line: 389, column: 11, scope: !8160)
!8160 = distinct !DILexicalBlock(scope: !8142, file: !7804, line: 389, column: 6)
!8161 = !DILocation(line: 389, column: 16, scope: !8160)
!8162 = !DILocation(line: 389, column: 6, scope: !8142)
!8163 = !DILocation(line: 390, column: 3, scope: !8164)
!8164 = distinct !DILexicalBlock(scope: !8165, file: !7804, line: 390, column: 3)
!8165 = distinct !DILexicalBlock(scope: !8166, file: !7804, line: 390, column: 3)
!8166 = distinct !DILexicalBlock(scope: !8167, file: !7804, line: 390, column: 3)
!8167 = distinct !DILexicalBlock(scope: !8168, file: !7804, line: 390, column: 3)
!8168 = distinct !DILexicalBlock(scope: !8160, file: !7804, line: 389, column: 39)
!8169 = !DILocation(line: 391, column: 2, scope: !8168)
!8170 = !DILocation(line: 392, column: 11, scope: !8171)
!8171 = distinct !DILexicalBlock(scope: !8142, file: !7804, line: 392, column: 6)
!8172 = !DILocation(line: 392, column: 16, scope: !8171)
!8173 = !DILocation(line: 392, column: 6, scope: !8142)
!8174 = !DILocation(line: 393, column: 3, scope: !8175)
!8175 = distinct !DILexicalBlock(scope: !8176, file: !7804, line: 393, column: 3)
!8176 = distinct !DILexicalBlock(scope: !8177, file: !7804, line: 393, column: 3)
!8177 = distinct !DILexicalBlock(scope: !8178, file: !7804, line: 393, column: 3)
!8178 = distinct !DILexicalBlock(scope: !8179, file: !7804, line: 393, column: 3)
!8179 = distinct !DILexicalBlock(scope: !8171, file: !7804, line: 392, column: 41)
!8180 = !DILocation(line: 394, column: 2, scope: !8179)
!8181 = !DILocation(line: 395, column: 11, scope: !8152)
!8182 = !DILocation(line: 395, column: 16, scope: !8152)
!8183 = !DILocation(line: 395, column: 6, scope: !8142)
!8184 = !DILocation(line: 396, column: 3, scope: !8185)
!8185 = distinct !DILexicalBlock(scope: !8186, file: !7804, line: 396, column: 3)
!8186 = distinct !DILexicalBlock(scope: !8187, file: !7804, line: 396, column: 3)
!8187 = distinct !DILexicalBlock(scope: !8188, file: !7804, line: 396, column: 3)
!8188 = distinct !DILexicalBlock(scope: !8151, file: !7804, line: 396, column: 3)
!8189 = !DILocation(line: 405, column: 3, scope: !8151)
!8190 = !DILocation(line: 0, scope: !8151)
!8191 = !DILocation(line: 407, column: 13, scope: !8192)
!8192 = distinct !DILexicalBlock(scope: !8151, file: !7804, line: 407, column: 7)
!8193 = !DILocation(line: 407, column: 18, scope: !8192)
!8194 = !DILocation(line: 407, column: 44, scope: !8192)
!8195 = !DILocation(line: 407, column: 7, scope: !8151)
!8196 = !DILocation(line: 408, column: 4, scope: !8197)
!8197 = distinct !DILexicalBlock(scope: !8198, file: !7804, line: 408, column: 4)
!8198 = distinct !DILexicalBlock(scope: !8199, file: !7804, line: 408, column: 4)
!8199 = distinct !DILexicalBlock(scope: !8200, file: !7804, line: 408, column: 4)
!8200 = distinct !DILexicalBlock(scope: !8201, file: !7804, line: 408, column: 4)
!8201 = distinct !DILexicalBlock(scope: !8192, file: !7804, line: 407, column: 50)
!8202 = !DILocation(line: 409, column: 24, scope: !8203)
!8203 = distinct !DILexicalBlock(scope: !8201, file: !7804, line: 409, column: 8)
!8204 = !DILocation(line: 409, column: 8, scope: !8201)
!8205 = !DILocation(line: 411, column: 15, scope: !8206)
!8206 = distinct !DILexicalBlock(scope: !8203, file: !7804, line: 409, column: 30)
!8207 = !DILocation(line: 412, column: 4, scope: !8206)
!8208 = !DILocation(line: 415, column: 11, scope: !8209)
!8209 = distinct !DILexicalBlock(scope: !8142, file: !7804, line: 415, column: 6)
!8210 = !DILocation(line: 415, column: 16, scope: !8209)
!8211 = !DILocation(line: 415, column: 6, scope: !8142)
!8212 = !DILocation(line: 416, column: 3, scope: !8213)
!8213 = distinct !DILexicalBlock(scope: !8214, file: !7804, line: 416, column: 3)
!8214 = distinct !DILexicalBlock(scope: !8215, file: !7804, line: 416, column: 3)
!8215 = distinct !DILexicalBlock(scope: !8216, file: !7804, line: 416, column: 3)
!8216 = distinct !DILexicalBlock(scope: !8217, file: !7804, line: 416, column: 3)
!8217 = distinct !DILexicalBlock(scope: !8209, file: !7804, line: 415, column: 44)
!8218 = !DILocation(line: 417, column: 2, scope: !8217)
!8219 = !DILocation(line: 418, column: 12, scope: !8220)
!8220 = distinct !DILexicalBlock(scope: !8142, file: !7804, line: 418, column: 6)
!8221 = !DILocation(line: 418, column: 17, scope: !8220)
!8222 = !DILocation(line: 418, column: 41, scope: !8220)
!8223 = !DILocation(line: 418, column: 6, scope: !8142)
!8224 = !DILocation(line: 423, column: 18, scope: !8225)
!8225 = distinct !DILexicalBlock(scope: !8220, file: !7804, line: 423, column: 13)
!8226 = !DILocation(line: 423, column: 23, scope: !8225)
!8227 = !DILocation(line: 423, column: 13, scope: !8220)
!8228 = !DILocation(line: 0, scope: !8220)
!8229 = !DILocation(line: 524, column: 12, scope: !8142)
!8230 = !DILocation(line: 526, column: 15, scope: !8142)
!8231 = !DILocation(line: 528, column: 2, scope: !8142)
!8232 = distinct !DISubprogram(name: "usage_fault", scope: !7804, file: !7804, line: 539, type: !8233, scopeLine: 540, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2581, retainedNodes: !8237)
!8233 = !DISubroutineType(types: !8234)
!8234 = !{!113, !8235}
!8235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8236, size: 32)
!8236 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2610)
!8237 = !{!8238, !8239}
!8238 = !DILocalVariable(name: "esf", arg: 1, scope: !8232, file: !7804, line: 539, type: !8235)
!8239 = !DILocalVariable(name: "reason", scope: !8232, file: !7804, line: 541, type: !113)
!8240 = !DILocation(line: 0, scope: !8232)
!8241 = !DILocation(line: 543, column: 2, scope: !8242)
!8242 = distinct !DILexicalBlock(scope: !8243, file: !7804, line: 543, column: 2)
!8243 = distinct !DILexicalBlock(scope: !8244, file: !7804, line: 543, column: 2)
!8244 = distinct !DILexicalBlock(scope: !8245, file: !7804, line: 543, column: 2)
!8245 = distinct !DILexicalBlock(scope: !8232, file: !7804, line: 543, column: 2)
!8246 = !DILocation(line: 546, column: 12, scope: !8247)
!8247 = distinct !DILexicalBlock(scope: !8232, file: !7804, line: 546, column: 6)
!8248 = !DILocation(line: 546, column: 17, scope: !8247)
!8249 = !DILocation(line: 546, column: 43, scope: !8247)
!8250 = !DILocation(line: 546, column: 6, scope: !8232)
!8251 = !DILocation(line: 547, column: 3, scope: !8252)
!8252 = distinct !DILexicalBlock(scope: !8253, file: !7804, line: 547, column: 3)
!8253 = distinct !DILexicalBlock(scope: !8254, file: !7804, line: 547, column: 3)
!8254 = distinct !DILexicalBlock(scope: !8255, file: !7804, line: 547, column: 3)
!8255 = distinct !DILexicalBlock(scope: !8256, file: !7804, line: 547, column: 3)
!8256 = distinct !DILexicalBlock(scope: !8247, file: !7804, line: 546, column: 49)
!8257 = !DILocation(line: 548, column: 2, scope: !8256)
!8258 = !DILocation(line: 549, column: 12, scope: !8259)
!8259 = distinct !DILexicalBlock(scope: !8232, file: !7804, line: 549, column: 6)
!8260 = !DILocation(line: 549, column: 17, scope: !8259)
!8261 = !DILocation(line: 549, column: 43, scope: !8259)
!8262 = !DILocation(line: 549, column: 6, scope: !8232)
!8263 = !DILocation(line: 550, column: 3, scope: !8264)
!8264 = distinct !DILexicalBlock(scope: !8265, file: !7804, line: 550, column: 3)
!8265 = distinct !DILexicalBlock(scope: !8266, file: !7804, line: 550, column: 3)
!8266 = distinct !DILexicalBlock(scope: !8267, file: !7804, line: 550, column: 3)
!8267 = distinct !DILexicalBlock(scope: !8268, file: !7804, line: 550, column: 3)
!8268 = distinct !DILexicalBlock(scope: !8259, file: !7804, line: 549, column: 49)
!8269 = !DILocation(line: 551, column: 2, scope: !8268)
!8270 = !DILocation(line: 567, column: 12, scope: !8271)
!8271 = distinct !DILexicalBlock(scope: !8232, file: !7804, line: 567, column: 6)
!8272 = !DILocation(line: 567, column: 17, scope: !8271)
!8273 = !DILocation(line: 567, column: 38, scope: !8271)
!8274 = !DILocation(line: 567, column: 6, scope: !8232)
!8275 = !DILocation(line: 568, column: 3, scope: !8276)
!8276 = distinct !DILexicalBlock(scope: !8277, file: !7804, line: 568, column: 3)
!8277 = distinct !DILexicalBlock(scope: !8278, file: !7804, line: 568, column: 3)
!8278 = distinct !DILexicalBlock(scope: !8279, file: !7804, line: 568, column: 3)
!8279 = distinct !DILexicalBlock(scope: !8280, file: !7804, line: 568, column: 3)
!8280 = distinct !DILexicalBlock(scope: !8271, file: !7804, line: 567, column: 44)
!8281 = !DILocation(line: 569, column: 2, scope: !8280)
!8282 = !DILocation(line: 570, column: 12, scope: !8283)
!8283 = distinct !DILexicalBlock(scope: !8232, file: !7804, line: 570, column: 6)
!8284 = !DILocation(line: 570, column: 17, scope: !8283)
!8285 = !DILocation(line: 570, column: 39, scope: !8283)
!8286 = !DILocation(line: 570, column: 6, scope: !8232)
!8287 = !DILocation(line: 571, column: 3, scope: !8288)
!8288 = distinct !DILexicalBlock(scope: !8289, file: !7804, line: 571, column: 3)
!8289 = distinct !DILexicalBlock(scope: !8290, file: !7804, line: 571, column: 3)
!8290 = distinct !DILexicalBlock(scope: !8291, file: !7804, line: 571, column: 3)
!8291 = distinct !DILexicalBlock(scope: !8292, file: !7804, line: 571, column: 3)
!8292 = distinct !DILexicalBlock(scope: !8283, file: !7804, line: 570, column: 45)
!8293 = !DILocation(line: 572, column: 2, scope: !8292)
!8294 = !DILocation(line: 573, column: 12, scope: !8295)
!8295 = distinct !DILexicalBlock(scope: !8232, file: !7804, line: 573, column: 6)
!8296 = !DILocation(line: 573, column: 17, scope: !8295)
!8297 = !DILocation(line: 573, column: 42, scope: !8295)
!8298 = !DILocation(line: 573, column: 6, scope: !8232)
!8299 = !DILocation(line: 574, column: 3, scope: !8300)
!8300 = distinct !DILexicalBlock(scope: !8301, file: !7804, line: 574, column: 3)
!8301 = distinct !DILexicalBlock(scope: !8302, file: !7804, line: 574, column: 3)
!8302 = distinct !DILexicalBlock(scope: !8303, file: !7804, line: 574, column: 3)
!8303 = distinct !DILexicalBlock(scope: !8304, file: !7804, line: 574, column: 3)
!8304 = distinct !DILexicalBlock(scope: !8295, file: !7804, line: 573, column: 48)
!8305 = !DILocation(line: 575, column: 2, scope: !8304)
!8306 = !DILocation(line: 576, column: 12, scope: !8307)
!8307 = distinct !DILexicalBlock(scope: !8232, file: !7804, line: 576, column: 6)
!8308 = !DILocation(line: 576, column: 17, scope: !8307)
!8309 = !DILocation(line: 576, column: 44, scope: !8307)
!8310 = !DILocation(line: 576, column: 6, scope: !8232)
!8311 = !DILocation(line: 577, column: 3, scope: !8312)
!8312 = distinct !DILexicalBlock(scope: !8313, file: !7804, line: 577, column: 3)
!8313 = distinct !DILexicalBlock(scope: !8314, file: !7804, line: 577, column: 3)
!8314 = distinct !DILexicalBlock(scope: !8315, file: !7804, line: 577, column: 3)
!8315 = distinct !DILexicalBlock(scope: !8316, file: !7804, line: 577, column: 3)
!8316 = distinct !DILexicalBlock(scope: !8307, file: !7804, line: 576, column: 50)
!8317 = !DILocation(line: 578, column: 2, scope: !8316)
!8318 = !DILocation(line: 581, column: 12, scope: !8232)
!8319 = !DILocation(line: 583, column: 2, scope: !8232)
!8320 = distinct !DISubprogram(name: "debug_monitor", scope: !7804, file: !7804, line: 632, type: !8321, scopeLine: 633, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2581, retainedNodes: !8323)
!8321 = !DISubroutineType(types: !8322)
!8322 = !{null, !2609, !7877}
!8323 = !{!8324, !8325}
!8324 = !DILocalVariable(name: "esf", arg: 1, scope: !8320, file: !7804, line: 632, type: !2609)
!8325 = !DILocalVariable(name: "recoverable", arg: 2, scope: !8320, file: !7804, line: 632, type: !7877)
!8326 = !DILocation(line: 0, scope: !8320)
!8327 = !DILocation(line: 634, column: 15, scope: !8320)
!8328 = !DILocation(line: 636, column: 2, scope: !8329)
!8329 = distinct !DILexicalBlock(scope: !8330, file: !7804, line: 636, column: 2)
!8330 = distinct !DILexicalBlock(scope: !8331, file: !7804, line: 636, column: 2)
!8331 = distinct !DILexicalBlock(scope: !8332, file: !7804, line: 636, column: 2)
!8332 = distinct !DILexicalBlock(scope: !8320, file: !7804, line: 636, column: 2)
!8333 = !DILocation(line: 652, column: 1, scope: !8320)
!8334 = distinct !DISubprogram(name: "reserved_exception", scope: !7804, file: !7804, line: 776, type: !8335, scopeLine: 777, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2581, retainedNodes: !8337)
!8335 = !DISubroutineType(types: !8336)
!8336 = !{null, !8235, !105}
!8337 = !{!8338, !8339}
!8338 = !DILocalVariable(name: "esf", arg: 1, scope: !8334, file: !7804, line: 776, type: !8235)
!8339 = !DILocalVariable(name: "fault", arg: 2, scope: !8334, file: !7804, line: 776, type: !105)
!8340 = !DILocation(line: 0, scope: !8334)
!8341 = !DILocation(line: 780, column: 2, scope: !8342)
!8342 = distinct !DILexicalBlock(scope: !8343, file: !7804, line: 780, column: 2)
!8343 = distinct !DILexicalBlock(scope: !8344, file: !7804, line: 780, column: 2)
!8344 = distinct !DILexicalBlock(scope: !8345, file: !7804, line: 780, column: 2)
!8345 = distinct !DILexicalBlock(scope: !8334, file: !7804, line: 780, column: 2)
!8346 = !DILocation(line: 783, column: 1, scope: !8334)
!8347 = distinct !DISubprogram(name: "z_arm_is_synchronous_svc", scope: !7804, file: !7804, line: 658, type: !8348, scopeLine: 659, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2581, retainedNodes: !8350)
!8348 = !DISubroutineType(types: !8349)
!8349 = !{!911, !2609}
!8350 = !{!8351, !8352, !8353}
!8351 = !DILocalVariable(name: "esf", arg: 1, scope: !8347, file: !7804, line: 658, type: !2609)
!8352 = !DILocalVariable(name: "ret_addr", scope: !8347, file: !7804, line: 660, type: !2380)
!8353 = !DILocalVariable(name: "fault_insn", scope: !8347, file: !7804, line: 686, type: !183)
!8354 = !DILocation(line: 0, scope: !8347)
!8355 = !DILocation(line: 660, column: 46, scope: !8347)
!8356 = !DILocation(line: 660, column: 23, scope: !8347)
!8357 = !DILocation(line: 682, column: 11, scope: !8347)
!8358 = !DILocation(line: 271, column: 3, scope: !8359, inlinedAt: !8360)
!8359 = distinct !DISubprogram(name: "__DSB", scope: !7525, file: !7525, line: 269, type: !260, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2581, retainedNodes: !391)
!8360 = distinct !DILocation(line: 683, column: 2, scope: !8347)
!8361 = !{i64 6969348}
!8362 = !DILocation(line: 260, column: 3, scope: !8363, inlinedAt: !8364)
!8363 = distinct !DISubprogram(name: "__ISB", scope: !7525, file: !7525, line: 258, type: !260, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2581, retainedNodes: !391)
!8364 = distinct !DILocation(line: 684, column: 2, scope: !8347)
!8365 = !{i64 6969065}
!8366 = !DILocation(line: 686, column: 35, scope: !8347)
!8367 = !DILocation(line: 686, column: 24, scope: !8347)
!8368 = !DILocation(line: 688, column: 11, scope: !8347)
!8369 = !DILocation(line: 271, column: 3, scope: !8359, inlinedAt: !8370)
!8370 = distinct !DILocation(line: 689, column: 2, scope: !8347)
!8371 = !DILocation(line: 260, column: 3, scope: !8363, inlinedAt: !8372)
!8372 = distinct !DILocation(line: 690, column: 2, scope: !8347)
!8373 = !DILocation(line: 693, column: 45, scope: !8374)
!8374 = distinct !DILexicalBlock(scope: !8347, file: !7804, line: 693, column: 6)
!8375 = !DILocation(line: 699, column: 1, scope: !8347)
!8376 = distinct !DISubprogram(name: "z_arm_fault_init", scope: !7804, file: !7804, line: 1107, type: !260, scopeLine: 1108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2581, retainedNodes: !391)
!8377 = !DILocation(line: 1111, column: 11, scope: !8376)
!8378 = !DILocation(line: 1136, column: 1, scope: !8376)
!8379 = distinct !DISubprogram(name: "z_arm_interrupt_init", scope: !8380, file: !8380, line: 26, type: !260, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2652, retainedNodes: !8381)
!8380 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8381 = !{!8382}
!8382 = !DILocalVariable(name: "irq", scope: !8379, file: !8380, line: 28, type: !105)
!8383 = !DILocation(line: 0, scope: !8379)
!8384 = !DILocation(line: 30, column: 2, scope: !8385)
!8385 = distinct !DILexicalBlock(scope: !8379, file: !8380, line: 30, column: 2)
!8386 = !DILocation(line: 31, column: 3, scope: !8387)
!8387 = distinct !DILexicalBlock(scope: !8388, file: !8380, line: 30, column: 39)
!8388 = distinct !DILexicalBlock(scope: !8385, file: !8380, line: 30, column: 2)
!8389 = !DILocation(line: 30, column: 35, scope: !8388)
!8390 = !DILocation(line: 30, column: 13, scope: !8388)
!8391 = distinct !{!8391, !8384, !8392}
!8392 = !DILocation(line: 32, column: 2, scope: !8385)
!8393 = !DILocation(line: 33, column: 1, scope: !8379)
!8394 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !1612, file: !1612, line: 1814, type: !7565, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2652, retainedNodes: !8395)
!8395 = !{!8396, !8397}
!8396 = !DILocalVariable(name: "IRQn", arg: 1, scope: !8394, file: !1612, line: 1814, type: !2437)
!8397 = !DILocalVariable(name: "priority", arg: 2, scope: !8394, file: !1612, line: 1814, type: !113)
!8398 = !DILocation(line: 0, scope: !8394)
!8399 = !DILocation(line: 1816, column: 7, scope: !8394)
!8400 = !DILocation(line: 0, scope: !8401)
!8401 = distinct !DILexicalBlock(scope: !8394, file: !1612, line: 1816, column: 7)
!8402 = !DILocation(line: 1824, column: 1, scope: !8394)
!8403 = distinct !DISubprogram(name: "z_impl_k_thread_abort", scope: !8404, file: !8404, line: 27, type: !8405, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2697, retainedNodes: !8504)
!8404 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8405 = !DISubroutineType(types: !8406)
!8406 = !{null, !8407}
!8407 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !127, line: 347, baseType: !8408)
!8408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8409, size: 32)
!8409 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !127, line: 245, size: 896, elements: !8410)
!8410 = !{!8411, !8469, !8481, !8482, !8483, !8484, !8499}
!8411 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !8409, file: !127, line: 247, baseType: !8412, size: 384)
!8412 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !127, line: 57, size: 384, elements: !8413)
!8413 = !{!8414, !8438, !8445, !8446, !8447, !8456, !8457, !8458}
!8414 = !DIDerivedType(tag: DW_TAG_member, scope: !8412, file: !127, line: 60, baseType: !8415, size: 64)
!8415 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8412, file: !127, line: 60, size: 64, elements: !8416)
!8416 = !{!8417, !8432}
!8417 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !8415, file: !127, line: 61, baseType: !8418, size: 64)
!8418 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !137, line: 49, baseType: !8419)
!8419 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !137, line: 37, size: 64, elements: !8420)
!8420 = !{!8421, !8427}
!8421 = !DIDerivedType(tag: DW_TAG_member, scope: !8419, file: !137, line: 38, baseType: !8422, size: 32)
!8422 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8419, file: !137, line: 38, size: 32, elements: !8423)
!8423 = !{!8424, !8426}
!8424 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !8422, file: !137, line: 39, baseType: !8425, size: 32)
!8425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8419, size: 32)
!8426 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !8422, file: !137, line: 40, baseType: !8425, size: 32)
!8427 = !DIDerivedType(tag: DW_TAG_member, scope: !8419, file: !137, line: 42, baseType: !8428, size: 32, offset: 32)
!8428 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8419, file: !137, line: 42, size: 32, elements: !8429)
!8429 = !{!8430, !8431}
!8430 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !8428, file: !137, line: 43, baseType: !8425, size: 32)
!8431 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !8428, file: !137, line: 44, baseType: !8425, size: 32)
!8432 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !8415, file: !127, line: 62, baseType: !8433, size: 64)
!8433 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !153, line: 49, size: 64, elements: !8434)
!8434 = !{!8435}
!8435 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !8433, file: !153, line: 50, baseType: !8436, size: 64)
!8436 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8437, size: 64, elements: !158)
!8437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8433, size: 32)
!8438 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !8412, file: !127, line: 68, baseType: !8439, size: 32, offset: 64)
!8439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8440, size: 32)
!8440 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !163, line: 233, baseType: !8441)
!8441 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !163, line: 231, size: 64, elements: !8442)
!8442 = !{!8443}
!8443 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !8441, file: !163, line: 232, baseType: !8444, size: 64)
!8444 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !137, line: 48, baseType: !8419)
!8445 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !8412, file: !127, line: 71, baseType: !169, size: 8, offset: 96)
!8446 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !8412, file: !127, line: 74, baseType: !169, size: 8, offset: 104)
!8447 = !DIDerivedType(tag: DW_TAG_member, scope: !8412, file: !127, line: 90, baseType: !8448, size: 16, offset: 112)
!8448 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8412, file: !127, line: 90, size: 16, elements: !8449)
!8449 = !{!8450, !8455}
!8450 = !DIDerivedType(tag: DW_TAG_member, scope: !8448, file: !127, line: 91, baseType: !8451, size: 16)
!8451 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8448, file: !127, line: 91, size: 16, elements: !8452)
!8452 = !{!8453, !8454}
!8453 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !8451, file: !127, line: 96, baseType: !179, size: 8)
!8454 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !8451, file: !127, line: 97, baseType: !169, size: 8, offset: 8)
!8455 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !8448, file: !127, line: 100, baseType: !183, size: 16)
!8456 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !8412, file: !127, line: 107, baseType: !113, size: 32, offset: 128)
!8457 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !8412, file: !127, line: 127, baseType: !104, size: 32, offset: 160)
!8458 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !8412, file: !127, line: 131, baseType: !8459, size: 192, offset: 192)
!8459 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !163, line: 244, size: 192, elements: !8460)
!8460 = !{!8461, !8462, !8468}
!8461 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !8459, file: !163, line: 245, baseType: !8418, size: 64)
!8462 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !8459, file: !163, line: 246, baseType: !8463, size: 32, offset: 64)
!8463 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !163, line: 242, baseType: !8464)
!8464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8465, size: 32)
!8465 = !DISubroutineType(types: !8466)
!8466 = !{null, !8467}
!8467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8459, size: 32)
!8468 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !8459, file: !163, line: 249, baseType: !109, size: 64, offset: 128)
!8469 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !8409, file: !127, line: 250, baseType: !8470, size: 288, offset: 384)
!8470 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !200, line: 25, size: 288, elements: !8471)
!8471 = !{!8472, !8473, !8474, !8475, !8476, !8477, !8478, !8479, !8480}
!8472 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !8470, file: !200, line: 26, baseType: !113, size: 32)
!8473 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !8470, file: !200, line: 27, baseType: !113, size: 32, offset: 32)
!8474 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !8470, file: !200, line: 28, baseType: !113, size: 32, offset: 64)
!8475 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !8470, file: !200, line: 29, baseType: !113, size: 32, offset: 96)
!8476 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !8470, file: !200, line: 30, baseType: !113, size: 32, offset: 128)
!8477 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !8470, file: !200, line: 31, baseType: !113, size: 32, offset: 160)
!8478 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !8470, file: !200, line: 32, baseType: !113, size: 32, offset: 192)
!8479 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !8470, file: !200, line: 33, baseType: !113, size: 32, offset: 224)
!8480 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !8470, file: !200, line: 34, baseType: !113, size: 32, offset: 256)
!8481 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !8409, file: !127, line: 253, baseType: !104, size: 32, offset: 672)
!8482 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !8409, file: !127, line: 256, baseType: !8440, size: 64, offset: 704)
!8483 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !8409, file: !127, line: 294, baseType: !105, size: 32, offset: 768)
!8484 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !8409, file: !127, line: 325, baseType: !8485, size: 32, offset: 800)
!8485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8486, size: 32)
!8486 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !122, line: 5073, size: 192, elements: !8487)
!8487 = !{!8488, !8494, !8495}
!8488 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !8486, file: !122, line: 5074, baseType: !8489, size: 96)
!8489 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !220, line: 56, size: 96, elements: !8490)
!8490 = !{!8491, !8492, !8493}
!8491 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !8489, file: !220, line: 57, baseType: !223, size: 32)
!8492 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !8489, file: !220, line: 58, baseType: !104, size: 32, offset: 32)
!8493 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !8489, file: !220, line: 59, baseType: !111, size: 32, offset: 64)
!8494 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !8486, file: !122, line: 5075, baseType: !8440, size: 64, offset: 96)
!8495 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !8486, file: !122, line: 5076, baseType: !8496, size: 32, offset: 160)
!8496 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !230, line: 43, size: 32, elements: !8497)
!8497 = !{!8498}
!8498 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !8496, file: !230, line: 52, baseType: !22, size: 32)
!8499 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !8409, file: !127, line: 343, baseType: !8500, size: 64, offset: 832)
!8500 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !200, line: 60, size: 64, elements: !8501)
!8501 = !{!8502, !8503}
!8502 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !8500, file: !200, line: 63, baseType: !113, size: 32)
!8503 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !8500, file: !200, line: 66, baseType: !113, size: 32, offset: 32)
!8504 = !{!8505}
!8505 = !DILocalVariable(name: "thread", arg: 1, scope: !8403, file: !8404, line: 27, type: !8407)
!8506 = !DILocation(line: 0, scope: !8403)
!8507 = !DILocation(line: 29, column: 6, scope: !8508)
!8508 = distinct !DILexicalBlock(scope: !8403, file: !8404, line: 29, column: 6)
!8509 = !DILocation(line: 29, column: 15, scope: !8508)
!8510 = !DILocation(line: 29, column: 6, scope: !8403)
!8511 = !DILocation(line: 1031, column: 3, scope: !8512, inlinedAt: !8515)
!8512 = distinct !DISubprogram(name: "__get_IPSR", scope: !7525, file: !7525, line: 1027, type: !389, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2697, retainedNodes: !8513)
!8513 = !{!8514}
!8514 = !DILocalVariable(name: "result", scope: !8512, file: !7525, line: 1029, type: !113)
!8515 = distinct !DILocation(line: 48, column: 10, scope: !8516, inlinedAt: !8520)
!8516 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !8517, file: !8517, line: 46, type: !8518, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2697, retainedNodes: !391)
!8517 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8518 = !DISubroutineType(types: !8519)
!8519 = !{!911}
!8520 = distinct !DILocation(line: 30, column: 7, scope: !8521)
!8521 = distinct !DILexicalBlock(scope: !8522, file: !8404, line: 30, column: 7)
!8522 = distinct !DILexicalBlock(scope: !8508, file: !8404, line: 29, column: 26)
!8523 = !{i64 6970572}
!8524 = !DILocation(line: 0, scope: !8512, inlinedAt: !8515)
!8525 = !DILocation(line: 48, column: 9, scope: !8516, inlinedAt: !8520)
!8526 = !DILocation(line: 30, column: 7, scope: !8522)
!8527 = !DILocation(line: 42, column: 14, scope: !8528)
!8528 = distinct !DILexicalBlock(scope: !8521, file: !8404, line: 30, column: 25)
!8529 = !DILocation(line: 48, column: 15, scope: !8528)
!8530 = !DILocation(line: 49, column: 3, scope: !8528)
!8531 = !DILocation(line: 52, column: 2, scope: !8403)
!8532 = !DILocation(line: 53, column: 1, scope: !8403)
!8533 = distinct !DISubprogram(name: "strcpy", scope: !8534, file: !8534, line: 20, type: !8535, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2725, retainedNodes: !8539)
!8534 = !DIFile(filename: "zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8535 = !DISubroutineType(types: !8536)
!8536 = !{!102, !8537, !8538}
!8537 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !102)
!8538 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !263)
!8539 = !{!8540, !8541, !8542}
!8540 = !DILocalVariable(name: "d", arg: 1, scope: !8533, file: !8534, line: 20, type: !8537)
!8541 = !DILocalVariable(name: "s", arg: 2, scope: !8533, file: !8534, line: 20, type: !8538)
!8542 = !DILocalVariable(name: "dest", scope: !8533, file: !8534, line: 22, type: !102)
!8543 = !DILocation(line: 0, scope: !8533)
!8544 = !DILocation(line: 24, column: 9, scope: !8533)
!8545 = !DILocation(line: 24, column: 12, scope: !8533)
!8546 = !DILocation(line: 24, column: 2, scope: !8533)
!8547 = !DILocation(line: 25, column: 6, scope: !8548)
!8548 = distinct !DILexicalBlock(scope: !8533, file: !8534, line: 24, column: 21)
!8549 = !DILocation(line: 26, column: 4, scope: !8548)
!8550 = !DILocation(line: 27, column: 4, scope: !8548)
!8551 = distinct !{!8551, !8546, !8552}
!8552 = !DILocation(line: 28, column: 2, scope: !8533)
!8553 = !DILocation(line: 30, column: 5, scope: !8533)
!8554 = !DILocation(line: 32, column: 2, scope: !8533)
!8555 = distinct !DISubprogram(name: "strncpy", scope: !8534, file: !8534, line: 42, type: !8556, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2725, retainedNodes: !8558)
!8556 = !DISubroutineType(types: !8557)
!8557 = !{!102, !8537, !8538, !111}
!8558 = !{!8559, !8560, !8561, !8562}
!8559 = !DILocalVariable(name: "d", arg: 1, scope: !8555, file: !8534, line: 42, type: !8537)
!8560 = !DILocalVariable(name: "s", arg: 2, scope: !8555, file: !8534, line: 42, type: !8538)
!8561 = !DILocalVariable(name: "n", arg: 3, scope: !8555, file: !8534, line: 42, type: !111)
!8562 = !DILocalVariable(name: "dest", scope: !8555, file: !8534, line: 44, type: !102)
!8563 = !DILocation(line: 0, scope: !8555)
!8564 = !DILocation(line: 46, column: 12, scope: !8555)
!8565 = !DILocation(line: 46, column: 17, scope: !8555)
!8566 = !DILocation(line: 46, column: 20, scope: !8555)
!8567 = !DILocation(line: 46, column: 23, scope: !8555)
!8568 = !DILocation(line: 46, column: 2, scope: !8555)
!8569 = !DILocation(line: 47, column: 6, scope: !8570)
!8570 = distinct !DILexicalBlock(scope: !8555, file: !8534, line: 46, column: 32)
!8571 = !DILocation(line: 48, column: 4, scope: !8570)
!8572 = !DILocation(line: 49, column: 4, scope: !8570)
!8573 = !DILocation(line: 50, column: 4, scope: !8570)
!8574 = distinct !{!8574, !8568, !8575}
!8575 = !DILocation(line: 51, column: 2, scope: !8555)
!8576 = !DILocation(line: 54, column: 6, scope: !8577)
!8577 = distinct !DILexicalBlock(scope: !8555, file: !8534, line: 53, column: 16)
!8578 = !DILocation(line: 55, column: 4, scope: !8577)
!8579 = !DILocation(line: 56, column: 4, scope: !8577)
!8580 = !DILocation(line: 53, column: 11, scope: !8555)
!8581 = !DILocation(line: 53, column: 2, scope: !8555)
!8582 = distinct !{!8582, !8581, !8583}
!8583 = !DILocation(line: 57, column: 2, scope: !8555)
!8584 = !DILocation(line: 59, column: 2, scope: !8555)
!8585 = distinct !DISubprogram(name: "strchr", scope: !8534, file: !8534, line: 69, type: !8586, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2725, retainedNodes: !8588)
!8586 = !DISubroutineType(types: !8587)
!8587 = !{!102, !263, !105}
!8588 = !{!8589, !8590, !8591}
!8589 = !DILocalVariable(name: "s", arg: 1, scope: !8585, file: !8534, line: 69, type: !263)
!8590 = !DILocalVariable(name: "c", arg: 2, scope: !8585, file: !8534, line: 69, type: !105)
!8591 = !DILocalVariable(name: "tmp", scope: !8585, file: !8534, line: 71, type: !103)
!8592 = !DILocation(line: 0, scope: !8585)
!8593 = !DILocation(line: 73, column: 2, scope: !8585)
!8594 = !DILocation(line: 73, column: 10, scope: !8585)
!8595 = !DILocation(line: 73, column: 13, scope: !8585)
!8596 = !DILocation(line: 73, column: 21, scope: !8585)
!8597 = !DILocation(line: 74, column: 4, scope: !8598)
!8598 = distinct !DILexicalBlock(scope: !8585, file: !8534, line: 73, column: 38)
!8599 = distinct !{!8599, !8593, !8600}
!8600 = !DILocation(line: 75, column: 2, scope: !8585)
!8601 = !DILocation(line: 77, column: 9, scope: !8585)
!8602 = !DILocation(line: 77, column: 2, scope: !8585)
!8603 = distinct !DISubprogram(name: "strrchr", scope: !8534, file: !8534, line: 87, type: !8586, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2725, retainedNodes: !8604)
!8604 = !{!8605, !8606, !8607}
!8605 = !DILocalVariable(name: "s", arg: 1, scope: !8603, file: !8534, line: 87, type: !263)
!8606 = !DILocalVariable(name: "c", arg: 2, scope: !8603, file: !8534, line: 87, type: !105)
!8607 = !DILocalVariable(name: "match", scope: !8603, file: !8534, line: 89, type: !102)
!8608 = !DILocation(line: 0, scope: !8603)
!8609 = !DILocation(line: 91, column: 2, scope: !8603)
!8610 = !DILocation(line: 92, column: 7, scope: !8611)
!8611 = distinct !DILexicalBlock(scope: !8612, file: !8534, line: 92, column: 7)
!8612 = distinct !DILexicalBlock(scope: !8603, file: !8534, line: 91, column: 5)
!8613 = !DILocation(line: 92, column: 10, scope: !8611)
!8614 = !DILocation(line: 92, column: 7, scope: !8612)
!8615 = !DILocation(line: 95, column: 13, scope: !8603)
!8616 = !DILocation(line: 95, column: 2, scope: !8612)
!8617 = distinct !{!8617, !8609, !8618}
!8618 = !DILocation(line: 95, column: 15, scope: !8603)
!8619 = !DILocation(line: 97, column: 2, scope: !8603)
!8620 = distinct !DISubprogram(name: "strlen", scope: !8534, file: !8534, line: 107, type: !8621, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2725, retainedNodes: !8623)
!8621 = !DISubroutineType(types: !8622)
!8622 = !{!111, !263}
!8623 = !{!8624, !8625}
!8624 = !DILocalVariable(name: "s", arg: 1, scope: !8620, file: !8534, line: 107, type: !263)
!8625 = !DILocalVariable(name: "n", scope: !8620, file: !8534, line: 109, type: !111)
!8626 = !DILocation(line: 0, scope: !8620)
!8627 = !DILocation(line: 111, column: 9, scope: !8620)
!8628 = !DILocation(line: 111, column: 12, scope: !8620)
!8629 = !DILocation(line: 111, column: 2, scope: !8620)
!8630 = !DILocation(line: 112, column: 4, scope: !8631)
!8631 = distinct !DILexicalBlock(scope: !8620, file: !8534, line: 111, column: 21)
!8632 = !DILocation(line: 113, column: 4, scope: !8631)
!8633 = distinct !{!8633, !8629, !8634}
!8634 = !DILocation(line: 114, column: 2, scope: !8620)
!8635 = !DILocation(line: 116, column: 2, scope: !8620)
!8636 = distinct !DISubprogram(name: "strnlen", scope: !8534, file: !8534, line: 126, type: !8637, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2725, retainedNodes: !8639)
!8637 = !DISubroutineType(types: !8638)
!8638 = !{!111, !263, !111}
!8639 = !{!8640, !8641, !8642}
!8640 = !DILocalVariable(name: "s", arg: 1, scope: !8636, file: !8534, line: 126, type: !263)
!8641 = !DILocalVariable(name: "maxlen", arg: 2, scope: !8636, file: !8534, line: 126, type: !111)
!8642 = !DILocalVariable(name: "n", scope: !8636, file: !8534, line: 128, type: !111)
!8643 = !DILocation(line: 0, scope: !8636)
!8644 = !DILocation(line: 130, column: 9, scope: !8636)
!8645 = !DILocation(line: 130, column: 12, scope: !8636)
!8646 = !DILocation(line: 130, column: 20, scope: !8636)
!8647 = !DILocation(line: 130, column: 2, scope: !8636)
!8648 = !DILocation(line: 131, column: 4, scope: !8649)
!8649 = distinct !DILexicalBlock(scope: !8636, file: !8534, line: 130, column: 35)
!8650 = !DILocation(line: 132, column: 4, scope: !8649)
!8651 = distinct !{!8651, !8647, !8652}
!8652 = !DILocation(line: 133, column: 2, scope: !8636)
!8653 = !DILocation(line: 135, column: 2, scope: !8636)
!8654 = distinct !DISubprogram(name: "strcmp", scope: !8534, file: !8534, line: 145, type: !8655, scopeLine: 146, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2725, retainedNodes: !8657)
!8655 = !DISubroutineType(types: !8656)
!8656 = !{!105, !263, !263}
!8657 = !{!8658, !8659}
!8658 = !DILocalVariable(name: "s1", arg: 1, scope: !8654, file: !8534, line: 145, type: !263)
!8659 = !DILocalVariable(name: "s2", arg: 2, scope: !8654, file: !8534, line: 145, type: !263)
!8660 = !DILocation(line: 0, scope: !8654)
!8661 = !DILocation(line: 147, column: 10, scope: !8654)
!8662 = !DILocation(line: 147, column: 17, scope: !8654)
!8663 = !DILocation(line: 147, column: 14, scope: !8654)
!8664 = !DILocation(line: 147, column: 22, scope: !8654)
!8665 = !DILocation(line: 148, column: 5, scope: !8666)
!8666 = distinct !DILexicalBlock(scope: !8654, file: !8534, line: 147, column: 40)
!8667 = !DILocation(line: 149, column: 5, scope: !8666)
!8668 = distinct !{!8668, !8669, !8670}
!8669 = !DILocation(line: 147, column: 2, scope: !8654)
!8670 = !DILocation(line: 150, column: 2, scope: !8654)
!8671 = !DILocation(line: 152, column: 9, scope: !8654)
!8672 = !DILocation(line: 152, column: 15, scope: !8654)
!8673 = !DILocation(line: 152, column: 13, scope: !8654)
!8674 = !DILocation(line: 152, column: 2, scope: !8654)
!8675 = distinct !DISubprogram(name: "strncmp", scope: !8534, file: !8534, line: 162, type: !8676, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2725, retainedNodes: !8678)
!8676 = !DISubroutineType(types: !8677)
!8677 = !{!105, !263, !263, !111}
!8678 = !{!8679, !8680, !8681}
!8679 = !DILocalVariable(name: "s1", arg: 1, scope: !8675, file: !8534, line: 162, type: !263)
!8680 = !DILocalVariable(name: "s2", arg: 2, scope: !8675, file: !8534, line: 162, type: !263)
!8681 = !DILocalVariable(name: "n", arg: 3, scope: !8675, file: !8534, line: 162, type: !111)
!8682 = !DILocation(line: 0, scope: !8675)
!8683 = !DILocation(line: 164, column: 17, scope: !8675)
!8684 = !DILocation(line: 164, column: 21, scope: !8675)
!8685 = !DILocation(line: 164, column: 28, scope: !8675)
!8686 = !DILocation(line: 164, column: 25, scope: !8675)
!8687 = !DILocation(line: 164, column: 33, scope: !8675)
!8688 = !DILocation(line: 165, column: 5, scope: !8689)
!8689 = distinct !DILexicalBlock(scope: !8675, file: !8534, line: 164, column: 51)
!8690 = !DILocation(line: 166, column: 5, scope: !8689)
!8691 = !DILocation(line: 167, column: 4, scope: !8689)
!8692 = distinct !{!8692, !8693, !8694}
!8693 = !DILocation(line: 164, column: 2, scope: !8675)
!8694 = !DILocation(line: 168, column: 2, scope: !8675)
!8695 = !DILocation(line: 170, column: 25, scope: !8675)
!8696 = !DILocation(line: 170, column: 31, scope: !8675)
!8697 = !DILocation(line: 170, column: 29, scope: !8675)
!8698 = !DILocation(line: 170, column: 9, scope: !8675)
!8699 = !DILocation(line: 170, column: 2, scope: !8675)
!8700 = distinct !DISubprogram(name: "strtok_r", scope: !8534, file: !8534, line: 180, type: !8701, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2725, retainedNodes: !8703)
!8701 = !DISubroutineType(types: !8702)
!8702 = !{!102, !102, !263, !425}
!8703 = !{!8704, !8705, !8706, !8707, !8708}
!8704 = !DILocalVariable(name: "str", arg: 1, scope: !8700, file: !8534, line: 180, type: !102)
!8705 = !DILocalVariable(name: "sep", arg: 2, scope: !8700, file: !8534, line: 180, type: !263)
!8706 = !DILocalVariable(name: "state", arg: 3, scope: !8700, file: !8534, line: 180, type: !425)
!8707 = !DILocalVariable(name: "start", scope: !8700, file: !8534, line: 182, type: !102)
!8708 = !DILocalVariable(name: "end", scope: !8700, file: !8534, line: 182, type: !102)
!8709 = !DILocation(line: 0, scope: !8700)
!8710 = !DILocation(line: 184, column: 10, scope: !8700)
!8711 = !DILocation(line: 184, column: 22, scope: !8700)
!8712 = !DILocation(line: 187, column: 9, scope: !8700)
!8713 = !DILocation(line: 187, column: 16, scope: !8700)
!8714 = !DILocation(line: 187, column: 19, scope: !8700)
!8715 = !DILocation(line: 187, column: 2, scope: !8700)
!8716 = !DILocation(line: 188, column: 8, scope: !8717)
!8717 = distinct !DILexicalBlock(scope: !8700, file: !8534, line: 187, column: 40)
!8718 = distinct !{!8718, !8715, !8719}
!8719 = !DILocation(line: 189, column: 2, scope: !8700)
!8720 = !DILocation(line: 198, column: 9, scope: !8700)
!8721 = !DILocation(line: 198, column: 18, scope: !8700)
!8722 = !DILocation(line: 198, column: 17, scope: !8700)
!8723 = !DILocation(line: 198, column: 2, scope: !8700)
!8724 = !DILocation(line: 199, column: 6, scope: !8725)
!8725 = distinct !DILexicalBlock(scope: !8700, file: !8534, line: 198, column: 37)
!8726 = !DILocation(line: 198, column: 14, scope: !8700)
!8727 = distinct !{!8727, !8723, !8728}
!8728 = !DILocation(line: 200, column: 2, scope: !8700)
!8729 = !DILocation(line: 203, column: 8, scope: !8730)
!8730 = distinct !DILexicalBlock(scope: !8731, file: !8534, line: 202, column: 20)
!8731 = distinct !DILexicalBlock(scope: !8700, file: !8534, line: 202, column: 6)
!8732 = !DILocation(line: 204, column: 16, scope: !8730)
!8733 = !DILocation(line: 205, column: 2, scope: !8730)
!8734 = !DILocation(line: 210, column: 1, scope: !8700)
!8735 = distinct !DISubprogram(name: "strcat", scope: !8534, file: !8534, line: 212, type: !8535, scopeLine: 213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2725, retainedNodes: !8736)
!8736 = !{!8737, !8738}
!8737 = !DILocalVariable(name: "dest", arg: 1, scope: !8735, file: !8534, line: 212, type: !8537)
!8738 = !DILocalVariable(name: "src", arg: 2, scope: !8735, file: !8534, line: 212, type: !8538)
!8739 = !DILocation(line: 0, scope: !8735)
!8740 = !DILocation(line: 214, column: 16, scope: !8735)
!8741 = !DILocation(line: 214, column: 14, scope: !8735)
!8742 = !DILocation(line: 214, column: 2, scope: !8735)
!8743 = !DILocation(line: 215, column: 2, scope: !8735)
!8744 = distinct !DISubprogram(name: "strncat", scope: !8534, file: !8534, line: 218, type: !8556, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2725, retainedNodes: !8745)
!8745 = !{!8746, !8747, !8748, !8749, !8750}
!8746 = !DILocalVariable(name: "dest", arg: 1, scope: !8744, file: !8534, line: 218, type: !8537)
!8747 = !DILocalVariable(name: "src", arg: 2, scope: !8744, file: !8534, line: 218, type: !8538)
!8748 = !DILocalVariable(name: "n", arg: 3, scope: !8744, file: !8534, line: 219, type: !111)
!8749 = !DILocalVariable(name: "orig_dest", scope: !8744, file: !8534, line: 221, type: !102)
!8750 = !DILocalVariable(name: "len", scope: !8744, file: !8534, line: 222, type: !111)
!8751 = !DILocation(line: 0, scope: !8744)
!8752 = !DILocation(line: 222, column: 15, scope: !8744)
!8753 = !DILocation(line: 224, column: 7, scope: !8744)
!8754 = !DILocation(line: 225, column: 14, scope: !8744)
!8755 = !DILocation(line: 225, column: 19, scope: !8744)
!8756 = !DILocation(line: 225, column: 11, scope: !8744)
!8757 = !DILocation(line: 225, column: 23, scope: !8744)
!8758 = !DILocation(line: 225, column: 28, scope: !8744)
!8759 = !DILocation(line: 225, column: 2, scope: !8744)
!8760 = !DILocation(line: 226, column: 17, scope: !8761)
!8761 = distinct !DILexicalBlock(scope: !8744, file: !8534, line: 225, column: 38)
!8762 = !DILocation(line: 226, column: 8, scope: !8761)
!8763 = !DILocation(line: 226, column: 11, scope: !8761)
!8764 = distinct !{!8764, !8759, !8765}
!8765 = !DILocation(line: 227, column: 2, scope: !8744)
!8766 = !DILocation(line: 228, column: 8, scope: !8744)
!8767 = !DILocation(line: 230, column: 2, scope: !8744)
!8768 = distinct !DISubprogram(name: "memcmp", scope: !8534, file: !8534, line: 239, type: !8769, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2725, retainedNodes: !8771)
!8769 = !DISubroutineType(types: !8770)
!8770 = !{!105, !13, !13, !111}
!8771 = !{!8772, !8773, !8774, !8775, !8776}
!8772 = !DILocalVariable(name: "m1", arg: 1, scope: !8768, file: !8534, line: 239, type: !13)
!8773 = !DILocalVariable(name: "m2", arg: 2, scope: !8768, file: !8534, line: 239, type: !13)
!8774 = !DILocalVariable(name: "n", arg: 3, scope: !8768, file: !8534, line: 239, type: !111)
!8775 = !DILocalVariable(name: "c1", scope: !8768, file: !8534, line: 241, type: !263)
!8776 = !DILocalVariable(name: "c2", scope: !8768, file: !8534, line: 242, type: !263)
!8777 = !DILocation(line: 0, scope: !8768)
!8778 = !DILocation(line: 244, column: 7, scope: !8779)
!8779 = distinct !DILexicalBlock(scope: !8768, file: !8534, line: 244, column: 6)
!8780 = !DILocation(line: 244, column: 6, scope: !8768)
!8781 = !DILocation(line: 248, column: 10, scope: !8768)
!8782 = !DILocation(line: 248, column: 14, scope: !8768)
!8783 = !DILocation(line: 248, column: 19, scope: !8768)
!8784 = !DILocation(line: 248, column: 2, scope: !8768)
!8785 = !DILocation(line: 248, column: 23, scope: !8768)
!8786 = !DILocation(line: 248, column: 30, scope: !8768)
!8787 = !DILocation(line: 248, column: 27, scope: !8768)
!8788 = !DILocation(line: 249, column: 5, scope: !8789)
!8789 = distinct !DILexicalBlock(scope: !8768, file: !8534, line: 248, column: 36)
!8790 = !DILocation(line: 250, column: 5, scope: !8789)
!8791 = distinct !{!8791, !8784, !8792}
!8792 = !DILocation(line: 251, column: 2, scope: !8768)
!8793 = !DILocation(line: 253, column: 9, scope: !8768)
!8794 = !DILocation(line: 253, column: 15, scope: !8768)
!8795 = !DILocation(line: 253, column: 13, scope: !8768)
!8796 = !DILocation(line: 253, column: 2, scope: !8768)
!8797 = !DILocation(line: 254, column: 1, scope: !8768)
!8798 = distinct !DISubprogram(name: "memmove", scope: !8534, file: !8534, line: 263, type: !8799, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2725, retainedNodes: !8801)
!8799 = !DISubroutineType(types: !8800)
!8800 = !{!104, !104, !13, !111}
!8801 = !{!8802, !8803, !8804, !8805, !8806}
!8802 = !DILocalVariable(name: "d", arg: 1, scope: !8798, file: !8534, line: 263, type: !104)
!8803 = !DILocalVariable(name: "s", arg: 2, scope: !8798, file: !8534, line: 263, type: !13)
!8804 = !DILocalVariable(name: "n", arg: 3, scope: !8798, file: !8534, line: 263, type: !111)
!8805 = !DILocalVariable(name: "dest", scope: !8798, file: !8534, line: 265, type: !102)
!8806 = !DILocalVariable(name: "src", scope: !8798, file: !8534, line: 266, type: !263)
!8807 = !DILocation(line: 0, scope: !8798)
!8808 = !DILocation(line: 268, column: 21, scope: !8809)
!8809 = distinct !DILexicalBlock(scope: !8798, file: !8534, line: 268, column: 6)
!8810 = !DILocation(line: 268, column: 28, scope: !8809)
!8811 = !DILocation(line: 268, column: 6, scope: !8798)
!8812 = !DILocation(line: 280, column: 12, scope: !8813)
!8813 = distinct !DILexicalBlock(scope: !8809, file: !8534, line: 278, column: 9)
!8814 = !DILocation(line: 280, column: 3, scope: !8813)
!8815 = !DILocation(line: 275, column: 5, scope: !8816)
!8816 = distinct !DILexicalBlock(scope: !8817, file: !8534, line: 274, column: 17)
!8817 = distinct !DILexicalBlock(scope: !8809, file: !8534, line: 268, column: 33)
!8818 = !DILocation(line: 276, column: 14, scope: !8816)
!8819 = !DILocation(line: 276, column: 4, scope: !8816)
!8820 = !DILocation(line: 276, column: 12, scope: !8816)
!8821 = !DILocation(line: 274, column: 12, scope: !8817)
!8822 = !DILocation(line: 274, column: 3, scope: !8817)
!8823 = distinct !{!8823, !8822, !8824}
!8824 = !DILocation(line: 277, column: 3, scope: !8817)
!8825 = !DILocation(line: 281, column: 12, scope: !8826)
!8826 = distinct !DILexicalBlock(scope: !8813, file: !8534, line: 280, column: 17)
!8827 = !DILocation(line: 281, column: 10, scope: !8826)
!8828 = !DILocation(line: 282, column: 8, scope: !8826)
!8829 = !DILocation(line: 283, column: 7, scope: !8826)
!8830 = !DILocation(line: 284, column: 5, scope: !8826)
!8831 = distinct !{!8831, !8814, !8832}
!8832 = !DILocation(line: 285, column: 3, scope: !8813)
!8833 = !DILocation(line: 288, column: 2, scope: !8798)
!8834 = distinct !DISubprogram(name: "memcpy", scope: !8534, file: !8534, line: 298, type: !8835, scopeLine: 299, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2725, retainedNodes: !8839)
!8835 = !DISubroutineType(types: !8836)
!8836 = !{!104, !8837, !8838, !111}
!8837 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !104)
!8838 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !13)
!8839 = !{!8840, !8841, !8842, !8843, !8844}
!8840 = !DILocalVariable(name: "d", arg: 1, scope: !8834, file: !8534, line: 298, type: !8837)
!8841 = !DILocalVariable(name: "s", arg: 2, scope: !8834, file: !8534, line: 298, type: !8838)
!8842 = !DILocalVariable(name: "n", arg: 3, scope: !8834, file: !8534, line: 298, type: !111)
!8843 = !DILocalVariable(name: "d_byte", scope: !8834, file: !8534, line: 302, type: !919)
!8844 = !DILocalVariable(name: "s_byte", scope: !8834, file: !8534, line: 303, type: !2728)
!8845 = !DILocation(line: 0, scope: !8834)
!8846 = !DILocation(line: 337, column: 11, scope: !8834)
!8847 = !DILocation(line: 337, column: 2, scope: !8834)
!8848 = !DILocation(line: 338, column: 25, scope: !8849)
!8849 = distinct !DILexicalBlock(scope: !8834, file: !8534, line: 337, column: 16)
!8850 = !DILocation(line: 338, column: 17, scope: !8849)
!8851 = !DILocation(line: 338, column: 11, scope: !8849)
!8852 = !DILocation(line: 338, column: 15, scope: !8849)
!8853 = !DILocation(line: 339, column: 4, scope: !8849)
!8854 = distinct !{!8854, !8847, !8855}
!8855 = !DILocation(line: 340, column: 2, scope: !8834)
!8856 = !DILocation(line: 342, column: 2, scope: !8834)
!8857 = distinct !DISubprogram(name: "memset", scope: !8534, file: !8534, line: 352, type: !8858, scopeLine: 353, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2725, retainedNodes: !8860)
!8858 = !DISubroutineType(types: !8859)
!8859 = !{!104, !104, !105, !111}
!8860 = !{!8861, !8862, !8863, !8864, !8865}
!8861 = !DILocalVariable(name: "buf", arg: 1, scope: !8857, file: !8534, line: 352, type: !104)
!8862 = !DILocalVariable(name: "c", arg: 2, scope: !8857, file: !8534, line: 352, type: !105)
!8863 = !DILocalVariable(name: "n", arg: 3, scope: !8857, file: !8534, line: 352, type: !111)
!8864 = !DILocalVariable(name: "d_byte", scope: !8857, file: !8534, line: 356, type: !919)
!8865 = !DILocalVariable(name: "c_byte", scope: !8857, file: !8534, line: 357, type: !170)
!8866 = !DILocation(line: 0, scope: !8857)
!8867 = !DILocation(line: 357, column: 25, scope: !8857)
!8868 = !DILocation(line: 389, column: 11, scope: !8857)
!8869 = !DILocation(line: 389, column: 2, scope: !8857)
!8870 = !DILocation(line: 390, column: 11, scope: !8871)
!8871 = distinct !DILexicalBlock(scope: !8857, file: !8534, line: 389, column: 16)
!8872 = !DILocation(line: 390, column: 15, scope: !8871)
!8873 = !DILocation(line: 391, column: 4, scope: !8871)
!8874 = distinct !{!8874, !8869, !8875}
!8875 = !DILocation(line: 392, column: 2, scope: !8857)
!8876 = !DILocation(line: 394, column: 2, scope: !8857)
!8877 = distinct !DISubprogram(name: "memchr", scope: !8534, file: !8534, line: 404, type: !8878, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2725, retainedNodes: !8880)
!8878 = !DISubroutineType(types: !8879)
!8879 = !{!104, !13, !105, !111}
!8880 = !{!8881, !8882, !8883, !8884}
!8881 = !DILocalVariable(name: "s", arg: 1, scope: !8877, file: !8534, line: 404, type: !13)
!8882 = !DILocalVariable(name: "c", arg: 2, scope: !8877, file: !8534, line: 404, type: !105)
!8883 = !DILocalVariable(name: "n", arg: 3, scope: !8877, file: !8534, line: 404, type: !111)
!8884 = !DILocalVariable(name: "p", scope: !8885, file: !8534, line: 407, type: !2728)
!8885 = distinct !DILexicalBlock(scope: !8886, file: !8534, line: 406, column: 14)
!8886 = distinct !DILexicalBlock(scope: !8877, file: !8534, line: 406, column: 6)
!8887 = !DILocation(line: 0, scope: !8877)
!8888 = !DILocation(line: 406, column: 8, scope: !8886)
!8889 = !DILocation(line: 406, column: 6, scope: !8877)
!8890 = !DILocation(line: 409, column: 3, scope: !8885)
!8891 = !DILocation(line: 0, scope: !8885)
!8892 = !DILocation(line: 410, column: 8, scope: !8893)
!8893 = distinct !DILexicalBlock(scope: !8894, file: !8534, line: 410, column: 8)
!8894 = distinct !DILexicalBlock(scope: !8885, file: !8534, line: 409, column: 6)
!8895 = !DILocation(line: 410, column: 13, scope: !8893)
!8896 = !DILocation(line: 410, column: 8, scope: !8894)
!8897 = distinct !{!8897, !8890, !8898}
!8898 = !DILocation(line: 414, column: 20, scope: !8885)
!8899 = !DILocation(line: 417, column: 2, scope: !8877)
!8900 = !DILocation(line: 418, column: 1, scope: !8877)
!8901 = distinct !DISubprogram(name: "__stdout_hook_install", scope: !882, file: !882, line: 23, type: !4709, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !875, retainedNodes: !8902)
!8902 = !{!8903}
!8903 = !DILocalVariable(name: "hook", arg: 1, scope: !8901, file: !882, line: 23, type: !441)
!8904 = !DILocation(line: 0, scope: !8901)
!8905 = !DILocation(line: 25, column: 15, scope: !8901)
!8906 = !DILocation(line: 26, column: 1, scope: !8901)
!8907 = distinct !DISubprogram(name: "_stdout_hook_default", scope: !882, file: !882, line: 14, type: !442, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !875, retainedNodes: !8908)
!8908 = !{!8909}
!8909 = !DILocalVariable(name: "c", arg: 1, scope: !8907, file: !882, line: 14, type: !105)
!8910 = !DILocation(line: 0, scope: !8907)
!8911 = !DILocation(line: 18, column: 2, scope: !8907)
!8912 = distinct !DISubprogram(name: "z_impl_zephyr_fputc", scope: !882, file: !882, line: 28, type: !8913, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !875, retainedNodes: !8915)
!8913 = !DISubroutineType(types: !8914)
!8914 = !{!105, !105, !878}
!8915 = !{!8916, !8917}
!8916 = !DILocalVariable(name: "c", arg: 1, scope: !8912, file: !882, line: 28, type: !105)
!8917 = !DILocalVariable(name: "stream", arg: 2, scope: !8912, file: !882, line: 28, type: !878)
!8918 = !DILocation(line: 0, scope: !8912)
!8919 = !DILocation(line: 30, column: 27, scope: !8912)
!8920 = !DILocation(line: 30, column: 50, scope: !8912)
!8921 = !DILocation(line: 30, column: 9, scope: !8912)
!8922 = !DILocation(line: 30, column: 2, scope: !8912)
!8923 = distinct !DISubprogram(name: "fputc", scope: !882, file: !882, line: 41, type: !8913, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !875, retainedNodes: !8924)
!8924 = !{!8925, !8926}
!8925 = !DILocalVariable(name: "c", arg: 1, scope: !8923, file: !882, line: 41, type: !105)
!8926 = !DILocalVariable(name: "stream", arg: 2, scope: !8923, file: !882, line: 41, type: !878)
!8927 = !DILocation(line: 0, scope: !8923)
!8928 = !DILocation(line: 43, column: 9, scope: !8923)
!8929 = !DILocation(line: 43, column: 2, scope: !8923)
!8930 = distinct !DISubprogram(name: "zephyr_fputc", scope: !8931, file: !8931, line: 72, type: !8913, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !875, retainedNodes: !8932)
!8931 = !DIFile(filename: "zephyr/include/generated/syscalls/libc-hooks.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/metairq_dispatch")
!8932 = !{!8933, !8934}
!8933 = !DILocalVariable(name: "c", arg: 1, scope: !8930, file: !8931, line: 72, type: !105)
!8934 = !DILocalVariable(name: "stream", arg: 2, scope: !8930, file: !8931, line: 72, type: !878)
!8935 = !DILocation(line: 0, scope: !8930)
!8936 = !DILocation(line: 81, column: 2, scope: !8937)
!8937 = distinct !DILexicalBlock(scope: !8930, file: !8931, line: 81, column: 2)
!8938 = !{i64 2151107117}
!8939 = !DILocation(line: 82, column: 9, scope: !8930)
!8940 = !DILocation(line: 82, column: 2, scope: !8930)
!8941 = distinct !DISubprogram(name: "fputs", scope: !882, file: !882, line: 46, type: !8942, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !875, retainedNodes: !8945)
!8942 = !DISubroutineType(types: !8943)
!8943 = !{!105, !8538, !8944}
!8944 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !878)
!8945 = !{!8946, !8947, !8948, !8949}
!8946 = !DILocalVariable(name: "s", arg: 1, scope: !8941, file: !882, line: 46, type: !8538)
!8947 = !DILocalVariable(name: "stream", arg: 2, scope: !8941, file: !882, line: 46, type: !8944)
!8948 = !DILocalVariable(name: "len", scope: !8941, file: !882, line: 48, type: !105)
!8949 = !DILocalVariable(name: "ret", scope: !8941, file: !882, line: 49, type: !105)
!8950 = !DILocation(line: 0, scope: !8941)
!8951 = !DILocation(line: 48, column: 12, scope: !8941)
!8952 = !DILocation(line: 51, column: 8, scope: !8941)
!8953 = !DILocation(line: 53, column: 13, scope: !8941)
!8954 = !DILocation(line: 53, column: 9, scope: !8941)
!8955 = !DILocation(line: 53, column: 2, scope: !8941)
!8956 = distinct !DISubprogram(name: "fwrite", scope: !882, file: !882, line: 99, type: !8957, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !875, retainedNodes: !8959)
!8957 = !DISubroutineType(types: !8958)
!8958 = !{!111, !8838, !111, !111, !8944}
!8959 = !{!8960, !8961, !8962, !8963}
!8960 = !DILocalVariable(name: "ptr", arg: 1, scope: !8956, file: !882, line: 99, type: !8838)
!8961 = !DILocalVariable(name: "size", arg: 2, scope: !8956, file: !882, line: 99, type: !111)
!8962 = !DILocalVariable(name: "nitems", arg: 3, scope: !8956, file: !882, line: 99, type: !111)
!8963 = !DILocalVariable(name: "stream", arg: 4, scope: !8956, file: !882, line: 100, type: !8944)
!8964 = !DILocation(line: 0, scope: !8956)
!8965 = !DILocation(line: 102, column: 9, scope: !8956)
!8966 = !DILocation(line: 102, column: 2, scope: !8956)
!8967 = distinct !DISubprogram(name: "zephyr_fwrite", scope: !8931, file: !8931, line: 96, type: !8957, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !875, retainedNodes: !8968)
!8968 = !{!8969, !8970, !8971, !8972}
!8969 = !DILocalVariable(name: "ptr", arg: 1, scope: !8967, file: !8931, line: 96, type: !8838)
!8970 = !DILocalVariable(name: "size", arg: 2, scope: !8967, file: !8931, line: 96, type: !111)
!8971 = !DILocalVariable(name: "nitems", arg: 3, scope: !8967, file: !8931, line: 96, type: !111)
!8972 = !DILocalVariable(name: "stream", arg: 4, scope: !8967, file: !8931, line: 96, type: !8944)
!8973 = !DILocation(line: 0, scope: !8967)
!8974 = !DILocation(line: 107, column: 2, scope: !8975)
!8975 = distinct !DILexicalBlock(scope: !8967, file: !8931, line: 107, column: 2)
!8976 = !{i64 2151107221}
!8977 = !DILocation(line: 108, column: 9, scope: !8967)
!8978 = !DILocation(line: 108, column: 2, scope: !8967)
!8979 = distinct !DISubprogram(name: "z_impl_zephyr_fwrite", scope: !882, file: !882, line: 56, type: !8957, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !875, retainedNodes: !8980)
!8980 = !{!8981, !8982, !8983, !8984, !8985, !8986, !8987, !8988}
!8981 = !DILocalVariable(name: "ptr", arg: 1, scope: !8979, file: !882, line: 56, type: !8838)
!8982 = !DILocalVariable(name: "size", arg: 2, scope: !8979, file: !882, line: 56, type: !111)
!8983 = !DILocalVariable(name: "nitems", arg: 3, scope: !8979, file: !882, line: 57, type: !111)
!8984 = !DILocalVariable(name: "stream", arg: 4, scope: !8979, file: !882, line: 57, type: !8944)
!8985 = !DILocalVariable(name: "i", scope: !8979, file: !882, line: 59, type: !111)
!8986 = !DILocalVariable(name: "j", scope: !8979, file: !882, line: 60, type: !111)
!8987 = !DILocalVariable(name: "p", scope: !8979, file: !882, line: 61, type: !2728)
!8988 = !DILabel(scope: !8979, name: "done", file: !882, line: 82)
!8989 = !DILocation(line: 0, scope: !8979)
!8990 = !DILocation(line: 63, column: 14, scope: !8991)
!8991 = distinct !DILexicalBlock(scope: !8979, file: !882, line: 63, column: 6)
!8992 = !DILocation(line: 63, column: 24, scope: !8991)
!8993 = !DILocation(line: 72, column: 3, scope: !8994)
!8994 = distinct !DILexicalBlock(scope: !8979, file: !882, line: 70, column: 5)
!8995 = !DILocation(line: 0, scope: !8994)
!8996 = !DILocation(line: 73, column: 8, scope: !8997)
!8997 = distinct !DILexicalBlock(scope: !8998, file: !882, line: 73, column: 8)
!8998 = distinct !DILexicalBlock(scope: !8994, file: !882, line: 72, column: 6)
!8999 = !DILocation(line: 73, column: 29, scope: !8997)
!9000 = !DILocation(line: 73, column: 27, scope: !8997)
!9001 = !DILocation(line: 73, column: 21, scope: !8997)
!9002 = !DILocation(line: 73, column: 33, scope: !8997)
!9003 = !DILocation(line: 73, column: 8, scope: !8998)
!9004 = !DILocation(line: 76, column: 5, scope: !8998)
!9005 = !DILocation(line: 77, column: 14, scope: !8994)
!9006 = !DILocation(line: 77, column: 3, scope: !8998)
!9007 = distinct !{!9007, !8993, !9008}
!9008 = !DILocation(line: 77, column: 17, scope: !8994)
!9009 = !DILocation(line: 79, column: 4, scope: !8994)
!9010 = !DILocation(line: 80, column: 13, scope: !8979)
!9011 = !DILocation(line: 80, column: 2, scope: !8994)
!9012 = distinct !{!9012, !9013, !9014}
!9013 = !DILocation(line: 70, column: 2, scope: !8979)
!9014 = !DILocation(line: 80, column: 16, scope: !8979)
!9015 = !DILocation(line: 82, column: 1, scope: !8979)
!9016 = !DILocation(line: 83, column: 17, scope: !8979)
!9017 = !DILocation(line: 83, column: 2, scope: !8979)
!9018 = !DILocation(line: 84, column: 1, scope: !8979)
!9019 = distinct !DISubprogram(name: "puts", scope: !882, file: !882, line: 106, type: !9020, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !875, retainedNodes: !9022)
!9020 = !DISubroutineType(types: !9021)
!9021 = !{!105, !263}
!9022 = !{!9023}
!9023 = !DILocalVariable(name: "s", arg: 1, scope: !9019, file: !882, line: 106, type: !263)
!9024 = !DILocation(line: 0, scope: !9019)
!9025 = !DILocation(line: 108, column: 6, scope: !9026)
!9026 = distinct !DILexicalBlock(scope: !9019, file: !882, line: 108, column: 6)
!9027 = !DILocation(line: 108, column: 23, scope: !9026)
!9028 = !DILocation(line: 108, column: 6, scope: !9019)
!9029 = !DILocation(line: 112, column: 9, scope: !9019)
!9030 = !DILocation(line: 112, column: 29, scope: !9019)
!9031 = !DILocation(line: 112, column: 2, scope: !9019)
!9032 = !DILocation(line: 113, column: 1, scope: !9019)
!9033 = distinct !DISubprogram(name: "uart_console_init", scope: !982, file: !982, line: 588, type: !926, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !885, retainedNodes: !9034)
!9034 = !{!9035}
!9035 = !DILocalVariable(name: "arg", arg: 1, scope: !9033, file: !982, line: 588, type: !897)
!9036 = !DILocation(line: 0, scope: !9033)
!9037 = !DILocation(line: 593, column: 7, scope: !9038)
!9038 = distinct !DILexicalBlock(scope: !9033, file: !982, line: 593, column: 6)
!9039 = !DILocation(line: 593, column: 6, scope: !9033)
!9040 = !DILocation(line: 597, column: 2, scope: !9033)
!9041 = !DILocation(line: 599, column: 2, scope: !9033)
!9042 = !DILocation(line: 600, column: 1, scope: !9033)
!9043 = distinct !DISubprogram(name: "device_is_ready", scope: !9044, file: !9044, line: 47, type: !9045, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !885, retainedNodes: !9047)
!9044 = !DIFile(filename: "zephyr/include/generated/syscalls/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/metairq_dispatch")
!9045 = !DISubroutineType(types: !9046)
!9046 = !{!911, !897}
!9047 = !{!9048}
!9048 = !DILocalVariable(name: "dev", arg: 1, scope: !9043, file: !9044, line: 47, type: !897)
!9049 = !DILocation(line: 0, scope: !9043)
!9050 = !DILocation(line: 55, column: 2, scope: !9051)
!9051 = distinct !DILexicalBlock(scope: !9043, file: !9044, line: 55, column: 2)
!9052 = !{i64 2151379767}
!9053 = !DILocation(line: 56, column: 9, scope: !9043)
!9054 = !DILocation(line: 56, column: 2, scope: !9043)
!9055 = distinct !DISubprogram(name: "uart_console_hook_install", scope: !982, file: !982, line: 573, type: !260, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !885, retainedNodes: !391)
!9056 = !DILocation(line: 576, column: 2, scope: !9055)
!9057 = !DILocation(line: 579, column: 2, scope: !9055)
!9058 = !DILocation(line: 581, column: 1, scope: !9055)
!9059 = distinct !DISubprogram(name: "console_out", scope: !982, file: !982, line: 77, type: !442, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !885, retainedNodes: !9060)
!9060 = !{!9061}
!9061 = !DILocalVariable(name: "c", arg: 1, scope: !9059, file: !982, line: 77, type: !105)
!9062 = !DILocation(line: 0, scope: !9059)
!9063 = !DILocation(line: 89, column: 11, scope: !9064)
!9064 = distinct !DILexicalBlock(scope: !9059, file: !982, line: 89, column: 6)
!9065 = !DILocation(line: 89, column: 6, scope: !9059)
!9066 = !DILocation(line: 90, column: 3, scope: !9067)
!9067 = distinct !DILexicalBlock(scope: !9064, file: !982, line: 89, column: 17)
!9068 = !DILocation(line: 91, column: 2, scope: !9067)
!9069 = !DILocation(line: 92, column: 34, scope: !9059)
!9070 = !DILocation(line: 92, column: 2, scope: !9059)
!9071 = !DILocation(line: 94, column: 2, scope: !9059)
!9072 = distinct !DISubprogram(name: "uart_poll_out", scope: !9073, file: !9073, line: 95, type: !922, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !885, retainedNodes: !9074)
!9073 = !DIFile(filename: "zephyr/include/generated/syscalls/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/metairq_dispatch")
!9074 = !{!9075, !9076}
!9075 = !DILocalVariable(name: "dev", arg: 1, scope: !9072, file: !9073, line: 95, type: !897)
!9076 = !DILocalVariable(name: "out_char", arg: 2, scope: !9072, file: !9073, line: 95, type: !170)
!9077 = !DILocation(line: 0, scope: !9072)
!9078 = !DILocation(line: 105, column: 2, scope: !9079)
!9079 = distinct !DILexicalBlock(scope: !9072, file: !9073, line: 105, column: 2)
!9080 = !{i64 2151463012}
!9081 = !DILocation(line: 106, column: 2, scope: !9072)
!9082 = !DILocation(line: 107, column: 1, scope: !9072)
!9083 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !891, file: !891, line: 574, type: !922, scopeLine: 576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !885, retainedNodes: !9084)
!9084 = !{!9085, !9086, !9087}
!9085 = !DILocalVariable(name: "dev", arg: 1, scope: !9083, file: !891, line: 574, type: !897)
!9086 = !DILocalVariable(name: "out_char", arg: 2, scope: !9083, file: !891, line: 575, type: !170)
!9087 = !DILocalVariable(name: "api", scope: !9083, file: !891, line: 577, type: !888)
!9088 = !DILocation(line: 0, scope: !9083)
!9089 = !DILocation(line: 578, column: 40, scope: !9083)
!9090 = !DILocation(line: 580, column: 7, scope: !9083)
!9091 = !DILocation(line: 580, column: 2, scope: !9083)
!9092 = !DILocation(line: 581, column: 1, scope: !9083)
!9093 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !900, file: !900, line: 730, type: !9045, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !885, retainedNodes: !9094)
!9094 = !{!9095}
!9095 = !DILocalVariable(name: "dev", arg: 1, scope: !9093, file: !900, line: 730, type: !897)
!9096 = !DILocation(line: 0, scope: !9093)
!9097 = !DILocation(line: 732, column: 9, scope: !9093)
!9098 = !DILocation(line: 732, column: 2, scope: !9093)
!9099 = distinct !DISubprogram(name: "uart_register_input", scope: !982, file: !982, line: 560, type: !9100, scopeLine: 562, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !885, retainedNodes: !9147)
!9100 = !DISubroutineType(types: !9101)
!9101 = !{null, !9102, !9102, !9144}
!9102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9103, size: 32)
!9103 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !122, line: 2208, size: 160, elements: !9104)
!9104 = !{!9105}
!9105 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !9103, file: !122, line: 2209, baseType: !9106, size: 160)
!9106 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !122, line: 1709, size: 160, elements: !9107)
!9107 = !{!9108, !9121, !9125}
!9108 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !9106, file: !122, line: 1710, baseType: !9109, size: 64)
!9109 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !9110, line: 46, baseType: !9111)
!9110 = !DIFile(filename: "zephyr/include/zephyr/sys/sflist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9111 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !9110, line: 41, size: 64, elements: !9112)
!9112 = !{!9113, !9120}
!9113 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !9111, file: !9110, line: 42, baseType: !9114, size: 32)
!9114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9115, size: 32)
!9115 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !9110, line: 39, baseType: !9116)
!9116 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !9110, line: 35, size: 32, elements: !9117)
!9117 = !{!9118}
!9118 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !9116, file: !9110, line: 36, baseType: !9119, size: 32)
!9119 = !DIDerivedType(tag: DW_TAG_typedef, name: "unative_t", file: !9110, line: 32, baseType: !113)
!9120 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !9111, file: !9110, line: 43, baseType: !9114, size: 32, offset: 32)
!9121 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !9106, file: !122, line: 1711, baseType: !9122, size: 32, offset: 64)
!9122 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !230, line: 43, size: 32, elements: !9123)
!9123 = !{!9124}
!9124 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !9122, file: !230, line: 52, baseType: !22, size: 32)
!9125 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !9106, file: !122, line: 1712, baseType: !9126, size: 64, offset: 96)
!9126 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !163, line: 233, baseType: !9127)
!9127 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !163, line: 231, size: 64, elements: !9128)
!9128 = !{!9129}
!9129 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !9127, file: !163, line: 232, baseType: !9130, size: 64)
!9130 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !137, line: 48, baseType: !9131)
!9131 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !137, line: 37, size: 64, elements: !9132)
!9132 = !{!9133, !9139}
!9133 = !DIDerivedType(tag: DW_TAG_member, scope: !9131, file: !137, line: 38, baseType: !9134, size: 32)
!9134 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9131, file: !137, line: 38, size: 32, elements: !9135)
!9135 = !{!9136, !9138}
!9136 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !9134, file: !137, line: 39, baseType: !9137, size: 32)
!9137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9131, size: 32)
!9138 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !9134, file: !137, line: 40, baseType: !9137, size: 32)
!9139 = !DIDerivedType(tag: DW_TAG_member, scope: !9131, file: !137, line: 42, baseType: !9140, size: 32, offset: 32)
!9140 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9131, file: !137, line: 42, size: 32, elements: !9141)
!9141 = !{!9142, !9143}
!9142 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !9140, file: !137, line: 43, baseType: !9137, size: 32)
!9143 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !9140, file: !137, line: 44, baseType: !9137, size: 32)
!9144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9145, size: 32)
!9145 = !DISubroutineType(types: !9146)
!9146 = !{!169, !102, !169}
!9147 = !{!9148, !9149, !9150}
!9148 = !DILocalVariable(name: "avail", arg: 1, scope: !9099, file: !982, line: 560, type: !9102)
!9149 = !DILocalVariable(name: "lines", arg: 2, scope: !9099, file: !982, line: 560, type: !9102)
!9150 = !DILocalVariable(name: "completion", arg: 3, scope: !9099, file: !982, line: 561, type: !9144)
!9151 = !DILocation(line: 0, scope: !9099)
!9152 = !DILocation(line: 566, column: 1, scope: !9099)
!9153 = distinct !DISubprogram(name: "imx_gpio_configure", scope: !1095, file: !1095, line: 40, type: !1017, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !991, retainedNodes: !9154)
!9154 = !{!9155, !9156, !9157, !9158, !9160, !9161, !9166, !9167}
!9155 = !DILocalVariable(name: "port", arg: 1, scope: !9153, file: !1095, line: 40, type: !1019)
!9156 = !DILocalVariable(name: "pin", arg: 2, scope: !9153, file: !1095, line: 40, type: !1034)
!9157 = !DILocalVariable(name: "flags", arg: 3, scope: !9153, file: !1095, line: 41, type: !1035)
!9158 = !DILocalVariable(name: "config", scope: !9153, file: !1095, line: 43, type: !9159)
!9159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1127, size: 32)
!9160 = !DILocalVariable(name: "base", scope: !9153, file: !1095, line: 44, type: !1132)
!9161 = !DILocalVariable(name: "pin_cfg", scope: !9153, file: !1095, line: 52, type: !9162)
!9162 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1148, line: 59, size: 160, elements: !9163)
!9163 = !{!9164, !9165}
!9164 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !9162, file: !1148, line: 60, baseType: !1147, size: 128)
!9165 = !DIDerivedType(tag: DW_TAG_member, name: "pin_ctrl_flags", scope: !9162, file: !1148, line: 61, baseType: !113, size: 32, offset: 128)
!9166 = !DILocalVariable(name: "gpio_cfg_reg", scope: !9153, file: !1095, line: 54, type: !858)
!9167 = !DILocalVariable(name: "reg", scope: !9153, file: !1095, line: 56, type: !113)
!9168 = !DILocation(line: 0, scope: !9153)
!9169 = !DILocation(line: 43, column: 47, scope: !9153)
!9170 = !DILocation(line: 44, column: 28, scope: !9153)
!9171 = !DILocation(line: 46, column: 35, scope: !9172)
!9172 = distinct !DILexicalBlock(scope: !9153, file: !1095, line: 46, column: 6)
!9173 = !DILocation(line: 50, column: 2, scope: !9174)
!9174 = distinct !DILexicalBlock(scope: !9175, file: !1095, line: 50, column: 2)
!9175 = distinct !DILexicalBlock(scope: !9153, file: !1095, line: 50, column: 2)
!9176 = !DILocation(line: 50, column: 2, scope: !9175)
!9177 = !DILocation(line: 50, column: 2, scope: !9178)
!9178 = distinct !DILexicalBlock(scope: !9174, file: !1095, line: 50, column: 2)
!9179 = !DILocation(line: 52, column: 2, scope: !9153)
!9180 = !DILocation(line: 52, column: 25, scope: !9153)
!9181 = !DILocation(line: 55, column: 32, scope: !9153)
!9182 = !DILocation(line: 55, column: 47, scope: !9153)
!9183 = !DILocation(line: 55, column: 3, scope: !9153)
!9184 = !DILocation(line: 56, column: 17, scope: !9153)
!9185 = !DILocation(line: 66, column: 13, scope: !9186)
!9186 = distinct !DILexicalBlock(scope: !9153, file: !1095, line: 66, column: 6)
!9187 = !DILocation(line: 66, column: 34, scope: !9186)
!9188 = !DILocation(line: 66, column: 6, scope: !9153)
!9189 = !DILocation(line: 70, column: 36, scope: !9190)
!9190 = distinct !DILexicalBlock(scope: !9153, file: !1095, line: 70, column: 6)
!9191 = !DILocation(line: 70, column: 14, scope: !9190)
!9192 = !DILocation(line: 70, column: 30, scope: !9190)
!9193 = !DILocation(line: 72, column: 7, scope: !9194)
!9194 = distinct !DILexicalBlock(scope: !9190, file: !1095, line: 70, column: 72)
!9195 = !DILocation(line: 73, column: 8, scope: !9196)
!9196 = distinct !DILexicalBlock(scope: !9197, file: !1095, line: 72, column: 38)
!9197 = distinct !DILexicalBlock(scope: !9194, file: !1095, line: 72, column: 7)
!9198 = !DILocation(line: 74, column: 3, scope: !9196)
!9199 = !DILocation(line: 75, column: 8, scope: !9200)
!9200 = distinct !DILexicalBlock(scope: !9197, file: !1095, line: 74, column: 10)
!9201 = !DILocation(line: 79, column: 7, scope: !9202)
!9202 = distinct !DILexicalBlock(scope: !9190, file: !1095, line: 77, column: 9)
!9203 = !DILocation(line: 0, scope: !9190)
!9204 = !DILocation(line: 84, column: 27, scope: !9153)
!9205 = !DILocation(line: 84, column: 26, scope: !9153)
!9206 = !DILocation(line: 84, column: 2, scope: !9153)
!9207 = !DILocation(line: 86, column: 10, scope: !9153)
!9208 = !DILocation(line: 86, column: 25, scope: !9153)
!9209 = !DILocation(line: 87, column: 2, scope: !9153)
!9210 = !DILocation(line: 98, column: 2, scope: !9153)
!9211 = !DILocation(line: 99, column: 2, scope: !9153)
!9212 = !DILocation(line: 101, column: 6, scope: !9153)
!9213 = !DILocation(line: 103, column: 14, scope: !9214)
!9214 = distinct !DILexicalBlock(scope: !9215, file: !1095, line: 103, column: 7)
!9215 = distinct !DILexicalBlock(scope: !9216, file: !1095, line: 101, column: 35)
!9216 = distinct !DILexicalBlock(scope: !9153, file: !1095, line: 101, column: 6)
!9217 = !DILocation(line: 103, column: 38, scope: !9214)
!9218 = !DILocation(line: 103, column: 7, scope: !9215)
!9219 = !DILocation(line: 105, column: 21, scope: !9220)
!9220 = distinct !DILexicalBlock(scope: !9214, file: !1095, line: 105, column: 14)
!9221 = !DILocation(line: 105, column: 46, scope: !9220)
!9222 = !DILocation(line: 105, column: 14, scope: !9214)
!9223 = !DILocation(line: 0, scope: !9214)
!9224 = !DILocation(line: 110, column: 3, scope: !9215)
!9225 = !DILocation(line: 111, column: 2, scope: !9215)
!9226 = !DILocation(line: 113, column: 3, scope: !9227)
!9227 = distinct !DILexicalBlock(scope: !9216, file: !1095, line: 111, column: 9)
!9228 = !DILocation(line: 117, column: 1, scope: !9153)
!9229 = distinct !DISubprogram(name: "imx_gpio_port_get_raw", scope: !1095, file: !1095, line: 119, type: !9230, scopeLine: 120, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !991, retainedNodes: !9232)
!9230 = !DISubroutineType(types: !9231)
!9231 = !{!105, !1019, !1417}
!9232 = !{!9233, !9234, !9235, !9236}
!9233 = !DILocalVariable(name: "port", arg: 1, scope: !9229, file: !1095, line: 119, type: !1019)
!9234 = !DILocalVariable(name: "value", arg: 2, scope: !9229, file: !1095, line: 119, type: !1417)
!9235 = !DILocalVariable(name: "config", scope: !9229, file: !1095, line: 121, type: !9159)
!9236 = !DILocalVariable(name: "base", scope: !9229, file: !1095, line: 122, type: !1132)
!9237 = !DILocation(line: 0, scope: !9229)
!9238 = !DILocation(line: 121, column: 47, scope: !9229)
!9239 = !DILocation(line: 122, column: 28, scope: !9229)
!9240 = !DILocation(line: 124, column: 11, scope: !9229)
!9241 = !DILocation(line: 124, column: 9, scope: !9229)
!9242 = !DILocation(line: 126, column: 2, scope: !9229)
!9243 = distinct !DISubprogram(name: "imx_gpio_port_set_masked_raw", scope: !1095, file: !1095, line: 129, type: !1044, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !991, retainedNodes: !9244)
!9244 = !{!9245, !9246, !9247, !9248, !9249}
!9245 = !DILocalVariable(name: "port", arg: 1, scope: !9243, file: !1095, line: 129, type: !1019)
!9246 = !DILocalVariable(name: "mask", arg: 2, scope: !9243, file: !1095, line: 130, type: !1046)
!9247 = !DILocalVariable(name: "value", arg: 3, scope: !9243, file: !1095, line: 131, type: !1041)
!9248 = !DILocalVariable(name: "config", scope: !9243, file: !1095, line: 133, type: !9159)
!9249 = !DILocalVariable(name: "base", scope: !9243, file: !1095, line: 134, type: !1132)
!9250 = !DILocation(line: 0, scope: !9243)
!9251 = !DILocation(line: 133, column: 47, scope: !9243)
!9252 = !DILocation(line: 134, column: 28, scope: !9243)
!9253 = !DILocation(line: 137, column: 5, scope: !9243)
!9254 = !DILocation(line: 137, column: 32, scope: !9243)
!9255 = !DILocation(line: 137, column: 30, scope: !9243)
!9256 = !DILocation(line: 137, column: 48, scope: !9243)
!9257 = !DILocation(line: 137, column: 39, scope: !9243)
!9258 = !DILocation(line: 136, column: 2, scope: !9243)
!9259 = !DILocation(line: 139, column: 2, scope: !9243)
!9260 = distinct !DISubprogram(name: "imx_gpio_port_set_bits_raw", scope: !1095, file: !1095, line: 142, type: !1049, scopeLine: 144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !991, retainedNodes: !9261)
!9261 = !{!9262, !9263, !9264, !9265}
!9262 = !DILocalVariable(name: "port", arg: 1, scope: !9260, file: !1095, line: 142, type: !1019)
!9263 = !DILocalVariable(name: "pins", arg: 2, scope: !9260, file: !1095, line: 143, type: !1046)
!9264 = !DILocalVariable(name: "config", scope: !9260, file: !1095, line: 145, type: !9159)
!9265 = !DILocalVariable(name: "base", scope: !9260, file: !1095, line: 146, type: !1132)
!9266 = !DILocation(line: 0, scope: !9260)
!9267 = !DILocation(line: 145, column: 47, scope: !9260)
!9268 = !DILocation(line: 146, column: 28, scope: !9260)
!9269 = !DILocation(line: 148, column: 29, scope: !9260)
!9270 = !DILocation(line: 148, column: 54, scope: !9260)
!9271 = !DILocation(line: 148, column: 2, scope: !9260)
!9272 = !DILocation(line: 150, column: 2, scope: !9260)
!9273 = distinct !DISubprogram(name: "imx_gpio_port_clear_bits_raw", scope: !1095, file: !1095, line: 153, type: !1049, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !991, retainedNodes: !9274)
!9274 = !{!9275, !9276, !9277, !9278}
!9275 = !DILocalVariable(name: "port", arg: 1, scope: !9273, file: !1095, line: 153, type: !1019)
!9276 = !DILocalVariable(name: "pins", arg: 2, scope: !9273, file: !1095, line: 154, type: !1046)
!9277 = !DILocalVariable(name: "config", scope: !9273, file: !1095, line: 156, type: !9159)
!9278 = !DILocalVariable(name: "base", scope: !9273, file: !1095, line: 157, type: !1132)
!9279 = !DILocation(line: 0, scope: !9273)
!9280 = !DILocation(line: 156, column: 47, scope: !9273)
!9281 = !DILocation(line: 157, column: 28, scope: !9273)
!9282 = !DILocation(line: 159, column: 29, scope: !9273)
!9283 = !DILocation(line: 159, column: 56, scope: !9273)
!9284 = !DILocation(line: 159, column: 54, scope: !9273)
!9285 = !DILocation(line: 159, column: 2, scope: !9273)
!9286 = !DILocation(line: 161, column: 2, scope: !9273)
!9287 = distinct !DISubprogram(name: "imx_gpio_port_toggle_bits", scope: !1095, file: !1095, line: 164, type: !1049, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !991, retainedNodes: !9288)
!9288 = !{!9289, !9290, !9291, !9292}
!9289 = !DILocalVariable(name: "port", arg: 1, scope: !9287, file: !1095, line: 164, type: !1019)
!9290 = !DILocalVariable(name: "pins", arg: 2, scope: !9287, file: !1095, line: 165, type: !1046)
!9291 = !DILocalVariable(name: "config", scope: !9287, file: !1095, line: 167, type: !9159)
!9292 = !DILocalVariable(name: "base", scope: !9287, file: !1095, line: 168, type: !1132)
!9293 = !DILocation(line: 0, scope: !9287)
!9294 = !DILocation(line: 167, column: 47, scope: !9287)
!9295 = !DILocation(line: 168, column: 28, scope: !9287)
!9296 = !DILocation(line: 170, column: 29, scope: !9287)
!9297 = !DILocation(line: 170, column: 54, scope: !9287)
!9298 = !DILocation(line: 170, column: 2, scope: !9287)
!9299 = !DILocation(line: 172, column: 2, scope: !9287)
!9300 = distinct !DISubprogram(name: "imx_gpio_pin_interrupt_configure", scope: !1095, file: !1095, line: 175, type: !1055, scopeLine: 179, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !991, retainedNodes: !9301)
!9301 = !{!9302, !9303, !9304, !9305, !9306, !9307, !9308, !9309, !9310, !9311}
!9302 = !DILocalVariable(name: "port", arg: 1, scope: !9300, file: !1095, line: 175, type: !1019)
!9303 = !DILocalVariable(name: "pin", arg: 2, scope: !9300, file: !1095, line: 176, type: !1034)
!9304 = !DILocalVariable(name: "mode", arg: 3, scope: !9300, file: !1095, line: 177, type: !994)
!9305 = !DILocalVariable(name: "trig", arg: 4, scope: !9300, file: !1095, line: 178, type: !1000)
!9306 = !DILocalVariable(name: "config", scope: !9300, file: !1095, line: 180, type: !9159)
!9307 = !DILocalVariable(name: "base", scope: !9300, file: !1095, line: 181, type: !1132)
!9308 = !DILocalVariable(name: "icr_reg", scope: !9300, file: !1095, line: 182, type: !858)
!9309 = !DILocalVariable(name: "key", scope: !9300, file: !1095, line: 183, type: !32)
!9310 = !DILocalVariable(name: "icr_val", scope: !9300, file: !1095, line: 184, type: !113)
!9311 = !DILocalVariable(name: "shift", scope: !9300, file: !1095, line: 185, type: !169)
!9312 = !DILocation(line: 0, scope: !9300)
!9313 = !DILocation(line: 180, column: 47, scope: !9300)
!9314 = !DILocation(line: 181, column: 28, scope: !9300)
!9315 = !DILocation(line: 187, column: 14, scope: !9316)
!9316 = distinct !DILexicalBlock(scope: !9300, file: !1095, line: 187, column: 6)
!9317 = !DILocation(line: 187, column: 21, scope: !9316)
!9318 = !DILocation(line: 187, column: 19, scope: !9316)
!9319 = !DILocation(line: 187, column: 31, scope: !9316)
!9320 = !DILocation(line: 188, column: 6, scope: !9316)
!9321 = !DILocation(line: 193, column: 12, scope: !9322)
!9322 = distinct !DILexicalBlock(scope: !9300, file: !1095, line: 193, column: 6)
!9323 = !DILocation(line: 193, column: 35, scope: !9322)
!9324 = !DILocation(line: 195, column: 42, scope: !9325)
!9325 = distinct !DILexicalBlock(scope: !9322, file: !1095, line: 195, column: 13)
!9326 = !DILocation(line: 198, column: 19, scope: !9327)
!9327 = distinct !DILexicalBlock(scope: !9325, file: !1095, line: 198, column: 13)
!9328 = !DILocation(line: 198, column: 43, scope: !9327)
!9329 = !DILocation(line: 0, scope: !9322)
!9330 = !DILocation(line: 205, column: 10, scope: !9331)
!9331 = distinct !DILexicalBlock(scope: !9300, file: !1095, line: 205, column: 6)
!9332 = !DILocation(line: 205, column: 6, scope: !9300)
!9333 = !DILocation(line: 206, column: 14, scope: !9334)
!9334 = distinct !DILexicalBlock(scope: !9331, file: !1095, line: 205, column: 17)
!9335 = !DILocation(line: 207, column: 21, scope: !9334)
!9336 = !DILocation(line: 208, column: 2, scope: !9334)
!9337 = !DILocation(line: 208, column: 17, scope: !9338)
!9338 = distinct !DILexicalBlock(scope: !9331, file: !1095, line: 208, column: 13)
!9339 = !DILocation(line: 208, column: 13, scope: !9331)
!9340 = !DILocation(line: 209, column: 14, scope: !9341)
!9341 = distinct !DILexicalBlock(scope: !9338, file: !1095, line: 208, column: 24)
!9342 = !DILocation(line: 210, column: 21, scope: !9341)
!9343 = !DILocation(line: 0, scope: !9331)
!9344 = !DILocation(line: 55, column: 2, scope: !9345, inlinedAt: !9351)
!9345 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7644, file: !7644, line: 42, type: !9346, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !991, retainedNodes: !9348)
!9346 = !DISubroutineType(types: !9347)
!9347 = !{!32}
!9348 = !{!9349, !9350}
!9349 = !DILocalVariable(name: "key", scope: !9345, file: !7644, line: 44, type: !32)
!9350 = !DILocalVariable(name: "tmp", scope: !9345, file: !7644, line: 53, type: !32)
!9351 = distinct !DILocation(line: 215, column: 8, scope: !9300)
!9352 = !{i64 3055191}
!9353 = !DILocation(line: 0, scope: !9345, inlinedAt: !9351)
!9354 = !DILocation(line: 217, column: 14, scope: !9300)
!9355 = !DILocation(line: 217, column: 33, scope: !9300)
!9356 = !DILocation(line: 217, column: 30, scope: !9300)
!9357 = !DILocation(line: 217, column: 25, scope: !9300)
!9358 = !DILocation(line: 217, column: 23, scope: !9300)
!9359 = !DILocation(line: 217, column: 52, scope: !9300)
!9360 = !DILocation(line: 217, column: 41, scope: !9300)
!9361 = !DILocation(line: 217, column: 11, scope: !9300)
!9362 = !DILocation(line: 219, column: 2, scope: !9300)
!9363 = !DILocation(line: 220, column: 2, scope: !9300)
!9364 = !DILocation(line: 221, column: 2, scope: !9300)
!9365 = !DILocalVariable(name: "key", arg: 1, scope: !9366, file: !7644, line: 84, type: !32)
!9366 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7644, file: !7644, line: 84, type: !7476, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !991, retainedNodes: !9367)
!9367 = !{!9365}
!9368 = !DILocation(line: 0, scope: !9366, inlinedAt: !9369)
!9369 = distinct !DILocation(line: 223, column: 2, scope: !9300)
!9370 = !DILocation(line: 95, column: 2, scope: !9366, inlinedAt: !9369)
!9371 = !{i64 3056008}
!9372 = !DILocation(line: 225, column: 2, scope: !9300)
!9373 = !DILocation(line: 226, column: 1, scope: !9300)
!9374 = distinct !DISubprogram(name: "imx_gpio_manage_callback", scope: !1095, file: !1095, line: 228, type: !1059, scopeLine: 230, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !991, retainedNodes: !9375)
!9375 = !{!9376, !9377, !9378, !9379}
!9376 = !DILocalVariable(name: "port", arg: 1, scope: !9374, file: !1095, line: 228, type: !1019)
!9377 = !DILocalVariable(name: "cb", arg: 2, scope: !9374, file: !1095, line: 229, type: !1061)
!9378 = !DILocalVariable(name: "set", arg: 3, scope: !9374, file: !1095, line: 229, type: !911)
!9379 = !DILocalVariable(name: "data", scope: !9374, file: !1095, line: 231, type: !9380)
!9380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1113, size: 32)
!9381 = !DILocation(line: 0, scope: !9374)
!9382 = !DILocation(line: 231, column: 37, scope: !9374)
!9383 = !DILocation(line: 233, column: 37, scope: !9374)
!9384 = !DILocation(line: 233, column: 9, scope: !9374)
!9385 = !DILocation(line: 233, column: 2, scope: !9374)
!9386 = distinct !DISubprogram(name: "gpio_manage_callback", scope: !9387, file: !9387, line: 38, type: !9388, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !991, retainedNodes: !9391)
!9387 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio/gpio_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9388 = !DISubroutineType(types: !9389)
!9389 = !{!105, !9390, !1061, !911}
!9390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1117, size: 32)
!9391 = !{!9392, !9393, !9394}
!9392 = !DILocalVariable(name: "callbacks", arg: 1, scope: !9386, file: !9387, line: 38, type: !9390)
!9393 = !DILocalVariable(name: "callback", arg: 2, scope: !9386, file: !9387, line: 39, type: !1061)
!9394 = !DILocalVariable(name: "set", arg: 3, scope: !9386, file: !9387, line: 40, type: !911)
!9395 = !DILocation(line: 0, scope: !9386)
!9396 = !DILocation(line: 42, column: 2, scope: !9397)
!9397 = distinct !DILexicalBlock(scope: !9398, file: !9387, line: 42, column: 2)
!9398 = distinct !DILexicalBlock(scope: !9386, file: !9387, line: 42, column: 2)
!9399 = !DILocation(line: 42, column: 2, scope: !9398)
!9400 = !DILocation(line: 42, column: 2, scope: !9401)
!9401 = distinct !DILexicalBlock(scope: !9397, file: !9387, line: 42, column: 2)
!9402 = !DILocation(line: 43, column: 2, scope: !9403)
!9403 = distinct !DILexicalBlock(scope: !9404, file: !9387, line: 43, column: 2)
!9404 = distinct !DILexicalBlock(scope: !9386, file: !9387, line: 43, column: 2)
!9405 = !DILocation(line: 43, column: 2, scope: !9404)
!9406 = !DILocation(line: 43, column: 2, scope: !9407)
!9407 = distinct !DILexicalBlock(scope: !9403, file: !9387, line: 43, column: 2)
!9408 = !DILocation(line: 45, column: 7, scope: !9409)
!9409 = distinct !DILexicalBlock(scope: !9386, file: !9387, line: 45, column: 6)
!9410 = !DILocation(line: 45, column: 6, scope: !9386)
!9411 = !DILocation(line: 46, column: 56, scope: !9412)
!9412 = distinct !DILexicalBlock(scope: !9413, file: !9387, line: 46, column: 7)
!9413 = distinct !DILexicalBlock(scope: !9409, file: !9387, line: 45, column: 38)
!9414 = !DILocation(line: 46, column: 8, scope: !9412)
!9415 = !DILocation(line: 46, column: 7, scope: !9413)
!9416 = !DILocation(line: 51, column: 13, scope: !9409)
!9417 = !DILocation(line: 56, column: 43, scope: !9418)
!9418 = distinct !DILexicalBlock(scope: !9419, file: !9387, line: 55, column: 11)
!9419 = distinct !DILexicalBlock(scope: !9386, file: !9387, line: 55, column: 6)
!9420 = !DILocation(line: 56, column: 3, scope: !9418)
!9421 = !DILocation(line: 57, column: 2, scope: !9418)
!9422 = !DILocation(line: 60, column: 1, scope: !9386)
!9423 = distinct !DISubprogram(name: "sys_slist_is_empty", scope: !1066, file: !1066, line: 261, type: !9424, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !991, retainedNodes: !9426)
!9424 = !DISubroutineType(types: !9425)
!9425 = !{!911, !9390}
!9426 = !{!9427}
!9427 = !DILocalVariable(name: "list", arg: 1, scope: !9423, file: !1066, line: 261, type: !9390)
!9428 = !DILocation(line: 0, scope: !9423)
!9429 = !DILocation(line: 261, column: 1, scope: !9423)
!9430 = distinct !DISubprogram(name: "sys_slist_find_and_remove", scope: !1066, file: !1066, line: 417, type: !9431, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !991, retainedNodes: !9433)
!9431 = !DISubroutineType(types: !9432)
!9432 = !{!911, !9390, !1121}
!9433 = !{!9434, !9435, !9436, !9437}
!9434 = !DILocalVariable(name: "list", arg: 1, scope: !9430, file: !1066, line: 417, type: !9390)
!9435 = !DILocalVariable(name: "node", arg: 2, scope: !9430, file: !1066, line: 417, type: !1121)
!9436 = !DILocalVariable(name: "prev", scope: !9430, file: !1066, line: 417, type: !1121)
!9437 = !DILocalVariable(name: "test", scope: !9430, file: !1066, line: 417, type: !1121)
!9438 = !DILocation(line: 0, scope: !9430)
!9439 = !DILocation(line: 417, column: 1, scope: !9440)
!9440 = distinct !DILexicalBlock(scope: !9430, file: !1066, line: 417, column: 1)
!9441 = !DILocation(line: 417, column: 1, scope: !9442)
!9442 = distinct !DILexicalBlock(scope: !9440, file: !1066, line: 417, column: 1)
!9443 = !DILocation(line: 417, column: 1, scope: !9444)
!9444 = distinct !DILexicalBlock(scope: !9445, file: !1066, line: 417, column: 1)
!9445 = distinct !DILexicalBlock(scope: !9442, file: !1066, line: 417, column: 1)
!9446 = !DILocation(line: 417, column: 1, scope: !9445)
!9447 = distinct !{!9447, !9439, !9439}
!9448 = !DILocation(line: 417, column: 1, scope: !9449)
!9449 = distinct !DILexicalBlock(scope: !9444, file: !1066, line: 417, column: 1)
!9450 = !DILocation(line: 417, column: 1, scope: !9430)
!9451 = distinct !DISubprogram(name: "sys_slist_prepend", scope: !1066, file: !1066, line: 298, type: !9452, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !991, retainedNodes: !9454)
!9452 = !DISubroutineType(types: !9453)
!9453 = !{null, !9390, !1121}
!9454 = !{!9455, !9456}
!9455 = !DILocalVariable(name: "list", arg: 1, scope: !9451, file: !1066, line: 298, type: !9390)
!9456 = !DILocalVariable(name: "node", arg: 2, scope: !9451, file: !1066, line: 298, type: !1121)
!9457 = !DILocation(line: 0, scope: !9451)
!9458 = !DILocation(line: 298, column: 1, scope: !9451)
!9459 = !DILocation(line: 298, column: 1, scope: !9460)
!9460 = distinct !DILexicalBlock(scope: !9451, file: !1066, line: 298, column: 1)
!9461 = !DILocation(line: 298, column: 1, scope: !9462)
!9462 = distinct !DILexicalBlock(scope: !9460, file: !1066, line: 298, column: 1)
!9463 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !1066, file: !1066, line: 231, type: !9464, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !991, retainedNodes: !9466)
!9464 = !DISubroutineType(types: !9465)
!9465 = !{!1121, !9390}
!9466 = !{!9467}
!9467 = !DILocalVariable(name: "list", arg: 1, scope: !9463, file: !1066, line: 231, type: !9390)
!9468 = !DILocation(line: 0, scope: !9463)
!9469 = !DILocation(line: 233, column: 15, scope: !9463)
!9470 = !DILocation(line: 233, column: 2, scope: !9463)
!9471 = distinct !DISubprogram(name: "z_snode_next_set", scope: !1066, file: !1066, line: 209, type: !9472, scopeLine: 210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !991, retainedNodes: !9474)
!9472 = !DISubroutineType(types: !9473)
!9473 = !{null, !1121, !1121}
!9474 = !{!9475, !9476}
!9475 = !DILocalVariable(name: "parent", arg: 1, scope: !9471, file: !1066, line: 209, type: !1121)
!9476 = !DILocalVariable(name: "child", arg: 2, scope: !9471, file: !1066, line: 209, type: !1121)
!9477 = !DILocation(line: 0, scope: !9471)
!9478 = !DILocation(line: 211, column: 10, scope: !9471)
!9479 = !DILocation(line: 211, column: 15, scope: !9471)
!9480 = !DILocation(line: 212, column: 1, scope: !9471)
!9481 = distinct !DISubprogram(name: "z_slist_head_set", scope: !1066, file: !1066, line: 214, type: !9452, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !991, retainedNodes: !9482)
!9482 = !{!9483, !9484}
!9483 = !DILocalVariable(name: "list", arg: 1, scope: !9481, file: !1066, line: 214, type: !9390)
!9484 = !DILocalVariable(name: "node", arg: 2, scope: !9481, file: !1066, line: 214, type: !1121)
!9485 = !DILocation(line: 0, scope: !9481)
!9486 = !DILocation(line: 216, column: 8, scope: !9481)
!9487 = !DILocation(line: 216, column: 13, scope: !9481)
!9488 = !DILocation(line: 217, column: 1, scope: !9481)
!9489 = distinct !DISubprogram(name: "sys_slist_peek_tail", scope: !1066, file: !1066, line: 243, type: !9464, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !991, retainedNodes: !9490)
!9490 = !{!9491}
!9491 = !DILocalVariable(name: "list", arg: 1, scope: !9489, file: !1066, line: 243, type: !9390)
!9492 = !DILocation(line: 0, scope: !9489)
!9493 = !DILocation(line: 245, column: 15, scope: !9489)
!9494 = !DILocation(line: 245, column: 2, scope: !9489)
!9495 = distinct !DISubprogram(name: "z_slist_tail_set", scope: !1066, file: !1066, line: 219, type: !9452, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !991, retainedNodes: !9496)
!9496 = !{!9497, !9498}
!9497 = !DILocalVariable(name: "list", arg: 1, scope: !9495, file: !1066, line: 219, type: !9390)
!9498 = !DILocalVariable(name: "node", arg: 2, scope: !9495, file: !1066, line: 219, type: !1121)
!9499 = !DILocation(line: 0, scope: !9495)
!9500 = !DILocation(line: 221, column: 8, scope: !9495)
!9501 = !DILocation(line: 221, column: 13, scope: !9495)
!9502 = !DILocation(line: 222, column: 1, scope: !9495)
!9503 = distinct !DISubprogram(name: "sys_slist_remove", scope: !1066, file: !1066, line: 401, type: !9504, scopeLine: 401, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !991, retainedNodes: !9506)
!9504 = !DISubroutineType(types: !9505)
!9505 = !{null, !9390, !1121, !1121}
!9506 = !{!9507, !9508, !9509}
!9507 = !DILocalVariable(name: "list", arg: 1, scope: !9503, file: !1066, line: 401, type: !9390)
!9508 = !DILocalVariable(name: "prev_node", arg: 2, scope: !9503, file: !1066, line: 401, type: !1121)
!9509 = !DILocalVariable(name: "node", arg: 3, scope: !9503, file: !1066, line: 401, type: !1121)
!9510 = !DILocation(line: 0, scope: !9503)
!9511 = !DILocation(line: 401, column: 1, scope: !9512)
!9512 = distinct !DILexicalBlock(scope: !9503, file: !1066, line: 401, column: 1)
!9513 = !DILocation(line: 0, scope: !9512)
!9514 = !DILocation(line: 401, column: 1, scope: !9503)
!9515 = !DILocation(line: 401, column: 1, scope: !9516)
!9516 = distinct !DILexicalBlock(scope: !9512, file: !1066, line: 401, column: 1)
!9517 = !DILocation(line: 401, column: 1, scope: !9518)
!9518 = distinct !DILexicalBlock(scope: !9516, file: !1066, line: 401, column: 1)
!9519 = !DILocation(line: 401, column: 1, scope: !9520)
!9520 = distinct !DILexicalBlock(scope: !9518, file: !1066, line: 401, column: 1)
!9521 = !DILocation(line: 401, column: 1, scope: !9522)
!9522 = distinct !DILexicalBlock(scope: !9512, file: !1066, line: 401, column: 1)
!9523 = !DILocation(line: 401, column: 1, scope: !9524)
!9524 = distinct !DILexicalBlock(scope: !9522, file: !1066, line: 401, column: 1)
!9525 = !DILocation(line: 401, column: 1, scope: !9526)
!9526 = distinct !DILexicalBlock(scope: !9524, file: !1066, line: 401, column: 1)
!9527 = distinct !DISubprogram(name: "sys_slist_peek_next", scope: !1066, file: !1066, line: 285, type: !9528, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !991, retainedNodes: !9530)
!9528 = !DISubroutineType(types: !9529)
!9529 = !{!1121, !1121}
!9530 = !{!9531}
!9531 = !DILocalVariable(name: "node", arg: 1, scope: !9527, file: !1066, line: 285, type: !1121)
!9532 = !DILocation(line: 0, scope: !9527)
!9533 = !DILocation(line: 285, column: 1, scope: !9527)
!9534 = distinct !DISubprogram(name: "sys_slist_peek_next_no_check", scope: !1066, file: !1066, line: 274, type: !9528, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !991, retainedNodes: !9535)
!9535 = !{!9536}
!9536 = !DILocalVariable(name: "node", arg: 1, scope: !9534, file: !1066, line: 274, type: !1121)
!9537 = !DILocation(line: 0, scope: !9534)
!9538 = !DILocation(line: 274, column: 1, scope: !9534)
!9539 = distinct !DISubprogram(name: "z_snode_next_peek", scope: !1066, file: !1066, line: 204, type: !9528, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !991, retainedNodes: !9540)
!9540 = !{!9541}
!9541 = !DILocalVariable(name: "node", arg: 1, scope: !9539, file: !1066, line: 204, type: !1121)
!9542 = !DILocation(line: 0, scope: !9539)
!9543 = !DILocation(line: 206, column: 15, scope: !9539)
!9544 = !DILocation(line: 206, column: 2, scope: !9539)
!9545 = distinct !DISubprogram(name: "GPIO_ReadPortInput", scope: !1006, file: !1006, line: 131, type: !9546, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !991, retainedNodes: !9548)
!9546 = !DISubroutineType(types: !9547)
!9547 = !{!113, !1132}
!9548 = !{!9549}
!9549 = !DILocalVariable(name: "base", arg: 1, scope: !9545, file: !1006, line: 131, type: !1132)
!9550 = !DILocation(line: 0, scope: !9545)
!9551 = !DILocation(line: 133, column: 12, scope: !9545)
!9552 = !DILocation(line: 133, column: 5, scope: !9545)
!9553 = distinct !DISubprogram(name: "GPIO_WritePortOutput", scope: !1006, file: !1006, line: 178, type: !9554, scopeLine: 179, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !991, retainedNodes: !9556)
!9554 = !DISubroutineType(types: !9555)
!9555 = !{null, !1132, !113}
!9556 = !{!9557, !9558}
!9557 = !DILocalVariable(name: "base", arg: 1, scope: !9553, file: !1006, line: 178, type: !1132)
!9558 = !DILocalVariable(name: "portVal", arg: 2, scope: !9553, file: !1006, line: 178, type: !113)
!9559 = !DILocation(line: 0, scope: !9553)
!9560 = !DILocation(line: 180, column: 5, scope: !9553)
!9561 = !DILocation(line: 180, column: 23, scope: !9553)
!9562 = !DILocation(line: 181, column: 1, scope: !9553)
!9563 = distinct !DISubprogram(name: "imx_gpio_port_isr", scope: !1095, file: !1095, line: 236, type: !9564, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !991, retainedNodes: !9566)
!9564 = !DISubroutineType(types: !9565)
!9565 = !{null, !1019}
!9566 = !{!9567, !9568, !9569, !9570}
!9567 = !DILocalVariable(name: "port", arg: 1, scope: !9563, file: !1095, line: 236, type: !1019)
!9568 = !DILocalVariable(name: "config", scope: !9563, file: !1095, line: 238, type: !9159)
!9569 = !DILocalVariable(name: "data", scope: !9563, file: !1095, line: 239, type: !9380)
!9570 = !DILocalVariable(name: "int_status", scope: !9563, file: !1095, line: 240, type: !113)
!9571 = !DILocation(line: 0, scope: !9563)
!9572 = !DILocation(line: 238, column: 47, scope: !9563)
!9573 = !DILocation(line: 239, column: 37, scope: !9563)
!9574 = !DILocation(line: 242, column: 23, scope: !9563)
!9575 = !DILocation(line: 242, column: 29, scope: !9563)
!9576 = !DILocation(line: 244, column: 20, scope: !9563)
!9577 = !DILocation(line: 246, column: 29, scope: !9563)
!9578 = !DILocation(line: 246, column: 2, scope: !9563)
!9579 = !DILocation(line: 247, column: 1, scope: !9563)
!9580 = distinct !DISubprogram(name: "gpio_fire_callbacks", scope: !9387, file: !9387, line: 69, type: !9581, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !991, retainedNodes: !9583)
!9581 = !DISubroutineType(types: !9582)
!9582 = !{null, !9390, !1019, !113}
!9583 = !{!9584, !9585, !9586, !9587, !9588}
!9584 = !DILocalVariable(name: "list", arg: 1, scope: !9580, file: !9387, line: 69, type: !9390)
!9585 = !DILocalVariable(name: "port", arg: 2, scope: !9580, file: !9387, line: 70, type: !1019)
!9586 = !DILocalVariable(name: "pins", arg: 3, scope: !9580, file: !9387, line: 71, type: !113)
!9587 = !DILocalVariable(name: "cb", scope: !9580, file: !9387, line: 73, type: !1061)
!9588 = !DILocalVariable(name: "tmp", scope: !9580, file: !9387, line: 73, type: !1061)
!9589 = !DILocation(line: 0, scope: !9580)
!9590 = !DILocation(line: 75, column: 2, scope: !9591)
!9591 = distinct !DILexicalBlock(scope: !9580, file: !9387, line: 75, column: 2)
!9592 = !DILocation(line: 0, scope: !9591)
!9593 = !DILocation(line: 76, column: 11, scope: !9594)
!9594 = distinct !DILexicalBlock(scope: !9595, file: !9387, line: 76, column: 7)
!9595 = distinct !DILexicalBlock(scope: !9596, file: !9387, line: 75, column: 57)
!9596 = distinct !DILexicalBlock(scope: !9591, file: !9387, line: 75, column: 2)
!9597 = !DILocation(line: 76, column: 20, scope: !9594)
!9598 = !DILocation(line: 76, column: 7, scope: !9595)
!9599 = !DILocation(line: 77, column: 4, scope: !9600)
!9600 = distinct !DILexicalBlock(scope: !9601, file: !9387, line: 77, column: 4)
!9601 = distinct !DILexicalBlock(scope: !9602, file: !9387, line: 77, column: 4)
!9602 = distinct !DILexicalBlock(scope: !9594, file: !9387, line: 76, column: 28)
!9603 = !DILocation(line: 77, column: 4, scope: !9601)
!9604 = !DILocation(line: 77, column: 4, scope: !9605)
!9605 = distinct !DILexicalBlock(scope: !9600, file: !9387, line: 77, column: 4)
!9606 = !DILocation(line: 78, column: 4, scope: !9602)
!9607 = !DILocation(line: 79, column: 3, scope: !9602)
!9608 = !DILocation(line: 75, column: 2, scope: !9596)
!9609 = !DILocation(line: 81, column: 1, scope: !9580)
!9610 = !DILocation(line: 0, scope: !1160)
!9611 = !DILocation(line: 318, column: 1, scope: !9612)
!9612 = distinct !DILexicalBlock(scope: !1160, file: !1095, line: 318, column: 1)
!9613 = !DILocation(line: 318, column: 1, scope: !1160)
!9614 = !DILocation(line: 318, column: 1, scope: !9615)
!9615 = distinct !DILexicalBlock(scope: !1160, file: !1095, line: 318, column: 1)
!9616 = distinct !DISubprogram(name: "uart_imx_poll_in", scope: !1382, file: !1382, line: 114, type: !1280, scopeLine: 115, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1185, retainedNodes: !9617)
!9617 = !{!9618, !9619, !9620, !9621}
!9618 = !DILocalVariable(name: "dev", arg: 1, scope: !9616, file: !1382, line: 114, type: !1282)
!9619 = !DILocalVariable(name: "c", arg: 2, scope: !9616, file: !1382, line: 114, type: !919)
!9620 = !DILocalVariable(name: "uart", scope: !9616, file: !1382, line: 116, type: !1353)
!9621 = !DILocalVariable(name: "ret", scope: !9616, file: !1382, line: 117, type: !105)
!9622 = !DILocation(line: 0, scope: !9616)
!9623 = !DILocation(line: 116, column: 20, scope: !9616)
!9624 = !DILocation(line: 119, column: 6, scope: !9625)
!9625 = distinct !DILexicalBlock(scope: !9616, file: !1382, line: 119, column: 6)
!9626 = !DILocation(line: 119, column: 6, scope: !9616)
!9627 = !DILocation(line: 120, column: 8, scope: !9628)
!9628 = distinct !DILexicalBlock(scope: !9625, file: !1382, line: 119, column: 55)
!9629 = !DILocation(line: 120, column: 6, scope: !9628)
!9630 = !DILocation(line: 122, column: 7, scope: !9631)
!9631 = distinct !DILexicalBlock(scope: !9628, file: !1382, line: 122, column: 7)
!9632 = !DILocation(line: 122, column: 7, scope: !9628)
!9633 = !DILocation(line: 123, column: 4, scope: !9634)
!9634 = distinct !DILexicalBlock(scope: !9631, file: !1382, line: 122, column: 54)
!9635 = !DILocation(line: 124, column: 3, scope: !9634)
!9636 = !DILocation(line: 128, column: 2, scope: !9616)
!9637 = distinct !DISubprogram(name: "uart_imx_poll_out", scope: !1382, file: !1382, line: 105, type: !1299, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1185, retainedNodes: !9638)
!9638 = !{!9639, !9640, !9641}
!9639 = !DILocalVariable(name: "dev", arg: 1, scope: !9637, file: !1382, line: 105, type: !1282)
!9640 = !DILocalVariable(name: "c", arg: 2, scope: !9637, file: !1382, line: 105, type: !170)
!9641 = !DILocalVariable(name: "uart", scope: !9637, file: !1382, line: 107, type: !1353)
!9642 = !DILocation(line: 0, scope: !9637)
!9643 = !DILocation(line: 107, column: 20, scope: !9637)
!9644 = !DILocation(line: 109, column: 2, scope: !9637)
!9645 = !DILocation(line: 109, column: 10, scope: !9637)
!9646 = distinct !{!9646, !9644, !9647}
!9647 = !DILocation(line: 110, column: 2, scope: !9637)
!9648 = !DILocation(line: 111, column: 2, scope: !9637)
!9649 = !DILocation(line: 112, column: 1, scope: !9637)
!9650 = distinct !DISubprogram(name: "uart_imx_fifo_fill", scope: !1382, file: !1382, line: 133, type: !1325, scopeLine: 136, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1185, retainedNodes: !9651)
!9651 = !{!9652, !9653, !9654, !9655, !9656}
!9652 = !DILocalVariable(name: "dev", arg: 1, scope: !9650, file: !1382, line: 133, type: !1282)
!9653 = !DILocalVariable(name: "tx_data", arg: 2, scope: !9650, file: !1382, line: 134, type: !950)
!9654 = !DILocalVariable(name: "size", arg: 3, scope: !9650, file: !1382, line: 135, type: !105)
!9655 = !DILocalVariable(name: "uart", scope: !9650, file: !1382, line: 137, type: !1353)
!9656 = !DILocalVariable(name: "num_tx", scope: !9650, file: !1382, line: 138, type: !32)
!9657 = !DILocation(line: 0, scope: !9650)
!9658 = !DILocation(line: 137, column: 20, scope: !9650)
!9659 = !DILocation(line: 140, column: 26, scope: !9650)
!9660 = !DILocation(line: 140, column: 31, scope: !9650)
!9661 = !DILocation(line: 141, column: 6, scope: !9650)
!9662 = !DILocation(line: 140, column: 2, scope: !9650)
!9663 = !DILocation(line: 143, column: 22, scope: !9664)
!9664 = distinct !DILexicalBlock(scope: !9650, file: !1382, line: 141, column: 51)
!9665 = !DILocation(line: 143, column: 3, scope: !9664)
!9666 = !DILocation(line: 144, column: 9, scope: !9664)
!9667 = distinct !{!9667, !9662, !9668}
!9668 = !DILocation(line: 145, column: 2, scope: !9650)
!9669 = !DILocation(line: 147, column: 2, scope: !9650)
!9670 = distinct !DISubprogram(name: "uart_imx_fifo_read", scope: !1382, file: !1382, line: 150, type: !1329, scopeLine: 152, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1185, retainedNodes: !9671)
!9671 = !{!9672, !9673, !9674, !9675, !9676}
!9672 = !DILocalVariable(name: "dev", arg: 1, scope: !9670, file: !1382, line: 150, type: !1282)
!9673 = !DILocalVariable(name: "rx_data", arg: 2, scope: !9670, file: !1382, line: 150, type: !426)
!9674 = !DILocalVariable(name: "size", arg: 3, scope: !9670, file: !1382, line: 151, type: !956)
!9675 = !DILocalVariable(name: "uart", scope: !9670, file: !1382, line: 153, type: !1353)
!9676 = !DILocalVariable(name: "num_rx", scope: !9670, file: !1382, line: 154, type: !32)
!9677 = !DILocation(line: 0, scope: !9670)
!9678 = !DILocation(line: 153, column: 20, scope: !9670)
!9679 = !DILocation(line: 156, column: 26, scope: !9670)
!9680 = !DILocation(line: 156, column: 31, scope: !9670)
!9681 = !DILocation(line: 157, column: 6, scope: !9670)
!9682 = !DILocation(line: 156, column: 2, scope: !9670)
!9683 = !DILocation(line: 159, column: 23, scope: !9684)
!9684 = distinct !DILexicalBlock(scope: !9670, file: !1382, line: 157, column: 51)
!9685 = !DILocation(line: 159, column: 17, scope: !9684)
!9686 = !DILocation(line: 159, column: 3, scope: !9684)
!9687 = !DILocation(line: 159, column: 21, scope: !9684)
!9688 = distinct !{!9688, !9682, !9689}
!9689 = !DILocation(line: 160, column: 2, scope: !9670)
!9690 = !DILocation(line: 162, column: 6, scope: !9691)
!9691 = distinct !DILexicalBlock(scope: !9670, file: !1382, line: 162, column: 6)
!9692 = !DILocation(line: 162, column: 6, scope: !9670)
!9693 = !DILocation(line: 163, column: 3, scope: !9694)
!9694 = distinct !DILexicalBlock(scope: !9691, file: !1382, line: 162, column: 53)
!9695 = !DILocation(line: 164, column: 2, scope: !9694)
!9696 = !DILocation(line: 166, column: 2, scope: !9670)
!9697 = distinct !DISubprogram(name: "uart_imx_irq_tx_enable", scope: !1382, file: !1382, line: 169, type: !1333, scopeLine: 170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1185, retainedNodes: !9698)
!9698 = !{!9699, !9700}
!9699 = !DILocalVariable(name: "dev", arg: 1, scope: !9697, file: !1382, line: 169, type: !1282)
!9700 = !DILocalVariable(name: "uart", scope: !9697, file: !1382, line: 171, type: !1353)
!9701 = !DILocation(line: 0, scope: !9697)
!9702 = !DILocation(line: 171, column: 20, scope: !9697)
!9703 = !DILocation(line: 173, column: 2, scope: !9697)
!9704 = !DILocation(line: 174, column: 1, scope: !9697)
!9705 = distinct !DISubprogram(name: "uart_imx_irq_tx_disable", scope: !1382, file: !1382, line: 176, type: !1333, scopeLine: 177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1185, retainedNodes: !9706)
!9706 = !{!9707, !9708}
!9707 = !DILocalVariable(name: "dev", arg: 1, scope: !9705, file: !1382, line: 176, type: !1282)
!9708 = !DILocalVariable(name: "uart", scope: !9705, file: !1382, line: 178, type: !1353)
!9709 = !DILocation(line: 0, scope: !9705)
!9710 = !DILocation(line: 178, column: 20, scope: !9705)
!9711 = !DILocation(line: 180, column: 2, scope: !9705)
!9712 = !DILocation(line: 181, column: 1, scope: !9705)
!9713 = distinct !DISubprogram(name: "uart_imx_irq_tx_ready", scope: !1382, file: !1382, line: 183, type: !1303, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1185, retainedNodes: !9714)
!9714 = !{!9715, !9716}
!9715 = !DILocalVariable(name: "dev", arg: 1, scope: !9713, file: !1382, line: 183, type: !1282)
!9716 = !DILocalVariable(name: "uart", scope: !9713, file: !1382, line: 185, type: !1353)
!9717 = !DILocation(line: 0, scope: !9713)
!9718 = !DILocation(line: 185, column: 20, scope: !9713)
!9719 = !DILocation(line: 187, column: 9, scope: !9713)
!9720 = !DILocation(line: 187, column: 2, scope: !9713)
!9721 = distinct !DISubprogram(name: "uart_imx_irq_rx_enable", scope: !1382, file: !1382, line: 190, type: !1333, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1185, retainedNodes: !9722)
!9722 = !{!9723, !9724}
!9723 = !DILocalVariable(name: "dev", arg: 1, scope: !9721, file: !1382, line: 190, type: !1282)
!9724 = !DILocalVariable(name: "uart", scope: !9721, file: !1382, line: 192, type: !1353)
!9725 = !DILocation(line: 0, scope: !9721)
!9726 = !DILocation(line: 192, column: 20, scope: !9721)
!9727 = !DILocation(line: 194, column: 2, scope: !9721)
!9728 = !DILocation(line: 195, column: 1, scope: !9721)
!9729 = distinct !DISubprogram(name: "uart_imx_irq_rx_disable", scope: !1382, file: !1382, line: 197, type: !1333, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1185, retainedNodes: !9730)
!9730 = !{!9731, !9732}
!9731 = !DILocalVariable(name: "dev", arg: 1, scope: !9729, file: !1382, line: 197, type: !1282)
!9732 = !DILocalVariable(name: "uart", scope: !9729, file: !1382, line: 199, type: !1353)
!9733 = !DILocation(line: 0, scope: !9729)
!9734 = !DILocation(line: 199, column: 20, scope: !9729)
!9735 = !DILocation(line: 201, column: 2, scope: !9729)
!9736 = !DILocation(line: 202, column: 1, scope: !9729)
!9737 = distinct !DISubprogram(name: "uart_imx_irq_rx_ready", scope: !1382, file: !1382, line: 204, type: !1303, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1185, retainedNodes: !9738)
!9738 = !{!9739, !9740}
!9739 = !DILocalVariable(name: "dev", arg: 1, scope: !9737, file: !1382, line: 204, type: !1282)
!9740 = !DILocalVariable(name: "uart", scope: !9737, file: !1382, line: 206, type: !1353)
!9741 = !DILocation(line: 0, scope: !9737)
!9742 = !DILocation(line: 206, column: 20, scope: !9737)
!9743 = !DILocation(line: 208, column: 9, scope: !9737)
!9744 = !DILocation(line: 208, column: 2, scope: !9737)
!9745 = distinct !DISubprogram(name: "uart_imx_irq_err_enable", scope: !1382, file: !1382, line: 211, type: !1333, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1185, retainedNodes: !9746)
!9746 = !{!9747, !9748}
!9747 = !DILocalVariable(name: "dev", arg: 1, scope: !9745, file: !1382, line: 211, type: !1282)
!9748 = !DILocalVariable(name: "uart", scope: !9745, file: !1382, line: 213, type: !1353)
!9749 = !DILocation(line: 0, scope: !9745)
!9750 = !DILocation(line: 213, column: 20, scope: !9745)
!9751 = !DILocation(line: 215, column: 2, scope: !9745)
!9752 = !DILocation(line: 216, column: 2, scope: !9745)
!9753 = !DILocation(line: 217, column: 1, scope: !9745)
!9754 = distinct !DISubprogram(name: "uart_imx_irq_err_disable", scope: !1382, file: !1382, line: 219, type: !1333, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1185, retainedNodes: !9755)
!9755 = !{!9756, !9757}
!9756 = !DILocalVariable(name: "dev", arg: 1, scope: !9754, file: !1382, line: 219, type: !1282)
!9757 = !DILocalVariable(name: "uart", scope: !9754, file: !1382, line: 221, type: !1353)
!9758 = !DILocation(line: 0, scope: !9754)
!9759 = !DILocation(line: 221, column: 20, scope: !9754)
!9760 = !DILocation(line: 223, column: 2, scope: !9754)
!9761 = !DILocation(line: 224, column: 2, scope: !9754)
!9762 = !DILocation(line: 225, column: 1, scope: !9754)
!9763 = distinct !DISubprogram(name: "uart_imx_irq_is_pending", scope: !1382, file: !1382, line: 227, type: !1303, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1185, retainedNodes: !9764)
!9764 = !{!9765, !9766}
!9765 = !DILocalVariable(name: "dev", arg: 1, scope: !9763, file: !1382, line: 227, type: !1282)
!9766 = !DILocalVariable(name: "uart", scope: !9763, file: !1382, line: 229, type: !1353)
!9767 = !DILocation(line: 0, scope: !9763)
!9768 = !DILocation(line: 229, column: 20, scope: !9763)
!9769 = !DILocation(line: 231, column: 9, scope: !9763)
!9770 = !DILocation(line: 231, column: 53, scope: !9763)
!9771 = !DILocation(line: 232, column: 3, scope: !9763)
!9772 = !DILocation(line: 231, column: 2, scope: !9763)
!9773 = distinct !DISubprogram(name: "uart_imx_irq_update", scope: !1382, file: !1382, line: 235, type: !1303, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1185, retainedNodes: !9774)
!9774 = !{!9775}
!9775 = !DILocalVariable(name: "dev", arg: 1, scope: !9773, file: !1382, line: 235, type: !1282)
!9776 = !DILocation(line: 0, scope: !9773)
!9777 = !DILocation(line: 237, column: 2, scope: !9773)
!9778 = distinct !DISubprogram(name: "uart_imx_irq_callback_set", scope: !1382, file: !1382, line: 240, type: !1347, scopeLine: 243, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1185, retainedNodes: !9779)
!9779 = !{!9780, !9781, !9782, !9783}
!9780 = !DILocalVariable(name: "dev", arg: 1, scope: !9778, file: !1382, line: 240, type: !1282)
!9781 = !DILocalVariable(name: "cb", arg: 2, scope: !9778, file: !1382, line: 241, type: !1349)
!9782 = !DILocalVariable(name: "cb_data", arg: 3, scope: !9778, file: !1382, line: 242, type: !104)
!9783 = !DILocalVariable(name: "data", scope: !9778, file: !1382, line: 244, type: !9784)
!9784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1435, size: 32)
!9785 = !DILocation(line: 0, scope: !9778)
!9786 = !DILocation(line: 244, column: 36, scope: !9778)
!9787 = !DILocation(line: 246, column: 8, scope: !9778)
!9788 = !DILocation(line: 246, column: 17, scope: !9778)
!9789 = !DILocation(line: 247, column: 8, scope: !9778)
!9790 = !DILocation(line: 247, column: 16, scope: !9778)
!9791 = !DILocation(line: 248, column: 1, scope: !9778)
!9792 = distinct !DISubprogram(name: "UART_GetStatusFlag", scope: !1189, file: !1189, line: 392, type: !9793, scopeLine: 392, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1185, retainedNodes: !9795)
!9793 = !DISubroutineType(types: !9794)
!9794 = !{!911, !1353, !113}
!9795 = !{!9796, !9797, !9798}
!9796 = !DILocalVariable(name: "base", arg: 1, scope: !9792, file: !1189, line: 392, type: !1353)
!9797 = !DILocalVariable(name: "flag", arg: 2, scope: !9792, file: !1189, line: 392, type: !113)
!9798 = !DILocalVariable(name: "uart_reg", scope: !9792, file: !1189, line: 393, type: !858)
!9799 = !DILocation(line: 0, scope: !9792)
!9800 = !DILocation(line: 395, column: 29, scope: !9792)
!9801 = !DILocation(line: 395, column: 52, scope: !9792)
!9802 = !DILocation(line: 395, column: 44, scope: !9792)
!9803 = !DILocation(line: 395, column: 16, scope: !9792)
!9804 = !DILocation(line: 396, column: 20, scope: !9792)
!9805 = !DILocation(line: 396, column: 39, scope: !9792)
!9806 = !DILocation(line: 396, column: 12, scope: !9792)
!9807 = !DILocation(line: 396, column: 5, scope: !9792)
!9808 = distinct !DISubprogram(name: "UART_Getchar", scope: !1189, file: !1189, line: 358, type: !9809, scopeLine: 359, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1185, retainedNodes: !9811)
!9809 = !DISubroutineType(types: !9810)
!9810 = !{!169, !1353}
!9811 = !{!9812}
!9812 = !DILocalVariable(name: "base", arg: 1, scope: !9808, file: !1189, line: 358, type: !1353)
!9813 = !DILocation(line: 0, scope: !9808)
!9814 = !DILocation(line: 360, column: 22, scope: !9808)
!9815 = !DILocation(line: 360, column: 12, scope: !9808)
!9816 = !DILocation(line: 360, column: 5, scope: !9808)
!9817 = distinct !DISubprogram(name: "UART_Putchar", scope: !1189, file: !1189, line: 346, type: !9818, scopeLine: 347, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1185, retainedNodes: !9820)
!9818 = !DISubroutineType(types: !9819)
!9819 = !{null, !1353, !169}
!9820 = !{!9821, !9822}
!9821 = !DILocalVariable(name: "base", arg: 1, scope: !9817, file: !1189, line: 346, type: !1353)
!9822 = !DILocalVariable(name: "data", arg: 2, scope: !9817, file: !1189, line: 346, type: !169)
!9823 = !DILocation(line: 0, scope: !9817)
!9824 = !DILocation(line: 348, column: 28, scope: !9817)
!9825 = !DILocation(line: 348, column: 5, scope: !9817)
!9826 = !DILocation(line: 348, column: 25, scope: !9817)
!9827 = !DILocation(line: 349, column: 1, scope: !9817)
!9828 = !DILocation(line: 0, scope: !1455)
!9829 = !DILocation(line: 339, column: 1, scope: !9830)
!9830 = distinct !DILexicalBlock(scope: !1455, file: !1382, line: 339, column: 1)
!9831 = !DILocation(line: 339, column: 1, scope: !1455)
!9832 = distinct !DISubprogram(name: "uart_imx_isr", scope: !1382, file: !1382, line: 260, type: !1333, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1185, retainedNodes: !9833)
!9833 = !{!9834, !9835}
!9834 = !DILocalVariable(name: "dev", arg: 1, scope: !9832, file: !1382, line: 260, type: !1282)
!9835 = !DILocalVariable(name: "data", scope: !9832, file: !1382, line: 262, type: !9784)
!9836 = !DILocation(line: 0, scope: !9832)
!9837 = !DILocation(line: 262, column: 36, scope: !9832)
!9838 = !DILocation(line: 264, column: 12, scope: !9839)
!9839 = distinct !DILexicalBlock(scope: !9832, file: !1382, line: 264, column: 6)
!9840 = !DILocation(line: 264, column: 6, scope: !9839)
!9841 = !DILocation(line: 264, column: 6, scope: !9832)
!9842 = !DILocation(line: 265, column: 29, scope: !9843)
!9843 = distinct !DILexicalBlock(scope: !9839, file: !1382, line: 264, column: 22)
!9844 = !DILocation(line: 265, column: 3, scope: !9843)
!9845 = !DILocation(line: 266, column: 2, scope: !9843)
!9846 = !DILocation(line: 267, column: 1, scope: !9832)
!9847 = distinct !DISubprogram(name: "uart_imx_init", scope: !1382, file: !1382, line: 56, type: !1303, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1185, retainedNodes: !9848)
!9848 = !{!9849, !9850, !9851, !9852, !9853, !9854}
!9849 = !DILocalVariable(name: "dev", arg: 1, scope: !9847, file: !1382, line: 56, type: !1282)
!9850 = !DILocalVariable(name: "uart", scope: !9847, file: !1382, line: 58, type: !1353)
!9851 = !DILocalVariable(name: "config", scope: !9847, file: !1382, line: 59, type: !1379)
!9852 = !DILocalVariable(name: "old_level", scope: !9847, file: !1382, line: 60, type: !32)
!9853 = !DILocalVariable(name: "err", scope: !9847, file: !1382, line: 61, type: !105)
!9854 = !DILocalVariable(name: "initConfig", scope: !9847, file: !1382, line: 67, type: !9855)
!9855 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_init_config_t", file: !1189, line: 57, baseType: !9856)
!9856 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_uart_init_config", file: !1189, line: 49, size: 192, elements: !9857)
!9857 = !{!9858, !9859, !9860, !9861, !9862, !9863}
!9858 = !DIDerivedType(tag: DW_TAG_member, name: "clockRate", scope: !9856, file: !1189, line: 51, baseType: !113, size: 32)
!9859 = !DIDerivedType(tag: DW_TAG_member, name: "baudRate", scope: !9856, file: !1189, line: 52, baseType: !113, size: 32, offset: 32)
!9860 = !DIDerivedType(tag: DW_TAG_member, name: "wordLength", scope: !9856, file: !1189, line: 53, baseType: !113, size: 32, offset: 64)
!9861 = !DIDerivedType(tag: DW_TAG_member, name: "stopBitNum", scope: !9856, file: !1189, line: 54, baseType: !113, size: 32, offset: 96)
!9862 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !9856, file: !1189, line: 55, baseType: !113, size: 32, offset: 128)
!9863 = !DIDerivedType(tag: DW_TAG_member, name: "direction", scope: !9856, file: !1189, line: 56, baseType: !113, size: 32, offset: 160)
!9864 = !DILocation(line: 0, scope: !9847)
!9865 = !DILocation(line: 58, column: 20, scope: !9847)
!9866 = !DILocation(line: 55, column: 2, scope: !9867, inlinedAt: !9871)
!9867 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7644, file: !7644, line: 42, type: !9346, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1185, retainedNodes: !9868)
!9868 = !{!9869, !9870}
!9869 = !DILocalVariable(name: "key", scope: !9867, file: !7644, line: 44, type: !32)
!9870 = !DILocalVariable(name: "tmp", scope: !9867, file: !7644, line: 53, type: !32)
!9871 = distinct !DILocation(line: 64, column: 14, scope: !9847)
!9872 = !{i64 2849762}
!9873 = !DILocation(line: 0, scope: !9867, inlinedAt: !9871)
!9874 = !DILocation(line: 67, column: 2, scope: !9847)
!9875 = !DILocation(line: 67, column: 21, scope: !9847)
!9876 = !DILocation(line: 67, column: 34, scope: !9847)
!9877 = !DILocation(line: 68, column: 23, scope: !9847)
!9878 = !DILocation(line: 75, column: 36, scope: !9847)
!9879 = !DILocation(line: 75, column: 8, scope: !9847)
!9880 = !DILocation(line: 76, column: 6, scope: !9881)
!9881 = distinct !DILexicalBlock(scope: !9847, file: !1382, line: 76, column: 6)
!9882 = !DILocation(line: 76, column: 6, scope: !9847)
!9883 = !DILocation(line: 81, column: 26, scope: !9847)
!9884 = !DILocation(line: 81, column: 24, scope: !9847)
!9885 = !DILocation(line: 83, column: 2, scope: !9847)
!9886 = !DILocation(line: 86, column: 2, scope: !9847)
!9887 = !DILocation(line: 87, column: 2, scope: !9847)
!9888 = !DILocalVariable(name: "key", arg: 1, scope: !9889, file: !7644, line: 84, type: !32)
!9889 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7644, file: !7644, line: 84, type: !7476, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1185, retainedNodes: !9890)
!9890 = !{!9888}
!9891 = !DILocation(line: 0, scope: !9889, inlinedAt: !9892)
!9892 = distinct !DILocation(line: 90, column: 2, scope: !9847)
!9893 = !DILocation(line: 95, column: 2, scope: !9889, inlinedAt: !9892)
!9894 = !{i64 2850579}
!9895 = !DILocation(line: 93, column: 10, scope: !9847)
!9896 = !DILocation(line: 93, column: 2, scope: !9847)
!9897 = !DILocation(line: 97, column: 34, scope: !9847)
!9898 = !DILocation(line: 97, column: 26, scope: !9847)
!9899 = !DILocation(line: 97, column: 2, scope: !9847)
!9900 = !DILocation(line: 100, column: 2, scope: !9847)
!9901 = !DILocation(line: 102, column: 2, scope: !9847)
!9902 = !DILocation(line: 103, column: 1, scope: !9847)
!9903 = distinct !DISubprogram(name: "pinctrl_apply_state", scope: !1391, file: !1391, line: 342, type: !9904, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1185, retainedNodes: !9906)
!9904 = !DISubroutineType(types: !9905)
!9905 = !{!105, !1388, !169}
!9906 = !{!9907, !9908, !9909, !9910}
!9907 = !DILocalVariable(name: "config", arg: 1, scope: !9903, file: !1391, line: 342, type: !1388)
!9908 = !DILocalVariable(name: "id", arg: 2, scope: !9903, file: !1391, line: 343, type: !169)
!9909 = !DILocalVariable(name: "ret", scope: !9903, file: !1391, line: 345, type: !105)
!9910 = !DILocalVariable(name: "state", scope: !9903, file: !1391, line: 346, type: !1394)
!9911 = !DILocation(line: 0, scope: !9903)
!9912 = !DILocation(line: 346, column: 2, scope: !9903)
!9913 = !DILocation(line: 348, column: 8, scope: !9903)
!9914 = !DILocation(line: 349, column: 10, scope: !9915)
!9915 = distinct !DILexicalBlock(scope: !9903, file: !1391, line: 349, column: 6)
!9916 = !DILocation(line: 349, column: 6, scope: !9903)
!9917 = !DILocation(line: 353, column: 44, scope: !9903)
!9918 = !DILocation(line: 353, column: 9, scope: !9903)
!9919 = !DILocation(line: 353, column: 2, scope: !9903)
!9920 = !DILocation(line: 354, column: 1, scope: !9903)
!9921 = distinct !DISubprogram(name: "UART_SetTxFifoWatermark", scope: !1189, file: !1189, line: 444, type: !9818, scopeLine: 445, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1185, retainedNodes: !9922)
!9922 = !{!9923, !9924}
!9923 = !DILocalVariable(name: "base", arg: 1, scope: !9921, file: !1189, line: 444, type: !1353)
!9924 = !DILocalVariable(name: "watermark", arg: 2, scope: !9921, file: !1189, line: 444, type: !169)
!9925 = !DILocation(line: 0, scope: !9921)
!9926 = !DILocation(line: 447, column: 28, scope: !9921)
!9927 = !DILocation(line: 447, column: 48, scope: !9921)
!9928 = !DILocation(line: 447, column: 72, scope: !9921)
!9929 = !DILocation(line: 447, column: 25, scope: !9921)
!9930 = !DILocation(line: 448, column: 1, scope: !9921)
!9931 = distinct !DISubprogram(name: "UART_SetRxFifoWatermark", scope: !1189, file: !1189, line: 458, type: !9818, scopeLine: 459, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1185, retainedNodes: !9932)
!9932 = !{!9933, !9934}
!9933 = !DILocalVariable(name: "base", arg: 1, scope: !9931, file: !1189, line: 458, type: !1353)
!9934 = !DILocalVariable(name: "watermark", arg: 2, scope: !9931, file: !1189, line: 458, type: !169)
!9935 = !DILocation(line: 0, scope: !9931)
!9936 = !DILocation(line: 461, column: 28, scope: !9931)
!9937 = !DILocation(line: 461, column: 48, scope: !9931)
!9938 = !DILocation(line: 461, column: 72, scope: !9931)
!9939 = !DILocation(line: 461, column: 25, scope: !9931)
!9940 = !DILocation(line: 462, column: 1, scope: !9931)
!9941 = distinct !DISubprogram(name: "UART_Enable", scope: !1189, file: !1189, line: 242, type: !9942, scopeLine: 243, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1185, retainedNodes: !9944)
!9942 = !DISubroutineType(types: !9943)
!9943 = !{null, !1353}
!9944 = !{!9945}
!9945 = !DILocalVariable(name: "base", arg: 1, scope: !9941, file: !1189, line: 242, type: !1353)
!9946 = !DILocation(line: 0, scope: !9941)
!9947 = !DILocation(line: 244, column: 5, scope: !9941)
!9948 = !DILocation(line: 244, column: 25, scope: !9941)
!9949 = !DILocation(line: 245, column: 1, scope: !9941)
!9950 = distinct !DISubprogram(name: "pinctrl_apply_state_direct", scope: !1391, file: !1391, line: 316, type: !9951, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1185, retainedNodes: !9953)
!9951 = !DISubroutineType(types: !9952)
!9952 = !{!105, !1388, !1394}
!9953 = !{!9954, !9955, !9956}
!9954 = !DILocalVariable(name: "config", arg: 1, scope: !9950, file: !1391, line: 317, type: !1388)
!9955 = !DILocalVariable(name: "state", arg: 2, scope: !9950, file: !1391, line: 318, type: !1394)
!9956 = !DILocalVariable(name: "reg", scope: !9950, file: !1391, line: 320, type: !22)
!9957 = !DILocation(line: 0, scope: !9950)
!9958 = !DILocation(line: 329, column: 39, scope: !9950)
!9959 = !DILocation(line: 329, column: 52, scope: !9950)
!9960 = !DILocation(line: 329, column: 9, scope: !9950)
!9961 = !DILocation(line: 329, column: 2, scope: !9950)
!9962 = distinct !DISubprogram(name: "sys_clock_driver_init", scope: !1689, file: !1689, line: 270, type: !1695, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1466, retainedNodes: !9963)
!9963 = !{!9964}
!9964 = !DILocalVariable(name: "dev", arg: 1, scope: !9962, file: !1689, line: 270, type: !1697)
!9965 = !DILocation(line: 0, scope: !9962)
!9966 = !DILocation(line: 274, column: 2, scope: !9962)
!9967 = !DILocation(line: 275, column: 12, scope: !9962)
!9968 = !DILocation(line: 276, column: 15, scope: !9962)
!9969 = !DILocation(line: 277, column: 16, scope: !9962)
!9970 = !DILocation(line: 278, column: 15, scope: !9962)
!9971 = !DILocation(line: 279, column: 16, scope: !9962)
!9972 = !DILocation(line: 282, column: 2, scope: !9962)
!9973 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !1612, file: !1612, line: 1814, type: !7565, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1466, retainedNodes: !9974)
!9974 = !{!9975, !9976}
!9975 = !DILocalVariable(name: "IRQn", arg: 1, scope: !9973, file: !1612, line: 1814, type: !2437)
!9976 = !DILocalVariable(name: "priority", arg: 2, scope: !9973, file: !1612, line: 1814, type: !113)
!9977 = !DILocation(line: 0, scope: !9973)
!9978 = !DILocation(line: 1822, column: 46, scope: !9979)
!9979 = distinct !DILexicalBlock(scope: !9980, file: !1612, line: 1821, column: 3)
!9980 = distinct !DILexicalBlock(scope: !9973, file: !1612, line: 1816, column: 7)
!9981 = !DILocation(line: 1824, column: 1, scope: !9973)
!9982 = distinct !DISubprogram(name: "sys_clock_isr", scope: !1689, file: !1689, line: 118, type: !7460, scopeLine: 119, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1466, retainedNodes: !9983)
!9983 = !{!9984, !9985}
!9984 = !DILocalVariable(name: "arg", arg: 1, scope: !9982, file: !1689, line: 118, type: !104)
!9985 = !DILocalVariable(name: "dticks", scope: !9982, file: !1689, line: 121, type: !113)
!9986 = !DILocation(line: 0, scope: !9982)
!9987 = !DILocation(line: 124, column: 2, scope: !9982)
!9988 = !DILocation(line: 129, column: 17, scope: !9982)
!9989 = !DILocation(line: 129, column: 14, scope: !9982)
!9990 = !DILocation(line: 130, column: 15, scope: !9982)
!9991 = !DILocation(line: 145, column: 27, scope: !9992)
!9992 = distinct !DILexicalBlock(scope: !9993, file: !1689, line: 132, column: 16)
!9993 = distinct !DILexicalBlock(scope: !9982, file: !1689, line: 132, column: 6)
!9994 = !DILocation(line: 145, column: 25, scope: !9992)
!9995 = !DILocation(line: 145, column: 45, scope: !9992)
!9996 = !DILocation(line: 146, column: 30, scope: !9992)
!9997 = !DILocation(line: 146, column: 20, scope: !9992)
!9998 = !DILocation(line: 147, column: 3, scope: !9992)
!9999 = !DILocation(line: 151, column: 2, scope: !9982)
!10000 = !DILocation(line: 152, column: 1, scope: !9982)
!10001 = distinct !DISubprogram(name: "elapsed", scope: !1689, file: !1689, line: 85, type: !389, scopeLine: 86, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1466, retainedNodes: !10002)
!10002 = !{!10003, !10004, !10005}
!10003 = !DILocalVariable(name: "val1", scope: !10001, file: !1689, line: 87, type: !113)
!10004 = !DILocalVariable(name: "ctrl", scope: !10001, file: !1689, line: 88, type: !113)
!10005 = !DILocalVariable(name: "val2", scope: !10001, file: !1689, line: 89, type: !113)
!10006 = !DILocation(line: 87, column: 27, scope: !10001)
!10007 = !DILocation(line: 0, scope: !10001)
!10008 = !DILocation(line: 88, column: 27, scope: !10001)
!10009 = !DILocation(line: 89, column: 27, scope: !10001)
!10010 = !DILocation(line: 105, column: 12, scope: !10011)
!10011 = distinct !DILexicalBlock(scope: !10001, file: !1689, line: 105, column: 6)
!10012 = !DILocation(line: 106, column: 6, scope: !10011)
!10013 = !DILocation(line: 107, column: 16, scope: !10014)
!10014 = distinct !DILexicalBlock(scope: !10011, file: !1689, line: 106, column: 24)
!10015 = !DILocation(line: 111, column: 18, scope: !10014)
!10016 = !DILocation(line: 112, column: 2, scope: !10014)
!10017 = !DILocation(line: 114, column: 20, scope: !10001)
!10018 = !DILocation(line: 114, column: 30, scope: !10001)
!10019 = !DILocation(line: 114, column: 28, scope: !10001)
!10020 = !DILocation(line: 114, column: 2, scope: !10001)
!10021 = distinct !DISubprogram(name: "sys_clock_set_timeout", scope: !1689, file: !1689, line: 154, type: !10022, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1466, retainedNodes: !10024)
!10022 = !DISubroutineType(types: !10023)
!10023 = !{null, !116, !911}
!10024 = !{!10025, !10026, !10027, !10028, !10029, !10030, !10031, !10036, !10037}
!10025 = !DILocalVariable(name: "ticks", arg: 1, scope: !10021, file: !1689, line: 154, type: !116)
!10026 = !DILocalVariable(name: "idle", arg: 2, scope: !10021, file: !1689, line: 154, type: !911)
!10027 = !DILocalVariable(name: "delay", scope: !10021, file: !1689, line: 169, type: !113)
!10028 = !DILocalVariable(name: "val1", scope: !10021, file: !1689, line: 170, type: !113)
!10029 = !DILocalVariable(name: "val2", scope: !10021, file: !1689, line: 170, type: !113)
!10030 = !DILocalVariable(name: "last_load_", scope: !10021, file: !1689, line: 171, type: !113)
!10031 = !DILocalVariable(name: "key", scope: !10021, file: !1689, line: 176, type: !10032)
!10032 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !230, line: 106, baseType: !10033)
!10033 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !230, line: 32, size: 32, elements: !10034)
!10034 = !{!10035}
!10035 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !10033, file: !230, line: 33, baseType: !105, size: 32)
!10036 = !DILocalVariable(name: "pending", scope: !10021, file: !1689, line: 178, type: !113)
!10037 = !DILocalVariable(name: "unannounced", scope: !10021, file: !1689, line: 185, type: !113)
!10038 = !DILocation(line: 0, scope: !10021)
!10039 = !DILocation(line: 162, column: 49, scope: !10040)
!10040 = distinct !DILexicalBlock(scope: !10021, file: !1689, line: 162, column: 6)
!10041 = !DILocation(line: 163, column: 17, scope: !10042)
!10042 = distinct !DILexicalBlock(scope: !10040, file: !1689, line: 162, column: 78)
!10043 = !DILocation(line: 164, column: 13, scope: !10042)
!10044 = !DILocation(line: 165, column: 3, scope: !10042)
!10045 = !DILocation(line: 171, column: 24, scope: !10021)
!10046 = !DILocation(line: 173, column: 10, scope: !10021)
!10047 = !DILocation(line: 174, column: 10, scope: !10021)
!10048 = !DILocalVariable(name: "l", arg: 1, scope: !10049, file: !230, line: 136, type: !10052)
!10049 = distinct !DISubprogram(name: "k_spin_lock", scope: !230, file: !230, line: 136, type: !10050, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1466, retainedNodes: !10053)
!10050 = !DISubroutineType(types: !10051)
!10051 = !{!10032, !10052}
!10052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1715, size: 32)
!10053 = !{!10048, !10054}
!10054 = !DILocalVariable(name: "k", scope: !10049, file: !230, line: 139, type: !10032)
!10055 = !DILocation(line: 0, scope: !10049, inlinedAt: !10056)
!10056 = distinct !DILocation(line: 176, column: 25, scope: !10021)
!10057 = !DILocation(line: 55, column: 2, scope: !10058, inlinedAt: !10062)
!10058 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7644, file: !7644, line: 42, type: !9346, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1466, retainedNodes: !10059)
!10059 = !{!10060, !10061}
!10060 = !DILocalVariable(name: "key", scope: !10058, file: !7644, line: 44, type: !32)
!10061 = !DILocalVariable(name: "tmp", scope: !10058, file: !7644, line: 53, type: !32)
!10062 = distinct !DILocation(line: 145, column: 10, scope: !10049, inlinedAt: !10056)
!10063 = !{i64 2952500}
!10064 = !DILocation(line: 0, scope: !10058, inlinedAt: !10062)
!10065 = !DILocation(line: 148, column: 2, scope: !10066, inlinedAt: !10056)
!10066 = distinct !DILexicalBlock(scope: !10067, file: !230, line: 148, column: 2)
!10067 = distinct !DILexicalBlock(scope: !10049, file: !230, line: 148, column: 2)
!10068 = !DILocation(line: 148, column: 2, scope: !10067, inlinedAt: !10056)
!10069 = !DILocation(line: 148, column: 2, scope: !10070, inlinedAt: !10056)
!10070 = distinct !DILexicalBlock(scope: !10066, file: !230, line: 148, column: 2)
!10071 = !DILocation(line: 160, column: 2, scope: !10049, inlinedAt: !10056)
!10072 = !DILocation(line: 178, column: 21, scope: !10021)
!10073 = !DILocation(line: 180, column: 18, scope: !10021)
!10074 = !DILocation(line: 182, column: 14, scope: !10021)
!10075 = !DILocation(line: 183, column: 15, scope: !10021)
!10076 = !DILocation(line: 185, column: 39, scope: !10021)
!10077 = !DILocation(line: 185, column: 37, scope: !10021)
!10078 = !DILocation(line: 187, column: 27, scope: !10079)
!10079 = distinct !DILexicalBlock(scope: !10021, file: !1689, line: 187, column: 6)
!10080 = !DILocation(line: 187, column: 6, scope: !10021)
!10081 = !DILocation(line: 202, column: 27, scope: !10082)
!10082 = distinct !DILexicalBlock(scope: !10079, file: !1689, line: 195, column: 9)
!10083 = !DILocation(line: 202, column: 48, scope: !10082)
!10084 = !DILocation(line: 203, column: 9, scope: !10082)
!10085 = !DILocation(line: 204, column: 11, scope: !10082)
!10086 = !DILocation(line: 205, column: 13, scope: !10087)
!10087 = distinct !DILexicalBlock(scope: !10082, file: !1689, line: 205, column: 7)
!10088 = !DILocation(line: 205, column: 7, scope: !10082)
!10089 = !DILocation(line: 0, scope: !10079)
!10090 = !DILocation(line: 212, column: 18, scope: !10021)
!10091 = !DILocation(line: 214, column: 28, scope: !10021)
!10092 = !DILocation(line: 214, column: 16, scope: !10021)
!10093 = !DILocation(line: 215, column: 15, scope: !10021)
!10094 = !DILocation(line: 227, column: 11, scope: !10095)
!10095 = distinct !DILexicalBlock(scope: !10021, file: !1689, line: 227, column: 6)
!10096 = !DILocation(line: 227, column: 6, scope: !10021)
!10097 = !DILocation(line: 228, column: 15, scope: !10098)
!10098 = distinct !DILexicalBlock(scope: !10095, file: !1689, line: 227, column: 19)
!10099 = !DILocation(line: 228, column: 38, scope: !10098)
!10100 = !DILocation(line: 228, column: 24, scope: !10098)
!10101 = !DILocation(line: 229, column: 2, scope: !10098)
!10102 = !DILocation(line: 230, column: 24, scope: !10103)
!10103 = distinct !DILexicalBlock(scope: !10095, file: !1689, line: 229, column: 9)
!10104 = !DILocation(line: 230, column: 15, scope: !10103)
!10105 = !DILocation(line: 0, scope: !10095)
!10106 = !DILocalVariable(name: "key", arg: 2, scope: !10107, file: !230, line: 190, type: !10032)
!10107 = distinct !DISubprogram(name: "k_spin_unlock", scope: !230, file: !230, line: 189, type: !10108, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1466, retainedNodes: !10110)
!10108 = !DISubroutineType(types: !10109)
!10109 = !{null, !10052, !10032}
!10110 = !{!10111, !10106}
!10111 = !DILocalVariable(name: "l", arg: 1, scope: !10107, file: !230, line: 189, type: !10052)
!10112 = !DILocation(line: 0, scope: !10107, inlinedAt: !10113)
!10113 = distinct !DILocation(line: 232, column: 2, scope: !10021)
!10114 = !DILocation(line: 194, column: 2, scope: !10115, inlinedAt: !10113)
!10115 = distinct !DILexicalBlock(scope: !10116, file: !230, line: 194, column: 2)
!10116 = distinct !DILexicalBlock(scope: !10107, file: !230, line: 194, column: 2)
!10117 = !DILocation(line: 194, column: 2, scope: !10116, inlinedAt: !10113)
!10118 = !DILocation(line: 194, column: 2, scope: !10119, inlinedAt: !10113)
!10119 = distinct !DILexicalBlock(scope: !10115, file: !230, line: 194, column: 2)
!10120 = !DILocalVariable(name: "key", arg: 1, scope: !10121, file: !7644, line: 84, type: !32)
!10121 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7644, file: !7644, line: 84, type: !7476, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1466, retainedNodes: !10122)
!10122 = !{!10120}
!10123 = !DILocation(line: 0, scope: !10121, inlinedAt: !10124)
!10124 = distinct !DILocation(line: 215, column: 2, scope: !10107, inlinedAt: !10113)
!10125 = !DILocation(line: 95, column: 2, scope: !10121, inlinedAt: !10124)
!10126 = !{i64 2953317}
!10127 = !DILocation(line: 234, column: 1, scope: !10021)
!10128 = distinct !DISubprogram(name: "sys_clock_elapsed", scope: !1689, file: !1689, line: 236, type: !389, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1466, retainedNodes: !10129)
!10129 = !{!10130, !10131}
!10130 = !DILocalVariable(name: "key", scope: !10128, file: !1689, line: 242, type: !10032)
!10131 = !DILocalVariable(name: "cyc", scope: !10128, file: !1689, line: 243, type: !113)
!10132 = !DILocation(line: 0, scope: !10049, inlinedAt: !10133)
!10133 = distinct !DILocation(line: 242, column: 25, scope: !10128)
!10134 = !DILocation(line: 55, column: 2, scope: !10058, inlinedAt: !10135)
!10135 = distinct !DILocation(line: 145, column: 10, scope: !10049, inlinedAt: !10133)
!10136 = !DILocation(line: 0, scope: !10058, inlinedAt: !10135)
!10137 = !DILocation(line: 148, column: 2, scope: !10066, inlinedAt: !10133)
!10138 = !DILocation(line: 148, column: 2, scope: !10067, inlinedAt: !10133)
!10139 = !DILocation(line: 148, column: 2, scope: !10070, inlinedAt: !10133)
!10140 = !DILocation(line: 160, column: 2, scope: !10049, inlinedAt: !10133)
!10141 = !DILocation(line: 0, scope: !10128)
!10142 = !DILocation(line: 243, column: 17, scope: !10128)
!10143 = !DILocation(line: 243, column: 29, scope: !10128)
!10144 = !DILocation(line: 243, column: 43, scope: !10128)
!10145 = !DILocation(line: 0, scope: !10107, inlinedAt: !10146)
!10146 = distinct !DILocation(line: 245, column: 2, scope: !10128)
!10147 = !DILocation(line: 194, column: 2, scope: !10115, inlinedAt: !10146)
!10148 = !DILocation(line: 194, column: 2, scope: !10116, inlinedAt: !10146)
!10149 = !DILocation(line: 194, column: 2, scope: !10119, inlinedAt: !10146)
!10150 = !DILocation(line: 243, column: 27, scope: !10128)
!10151 = !DILocation(line: 243, column: 41, scope: !10128)
!10152 = !DILocation(line: 0, scope: !10121, inlinedAt: !10153)
!10153 = distinct !DILocation(line: 215, column: 2, scope: !10107, inlinedAt: !10146)
!10154 = !DILocation(line: 95, column: 2, scope: !10121, inlinedAt: !10153)
!10155 = !DILocation(line: 246, column: 13, scope: !10128)
!10156 = !DILocation(line: 246, column: 2, scope: !10128)
!10157 = distinct !DISubprogram(name: "sys_clock_cycle_get_32", scope: !1689, file: !1689, line: 249, type: !389, scopeLine: 250, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1466, retainedNodes: !10158)
!10158 = !{!10159, !10160}
!10159 = !DILocalVariable(name: "key", scope: !10157, file: !1689, line: 251, type: !10032)
!10160 = !DILocalVariable(name: "ret", scope: !10157, file: !1689, line: 252, type: !113)
!10161 = !DILocation(line: 0, scope: !10049, inlinedAt: !10162)
!10162 = distinct !DILocation(line: 251, column: 25, scope: !10157)
!10163 = !DILocation(line: 55, column: 2, scope: !10058, inlinedAt: !10164)
!10164 = distinct !DILocation(line: 145, column: 10, scope: !10049, inlinedAt: !10162)
!10165 = !DILocation(line: 0, scope: !10058, inlinedAt: !10164)
!10166 = !DILocation(line: 148, column: 2, scope: !10066, inlinedAt: !10162)
!10167 = !DILocation(line: 148, column: 2, scope: !10067, inlinedAt: !10162)
!10168 = !DILocation(line: 148, column: 2, scope: !10070, inlinedAt: !10162)
!10169 = !DILocation(line: 160, column: 2, scope: !10049, inlinedAt: !10162)
!10170 = !DILocation(line: 0, scope: !10157)
!10171 = !DILocation(line: 252, column: 17, scope: !10157)
!10172 = !DILocation(line: 252, column: 29, scope: !10157)
!10173 = !DILocation(line: 0, scope: !10107, inlinedAt: !10174)
!10174 = distinct !DILocation(line: 254, column: 2, scope: !10157)
!10175 = !DILocation(line: 194, column: 2, scope: !10115, inlinedAt: !10174)
!10176 = !DILocation(line: 194, column: 2, scope: !10116, inlinedAt: !10174)
!10177 = !DILocation(line: 194, column: 2, scope: !10119, inlinedAt: !10174)
!10178 = !DILocation(line: 252, column: 27, scope: !10157)
!10179 = !DILocation(line: 0, scope: !10121, inlinedAt: !10180)
!10180 = distinct !DILocation(line: 215, column: 2, scope: !10107, inlinedAt: !10174)
!10181 = !DILocation(line: 95, column: 2, scope: !10121, inlinedAt: !10180)
!10182 = !DILocation(line: 255, column: 2, scope: !10157)
!10183 = distinct !DISubprogram(name: "sys_clock_idle_exit", scope: !1689, file: !1689, line: 258, type: !260, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1466, retainedNodes: !391)
!10184 = !DILocation(line: 260, column: 6, scope: !10185)
!10185 = distinct !DILexicalBlock(scope: !10183, file: !1689, line: 260, column: 6)
!10186 = !DILocation(line: 260, column: 16, scope: !10185)
!10187 = !DILocation(line: 260, column: 6, scope: !10183)
!10188 = !DILocation(line: 261, column: 17, scope: !10189)
!10189 = distinct !DILexicalBlock(scope: !10185, file: !1689, line: 260, column: 34)
!10190 = !DILocation(line: 262, column: 2, scope: !10189)
!10191 = !DILocation(line: 263, column: 1, scope: !10183)
!10192 = distinct !DISubprogram(name: "sys_clock_disable", scope: !1689, file: !1689, line: 265, type: !260, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1466, retainedNodes: !391)
!10193 = !DILocation(line: 267, column: 16, scope: !10192)
!10194 = !DILocation(line: 268, column: 1, scope: !10192)
!10195 = distinct !DISubprogram(name: "pinctrl_lookup_state", scope: !10196, file: !10196, line: 9, type: !10197, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2730, retainedNodes: !10227)
!10196 = !DIFile(filename: "zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10197 = !DISubroutineType(types: !10198)
!10198 = !{!105, !10199, !169, !10226}
!10199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10200, size: 32)
!10200 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10201)
!10201 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1391, line: 60, size: 64, elements: !10202)
!10202 = !{!10203, !10225}
!10203 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !10201, file: !1391, line: 69, baseType: !10204, size: 32)
!10204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10205, size: 32)
!10205 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10206)
!10206 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1391, line: 50, size: 64, elements: !10207)
!10207 = !{!10208, !10223, !10224}
!10208 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !10206, file: !1391, line: 52, baseType: !10209, size: 32)
!10209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10210, size: 32)
!10210 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10211)
!10211 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1148, line: 64, baseType: !10212)
!10212 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1148, line: 59, size: 160, elements: !10213)
!10213 = !{!10214, !10222}
!10214 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !10212, file: !1148, line: 60, baseType: !10215, size: 128)
!10215 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pinmux", file: !1148, line: 51, size: 128, elements: !10216)
!10216 = !{!10217, !10218, !10219, !10220, !10221}
!10217 = !DIDerivedType(tag: DW_TAG_member, name: "mux_register", scope: !10215, file: !1148, line: 52, baseType: !113, size: 32)
!10218 = !DIDerivedType(tag: DW_TAG_member, name: "config_register", scope: !10215, file: !1148, line: 53, baseType: !113, size: 32, offset: 32)
!10219 = !DIDerivedType(tag: DW_TAG_member, name: "input_register", scope: !10215, file: !1148, line: 54, baseType: !113, size: 32, offset: 64)
!10220 = !DIDerivedType(tag: DW_TAG_member, name: "mux_mode", scope: !10215, file: !1148, line: 55, baseType: !169, size: 4, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!10221 = !DIDerivedType(tag: DW_TAG_member, name: "input_daisy", scope: !10215, file: !1148, line: 56, baseType: !113, size: 4, offset: 100, flags: DIFlagBitField, extraData: i64 96)
!10222 = !DIDerivedType(tag: DW_TAG_member, name: "pin_ctrl_flags", scope: !10212, file: !1148, line: 61, baseType: !113, size: 32, offset: 128)
!10223 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !10206, file: !1391, line: 54, baseType: !169, size: 8, offset: 32)
!10224 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !10206, file: !1391, line: 56, baseType: !169, size: 8, offset: 40)
!10225 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !10201, file: !1391, line: 71, baseType: !169, size: 8, offset: 32)
!10226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10204, size: 32)
!10227 = !{!10228, !10229, !10230}
!10228 = !DILocalVariable(name: "config", arg: 1, scope: !10195, file: !10196, line: 9, type: !10199)
!10229 = !DILocalVariable(name: "id", arg: 2, scope: !10195, file: !10196, line: 9, type: !169)
!10230 = !DILocalVariable(name: "state", arg: 3, scope: !10195, file: !10196, line: 10, type: !10226)
!10231 = !DILocation(line: 0, scope: !10195)
!10232 = !DILocation(line: 12, column: 20, scope: !10195)
!10233 = !DILocation(line: 13, column: 27, scope: !10195)
!10234 = !DILocation(line: 13, column: 42, scope: !10195)
!10235 = !DILocation(line: 13, column: 19, scope: !10195)
!10236 = !DILocation(line: 13, column: 16, scope: !10195)
!10237 = !DILocation(line: 13, column: 2, scope: !10195)
!10238 = distinct !{!10238, !10237, !10239}
!10239 = !DILocation(line: 19, column: 2, scope: !10195)
!10240 = !DILocation(line: 14, column: 23, scope: !10241)
!10241 = distinct !DILexicalBlock(scope: !10242, file: !10196, line: 14, column: 7)
!10242 = distinct !DILexicalBlock(scope: !10195, file: !10196, line: 13, column: 54)
!10243 = !DILocation(line: 14, column: 10, scope: !10241)
!10244 = !DILocation(line: 18, column: 11, scope: !10242)
!10245 = !DILocation(line: 14, column: 7, scope: !10242)
!10246 = !DILocation(line: 22, column: 1, scope: !10195)
!10247 = distinct !DISubprogram(name: "imx_pinctrl_init", scope: !1730, file: !1730, line: 51, type: !1736, scopeLine: 52, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1726, retainedNodes: !10248)
!10248 = !{!10249}
!10249 = !DILocalVariable(name: "dev", arg: 1, scope: !10247, file: !1730, line: 51, type: !1738)
!10250 = !DILocation(line: 0, scope: !10247)
!10251 = !DILocation(line: 66, column: 2, scope: !10247)
!10252 = distinct !DISubprogram(name: "pinctrl_configure_pins", scope: !1730, file: !1730, line: 10, type: !10253, scopeLine: 12, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1726, retainedNodes: !10269)
!10253 = !DISubroutineType(types: !10254)
!10254 = !{!105, !10255, !169, !22}
!10255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10256, size: 32)
!10256 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10257)
!10257 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1148, line: 64, baseType: !10258)
!10258 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1148, line: 59, size: 160, elements: !10259)
!10259 = !{!10260, !10268}
!10260 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !10258, file: !1148, line: 60, baseType: !10261, size: 128)
!10261 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pinmux", file: !1148, line: 51, size: 128, elements: !10262)
!10262 = !{!10263, !10264, !10265, !10266, !10267}
!10263 = !DIDerivedType(tag: DW_TAG_member, name: "mux_register", scope: !10261, file: !1148, line: 52, baseType: !113, size: 32)
!10264 = !DIDerivedType(tag: DW_TAG_member, name: "config_register", scope: !10261, file: !1148, line: 53, baseType: !113, size: 32, offset: 32)
!10265 = !DIDerivedType(tag: DW_TAG_member, name: "input_register", scope: !10261, file: !1148, line: 54, baseType: !113, size: 32, offset: 64)
!10266 = !DIDerivedType(tag: DW_TAG_member, name: "mux_mode", scope: !10261, file: !1148, line: 55, baseType: !169, size: 4, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!10267 = !DIDerivedType(tag: DW_TAG_member, name: "input_daisy", scope: !10261, file: !1148, line: 56, baseType: !113, size: 4, offset: 100, flags: DIFlagBitField, extraData: i64 96)
!10268 = !DIDerivedType(tag: DW_TAG_member, name: "pin_ctrl_flags", scope: !10258, file: !1148, line: 61, baseType: !113, size: 32, offset: 128)
!10269 = !{!10270, !10271, !10272, !10273, !10275, !10278, !10279, !10280, !10281, !10282}
!10270 = !DILocalVariable(name: "pins", arg: 1, scope: !10252, file: !1730, line: 10, type: !10255)
!10271 = !DILocalVariable(name: "pin_cnt", arg: 2, scope: !10252, file: !1730, line: 10, type: !169)
!10272 = !DILocalVariable(name: "reg", arg: 3, scope: !10252, file: !1730, line: 11, type: !22)
!10273 = !DILocalVariable(name: "i", scope: !10274, file: !1730, line: 14, type: !169)
!10274 = distinct !DILexicalBlock(scope: !10252, file: !1730, line: 14, column: 2)
!10275 = !DILocalVariable(name: "mux_register", scope: !10276, file: !1730, line: 15, type: !113)
!10276 = distinct !DILexicalBlock(scope: !10277, file: !1730, line: 14, column: 41)
!10277 = distinct !DILexicalBlock(scope: !10274, file: !1730, line: 14, column: 2)
!10278 = !DILocalVariable(name: "mux_mode", scope: !10276, file: !1730, line: 16, type: !113)
!10279 = !DILocalVariable(name: "input_register", scope: !10276, file: !1730, line: 17, type: !113)
!10280 = !DILocalVariable(name: "input_daisy", scope: !10276, file: !1730, line: 18, type: !113)
!10281 = !DILocalVariable(name: "config_register", scope: !10276, file: !1730, line: 19, type: !113)
!10282 = !DILocalVariable(name: "pin_ctrl_flags", scope: !10276, file: !1730, line: 20, type: !113)
!10283 = !DILocation(line: 0, scope: !10252)
!10284 = !DILocation(line: 0, scope: !10274)
!10285 = !DILocation(line: 14, column: 25, scope: !10277)
!10286 = !DILocation(line: 14, column: 2, scope: !10274)
!10287 = !DILocation(line: 48, column: 2, scope: !10252)
!10288 = !DILocation(line: 15, column: 42, scope: !10276)
!10289 = !DILocation(line: 0, scope: !10276)
!10290 = !DILocation(line: 16, column: 38, scope: !10276)
!10291 = !DILocation(line: 17, column: 44, scope: !10276)
!10292 = !DILocation(line: 19, column: 45, scope: !10276)
!10293 = !DILocation(line: 20, column: 37, scope: !10276)
!10294 = !DILocation(line: 35, column: 4, scope: !10276)
!10295 = !DILocation(line: 36, column: 4, scope: !10276)
!10296 = !DILocation(line: 35, column: 45, scope: !10276)
!10297 = !DILocation(line: 34, column: 5, scope: !10276)
!10298 = !DILocation(line: 34, column: 53, scope: !10276)
!10299 = !DILocation(line: 37, column: 7, scope: !10300)
!10300 = distinct !DILexicalBlock(scope: !10276, file: !1730, line: 37, column: 7)
!10301 = !DILocation(line: 37, column: 7, scope: !10276)
!10302 = !DILocation(line: 18, column: 41, scope: !10276)
!10303 = !DILocation(line: 39, column: 5, scope: !10304)
!10304 = distinct !DILexicalBlock(scope: !10300, file: !1730, line: 37, column: 23)
!10305 = !DILocation(line: 38, column: 6, scope: !10304)
!10306 = !DILocation(line: 38, column: 56, scope: !10304)
!10307 = !DILocation(line: 40, column: 3, scope: !10304)
!10308 = !DILocation(line: 41, column: 7, scope: !10309)
!10309 = distinct !DILexicalBlock(scope: !10276, file: !1730, line: 41, column: 7)
!10310 = !DILocation(line: 41, column: 7, scope: !10276)
!10311 = !DILocation(line: 43, column: 20, scope: !10312)
!10312 = distinct !DILexicalBlock(scope: !10309, file: !1730, line: 41, column: 24)
!10313 = !DILocation(line: 42, column: 6, scope: !10312)
!10314 = !DILocation(line: 42, column: 57, scope: !10312)
!10315 = !DILocation(line: 44, column: 3, scope: !10312)
!10316 = !DILocation(line: 14, column: 37, scope: !10277)
!10317 = distinct !{!10317, !10286, !10318}
!10318 = !DILocation(line: 47, column: 2, scope: !10274)
!10319 = distinct !DISubprogram(name: "CCM_SetRootDivider", scope: !10320, file: !10320, line: 43, type: !10321, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2732, retainedNodes: !10375)
!10320 = !DIFile(filename: "modules/hal/nxp/imx/drivers/ccm_imx7d.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10321 = !DISubroutineType(types: !10322)
!10322 = !{null, !10323, !113, !113, !113}
!10323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10324, size: 32)
!10324 = !DIDerivedType(tag: DW_TAG_typedef, name: "CCM_Type", file: !734, line: 4575, baseType: !10325)
!10325 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !734, line: 4532, size: 390144, elements: !10326)
!10326 = !{!10327, !10328, !10329, !10330, !10331, !10332, !10340, !10341, !10349, !10350}
!10327 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0", scope: !10325, file: !734, line: 4533, baseType: !738, size: 32)
!10328 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0_SET", scope: !10325, file: !734, line: 4534, baseType: !738, size: 32, offset: 32)
!10329 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0_CLR", scope: !10325, file: !734, line: 4535, baseType: !738, size: 32, offset: 64)
!10330 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0_TOG", scope: !10325, file: !734, line: 4536, baseType: !738, size: 32, offset: 96)
!10331 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !10325, file: !734, line: 4537, baseType: !743, size: 16256, offset: 128)
!10332 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL", scope: !10325, file: !734, line: 4543, baseType: !10333, size: 4224, offset: 16384)
!10333 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10334, size: 4224, elements: !754)
!10334 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !10325, file: !734, line: 4538, size: 128, elements: !10335)
!10335 = !{!10336, !10337, !10338, !10339}
!10336 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL", scope: !10334, file: !734, line: 4539, baseType: !738, size: 32)
!10337 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL_SET", scope: !10334, file: !734, line: 4540, baseType: !738, size: 32, offset: 32)
!10338 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL_CLR", scope: !10334, file: !734, line: 4541, baseType: !738, size: 32, offset: 64)
!10339 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL_TOG", scope: !10334, file: !734, line: 4542, baseType: !738, size: 32, offset: 96)
!10340 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !10325, file: !734, line: 4544, baseType: !757, size: 110464, offset: 20608)
!10341 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR", scope: !10325, file: !734, line: 4550, baseType: !10342, size: 24448, offset: 131072)
!10342 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10343, size: 24448, elements: !768)
!10343 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !10325, file: !734, line: 4545, size: 128, elements: !10344)
!10344 = !{!10345, !10346, !10347, !10348}
!10345 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR", scope: !10343, file: !734, line: 4546, baseType: !738, size: 32)
!10346 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR_SET", scope: !10343, file: !734, line: 4547, baseType: !738, size: 32, offset: 32)
!10347 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR_CLR", scope: !10343, file: !734, line: 4548, baseType: !738, size: 32, offset: 64)
!10348 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR_TOG", scope: !10343, file: !734, line: 4549, baseType: !738, size: 32, offset: 96)
!10349 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_2", scope: !10325, file: !734, line: 4551, baseType: !771, size: 106624, offset: 155520)
!10350 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_TOG", scope: !10325, file: !734, line: 4574, baseType: !10351, size: 128000, offset: 262144)
!10351 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10352, size: 128000, elements: !802)
!10352 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !10325, file: !734, line: 4552, size: 1024, elements: !10353)
!10353 = !{!10354, !10355, !10356, !10357, !10358, !10359, !10360, !10361, !10362, !10363, !10364, !10365, !10366, !10367, !10368, !10369, !10370, !10371, !10372, !10373, !10374}
!10354 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT", scope: !10352, file: !734, line: 4553, baseType: !738, size: 32)
!10355 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT_SET", scope: !10352, file: !734, line: 4554, baseType: !738, size: 32, offset: 32)
!10356 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT_CLR", scope: !10352, file: !734, line: 4555, baseType: !738, size: 32, offset: 64)
!10357 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT_TOG", scope: !10352, file: !734, line: 4556, baseType: !738, size: 32, offset: 96)
!10358 = !DIDerivedType(tag: DW_TAG_member, name: "MISC", scope: !10352, file: !734, line: 4557, baseType: !738, size: 32, offset: 128)
!10359 = !DIDerivedType(tag: DW_TAG_member, name: "MISC_ROOT_SET", scope: !10352, file: !734, line: 4558, baseType: !738, size: 32, offset: 160)
!10360 = !DIDerivedType(tag: DW_TAG_member, name: "MISC_ROOT_CLR", scope: !10352, file: !734, line: 4559, baseType: !738, size: 32, offset: 192)
!10361 = !DIDerivedType(tag: DW_TAG_member, name: "MISC_ROOT_TOG", scope: !10352, file: !734, line: 4560, baseType: !738, size: 32, offset: 224)
!10362 = !DIDerivedType(tag: DW_TAG_member, name: "POST", scope: !10352, file: !734, line: 4561, baseType: !738, size: 32, offset: 256)
!10363 = !DIDerivedType(tag: DW_TAG_member, name: "POST_ROOT_SET", scope: !10352, file: !734, line: 4562, baseType: !738, size: 32, offset: 288)
!10364 = !DIDerivedType(tag: DW_TAG_member, name: "POST_ROOT_CLR", scope: !10352, file: !734, line: 4563, baseType: !738, size: 32, offset: 320)
!10365 = !DIDerivedType(tag: DW_TAG_member, name: "POST_ROOT_TOG", scope: !10352, file: !734, line: 4564, baseType: !738, size: 32, offset: 352)
!10366 = !DIDerivedType(tag: DW_TAG_member, name: "PRE", scope: !10352, file: !734, line: 4565, baseType: !738, size: 32, offset: 384)
!10367 = !DIDerivedType(tag: DW_TAG_member, name: "PRE_ROOT_SET", scope: !10352, file: !734, line: 4566, baseType: !738, size: 32, offset: 416)
!10368 = !DIDerivedType(tag: DW_TAG_member, name: "PRE_ROOT_CLR", scope: !10352, file: !734, line: 4567, baseType: !738, size: 32, offset: 448)
!10369 = !DIDerivedType(tag: DW_TAG_member, name: "PRE_ROOT_TOG", scope: !10352, file: !734, line: 4568, baseType: !738, size: 32, offset: 480)
!10370 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !10352, file: !734, line: 4569, baseType: !795, size: 384, offset: 512)
!10371 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL", scope: !10352, file: !734, line: 4570, baseType: !738, size: 32, offset: 896)
!10372 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_SET", scope: !10352, file: !734, line: 4571, baseType: !738, size: 32, offset: 928)
!10373 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_CLR", scope: !10352, file: !734, line: 4572, baseType: !738, size: 32, offset: 960)
!10374 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_TOG", scope: !10352, file: !734, line: 4573, baseType: !738, size: 32, offset: 992)
!10375 = !{!10376, !10377, !10378, !10379}
!10376 = !DILocalVariable(name: "base", arg: 1, scope: !10319, file: !10320, line: 43, type: !10323)
!10377 = !DILocalVariable(name: "ccmRoot", arg: 2, scope: !10319, file: !10320, line: 43, type: !113)
!10378 = !DILocalVariable(name: "pre", arg: 3, scope: !10319, file: !10320, line: 43, type: !113)
!10379 = !DILocalVariable(name: "post", arg: 4, scope: !10319, file: !10320, line: 43, type: !113)
!10380 = !DILocation(line: 0, scope: !10319)
!10381 = !DILocation(line: 45, column: 5, scope: !10382)
!10382 = distinct !DILexicalBlock(scope: !10383, file: !10320, line: 45, column: 5)
!10383 = distinct !DILexicalBlock(scope: !10319, file: !10320, line: 45, column: 5)
!10384 = !DILocation(line: 45, column: 5, scope: !10383)
!10385 = !DILocation(line: 45, column: 5, scope: !10386)
!10386 = distinct !DILexicalBlock(scope: !10382, file: !10320, line: 45, column: 5)
!10387 = !DILocation(line: 46, column: 5, scope: !10388)
!10388 = distinct !DILexicalBlock(scope: !10389, file: !10320, line: 46, column: 5)
!10389 = distinct !DILexicalBlock(scope: !10319, file: !10320, line: 46, column: 5)
!10390 = !DILocation(line: 46, column: 5, scope: !10389)
!10391 = !DILocation(line: 46, column: 5, scope: !10392)
!10392 = distinct !DILexicalBlock(scope: !10388, file: !10320, line: 46, column: 5)
!10393 = !DILocation(line: 48, column: 25, scope: !10319)
!10394 = !DILocation(line: 48, column: 42, scope: !10319)
!10395 = !DILocation(line: 50, column: 24, scope: !10319)
!10396 = !DILocation(line: 49, column: 94, scope: !10319)
!10397 = !DILocation(line: 50, column: 54, scope: !10319)
!10398 = !DILocation(line: 48, column: 22, scope: !10319)
!10399 = !DILocation(line: 51, column: 1, scope: !10319)
!10400 = distinct !DISubprogram(name: "CCM_GetRootDivider", scope: !10320, file: !10320, line: 59, type: !10401, scopeLine: 60, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2732, retainedNodes: !10403)
!10401 = !DISubroutineType(types: !10402)
!10402 = !{null, !10323, !113, !1417, !1417}
!10403 = !{!10404, !10405, !10406, !10407}
!10404 = !DILocalVariable(name: "base", arg: 1, scope: !10400, file: !10320, line: 59, type: !10323)
!10405 = !DILocalVariable(name: "ccmRoot", arg: 2, scope: !10400, file: !10320, line: 59, type: !113)
!10406 = !DILocalVariable(name: "pre", arg: 3, scope: !10400, file: !10320, line: 59, type: !1417)
!10407 = !DILocalVariable(name: "post", arg: 4, scope: !10400, file: !10320, line: 59, type: !1417)
!10408 = !DILocation(line: 0, scope: !10400)
!10409 = !DILocation(line: 61, column: 5, scope: !10410)
!10410 = distinct !DILexicalBlock(scope: !10411, file: !10320, line: 61, column: 5)
!10411 = distinct !DILexicalBlock(scope: !10400, file: !10320, line: 61, column: 5)
!10412 = !DILocation(line: 61, column: 5, scope: !10413)
!10413 = distinct !DILexicalBlock(scope: !10410, file: !10320, line: 61, column: 5)
!10414 = !DILocation(line: 63, column: 13, scope: !10400)
!10415 = !DILocation(line: 63, column: 63, scope: !10400)
!10416 = !DILocation(line: 63, column: 10, scope: !10400)
!10417 = !DILocation(line: 64, column: 14, scope: !10400)
!10418 = !DILocation(line: 64, column: 31, scope: !10400)
!10419 = !DILocation(line: 64, column: 11, scope: !10400)
!10420 = !DILocation(line: 65, column: 1, scope: !10400)
!10421 = distinct !DISubprogram(name: "CCM_UpdateRoot", scope: !10320, file: !10320, line: 73, type: !10422, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2732, retainedNodes: !10424)
!10422 = !DISubroutineType(types: !10423)
!10423 = !{null, !10323, !113, !113, !113, !113}
!10424 = !{!10425, !10426, !10427, !10428, !10429}
!10425 = !DILocalVariable(name: "base", arg: 1, scope: !10421, file: !10320, line: 73, type: !10323)
!10426 = !DILocalVariable(name: "ccmRoot", arg: 2, scope: !10421, file: !10320, line: 73, type: !113)
!10427 = !DILocalVariable(name: "mux", arg: 3, scope: !10421, file: !10320, line: 73, type: !113)
!10428 = !DILocalVariable(name: "pre", arg: 4, scope: !10421, file: !10320, line: 73, type: !113)
!10429 = !DILocalVariable(name: "post", arg: 5, scope: !10421, file: !10320, line: 73, type: !113)
!10430 = !DILocation(line: 0, scope: !10421)
!10431 = !DILocation(line: 75, column: 5, scope: !10432)
!10432 = distinct !DILexicalBlock(scope: !10433, file: !10320, line: 75, column: 5)
!10433 = distinct !DILexicalBlock(scope: !10421, file: !10320, line: 75, column: 5)
!10434 = !DILocation(line: 75, column: 5, scope: !10433)
!10435 = !DILocation(line: 75, column: 5, scope: !10436)
!10436 = distinct !DILexicalBlock(scope: !10432, file: !10320, line: 75, column: 5)
!10437 = !DILocation(line: 76, column: 5, scope: !10438)
!10438 = distinct !DILexicalBlock(scope: !10439, file: !10320, line: 76, column: 5)
!10439 = distinct !DILexicalBlock(scope: !10421, file: !10320, line: 76, column: 5)
!10440 = !DILocation(line: 76, column: 5, scope: !10439)
!10441 = !DILocation(line: 76, column: 5, scope: !10442)
!10442 = distinct !DILexicalBlock(scope: !10438, file: !10320, line: 76, column: 5)
!10443 = !DILocation(line: 78, column: 25, scope: !10421)
!10444 = !DILocation(line: 78, column: 42, scope: !10421)
!10445 = !DILocation(line: 80, column: 24, scope: !10421)
!10446 = !DILocation(line: 80, column: 51, scope: !10421)
!10447 = !DILocation(line: 79, column: 121, scope: !10421)
!10448 = !DILocation(line: 80, column: 49, scope: !10421)
!10449 = !DILocation(line: 80, column: 81, scope: !10421)
!10450 = !DILocation(line: 78, column: 22, scope: !10421)
!10451 = !DILocation(line: 81, column: 1, scope: !10421)
!10452 = distinct !DISubprogram(name: "CCM_ANALOG_GetArmPllFreq", scope: !10453, file: !10453, line: 43, type: !10454, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2735, retainedNodes: !10456)
!10453 = !DIFile(filename: "modules/hal/nxp/imx/drivers/ccm_analog_imx7d.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10454 = !DISubroutineType(types: !10455)
!10455 = !{!113, !2748}
!10456 = !{!10457}
!10457 = !DILocalVariable(name: "base", arg: 1, scope: !10452, file: !10453, line: 43, type: !2748)
!10458 = !DILocation(line: 0, scope: !10452)
!10459 = !DILocation(line: 45, column: 9, scope: !10460)
!10460 = distinct !DILexicalBlock(scope: !10452, file: !10453, line: 45, column: 9)
!10461 = !DILocation(line: 45, column: 9, scope: !10452)
!10462 = !DILocation(line: 48, column: 26, scope: !10452)
!10463 = !DILocation(line: 48, column: 45, scope: !10452)
!10464 = !DILocation(line: 48, column: 23, scope: !10452)
!10465 = !DILocation(line: 48, column: 5, scope: !10452)
!10466 = !DILocation(line: 49, column: 1, scope: !10452)
!10467 = distinct !DISubprogram(name: "CCM_ANALOG_IsPllBypassed", scope: !2739, file: !2739, line: 220, type: !10468, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2735, retainedNodes: !10470)
!10468 = !DISubroutineType(types: !10469)
!10469 = !{!911, !2748, !113}
!10470 = !{!10471, !10472}
!10471 = !DILocalVariable(name: "base", arg: 1, scope: !10467, file: !2739, line: 220, type: !2748)
!10472 = !DILocalVariable(name: "pllControl", arg: 2, scope: !10467, file: !2739, line: 220, type: !113)
!10473 = !DILocation(line: 0, scope: !10467)
!10474 = !DILocation(line: 222, column: 19, scope: !10467)
!10475 = !DILocation(line: 222, column: 58, scope: !10467)
!10476 = !DILocation(line: 222, column: 12, scope: !10467)
!10477 = !DILocation(line: 222, column: 5, scope: !10467)
!10478 = distinct !DISubprogram(name: "CCM_ANALOG_GetSysPllFreq", scope: !10453, file: !10453, line: 57, type: !10454, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2735, retainedNodes: !10479)
!10479 = !{!10480}
!10480 = !DILocalVariable(name: "base", arg: 1, scope: !10478, file: !10453, line: 57, type: !2748)
!10481 = !DILocation(line: 0, scope: !10478)
!10482 = !DILocation(line: 59, column: 9, scope: !10483)
!10483 = distinct !DILexicalBlock(scope: !10478, file: !10453, line: 59, column: 9)
!10484 = !DILocation(line: 59, column: 9, scope: !10478)
!10485 = !DILocation(line: 62, column: 9, scope: !10486)
!10486 = distinct !DILexicalBlock(scope: !10478, file: !10453, line: 62, column: 9)
!10487 = !DILocation(line: 62, column: 28, scope: !10486)
!10488 = !DILocation(line: 0, scope: !10486)
!10489 = !DILocation(line: 66, column: 1, scope: !10478)
!10490 = distinct !DISubprogram(name: "CCM_ANALOG_GetDdrPllFreq", scope: !10453, file: !10453, line: 74, type: !10454, scopeLine: 75, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2735, retainedNodes: !10491)
!10491 = !{!10492, !10493, !10494, !10495}
!10492 = !DILocalVariable(name: "base", arg: 1, scope: !10490, file: !10453, line: 74, type: !2748)
!10493 = !DILocalVariable(name: "divSelect", scope: !10490, file: !10453, line: 76, type: !169)
!10494 = !DILocalVariable(name: "divTestSelect", scope: !10490, file: !10453, line: 76, type: !169)
!10495 = !DILocalVariable(name: "factor", scope: !10490, file: !10453, line: 77, type: !2811)
!10496 = !DILocation(line: 0, scope: !10490)
!10497 = !DILocation(line: 79, column: 9, scope: !10498)
!10498 = distinct !DILexicalBlock(scope: !10490, file: !10453, line: 79, column: 9)
!10499 = !DILocation(line: 79, column: 9, scope: !10490)
!10500 = !DILocation(line: 82, column: 17, scope: !10490)
!10501 = !DILocation(line: 83, column: 22, scope: !10490)
!10502 = !DILocation(line: 83, column: 100, scope: !10490)
!10503 = !DILocation(line: 83, column: 21, scope: !10490)
!10504 = !DILocation(line: 86, column: 5, scope: !10490)
!10505 = !DILocation(line: 100, column: 9, scope: !10506)
!10506 = distinct !DILexicalBlock(scope: !10490, file: !10453, line: 100, column: 9)
!10507 = !DILocation(line: 100, column: 41, scope: !10506)
!10508 = !DILocation(line: 100, column: 9, scope: !10490)
!10509 = !DILocation(line: 102, column: 27, scope: !10510)
!10510 = distinct !DILexicalBlock(scope: !10506, file: !10453, line: 101, column: 5)
!10511 = !DILocation(line: 102, column: 59, scope: !10510)
!10512 = !DILocation(line: 102, column: 19, scope: !10510)
!10513 = !DILocation(line: 103, column: 27, scope: !10510)
!10514 = !DILocation(line: 103, column: 62, scope: !10510)
!10515 = !DILocation(line: 103, column: 19, scope: !10510)
!10516 = !DILocation(line: 102, column: 95, scope: !10510)
!10517 = !DILocation(line: 104, column: 27, scope: !10510)
!10518 = !DILocation(line: 104, column: 60, scope: !10510)
!10519 = !DILocation(line: 104, column: 19, scope: !10510)
!10520 = !DILocation(line: 103, column: 98, scope: !10510)
!10521 = !DILocation(line: 105, column: 39, scope: !10510)
!10522 = !DILocation(line: 105, column: 27, scope: !10510)
!10523 = !DILocation(line: 105, column: 60, scope: !10510)
!10524 = !DILocation(line: 105, column: 70, scope: !10510)
!10525 = !DILocation(line: 105, column: 57, scope: !10510)
!10526 = !DILocation(line: 105, column: 16, scope: !10510)
!10527 = !DILocation(line: 105, column: 9, scope: !10510)
!10528 = !DILocation(line: 109, column: 28, scope: !10529)
!10529 = distinct !DILexicalBlock(scope: !10506, file: !10453, line: 108, column: 5)
!10530 = !DILocation(line: 109, column: 48, scope: !10529)
!10531 = !DILocation(line: 109, column: 46, scope: !10529)
!10532 = !DILocation(line: 109, column: 9, scope: !10529)
!10533 = !DILocation(line: 111, column: 1, scope: !10490)
!10534 = distinct !DISubprogram(name: "CCM_ANALOG_GetEnetPllFreq", scope: !10453, file: !10453, line: 119, type: !10454, scopeLine: 120, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2735, retainedNodes: !10535)
!10535 = !{!10536}
!10536 = !DILocalVariable(name: "base", arg: 1, scope: !10534, file: !10453, line: 119, type: !2748)
!10537 = !DILocation(line: 0, scope: !10534)
!10538 = !DILocation(line: 121, column: 9, scope: !10539)
!10539 = distinct !DILexicalBlock(scope: !10534, file: !10453, line: 121, column: 9)
!10540 = !DILocation(line: 125, column: 1, scope: !10534)
!10541 = distinct !DISubprogram(name: "CCM_ANALOG_GetAudioPllFreq", scope: !10453, file: !10453, line: 133, type: !10454, scopeLine: 134, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2735, retainedNodes: !10542)
!10542 = !{!10543, !10544, !10545, !10546, !10547}
!10543 = !DILocalVariable(name: "base", arg: 1, scope: !10541, file: !10453, line: 133, type: !2748)
!10544 = !DILocalVariable(name: "divSelect", scope: !10541, file: !10453, line: 135, type: !169)
!10545 = !DILocalVariable(name: "divPostSelect", scope: !10541, file: !10453, line: 135, type: !169)
!10546 = !DILocalVariable(name: "divTestSelect", scope: !10541, file: !10453, line: 135, type: !169)
!10547 = !DILocalVariable(name: "factor", scope: !10541, file: !10453, line: 136, type: !2811)
!10548 = !DILocation(line: 0, scope: !10541)
!10549 = !DILocation(line: 138, column: 9, scope: !10550)
!10550 = distinct !DILexicalBlock(scope: !10541, file: !10453, line: 138, column: 9)
!10551 = !DILocation(line: 138, column: 9, scope: !10541)
!10552 = !DILocation(line: 141, column: 17, scope: !10541)
!10553 = !DILocation(line: 142, column: 22, scope: !10541)
!10554 = !DILocation(line: 142, column: 101, scope: !10541)
!10555 = !DILocation(line: 142, column: 21, scope: !10541)
!10556 = !DILocation(line: 144, column: 22, scope: !10541)
!10557 = !DILocation(line: 144, column: 104, scope: !10541)
!10558 = !DILocation(line: 144, column: 21, scope: !10541)
!10559 = !DILocation(line: 147, column: 5, scope: !10541)
!10560 = !DILocation(line: 161, column: 5, scope: !10541)
!10561 = !DILocation(line: 175, column: 9, scope: !10562)
!10562 = distinct !DILexicalBlock(scope: !10541, file: !10453, line: 175, column: 9)
!10563 = !DILocation(line: 175, column: 43, scope: !10562)
!10564 = !DILocation(line: 175, column: 9, scope: !10541)
!10565 = !DILocation(line: 177, column: 27, scope: !10566)
!10566 = distinct !DILexicalBlock(scope: !10562, file: !10453, line: 176, column: 5)
!10567 = !DILocation(line: 177, column: 61, scope: !10566)
!10568 = !DILocation(line: 177, column: 19, scope: !10566)
!10569 = !DILocation(line: 178, column: 27, scope: !10566)
!10570 = !DILocation(line: 178, column: 64, scope: !10566)
!10571 = !DILocation(line: 178, column: 19, scope: !10566)
!10572 = !DILocation(line: 177, column: 99, scope: !10566)
!10573 = !DILocation(line: 179, column: 27, scope: !10566)
!10574 = !DILocation(line: 179, column: 62, scope: !10566)
!10575 = !DILocation(line: 179, column: 19, scope: !10566)
!10576 = !DILocation(line: 178, column: 102, scope: !10566)
!10577 = !DILocation(line: 180, column: 40, scope: !10566)
!10578 = !DILocation(line: 180, column: 58, scope: !10566)
!10579 = !DILocation(line: 180, column: 27, scope: !10566)
!10580 = !DILocation(line: 180, column: 79, scope: !10566)
!10581 = !DILocation(line: 180, column: 89, scope: !10566)
!10582 = !DILocation(line: 180, column: 76, scope: !10566)
!10583 = !DILocation(line: 180, column: 16, scope: !10566)
!10584 = !DILocation(line: 180, column: 9, scope: !10566)
!10585 = !DILocation(line: 184, column: 29, scope: !10586)
!10586 = distinct !DILexicalBlock(scope: !10562, file: !10453, line: 183, column: 5)
!10587 = !DILocation(line: 184, column: 47, scope: !10586)
!10588 = !DILocation(line: 184, column: 67, scope: !10586)
!10589 = !DILocation(line: 184, column: 65, scope: !10586)
!10590 = !DILocation(line: 184, column: 9, scope: !10586)
!10591 = !DILocation(line: 186, column: 1, scope: !10541)
!10592 = distinct !DISubprogram(name: "CCM_ANALOG_GetVideoPllFreq", scope: !10453, file: !10453, line: 194, type: !10454, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2735, retainedNodes: !10593)
!10593 = !{!10594, !10595, !10596, !10597, !10598}
!10594 = !DILocalVariable(name: "base", arg: 1, scope: !10592, file: !10453, line: 194, type: !2748)
!10595 = !DILocalVariable(name: "divSelect", scope: !10592, file: !10453, line: 196, type: !169)
!10596 = !DILocalVariable(name: "divPostSelect", scope: !10592, file: !10453, line: 196, type: !169)
!10597 = !DILocalVariable(name: "divTestSelect", scope: !10592, file: !10453, line: 196, type: !169)
!10598 = !DILocalVariable(name: "factor", scope: !10592, file: !10453, line: 197, type: !2811)
!10599 = !DILocation(line: 0, scope: !10592)
!10600 = !DILocation(line: 199, column: 9, scope: !10601)
!10601 = distinct !DILexicalBlock(scope: !10592, file: !10453, line: 199, column: 9)
!10602 = !DILocation(line: 199, column: 9, scope: !10592)
!10603 = !DILocation(line: 202, column: 17, scope: !10592)
!10604 = !DILocation(line: 203, column: 22, scope: !10592)
!10605 = !DILocation(line: 203, column: 101, scope: !10592)
!10606 = !DILocation(line: 203, column: 21, scope: !10592)
!10607 = !DILocation(line: 205, column: 22, scope: !10592)
!10608 = !DILocation(line: 205, column: 104, scope: !10592)
!10609 = !DILocation(line: 205, column: 21, scope: !10592)
!10610 = !DILocation(line: 208, column: 5, scope: !10592)
!10611 = !DILocation(line: 222, column: 5, scope: !10592)
!10612 = !DILocation(line: 236, column: 9, scope: !10613)
!10613 = distinct !DILexicalBlock(scope: !10592, file: !10453, line: 236, column: 9)
!10614 = !DILocation(line: 236, column: 43, scope: !10613)
!10615 = !DILocation(line: 236, column: 9, scope: !10592)
!10616 = !DILocation(line: 238, column: 27, scope: !10617)
!10617 = distinct !DILexicalBlock(scope: !10613, file: !10453, line: 237, column: 5)
!10618 = !DILocation(line: 238, column: 61, scope: !10617)
!10619 = !DILocation(line: 238, column: 19, scope: !10617)
!10620 = !DILocation(line: 239, column: 27, scope: !10617)
!10621 = !DILocation(line: 239, column: 64, scope: !10617)
!10622 = !DILocation(line: 239, column: 19, scope: !10617)
!10623 = !DILocation(line: 238, column: 99, scope: !10617)
!10624 = !DILocation(line: 240, column: 27, scope: !10617)
!10625 = !DILocation(line: 240, column: 62, scope: !10617)
!10626 = !DILocation(line: 240, column: 19, scope: !10617)
!10627 = !DILocation(line: 239, column: 102, scope: !10617)
!10628 = !DILocation(line: 241, column: 40, scope: !10617)
!10629 = !DILocation(line: 241, column: 58, scope: !10617)
!10630 = !DILocation(line: 241, column: 27, scope: !10617)
!10631 = !DILocation(line: 241, column: 79, scope: !10617)
!10632 = !DILocation(line: 241, column: 89, scope: !10617)
!10633 = !DILocation(line: 241, column: 76, scope: !10617)
!10634 = !DILocation(line: 241, column: 16, scope: !10617)
!10635 = !DILocation(line: 241, column: 9, scope: !10617)
!10636 = !DILocation(line: 245, column: 29, scope: !10637)
!10637 = distinct !DILexicalBlock(scope: !10613, file: !10453, line: 244, column: 5)
!10638 = !DILocation(line: 245, column: 47, scope: !10637)
!10639 = !DILocation(line: 245, column: 67, scope: !10637)
!10640 = !DILocation(line: 245, column: 65, scope: !10637)
!10641 = !DILocation(line: 245, column: 9, scope: !10637)
!10642 = !DILocation(line: 247, column: 1, scope: !10592)
!10643 = distinct !DISubprogram(name: "CCM_ANALOG_GetPfdFreq", scope: !10453, file: !10453, line: 255, type: !10644, scopeLine: 256, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2735, retainedNodes: !10646)
!10644 = !DISubroutineType(types: !10645)
!10645 = !{!113, !2748, !113}
!10646 = !{!10647, !10648, !10649, !10650}
!10647 = !DILocalVariable(name: "base", arg: 1, scope: !10643, file: !10453, line: 255, type: !2748)
!10648 = !DILocalVariable(name: "pfdFrac", arg: 2, scope: !10643, file: !10453, line: 255, type: !113)
!10649 = !DILocalVariable(name: "main", scope: !10643, file: !10453, line: 257, type: !113)
!10650 = !DILocalVariable(name: "frac", scope: !10643, file: !10453, line: 257, type: !113)
!10651 = !DILocation(line: 0, scope: !10643)
!10652 = !DILocation(line: 260, column: 5, scope: !10653)
!10653 = distinct !DILexicalBlock(scope: !10654, file: !10453, line: 260, column: 5)
!10654 = distinct !DILexicalBlock(scope: !10643, file: !10453, line: 260, column: 5)
!10655 = !DILocation(line: 260, column: 5, scope: !10654)
!10656 = !DILocation(line: 260, column: 5, scope: !10657)
!10657 = distinct !DILexicalBlock(scope: !10653, file: !10453, line: 260, column: 5)
!10658 = !DILocation(line: 262, column: 12, scope: !10643)
!10659 = !DILocation(line: 263, column: 12, scope: !10643)
!10660 = !DILocation(line: 265, column: 17, scope: !10643)
!10661 = !DILocation(line: 265, column: 24, scope: !10643)
!10662 = !DILocation(line: 265, column: 5, scope: !10643)
!10663 = distinct !DISubprogram(name: "CCM_ANALOG_GetPfdFrac", scope: !2739, file: !2739, line: 373, type: !10644, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2735, retainedNodes: !10664)
!10664 = !{!10665, !10666}
!10665 = !DILocalVariable(name: "base", arg: 1, scope: !10663, file: !2739, line: 373, type: !2748)
!10666 = !DILocalVariable(name: "pfdFrac", arg: 2, scope: !10663, file: !2739, line: 373, type: !113)
!10667 = !DILocation(line: 0, scope: !10663)
!10668 = !DILocation(line: 375, column: 13, scope: !10663)
!10669 = !DILocation(line: 375, column: 52, scope: !10663)
!10670 = !DILocation(line: 375, column: 49, scope: !10663)
!10671 = !DILocation(line: 375, column: 85, scope: !10663)
!10672 = !DILocation(line: 375, column: 5, scope: !10663)
!10673 = distinct !DISubprogram(name: "GPIO_Init", scope: !10674, file: !10674, line: 47, type: !10675, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2812, retainedNodes: !10699)
!10674 = !DIFile(filename: "modules/hal/nxp/imx/drivers/gpio_imx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10675 = !DISubroutineType(types: !10676)
!10676 = !{null, !10677, !10689}
!10677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10678, size: 32)
!10678 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_Type", file: !734, line: 19729, baseType: !10679)
!10679 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !734, line: 19720, size: 256, elements: !10680)
!10680 = !{!10681, !10682, !10683, !10684, !10685, !10686, !10687, !10688}
!10681 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !10679, file: !734, line: 19721, baseType: !738, size: 32)
!10682 = !DIDerivedType(tag: DW_TAG_member, name: "GDIR", scope: !10679, file: !734, line: 19722, baseType: !738, size: 32, offset: 32)
!10683 = !DIDerivedType(tag: DW_TAG_member, name: "PSR", scope: !10679, file: !734, line: 19723, baseType: !809, size: 32, offset: 64)
!10684 = !DIDerivedType(tag: DW_TAG_member, name: "ICR1", scope: !10679, file: !734, line: 19724, baseType: !738, size: 32, offset: 96)
!10685 = !DIDerivedType(tag: DW_TAG_member, name: "ICR2", scope: !10679, file: !734, line: 19725, baseType: !738, size: 32, offset: 128)
!10686 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !10679, file: !734, line: 19726, baseType: !738, size: 32, offset: 160)
!10687 = !DIDerivedType(tag: DW_TAG_member, name: "ISR", scope: !10679, file: !734, line: 19727, baseType: !738, size: 32, offset: 192)
!10688 = !DIDerivedType(tag: DW_TAG_member, name: "EDGE_SEL", scope: !10679, file: !734, line: 19728, baseType: !738, size: 32, offset: 224)
!10689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10690, size: 32)
!10690 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10691)
!10691 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_init_config_t", file: !1006, line: 78, baseType: !10692)
!10692 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_gpio_init_config", file: !1006, line: 73, size: 96, elements: !10693)
!10693 = !{!10694, !10695, !10697}
!10694 = !DIDerivedType(tag: DW_TAG_member, name: "pin", scope: !10692, file: !1006, line: 75, baseType: !113, size: 32)
!10695 = !DIDerivedType(tag: DW_TAG_member, name: "direction", scope: !10692, file: !1006, line: 76, baseType: !10696, size: 32, offset: 32)
!10696 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_direction_t", file: !1006, line: 53, baseType: !2815)
!10697 = !DIDerivedType(tag: DW_TAG_member, name: "interruptMode", scope: !10692, file: !1006, line: 77, baseType: !10698, size: 32, offset: 64)
!10698 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_interrupt_mode_t", file: !1006, line: 63, baseType: !2819)
!10699 = !{!10700, !10701, !10702, !10703}
!10700 = !DILocalVariable(name: "base", arg: 1, scope: !10673, file: !10674, line: 47, type: !10677)
!10701 = !DILocalVariable(name: "initConfig", arg: 2, scope: !10673, file: !10674, line: 47, type: !10689)
!10702 = !DILocalVariable(name: "pin", scope: !10673, file: !10674, line: 49, type: !113)
!10703 = !DILocalVariable(name: "icr", scope: !10673, file: !10674, line: 50, type: !858)
!10704 = !DILocation(line: 0, scope: !10673)
!10705 = !DILocation(line: 53, column: 5, scope: !10673)
!10706 = !DILocation(line: 53, column: 24, scope: !10673)
!10707 = !DILocation(line: 54, column: 2, scope: !10673)
!10708 = !DILocation(line: 54, column: 26, scope: !10673)
!10709 = !DILocation(line: 57, column: 23, scope: !10673)
!10710 = !DILocation(line: 60, column: 21, scope: !10711)
!10711 = distinct !DILexicalBlock(scope: !10673, file: !10674, line: 60, column: 9)
!10712 = !DILocation(line: 60, column: 31, scope: !10711)
!10713 = !DILocation(line: 0, scope: !10711)
!10714 = !DILocation(line: 60, column: 9, scope: !10673)
!10715 = !DILocation(line: 61, column: 9, scope: !10711)
!10716 = !DILocation(line: 61, column: 29, scope: !10711)
!10717 = !DILocation(line: 63, column: 32, scope: !10711)
!10718 = !DILocation(line: 63, column: 9, scope: !10711)
!10719 = !DILocation(line: 63, column: 29, scope: !10711)
!10720 = !DILocation(line: 66, column: 12, scope: !10721)
!10721 = distinct !DILexicalBlock(scope: !10673, file: !10674, line: 66, column: 8)
!10722 = !DILocation(line: 66, column: 8, scope: !10673)
!10723 = !DILocation(line: 73, column: 24, scope: !10673)
!10724 = !DILocation(line: 73, column: 5, scope: !10673)
!10725 = !DILocation(line: 77, column: 30, scope: !10726)
!10726 = distinct !DILexicalBlock(scope: !10727, file: !10674, line: 76, column: 9)
!10727 = distinct !DILexicalBlock(scope: !10673, file: !10674, line: 74, column: 5)
!10728 = !DILocation(line: 77, column: 26, scope: !10726)
!10729 = !DILocation(line: 77, column: 21, scope: !10726)
!10730 = !DILocation(line: 77, column: 18, scope: !10726)
!10731 = !DILocation(line: 78, column: 13, scope: !10726)
!10732 = !DILocation(line: 82, column: 21, scope: !10733)
!10733 = distinct !DILexicalBlock(scope: !10727, file: !10674, line: 81, column: 9)
!10734 = !DILocation(line: 82, column: 38, scope: !10733)
!10735 = !DILocation(line: 82, column: 34, scope: !10733)
!10736 = !DILocation(line: 82, column: 29, scope: !10733)
!10737 = !DILocation(line: 82, column: 26, scope: !10733)
!10738 = !DILocation(line: 82, column: 53, scope: !10733)
!10739 = !DILocation(line: 82, column: 47, scope: !10733)
!10740 = !DILocation(line: 83, column: 13, scope: !10733)
!10741 = !DILocation(line: 87, column: 21, scope: !10742)
!10742 = distinct !DILexicalBlock(scope: !10727, file: !10674, line: 86, column: 9)
!10743 = !DILocation(line: 87, column: 38, scope: !10742)
!10744 = !DILocation(line: 87, column: 34, scope: !10742)
!10745 = !DILocation(line: 87, column: 29, scope: !10742)
!10746 = !DILocation(line: 87, column: 26, scope: !10742)
!10747 = !DILocation(line: 87, column: 53, scope: !10742)
!10748 = !DILocation(line: 87, column: 47, scope: !10742)
!10749 = !DILocation(line: 88, column: 13, scope: !10742)
!10750 = !DILocation(line: 92, column: 29, scope: !10751)
!10751 = distinct !DILexicalBlock(scope: !10727, file: !10674, line: 91, column: 9)
!10752 = !DILocation(line: 92, column: 25, scope: !10751)
!10753 = !DILocation(line: 92, column: 18, scope: !10751)
!10754 = !DILocation(line: 93, column: 13, scope: !10751)
!10755 = !DILocation(line: 0, scope: !10727)
!10756 = !DILocation(line: 100, column: 1, scope: !10673)
!10757 = distinct !DISubprogram(name: "GPIO_WritePinOutput", scope: !10674, file: !10674, line: 111, type: !10758, scopeLine: 112, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2812, retainedNodes: !10761)
!10758 = !DISubroutineType(types: !10759)
!10759 = !{null, !10677, !113, !10760}
!10760 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_action_t", file: !1006, line: 70, baseType: !1005)
!10761 = !{!10762, !10763, !10764}
!10762 = !DILocalVariable(name: "base", arg: 1, scope: !10757, file: !10674, line: 111, type: !10677)
!10763 = !DILocalVariable(name: "pin", arg: 2, scope: !10757, file: !10674, line: 111, type: !113)
!10764 = !DILocalVariable(name: "pinVal", arg: 3, scope: !10757, file: !10674, line: 111, type: !10760)
!10765 = !DILocation(line: 0, scope: !10757)
!10766 = !DILocation(line: 113, column: 5, scope: !10767)
!10767 = distinct !DILexicalBlock(scope: !10768, file: !10674, line: 113, column: 5)
!10768 = distinct !DILexicalBlock(scope: !10757, file: !10674, line: 113, column: 5)
!10769 = !DILocation(line: 113, column: 5, scope: !10768)
!10770 = !DILocation(line: 113, column: 5, scope: !10771)
!10771 = distinct !DILexicalBlock(scope: !10767, file: !10674, line: 113, column: 5)
!10772 = !DILocation(line: 114, column: 16, scope: !10773)
!10773 = distinct !DILexicalBlock(scope: !10757, file: !10674, line: 114, column: 9)
!10774 = !DILocation(line: 0, scope: !10773)
!10775 = !DILocation(line: 114, column: 9, scope: !10757)
!10776 = !DILocation(line: 116, column: 9, scope: !10777)
!10777 = distinct !DILexicalBlock(scope: !10773, file: !10674, line: 115, column: 5)
!10778 = !DILocation(line: 116, column: 27, scope: !10777)
!10779 = !DILocation(line: 117, column: 5, scope: !10777)
!10780 = !DILocation(line: 120, column: 30, scope: !10781)
!10781 = distinct !DILexicalBlock(scope: !10773, file: !10674, line: 119, column: 5)
!10782 = !DILocation(line: 120, column: 9, scope: !10781)
!10783 = !DILocation(line: 120, column: 27, scope: !10781)
!10784 = !DILocation(line: 122, column: 1, scope: !10757)
!10785 = distinct !DISubprogram(name: "GPIO_SetPinIntMode", scope: !10674, file: !10674, line: 133, type: !10786, scopeLine: 134, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2812, retainedNodes: !10788)
!10786 = !DISubroutineType(types: !10787)
!10787 = !{null, !10677, !113, !911}
!10788 = !{!10789, !10790, !10791}
!10789 = !DILocalVariable(name: "base", arg: 1, scope: !10785, file: !10674, line: 133, type: !10677)
!10790 = !DILocalVariable(name: "pin", arg: 2, scope: !10785, file: !10674, line: 133, type: !113)
!10791 = !DILocalVariable(name: "enable", arg: 3, scope: !10785, file: !10674, line: 133, type: !911)
!10792 = !DILocation(line: 0, scope: !10785)
!10793 = !DILocation(line: 135, column: 5, scope: !10794)
!10794 = distinct !DILexicalBlock(scope: !10795, file: !10674, line: 135, column: 5)
!10795 = distinct !DILexicalBlock(scope: !10785, file: !10674, line: 135, column: 5)
!10796 = !DILocation(line: 135, column: 5, scope: !10795)
!10797 = !DILocation(line: 135, column: 5, scope: !10798)
!10798 = distinct !DILexicalBlock(scope: !10794, file: !10674, line: 135, column: 5)
!10799 = !DILocation(line: 0, scope: !10800)
!10800 = distinct !DILexicalBlock(scope: !10785, file: !10674, line: 137, column: 8)
!10801 = !DILocation(line: 137, column: 8, scope: !10785)
!10802 = !DILocation(line: 138, column: 9, scope: !10800)
!10803 = !DILocation(line: 138, column: 28, scope: !10800)
!10804 = !DILocation(line: 140, column: 31, scope: !10800)
!10805 = !DILocation(line: 140, column: 9, scope: !10800)
!10806 = !DILocation(line: 140, column: 28, scope: !10800)
!10807 = !DILocation(line: 141, column: 1, scope: !10785)
!10808 = distinct !DISubprogram(name: "GPIO_SetIntEdgeSelect", scope: !10674, file: !10674, line: 150, type: !10786, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2812, retainedNodes: !10809)
!10809 = !{!10810, !10811, !10812}
!10810 = !DILocalVariable(name: "base", arg: 1, scope: !10808, file: !10674, line: 150, type: !10677)
!10811 = !DILocalVariable(name: "pin", arg: 2, scope: !10808, file: !10674, line: 150, type: !113)
!10812 = !DILocalVariable(name: "enable", arg: 3, scope: !10808, file: !10674, line: 150, type: !911)
!10813 = !DILocation(line: 0, scope: !10808)
!10814 = !DILocation(line: 152, column: 5, scope: !10815)
!10815 = distinct !DILexicalBlock(scope: !10816, file: !10674, line: 152, column: 5)
!10816 = distinct !DILexicalBlock(scope: !10808, file: !10674, line: 152, column: 5)
!10817 = !DILocation(line: 152, column: 5, scope: !10816)
!10818 = !DILocation(line: 152, column: 5, scope: !10819)
!10819 = distinct !DILexicalBlock(scope: !10815, file: !10674, line: 152, column: 5)
!10820 = !DILocation(line: 0, scope: !10821)
!10821 = distinct !DILexicalBlock(scope: !10808, file: !10674, line: 154, column: 8)
!10822 = !DILocation(line: 154, column: 8, scope: !10808)
!10823 = !DILocation(line: 155, column: 9, scope: !10821)
!10824 = !DILocation(line: 155, column: 33, scope: !10821)
!10825 = !DILocation(line: 157, column: 36, scope: !10821)
!10826 = !DILocation(line: 157, column: 9, scope: !10821)
!10827 = !DILocation(line: 157, column: 33, scope: !10821)
!10828 = !DILocation(line: 158, column: 1, scope: !10808)
!10829 = distinct !DISubprogram(name: "UART_Init", scope: !10830, file: !10830, line: 47, type: !10831, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2826, retainedNodes: !10867)
!10830 = !DIFile(filename: "modules/hal/nxp/imx/drivers/uart_imx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10831 = !DISubroutineType(types: !10832)
!10832 = !{null, !10833, !10856}
!10833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10834, size: 32)
!10834 = !DIDerivedType(tag: DW_TAG_typedef, name: "UART_Type", file: !734, line: 41342, baseType: !10835)
!10835 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !734, line: 41322, size: 1504, elements: !10836)
!10836 = !{!10837, !10838, !10839, !10840, !10841, !10842, !10843, !10844, !10845, !10846, !10847, !10848, !10849, !10850, !10851, !10852, !10853, !10854, !10855}
!10837 = !DIDerivedType(tag: DW_TAG_member, name: "URXD", scope: !10835, file: !734, line: 41323, baseType: !809, size: 32)
!10838 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !10835, file: !734, line: 41324, baseType: !1359, size: 480, offset: 32)
!10839 = !DIDerivedType(tag: DW_TAG_member, name: "UTXD", scope: !10835, file: !734, line: 41325, baseType: !738, size: 32, offset: 512)
!10840 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !10835, file: !734, line: 41326, baseType: !1359, size: 480, offset: 544)
!10841 = !DIDerivedType(tag: DW_TAG_member, name: "UCR1", scope: !10835, file: !734, line: 41327, baseType: !738, size: 32, offset: 1024)
!10842 = !DIDerivedType(tag: DW_TAG_member, name: "UCR2", scope: !10835, file: !734, line: 41328, baseType: !738, size: 32, offset: 1056)
!10843 = !DIDerivedType(tag: DW_TAG_member, name: "UCR3", scope: !10835, file: !734, line: 41329, baseType: !738, size: 32, offset: 1088)
!10844 = !DIDerivedType(tag: DW_TAG_member, name: "UCR4", scope: !10835, file: !734, line: 41330, baseType: !738, size: 32, offset: 1120)
!10845 = !DIDerivedType(tag: DW_TAG_member, name: "UFCR", scope: !10835, file: !734, line: 41331, baseType: !738, size: 32, offset: 1152)
!10846 = !DIDerivedType(tag: DW_TAG_member, name: "USR1", scope: !10835, file: !734, line: 41332, baseType: !738, size: 32, offset: 1184)
!10847 = !DIDerivedType(tag: DW_TAG_member, name: "USR2", scope: !10835, file: !734, line: 41333, baseType: !738, size: 32, offset: 1216)
!10848 = !DIDerivedType(tag: DW_TAG_member, name: "UESC", scope: !10835, file: !734, line: 41334, baseType: !738, size: 32, offset: 1248)
!10849 = !DIDerivedType(tag: DW_TAG_member, name: "UTIM", scope: !10835, file: !734, line: 41335, baseType: !738, size: 32, offset: 1280)
!10850 = !DIDerivedType(tag: DW_TAG_member, name: "UBIR", scope: !10835, file: !734, line: 41336, baseType: !738, size: 32, offset: 1312)
!10851 = !DIDerivedType(tag: DW_TAG_member, name: "UBMR", scope: !10835, file: !734, line: 41337, baseType: !738, size: 32, offset: 1344)
!10852 = !DIDerivedType(tag: DW_TAG_member, name: "UBRC", scope: !10835, file: !734, line: 41338, baseType: !809, size: 32, offset: 1376)
!10853 = !DIDerivedType(tag: DW_TAG_member, name: "ONEMS", scope: !10835, file: !734, line: 41339, baseType: !738, size: 32, offset: 1408)
!10854 = !DIDerivedType(tag: DW_TAG_member, name: "UTS", scope: !10835, file: !734, line: 41340, baseType: !738, size: 32, offset: 1440)
!10855 = !DIDerivedType(tag: DW_TAG_member, name: "UMCR", scope: !10835, file: !734, line: 41341, baseType: !738, size: 32, offset: 1472)
!10856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10857, size: 32)
!10857 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10858)
!10858 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_init_config_t", file: !1189, line: 57, baseType: !10859)
!10859 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_uart_init_config", file: !1189, line: 49, size: 192, elements: !10860)
!10860 = !{!10861, !10862, !10863, !10864, !10865, !10866}
!10861 = !DIDerivedType(tag: DW_TAG_member, name: "clockRate", scope: !10859, file: !1189, line: 51, baseType: !113, size: 32)
!10862 = !DIDerivedType(tag: DW_TAG_member, name: "baudRate", scope: !10859, file: !1189, line: 52, baseType: !113, size: 32, offset: 32)
!10863 = !DIDerivedType(tag: DW_TAG_member, name: "wordLength", scope: !10859, file: !1189, line: 53, baseType: !113, size: 32, offset: 64)
!10864 = !DIDerivedType(tag: DW_TAG_member, name: "stopBitNum", scope: !10859, file: !1189, line: 54, baseType: !113, size: 32, offset: 96)
!10865 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !10859, file: !1189, line: 55, baseType: !113, size: 32, offset: 128)
!10866 = !DIDerivedType(tag: DW_TAG_member, name: "direction", scope: !10859, file: !1189, line: 56, baseType: !113, size: 32, offset: 160)
!10867 = !{!10868, !10869}
!10868 = !DILocalVariable(name: "base", arg: 1, scope: !10829, file: !10830, line: 47, type: !10833)
!10869 = !DILocalVariable(name: "initConfig", arg: 2, scope: !10829, file: !10830, line: 47, type: !10856)
!10870 = !DILocation(line: 0, scope: !10829)
!10871 = !DILocation(line: 49, column: 5, scope: !10872)
!10872 = distinct !DILexicalBlock(scope: !10873, file: !10830, line: 49, column: 5)
!10873 = distinct !DILexicalBlock(scope: !10829, file: !10830, line: 49, column: 5)
!10874 = !DILocation(line: 49, column: 5, scope: !10873)
!10875 = !DILocation(line: 49, column: 5, scope: !10876)
!10876 = distinct !DILexicalBlock(scope: !10872, file: !10830, line: 49, column: 5)
!10877 = !DILocation(line: 52, column: 5, scope: !10829)
!10878 = !DILocation(line: 52, column: 25, scope: !10829)
!10879 = !DILocation(line: 55, column: 5, scope: !10829)
!10880 = !DILocation(line: 60, column: 41, scope: !10829)
!10881 = !DILocation(line: 61, column: 41, scope: !10829)
!10882 = !DILocation(line: 62, column: 41, scope: !10829)
!10883 = !DILocation(line: 63, column: 41, scope: !10829)
!10884 = !DILocation(line: 60, column: 5, scope: !10829)
!10885 = !DILocation(line: 60, column: 25, scope: !10829)
!10886 = !DILocation(line: 61, column: 52, scope: !10829)
!10887 = !DILocation(line: 62, column: 52, scope: !10829)
!10888 = !DILocation(line: 63, column: 52, scope: !10829)
!10889 = !DILocation(line: 68, column: 5, scope: !10829)
!10890 = !DILocation(line: 68, column: 25, scope: !10829)
!10891 = !DILocation(line: 72, column: 40, scope: !10829)
!10892 = !DILocation(line: 72, column: 63, scope: !10829)
!10893 = !DILocation(line: 72, column: 5, scope: !10829)
!10894 = !DILocation(line: 73, column: 1, scope: !10829)
!10895 = distinct !DISubprogram(name: "UART_Deinit", scope: !10830, file: !10830, line: 82, type: !10896, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2826, retainedNodes: !10898)
!10896 = !DISubroutineType(types: !10897)
!10897 = !{null, !10833}
!10898 = !{!10899}
!10899 = !DILocalVariable(name: "base", arg: 1, scope: !10895, file: !10830, line: 82, type: !10833)
!10900 = !DILocation(line: 0, scope: !10895)
!10901 = !DILocation(line: 85, column: 5, scope: !10895)
!10902 = !DILocation(line: 85, column: 25, scope: !10895)
!10903 = !DILocation(line: 88, column: 26, scope: !10895)
!10904 = !DILocation(line: 89, column: 5, scope: !10895)
!10905 = !DILocation(line: 89, column: 26, scope: !10895)
!10906 = !DILocation(line: 90, column: 5, scope: !10895)
!10907 = !DILocation(line: 90, column: 26, scope: !10895)
!10908 = !DILocation(line: 93, column: 5, scope: !10895)
!10909 = !DILocation(line: 93, column: 26, scope: !10895)
!10910 = !DILocation(line: 94, column: 5, scope: !10895)
!10911 = !DILocation(line: 94, column: 26, scope: !10895)
!10912 = !DILocation(line: 95, column: 5, scope: !10895)
!10913 = !DILocation(line: 95, column: 26, scope: !10895)
!10914 = !DILocation(line: 96, column: 5, scope: !10895)
!10915 = !DILocation(line: 96, column: 26, scope: !10895)
!10916 = !DILocation(line: 97, column: 5, scope: !10895)
!10917 = !DILocation(line: 97, column: 26, scope: !10895)
!10918 = !DILocation(line: 98, column: 5, scope: !10895)
!10919 = !DILocation(line: 98, column: 26, scope: !10895)
!10920 = !DILocation(line: 99, column: 5, scope: !10895)
!10921 = !DILocation(line: 99, column: 26, scope: !10895)
!10922 = !DILocation(line: 103, column: 25, scope: !10895)
!10923 = !DILocation(line: 104, column: 5, scope: !10895)
!10924 = !DILocation(line: 104, column: 14, scope: !10895)
!10925 = !DILocation(line: 104, column: 34, scope: !10895)
!10926 = !DILocation(line: 104, column: 12, scope: !10895)
!10927 = distinct !{!10927, !10923, !10928}
!10928 = !DILocation(line: 104, column: 57, scope: !10895)
!10929 = !DILocation(line: 105, column: 1, scope: !10895)
!10930 = distinct !DISubprogram(name: "UART_SetBaudRate", scope: !10830, file: !10830, line: 113, type: !10931, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2826, retainedNodes: !10933)
!10931 = !DISubroutineType(types: !10932)
!10932 = !{null, !10833, !113, !113}
!10933 = !{!10934, !10935, !10936, !10937, !10938, !10939, !10940, !10941, !10942, !10945, !10946}
!10934 = !DILocalVariable(name: "base", arg: 1, scope: !10930, file: !10830, line: 113, type: !10833)
!10935 = !DILocalVariable(name: "clockRate", arg: 2, scope: !10930, file: !10830, line: 113, type: !113)
!10936 = !DILocalVariable(name: "baudRate", arg: 3, scope: !10930, file: !10830, line: 113, type: !113)
!10937 = !DILocalVariable(name: "numerator", scope: !10930, file: !10830, line: 115, type: !113)
!10938 = !DILocalVariable(name: "denominator", scope: !10930, file: !10830, line: 116, type: !113)
!10939 = !DILocalVariable(name: "divisor", scope: !10930, file: !10830, line: 117, type: !113)
!10940 = !DILocalVariable(name: "refFreqDiv", scope: !10930, file: !10830, line: 118, type: !113)
!10941 = !DILocalVariable(name: "divider", scope: !10930, file: !10830, line: 119, type: !113)
!10942 = !DILocalVariable(name: "m", scope: !10943, file: !10830, line: 141, type: !113)
!10943 = distinct !DILexicalBlock(scope: !10944, file: !10830, line: 140, column: 5)
!10944 = distinct !DILexicalBlock(scope: !10930, file: !10830, line: 138, column: 9)
!10945 = !DILocalVariable(name: "n", scope: !10943, file: !10830, line: 142, type: !113)
!10946 = !DILocalVariable(name: "max", scope: !10943, file: !10830, line: 143, type: !113)
!10947 = !DILocation(line: 0, scope: !10930)
!10948 = !DILocation(line: 123, column: 28, scope: !10930)
!10949 = !DILocation(line: 126, column: 24, scope: !10930)
!10950 = !DILocation(line: 126, column: 5, scope: !10930)
!10951 = !DILocation(line: 129, column: 33, scope: !10952)
!10952 = distinct !DILexicalBlock(scope: !10930, file: !10830, line: 127, column: 5)
!10953 = distinct !{!10953, !10950, !10954}
!10954 = !DILocation(line: 131, column: 5, scope: !10930)
!10955 = !DILocation(line: 133, column: 27, scope: !10930)
!10956 = !DILocation(line: 134, column: 35, scope: !10930)
!10957 = !DILocation(line: 138, column: 20, scope: !10944)
!10958 = !DILocation(line: 138, column: 48, scope: !10944)
!10959 = !DILocation(line: 141, column: 33, scope: !10943)
!10960 = !DILocation(line: 141, column: 38, scope: !10943)
!10961 = !DILocation(line: 141, column: 65, scope: !10943)
!10962 = !DILocation(line: 0, scope: !10943)
!10963 = !DILocation(line: 142, column: 35, scope: !10943)
!10964 = !DILocation(line: 142, column: 40, scope: !10943)
!10965 = !DILocation(line: 142, column: 61, scope: !10943)
!10966 = !DILocation(line: 143, column: 26, scope: !10943)
!10967 = !DILocation(line: 143, column: 24, scope: !10943)
!10968 = !DILocation(line: 144, column: 19, scope: !10943)
!10969 = !DILocation(line: 145, column: 21, scope: !10943)
!10970 = !DILocation(line: 146, column: 15, scope: !10971)
!10971 = distinct !DILexicalBlock(scope: !10943, file: !10830, line: 146, column: 13)
!10972 = !DILocation(line: 146, column: 13, scope: !10943)
!10973 = !DILocation(line: 148, column: 15, scope: !10974)
!10974 = distinct !DILexicalBlock(scope: !10943, file: !10830, line: 148, column: 13)
!10975 = !DILocation(line: 148, column: 13, scope: !10943)
!10976 = !DILocation(line: 150, column: 5, scope: !10943)
!10977 = !DILocation(line: 151, column: 26, scope: !10930)
!10978 = !DILocation(line: 151, column: 31, scope: !10930)
!10979 = !DILocation(line: 151, column: 52, scope: !10930)
!10980 = !DILocation(line: 153, column: 5, scope: !10930)
!10981 = !DILocation(line: 0, scope: !10982)
!10982 = distinct !DILexicalBlock(scope: !10930, file: !10830, line: 154, column: 5)
!10983 = !DILocation(line: 180, column: 5, scope: !10930)
!10984 = !DILocation(line: 180, column: 25, scope: !10930)
!10985 = !DILocation(line: 181, column: 25, scope: !10930)
!10986 = !DILocation(line: 182, column: 27, scope: !10930)
!10987 = !DILocation(line: 182, column: 5, scope: !10930)
!10988 = !DILocation(line: 182, column: 25, scope: !10930)
!10989 = !DILocation(line: 183, column: 27, scope: !10930)
!10990 = !DILocation(line: 183, column: 5, scope: !10930)
!10991 = !DILocation(line: 183, column: 25, scope: !10930)
!10992 = !DILocation(line: 184, column: 28, scope: !10930)
!10993 = !DILocation(line: 184, column: 5, scope: !10930)
!10994 = !DILocation(line: 184, column: 26, scope: !10930)
!10995 = !DILocation(line: 185, column: 1, scope: !10930)
!10996 = distinct !DISubprogram(name: "UART_SetInvertCmd", scope: !10830, file: !10830, line: 194, type: !10997, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2826, retainedNodes: !10999)
!10997 = !DISubroutineType(types: !10998)
!10998 = !{null, !10833, !113, !911}
!10999 = !{!11000, !11001, !11002}
!11000 = !DILocalVariable(name: "base", arg: 1, scope: !10996, file: !10830, line: 194, type: !10833)
!11001 = !DILocalVariable(name: "direction", arg: 2, scope: !10996, file: !10830, line: 194, type: !113)
!11002 = !DILocalVariable(name: "invert", arg: 3, scope: !10996, file: !10830, line: 194, type: !911)
!11003 = !DILocation(line: 0, scope: !10996)
!11004 = !DILocation(line: 196, column: 5, scope: !11005)
!11005 = distinct !DILexicalBlock(scope: !11006, file: !10830, line: 196, column: 5)
!11006 = distinct !DILexicalBlock(scope: !10996, file: !10830, line: 196, column: 5)
!11007 = !DILocation(line: 196, column: 5, scope: !11008)
!11008 = distinct !DILexicalBlock(scope: !11005, file: !10830, line: 196, column: 5)
!11009 = !DILocation(line: 198, column: 9, scope: !10996)
!11010 = !DILocation(line: 200, column: 13, scope: !11011)
!11011 = distinct !DILexicalBlock(scope: !11012, file: !10830, line: 199, column: 5)
!11012 = distinct !DILexicalBlock(scope: !10996, file: !10830, line: 198, column: 9)
!11013 = !DILocation(line: 201, column: 13, scope: !11014)
!11014 = distinct !DILexicalBlock(scope: !11011, file: !10830, line: 200, column: 13)
!11015 = !DILocation(line: 201, column: 33, scope: !11014)
!11016 = !DILocation(line: 202, column: 13, scope: !11011)
!11017 = !DILocation(line: 203, column: 13, scope: !11018)
!11018 = distinct !DILexicalBlock(scope: !11011, file: !10830, line: 202, column: 13)
!11019 = !DILocation(line: 203, column: 33, scope: !11018)
!11020 = !DILocation(line: 207, column: 13, scope: !11021)
!11021 = distinct !DILexicalBlock(scope: !11012, file: !10830, line: 206, column: 5)
!11022 = !DILocation(line: 208, column: 13, scope: !11023)
!11023 = distinct !DILexicalBlock(scope: !11021, file: !10830, line: 207, column: 13)
!11024 = !DILocation(line: 208, column: 33, scope: !11023)
!11025 = !DILocation(line: 209, column: 13, scope: !11021)
!11026 = !DILocation(line: 210, column: 13, scope: !11027)
!11027 = distinct !DILexicalBlock(scope: !11021, file: !10830, line: 209, column: 13)
!11028 = !DILocation(line: 210, column: 33, scope: !11027)
!11029 = !DILocation(line: 212, column: 1, scope: !10996)
!11030 = distinct !DISubprogram(name: "UART_SetDozeMode", scope: !10830, file: !10830, line: 224, type: !11031, scopeLine: 225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2826, retainedNodes: !11033)
!11031 = !DISubroutineType(types: !11032)
!11032 = !{null, !10833, !911}
!11033 = !{!11034, !11035}
!11034 = !DILocalVariable(name: "base", arg: 1, scope: !11030, file: !10830, line: 224, type: !10833)
!11035 = !DILocalVariable(name: "enable", arg: 2, scope: !11030, file: !10830, line: 224, type: !911)
!11036 = !DILocation(line: 0, scope: !11030)
!11037 = !DILocation(line: 0, scope: !11038)
!11038 = distinct !DILexicalBlock(scope: !11030, file: !10830, line: 226, column: 9)
!11039 = !DILocation(line: 226, column: 9, scope: !11030)
!11040 = !DILocation(line: 230, column: 1, scope: !11030)
!11041 = distinct !DISubprogram(name: "UART_SetLowPowerMode", scope: !10830, file: !10830, line: 239, type: !11031, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2826, retainedNodes: !11042)
!11042 = !{!11043, !11044}
!11043 = !DILocalVariable(name: "base", arg: 1, scope: !11041, file: !10830, line: 239, type: !10833)
!11044 = !DILocalVariable(name: "enable", arg: 2, scope: !11041, file: !10830, line: 239, type: !911)
!11045 = !DILocation(line: 0, scope: !11041)
!11046 = !DILocation(line: 0, scope: !11047)
!11047 = distinct !DILexicalBlock(scope: !11041, file: !10830, line: 241, column: 9)
!11048 = !DILocation(line: 241, column: 9, scope: !11041)
!11049 = !DILocation(line: 245, column: 1, scope: !11041)
!11050 = distinct !DISubprogram(name: "UART_SetIntCmd", scope: !10830, file: !10830, line: 258, type: !10997, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2826, retainedNodes: !11051)
!11051 = !{!11052, !11053, !11054, !11055, !11056}
!11052 = !DILocalVariable(name: "base", arg: 1, scope: !11050, file: !10830, line: 258, type: !10833)
!11053 = !DILocalVariable(name: "intSource", arg: 2, scope: !11050, file: !10830, line: 258, type: !113)
!11054 = !DILocalVariable(name: "enable", arg: 3, scope: !11050, file: !10830, line: 258, type: !911)
!11055 = !DILocalVariable(name: "uart_reg", scope: !11050, file: !10830, line: 260, type: !858)
!11056 = !DILocalVariable(name: "uart_mask", scope: !11050, file: !10830, line: 261, type: !113)
!11057 = !DILocation(line: 0, scope: !11050)
!11058 = !DILocation(line: 263, column: 29, scope: !11050)
!11059 = !DILocation(line: 263, column: 57, scope: !11050)
!11060 = !DILocation(line: 263, column: 44, scope: !11050)
!11061 = !DILocation(line: 263, column: 16, scope: !11050)
!11062 = !DILocation(line: 264, column: 34, scope: !11050)
!11063 = !DILocation(line: 264, column: 20, scope: !11050)
!11064 = !DILocation(line: 266, column: 9, scope: !11050)
!11065 = !DILocation(line: 267, column: 19, scope: !11066)
!11066 = distinct !DILexicalBlock(scope: !11050, file: !10830, line: 266, column: 9)
!11067 = !DILocation(line: 267, column: 9, scope: !11066)
!11068 = !DILocation(line: 269, column: 22, scope: !11066)
!11069 = !DILocation(line: 269, column: 19, scope: !11066)
!11070 = !DILocation(line: 0, scope: !11066)
!11071 = !DILocation(line: 270, column: 1, scope: !11050)
!11072 = distinct !DISubprogram(name: "UART_ClearStatusFlag", scope: !10830, file: !10830, line: 299, type: !11073, scopeLine: 300, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2826, retainedNodes: !11075)
!11073 = !DISubroutineType(types: !11074)
!11074 = !{null, !10833, !113}
!11075 = !{!11076, !11077, !11078, !11079}
!11076 = !DILocalVariable(name: "base", arg: 1, scope: !11072, file: !10830, line: 299, type: !10833)
!11077 = !DILocalVariable(name: "flag", arg: 2, scope: !11072, file: !10830, line: 299, type: !113)
!11078 = !DILocalVariable(name: "uart_reg", scope: !11072, file: !10830, line: 301, type: !858)
!11079 = !DILocalVariable(name: "uart_mask", scope: !11072, file: !10830, line: 302, type: !113)
!11080 = !DILocation(line: 0, scope: !11072)
!11081 = !DILocation(line: 304, column: 29, scope: !11072)
!11082 = !DILocation(line: 304, column: 52, scope: !11072)
!11083 = !DILocation(line: 304, column: 44, scope: !11072)
!11084 = !DILocation(line: 304, column: 16, scope: !11072)
!11085 = !DILocation(line: 305, column: 29, scope: !11072)
!11086 = !DILocation(line: 305, column: 20, scope: !11072)
!11087 = !DILocation(line: 308, column: 15, scope: !11072)
!11088 = !DILocation(line: 309, column: 1, scope: !11072)
!11089 = distinct !DISubprogram(name: "UART_SetDmaCmd", scope: !10830, file: !10830, line: 322, type: !10997, scopeLine: 323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2826, retainedNodes: !11090)
!11090 = !{!11091, !11092, !11093, !11094, !11095}
!11091 = !DILocalVariable(name: "base", arg: 1, scope: !11089, file: !10830, line: 322, type: !10833)
!11092 = !DILocalVariable(name: "dmaSource", arg: 2, scope: !11089, file: !10830, line: 322, type: !113)
!11093 = !DILocalVariable(name: "enable", arg: 3, scope: !11089, file: !10830, line: 322, type: !911)
!11094 = !DILocalVariable(name: "uart_reg", scope: !11089, file: !10830, line: 324, type: !858)
!11095 = !DILocalVariable(name: "uart_mask", scope: !11089, file: !10830, line: 325, type: !113)
!11096 = !DILocation(line: 0, scope: !11089)
!11097 = !DILocation(line: 327, column: 29, scope: !11089)
!11098 = !DILocation(line: 327, column: 57, scope: !11089)
!11099 = !DILocation(line: 327, column: 44, scope: !11089)
!11100 = !DILocation(line: 327, column: 16, scope: !11089)
!11101 = !DILocation(line: 328, column: 34, scope: !11089)
!11102 = !DILocation(line: 328, column: 20, scope: !11089)
!11103 = !DILocation(line: 329, column: 9, scope: !11089)
!11104 = !DILocation(line: 330, column: 19, scope: !11105)
!11105 = distinct !DILexicalBlock(scope: !11089, file: !10830, line: 329, column: 9)
!11106 = !DILocation(line: 330, column: 9, scope: !11105)
!11107 = !DILocation(line: 332, column: 22, scope: !11105)
!11108 = !DILocation(line: 332, column: 19, scope: !11105)
!11109 = !DILocation(line: 0, scope: !11105)
!11110 = !DILocation(line: 333, column: 1, scope: !11089)
!11111 = distinct !DISubprogram(name: "UART_SetRtsFlowCtrlCmd", scope: !10830, file: !10830, line: 345, type: !11031, scopeLine: 346, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2826, retainedNodes: !11112)
!11112 = !{!11113, !11114}
!11113 = !DILocalVariable(name: "base", arg: 1, scope: !11111, file: !10830, line: 345, type: !10833)
!11114 = !DILocalVariable(name: "enable", arg: 2, scope: !11111, file: !10830, line: 345, type: !911)
!11115 = !DILocation(line: 0, scope: !11111)
!11116 = !DILocation(line: 0, scope: !11117)
!11117 = distinct !DILexicalBlock(scope: !11111, file: !10830, line: 347, column: 9)
!11118 = !DILocation(line: 347, column: 9, scope: !11111)
!11119 = !DILocation(line: 351, column: 1, scope: !11111)
!11120 = distinct !DISubprogram(name: "UART_SetCtsFlowCtrlCmd", scope: !10830, file: !10830, line: 362, type: !11031, scopeLine: 363, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2826, retainedNodes: !11121)
!11121 = !{!11122, !11123}
!11122 = !DILocalVariable(name: "base", arg: 1, scope: !11120, file: !10830, line: 362, type: !10833)
!11123 = !DILocalVariable(name: "enable", arg: 2, scope: !11120, file: !10830, line: 362, type: !911)
!11124 = !DILocation(line: 0, scope: !11120)
!11125 = !DILocation(line: 0, scope: !11126)
!11126 = distinct !DILexicalBlock(scope: !11120, file: !10830, line: 364, column: 9)
!11127 = !DILocation(line: 364, column: 9, scope: !11120)
!11128 = !DILocation(line: 368, column: 1, scope: !11120)
!11129 = distinct !DISubprogram(name: "UART_SetCtsPinLevel", scope: !10830, file: !10830, line: 379, type: !11031, scopeLine: 380, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2826, retainedNodes: !11130)
!11130 = !{!11131, !11132}
!11131 = !DILocalVariable(name: "base", arg: 1, scope: !11129, file: !10830, line: 379, type: !10833)
!11132 = !DILocalVariable(name: "active", arg: 2, scope: !11129, file: !10830, line: 379, type: !911)
!11133 = !DILocation(line: 0, scope: !11129)
!11134 = !DILocation(line: 0, scope: !11135)
!11135 = distinct !DILexicalBlock(scope: !11129, file: !10830, line: 381, column: 9)
!11136 = !DILocation(line: 381, column: 9, scope: !11129)
!11137 = !DILocation(line: 385, column: 1, scope: !11129)
!11138 = distinct !DISubprogram(name: "UART_SetModemMode", scope: !10830, file: !10830, line: 394, type: !11073, scopeLine: 395, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2826, retainedNodes: !11139)
!11139 = !{!11140, !11141}
!11140 = !DILocalVariable(name: "base", arg: 1, scope: !11138, file: !10830, line: 394, type: !10833)
!11141 = !DILocalVariable(name: "mode", arg: 2, scope: !11138, file: !10830, line: 394, type: !113)
!11142 = !DILocation(line: 0, scope: !11138)
!11143 = !DILocation(line: 396, column: 5, scope: !11144)
!11144 = distinct !DILexicalBlock(scope: !11145, file: !10830, line: 396, column: 5)
!11145 = distinct !DILexicalBlock(scope: !11138, file: !10830, line: 396, column: 5)
!11146 = !DILocation(line: 396, column: 5, scope: !11147)
!11147 = distinct !DILexicalBlock(scope: !11144, file: !10830, line: 396, column: 5)
!11148 = !DILocation(line: 0, scope: !11149)
!11149 = distinct !DILexicalBlock(scope: !11138, file: !10830, line: 398, column: 9)
!11150 = !DILocation(line: 398, column: 9, scope: !11138)
!11151 = !DILocation(line: 402, column: 1, scope: !11138)
!11152 = distinct !DISubprogram(name: "UART_SetDtrPinLevel", scope: !10830, file: !10830, line: 412, type: !11031, scopeLine: 413, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2826, retainedNodes: !11153)
!11153 = !{!11154, !11155}
!11154 = !DILocalVariable(name: "base", arg: 1, scope: !11152, file: !10830, line: 412, type: !10833)
!11155 = !DILocalVariable(name: "active", arg: 2, scope: !11152, file: !10830, line: 412, type: !911)
!11156 = !DILocation(line: 0, scope: !11152)
!11157 = !DILocation(line: 0, scope: !11158)
!11158 = distinct !DILexicalBlock(scope: !11152, file: !10830, line: 414, column: 9)
!11159 = !DILocation(line: 414, column: 9, scope: !11152)
!11160 = !DILocation(line: 418, column: 1, scope: !11152)
!11161 = distinct !DISubprogram(name: "UART_SetDcdPinLevel", scope: !10830, file: !10830, line: 427, type: !11031, scopeLine: 428, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2826, retainedNodes: !11162)
!11162 = !{!11163, !11164}
!11163 = !DILocalVariable(name: "base", arg: 1, scope: !11161, file: !10830, line: 427, type: !10833)
!11164 = !DILocalVariable(name: "active", arg: 2, scope: !11161, file: !10830, line: 427, type: !911)
!11165 = !DILocation(line: 0, scope: !11161)
!11166 = !DILocation(line: 0, scope: !11167)
!11167 = distinct !DILexicalBlock(scope: !11161, file: !10830, line: 429, column: 9)
!11168 = !DILocation(line: 429, column: 9, scope: !11161)
!11169 = !DILocation(line: 433, column: 1, scope: !11161)
!11170 = distinct !DISubprogram(name: "UART_SetRiPinLevel", scope: !10830, file: !10830, line: 442, type: !11031, scopeLine: 443, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2826, retainedNodes: !11171)
!11171 = !{!11172, !11173}
!11172 = !DILocalVariable(name: "base", arg: 1, scope: !11170, file: !10830, line: 442, type: !10833)
!11173 = !DILocalVariable(name: "active", arg: 2, scope: !11170, file: !10830, line: 442, type: !911)
!11174 = !DILocation(line: 0, scope: !11170)
!11175 = !DILocation(line: 0, scope: !11176)
!11176 = distinct !DILexicalBlock(scope: !11170, file: !10830, line: 444, column: 9)
!11177 = !DILocation(line: 444, column: 9, scope: !11170)
!11178 = !DILocation(line: 448, column: 1, scope: !11170)
!11179 = distinct !DISubprogram(name: "UART_Putchar9", scope: !10830, file: !10830, line: 460, type: !11180, scopeLine: 461, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2826, retainedNodes: !11182)
!11180 = !DISubroutineType(types: !11181)
!11181 = !{null, !10833, !183}
!11182 = !{!11183, !11184}
!11183 = !DILocalVariable(name: "base", arg: 1, scope: !11179, file: !10830, line: 460, type: !10833)
!11184 = !DILocalVariable(name: "data", arg: 2, scope: !11179, file: !10830, line: 460, type: !183)
!11185 = !DILocation(line: 0, scope: !11179)
!11186 = !DILocation(line: 462, column: 5, scope: !11187)
!11187 = distinct !DILexicalBlock(scope: !11188, file: !10830, line: 462, column: 5)
!11188 = distinct !DILexicalBlock(scope: !11179, file: !10830, line: 462, column: 5)
!11189 = !DILocation(line: 462, column: 5, scope: !11188)
!11190 = !DILocation(line: 462, column: 5, scope: !11191)
!11191 = distinct !DILexicalBlock(scope: !11187, file: !10830, line: 462, column: 5)
!11192 = !DILocation(line: 0, scope: !11193)
!11193 = distinct !DILexicalBlock(scope: !11179, file: !10830, line: 464, column: 9)
!11194 = !DILocation(line: 464, column: 9, scope: !11179)
!11195 = !DILocation(line: 468, column: 33, scope: !11179)
!11196 = !DILocation(line: 468, column: 5, scope: !11179)
!11197 = !DILocation(line: 468, column: 25, scope: !11179)
!11198 = !DILocation(line: 469, column: 1, scope: !11179)
!11199 = distinct !DISubprogram(name: "UART_Getchar9", scope: !10830, file: !10830, line: 478, type: !11200, scopeLine: 479, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2826, retainedNodes: !11202)
!11200 = !DISubroutineType(types: !11201)
!11201 = !{!183, !10833}
!11202 = !{!11203, !11204}
!11203 = !DILocalVariable(name: "base", arg: 1, scope: !11199, file: !10830, line: 478, type: !10833)
!11204 = !DILocalVariable(name: "rxData", scope: !11199, file: !10830, line: 480, type: !183)
!11205 = !DILocation(line: 0, scope: !11199)
!11206 = !DILocation(line: 480, column: 23, scope: !11199)
!11207 = !DILocation(line: 482, column: 9, scope: !11199)
!11208 = !DILocation(line: 491, column: 5, scope: !11199)
!11209 = distinct !DISubprogram(name: "UART_SetMultidropMode", scope: !10830, file: !10830, line: 501, type: !11031, scopeLine: 502, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2826, retainedNodes: !11210)
!11210 = !{!11211, !11212}
!11211 = !DILocalVariable(name: "base", arg: 1, scope: !11209, file: !10830, line: 501, type: !10833)
!11212 = !DILocalVariable(name: "enable", arg: 2, scope: !11209, file: !10830, line: 501, type: !911)
!11213 = !DILocation(line: 0, scope: !11209)
!11214 = !DILocation(line: 0, scope: !11215)
!11215 = distinct !DILexicalBlock(scope: !11209, file: !10830, line: 503, column: 9)
!11216 = !DILocation(line: 503, column: 9, scope: !11209)
!11217 = !DILocation(line: 507, column: 1, scope: !11209)
!11218 = distinct !DISubprogram(name: "UART_SetSlaveAddressDetectCmd", scope: !10830, file: !10830, line: 516, type: !11031, scopeLine: 517, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2826, retainedNodes: !11219)
!11219 = !{!11220, !11221}
!11220 = !DILocalVariable(name: "base", arg: 1, scope: !11218, file: !10830, line: 516, type: !10833)
!11221 = !DILocalVariable(name: "enable", arg: 2, scope: !11218, file: !10830, line: 516, type: !911)
!11222 = !DILocation(line: 0, scope: !11218)
!11223 = !DILocation(line: 0, scope: !11224)
!11224 = distinct !DILexicalBlock(scope: !11218, file: !10830, line: 518, column: 9)
!11225 = !DILocation(line: 518, column: 9, scope: !11218)
!11226 = !DILocation(line: 522, column: 1, scope: !11218)
!11227 = distinct !DISubprogram(name: "UART_SetIrDACmd", scope: !10830, file: !10830, line: 534, type: !11031, scopeLine: 535, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2826, retainedNodes: !11228)
!11228 = !{!11229, !11230}
!11229 = !DILocalVariable(name: "base", arg: 1, scope: !11227, file: !10830, line: 534, type: !10833)
!11230 = !DILocalVariable(name: "enable", arg: 2, scope: !11227, file: !10830, line: 534, type: !911)
!11231 = !DILocation(line: 0, scope: !11227)
!11232 = !DILocation(line: 0, scope: !11233)
!11233 = distinct !DILexicalBlock(scope: !11227, file: !10830, line: 536, column: 9)
!11234 = !DILocation(line: 536, column: 9, scope: !11227)
!11235 = !DILocation(line: 540, column: 1, scope: !11227)
!11236 = distinct !DISubprogram(name: "UART_SetIrDAVoteClock", scope: !10830, file: !10830, line: 550, type: !11073, scopeLine: 551, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2826, retainedNodes: !11237)
!11237 = !{!11238, !11239}
!11238 = !DILocalVariable(name: "base", arg: 1, scope: !11236, file: !10830, line: 550, type: !10833)
!11239 = !DILocalVariable(name: "voteClock", arg: 2, scope: !11236, file: !10830, line: 550, type: !113)
!11240 = !DILocation(line: 0, scope: !11236)
!11241 = !DILocation(line: 552, column: 5, scope: !11242)
!11242 = distinct !DILexicalBlock(scope: !11243, file: !10830, line: 552, column: 5)
!11243 = distinct !DILexicalBlock(scope: !11236, file: !10830, line: 552, column: 5)
!11244 = !DILocation(line: 552, column: 5, scope: !11245)
!11245 = distinct !DILexicalBlock(scope: !11242, file: !10830, line: 552, column: 5)
!11246 = !DILocation(line: 0, scope: !11247)
!11247 = distinct !DILexicalBlock(scope: !11236, file: !10830, line: 555, column: 9)
!11248 = !DILocation(line: 555, column: 9, scope: !11236)
!11249 = !DILocation(line: 559, column: 1, scope: !11236)
!11250 = distinct !DISubprogram(name: "UART_SetAutoBaudRateCmd", scope: !10830, file: !10830, line: 571, type: !11031, scopeLine: 572, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2826, retainedNodes: !11251)
!11251 = !{!11252, !11253}
!11252 = !DILocalVariable(name: "base", arg: 1, scope: !11250, file: !10830, line: 571, type: !10833)
!11253 = !DILocalVariable(name: "enable", arg: 2, scope: !11250, file: !10830, line: 571, type: !911)
!11254 = !DILocation(line: 0, scope: !11250)
!11255 = !DILocation(line: 0, scope: !11256)
!11256 = distinct !DILexicalBlock(scope: !11250, file: !10830, line: 573, column: 9)
!11257 = !DILocation(line: 573, column: 9, scope: !11250)
!11258 = !DILocation(line: 577, column: 1, scope: !11250)
!11259 = distinct !DISubprogram(name: "UART_SendBreakChar", scope: !10830, file: !10830, line: 587, type: !11031, scopeLine: 588, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2826, retainedNodes: !11260)
!11260 = !{!11261, !11262}
!11261 = !DILocalVariable(name: "base", arg: 1, scope: !11259, file: !10830, line: 587, type: !10833)
!11262 = !DILocalVariable(name: "active", arg: 2, scope: !11259, file: !10830, line: 587, type: !911)
!11263 = !DILocation(line: 0, scope: !11259)
!11264 = !DILocation(line: 0, scope: !11265)
!11265 = distinct !DILexicalBlock(scope: !11259, file: !10830, line: 589, column: 9)
!11266 = !DILocation(line: 589, column: 9, scope: !11259)
!11267 = !DILocation(line: 593, column: 1, scope: !11259)
!11268 = distinct !DISubprogram(name: "UART_SetEscapeDecectCmd", scope: !10830, file: !10830, line: 602, type: !11031, scopeLine: 603, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2826, retainedNodes: !11269)
!11269 = !{!11270, !11271}
!11270 = !DILocalVariable(name: "base", arg: 1, scope: !11268, file: !10830, line: 602, type: !10833)
!11271 = !DILocalVariable(name: "enable", arg: 2, scope: !11268, file: !10830, line: 602, type: !911)
!11272 = !DILocation(line: 0, scope: !11268)
!11273 = !DILocation(line: 0, scope: !11274)
!11274 = distinct !DILexicalBlock(scope: !11268, file: !10830, line: 604, column: 9)
!11275 = !DILocation(line: 604, column: 9, scope: !11268)
!11276 = !DILocation(line: 608, column: 1, scope: !11268)
!11277 = distinct !DISubprogram(name: "get_gpt_clock_freq", scope: !11278, file: !11278, line: 42, type: !11279, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2838, retainedNodes: !11295)
!11278 = !DIFile(filename: "modules/hal/nxp/imx/devices/MCIMX7D/clock_freq.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11279 = !DISubroutineType(types: !11280)
!11280 = !{!113, !11281}
!11281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11282, size: 32)
!11282 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPT_Type", file: !734, line: 20831, baseType: !11283)
!11283 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !734, line: 20820, size: 320, elements: !11284)
!11284 = !{!11285, !11286, !11287, !11288, !11289, !11290, !11291, !11292, !11293, !11294}
!11285 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !11283, file: !734, line: 20821, baseType: !738, size: 32)
!11286 = !DIDerivedType(tag: DW_TAG_member, name: "PR", scope: !11283, file: !734, line: 20822, baseType: !738, size: 32, offset: 32)
!11287 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !11283, file: !734, line: 20823, baseType: !738, size: 32, offset: 64)
!11288 = !DIDerivedType(tag: DW_TAG_member, name: "IR", scope: !11283, file: !734, line: 20824, baseType: !738, size: 32, offset: 96)
!11289 = !DIDerivedType(tag: DW_TAG_member, name: "OCR1", scope: !11283, file: !734, line: 20825, baseType: !738, size: 32, offset: 128)
!11290 = !DIDerivedType(tag: DW_TAG_member, name: "OCR2", scope: !11283, file: !734, line: 20826, baseType: !738, size: 32, offset: 160)
!11291 = !DIDerivedType(tag: DW_TAG_member, name: "OCR3", scope: !11283, file: !734, line: 20827, baseType: !738, size: 32, offset: 192)
!11292 = !DIDerivedType(tag: DW_TAG_member, name: "ICR1", scope: !11283, file: !734, line: 20828, baseType: !809, size: 32, offset: 224)
!11293 = !DIDerivedType(tag: DW_TAG_member, name: "ICR2", scope: !11283, file: !734, line: 20829, baseType: !809, size: 32, offset: 256)
!11294 = !DIDerivedType(tag: DW_TAG_member, name: "CNT", scope: !11283, file: !734, line: 20830, baseType: !809, size: 32, offset: 288)
!11295 = !{!11296, !11297, !11298, !11299, !11300}
!11296 = !DILocalVariable(name: "base", arg: 1, scope: !11277, file: !11278, line: 42, type: !11281)
!11297 = !DILocalVariable(name: "root", scope: !11277, file: !11278, line: 44, type: !113)
!11298 = !DILocalVariable(name: "hz", scope: !11277, file: !11278, line: 45, type: !113)
!11299 = !DILocalVariable(name: "pre", scope: !11277, file: !11278, line: 46, type: !113)
!11300 = !DILocalVariable(name: "post", scope: !11277, file: !11278, line: 46, type: !113)
!11301 = !DILocation(line: 0, scope: !11277)
!11302 = !DILocation(line: 46, column: 2, scope: !11277)
!11303 = !DILocation(line: 48, column: 10, scope: !11277)
!11304 = !DILocation(line: 48, column: 2, scope: !11277)
!11305 = !DILocation(line: 56, column: 3, scope: !11306)
!11306 = distinct !DILexicalBlock(scope: !11277, file: !11278, line: 48, column: 26)
!11307 = !DILocation(line: 0, scope: !11306)
!11308 = !DILocation(line: 61, column: 2, scope: !11277)
!11309 = !DILocation(line: 66, column: 8, scope: !11310)
!11310 = distinct !DILexicalBlock(scope: !11277, file: !11278, line: 61, column: 16)
!11311 = !DILocation(line: 67, column: 3, scope: !11310)
!11312 = !DILocation(line: 0, scope: !11310)
!11313 = !DILocation(line: 72, column: 15, scope: !11277)
!11314 = !DILocation(line: 72, column: 19, scope: !11277)
!11315 = !DILocation(line: 72, column: 12, scope: !11277)
!11316 = !DILocation(line: 72, column: 27, scope: !11277)
!11317 = !DILocation(line: 72, column: 32, scope: !11277)
!11318 = !DILocation(line: 72, column: 24, scope: !11277)
!11319 = !DILocation(line: 72, column: 2, scope: !11277)
!11320 = !DILocation(line: 73, column: 1, scope: !11277)
!11321 = distinct !DISubprogram(name: "CCM_GetRootMux", scope: !450, file: !450, line: 368, type: !11322, scopeLine: 369, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2838, retainedNodes: !11324)
!11322 = !DISubroutineType(types: !11323)
!11323 = !{!113, !2852, !113}
!11324 = !{!11325, !11326}
!11325 = !DILocalVariable(name: "base", arg: 1, scope: !11321, file: !450, line: 368, type: !2852)
!11326 = !DILocalVariable(name: "ccmRoot", arg: 2, scope: !11321, file: !450, line: 368, type: !113)
!11327 = !DILocation(line: 0, scope: !11321)
!11328 = !DILocation(line: 370, column: 13, scope: !11321)
!11329 = !DILocation(line: 370, column: 58, scope: !11321)
!11330 = !DILocation(line: 370, column: 5, scope: !11321)
!11331 = distinct !DISubprogram(name: "get_ecspi_clock_freq", scope: !11278, file: !11278, line: 81, type: !11332, scopeLine: 82, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2838, retainedNodes: !11352)
!11332 = !DISubroutineType(types: !11333)
!11333 = !{!113, !11334}
!11334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11335, size: 32)
!11335 = !DIDerivedType(tag: DW_TAG_typedef, name: "ECSPI_Type", file: !734, line: 12462, baseType: !11336)
!11336 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !734, line: 12450, size: 544, elements: !11337)
!11337 = !{!11338, !11339, !11340, !11341, !11342, !11343, !11344, !11345, !11346, !11347, !11351}
!11338 = !DIDerivedType(tag: DW_TAG_member, name: "RXDATA", scope: !11336, file: !734, line: 12451, baseType: !809, size: 32)
!11339 = !DIDerivedType(tag: DW_TAG_member, name: "TXDATA", scope: !11336, file: !734, line: 12452, baseType: !738, size: 32, offset: 32)
!11340 = !DIDerivedType(tag: DW_TAG_member, name: "CONREG", scope: !11336, file: !734, line: 12453, baseType: !738, size: 32, offset: 64)
!11341 = !DIDerivedType(tag: DW_TAG_member, name: "CONFIGREG", scope: !11336, file: !734, line: 12454, baseType: !738, size: 32, offset: 96)
!11342 = !DIDerivedType(tag: DW_TAG_member, name: "INTREG", scope: !11336, file: !734, line: 12455, baseType: !738, size: 32, offset: 128)
!11343 = !DIDerivedType(tag: DW_TAG_member, name: "DMAREG", scope: !11336, file: !734, line: 12456, baseType: !738, size: 32, offset: 160)
!11344 = !DIDerivedType(tag: DW_TAG_member, name: "STATREG", scope: !11336, file: !734, line: 12457, baseType: !738, size: 32, offset: 192)
!11345 = !DIDerivedType(tag: DW_TAG_member, name: "PERIODREG", scope: !11336, file: !734, line: 12458, baseType: !738, size: 32, offset: 224)
!11346 = !DIDerivedType(tag: DW_TAG_member, name: "TESTREG", scope: !11336, file: !734, line: 12459, baseType: !738, size: 32, offset: 256)
!11347 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !11336, file: !734, line: 12460, baseType: !11348, size: 224, offset: 288)
!11348 = !DICompositeType(tag: DW_TAG_array_type, baseType: !169, size: 224, elements: !11349)
!11349 = !{!11350}
!11350 = !DISubrange(count: 28)
!11351 = !DIDerivedType(tag: DW_TAG_member, name: "MSGDATA", scope: !11336, file: !734, line: 12461, baseType: !738, size: 32, offset: 512)
!11352 = !{!11353, !11354, !11355, !11356, !11357}
!11353 = !DILocalVariable(name: "base", arg: 1, scope: !11331, file: !11278, line: 81, type: !11334)
!11354 = !DILocalVariable(name: "root", scope: !11331, file: !11278, line: 83, type: !113)
!11355 = !DILocalVariable(name: "hz", scope: !11331, file: !11278, line: 84, type: !113)
!11356 = !DILocalVariable(name: "pre", scope: !11331, file: !11278, line: 85, type: !113)
!11357 = !DILocalVariable(name: "post", scope: !11331, file: !11278, line: 85, type: !113)
!11358 = !DILocation(line: 0, scope: !11331)
!11359 = !DILocation(line: 85, column: 2, scope: !11331)
!11360 = !DILocation(line: 87, column: 10, scope: !11331)
!11361 = !DILocation(line: 87, column: 2, scope: !11331)
!11362 = !DILocation(line: 95, column: 3, scope: !11363)
!11363 = distinct !DILexicalBlock(scope: !11331, file: !11278, line: 87, column: 26)
!11364 = !DILocation(line: 0, scope: !11363)
!11365 = !DILocation(line: 100, column: 2, scope: !11331)
!11366 = !DILocation(line: 105, column: 8, scope: !11367)
!11367 = distinct !DILexicalBlock(scope: !11331, file: !11278, line: 100, column: 16)
!11368 = !DILocation(line: 106, column: 3, scope: !11367)
!11369 = !DILocation(line: 0, scope: !11367)
!11370 = !DILocation(line: 111, column: 15, scope: !11331)
!11371 = !DILocation(line: 111, column: 19, scope: !11331)
!11372 = !DILocation(line: 111, column: 12, scope: !11331)
!11373 = !DILocation(line: 111, column: 27, scope: !11331)
!11374 = !DILocation(line: 111, column: 32, scope: !11331)
!11375 = !DILocation(line: 111, column: 24, scope: !11331)
!11376 = !DILocation(line: 111, column: 2, scope: !11331)
!11377 = !DILocation(line: 112, column: 1, scope: !11331)
!11378 = distinct !DISubprogram(name: "get_flexcan_clock_freq", scope: !11278, file: !11278, line: 120, type: !11379, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2838, retainedNodes: !11423)
!11379 = !DISubroutineType(types: !11380)
!11380 = !{!113, !11381}
!11381 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11382, size: 32)
!11382 = !DIDerivedType(tag: DW_TAG_typedef, name: "CAN_Type", file: !734, line: 3477, baseType: !11383)
!11383 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !734, line: 3446, size: 20256, elements: !11384)
!11384 = !{!11385, !11386, !11387, !11388, !11390, !11391, !11392, !11393, !11394, !11395, !11396, !11397, !11398, !11399, !11400, !11401, !11403, !11404, !11405, !11406, !11407, !11417, !11419, !11421, !11422}
!11385 = !DIDerivedType(tag: DW_TAG_member, name: "MCR", scope: !11383, file: !734, line: 3447, baseType: !738, size: 32)
!11386 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL1", scope: !11383, file: !734, line: 3448, baseType: !738, size: 32, offset: 32)
!11387 = !DIDerivedType(tag: DW_TAG_member, name: "TIMER", scope: !11383, file: !734, line: 3449, baseType: !738, size: 32, offset: 64)
!11388 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !11383, file: !734, line: 3450, baseType: !11389, size: 32, offset: 96)
!11389 = !DICompositeType(tag: DW_TAG_array_type, baseType: !169, size: 32, elements: !307)
!11390 = !DIDerivedType(tag: DW_TAG_member, name: "RXMGMASK", scope: !11383, file: !734, line: 3451, baseType: !738, size: 32, offset: 128)
!11391 = !DIDerivedType(tag: DW_TAG_member, name: "RX14MASK", scope: !11383, file: !734, line: 3452, baseType: !738, size: 32, offset: 160)
!11392 = !DIDerivedType(tag: DW_TAG_member, name: "RX15MASK", scope: !11383, file: !734, line: 3453, baseType: !738, size: 32, offset: 192)
!11393 = !DIDerivedType(tag: DW_TAG_member, name: "ECR", scope: !11383, file: !734, line: 3454, baseType: !738, size: 32, offset: 224)
!11394 = !DIDerivedType(tag: DW_TAG_member, name: "ESR1", scope: !11383, file: !734, line: 3455, baseType: !738, size: 32, offset: 256)
!11395 = !DIDerivedType(tag: DW_TAG_member, name: "IMASK2", scope: !11383, file: !734, line: 3456, baseType: !738, size: 32, offset: 288)
!11396 = !DIDerivedType(tag: DW_TAG_member, name: "IMASK1", scope: !11383, file: !734, line: 3457, baseType: !738, size: 32, offset: 320)
!11397 = !DIDerivedType(tag: DW_TAG_member, name: "IFLAG2", scope: !11383, file: !734, line: 3458, baseType: !738, size: 32, offset: 352)
!11398 = !DIDerivedType(tag: DW_TAG_member, name: "IFLAG1", scope: !11383, file: !734, line: 3459, baseType: !738, size: 32, offset: 384)
!11399 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL2", scope: !11383, file: !734, line: 3460, baseType: !738, size: 32, offset: 416)
!11400 = !DIDerivedType(tag: DW_TAG_member, name: "ESR2", scope: !11383, file: !734, line: 3461, baseType: !809, size: 32, offset: 448)
!11401 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !11383, file: !734, line: 3462, baseType: !11402, size: 64, offset: 480)
!11402 = !DICompositeType(tag: DW_TAG_array_type, baseType: !169, size: 64, elements: !1625)
!11403 = !DIDerivedType(tag: DW_TAG_member, name: "CRCR", scope: !11383, file: !734, line: 3463, baseType: !809, size: 32, offset: 544)
!11404 = !DIDerivedType(tag: DW_TAG_member, name: "RXFGMASK", scope: !11383, file: !734, line: 3464, baseType: !738, size: 32, offset: 576)
!11405 = !DIDerivedType(tag: DW_TAG_member, name: "RXFIR", scope: !11383, file: !734, line: 3465, baseType: !809, size: 32, offset: 608)
!11406 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_2", scope: !11383, file: !734, line: 3466, baseType: !795, size: 384, offset: 640)
!11407 = !DIDerivedType(tag: DW_TAG_member, name: "MB", scope: !11383, file: !734, line: 3472, baseType: !11408, size: 8192, offset: 1024)
!11408 = !DICompositeType(tag: DW_TAG_array_type, baseType: !11409, size: 8192, elements: !11415)
!11409 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !11383, file: !734, line: 3467, size: 128, elements: !11410)
!11410 = !{!11411, !11412, !11413, !11414}
!11411 = !DIDerivedType(tag: DW_TAG_member, name: "CS", scope: !11409, file: !734, line: 3468, baseType: !738, size: 32)
!11412 = !DIDerivedType(tag: DW_TAG_member, name: "ID", scope: !11409, file: !734, line: 3469, baseType: !738, size: 32, offset: 32)
!11413 = !DIDerivedType(tag: DW_TAG_member, name: "WORD0", scope: !11409, file: !734, line: 3470, baseType: !738, size: 32, offset: 64)
!11414 = !DIDerivedType(tag: DW_TAG_member, name: "WORD1", scope: !11409, file: !734, line: 3471, baseType: !738, size: 32, offset: 96)
!11415 = !{!11416}
!11416 = !DISubrange(count: 64)
!11417 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_3", scope: !11383, file: !734, line: 3473, baseType: !11418, size: 8192, offset: 9216)
!11418 = !DICompositeType(tag: DW_TAG_array_type, baseType: !169, size: 8192, elements: !1972)
!11419 = !DIDerivedType(tag: DW_TAG_member, name: "RXIMR", scope: !11383, file: !734, line: 3474, baseType: !11420, size: 2048, offset: 17408)
!11420 = !DICompositeType(tag: DW_TAG_array_type, baseType: !738, size: 2048, elements: !11415)
!11421 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_4", scope: !11383, file: !734, line: 3475, baseType: !2753, size: 768, offset: 19456)
!11422 = !DIDerivedType(tag: DW_TAG_member, name: "GFWR", scope: !11383, file: !734, line: 3476, baseType: !738, size: 32, offset: 20224)
!11423 = !{!11424, !11425, !11426, !11427, !11428}
!11424 = !DILocalVariable(name: "base", arg: 1, scope: !11378, file: !11278, line: 120, type: !11381)
!11425 = !DILocalVariable(name: "root", scope: !11378, file: !11278, line: 122, type: !113)
!11426 = !DILocalVariable(name: "hz", scope: !11378, file: !11278, line: 123, type: !113)
!11427 = !DILocalVariable(name: "pre", scope: !11378, file: !11278, line: 124, type: !113)
!11428 = !DILocalVariable(name: "post", scope: !11378, file: !11278, line: 124, type: !113)
!11429 = !DILocation(line: 0, scope: !11378)
!11430 = !DILocation(line: 124, column: 2, scope: !11378)
!11431 = !DILocation(line: 126, column: 10, scope: !11378)
!11432 = !DILocation(line: 126, column: 2, scope: !11378)
!11433 = !DILocation(line: 134, column: 3, scope: !11434)
!11434 = distinct !DILexicalBlock(scope: !11378, file: !11278, line: 126, column: 26)
!11435 = !DILocation(line: 0, scope: !11434)
!11436 = !DILocation(line: 139, column: 2, scope: !11378)
!11437 = !DILocation(line: 144, column: 8, scope: !11438)
!11438 = distinct !DILexicalBlock(scope: !11378, file: !11278, line: 139, column: 16)
!11439 = !DILocation(line: 144, column: 45, scope: !11438)
!11440 = !DILocation(line: 145, column: 3, scope: !11438)
!11441 = !DILocation(line: 147, column: 8, scope: !11438)
!11442 = !DILocation(line: 148, column: 3, scope: !11438)
!11443 = !DILocation(line: 0, scope: !11438)
!11444 = !DILocation(line: 153, column: 15, scope: !11378)
!11445 = !DILocation(line: 153, column: 19, scope: !11378)
!11446 = !DILocation(line: 153, column: 12, scope: !11378)
!11447 = !DILocation(line: 153, column: 27, scope: !11378)
!11448 = !DILocation(line: 153, column: 32, scope: !11378)
!11449 = !DILocation(line: 153, column: 24, scope: !11378)
!11450 = !DILocation(line: 153, column: 2, scope: !11378)
!11451 = !DILocation(line: 154, column: 1, scope: !11378)
!11452 = distinct !DISubprogram(name: "get_i2c_clock_freq", scope: !11278, file: !11278, line: 162, type: !11453, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2838, retainedNodes: !11469)
!11453 = !DISubroutineType(types: !11454)
!11454 = !{!113, !11455}
!11455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11456, size: 32)
!11456 = !DIDerivedType(tag: DW_TAG_typedef, name: "I2C_Type", file: !734, line: 21082, baseType: !11457)
!11457 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !734, line: 21072, size: 144, elements: !11458)
!11458 = !{!11459, !11460, !11462, !11463, !11464, !11465, !11466, !11467, !11468}
!11459 = !DIDerivedType(tag: DW_TAG_member, name: "IADR", scope: !11457, file: !734, line: 21073, baseType: !852, size: 16)
!11460 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !11457, file: !734, line: 21074, baseType: !11461, size: 16, offset: 16)
!11461 = !DICompositeType(tag: DW_TAG_array_type, baseType: !169, size: 16, elements: !158)
!11462 = !DIDerivedType(tag: DW_TAG_member, name: "IFDR", scope: !11457, file: !734, line: 21075, baseType: !852, size: 16, offset: 32)
!11463 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !11457, file: !734, line: 21076, baseType: !11461, size: 16, offset: 48)
!11464 = !DIDerivedType(tag: DW_TAG_member, name: "I2CR", scope: !11457, file: !734, line: 21077, baseType: !852, size: 16, offset: 64)
!11465 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_2", scope: !11457, file: !734, line: 21078, baseType: !11461, size: 16, offset: 80)
!11466 = !DIDerivedType(tag: DW_TAG_member, name: "I2SR", scope: !11457, file: !734, line: 21079, baseType: !852, size: 16, offset: 96)
!11467 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_3", scope: !11457, file: !734, line: 21080, baseType: !11461, size: 16, offset: 112)
!11468 = !DIDerivedType(tag: DW_TAG_member, name: "I2DR", scope: !11457, file: !734, line: 21081, baseType: !852, size: 16, offset: 128)
!11469 = !{!11470, !11471, !11472, !11473, !11474}
!11470 = !DILocalVariable(name: "base", arg: 1, scope: !11452, file: !11278, line: 162, type: !11455)
!11471 = !DILocalVariable(name: "root", scope: !11452, file: !11278, line: 164, type: !113)
!11472 = !DILocalVariable(name: "hz", scope: !11452, file: !11278, line: 165, type: !113)
!11473 = !DILocalVariable(name: "pre", scope: !11452, file: !11278, line: 166, type: !113)
!11474 = !DILocalVariable(name: "post", scope: !11452, file: !11278, line: 166, type: !113)
!11475 = !DILocation(line: 0, scope: !11452)
!11476 = !DILocation(line: 166, column: 2, scope: !11452)
!11477 = !DILocation(line: 168, column: 10, scope: !11452)
!11478 = !DILocation(line: 168, column: 2, scope: !11452)
!11479 = !DILocation(line: 0, scope: !11480)
!11480 = distinct !DILexicalBlock(scope: !11452, file: !11278, line: 168, column: 26)
!11481 = !DILocation(line: 189, column: 2, scope: !11452)
!11482 = !DILocation(line: 194, column: 8, scope: !11483)
!11483 = distinct !DILexicalBlock(scope: !11452, file: !11278, line: 189, column: 16)
!11484 = !DILocation(line: 194, column: 45, scope: !11483)
!11485 = !DILocation(line: 195, column: 3, scope: !11483)
!11486 = !DILocation(line: 0, scope: !11483)
!11487 = !DILocation(line: 200, column: 15, scope: !11452)
!11488 = !DILocation(line: 200, column: 19, scope: !11452)
!11489 = !DILocation(line: 200, column: 12, scope: !11452)
!11490 = !DILocation(line: 200, column: 27, scope: !11452)
!11491 = !DILocation(line: 200, column: 32, scope: !11452)
!11492 = !DILocation(line: 200, column: 24, scope: !11452)
!11493 = !DILocation(line: 200, column: 2, scope: !11452)
!11494 = !DILocation(line: 201, column: 1, scope: !11452)
!11495 = distinct !DISubprogram(name: "get_uart_clock_freq", scope: !11278, file: !11278, line: 209, type: !11496, scopeLine: 210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2838, retainedNodes: !11521)
!11496 = !DISubroutineType(types: !11497)
!11497 = !{!113, !11498}
!11498 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11499, size: 32)
!11499 = !DIDerivedType(tag: DW_TAG_typedef, name: "UART_Type", file: !734, line: 41342, baseType: !11500)
!11500 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !734, line: 41322, size: 1504, elements: !11501)
!11501 = !{!11502, !11503, !11504, !11505, !11506, !11507, !11508, !11509, !11510, !11511, !11512, !11513, !11514, !11515, !11516, !11517, !11518, !11519, !11520}
!11502 = !DIDerivedType(tag: DW_TAG_member, name: "URXD", scope: !11500, file: !734, line: 41323, baseType: !809, size: 32)
!11503 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !11500, file: !734, line: 41324, baseType: !1359, size: 480, offset: 32)
!11504 = !DIDerivedType(tag: DW_TAG_member, name: "UTXD", scope: !11500, file: !734, line: 41325, baseType: !738, size: 32, offset: 512)
!11505 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !11500, file: !734, line: 41326, baseType: !1359, size: 480, offset: 544)
!11506 = !DIDerivedType(tag: DW_TAG_member, name: "UCR1", scope: !11500, file: !734, line: 41327, baseType: !738, size: 32, offset: 1024)
!11507 = !DIDerivedType(tag: DW_TAG_member, name: "UCR2", scope: !11500, file: !734, line: 41328, baseType: !738, size: 32, offset: 1056)
!11508 = !DIDerivedType(tag: DW_TAG_member, name: "UCR3", scope: !11500, file: !734, line: 41329, baseType: !738, size: 32, offset: 1088)
!11509 = !DIDerivedType(tag: DW_TAG_member, name: "UCR4", scope: !11500, file: !734, line: 41330, baseType: !738, size: 32, offset: 1120)
!11510 = !DIDerivedType(tag: DW_TAG_member, name: "UFCR", scope: !11500, file: !734, line: 41331, baseType: !738, size: 32, offset: 1152)
!11511 = !DIDerivedType(tag: DW_TAG_member, name: "USR1", scope: !11500, file: !734, line: 41332, baseType: !738, size: 32, offset: 1184)
!11512 = !DIDerivedType(tag: DW_TAG_member, name: "USR2", scope: !11500, file: !734, line: 41333, baseType: !738, size: 32, offset: 1216)
!11513 = !DIDerivedType(tag: DW_TAG_member, name: "UESC", scope: !11500, file: !734, line: 41334, baseType: !738, size: 32, offset: 1248)
!11514 = !DIDerivedType(tag: DW_TAG_member, name: "UTIM", scope: !11500, file: !734, line: 41335, baseType: !738, size: 32, offset: 1280)
!11515 = !DIDerivedType(tag: DW_TAG_member, name: "UBIR", scope: !11500, file: !734, line: 41336, baseType: !738, size: 32, offset: 1312)
!11516 = !DIDerivedType(tag: DW_TAG_member, name: "UBMR", scope: !11500, file: !734, line: 41337, baseType: !738, size: 32, offset: 1344)
!11517 = !DIDerivedType(tag: DW_TAG_member, name: "UBRC", scope: !11500, file: !734, line: 41338, baseType: !809, size: 32, offset: 1376)
!11518 = !DIDerivedType(tag: DW_TAG_member, name: "ONEMS", scope: !11500, file: !734, line: 41339, baseType: !738, size: 32, offset: 1408)
!11519 = !DIDerivedType(tag: DW_TAG_member, name: "UTS", scope: !11500, file: !734, line: 41340, baseType: !738, size: 32, offset: 1440)
!11520 = !DIDerivedType(tag: DW_TAG_member, name: "UMCR", scope: !11500, file: !734, line: 41341, baseType: !738, size: 32, offset: 1472)
!11521 = !{!11522, !11523, !11524, !11525, !11526}
!11522 = !DILocalVariable(name: "base", arg: 1, scope: !11495, file: !11278, line: 209, type: !11498)
!11523 = !DILocalVariable(name: "root", scope: !11495, file: !11278, line: 211, type: !113)
!11524 = !DILocalVariable(name: "hz", scope: !11495, file: !11278, line: 212, type: !113)
!11525 = !DILocalVariable(name: "pre", scope: !11495, file: !11278, line: 213, type: !113)
!11526 = !DILocalVariable(name: "post", scope: !11495, file: !11278, line: 213, type: !113)
!11527 = !DILocation(line: 0, scope: !11495)
!11528 = !DILocation(line: 213, column: 2, scope: !11495)
!11529 = !DILocation(line: 215, column: 10, scope: !11495)
!11530 = !DILocation(line: 215, column: 2, scope: !11495)
!11531 = !DILocation(line: 223, column: 3, scope: !11532)
!11532 = distinct !DILexicalBlock(scope: !11495, file: !11278, line: 215, column: 26)
!11533 = !DILocation(line: 227, column: 3, scope: !11532)
!11534 = !DILocation(line: 231, column: 3, scope: !11532)
!11535 = !DILocation(line: 235, column: 3, scope: !11532)
!11536 = !DILocation(line: 239, column: 3, scope: !11532)
!11537 = !DILocation(line: 243, column: 3, scope: !11532)
!11538 = !DILocation(line: 0, scope: !11532)
!11539 = !DILocation(line: 248, column: 2, scope: !11495)
!11540 = !DILocation(line: 253, column: 8, scope: !11541)
!11541 = distinct !DILexicalBlock(scope: !11495, file: !11278, line: 248, column: 16)
!11542 = !DILocation(line: 253, column: 45, scope: !11541)
!11543 = !DILocation(line: 254, column: 3, scope: !11541)
!11544 = !DILocation(line: 256, column: 8, scope: !11541)
!11545 = !DILocation(line: 257, column: 3, scope: !11541)
!11546 = !DILocation(line: 0, scope: !11541)
!11547 = !DILocation(line: 262, column: 15, scope: !11495)
!11548 = !DILocation(line: 262, column: 19, scope: !11495)
!11549 = !DILocation(line: 262, column: 12, scope: !11495)
!11550 = !DILocation(line: 262, column: 27, scope: !11495)
!11551 = !DILocation(line: 262, column: 32, scope: !11495)
!11552 = !DILocation(line: 262, column: 24, scope: !11495)
!11553 = !DILocation(line: 262, column: 2, scope: !11495)
!11554 = !DILocation(line: 263, column: 1, scope: !11495)
!11555 = distinct !DISubprogram(name: "z_device_state_init", scope: !11556, file: !11556, line: 23, type: !260, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2963, retainedNodes: !11557)
!11556 = !DIFile(filename: "zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11557 = !{!11558}
!11558 = !DILocalVariable(name: "dev", scope: !11555, file: !11556, line: 25, type: !11559)
!11559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11560, size: 32)
!11560 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11561)
!11561 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !900, line: 378, size: 192, elements: !11562)
!11562 = !{!11563, !11564, !11565, !11566, !11572, !11573}
!11563 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !11561, file: !900, line: 380, baseType: !263, size: 32)
!11564 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !11561, file: !900, line: 382, baseType: !13, size: 32, offset: 32)
!11565 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !11561, file: !900, line: 384, baseType: !13, size: 32, offset: 64)
!11566 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !11561, file: !900, line: 386, baseType: !11567, size: 32, offset: 96)
!11567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11568, size: 32)
!11568 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !900, line: 351, size: 16, elements: !11569)
!11569 = !{!11570, !11571}
!11570 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !11568, file: !900, line: 359, baseType: !169, size: 8)
!11571 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !11568, file: !900, line: 364, baseType: !911, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!11572 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !11561, file: !900, line: 388, baseType: !104, size: 32, offset: 128)
!11573 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !11561, file: !900, line: 396, baseType: !914, size: 32, offset: 160)
!11574 = !DILocation(line: 0, scope: !11555)
!11575 = !DILocation(line: 31, column: 1, scope: !11555)
!11576 = distinct !DISubprogram(name: "z_impl_device_get_binding", scope: !11556, file: !11556, line: 33, type: !11577, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2963, retainedNodes: !11579)
!11577 = !DISubroutineType(types: !11578)
!11578 = !{!11559, !263}
!11579 = !{!11580, !11581}
!11580 = !DILocalVariable(name: "name", arg: 1, scope: !11576, file: !11556, line: 33, type: !263)
!11581 = !DILocalVariable(name: "dev", scope: !11576, file: !11556, line: 35, type: !11559)
!11582 = !DILocation(line: 0, scope: !11576)
!11583 = !DILocation(line: 40, column: 12, scope: !11584)
!11584 = distinct !DILexicalBlock(scope: !11576, file: !11556, line: 40, column: 6)
!11585 = !DILocation(line: 40, column: 21, scope: !11584)
!11586 = !DILocation(line: 40, column: 25, scope: !11584)
!11587 = !DILocation(line: 40, column: 33, scope: !11584)
!11588 = !DILocation(line: 40, column: 6, scope: !11576)
!11589 = !DILocation(line: 55, column: 2, scope: !11590)
!11590 = distinct !DILexicalBlock(scope: !11576, file: !11556, line: 55, column: 2)
!11591 = !DILocation(line: 50, column: 7, scope: !11592)
!11592 = distinct !DILexicalBlock(scope: !11593, file: !11556, line: 50, column: 7)
!11593 = distinct !DILexicalBlock(scope: !11594, file: !11556, line: 49, column: 57)
!11594 = distinct !DILexicalBlock(scope: !11595, file: !11556, line: 49, column: 2)
!11595 = distinct !DILexicalBlock(scope: !11576, file: !11556, line: 49, column: 2)
!11596 = !DILocation(line: 50, column: 30, scope: !11592)
!11597 = !DILocation(line: 50, column: 39, scope: !11592)
!11598 = !DILocation(line: 50, column: 44, scope: !11592)
!11599 = !DILocation(line: 50, column: 7, scope: !11593)
!11600 = !DILocation(line: 49, column: 53, scope: !11594)
!11601 = !DILocation(line: 49, column: 33, scope: !11594)
!11602 = !DILocation(line: 49, column: 2, scope: !11595)
!11603 = distinct !{!11603, !11602, !11604}
!11604 = !DILocation(line: 53, column: 2, scope: !11595)
!11605 = !DILocation(line: 56, column: 7, scope: !11606)
!11606 = distinct !DILexicalBlock(scope: !11607, file: !11556, line: 56, column: 7)
!11607 = distinct !DILexicalBlock(scope: !11608, file: !11556, line: 55, column: 57)
!11608 = distinct !DILexicalBlock(scope: !11590, file: !11556, line: 55, column: 2)
!11609 = !DILocation(line: 56, column: 30, scope: !11606)
!11610 = !DILocation(line: 56, column: 52, scope: !11606)
!11611 = !DILocation(line: 56, column: 34, scope: !11606)
!11612 = !DILocation(line: 56, column: 58, scope: !11606)
!11613 = !DILocation(line: 56, column: 7, scope: !11607)
!11614 = !DILocation(line: 55, column: 53, scope: !11608)
!11615 = !DILocation(line: 55, column: 33, scope: !11608)
!11616 = distinct !{!11616, !11589, !11617}
!11617 = !DILocation(line: 59, column: 2, scope: !11590)
!11618 = !DILocation(line: 62, column: 1, scope: !11576)
!11619 = distinct !DISubprogram(name: "z_device_is_ready", scope: !11556, file: !11556, line: 93, type: !11620, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2963, retainedNodes: !11622)
!11620 = !DISubroutineType(types: !11621)
!11621 = !{!911, !11559}
!11622 = !{!11623}
!11623 = !DILocalVariable(name: "dev", arg: 1, scope: !11619, file: !11556, line: 93, type: !11559)
!11624 = !DILocation(line: 0, scope: !11619)
!11625 = !DILocation(line: 99, column: 10, scope: !11626)
!11626 = distinct !DILexicalBlock(scope: !11619, file: !11556, line: 99, column: 6)
!11627 = !DILocation(line: 99, column: 6, scope: !11619)
!11628 = !DILocation(line: 103, column: 14, scope: !11619)
!11629 = !DILocation(line: 103, column: 21, scope: !11619)
!11630 = !DILocation(line: 103, column: 33, scope: !11619)
!11631 = !DILocation(line: 103, column: 49, scope: !11619)
!11632 = !DILocation(line: 103, column: 58, scope: !11619)
!11633 = !DILocation(line: 104, column: 1, scope: !11619)
!11634 = distinct !DISubprogram(name: "z_device_get_all_static", scope: !11556, file: !11556, line: 87, type: !11635, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2963, retainedNodes: !11638)
!11635 = !DISubroutineType(types: !11636)
!11636 = !{!111, !11637}
!11637 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11559, size: 32)
!11638 = !{!11639}
!11639 = !DILocalVariable(name: "devices", arg: 1, scope: !11634, file: !11556, line: 87, type: !11637)
!11640 = !DILocation(line: 0, scope: !11634)
!11641 = !DILocation(line: 89, column: 11, scope: !11634)
!11642 = !DILocation(line: 90, column: 2, scope: !11634)
!11643 = distinct !DISubprogram(name: "device_required_foreach", scope: !11556, file: !11556, line: 125, type: !11644, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2963, retainedNodes: !11650)
!11644 = !DISubroutineType(types: !11645)
!11645 = !{!105, !11559, !11646, !104}
!11646 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_visitor_callback_t", file: !900, line: 471, baseType: !11647)
!11647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11648, size: 32)
!11648 = !DISubroutineType(types: !11649)
!11649 = !{!105, !11559, !104}
!11650 = !{!11651, !11652, !11653, !11654, !11655}
!11651 = !DILocalVariable(name: "dev", arg: 1, scope: !11643, file: !11556, line: 125, type: !11559)
!11652 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !11643, file: !11556, line: 126, type: !11646)
!11653 = !DILocalVariable(name: "context", arg: 3, scope: !11643, file: !11556, line: 127, type: !104)
!11654 = !DILocalVariable(name: "handle_count", scope: !11643, file: !11556, line: 129, type: !111)
!11655 = !DILocalVariable(name: "handles", scope: !11643, file: !11556, line: 130, type: !914)
!11656 = !DILocation(line: 0, scope: !11643)
!11657 = !DILocation(line: 129, column: 2, scope: !11643)
!11658 = !DILocation(line: 129, column: 9, scope: !11643)
!11659 = !DILocation(line: 130, column: 35, scope: !11643)
!11660 = !DILocation(line: 132, column: 33, scope: !11643)
!11661 = !DILocation(line: 132, column: 9, scope: !11643)
!11662 = !DILocation(line: 133, column: 1, scope: !11643)
!11663 = !DILocation(line: 132, column: 2, scope: !11643)
!11664 = distinct !DISubprogram(name: "device_required_handles_get", scope: !900, file: !900, line: 493, type: !11665, scopeLine: 494, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2963, retainedNodes: !11667)
!11665 = !DISubroutineType(types: !11666)
!11666 = !{!914, !11559, !2412}
!11667 = !{!11668, !11669, !11670, !11671}
!11668 = !DILocalVariable(name: "dev", arg: 1, scope: !11664, file: !900, line: 493, type: !11559)
!11669 = !DILocalVariable(name: "count", arg: 2, scope: !11664, file: !900, line: 493, type: !2412)
!11670 = !DILocalVariable(name: "rv", scope: !11664, file: !900, line: 495, type: !914)
!11671 = !DILocalVariable(name: "i", scope: !11672, file: !900, line: 498, type: !111)
!11672 = distinct !DILexicalBlock(scope: !11673, file: !900, line: 497, column: 18)
!11673 = distinct !DILexicalBlock(scope: !11664, file: !900, line: 497, column: 6)
!11674 = !DILocation(line: 0, scope: !11664)
!11675 = !DILocation(line: 495, column: 35, scope: !11664)
!11676 = !DILocation(line: 497, column: 9, scope: !11673)
!11677 = !DILocation(line: 497, column: 6, scope: !11664)
!11678 = !DILocation(line: 0, scope: !11672)
!11679 = !DILocation(line: 500, column: 11, scope: !11672)
!11680 = !DILocation(line: 500, column: 40, scope: !11672)
!11681 = !DILocation(line: 502, column: 4, scope: !11682)
!11682 = distinct !DILexicalBlock(scope: !11672, file: !900, line: 501, column: 40)
!11683 = distinct !{!11683, !11684, !11685}
!11684 = !DILocation(line: 500, column: 3, scope: !11672)
!11685 = !DILocation(line: 503, column: 3, scope: !11672)
!11686 = !DILocation(line: 504, column: 10, scope: !11672)
!11687 = !DILocation(line: 505, column: 2, scope: !11672)
!11688 = !DILocation(line: 507, column: 2, scope: !11664)
!11689 = distinct !DISubprogram(name: "device_visitor", scope: !11556, file: !11556, line: 106, type: !11690, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2963, retainedNodes: !11692)
!11690 = !DISubroutineType(types: !11691)
!11691 = !{!105, !914, !111, !11646, !104}
!11692 = !{!11693, !11694, !11695, !11696, !11697, !11699, !11702, !11703}
!11693 = !DILocalVariable(name: "handles", arg: 1, scope: !11689, file: !11556, line: 106, type: !914)
!11694 = !DILocalVariable(name: "handle_count", arg: 2, scope: !11689, file: !11556, line: 107, type: !111)
!11695 = !DILocalVariable(name: "visitor_cb", arg: 3, scope: !11689, file: !11556, line: 108, type: !11646)
!11696 = !DILocalVariable(name: "context", arg: 4, scope: !11689, file: !11556, line: 109, type: !104)
!11697 = !DILocalVariable(name: "i", scope: !11698, file: !11556, line: 112, type: !111)
!11698 = distinct !DILexicalBlock(scope: !11689, file: !11556, line: 112, column: 2)
!11699 = !DILocalVariable(name: "dh", scope: !11700, file: !11556, line: 113, type: !916)
!11700 = distinct !DILexicalBlock(scope: !11701, file: !11556, line: 112, column: 44)
!11701 = distinct !DILexicalBlock(scope: !11698, file: !11556, line: 112, column: 2)
!11702 = !DILocalVariable(name: "rdev", scope: !11700, file: !11556, line: 114, type: !11559)
!11703 = !DILocalVariable(name: "rc", scope: !11700, file: !11556, line: 115, type: !105)
!11704 = !DILocation(line: 0, scope: !11689)
!11705 = !DILocation(line: 0, scope: !11698)
!11706 = !DILocation(line: 112, column: 23, scope: !11701)
!11707 = !DILocation(line: 112, column: 2, scope: !11698)
!11708 = distinct !{!11708, !11707, !11709}
!11709 = !DILocation(line: 120, column: 2, scope: !11698)
!11710 = !DILocation(line: 113, column: 24, scope: !11700)
!11711 = !DILocation(line: 0, scope: !11700)
!11712 = !DILocation(line: 114, column: 31, scope: !11700)
!11713 = !DILocation(line: 115, column: 12, scope: !11700)
!11714 = !DILocation(line: 117, column: 10, scope: !11715)
!11715 = distinct !DILexicalBlock(scope: !11700, file: !11556, line: 117, column: 7)
!11716 = !DILocation(line: 112, column: 39, scope: !11701)
!11717 = !DILocation(line: 123, column: 1, scope: !11689)
!11718 = distinct !DISubprogram(name: "device_from_handle", scope: !900, file: !900, line: 439, type: !11719, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2963, retainedNodes: !11721)
!11719 = !DISubroutineType(types: !11720)
!11720 = !{!11559, !916}
!11721 = !{!11722, !11723, !11724}
!11722 = !DILocalVariable(name: "dev_handle", arg: 1, scope: !11718, file: !900, line: 439, type: !916)
!11723 = !DILocalVariable(name: "dev", scope: !11718, file: !900, line: 443, type: !11559)
!11724 = !DILocalVariable(name: "numdev", scope: !11718, file: !900, line: 444, type: !111)
!11725 = !DILocation(line: 0, scope: !11718)
!11726 = !DILocation(line: 446, column: 7, scope: !11727)
!11727 = distinct !DILexicalBlock(scope: !11718, file: !900, line: 446, column: 6)
!11728 = !DILocation(line: 446, column: 18, scope: !11727)
!11729 = !DILocation(line: 446, column: 23, scope: !11727)
!11730 = !DILocation(line: 450, column: 2, scope: !11718)
!11731 = distinct !DISubprogram(name: "device_supported_foreach", scope: !11556, file: !11556, line: 135, type: !11644, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2963, retainedNodes: !11732)
!11732 = !{!11733, !11734, !11735, !11736, !11737}
!11733 = !DILocalVariable(name: "dev", arg: 1, scope: !11731, file: !11556, line: 135, type: !11559)
!11734 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !11731, file: !11556, line: 136, type: !11646)
!11735 = !DILocalVariable(name: "context", arg: 3, scope: !11731, file: !11556, line: 137, type: !104)
!11736 = !DILocalVariable(name: "handle_count", scope: !11731, file: !11556, line: 139, type: !111)
!11737 = !DILocalVariable(name: "handles", scope: !11731, file: !11556, line: 140, type: !914)
!11738 = !DILocation(line: 0, scope: !11731)
!11739 = !DILocation(line: 139, column: 2, scope: !11731)
!11740 = !DILocation(line: 139, column: 9, scope: !11731)
!11741 = !DILocation(line: 140, column: 35, scope: !11731)
!11742 = !DILocation(line: 142, column: 33, scope: !11731)
!11743 = !DILocation(line: 142, column: 9, scope: !11731)
!11744 = !DILocation(line: 143, column: 1, scope: !11731)
!11745 = !DILocation(line: 142, column: 2, scope: !11731)
!11746 = distinct !DISubprogram(name: "device_supported_handles_get", scope: !900, file: !900, line: 573, type: !11665, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2963, retainedNodes: !11747)
!11747 = !{!11748, !11749, !11750, !11751, !11752}
!11748 = !DILocalVariable(name: "dev", arg: 1, scope: !11746, file: !900, line: 573, type: !11559)
!11749 = !DILocalVariable(name: "count", arg: 2, scope: !11746, file: !900, line: 573, type: !2412)
!11750 = !DILocalVariable(name: "rv", scope: !11746, file: !900, line: 575, type: !914)
!11751 = !DILocalVariable(name: "region", scope: !11746, file: !900, line: 576, type: !111)
!11752 = !DILocalVariable(name: "i", scope: !11746, file: !900, line: 577, type: !111)
!11753 = !DILocation(line: 0, scope: !11746)
!11754 = !DILocation(line: 575, column: 35, scope: !11746)
!11755 = !DILocation(line: 579, column: 9, scope: !11756)
!11756 = distinct !DILexicalBlock(scope: !11746, file: !900, line: 579, column: 6)
!11757 = !DILocation(line: 579, column: 6, scope: !11746)
!11758 = !DILocation(line: 582, column: 8, scope: !11759)
!11759 = distinct !DILexicalBlock(scope: !11760, file: !900, line: 582, column: 8)
!11760 = distinct !DILexicalBlock(scope: !11761, file: !900, line: 581, column: 23)
!11761 = distinct !DILexicalBlock(scope: !11756, file: !900, line: 579, column: 18)
!11762 = !DILocation(line: 582, column: 12, scope: !11759)
!11763 = !DILocation(line: 585, column: 6, scope: !11760)
!11764 = !DILocation(line: 0, scope: !11761)
!11765 = !DILocation(line: 581, column: 17, scope: !11761)
!11766 = !DILocation(line: 581, column: 3, scope: !11761)
!11767 = !DILocation(line: 588, column: 10, scope: !11761)
!11768 = !DILocation(line: 588, column: 16, scope: !11761)
!11769 = !DILocation(line: 589, column: 4, scope: !11770)
!11770 = distinct !DILexicalBlock(scope: !11761, file: !900, line: 588, column: 39)
!11771 = !DILocation(line: 588, column: 3, scope: !11761)
!11772 = distinct !{!11772, !11771, !11773}
!11773 = !DILocation(line: 590, column: 3, scope: !11761)
!11774 = !DILocation(line: 591, column: 10, scope: !11761)
!11775 = !DILocation(line: 592, column: 2, scope: !11761)
!11776 = !DILocation(line: 575, column: 25, scope: !11746)
!11777 = !DILocation(line: 594, column: 2, scope: !11746)
!11778 = distinct !DISubprogram(name: "z_impl_z_errno", scope: !1759, file: !1759, line: 49, type: !11779, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1756, retainedNodes: !391)
!11779 = !DISubroutineType(types: !11780)
!11780 = !{!422}
!11781 = !DILocation(line: 51, column: 10, scope: !11778)
!11782 = !DILocation(line: 51, column: 20, scope: !11778)
!11783 = !DILocation(line: 51, column: 2, scope: !11778)
!11784 = distinct !DISubprogram(name: "coredump", scope: !2970, file: !2970, line: 209, type: !11785, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2966, retainedNodes: !11927)
!11785 = !DISubroutineType(types: !11786)
!11786 = !{null, !32, !11787, !11831}
!11787 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11788, size: 32)
!11788 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11789)
!11789 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2543, line: 141, baseType: !11790)
!11790 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2543, line: 97, size: 256, elements: !11791)
!11791 = !{!11792}
!11792 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !11790, file: !2543, line: 107, baseType: !11793, size: 256)
!11793 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2543, line: 98, size: 256, elements: !11794)
!11794 = !{!11795, !11800, !11805, !11810, !11815, !11820, !11825, !11830}
!11795 = !DIDerivedType(tag: DW_TAG_member, scope: !11793, file: !2543, line: 99, baseType: !11796, size: 32)
!11796 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11793, file: !2543, line: 99, size: 32, elements: !11797)
!11797 = !{!11798, !11799}
!11798 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !11796, file: !2543, line: 99, baseType: !113, size: 32)
!11799 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !11796, file: !2543, line: 99, baseType: !113, size: 32)
!11800 = !DIDerivedType(tag: DW_TAG_member, scope: !11793, file: !2543, line: 100, baseType: !11801, size: 32, offset: 32)
!11801 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11793, file: !2543, line: 100, size: 32, elements: !11802)
!11802 = !{!11803, !11804}
!11803 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !11801, file: !2543, line: 100, baseType: !113, size: 32)
!11804 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !11801, file: !2543, line: 100, baseType: !113, size: 32)
!11805 = !DIDerivedType(tag: DW_TAG_member, scope: !11793, file: !2543, line: 101, baseType: !11806, size: 32, offset: 64)
!11806 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11793, file: !2543, line: 101, size: 32, elements: !11807)
!11807 = !{!11808, !11809}
!11808 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !11806, file: !2543, line: 101, baseType: !113, size: 32)
!11809 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !11806, file: !2543, line: 101, baseType: !113, size: 32)
!11810 = !DIDerivedType(tag: DW_TAG_member, scope: !11793, file: !2543, line: 102, baseType: !11811, size: 32, offset: 96)
!11811 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11793, file: !2543, line: 102, size: 32, elements: !11812)
!11812 = !{!11813, !11814}
!11813 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !11811, file: !2543, line: 102, baseType: !113, size: 32)
!11814 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !11811, file: !2543, line: 102, baseType: !113, size: 32)
!11815 = !DIDerivedType(tag: DW_TAG_member, scope: !11793, file: !2543, line: 103, baseType: !11816, size: 32, offset: 128)
!11816 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11793, file: !2543, line: 103, size: 32, elements: !11817)
!11817 = !{!11818, !11819}
!11818 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !11816, file: !2543, line: 103, baseType: !113, size: 32)
!11819 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !11816, file: !2543, line: 103, baseType: !113, size: 32)
!11820 = !DIDerivedType(tag: DW_TAG_member, scope: !11793, file: !2543, line: 104, baseType: !11821, size: 32, offset: 160)
!11821 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11793, file: !2543, line: 104, size: 32, elements: !11822)
!11822 = !{!11823, !11824}
!11823 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !11821, file: !2543, line: 104, baseType: !113, size: 32)
!11824 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !11821, file: !2543, line: 104, baseType: !113, size: 32)
!11825 = !DIDerivedType(tag: DW_TAG_member, scope: !11793, file: !2543, line: 105, baseType: !11826, size: 32, offset: 192)
!11826 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11793, file: !2543, line: 105, size: 32, elements: !11827)
!11827 = !{!11828, !11829}
!11828 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !11826, file: !2543, line: 105, baseType: !113, size: 32)
!11829 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !11826, file: !2543, line: 105, baseType: !113, size: 32)
!11830 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !11793, file: !2543, line: 106, baseType: !113, size: 32, offset: 224)
!11831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11832, size: 32)
!11832 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !127, line: 245, size: 896, elements: !11833)
!11833 = !{!11834, !11892, !11904, !11905, !11906, !11907, !11922}
!11834 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !11832, file: !127, line: 247, baseType: !11835, size: 384)
!11835 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !127, line: 57, size: 384, elements: !11836)
!11836 = !{!11837, !11861, !11868, !11869, !11870, !11879, !11880, !11881}
!11837 = !DIDerivedType(tag: DW_TAG_member, scope: !11835, file: !127, line: 60, baseType: !11838, size: 64)
!11838 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11835, file: !127, line: 60, size: 64, elements: !11839)
!11839 = !{!11840, !11855}
!11840 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !11838, file: !127, line: 61, baseType: !11841, size: 64)
!11841 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !137, line: 49, baseType: !11842)
!11842 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !137, line: 37, size: 64, elements: !11843)
!11843 = !{!11844, !11850}
!11844 = !DIDerivedType(tag: DW_TAG_member, scope: !11842, file: !137, line: 38, baseType: !11845, size: 32)
!11845 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11842, file: !137, line: 38, size: 32, elements: !11846)
!11846 = !{!11847, !11849}
!11847 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !11845, file: !137, line: 39, baseType: !11848, size: 32)
!11848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11842, size: 32)
!11849 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !11845, file: !137, line: 40, baseType: !11848, size: 32)
!11850 = !DIDerivedType(tag: DW_TAG_member, scope: !11842, file: !137, line: 42, baseType: !11851, size: 32, offset: 32)
!11851 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11842, file: !137, line: 42, size: 32, elements: !11852)
!11852 = !{!11853, !11854}
!11853 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !11851, file: !137, line: 43, baseType: !11848, size: 32)
!11854 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !11851, file: !137, line: 44, baseType: !11848, size: 32)
!11855 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !11838, file: !127, line: 62, baseType: !11856, size: 64)
!11856 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !153, line: 49, size: 64, elements: !11857)
!11857 = !{!11858}
!11858 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !11856, file: !153, line: 50, baseType: !11859, size: 64)
!11859 = !DICompositeType(tag: DW_TAG_array_type, baseType: !11860, size: 64, elements: !158)
!11860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11856, size: 32)
!11861 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !11835, file: !127, line: 68, baseType: !11862, size: 32, offset: 64)
!11862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11863, size: 32)
!11863 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !163, line: 233, baseType: !11864)
!11864 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !163, line: 231, size: 64, elements: !11865)
!11865 = !{!11866}
!11866 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !11864, file: !163, line: 232, baseType: !11867, size: 64)
!11867 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !137, line: 48, baseType: !11842)
!11868 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !11835, file: !127, line: 71, baseType: !169, size: 8, offset: 96)
!11869 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !11835, file: !127, line: 74, baseType: !169, size: 8, offset: 104)
!11870 = !DIDerivedType(tag: DW_TAG_member, scope: !11835, file: !127, line: 90, baseType: !11871, size: 16, offset: 112)
!11871 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11835, file: !127, line: 90, size: 16, elements: !11872)
!11872 = !{!11873, !11878}
!11873 = !DIDerivedType(tag: DW_TAG_member, scope: !11871, file: !127, line: 91, baseType: !11874, size: 16)
!11874 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !11871, file: !127, line: 91, size: 16, elements: !11875)
!11875 = !{!11876, !11877}
!11876 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !11874, file: !127, line: 96, baseType: !179, size: 8)
!11877 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !11874, file: !127, line: 97, baseType: !169, size: 8, offset: 8)
!11878 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !11871, file: !127, line: 100, baseType: !183, size: 16)
!11879 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !11835, file: !127, line: 107, baseType: !113, size: 32, offset: 128)
!11880 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !11835, file: !127, line: 127, baseType: !104, size: 32, offset: 160)
!11881 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !11835, file: !127, line: 131, baseType: !11882, size: 192, offset: 192)
!11882 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !163, line: 244, size: 192, elements: !11883)
!11883 = !{!11884, !11885, !11891}
!11884 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !11882, file: !163, line: 245, baseType: !11841, size: 64)
!11885 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !11882, file: !163, line: 246, baseType: !11886, size: 32, offset: 64)
!11886 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !163, line: 242, baseType: !11887)
!11887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11888, size: 32)
!11888 = !DISubroutineType(types: !11889)
!11889 = !{null, !11890}
!11890 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11882, size: 32)
!11891 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !11882, file: !163, line: 249, baseType: !109, size: 64, offset: 128)
!11892 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !11832, file: !127, line: 250, baseType: !11893, size: 288, offset: 384)
!11893 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !200, line: 25, size: 288, elements: !11894)
!11894 = !{!11895, !11896, !11897, !11898, !11899, !11900, !11901, !11902, !11903}
!11895 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !11893, file: !200, line: 26, baseType: !113, size: 32)
!11896 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !11893, file: !200, line: 27, baseType: !113, size: 32, offset: 32)
!11897 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !11893, file: !200, line: 28, baseType: !113, size: 32, offset: 64)
!11898 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !11893, file: !200, line: 29, baseType: !113, size: 32, offset: 96)
!11899 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !11893, file: !200, line: 30, baseType: !113, size: 32, offset: 128)
!11900 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !11893, file: !200, line: 31, baseType: !113, size: 32, offset: 160)
!11901 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !11893, file: !200, line: 32, baseType: !113, size: 32, offset: 192)
!11902 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !11893, file: !200, line: 33, baseType: !113, size: 32, offset: 224)
!11903 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !11893, file: !200, line: 34, baseType: !113, size: 32, offset: 256)
!11904 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !11832, file: !127, line: 253, baseType: !104, size: 32, offset: 672)
!11905 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !11832, file: !127, line: 256, baseType: !11863, size: 64, offset: 704)
!11906 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !11832, file: !127, line: 294, baseType: !105, size: 32, offset: 768)
!11907 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !11832, file: !127, line: 325, baseType: !11908, size: 32, offset: 800)
!11908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11909, size: 32)
!11909 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !122, line: 5073, size: 192, elements: !11910)
!11910 = !{!11911, !11917, !11918}
!11911 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !11909, file: !122, line: 5074, baseType: !11912, size: 96)
!11912 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !220, line: 56, size: 96, elements: !11913)
!11913 = !{!11914, !11915, !11916}
!11914 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !11912, file: !220, line: 57, baseType: !223, size: 32)
!11915 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !11912, file: !220, line: 58, baseType: !104, size: 32, offset: 32)
!11916 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !11912, file: !220, line: 59, baseType: !111, size: 32, offset: 64)
!11917 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !11909, file: !122, line: 5075, baseType: !11863, size: 64, offset: 96)
!11918 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !11909, file: !122, line: 5076, baseType: !11919, size: 32, offset: 160)
!11919 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !230, line: 43, size: 32, elements: !11920)
!11920 = !{!11921}
!11921 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !11919, file: !230, line: 52, baseType: !22, size: 32)
!11922 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !11832, file: !127, line: 343, baseType: !11923, size: 64, offset: 832)
!11923 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !200, line: 60, size: 64, elements: !11924)
!11924 = !{!11925, !11926}
!11925 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !11923, file: !200, line: 63, baseType: !113, size: 32)
!11926 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !11923, file: !200, line: 66, baseType: !113, size: 32, offset: 32)
!11927 = !{!11928, !11929, !11930}
!11928 = !DILocalVariable(name: "reason", arg: 1, scope: !11784, file: !2970, line: 209, type: !32)
!11929 = !DILocalVariable(name: "esf", arg: 2, scope: !11784, file: !2970, line: 209, type: !11787)
!11930 = !DILocalVariable(name: "thread", arg: 3, scope: !11784, file: !2970, line: 210, type: !11831)
!11931 = !DILocation(line: 0, scope: !11784)
!11932 = !DILocation(line: 212, column: 1, scope: !11784)
!11933 = distinct !DISubprogram(name: "coredump_memory_dump", scope: !2970, file: !2970, line: 214, type: !11934, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2966, retainedNodes: !11936)
!11934 = !DISubroutineType(types: !11935)
!11935 = !{null, !22, !22}
!11936 = !{!11937, !11938}
!11937 = !DILocalVariable(name: "start_addr", arg: 1, scope: !11933, file: !2970, line: 214, type: !22)
!11938 = !DILocalVariable(name: "end_addr", arg: 2, scope: !11933, file: !2970, line: 214, type: !22)
!11939 = !DILocation(line: 0, scope: !11933)
!11940 = !DILocation(line: 216, column: 1, scope: !11933)
!11941 = distinct !DISubprogram(name: "coredump_buffer_output", scope: !2970, file: !2970, line: 218, type: !11942, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2966, retainedNodes: !11944)
!11942 = !DISubroutineType(types: !11943)
!11943 = !{null, !426, !111}
!11944 = !{!11945, !11946}
!11945 = !DILocalVariable(name: "buf", arg: 1, scope: !11941, file: !2970, line: 218, type: !426)
!11946 = !DILocalVariable(name: "buflen", arg: 2, scope: !11941, file: !2970, line: 218, type: !111)
!11947 = !DILocation(line: 0, scope: !11941)
!11948 = !DILocation(line: 220, column: 1, scope: !11941)
!11949 = distinct !DISubprogram(name: "coredump_query", scope: !2970, file: !2970, line: 222, type: !11950, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2966, retainedNodes: !11952)
!11950 = !DISubroutineType(types: !11951)
!11951 = !{!105, !2969, !104}
!11952 = !{!11953, !11954}
!11953 = !DILocalVariable(name: "query_id", arg: 1, scope: !11949, file: !2970, line: 222, type: !2969)
!11954 = !DILocalVariable(name: "arg", arg: 2, scope: !11949, file: !2970, line: 222, type: !104)
!11955 = !DILocation(line: 0, scope: !11949)
!11956 = !DILocation(line: 224, column: 2, scope: !11949)
!11957 = distinct !DISubprogram(name: "coredump_cmd", scope: !2970, file: !2970, line: 227, type: !11958, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2966, retainedNodes: !11960)
!11958 = !DISubroutineType(types: !11959)
!11959 = !{!105, !2976, !104}
!11960 = !{!11961, !11962}
!11961 = !DILocalVariable(name: "query_id", arg: 1, scope: !11957, file: !2970, line: 227, type: !2976)
!11962 = !DILocalVariable(name: "arg", arg: 2, scope: !11957, file: !2970, line: 227, type: !104)
!11963 = !DILocation(line: 0, scope: !11957)
!11964 = !DILocation(line: 229, column: 2, scope: !11957)
!11965 = distinct !DISubprogram(name: "arch_system_halt", scope: !11966, file: !11966, line: 23, type: !7476, scopeLine: 24, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2966, retainedNodes: !11967)
!11966 = !DIFile(filename: "zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11967 = !{!11968}
!11968 = !DILocalVariable(name: "reason", arg: 1, scope: !11965, file: !11966, line: 23, type: !32)
!11969 = !DILocation(line: 0, scope: !11965)
!11970 = !DILocation(line: 55, column: 2, scope: !11971, inlinedAt: !11975)
!11971 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7644, file: !7644, line: 42, type: !9346, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2966, retainedNodes: !11972)
!11972 = !{!11973, !11974}
!11973 = !DILocalVariable(name: "key", scope: !11971, file: !7644, line: 44, type: !32)
!11974 = !DILocalVariable(name: "tmp", scope: !11971, file: !7644, line: 53, type: !32)
!11975 = distinct !DILocation(line: 31, column: 8, scope: !11965)
!11976 = !{i64 2846313}
!11977 = !DILocation(line: 0, scope: !11971, inlinedAt: !11975)
!11978 = !DILocation(line: 32, column: 2, scope: !11965)
!11979 = !DILocation(line: 32, column: 2, scope: !11980)
!11980 = distinct !DILexicalBlock(scope: !11981, file: !11966, line: 32, column: 2)
!11981 = distinct !DILexicalBlock(scope: !11965, file: !11966, line: 32, column: 2)
!11982 = distinct !{!11982, !11983, !11984}
!11983 = !DILocation(line: 32, column: 2, scope: !11981)
!11984 = !DILocation(line: 34, column: 2, scope: !11981)
!11985 = distinct !DISubprogram(name: "k_sys_fatal_error_handler", scope: !11966, file: !11966, line: 39, type: !11986, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2966, retainedNodes: !11988)
!11986 = !DISubroutineType(types: !11987)
!11987 = !{null, !32, !11787}
!11988 = !{!11989, !11990}
!11989 = !DILocalVariable(name: "reason", arg: 1, scope: !11985, file: !11966, line: 39, type: !32)
!11990 = !DILocalVariable(name: "esf", arg: 2, scope: !11985, file: !11966, line: 40, type: !11787)
!11991 = !DILocation(line: 0, scope: !11985)
!11992 = !DILocation(line: 45, column: 2, scope: !11993)
!11993 = distinct !DILexicalBlock(scope: !11994, file: !11966, line: 45, column: 2)
!11994 = distinct !DILexicalBlock(scope: !11995, file: !11966, line: 45, column: 2)
!11995 = distinct !DILexicalBlock(scope: !11996, file: !11966, line: 45, column: 2)
!11996 = distinct !DILexicalBlock(scope: !11985, file: !11966, line: 45, column: 2)
!11997 = !DILocation(line: 46, column: 2, scope: !11985)
!11998 = distinct !DISubprogram(name: "k_fatal_halt", scope: !11966, file: !11966, line: 81, type: !7476, scopeLine: 82, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2966, retainedNodes: !11999)
!11999 = !{!12000}
!12000 = !DILocalVariable(name: "reason", arg: 1, scope: !11998, file: !11966, line: 81, type: !32)
!12001 = !DILocation(line: 0, scope: !11998)
!12002 = !DILocation(line: 83, column: 2, scope: !11998)
!12003 = distinct !DISubprogram(name: "z_fatal_error", scope: !11966, file: !11966, line: 96, type: !11986, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2966, retainedNodes: !12004)
!12004 = !{!12005, !12006, !12007, !12008}
!12005 = !DILocalVariable(name: "reason", arg: 1, scope: !12003, file: !11966, line: 96, type: !32)
!12006 = !DILocalVariable(name: "esf", arg: 2, scope: !12003, file: !11966, line: 96, type: !11787)
!12007 = !DILocalVariable(name: "key", scope: !12003, file: !11966, line: 102, type: !32)
!12008 = !DILocalVariable(name: "thread", scope: !12003, file: !11966, line: 103, type: !11831)
!12009 = !DILocation(line: 0, scope: !12003)
!12010 = !DILocation(line: 55, column: 2, scope: !11971, inlinedAt: !12011)
!12011 = distinct !DILocation(line: 102, column: 21, scope: !12003)
!12012 = !DILocation(line: 0, scope: !11971, inlinedAt: !12011)
!12013 = !DILocation(line: 104, column: 4, scope: !12003)
!12014 = !DILocation(line: 109, column: 2, scope: !12015)
!12015 = distinct !DILexicalBlock(scope: !12016, file: !11966, line: 109, column: 2)
!12016 = distinct !DILexicalBlock(scope: !12017, file: !11966, line: 109, column: 2)
!12017 = distinct !DILexicalBlock(scope: !12018, file: !11966, line: 109, column: 2)
!12018 = distinct !DILexicalBlock(scope: !12003, file: !11966, line: 109, column: 2)
!12019 = !DILocation(line: 119, column: 11, scope: !12020)
!12020 = distinct !DILexicalBlock(scope: !12003, file: !11966, line: 119, column: 6)
!12021 = !DILocation(line: 119, column: 20, scope: !12020)
!12022 = !DILocalVariable(name: "esf", arg: 1, scope: !12023, file: !8517, line: 71, type: !11787)
!12023 = distinct !DISubprogram(name: "arch_is_in_nested_exception", scope: !8517, file: !8517, line: 71, type: !12024, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2966, retainedNodes: !12026)
!12024 = !DISubroutineType(types: !12025)
!12025 = !{!911, !11787}
!12026 = !{!12022}
!12027 = !DILocation(line: 0, scope: !12023, inlinedAt: !12028)
!12028 = distinct !DILocation(line: 119, column: 23, scope: !12020)
!12029 = !DILocation(line: 73, column: 21, scope: !12023, inlinedAt: !12028)
!12030 = !DILocation(line: 73, column: 26, scope: !12023, inlinedAt: !12028)
!12031 = !DILocation(line: 73, column: 9, scope: !12023, inlinedAt: !12028)
!12032 = !DILocation(line: 119, column: 6, scope: !12003)
!12033 = !DILocation(line: 120, column: 3, scope: !12034)
!12034 = distinct !DILexicalBlock(scope: !12035, file: !11966, line: 120, column: 3)
!12035 = distinct !DILexicalBlock(scope: !12036, file: !11966, line: 120, column: 3)
!12036 = distinct !DILexicalBlock(scope: !12037, file: !11966, line: 120, column: 3)
!12037 = distinct !DILexicalBlock(scope: !12038, file: !11966, line: 120, column: 3)
!12038 = distinct !DILexicalBlock(scope: !12020, file: !11966, line: 119, column: 57)
!12039 = !DILocation(line: 121, column: 2, scope: !12038)
!12040 = !DILocation(line: 124, column: 2, scope: !12041)
!12041 = distinct !DILexicalBlock(scope: !12042, file: !11966, line: 124, column: 2)
!12042 = distinct !DILexicalBlock(scope: !12043, file: !11966, line: 124, column: 2)
!12043 = distinct !DILexicalBlock(scope: !12044, file: !11966, line: 124, column: 2)
!12044 = distinct !DILexicalBlock(scope: !12003, file: !11966, line: 124, column: 2)
!12045 = !DILocation(line: 131, column: 2, scope: !12003)
!12046 = !DILocation(line: 147, column: 3, scope: !12047)
!12047 = distinct !DILexicalBlock(scope: !12048, file: !11966, line: 147, column: 3)
!12048 = distinct !DILexicalBlock(scope: !12049, file: !11966, line: 147, column: 3)
!12049 = distinct !DILexicalBlock(scope: !12050, file: !11966, line: 146, column: 32)
!12050 = distinct !DILexicalBlock(scope: !12003, file: !11966, line: 146, column: 6)
!12051 = !DILocation(line: 147, column: 3, scope: !12048)
!12052 = !DILocation(line: 147, column: 3, scope: !12053)
!12053 = distinct !DILexicalBlock(scope: !12047, file: !11966, line: 147, column: 3)
!12054 = !DILocalVariable(name: "key", arg: 1, scope: !12055, file: !7644, line: 84, type: !32)
!12055 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7644, file: !7644, line: 84, type: !7476, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2966, retainedNodes: !12056)
!12056 = !{!12054}
!12057 = !DILocation(line: 0, scope: !12055, inlinedAt: !12058)
!12058 = distinct !DILocation(line: 186, column: 2, scope: !12003)
!12059 = !DILocation(line: 95, column: 2, scope: !12055, inlinedAt: !12058)
!12060 = !{i64 2847130}
!12061 = !DILocation(line: 189, column: 3, scope: !12062)
!12062 = distinct !DILexicalBlock(scope: !12063, file: !11966, line: 188, column: 41)
!12063 = distinct !DILexicalBlock(scope: !12003, file: !11966, line: 188, column: 6)
!12064 = !DILocation(line: 191, column: 1, scope: !12003)
!12065 = distinct !DISubprogram(name: "k_current_get", scope: !122, file: !122, line: 530, type: !12066, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2966, retainedNodes: !391)
!12066 = !DISubroutineType(types: !12067)
!12067 = !{!12068}
!12068 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !127, line: 347, baseType: !11831)
!12069 = !DILocation(line: 535, column: 9, scope: !12065)
!12070 = !DILocation(line: 535, column: 2, scope: !12065)
!12071 = distinct !DISubprogram(name: "reason_to_str", scope: !11966, file: !11966, line: 62, type: !12072, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2966, retainedNodes: !12074)
!12072 = !DISubroutineType(types: !12073)
!12073 = !{!263, !32}
!12074 = !{!12075}
!12075 = !DILocalVariable(name: "reason", arg: 1, scope: !12071, file: !11966, line: 62, type: !32)
!12076 = !DILocation(line: 0, scope: !12071)
!12077 = !DILocation(line: 64, column: 2, scope: !12071)
!12078 = !DILocation(line: 0, scope: !12079)
!12079 = distinct !DILexicalBlock(scope: !12071, file: !11966, line: 64, column: 18)
!12080 = !DILocation(line: 78, column: 1, scope: !12071)
!12081 = distinct !DISubprogram(name: "thread_name_get", scope: !11966, file: !11966, line: 51, type: !12082, scopeLine: 52, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2966, retainedNodes: !12084)
!12082 = !DISubroutineType(types: !12083)
!12083 = !{!263, !11831}
!12084 = !{!12085, !12086}
!12085 = !DILocalVariable(name: "thread", arg: 1, scope: !12081, file: !11966, line: 51, type: !11831)
!12086 = !DILocalVariable(name: "thread_name", scope: !12081, file: !11966, line: 53, type: !263)
!12087 = !DILocation(line: 0, scope: !12081)
!12088 = !DILocation(line: 53, column: 36, scope: !12081)
!12089 = !DILocation(line: 53, column: 28, scope: !12081)
!12090 = !DILocation(line: 53, column: 47, scope: !12081)
!12091 = !DILocation(line: 55, column: 19, scope: !12092)
!12092 = distinct !DILexicalBlock(scope: !12081, file: !11966, line: 55, column: 6)
!12093 = !DILocation(line: 55, column: 28, scope: !12092)
!12094 = !DILocation(line: 55, column: 32, scope: !12092)
!12095 = !DILocation(line: 55, column: 47, scope: !12092)
!12096 = !DILocation(line: 55, column: 6, scope: !12081)
!12097 = !DILocation(line: 57, column: 2, scope: !12098)
!12098 = distinct !DILexicalBlock(scope: !12092, file: !11966, line: 55, column: 57)
!12099 = !DILocation(line: 59, column: 2, scope: !12081)
!12100 = distinct !DISubprogram(name: "k_thread_abort", scope: !3239, file: !3239, line: 188, type: !12101, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2966, retainedNodes: !12103)
!12101 = !DISubroutineType(types: !12102)
!12102 = !{null, !12068}
!12103 = !{!12104}
!12104 = !DILocalVariable(name: "thread", arg: 1, scope: !12100, file: !3239, line: 188, type: !12068)
!12105 = !DILocation(line: 0, scope: !12100)
!12106 = !DILocation(line: 197, column: 2, scope: !12107)
!12107 = distinct !DILexicalBlock(scope: !12100, file: !3239, line: 197, column: 2)
!12108 = !{i64 2151045453}
!12109 = !DILocation(line: 198, column: 2, scope: !12100)
!12110 = !DILocation(line: 199, column: 1, scope: !12100)
!12111 = distinct !DISubprogram(name: "z_current_get", scope: !3239, file: !3239, line: 173, type: !12066, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2966, retainedNodes: !391)
!12112 = !DILocation(line: 180, column: 2, scope: !12113)
!12113 = distinct !DILexicalBlock(scope: !12111, file: !3239, line: 180, column: 2)
!12114 = !{i64 2151045385}
!12115 = !DILocation(line: 181, column: 9, scope: !12111)
!12116 = !DILocation(line: 181, column: 2, scope: !12111)
!12117 = distinct !DISubprogram(name: "z_early_memset", scope: !1766, file: !1766, line: 108, type: !12118, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1762, retainedNodes: !12120)
!12118 = !DISubroutineType(types: !12119)
!12119 = !{null, !104, !105, !111}
!12120 = !{!12121, !12122, !12123}
!12121 = !DILocalVariable(name: "dst", arg: 1, scope: !12117, file: !1766, line: 108, type: !104)
!12122 = !DILocalVariable(name: "c", arg: 2, scope: !12117, file: !1766, line: 108, type: !105)
!12123 = !DILocalVariable(name: "n", arg: 3, scope: !12117, file: !1766, line: 108, type: !111)
!12124 = !DILocation(line: 0, scope: !12117)
!12125 = !DILocation(line: 110, column: 9, scope: !12117)
!12126 = !DILocation(line: 111, column: 1, scope: !12117)
!12127 = distinct !DISubprogram(name: "z_early_memcpy", scope: !1766, file: !1766, line: 121, type: !12128, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1762, retainedNodes: !12130)
!12128 = !DISubroutineType(types: !12129)
!12129 = !{null, !104, !13, !111}
!12130 = !{!12131, !12132, !12133}
!12131 = !DILocalVariable(name: "dst", arg: 1, scope: !12127, file: !1766, line: 121, type: !104)
!12132 = !DILocalVariable(name: "src", arg: 2, scope: !12127, file: !1766, line: 121, type: !13)
!12133 = !DILocalVariable(name: "n", arg: 3, scope: !12127, file: !1766, line: 121, type: !111)
!12134 = !DILocation(line: 0, scope: !12127)
!12135 = !DILocation(line: 123, column: 9, scope: !12127)
!12136 = !DILocation(line: 124, column: 1, scope: !12127)
!12137 = distinct !DISubprogram(name: "z_bss_zero", scope: !1766, file: !1766, line: 132, type: !260, scopeLine: 133, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1762, retainedNodes: !391)
!12138 = !DILocation(line: 143, column: 2, scope: !12137)
!12139 = !DILocation(line: 168, column: 1, scope: !12137)
!12140 = distinct !DISubprogram(name: "z_init_cpu", scope: !1766, file: !1766, line: 372, type: !12141, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1762, retainedNodes: !12143)
!12141 = !DISubroutineType(types: !12142)
!12142 = !{null, !105}
!12143 = !{!12144}
!12144 = !DILocalVariable(name: "id", arg: 1, scope: !12140, file: !1766, line: 372, type: !105)
!12145 = !DILocation(line: 0, scope: !12140)
!12146 = !DILocation(line: 374, column: 2, scope: !12140)
!12147 = !DILocation(line: 375, column: 34, scope: !12140)
!12148 = !DILocation(line: 375, column: 19, scope: !12140)
!12149 = !DILocation(line: 375, column: 31, scope: !12140)
!12150 = !DILocation(line: 376, column: 24, scope: !12140)
!12151 = !DILocation(line: 376, column: 19, scope: !12140)
!12152 = !DILocation(line: 376, column: 22, scope: !12140)
!12153 = !DILocation(line: 378, column: 26, scope: !12140)
!12154 = !DILocation(line: 378, column: 4, scope: !12140)
!12155 = !DILocation(line: 378, column: 50, scope: !12140)
!12156 = !DILocation(line: 377, column: 19, scope: !12140)
!12157 = !DILocation(line: 377, column: 29, scope: !12140)
!12158 = !DILocation(line: 384, column: 1, scope: !12140)
!12159 = distinct !DISubprogram(name: "init_idle_thread", scope: !1766, file: !1766, line: 343, type: !12141, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1762, retainedNodes: !12160)
!12160 = !{!12161, !12162, !12163, !12166}
!12161 = !DILocalVariable(name: "i", arg: 1, scope: !12159, file: !1766, line: 343, type: !105)
!12162 = !DILocalVariable(name: "thread", scope: !12159, file: !1766, line: 345, type: !1858)
!12163 = !DILocalVariable(name: "stack", scope: !12159, file: !1766, line: 346, type: !12164)
!12164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12165, size: 32)
!12165 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !241, line: 44, baseType: !1969)
!12166 = !DILocalVariable(name: "tname", scope: !12159, file: !1766, line: 358, type: !102)
!12167 = !DILocation(line: 0, scope: !12159)
!12168 = !DILocation(line: 345, column: 29, scope: !12159)
!12169 = !DILocation(line: 346, column: 28, scope: !12159)
!12170 = !DILocation(line: 362, column: 37, scope: !12159)
!12171 = !DILocation(line: 362, column: 36, scope: !12159)
!12172 = !DILocation(line: 361, column: 2, scope: !12159)
!12173 = !DILocation(line: 365, column: 2, scope: !12159)
!12174 = !DILocation(line: 370, column: 1, scope: !12159)
!12175 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !243, file: !243, line: 331, type: !12176, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1762, retainedNodes: !12178)
!12176 = !DISubroutineType(types: !12177)
!12177 = !{!102, !12164}
!12178 = !{!12179}
!12179 = !DILocalVariable(name: "sym", arg: 1, scope: !12175, file: !243, line: 331, type: !12164)
!12180 = !DILocation(line: 0, scope: !12175)
!12181 = !DILocation(line: 333, column: 9, scope: !12175)
!12182 = !DILocation(line: 333, column: 2, scope: !12175)
!12183 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !12184, file: !12184, line: 155, type: !12185, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1762, retainedNodes: !12187)
!12184 = !DIFile(filename: "zephyr/kernel/include/ksched.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12185 = !DISubroutineType(types: !12186)
!12186 = !{null, !1858}
!12187 = !{!12188}
!12188 = !DILocalVariable(name: "thread", arg: 1, scope: !12183, file: !12184, line: 155, type: !1858)
!12189 = !DILocation(line: 0, scope: !12183)
!12190 = !DILocation(line: 157, column: 15, scope: !12183)
!12191 = !DILocation(line: 157, column: 28, scope: !12183)
!12192 = !DILocation(line: 158, column: 1, scope: !12183)
!12193 = distinct !DISubprogram(name: "z_early_boot_rand_get", scope: !1766, file: !1766, line: 451, type: !11942, scopeLine: 452, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1762, retainedNodes: !12194)
!12194 = !{!12195, !12196}
!12195 = !DILocalVariable(name: "buf", arg: 1, scope: !12193, file: !1766, line: 451, type: !426)
!12196 = !DILocalVariable(name: "length", arg: 2, scope: !12193, file: !1766, line: 451, type: !111)
!12197 = !DILocation(line: 0, scope: !12193)
!12198 = !DILocation(line: 485, column: 2, scope: !12193)
!12199 = !DILocation(line: 486, column: 1, scope: !12193)
!12200 = distinct !DISubprogram(name: "sys_rand_get", scope: !12201, file: !12201, line: 46, type: !12202, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1762, retainedNodes: !12204)
!12201 = !DIFile(filename: "zephyr/include/generated/syscalls/rand32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/metairq_dispatch")
!12202 = !DISubroutineType(types: !12203)
!12203 = !{null, !104, !111}
!12204 = !{!12205, !12206}
!12205 = !DILocalVariable(name: "dst", arg: 1, scope: !12200, file: !12201, line: 46, type: !104)
!12206 = !DILocalVariable(name: "len", arg: 2, scope: !12200, file: !12201, line: 46, type: !111)
!12207 = !DILocation(line: 0, scope: !12200)
!12208 = !DILocation(line: 56, column: 2, scope: !12209)
!12209 = distinct !DILexicalBlock(scope: !12200, file: !12201, line: 56, column: 2)
!12210 = !{i64 2151263002}
!12211 = !DILocation(line: 57, column: 2, scope: !12200)
!12212 = !DILocation(line: 58, column: 1, scope: !12200)
!12213 = !DISubprogram(name: "z_impl_sys_rand_get", scope: !12201, file: !12201, line: 43, type: !12202, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !391)
!12214 = distinct !DISubprogram(name: "z_cstart", scope: !1766, file: !1766, line: 501, type: !260, scopeLine: 502, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1762, retainedNodes: !12215)
!12215 = !{!12216}
!12216 = !DILocalVariable(name: "dummy_thread", scope: !12214, file: !1766, line: 518, type: !1859)
!12217 = !DILocation(line: 507, column: 2, scope: !12214)
!12218 = !DILocation(line: 43, column: 14, scope: !12219, inlinedAt: !12223)
!12219 = distinct !DISubprogram(name: "z_arm_interrupt_stack_setup", scope: !12220, file: !12220, line: 40, type: !260, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1762, retainedNodes: !12221)
!12220 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12221 = !{!12222}
!12222 = !DILocalVariable(name: "msp", scope: !12219, file: !12220, line: 42, type: !113)
!12223 = distinct !DILocation(line: 44, column: 2, scope: !12224, inlinedAt: !12226)
!12224 = distinct !DISubprogram(name: "arch_kernel_init", scope: !12225, file: !12225, line: 42, type: !260, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1762, retainedNodes: !391)
!12225 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/kernel_arch_func.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12226 = distinct !DILocation(line: 510, column: 2, scope: !12214)
!12227 = !DILocation(line: 43, column: 3, scope: !12219, inlinedAt: !12223)
!12228 = !DILocation(line: 43, column: 60, scope: !12219, inlinedAt: !12223)
!12229 = !DILocation(line: 0, scope: !12219, inlinedAt: !12223)
!12230 = !DILocalVariable(name: "topOfMainStack", arg: 1, scope: !12231, file: !7525, line: 1153, type: !113)
!12231 = distinct !DISubprogram(name: "__set_MSP", scope: !7525, file: !7525, line: 1153, type: !7620, scopeLine: 1154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1762, retainedNodes: !12232)
!12232 = !{!12230}
!12233 = !DILocation(line: 0, scope: !12231, inlinedAt: !12234)
!12234 = distinct !DILocation(line: 46, column: 2, scope: !12219, inlinedAt: !12223)
!12235 = !DILocation(line: 1155, column: 3, scope: !12231, inlinedAt: !12234)
!12236 = !{i64 7509069}
!12237 = !DILocation(line: 62, column: 11, scope: !12219, inlinedAt: !12223)
!12238 = !DILocation(line: 102, column: 2, scope: !12239, inlinedAt: !12240)
!12239 = distinct !DISubprogram(name: "z_arm_exc_setup", scope: !8517, file: !8517, line: 97, type: !260, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1762, retainedNodes: !391)
!12240 = distinct !DILocation(line: 45, column: 2, scope: !12224, inlinedAt: !12226)
!12241 = !DILocation(line: 108, column: 2, scope: !12239, inlinedAt: !12240)
!12242 = !DILocation(line: 112, column: 2, scope: !12239, inlinedAt: !12240)
!12243 = !DILocation(line: 113, column: 2, scope: !12239, inlinedAt: !12240)
!12244 = !DILocation(line: 114, column: 2, scope: !12239, inlinedAt: !12240)
!12245 = !DILocation(line: 116, column: 2, scope: !12239, inlinedAt: !12240)
!12246 = !DILocation(line: 123, column: 13, scope: !12239, inlinedAt: !12240)
!12247 = !DILocation(line: 46, column: 2, scope: !12224, inlinedAt: !12226)
!12248 = !DILocation(line: 47, column: 2, scope: !12224, inlinedAt: !12226)
!12249 = !DILocation(line: 174, column: 12, scope: !12250, inlinedAt: !12251)
!12250 = distinct !DISubprogram(name: "z_arm_clear_faults", scope: !8517, file: !8517, line: 169, type: !260, scopeLine: 170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1762, retainedNodes: !391)
!12251 = distinct !DILocation(line: 48, column: 2, scope: !12224, inlinedAt: !12226)
!12252 = !DILocation(line: 179, column: 12, scope: !12250, inlinedAt: !12251)
!12253 = !DILocation(line: 518, column: 2, scope: !12214)
!12254 = !DILocation(line: 518, column: 18, scope: !12214)
!12255 = !DILocation(line: 520, column: 2, scope: !12214)
!12256 = !DILocation(line: 523, column: 2, scope: !12214)
!12257 = !DILocation(line: 526, column: 2, scope: !12214)
!12258 = !DILocation(line: 527, column: 2, scope: !12214)
!12259 = !DILocation(line: 543, column: 24, scope: !12214)
!12260 = !DILocation(line: 543, column: 2, scope: !12214)
!12261 = !DILocation(line: 0, scope: !1992)
!12262 = !DILocation(line: 246, column: 15, scope: !2010)
!12263 = !DILocation(line: 246, column: 36, scope: !2009)
!12264 = !DILocation(line: 246, column: 2, scope: !2010)
!12265 = !DILocation(line: 247, column: 37, scope: !2008)
!12266 = !DILocation(line: 0, scope: !2008)
!12267 = !DILocation(line: 248, column: 19, scope: !2008)
!12268 = !DILocation(line: 248, column: 12, scope: !2008)
!12269 = !DILocation(line: 250, column: 11, scope: !12270)
!12270 = distinct !DILexicalBlock(scope: !2008, file: !1766, line: 250, column: 7)
!12271 = !DILocation(line: 250, column: 7, scope: !2008)
!12272 = !DILocation(line: 254, column: 11, scope: !12273)
!12273 = distinct !DILexicalBlock(scope: !12274, file: !1766, line: 254, column: 8)
!12274 = distinct !DILexicalBlock(scope: !12270, file: !1766, line: 250, column: 20)
!12275 = !DILocation(line: 254, column: 8, scope: !12274)
!12276 = !DILocation(line: 255, column: 9, scope: !12277)
!12277 = distinct !DILexicalBlock(scope: !12273, file: !1766, line: 254, column: 17)
!12278 = !DILocation(line: 258, column: 9, scope: !12277)
!12279 = !DILocation(line: 261, column: 28, scope: !12277)
!12280 = !DILocation(line: 261, column: 10, scope: !12277)
!12281 = !DILocation(line: 261, column: 17, scope: !12277)
!12282 = !DILocation(line: 261, column: 26, scope: !12277)
!12283 = !DILocation(line: 262, column: 4, scope: !12277)
!12284 = !DILocation(line: 263, column: 9, scope: !12274)
!12285 = !DILocation(line: 263, column: 16, scope: !12274)
!12286 = !DILocation(line: 263, column: 28, scope: !12274)
!12287 = !DILocation(line: 264, column: 3, scope: !12274)
!12288 = !DILocation(line: 246, column: 60, scope: !2009)
!12289 = distinct !{!12289, !12264, !12290}
!12290 = !DILocation(line: 265, column: 2, scope: !2010)
!12291 = !DILocation(line: 266, column: 1, scope: !1992)
!12292 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !1612, file: !1612, line: 1814, type: !7565, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1762, retainedNodes: !12293)
!12293 = !{!12294, !12295}
!12294 = !DILocalVariable(name: "IRQn", arg: 1, scope: !12292, file: !1612, line: 1814, type: !2437)
!12295 = !DILocalVariable(name: "priority", arg: 2, scope: !12292, file: !1612, line: 1814, type: !113)
!12296 = !DILocation(line: 0, scope: !12292)
!12297 = !DILocation(line: 1822, column: 48, scope: !12298)
!12298 = distinct !DILexicalBlock(scope: !12299, file: !1612, line: 1821, column: 3)
!12299 = distinct !DILexicalBlock(scope: !12292, file: !1612, line: 1816, column: 7)
!12300 = !DILocation(line: 1822, column: 32, scope: !12298)
!12301 = !DILocation(line: 1822, column: 40, scope: !12298)
!12302 = !DILocation(line: 1822, column: 5, scope: !12298)
!12303 = !DILocation(line: 1822, column: 46, scope: !12298)
!12304 = !DILocation(line: 1824, column: 1, scope: !12292)
!12305 = !DISubprogram(name: "z_arm_cpu_idle_init", scope: !12225, file: !12225, line: 32, type: !260, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !391)
!12306 = distinct !DISubprogram(name: "z_dummy_thread_init", scope: !12307, file: !12307, line: 215, type: !12185, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1762, retainedNodes: !12308)
!12307 = !DIFile(filename: "zephyr/kernel/include/kswap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12308 = !{!12309}
!12309 = !DILocalVariable(name: "dummy_thread", arg: 1, scope: !12306, file: !12307, line: 215, type: !1858)
!12310 = !DILocation(line: 0, scope: !12306)
!12311 = !DILocation(line: 217, column: 21, scope: !12306)
!12312 = !DILocation(line: 217, column: 34, scope: !12306)
!12313 = !DILocation(line: 221, column: 21, scope: !12306)
!12314 = !DILocation(line: 221, column: 34, scope: !12306)
!12315 = !DILocation(line: 232, column: 16, scope: !12306)
!12316 = !DILocation(line: 232, column: 30, scope: !12306)
!12317 = !DILocation(line: 239, column: 24, scope: !12306)
!12318 = !DILocation(line: 240, column: 1, scope: !12306)
!12319 = distinct !DISubprogram(name: "prepare_multithreading", scope: !1766, file: !1766, line: 399, type: !12320, scopeLine: 400, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1762, retainedNodes: !12322)
!12320 = !DISubroutineType(types: !12321)
!12321 = !{!102}
!12322 = !{!12323}
!12323 = !DILocalVariable(name: "stack_ptr", scope: !12319, file: !1766, line: 401, type: !102)
!12324 = !DILocation(line: 404, column: 2, scope: !12319)
!12325 = !DILocation(line: 416, column: 24, scope: !12319)
!12326 = !DILocation(line: 418, column: 14, scope: !12319)
!12327 = !DILocation(line: 0, scope: !12319)
!12328 = !DILocation(line: 423, column: 2, scope: !12319)
!12329 = !DILocation(line: 424, column: 2, scope: !12319)
!12330 = !DILocation(line: 426, column: 2, scope: !12319)
!12331 = !DILocation(line: 428, column: 2, scope: !12319)
!12332 = distinct !DISubprogram(name: "switch_to_main_thread", scope: !1766, file: !1766, line: 432, type: !12333, scopeLine: 433, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1762, retainedNodes: !12335)
!12333 = !DISubroutineType(types: !12334)
!12334 = !{null, !102}
!12335 = !{!12336}
!12336 = !DILocalVariable(name: "stack_ptr", arg: 1, scope: !12332, file: !1766, line: 432, type: !102)
!12337 = !DILocation(line: 0, scope: !12332)
!12338 = !DILocation(line: 435, column: 2, scope: !12332)
!12339 = !DILocation(line: 445, column: 2, scope: !12332)
!12340 = distinct !DISubprogram(name: "bg_thread_main", scope: !1766, file: !1766, line: 277, type: !250, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1762, retainedNodes: !12341)
!12341 = !{!12342, !12343, !12344}
!12342 = !DILocalVariable(name: "unused1", arg: 1, scope: !12340, file: !1766, line: 277, type: !104)
!12343 = !DILocalVariable(name: "unused2", arg: 2, scope: !12340, file: !1766, line: 277, type: !104)
!12344 = !DILocalVariable(name: "unused3", arg: 3, scope: !12340, file: !1766, line: 277, type: !104)
!12345 = !DILocation(line: 0, scope: !12340)
!12346 = !DILocation(line: 291, column: 20, scope: !12340)
!12347 = !DILocation(line: 293, column: 2, scope: !12340)
!12348 = !DILocation(line: 297, column: 2, scope: !12340)
!12349 = !DILocation(line: 305, column: 2, scope: !12340)
!12350 = !DILocation(line: 307, column: 2, scope: !12340)
!12351 = !DILocation(line: 330, column: 8, scope: !12340)
!12352 = !DILocation(line: 333, column: 34, scope: !12340)
!12353 = !DILocation(line: 339, column: 1, scope: !12340)
!12354 = distinct !DISubprogram(name: "k_thread_foreach", scope: !2021, file: !2021, line: 45, type: !12355, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2121, retainedNodes: !12363)
!12355 = !DISubroutineType(types: !12356)
!12356 = !{null, !12357, !104}
!12357 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_user_cb_t", file: !122, line: 103, baseType: !12358)
!12358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12359, size: 32)
!12359 = !DISubroutineType(types: !12360)
!12360 = !{null, !12361, !104}
!12361 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12362, size: 32)
!12362 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2026)
!12363 = !{!12364, !12365}
!12364 = !DILocalVariable(name: "user_cb", arg: 1, scope: !12354, file: !2021, line: 45, type: !12357)
!12365 = !DILocalVariable(name: "user_data", arg: 2, scope: !12354, file: !2021, line: 45, type: !104)
!12366 = !DILocation(line: 0, scope: !12354)
!12367 = !DILocation(line: 71, column: 1, scope: !12354)
!12368 = distinct !DISubprogram(name: "k_thread_foreach_unlocked", scope: !2021, file: !2021, line: 73, type: !12355, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2121, retainedNodes: !12369)
!12369 = !{!12370, !12371}
!12370 = !DILocalVariable(name: "user_cb", arg: 1, scope: !12368, file: !2021, line: 73, type: !12357)
!12371 = !DILocalVariable(name: "user_data", arg: 2, scope: !12368, file: !2021, line: 73, type: !104)
!12372 = !DILocation(line: 0, scope: !12368)
!12373 = !DILocation(line: 95, column: 1, scope: !12368)
!12374 = distinct !DISubprogram(name: "k_is_in_isr", scope: !2021, file: !2021, line: 97, type: !8518, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2121, retainedNodes: !391)
!12375 = !DILocation(line: 1031, column: 3, scope: !12376, inlinedAt: !12379)
!12376 = distinct !DISubprogram(name: "__get_IPSR", scope: !7525, file: !7525, line: 1027, type: !389, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2121, retainedNodes: !12377)
!12377 = !{!12378}
!12378 = !DILocalVariable(name: "result", scope: !12376, file: !7525, line: 1029, type: !113)
!12379 = distinct !DILocation(line: 48, column: 10, scope: !12380, inlinedAt: !12381)
!12380 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !8517, file: !8517, line: 46, type: !8518, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2121, retainedNodes: !391)
!12381 = distinct !DILocation(line: 99, column: 9, scope: !12374)
!12382 = !{i64 7020913}
!12383 = !DILocation(line: 0, scope: !12376, inlinedAt: !12379)
!12384 = !DILocation(line: 48, column: 9, scope: !12380, inlinedAt: !12381)
!12385 = !DILocation(line: 99, column: 2, scope: !12374)
!12386 = distinct !DISubprogram(name: "z_thread_essential_set", scope: !2021, file: !2021, line: 106, type: !260, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2121, retainedNodes: !391)
!12387 = !DILocation(line: 108, column: 2, scope: !12386)
!12388 = !DILocation(line: 108, column: 17, scope: !12386)
!12389 = !DILocation(line: 108, column: 30, scope: !12386)
!12390 = !DILocation(line: 109, column: 1, scope: !12386)
!12391 = distinct !DISubprogram(name: "z_thread_essential_clear", scope: !2021, file: !2021, line: 116, type: !260, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2121, retainedNodes: !391)
!12392 = !DILocation(line: 118, column: 2, scope: !12391)
!12393 = !DILocation(line: 118, column: 17, scope: !12391)
!12394 = !DILocation(line: 118, column: 30, scope: !12391)
!12395 = !DILocation(line: 119, column: 1, scope: !12391)
!12396 = distinct !DISubprogram(name: "z_is_thread_essential", scope: !2021, file: !2021, line: 126, type: !8518, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2121, retainedNodes: !391)
!12397 = !DILocation(line: 128, column: 10, scope: !12396)
!12398 = !DILocation(line: 128, column: 25, scope: !12396)
!12399 = !DILocation(line: 128, column: 38, scope: !12396)
!12400 = !DILocation(line: 128, column: 53, scope: !12396)
!12401 = !DILocation(line: 128, column: 2, scope: !12396)
!12402 = distinct !DISubprogram(name: "z_impl_k_thread_name_set", scope: !2021, file: !2021, line: 187, type: !12403, scopeLine: 188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2121, retainedNodes: !12405)
!12403 = !DISubroutineType(types: !12404)
!12404 = !{!105, !2025, !263}
!12405 = !{!12406, !12407}
!12406 = !DILocalVariable(name: "thread", arg: 1, scope: !12402, file: !2021, line: 187, type: !2025)
!12407 = !DILocalVariable(name: "value", arg: 2, scope: !12402, file: !2021, line: 187, type: !263)
!12408 = !DILocation(line: 0, scope: !12402)
!12409 = !DILocation(line: 206, column: 2, scope: !12402)
!12410 = distinct !DISubprogram(name: "k_thread_name_get", scope: !2021, file: !2021, line: 238, type: !12411, scopeLine: 239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2121, retainedNodes: !12413)
!12411 = !DISubroutineType(types: !12412)
!12412 = !{!263, !2025}
!12413 = !{!12414}
!12414 = !DILocalVariable(name: "thread", arg: 1, scope: !12410, file: !2021, line: 238, type: !2025)
!12415 = !DILocation(line: 0, scope: !12410)
!12416 = !DILocation(line: 244, column: 2, scope: !12410)
!12417 = distinct !DISubprogram(name: "z_impl_k_thread_name_copy", scope: !2021, file: !2021, line: 248, type: !12418, scopeLine: 249, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2121, retainedNodes: !12420)
!12418 = !DISubroutineType(types: !12419)
!12419 = !{!105, !2024, !102, !111}
!12420 = !{!12421, !12422, !12423}
!12421 = !DILocalVariable(name: "thread", arg: 1, scope: !12417, file: !2021, line: 248, type: !2024)
!12422 = !DILocalVariable(name: "buf", arg: 2, scope: !12417, file: !2021, line: 248, type: !102)
!12423 = !DILocalVariable(name: "size", arg: 3, scope: !12417, file: !2021, line: 248, type: !111)
!12424 = !DILocation(line: 0, scope: !12417)
!12425 = !DILocation(line: 257, column: 2, scope: !12417)
!12426 = !DILocation(line: 0, scope: !2020)
!12427 = !DILocation(line: 281, column: 11, scope: !12428)
!12428 = distinct !DILexicalBlock(scope: !2020, file: !2021, line: 281, column: 6)
!12429 = !DILocation(line: 281, column: 20, scope: !12428)
!12430 = !DILocation(line: 275, column: 45, scope: !2020)
!12431 = !DILocation(line: 285, column: 10, scope: !2020)
!12432 = !DILocation(line: 0, scope: !2138)
!12433 = !DILocation(line: 293, column: 39, scope: !12434)
!12434 = distinct !DILexicalBlock(scope: !2138, file: !2021, line: 293, column: 2)
!12435 = !DILocation(line: 293, column: 2, scope: !2138)
!12436 = !DILocation(line: 273, column: 14, scope: !2020)
!12437 = !DILocation(line: 309, column: 2, scope: !2020)
!12438 = !DILocation(line: 309, column: 11, scope: !2020)
!12439 = !DILocation(line: 311, column: 2, scope: !2020)
!12440 = !DILocation(line: 293, column: 26, scope: !12434)
!12441 = !DILocation(line: 294, column: 9, scope: !12442)
!12442 = distinct !DILexicalBlock(scope: !12434, file: !2021, line: 293, column: 54)
!12443 = !DILocation(line: 295, column: 21, scope: !12444)
!12444 = distinct !DILexicalBlock(scope: !12442, file: !2021, line: 295, column: 7)
!12445 = !DILocation(line: 295, column: 28, scope: !12444)
!12446 = !DILocation(line: 295, column: 7, scope: !12442)
!12447 = !DILocation(line: 299, column: 25, scope: !12442)
!12448 = !DILocation(line: 299, column: 41, scope: !12442)
!12449 = !DILocation(line: 300, column: 7, scope: !12442)
!12450 = !DILocation(line: 300, column: 26, scope: !12442)
!12451 = !DILocation(line: 299, column: 10, scope: !12442)
!12452 = !DILocation(line: 299, column: 7, scope: !12442)
!12453 = !DILocation(line: 302, column: 16, scope: !12442)
!12454 = !DILocation(line: 304, column: 20, scope: !12455)
!12455 = distinct !DILexicalBlock(scope: !12442, file: !2021, line: 304, column: 7)
!12456 = !DILocation(line: 304, column: 7, scope: !12442)
!12457 = !DILocation(line: 305, column: 26, scope: !12458)
!12458 = distinct !DILexicalBlock(scope: !12455, file: !2021, line: 304, column: 26)
!12459 = !DILocation(line: 305, column: 42, scope: !12458)
!12460 = !DILocation(line: 305, column: 11, scope: !12458)
!12461 = !DILocation(line: 305, column: 8, scope: !12458)
!12462 = !DILocation(line: 306, column: 3, scope: !12458)
!12463 = !DILocation(line: 293, column: 50, scope: !12434)
!12464 = !DILocation(line: 312, column: 1, scope: !2020)
!12465 = distinct !DISubprogram(name: "copy_bytes", scope: !2021, file: !2021, line: 261, type: !12466, scopeLine: 262, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2121, retainedNodes: !12468)
!12466 = !DISubroutineType(types: !12467)
!12467 = !{!111, !102, !111, !263, !111}
!12468 = !{!12469, !12470, !12471, !12472, !12473}
!12469 = !DILocalVariable(name: "dest", arg: 1, scope: !12465, file: !2021, line: 261, type: !102)
!12470 = !DILocalVariable(name: "dest_size", arg: 2, scope: !12465, file: !2021, line: 261, type: !111)
!12471 = !DILocalVariable(name: "src", arg: 3, scope: !12465, file: !2021, line: 261, type: !263)
!12472 = !DILocalVariable(name: "src_size", arg: 4, scope: !12465, file: !2021, line: 261, type: !111)
!12473 = !DILocalVariable(name: "bytes_to_copy", scope: !12465, file: !2021, line: 263, type: !111)
!12474 = !DILocation(line: 0, scope: !12465)
!12475 = !DILocation(line: 265, column: 18, scope: !12465)
!12476 = !DILocation(line: 266, column: 2, scope: !12465)
!12477 = !DILocation(line: 268, column: 2, scope: !12465)
!12478 = distinct !DISubprogram(name: "z_impl_k_thread_start", scope: !2021, file: !2021, line: 383, type: !12479, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2121, retainedNodes: !12481)
!12479 = !DISubroutineType(types: !12480)
!12480 = !{null, !2025}
!12481 = !{!12482}
!12482 = !DILocalVariable(name: "thread", arg: 1, scope: !12478, file: !2021, line: 383, type: !2025)
!12483 = !DILocation(line: 0, scope: !12478)
!12484 = !DILocation(line: 387, column: 2, scope: !12478)
!12485 = !DILocation(line: 388, column: 1, scope: !12478)
!12486 = distinct !DISubprogram(name: "z_setup_new_thread", scope: !2021, file: !2021, line: 528, type: !12487, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2121, retainedNodes: !12494)
!12487 = !DISubroutineType(types: !12488)
!12488 = !{!102, !2025, !12489, !111, !248, !104, !104, !104, !105, !113, !263}
!12489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12490, size: 32)
!12490 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !241, line: 44, baseType: !12491)
!12491 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !243, line: 47, size: 8, elements: !12492)
!12492 = !{!12493}
!12493 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !12491, file: !243, line: 48, baseType: !103, size: 8)
!12494 = !{!12495, !12496, !12497, !12498, !12499, !12500, !12501, !12502, !12503, !12504, !12505}
!12495 = !DILocalVariable(name: "new_thread", arg: 1, scope: !12486, file: !2021, line: 528, type: !2025)
!12496 = !DILocalVariable(name: "stack", arg: 2, scope: !12486, file: !2021, line: 529, type: !12489)
!12497 = !DILocalVariable(name: "stack_size", arg: 3, scope: !12486, file: !2021, line: 529, type: !111)
!12498 = !DILocalVariable(name: "entry", arg: 4, scope: !12486, file: !2021, line: 530, type: !248)
!12499 = !DILocalVariable(name: "p1", arg: 5, scope: !12486, file: !2021, line: 531, type: !104)
!12500 = !DILocalVariable(name: "p2", arg: 6, scope: !12486, file: !2021, line: 531, type: !104)
!12501 = !DILocalVariable(name: "p3", arg: 7, scope: !12486, file: !2021, line: 531, type: !104)
!12502 = !DILocalVariable(name: "prio", arg: 8, scope: !12486, file: !2021, line: 532, type: !105)
!12503 = !DILocalVariable(name: "options", arg: 9, scope: !12486, file: !2021, line: 532, type: !113)
!12504 = !DILocalVariable(name: "name", arg: 10, scope: !12486, file: !2021, line: 532, type: !263)
!12505 = !DILocalVariable(name: "stack_ptr", scope: !12486, file: !2021, line: 534, type: !102)
!12506 = !DILocation(line: 0, scope: !12486)
!12507 = !DILocation(line: 536, column: 2, scope: !12508)
!12508 = distinct !DILexicalBlock(scope: !12509, file: !2021, line: 536, column: 2)
!12509 = distinct !DILexicalBlock(scope: !12510, file: !2021, line: 536, column: 2)
!12510 = distinct !DILexicalBlock(scope: !12486, file: !2021, line: 536, column: 2)
!12511 = !DILocation(line: 536, column: 2, scope: !12512)
!12512 = distinct !DILexicalBlock(scope: !12508, file: !2021, line: 536, column: 2)
!12513 = !DILocation(line: 550, column: 28, scope: !12486)
!12514 = !DILocation(line: 550, column: 2, scope: !12486)
!12515 = !DILocation(line: 553, column: 34, scope: !12486)
!12516 = !DILocation(line: 553, column: 2, scope: !12486)
!12517 = !DILocation(line: 554, column: 14, scope: !12486)
!12518 = !DILocation(line: 564, column: 2, scope: !12486)
!12519 = !DILocation(line: 567, column: 14, scope: !12486)
!12520 = !DILocation(line: 567, column: 24, scope: !12486)
!12521 = !DILocation(line: 612, column: 7, scope: !12522)
!12522 = distinct !DILexicalBlock(scope: !12486, file: !2021, line: 612, column: 6)
!12523 = !DILocation(line: 612, column: 6, scope: !12486)
!12524 = !DILocation(line: 627, column: 40, scope: !12486)
!12525 = !DILocation(line: 637, column: 2, scope: !12486)
!12526 = !DILocation(line: 613, column: 15, scope: !12527)
!12527 = distinct !DILexicalBlock(scope: !12522, file: !2021, line: 612, column: 17)
!12528 = !DILocation(line: 613, column: 29, scope: !12527)
!12529 = !DILocation(line: 638, column: 1, scope: !12486)
!12530 = distinct !DISubprogram(name: "z_is_idle_thread_entry", scope: !12184, file: !12184, line: 78, type: !12531, scopeLine: 79, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2121, retainedNodes: !12533)
!12531 = !DISubroutineType(types: !12532)
!12532 = !{!911, !104}
!12533 = !{!12534}
!12534 = !DILocalVariable(name: "entry_point", arg: 1, scope: !12530, file: !12184, line: 78, type: !104)
!12535 = !DILocation(line: 0, scope: !12530)
!12536 = !DILocation(line: 80, column: 21, scope: !12530)
!12537 = !DILocation(line: 80, column: 2, scope: !12530)
!12538 = distinct !DISubprogram(name: "z_waitq_init", scope: !12539, file: !12539, line: 47, type: !12540, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2121, retainedNodes: !12542)
!12539 = !DIFile(filename: "zephyr/include/zephyr/wait_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12540 = !DISubroutineType(types: !12541)
!12541 = !{null, !2056}
!12542 = !{!12543}
!12543 = !DILocalVariable(name: "w", arg: 1, scope: !12538, file: !12539, line: 47, type: !2056)
!12544 = !DILocation(line: 0, scope: !12538)
!12545 = !DILocation(line: 49, column: 21, scope: !12538)
!12546 = !DILocation(line: 49, column: 2, scope: !12538)
!12547 = !DILocation(line: 50, column: 1, scope: !12538)
!12548 = distinct !DISubprogram(name: "z_init_thread_base", scope: !2021, file: !2021, line: 791, type: !12549, scopeLine: 793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2121, retainedNodes: !12552)
!12549 = !DISubroutineType(types: !12550)
!12550 = !{null, !12551, !105, !113, !32}
!12551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2029, size: 32)
!12552 = !{!12553, !12554, !12555, !12556}
!12553 = !DILocalVariable(name: "thread_base", arg: 1, scope: !12548, file: !2021, line: 791, type: !12551)
!12554 = !DILocalVariable(name: "priority", arg: 2, scope: !12548, file: !2021, line: 791, type: !105)
!12555 = !DILocalVariable(name: "initial_state", arg: 3, scope: !12548, file: !2021, line: 792, type: !113)
!12556 = !DILocalVariable(name: "options", arg: 4, scope: !12548, file: !2021, line: 792, type: !32)
!12557 = !DILocation(line: 0, scope: !12548)
!12558 = !DILocation(line: 795, column: 15, scope: !12548)
!12559 = !DILocation(line: 795, column: 25, scope: !12548)
!12560 = !DILocation(line: 796, column: 30, scope: !12548)
!12561 = !DILocation(line: 796, column: 15, scope: !12548)
!12562 = !DILocation(line: 796, column: 28, scope: !12548)
!12563 = !DILocation(line: 797, column: 30, scope: !12548)
!12564 = !DILocation(line: 797, column: 15, scope: !12548)
!12565 = !DILocation(line: 797, column: 28, scope: !12548)
!12566 = !DILocation(line: 799, column: 22, scope: !12548)
!12567 = !DILocation(line: 799, column: 15, scope: !12548)
!12568 = !DILocation(line: 799, column: 20, scope: !12548)
!12569 = !DILocation(line: 801, column: 15, scope: !12548)
!12570 = !DILocation(line: 801, column: 28, scope: !12548)
!12571 = !DILocation(line: 814, column: 2, scope: !12548)
!12572 = !DILocation(line: 815, column: 1, scope: !12548)
!12573 = distinct !DISubprogram(name: "setup_thread_stack", scope: !2021, file: !2021, line: 449, type: !12574, scopeLine: 451, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2121, retainedNodes: !12576)
!12574 = !DISubroutineType(types: !12575)
!12575 = !{!102, !2025, !12489, !111}
!12576 = !{!12577, !12578, !12579, !12580, !12581, !12582, !12583, !12584}
!12577 = !DILocalVariable(name: "new_thread", arg: 1, scope: !12573, file: !2021, line: 449, type: !2025)
!12578 = !DILocalVariable(name: "stack", arg: 2, scope: !12573, file: !2021, line: 450, type: !12489)
!12579 = !DILocalVariable(name: "stack_size", arg: 3, scope: !12573, file: !2021, line: 450, type: !111)
!12580 = !DILocalVariable(name: "stack_obj_size", scope: !12573, file: !2021, line: 452, type: !111)
!12581 = !DILocalVariable(name: "stack_buf_size", scope: !12573, file: !2021, line: 452, type: !111)
!12582 = !DILocalVariable(name: "stack_ptr", scope: !12573, file: !2021, line: 453, type: !102)
!12583 = !DILocalVariable(name: "stack_buf_start", scope: !12573, file: !2021, line: 453, type: !102)
!12584 = !DILocalVariable(name: "delta", scope: !12573, file: !2021, line: 454, type: !111)
!12585 = !DILocation(line: 0, scope: !12573)
!12586 = !DILocation(line: 465, column: 20, scope: !12587)
!12587 = distinct !DILexicalBlock(scope: !12573, file: !2021, line: 463, column: 2)
!12588 = !DILocation(line: 473, column: 28, scope: !12573)
!12589 = !DILocation(line: 520, column: 2, scope: !12573)
!12590 = distinct !DISubprogram(name: "z_init_thread_timeout", scope: !12591, file: !12591, line: 40, type: !12592, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2121, retainedNodes: !12594)
!12591 = !DIFile(filename: "zephyr/include/zephyr/timeout_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12592 = !DISubroutineType(types: !12593)
!12593 = !{null, !12551}
!12594 = !{!12595}
!12595 = !DILocalVariable(name: "thread_base", arg: 1, scope: !12590, file: !12591, line: 40, type: !12551)
!12596 = !DILocation(line: 0, scope: !12590)
!12597 = !DILocation(line: 42, column: 31, scope: !12590)
!12598 = !DILocation(line: 42, column: 2, scope: !12590)
!12599 = !DILocation(line: 43, column: 1, scope: !12590)
!12600 = distinct !DISubprogram(name: "z_init_timeout", scope: !12591, file: !12591, line: 25, type: !2082, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2121, retainedNodes: !12601)
!12601 = !{!12602}
!12602 = !DILocalVariable(name: "to", arg: 1, scope: !12600, file: !12591, line: 25, type: !2084)
!12603 = !DILocation(line: 0, scope: !12600)
!12604 = !DILocation(line: 27, column: 22, scope: !12600)
!12605 = !DILocation(line: 27, column: 2, scope: !12600)
!12606 = !DILocation(line: 28, column: 1, scope: !12600)
!12607 = distinct !DISubprogram(name: "sys_dnode_init", scope: !137, file: !137, line: 211, type: !12608, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2121, retainedNodes: !12610)
!12608 = !DISubroutineType(types: !12609)
!12609 = !{null, !2124}
!12610 = !{!12611}
!12611 = !DILocalVariable(name: "node", arg: 1, scope: !12607, file: !137, line: 211, type: !2124)
!12612 = !DILocation(line: 0, scope: !12607)
!12613 = !DILocation(line: 213, column: 8, scope: !12607)
!12614 = !DILocation(line: 213, column: 13, scope: !12607)
!12615 = !DILocation(line: 214, column: 8, scope: !12607)
!12616 = !DILocation(line: 214, column: 13, scope: !12607)
!12617 = !DILocation(line: 215, column: 1, scope: !12607)
!12618 = distinct !DISubprogram(name: "sys_dlist_init", scope: !137, file: !137, line: 197, type: !12619, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2121, retainedNodes: !12622)
!12619 = !DISubroutineType(types: !12620)
!12620 = !{null, !12621}
!12621 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2061, size: 32)
!12622 = !{!12623}
!12623 = !DILocalVariable(name: "list", arg: 1, scope: !12618, file: !137, line: 197, type: !12621)
!12624 = !DILocation(line: 0, scope: !12618)
!12625 = !DILocation(line: 199, column: 8, scope: !12618)
!12626 = !DILocation(line: 199, column: 13, scope: !12618)
!12627 = !DILocation(line: 200, column: 8, scope: !12618)
!12628 = !DILocation(line: 200, column: 13, scope: !12618)
!12629 = !DILocation(line: 201, column: 1, scope: !12618)
!12630 = distinct !DISubprogram(name: "z_impl_k_thread_create", scope: !2021, file: !2021, line: 641, type: !12631, scopeLine: 646, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2121, retainedNodes: !12637)
!12631 = !DISubroutineType(types: !12632)
!12632 = !{!2024, !2025, !12489, !111, !248, !104, !104, !104, !105, !113, !12633}
!12633 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !108, line: 67, baseType: !12634)
!12634 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !108, line: 65, size: 64, elements: !12635)
!12635 = !{!12636}
!12636 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !12634, file: !108, line: 66, baseType: !107, size: 64)
!12637 = !{!12638, !12639, !12640, !12641, !12642, !12643, !12644, !12645, !12646, !12647}
!12638 = !DILocalVariable(name: "new_thread", arg: 1, scope: !12630, file: !2021, line: 641, type: !2025)
!12639 = !DILocalVariable(name: "stack", arg: 2, scope: !12630, file: !2021, line: 642, type: !12489)
!12640 = !DILocalVariable(name: "stack_size", arg: 3, scope: !12630, file: !2021, line: 643, type: !111)
!12641 = !DILocalVariable(name: "entry", arg: 4, scope: !12630, file: !2021, line: 643, type: !248)
!12642 = !DILocalVariable(name: "p1", arg: 5, scope: !12630, file: !2021, line: 644, type: !104)
!12643 = !DILocalVariable(name: "p2", arg: 6, scope: !12630, file: !2021, line: 644, type: !104)
!12644 = !DILocalVariable(name: "p3", arg: 7, scope: !12630, file: !2021, line: 644, type: !104)
!12645 = !DILocalVariable(name: "prio", arg: 8, scope: !12630, file: !2021, line: 645, type: !105)
!12646 = !DILocalVariable(name: "options", arg: 9, scope: !12630, file: !2021, line: 645, type: !113)
!12647 = !DILocalVariable(name: "delay", arg: 10, scope: !12630, file: !2021, line: 645, type: !12633)
!12648 = !DILocation(line: 0, scope: !12630)
!12649 = !DILocation(line: 1031, column: 3, scope: !12376, inlinedAt: !12650)
!12650 = distinct !DILocation(line: 48, column: 10, scope: !12380, inlinedAt: !12651)
!12651 = distinct !DILocation(line: 647, column: 2, scope: !12652)
!12652 = distinct !DILexicalBlock(scope: !12653, file: !2021, line: 647, column: 2)
!12653 = distinct !DILexicalBlock(scope: !12630, file: !2021, line: 647, column: 2)
!12654 = !DILocation(line: 0, scope: !12376, inlinedAt: !12650)
!12655 = !DILocation(line: 48, column: 9, scope: !12380, inlinedAt: !12651)
!12656 = !DILocation(line: 647, column: 2, scope: !12653)
!12657 = !DILocation(line: 647, column: 2, scope: !12658)
!12658 = distinct !DILexicalBlock(scope: !12652, file: !2021, line: 647, column: 2)
!12659 = !DILocation(line: 649, column: 2, scope: !12630)
!12660 = !DILocation(line: 652, column: 7, scope: !12661)
!12661 = distinct !DILexicalBlock(scope: !12630, file: !2021, line: 652, column: 6)
!12662 = !DILocation(line: 652, column: 6, scope: !12630)
!12663 = !DILocation(line: 653, column: 3, scope: !12664)
!12664 = distinct !DILexicalBlock(scope: !12661, file: !2021, line: 652, column: 39)
!12665 = !DILocation(line: 654, column: 2, scope: !12664)
!12666 = !DILocation(line: 656, column: 2, scope: !12630)
!12667 = distinct !DISubprogram(name: "schedule_new_thread", scope: !2021, file: !2021, line: 401, type: !12668, scopeLine: 402, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2121, retainedNodes: !12670)
!12668 = !DISubroutineType(types: !12669)
!12669 = !{null, !2025, !12633}
!12670 = !{!12671, !12672}
!12671 = !DILocalVariable(name: "thread", arg: 1, scope: !12667, file: !2021, line: 401, type: !2025)
!12672 = !DILocalVariable(name: "delay", arg: 2, scope: !12667, file: !2021, line: 401, type: !12633)
!12673 = !DILocation(line: 0, scope: !12667)
!12674 = !DILocation(line: 404, column: 6, scope: !12675)
!12675 = distinct !DILexicalBlock(scope: !12667, file: !2021, line: 404, column: 6)
!12676 = !DILocation(line: 404, column: 6, scope: !12667)
!12677 = !DILocation(line: 405, column: 3, scope: !12678)
!12678 = distinct !DILexicalBlock(scope: !12675, file: !2021, line: 404, column: 38)
!12679 = !DILocation(line: 406, column: 2, scope: !12678)
!12680 = !DILocation(line: 407, column: 3, scope: !12681)
!12681 = distinct !DILexicalBlock(scope: !12675, file: !2021, line: 406, column: 9)
!12682 = !DILocation(line: 413, column: 1, scope: !12667)
!12683 = distinct !DISubprogram(name: "k_thread_start", scope: !3239, file: !3239, line: 205, type: !12684, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2121, retainedNodes: !12686)
!12684 = !DISubroutineType(types: !12685)
!12685 = !{null, !2024}
!12686 = !{!12687}
!12687 = !DILocalVariable(name: "thread", arg: 1, scope: !12683, file: !3239, line: 205, type: !2024)
!12688 = !DILocation(line: 0, scope: !12683)
!12689 = !DILocation(line: 214, column: 2, scope: !12690)
!12690 = distinct !DILexicalBlock(scope: !12683, file: !3239, line: 214, column: 2)
!12691 = !{i64 2151070677}
!12692 = !DILocation(line: 215, column: 2, scope: !12683)
!12693 = !DILocation(line: 216, column: 1, scope: !12683)
!12694 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !12591, file: !12591, line: 47, type: !12668, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2121, retainedNodes: !12695)
!12695 = !{!12696, !12697}
!12696 = !DILocalVariable(name: "thread", arg: 1, scope: !12694, file: !12591, line: 47, type: !2025)
!12697 = !DILocalVariable(name: "ticks", arg: 2, scope: !12694, file: !12591, line: 47, type: !12633)
!12698 = !DILocation(line: 0, scope: !12694)
!12699 = !DILocation(line: 49, column: 30, scope: !12694)
!12700 = !DILocation(line: 49, column: 2, scope: !12694)
!12701 = !DILocation(line: 50, column: 1, scope: !12694)
!12702 = distinct !DISubprogram(name: "z_init_static_threads", scope: !2021, file: !2021, line: 748, type: !260, scopeLine: 749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2121, retainedNodes: !12703)
!12703 = !{!12704, !12721}
!12704 = !DILocalVariable(name: "thread_data", scope: !12705, file: !2021, line: 750, type: !12706)
!12705 = distinct !DILexicalBlock(scope: !12702, file: !2021, line: 750, column: 2)
!12706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12707, size: 32)
!12707 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !122, line: 620, size: 384, elements: !12708)
!12708 = !{!12709, !12710, !12711, !12712, !12713, !12714, !12715, !12716, !12717, !12718, !12719, !12720}
!12709 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !12707, file: !122, line: 621, baseType: !2025, size: 32)
!12710 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !12707, file: !122, line: 622, baseType: !12489, size: 32, offset: 32)
!12711 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !12707, file: !122, line: 623, baseType: !32, size: 32, offset: 64)
!12712 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !12707, file: !122, line: 624, baseType: !248, size: 32, offset: 96)
!12713 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !12707, file: !122, line: 625, baseType: !104, size: 32, offset: 128)
!12714 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !12707, file: !122, line: 626, baseType: !104, size: 32, offset: 160)
!12715 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !12707, file: !122, line: 627, baseType: !104, size: 32, offset: 192)
!12716 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !12707, file: !122, line: 628, baseType: !105, size: 32, offset: 224)
!12717 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !12707, file: !122, line: 629, baseType: !113, size: 32, offset: 256)
!12718 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !12707, file: !122, line: 630, baseType: !116, size: 32, offset: 288)
!12719 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !12707, file: !122, line: 631, baseType: !259, size: 32, offset: 320)
!12720 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !12707, file: !122, line: 632, baseType: !263, size: 32, offset: 352)
!12721 = !DILocalVariable(name: "thread_data", scope: !12722, file: !2021, line: 781, type: !12706)
!12722 = distinct !DILexicalBlock(scope: !12702, file: !2021, line: 781, column: 2)
!12723 = !DILocation(line: 0, scope: !12705)
!12724 = !DILocation(line: 750, column: 2, scope: !12725)
!12725 = distinct !DILexicalBlock(scope: !12726, file: !2021, line: 750, column: 2)
!12726 = distinct !DILexicalBlock(scope: !12727, file: !2021, line: 750, column: 2)
!12727 = distinct !DILexicalBlock(scope: !12705, file: !2021, line: 750, column: 2)
!12728 = !DILocation(line: 750, column: 2, scope: !12729)
!12729 = distinct !DILexicalBlock(scope: !12730, file: !2021, line: 750, column: 2)
!12730 = distinct !DILexicalBlock(scope: !12725, file: !2021, line: 750, column: 2)
!12731 = !DILocation(line: 750, column: 2, scope: !12726)
!12732 = !DILocation(line: 750, column: 2, scope: !12705)
!12733 = !DILocation(line: 780, column: 2, scope: !12702)
!12734 = !DILocation(line: 0, scope: !12722)
!12735 = !DILocation(line: 781, column: 2, scope: !12736)
!12736 = distinct !DILexicalBlock(scope: !12737, file: !2021, line: 781, column: 2)
!12737 = distinct !DILexicalBlock(scope: !12738, file: !2021, line: 781, column: 2)
!12738 = distinct !DILexicalBlock(scope: !12722, file: !2021, line: 781, column: 2)
!12739 = !DILocation(line: 752, column: 17, scope: !12740)
!12740 = distinct !DILexicalBlock(scope: !12727, file: !2021, line: 750, column: 38)
!12741 = !DILocation(line: 753, column: 17, scope: !12740)
!12742 = !DILocation(line: 754, column: 17, scope: !12740)
!12743 = !DILocation(line: 755, column: 17, scope: !12740)
!12744 = !DILocation(line: 756, column: 17, scope: !12740)
!12745 = !DILocation(line: 757, column: 17, scope: !12740)
!12746 = !DILocation(line: 758, column: 17, scope: !12740)
!12747 = !DILocation(line: 759, column: 17, scope: !12740)
!12748 = !DILocation(line: 760, column: 17, scope: !12740)
!12749 = !DILocation(line: 751, column: 3, scope: !12740)
!12750 = !DILocation(line: 763, column: 16, scope: !12740)
!12751 = !DILocation(line: 763, column: 29, scope: !12740)
!12752 = !DILocation(line: 763, column: 39, scope: !12740)
!12753 = !DILocation(line: 750, column: 2, scope: !12727)
!12754 = !DILocation(line: 750, column: 2, scope: !12730)
!12755 = distinct !{!12755, !12732, !12756}
!12756 = !DILocation(line: 764, column: 2, scope: !12705)
!12757 = !DILocation(line: 781, column: 2, scope: !12758)
!12758 = distinct !DILexicalBlock(scope: !12759, file: !2021, line: 781, column: 2)
!12759 = distinct !DILexicalBlock(scope: !12736, file: !2021, line: 781, column: 2)
!12760 = !DILocation(line: 781, column: 2, scope: !12737)
!12761 = !DILocation(line: 781, column: 2, scope: !12722)
!12762 = !DILocation(line: 787, column: 2, scope: !12702)
!12763 = !DILocation(line: 788, column: 1, scope: !12702)
!12764 = !DILocation(line: 782, column: 20, scope: !12765)
!12765 = distinct !DILexicalBlock(scope: !12766, file: !2021, line: 782, column: 7)
!12766 = distinct !DILexicalBlock(scope: !12738, file: !2021, line: 781, column: 38)
!12767 = !DILocation(line: 782, column: 31, scope: !12765)
!12768 = !DILocation(line: 782, column: 7, scope: !12766)
!12769 = !DILocation(line: 783, column: 37, scope: !12770)
!12770 = distinct !DILexicalBlock(scope: !12765, file: !2021, line: 782, column: 51)
!12771 = !DILocation(line: 784, column: 10, scope: !12770)
!12772 = !DILocation(line: 783, column: 4, scope: !12770)
!12773 = !DILocation(line: 785, column: 3, scope: !12770)
!12774 = !DILocation(line: 781, column: 2, scope: !12738)
!12775 = !DILocation(line: 781, column: 2, scope: !12759)
!12776 = distinct !{!12776, !12761, !12777}
!12777 = !DILocation(line: 786, column: 2, scope: !12722)
!12778 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !12779, file: !12779, line: 403, type: !12780, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2121, retainedNodes: !12782)
!12779 = !DIFile(filename: "zephyr/include/zephyr/sys/time_units.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12780 = !DISubroutineType(types: !12781)
!12781 = !{!114, !114}
!12782 = !{!12783}
!12783 = !DILocalVariable(name: "t", arg: 1, scope: !12778, file: !12779, line: 403, type: !114)
!12784 = !DILocation(line: 0, scope: !12778)
!12785 = !DILocalVariable(name: "t", arg: 1, scope: !12786, file: !12779, line: 102, type: !114)
!12786 = distinct !DISubprogram(name: "z_tmcvt", scope: !12779, file: !12779, line: 102, type: !12787, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2121, retainedNodes: !12789)
!12787 = !DISubroutineType(types: !12788)
!12788 = !{!114, !114, !113, !113, !911, !911, !911, !911}
!12789 = !{!12785, !12790, !12791, !12792, !12793, !12794, !12795, !12796, !12797, !12798, !12799}
!12790 = !DILocalVariable(name: "from_hz", arg: 2, scope: !12786, file: !12779, line: 102, type: !113)
!12791 = !DILocalVariable(name: "to_hz", arg: 3, scope: !12786, file: !12779, line: 103, type: !113)
!12792 = !DILocalVariable(name: "const_hz", arg: 4, scope: !12786, file: !12779, line: 103, type: !911)
!12793 = !DILocalVariable(name: "result32", arg: 5, scope: !12786, file: !12779, line: 104, type: !911)
!12794 = !DILocalVariable(name: "round_up", arg: 6, scope: !12786, file: !12779, line: 104, type: !911)
!12795 = !DILocalVariable(name: "round_off", arg: 7, scope: !12786, file: !12779, line: 105, type: !911)
!12796 = !DILocalVariable(name: "mul_ratio", scope: !12786, file: !12779, line: 107, type: !911)
!12797 = !DILocalVariable(name: "div_ratio", scope: !12786, file: !12779, line: 109, type: !911)
!12798 = !DILocalVariable(name: "off", scope: !12786, file: !12779, line: 116, type: !114)
!12799 = !DILocalVariable(name: "rdivisor", scope: !12800, file: !12779, line: 119, type: !113)
!12800 = distinct !DILexicalBlock(scope: !12801, file: !12779, line: 118, column: 18)
!12801 = distinct !DILexicalBlock(scope: !12786, file: !12779, line: 118, column: 6)
!12802 = !DILocation(line: 0, scope: !12786, inlinedAt: !12803)
!12803 = distinct !DILocation(line: 406, column: 9, scope: !12778)
!12804 = !DILocation(line: 145, column: 13, scope: !12805, inlinedAt: !12803)
!12805 = distinct !DILexicalBlock(scope: !12806, file: !12779, line: 144, column: 10)
!12806 = distinct !DILexicalBlock(scope: !12807, file: !12779, line: 142, column: 7)
!12807 = distinct !DILexicalBlock(scope: !12808, file: !12779, line: 141, column: 24)
!12808 = distinct !DILexicalBlock(scope: !12809, file: !12779, line: 141, column: 13)
!12809 = distinct !DILexicalBlock(scope: !12786, file: !12779, line: 134, column: 6)
!12810 = !DILocation(line: 406, column: 2, scope: !12778)
!12811 = distinct !DISubprogram(name: "k_thread_user_mode_enter", scope: !2021, file: !2021, line: 817, type: !4881, scopeLine: 819, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2121, retainedNodes: !12812)
!12812 = !{!12813, !12814, !12815, !12816}
!12813 = !DILocalVariable(name: "entry", arg: 1, scope: !12811, file: !2021, line: 817, type: !248)
!12814 = !DILocalVariable(name: "p1", arg: 2, scope: !12811, file: !2021, line: 818, type: !104)
!12815 = !DILocalVariable(name: "p2", arg: 3, scope: !12811, file: !2021, line: 818, type: !104)
!12816 = !DILocalVariable(name: "p3", arg: 4, scope: !12811, file: !2021, line: 818, type: !104)
!12817 = !DILocation(line: 0, scope: !12811)
!12818 = !DILocation(line: 822, column: 2, scope: !12811)
!12819 = !DILocation(line: 822, column: 17, scope: !12811)
!12820 = !DILocation(line: 822, column: 30, scope: !12811)
!12821 = !DILocation(line: 823, column: 2, scope: !12811)
!12822 = !DILocation(line: 845, column: 2, scope: !12811)
!12823 = distinct !DISubprogram(name: "z_spin_lock_valid", scope: !2021, file: !2021, line: 853, type: !12824, scopeLine: 854, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2121, retainedNodes: !12827)
!12824 = !DISubroutineType(types: !12825)
!12825 = !{!911, !12826}
!12826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2113, size: 32)
!12827 = !{!12828, !12829}
!12828 = !DILocalVariable(name: "l", arg: 1, scope: !12823, file: !2021, line: 853, type: !12826)
!12829 = !DILocalVariable(name: "thread_cpu", scope: !12823, file: !2021, line: 855, type: !22)
!12830 = !DILocation(line: 0, scope: !12823)
!12831 = !DILocation(line: 855, column: 28, scope: !12823)
!12832 = !DILocation(line: 857, column: 17, scope: !12833)
!12833 = distinct !DILexicalBlock(scope: !12823, file: !2021, line: 857, column: 6)
!12834 = !DILocation(line: 857, column: 6, scope: !12823)
!12835 = !DILocation(line: 858, column: 19, scope: !12836)
!12836 = distinct !DILexicalBlock(scope: !12837, file: !2021, line: 858, column: 7)
!12837 = distinct !DILexicalBlock(scope: !12833, file: !2021, line: 857, column: 24)
!12838 = !DILocation(line: 858, column: 42, scope: !12836)
!12839 = !DILocation(line: 858, column: 28, scope: !12836)
!12840 = !DILocation(line: 858, column: 25, scope: !12836)
!12841 = !DILocation(line: 858, column: 7, scope: !12837)
!12842 = !DILocation(line: 862, column: 2, scope: !12823)
!12843 = !DILocation(line: 863, column: 1, scope: !12823)
!12844 = distinct !DISubprogram(name: "z_spin_unlock_valid", scope: !2021, file: !2021, line: 865, type: !12824, scopeLine: 866, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2121, retainedNodes: !12845)
!12845 = !{!12846}
!12846 = !DILocalVariable(name: "l", arg: 1, scope: !12844, file: !2021, line: 865, type: !12826)
!12847 = !DILocation(line: 0, scope: !12844)
!12848 = !DILocation(line: 867, column: 9, scope: !12849)
!12849 = distinct !DILexicalBlock(scope: !12844, file: !2021, line: 867, column: 6)
!12850 = !DILocation(line: 867, column: 38, scope: !12849)
!12851 = !DILocation(line: 867, column: 24, scope: !12849)
!12852 = !DILocation(line: 867, column: 54, scope: !12849)
!12853 = !DILocation(line: 867, column: 43, scope: !12849)
!12854 = !DILocation(line: 867, column: 41, scope: !12849)
!12855 = !DILocation(line: 867, column: 20, scope: !12849)
!12856 = !DILocation(line: 867, column: 6, scope: !12844)
!12857 = !DILocation(line: 870, column: 16, scope: !12844)
!12858 = !DILocation(line: 871, column: 2, scope: !12844)
!12859 = !DILocation(line: 872, column: 1, scope: !12844)
!12860 = distinct !DISubprogram(name: "z_spin_lock_set_owner", scope: !2021, file: !2021, line: 874, type: !12861, scopeLine: 875, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2121, retainedNodes: !12863)
!12861 = !DISubroutineType(types: !12862)
!12862 = !{null, !12826}
!12863 = !{!12864}
!12864 = !DILocalVariable(name: "l", arg: 1, scope: !12860, file: !2021, line: 874, type: !12826)
!12865 = !DILocation(line: 0, scope: !12860)
!12866 = !DILocation(line: 876, column: 32, scope: !12860)
!12867 = !DILocation(line: 876, column: 18, scope: !12860)
!12868 = !DILocation(line: 876, column: 48, scope: !12860)
!12869 = !DILocation(line: 876, column: 37, scope: !12860)
!12870 = !DILocation(line: 876, column: 35, scope: !12860)
!12871 = !DILocation(line: 876, column: 5, scope: !12860)
!12872 = !DILocation(line: 876, column: 16, scope: !12860)
!12873 = !DILocation(line: 877, column: 1, scope: !12860)
!12874 = distinct !DISubprogram(name: "z_impl_k_float_disable", scope: !2021, file: !2021, line: 888, type: !12875, scopeLine: 889, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2121, retainedNodes: !12877)
!12875 = !DISubroutineType(types: !12876)
!12876 = !{!105, !2025}
!12877 = !{!12878}
!12878 = !DILocalVariable(name: "thread", arg: 1, scope: !12874, file: !2021, line: 888, type: !2025)
!12879 = !DILocation(line: 0, scope: !12874)
!12880 = !DILocation(line: 893, column: 2, scope: !12874)
!12881 = distinct !DISubprogram(name: "z_impl_k_float_enable", scope: !2021, file: !2021, line: 897, type: !12882, scopeLine: 898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2121, retainedNodes: !12884)
!12882 = !DISubroutineType(types: !12883)
!12883 = !{!105, !2025, !32}
!12884 = !{!12885, !12886}
!12885 = !DILocalVariable(name: "thread", arg: 1, scope: !12881, file: !2021, line: 897, type: !2025)
!12886 = !DILocalVariable(name: "options", arg: 2, scope: !12881, file: !2021, line: 897, type: !32)
!12887 = !DILocation(line: 0, scope: !12881)
!12888 = !DILocation(line: 902, column: 2, scope: !12881)
!12889 = distinct !DISubprogram(name: "k_thread_runtime_stats_get", scope: !2021, file: !2021, line: 1072, type: !12890, scopeLine: 1074, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2121, retainedNodes: !12895)
!12890 = !DISubroutineType(types: !12891)
!12891 = !{!105, !2024, !12892}
!12892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12893, size: 32)
!12893 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_runtime_stats_t", file: !127, line: 234, baseType: !12894)
!12894 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread_runtime_stats", file: !127, line: 192, elements: !391)
!12895 = !{!12896, !12897}
!12896 = !DILocalVariable(name: "thread", arg: 1, scope: !12889, file: !2021, line: 1072, type: !2024)
!12897 = !DILocalVariable(name: "stats", arg: 2, scope: !12889, file: !2021, line: 1073, type: !12892)
!12898 = !DILocation(line: 0, scope: !12889)
!12899 = !DILocation(line: 1075, column: 14, scope: !12900)
!12900 = distinct !DILexicalBlock(scope: !12889, file: !2021, line: 1075, column: 6)
!12901 = !DILocation(line: 1075, column: 23, scope: !12900)
!12902 = !DILocation(line: 1086, column: 1, scope: !12889)
!12903 = distinct !DISubprogram(name: "k_thread_runtime_stats_all_get", scope: !2021, file: !2021, line: 1088, type: !12904, scopeLine: 1089, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2121, retainedNodes: !12906)
!12904 = !DISubroutineType(types: !12905)
!12905 = !{!105, !12892}
!12906 = !{!12907}
!12907 = !DILocalVariable(name: "stats", arg: 1, scope: !12903, file: !2021, line: 1088, type: !12892)
!12908 = !DILocation(line: 0, scope: !12903)
!12909 = !DILocation(line: 1094, column: 12, scope: !12910)
!12910 = distinct !DILexicalBlock(scope: !12903, file: !2021, line: 1094, column: 6)
!12911 = !DILocation(line: 1120, column: 1, scope: !12903)
!12912 = distinct !DISubprogram(name: "z_pm_save_idle_exit", scope: !12913, file: !12913, line: 20, type: !260, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2984, retainedNodes: !391)
!12913 = !DIFile(filename: "zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12914 = !DILocation(line: 30, column: 2, scope: !12912)
!12915 = !DILocation(line: 31, column: 1, scope: !12912)
!12916 = distinct !DISubprogram(name: "idle", scope: !12913, file: !12913, line: 33, type: !250, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2984, retainedNodes: !12917)
!12917 = !{!12918, !12919, !12920}
!12918 = !DILocalVariable(name: "unused1", arg: 1, scope: !12916, file: !12913, line: 33, type: !104)
!12919 = !DILocalVariable(name: "unused2", arg: 2, scope: !12916, file: !12913, line: 33, type: !104)
!12920 = !DILocalVariable(name: "unused3", arg: 3, scope: !12916, file: !12913, line: 33, type: !104)
!12921 = !DILocation(line: 0, scope: !12916)
!12922 = !DILocation(line: 39, column: 2, scope: !12923)
!12923 = distinct !DILexicalBlock(scope: !12924, file: !12913, line: 39, column: 2)
!12924 = distinct !DILexicalBlock(scope: !12916, file: !12913, line: 39, column: 2)
!12925 = !DILocation(line: 39, column: 2, scope: !12924)
!12926 = !DILocation(line: 39, column: 2, scope: !12927)
!12927 = distinct !DILexicalBlock(scope: !12923, file: !12913, line: 39, column: 2)
!12928 = !DILocation(line: 55, column: 2, scope: !12929, inlinedAt: !12933)
!12929 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7644, file: !7644, line: 42, type: !9346, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2984, retainedNodes: !12930)
!12930 = !{!12931, !12932}
!12931 = !DILocalVariable(name: "key", scope: !12929, file: !7644, line: 44, type: !32)
!12932 = !DILocalVariable(name: "tmp", scope: !12929, file: !7644, line: 53, type: !32)
!12933 = distinct !DILocation(line: 62, column: 10, scope: !12934)
!12934 = distinct !DILexicalBlock(scope: !12916, file: !12913, line: 41, column: 15)
!12935 = !{i64 2844655}
!12936 = !DILocation(line: 0, scope: !12929, inlinedAt: !12933)
!12937 = !DILocation(line: 86, column: 3, scope: !12934)
!12938 = !DILocation(line: 41, column: 2, scope: !12916)
!12939 = distinct !{!12939, !12938, !12940}
!12940 = !DILocation(line: 105, column: 2, scope: !12916)
!12941 = distinct !DISubprogram(name: "k_cpu_idle", scope: !122, file: !122, line: 5627, type: !260, scopeLine: 5628, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2984, retainedNodes: !391)
!12942 = !DILocation(line: 5629, column: 2, scope: !12941)
!12943 = !DILocation(line: 5630, column: 1, scope: !12941)
!12944 = !DISubprogram(name: "arch_cpu_idle", scope: !241, file: !241, line: 167, type: !260, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !391)
!12945 = distinct !DISubprogram(name: "k_msgq_init", scope: !12946, file: !12946, line: 35, type: !12947, scopeLine: 37, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2986, retainedNodes: !12962)
!12946 = !DIFile(filename: "zephyr/kernel/msg_q.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12947 = !DISubroutineType(types: !12948)
!12948 = !{null, !12949, !102, !111, !113}
!12949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12950, size: 32)
!12950 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq", file: !122, line: 4204, size: 352, elements: !12951)
!12951 = !{!12952, !12953, !12954, !12955, !12956, !12957, !12958, !12959, !12960, !12961}
!12952 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !12950, file: !122, line: 4206, baseType: !3022, size: 64)
!12953 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !12950, file: !122, line: 4208, baseType: !3078, size: 32, offset: 64)
!12954 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !12950, file: !122, line: 4210, baseType: !111, size: 32, offset: 96)
!12955 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !12950, file: !122, line: 4212, baseType: !113, size: 32, offset: 128)
!12956 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_start", scope: !12950, file: !122, line: 4214, baseType: !102, size: 32, offset: 160)
!12957 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !12950, file: !122, line: 4216, baseType: !102, size: 32, offset: 192)
!12958 = !DIDerivedType(tag: DW_TAG_member, name: "read_ptr", scope: !12950, file: !122, line: 4218, baseType: !102, size: 32, offset: 224)
!12959 = !DIDerivedType(tag: DW_TAG_member, name: "write_ptr", scope: !12950, file: !122, line: 4220, baseType: !102, size: 32, offset: 256)
!12960 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !12950, file: !122, line: 4222, baseType: !113, size: 32, offset: 288)
!12961 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !12950, file: !122, line: 4227, baseType: !169, size: 8, offset: 320)
!12962 = !{!12963, !12964, !12965, !12966}
!12963 = !DILocalVariable(name: "msgq", arg: 1, scope: !12945, file: !12946, line: 35, type: !12949)
!12964 = !DILocalVariable(name: "buffer", arg: 2, scope: !12945, file: !12946, line: 35, type: !102)
!12965 = !DILocalVariable(name: "msg_size", arg: 3, scope: !12945, file: !12946, line: 35, type: !111)
!12966 = !DILocalVariable(name: "max_msgs", arg: 4, scope: !12945, file: !12946, line: 36, type: !113)
!12967 = !DILocation(line: 0, scope: !12945)
!12968 = !DILocation(line: 38, column: 8, scope: !12945)
!12969 = !DILocation(line: 38, column: 17, scope: !12945)
!12970 = !DILocation(line: 39, column: 8, scope: !12945)
!12971 = !DILocation(line: 39, column: 17, scope: !12945)
!12972 = !DILocation(line: 40, column: 8, scope: !12945)
!12973 = !DILocation(line: 40, column: 21, scope: !12945)
!12974 = !DILocation(line: 41, column: 40, scope: !12945)
!12975 = !DILocation(line: 41, column: 28, scope: !12945)
!12976 = !DILocation(line: 41, column: 8, scope: !12945)
!12977 = !DILocation(line: 41, column: 19, scope: !12945)
!12978 = !DILocation(line: 42, column: 8, scope: !12945)
!12979 = !DILocation(line: 42, column: 17, scope: !12945)
!12980 = !DILocation(line: 43, column: 8, scope: !12945)
!12981 = !DILocation(line: 43, column: 18, scope: !12945)
!12982 = !DILocation(line: 44, column: 8, scope: !12945)
!12983 = !DILocation(line: 44, column: 18, scope: !12945)
!12984 = !DILocation(line: 45, column: 8, scope: !12945)
!12985 = !DILocation(line: 45, column: 14, scope: !12945)
!12986 = !DILocation(line: 46, column: 22, scope: !12945)
!12987 = !DILocation(line: 46, column: 2, scope: !12945)
!12988 = !DILocation(line: 47, column: 15, scope: !12945)
!12989 = !DILocation(line: 55, column: 1, scope: !12945)
!12990 = distinct !DISubprogram(name: "z_waitq_init", scope: !12539, file: !12539, line: 47, type: !12991, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2986, retainedNodes: !12993)
!12991 = !DISubroutineType(types: !12992)
!12992 = !{null, !3021}
!12993 = !{!12994}
!12994 = !DILocalVariable(name: "w", arg: 1, scope: !12990, file: !12539, line: 47, type: !3021)
!12995 = !DILocation(line: 0, scope: !12990)
!12996 = !DILocation(line: 49, column: 21, scope: !12990)
!12997 = !DILocation(line: 49, column: 2, scope: !12990)
!12998 = !DILocation(line: 50, column: 1, scope: !12990)
!12999 = distinct !DISubprogram(name: "sys_dlist_init", scope: !137, file: !137, line: 197, type: !13000, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2986, retainedNodes: !13003)
!13000 = !DISubroutineType(types: !13001)
!13001 = !{null, !13002}
!13002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3026, size: 32)
!13003 = !{!13004}
!13004 = !DILocalVariable(name: "list", arg: 1, scope: !12999, file: !137, line: 197, type: !13002)
!13005 = !DILocation(line: 0, scope: !12999)
!13006 = !DILocation(line: 199, column: 8, scope: !12999)
!13007 = !DILocation(line: 199, column: 13, scope: !12999)
!13008 = !DILocation(line: 200, column: 8, scope: !12999)
!13009 = !DILocation(line: 200, column: 13, scope: !12999)
!13010 = !DILocation(line: 201, column: 1, scope: !12999)
!13011 = distinct !DISubprogram(name: "z_impl_k_msgq_alloc_init", scope: !12946, file: !12946, line: 57, type: !13012, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2986, retainedNodes: !13014)
!13012 = !DISubroutineType(types: !13013)
!13013 = !{!105, !12949, !111, !113}
!13014 = !{!13015, !13016, !13017, !13018, !13019, !13020}
!13015 = !DILocalVariable(name: "msgq", arg: 1, scope: !13011, file: !12946, line: 57, type: !12949)
!13016 = !DILocalVariable(name: "msg_size", arg: 2, scope: !13011, file: !12946, line: 57, type: !111)
!13017 = !DILocalVariable(name: "max_msgs", arg: 3, scope: !13011, file: !12946, line: 58, type: !113)
!13018 = !DILocalVariable(name: "buffer", scope: !13011, file: !12946, line: 60, type: !104)
!13019 = !DILocalVariable(name: "ret", scope: !13011, file: !12946, line: 61, type: !105)
!13020 = !DILocalVariable(name: "total_size", scope: !13011, file: !12946, line: 62, type: !111)
!13021 = !DILocation(line: 0, scope: !13011)
!13022 = !DILocation(line: 62, column: 2, scope: !13011)
!13023 = !DILocation(line: 66, column: 6, scope: !13024)
!13024 = distinct !DILexicalBlock(scope: !13011, file: !12946, line: 66, column: 6)
!13025 = !DILocation(line: 66, column: 6, scope: !13011)
!13026 = !DILocation(line: 69, column: 28, scope: !13027)
!13027 = distinct !DILexicalBlock(scope: !13024, file: !12946, line: 68, column: 9)
!13028 = !DILocation(line: 69, column: 12, scope: !13027)
!13029 = !DILocation(line: 70, column: 14, scope: !13030)
!13030 = distinct !DILexicalBlock(scope: !13027, file: !12946, line: 70, column: 7)
!13031 = !DILocation(line: 70, column: 7, scope: !13027)
!13032 = !DILocation(line: 71, column: 4, scope: !13033)
!13033 = distinct !DILexicalBlock(scope: !13030, file: !12946, line: 70, column: 23)
!13034 = !DILocation(line: 72, column: 10, scope: !13033)
!13035 = !DILocation(line: 72, column: 16, scope: !13033)
!13036 = !DILocation(line: 74, column: 3, scope: !13033)
!13037 = !DILocation(line: 0, scope: !13024)
!13038 = !DILocation(line: 82, column: 1, scope: !13011)
!13039 = !DILocation(line: 81, column: 2, scope: !13011)
!13040 = distinct !DISubprogram(name: "size_mul_overflow", scope: !13041, file: !13041, line: 105, type: !13042, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2986, retainedNodes: !13044)
!13041 = !DIFile(filename: "zephyr/include/zephyr/sys/math_extras_impl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13042 = !DISubroutineType(types: !13043)
!13043 = !{!911, !111, !111, !2412}
!13044 = !{!13045, !13046, !13047}
!13045 = !DILocalVariable(name: "a", arg: 1, scope: !13040, file: !13041, line: 105, type: !111)
!13046 = !DILocalVariable(name: "b", arg: 2, scope: !13040, file: !13041, line: 105, type: !111)
!13047 = !DILocalVariable(name: "result", arg: 3, scope: !13040, file: !13041, line: 105, type: !2412)
!13048 = !DILocation(line: 0, scope: !13040)
!13049 = !DILocation(line: 107, column: 9, scope: !13040)
!13050 = !DILocation(line: 107, column: 2, scope: !13040)
!13051 = distinct !DISubprogram(name: "z_thread_malloc", scope: !13052, file: !13052, line: 102, type: !13053, scopeLine: 103, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2986, retainedNodes: !13054)
!13052 = !DIFile(filename: "zephyr/kernel/include/kernel_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13053 = !DISubroutineType(types: !2965)
!13054 = !{!13055}
!13055 = !DILocalVariable(name: "size", arg: 1, scope: !13051, file: !13052, line: 102, type: !111)
!13056 = !DILocation(line: 0, scope: !13051)
!13057 = !DILocation(line: 104, column: 9, scope: !13051)
!13058 = !DILocation(line: 104, column: 2, scope: !13051)
!13059 = !DISubprogram(name: "z_thread_aligned_alloc", scope: !13052, file: !13052, line: 87, type: !13060, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !391)
!13060 = !DISubroutineType(types: !13061)
!13061 = !{!104, !111, !111}
!13062 = distinct !DISubprogram(name: "k_msgq_cleanup", scope: !12946, file: !12946, line: 95, type: !13063, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2986, retainedNodes: !13065)
!13063 = !DISubroutineType(types: !13064)
!13064 = !{!105, !12949}
!13065 = !{!13066}
!13066 = !DILocalVariable(name: "msgq", arg: 1, scope: !13062, file: !12946, line: 95, type: !12949)
!13067 = !DILocation(line: 0, scope: !13062)
!13068 = !DILocation(line: 99, column: 2, scope: !13069)
!13069 = distinct !DILexicalBlock(scope: !13062, file: !12946, line: 99, column: 2)
!13070 = !DILocation(line: 99, column: 2, scope: !13062)
!13071 = !DILocation(line: 105, column: 13, scope: !13072)
!13072 = distinct !DILexicalBlock(scope: !13062, file: !12946, line: 105, column: 6)
!13073 = !DILocation(line: 105, column: 19, scope: !13072)
!13074 = !DILocation(line: 105, column: 40, scope: !13072)
!13075 = !DILocation(line: 105, column: 6, scope: !13062)
!13076 = !DILocation(line: 106, column: 16, scope: !13077)
!13077 = distinct !DILexicalBlock(scope: !13072, file: !12946, line: 105, column: 47)
!13078 = !DILocation(line: 106, column: 3, scope: !13077)
!13079 = !DILocation(line: 107, column: 15, scope: !13077)
!13080 = !DILocation(line: 108, column: 2, scope: !13077)
!13081 = !DILocation(line: 113, column: 1, scope: !13062)
!13082 = distinct !DISubprogram(name: "z_waitq_head", scope: !12539, file: !12539, line: 52, type: !13083, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2986, retainedNodes: !13085)
!13083 = !DISubroutineType(types: !13084)
!13084 = !{!3004, !3021}
!13085 = !{!13086}
!13086 = !DILocalVariable(name: "w", arg: 1, scope: !13082, file: !12539, line: 52, type: !3021)
!13087 = !DILocation(line: 0, scope: !13082)
!13088 = !DILocation(line: 54, column: 52, scope: !13082)
!13089 = !DILocation(line: 54, column: 28, scope: !13082)
!13090 = !DILocation(line: 54, column: 9, scope: !13082)
!13091 = !DILocation(line: 54, column: 2, scope: !13082)
!13092 = !DISubprogram(name: "k_free", scope: !122, file: !122, line: 5272, type: !7460, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !391)
!13093 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !137, file: !137, line: 294, type: !13094, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2986, retainedNodes: !13096)
!13094 = !DISubroutineType(types: !13095)
!13095 = !{!2989, !13002}
!13096 = !{!13097}
!13097 = !DILocalVariable(name: "list", arg: 1, scope: !13093, file: !137, line: 294, type: !13002)
!13098 = !DILocation(line: 0, scope: !13093)
!13099 = !DILocation(line: 296, column: 9, scope: !13093)
!13100 = !DILocation(line: 296, column: 49, scope: !13093)
!13101 = !DILocation(line: 296, column: 2, scope: !13093)
!13102 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !137, file: !137, line: 266, type: !13103, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2986, retainedNodes: !13105)
!13103 = !DISubroutineType(types: !13104)
!13104 = !{!911, !13002}
!13105 = !{!13106}
!13106 = !DILocalVariable(name: "list", arg: 1, scope: !13102, file: !137, line: 266, type: !13002)
!13107 = !DILocation(line: 0, scope: !13102)
!13108 = !DILocation(line: 268, column: 15, scope: !13102)
!13109 = !DILocation(line: 268, column: 20, scope: !13102)
!13110 = !DILocation(line: 268, column: 2, scope: !13102)
!13111 = distinct !DISubprogram(name: "z_impl_k_msgq_put", scope: !12946, file: !12946, line: 116, type: !13112, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2986, retainedNodes: !13118)
!13112 = !DISubroutineType(types: !13113)
!13113 = !{!105, !12949, !13, !13114}
!13114 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !108, line: 67, baseType: !13115)
!13115 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !108, line: 65, size: 64, elements: !13116)
!13116 = !{!13117}
!13117 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !13115, file: !108, line: 66, baseType: !107, size: 64)
!13118 = !{!13119, !13120, !13121, !13122, !13123, !13128}
!13119 = !DILocalVariable(name: "msgq", arg: 1, scope: !13111, file: !12946, line: 116, type: !12949)
!13120 = !DILocalVariable(name: "data", arg: 2, scope: !13111, file: !12946, line: 116, type: !13)
!13121 = !DILocalVariable(name: "timeout", arg: 3, scope: !13111, file: !12946, line: 116, type: !13114)
!13122 = !DILocalVariable(name: "pending_thread", scope: !13111, file: !12946, line: 120, type: !3004)
!13123 = !DILocalVariable(name: "key", scope: !13111, file: !12946, line: 121, type: !13124)
!13124 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !230, line: 106, baseType: !13125)
!13125 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !230, line: 32, size: 32, elements: !13126)
!13126 = !{!13127}
!13127 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !13125, file: !230, line: 33, baseType: !105, size: 32)
!13128 = !DILocalVariable(name: "result", scope: !13111, file: !12946, line: 122, type: !105)
!13129 = !DILocation(line: 0, scope: !13111)
!13130 = !DILocation(line: 1031, column: 3, scope: !13131, inlinedAt: !13134)
!13131 = distinct !DISubprogram(name: "__get_IPSR", scope: !7525, file: !7525, line: 1027, type: !389, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2986, retainedNodes: !13132)
!13132 = !{!13133}
!13133 = !DILocalVariable(name: "result", scope: !13131, file: !7525, line: 1029, type: !113)
!13134 = distinct !DILocation(line: 48, column: 10, scope: !13135, inlinedAt: !13136)
!13135 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !8517, file: !8517, line: 46, type: !8518, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2986, retainedNodes: !391)
!13136 = distinct !DILocation(line: 118, column: 2, scope: !13137)
!13137 = distinct !DILexicalBlock(scope: !13138, file: !12946, line: 118, column: 2)
!13138 = distinct !DILexicalBlock(scope: !13111, file: !12946, line: 118, column: 2)
!13139 = !{i64 6993218}
!13140 = !DILocation(line: 0, scope: !13131, inlinedAt: !13134)
!13141 = !DILocation(line: 48, column: 9, scope: !13135, inlinedAt: !13136)
!13142 = !DILocation(line: 118, column: 2, scope: !13137)
!13143 = !DILocation(line: 118, column: 2, scope: !13144)
!13144 = distinct !DILexicalBlock(scope: !13137, file: !12946, line: 118, column: 2)
!13145 = !DILocation(line: 124, column: 27, scope: !13111)
!13146 = !DILocalVariable(name: "l", arg: 1, scope: !13147, file: !230, line: 136, type: !13150)
!13147 = distinct !DISubprogram(name: "k_spin_lock", scope: !230, file: !230, line: 136, type: !13148, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2986, retainedNodes: !13151)
!13148 = !DISubroutineType(types: !13149)
!13149 = !{!13124, !13150}
!13150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3078, size: 32)
!13151 = !{!13146, !13152}
!13152 = !DILocalVariable(name: "k", scope: !13147, file: !230, line: 139, type: !13124)
!13153 = !DILocation(line: 0, scope: !13147, inlinedAt: !13154)
!13154 = distinct !DILocation(line: 124, column: 8, scope: !13111)
!13155 = !DILocation(line: 55, column: 2, scope: !13156, inlinedAt: !13160)
!13156 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7644, file: !7644, line: 42, type: !9346, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2986, retainedNodes: !13157)
!13157 = !{!13158, !13159}
!13158 = !DILocalVariable(name: "key", scope: !13156, file: !7644, line: 44, type: !32)
!13159 = !DILocalVariable(name: "tmp", scope: !13156, file: !7644, line: 53, type: !32)
!13160 = distinct !DILocation(line: 145, column: 10, scope: !13147, inlinedAt: !13154)
!13161 = !{i64 2850792}
!13162 = !DILocation(line: 0, scope: !13156, inlinedAt: !13160)
!13163 = !DILocation(line: 148, column: 2, scope: !13164, inlinedAt: !13154)
!13164 = distinct !DILexicalBlock(scope: !13165, file: !230, line: 148, column: 2)
!13165 = distinct !DILexicalBlock(scope: !13147, file: !230, line: 148, column: 2)
!13166 = !DILocation(line: 148, column: 2, scope: !13165, inlinedAt: !13154)
!13167 = !DILocation(line: 148, column: 2, scope: !13168, inlinedAt: !13154)
!13168 = distinct !DILexicalBlock(scope: !13164, file: !230, line: 148, column: 2)
!13169 = !DILocation(line: 160, column: 2, scope: !13147, inlinedAt: !13154)
!13170 = !DILocation(line: 128, column: 12, scope: !13171)
!13171 = distinct !DILexicalBlock(scope: !13111, file: !12946, line: 128, column: 6)
!13172 = !DILocation(line: 128, column: 30, scope: !13171)
!13173 = !DILocation(line: 128, column: 22, scope: !13171)
!13174 = !DILocation(line: 128, column: 6, scope: !13111)
!13175 = !DILocation(line: 130, column: 49, scope: !13176)
!13176 = distinct !DILexicalBlock(scope: !13171, file: !12946, line: 128, column: 40)
!13177 = !DILocation(line: 130, column: 20, scope: !13176)
!13178 = !DILocation(line: 131, column: 22, scope: !13179)
!13179 = distinct !DILexicalBlock(scope: !13176, file: !12946, line: 131, column: 7)
!13180 = !DILocation(line: 131, column: 7, scope: !13176)
!13181 = !DILocation(line: 135, column: 38, scope: !13182)
!13182 = distinct !DILexicalBlock(scope: !13179, file: !12946, line: 131, column: 31)
!13183 = !DILocation(line: 136, column: 17, scope: !13182)
!13184 = !DILocation(line: 135, column: 10, scope: !13182)
!13185 = !DILocalVariable(name: "thread", arg: 1, scope: !13186, file: !12225, line: 65, type: !3004)
!13186 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !12225, file: !12225, line: 65, type: !13187, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2986, retainedNodes: !13189)
!13187 = !DISubroutineType(types: !13188)
!13188 = !{null, !3004, !32}
!13189 = !{!13185, !13190}
!13190 = !DILocalVariable(name: "value", arg: 2, scope: !13186, file: !12225, line: 65, type: !32)
!13191 = !DILocation(line: 0, scope: !13186, inlinedAt: !13192)
!13192 = distinct !DILocation(line: 138, column: 4, scope: !13182)
!13193 = !DILocation(line: 67, column: 15, scope: !13186, inlinedAt: !13192)
!13194 = !DILocation(line: 67, column: 33, scope: !13186, inlinedAt: !13192)
!13195 = !DILocation(line: 139, column: 4, scope: !13182)
!13196 = !DILocation(line: 140, column: 4, scope: !13182)
!13197 = !DILocation(line: 141, column: 4, scope: !13182)
!13198 = !DILocation(line: 144, column: 23, scope: !13199)
!13199 = distinct !DILexicalBlock(scope: !13179, file: !12946, line: 142, column: 10)
!13200 = !DILocation(line: 144, column: 46, scope: !13199)
!13201 = !DILocation(line: 144, column: 10, scope: !13199)
!13202 = !DILocation(line: 145, column: 29, scope: !13199)
!13203 = !DILocation(line: 145, column: 20, scope: !13199)
!13204 = !DILocation(line: 146, column: 33, scope: !13205)
!13205 = distinct !DILexicalBlock(scope: !13199, file: !12946, line: 146, column: 8)
!13206 = !DILocation(line: 146, column: 24, scope: !13205)
!13207 = !DILocation(line: 146, column: 8, scope: !13199)
!13208 = !DILocation(line: 147, column: 29, scope: !13209)
!13209 = distinct !DILexicalBlock(scope: !13205, file: !12946, line: 146, column: 45)
!13210 = !DILocation(line: 147, column: 21, scope: !13209)
!13211 = !DILocation(line: 148, column: 4, scope: !13209)
!13212 = !DILocation(line: 149, column: 19, scope: !13199)
!13213 = !DILocation(line: 155, column: 2, scope: !13176)
!13214 = !DILocation(line: 155, column: 13, scope: !13171)
!13215 = !DILocation(line: 162, column: 3, scope: !13216)
!13216 = distinct !DILexicalBlock(scope: !13217, file: !12946, line: 158, column: 9)
!13217 = distinct !DILexicalBlock(scope: !13171, file: !12946, line: 155, column: 13)
!13218 = !DILocation(line: 162, column: 18, scope: !13216)
!13219 = !DILocation(line: 162, column: 28, scope: !13216)
!13220 = !DILocation(line: 164, column: 49, scope: !13216)
!13221 = !DILocation(line: 164, column: 12, scope: !13216)
!13222 = !DILocation(line: 166, column: 3, scope: !13216)
!13223 = !DILocation(line: 0, scope: !13171)
!13224 = !DILocalVariable(name: "key", arg: 2, scope: !13225, file: !230, line: 190, type: !13124)
!13225 = distinct !DISubprogram(name: "k_spin_unlock", scope: !230, file: !230, line: 189, type: !13226, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2986, retainedNodes: !13228)
!13226 = !DISubroutineType(types: !13227)
!13227 = !{null, !13150, !13124}
!13228 = !{!13229, !13224}
!13229 = !DILocalVariable(name: "l", arg: 1, scope: !13225, file: !230, line: 189, type: !13150)
!13230 = !DILocation(line: 0, scope: !13225, inlinedAt: !13231)
!13231 = distinct !DILocation(line: 171, column: 2, scope: !13111)
!13232 = !DILocation(line: 194, column: 2, scope: !13233, inlinedAt: !13231)
!13233 = distinct !DILexicalBlock(scope: !13234, file: !230, line: 194, column: 2)
!13234 = distinct !DILexicalBlock(scope: !13225, file: !230, line: 194, column: 2)
!13235 = !DILocation(line: 194, column: 2, scope: !13234, inlinedAt: !13231)
!13236 = !DILocation(line: 194, column: 2, scope: !13237, inlinedAt: !13231)
!13237 = distinct !DILexicalBlock(scope: !13233, file: !230, line: 194, column: 2)
!13238 = !DILocalVariable(name: "key", arg: 1, scope: !13239, file: !7644, line: 84, type: !32)
!13239 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7644, file: !7644, line: 84, type: !7476, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2986, retainedNodes: !13240)
!13240 = !{!13238}
!13241 = !DILocation(line: 0, scope: !13239, inlinedAt: !13242)
!13242 = distinct !DILocation(line: 215, column: 2, scope: !13225, inlinedAt: !13231)
!13243 = !DILocation(line: 95, column: 2, scope: !13239, inlinedAt: !13242)
!13244 = !{i64 2851609}
!13245 = !DILocation(line: 173, column: 2, scope: !13111)
!13246 = !DILocation(line: 174, column: 1, scope: !13111)
!13247 = distinct !DISubprogram(name: "z_impl_k_msgq_get_attrs", scope: !12946, file: !12946, line: 188, type: !13248, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2986, retainedNodes: !13256)
!13248 = !DISubroutineType(types: !13249)
!13249 = !{null, !12949, !13250}
!13250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13251, size: 32)
!13251 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq_attrs", file: !122, line: 4259, size: 96, elements: !13252)
!13252 = !{!13253, !13254, !13255}
!13253 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !13251, file: !122, line: 4261, baseType: !111, size: 32)
!13254 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !13251, file: !122, line: 4263, baseType: !113, size: 32, offset: 32)
!13255 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !13251, file: !122, line: 4265, baseType: !113, size: 32, offset: 64)
!13256 = !{!13257, !13258}
!13257 = !DILocalVariable(name: "msgq", arg: 1, scope: !13247, file: !12946, line: 188, type: !12949)
!13258 = !DILocalVariable(name: "attrs", arg: 2, scope: !13247, file: !12946, line: 188, type: !13250)
!13259 = !DILocation(line: 0, scope: !13247)
!13260 = !DILocation(line: 190, column: 26, scope: !13247)
!13261 = !DILocation(line: 190, column: 9, scope: !13247)
!13262 = !DILocation(line: 190, column: 18, scope: !13247)
!13263 = !DILocation(line: 191, column: 26, scope: !13247)
!13264 = !DILocation(line: 191, column: 9, scope: !13247)
!13265 = !DILocation(line: 191, column: 18, scope: !13247)
!13266 = !DILocation(line: 192, column: 27, scope: !13247)
!13267 = !DILocation(line: 192, column: 9, scope: !13247)
!13268 = !DILocation(line: 192, column: 19, scope: !13247)
!13269 = !DILocation(line: 193, column: 1, scope: !13247)
!13270 = distinct !DISubprogram(name: "z_impl_k_msgq_get", scope: !12946, file: !12946, line: 206, type: !13271, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2986, retainedNodes: !13273)
!13271 = !DISubroutineType(types: !13272)
!13272 = !{!105, !12949, !104, !13114}
!13273 = !{!13274, !13275, !13276, !13277, !13278, !13279}
!13274 = !DILocalVariable(name: "msgq", arg: 1, scope: !13270, file: !12946, line: 206, type: !12949)
!13275 = !DILocalVariable(name: "data", arg: 2, scope: !13270, file: !12946, line: 206, type: !104)
!13276 = !DILocalVariable(name: "timeout", arg: 3, scope: !13270, file: !12946, line: 206, type: !13114)
!13277 = !DILocalVariable(name: "key", scope: !13270, file: !12946, line: 210, type: !13124)
!13278 = !DILocalVariable(name: "pending_thread", scope: !13270, file: !12946, line: 211, type: !3004)
!13279 = !DILocalVariable(name: "result", scope: !13270, file: !12946, line: 212, type: !105)
!13280 = !DILocation(line: 0, scope: !13270)
!13281 = !DILocation(line: 1031, column: 3, scope: !13131, inlinedAt: !13282)
!13282 = distinct !DILocation(line: 48, column: 10, scope: !13135, inlinedAt: !13283)
!13283 = distinct !DILocation(line: 208, column: 2, scope: !13284)
!13284 = distinct !DILexicalBlock(scope: !13285, file: !12946, line: 208, column: 2)
!13285 = distinct !DILexicalBlock(scope: !13270, file: !12946, line: 208, column: 2)
!13286 = !DILocation(line: 0, scope: !13131, inlinedAt: !13282)
!13287 = !DILocation(line: 48, column: 9, scope: !13135, inlinedAt: !13283)
!13288 = !DILocation(line: 208, column: 2, scope: !13284)
!13289 = !DILocation(line: 208, column: 2, scope: !13290)
!13290 = distinct !DILexicalBlock(scope: !13284, file: !12946, line: 208, column: 2)
!13291 = !DILocation(line: 214, column: 27, scope: !13270)
!13292 = !DILocation(line: 0, scope: !13147, inlinedAt: !13293)
!13293 = distinct !DILocation(line: 214, column: 8, scope: !13270)
!13294 = !DILocation(line: 55, column: 2, scope: !13156, inlinedAt: !13295)
!13295 = distinct !DILocation(line: 145, column: 10, scope: !13147, inlinedAt: !13293)
!13296 = !DILocation(line: 0, scope: !13156, inlinedAt: !13295)
!13297 = !DILocation(line: 148, column: 2, scope: !13164, inlinedAt: !13293)
!13298 = !DILocation(line: 148, column: 2, scope: !13165, inlinedAt: !13293)
!13299 = !DILocation(line: 148, column: 2, scope: !13168, inlinedAt: !13293)
!13300 = !DILocation(line: 160, column: 2, scope: !13147, inlinedAt: !13293)
!13301 = !DILocation(line: 218, column: 12, scope: !13302)
!13302 = distinct !DILexicalBlock(scope: !13270, file: !12946, line: 218, column: 6)
!13303 = !DILocation(line: 218, column: 22, scope: !13302)
!13304 = !DILocation(line: 218, column: 6, scope: !13270)
!13305 = !DILocation(line: 220, column: 28, scope: !13306)
!13306 = distinct !DILexicalBlock(scope: !13302, file: !12946, line: 218, column: 28)
!13307 = !DILocation(line: 220, column: 44, scope: !13306)
!13308 = !DILocation(line: 220, column: 9, scope: !13306)
!13309 = !DILocation(line: 221, column: 27, scope: !13306)
!13310 = !DILocation(line: 221, column: 18, scope: !13306)
!13311 = !DILocation(line: 222, column: 31, scope: !13312)
!13312 = distinct !DILexicalBlock(scope: !13306, file: !12946, line: 222, column: 7)
!13313 = !DILocation(line: 222, column: 22, scope: !13312)
!13314 = !DILocation(line: 222, column: 7, scope: !13306)
!13315 = !DILocation(line: 223, column: 27, scope: !13316)
!13316 = distinct !DILexicalBlock(scope: !13312, file: !12946, line: 222, column: 43)
!13317 = !DILocation(line: 223, column: 19, scope: !13316)
!13318 = !DILocation(line: 224, column: 3, scope: !13316)
!13319 = !DILocation(line: 225, column: 18, scope: !13306)
!13320 = !DILocation(line: 228, column: 49, scope: !13306)
!13321 = !DILocation(line: 228, column: 20, scope: !13306)
!13322 = !DILocation(line: 229, column: 22, scope: !13323)
!13323 = distinct !DILexicalBlock(scope: !13306, file: !12946, line: 229, column: 7)
!13324 = !DILocation(line: 229, column: 7, scope: !13306)
!13325 = !DILocation(line: 233, column: 23, scope: !13326)
!13326 = distinct !DILexicalBlock(scope: !13323, file: !12946, line: 229, column: 31)
!13327 = !DILocation(line: 233, column: 55, scope: !13326)
!13328 = !DILocation(line: 234, column: 17, scope: !13326)
!13329 = !DILocation(line: 233, column: 10, scope: !13326)
!13330 = !DILocation(line: 235, column: 29, scope: !13326)
!13331 = !DILocation(line: 235, column: 20, scope: !13326)
!13332 = !DILocation(line: 236, column: 33, scope: !13333)
!13333 = distinct !DILexicalBlock(scope: !13326, file: !12946, line: 236, column: 8)
!13334 = !DILocation(line: 236, column: 24, scope: !13333)
!13335 = !DILocation(line: 236, column: 8, scope: !13326)
!13336 = !DILocation(line: 237, column: 29, scope: !13337)
!13337 = distinct !DILexicalBlock(scope: !13333, file: !12946, line: 236, column: 45)
!13338 = !DILocation(line: 237, column: 21, scope: !13337)
!13339 = !DILocation(line: 238, column: 4, scope: !13337)
!13340 = !DILocation(line: 239, column: 19, scope: !13326)
!13341 = !DILocation(line: 0, scope: !13186, inlinedAt: !13342)
!13342 = distinct !DILocation(line: 242, column: 4, scope: !13326)
!13343 = !DILocation(line: 67, column: 15, scope: !13186, inlinedAt: !13342)
!13344 = !DILocation(line: 67, column: 33, scope: !13186, inlinedAt: !13342)
!13345 = !DILocation(line: 243, column: 4, scope: !13326)
!13346 = !DILocation(line: 244, column: 4, scope: !13326)
!13347 = !DILocation(line: 248, column: 4, scope: !13326)
!13348 = !DILocation(line: 251, column: 13, scope: !13302)
!13349 = !DILocation(line: 258, column: 3, scope: !13350)
!13350 = distinct !DILexicalBlock(scope: !13351, file: !12946, line: 254, column: 9)
!13351 = distinct !DILexicalBlock(scope: !13302, file: !12946, line: 251, column: 13)
!13352 = !DILocation(line: 258, column: 18, scope: !13350)
!13353 = !DILocation(line: 258, column: 28, scope: !13350)
!13354 = !DILocation(line: 260, column: 49, scope: !13350)
!13355 = !DILocation(line: 260, column: 12, scope: !13350)
!13356 = !DILocation(line: 262, column: 3, scope: !13350)
!13357 = !DILocation(line: 0, scope: !13302)
!13358 = !DILocation(line: 0, scope: !13225, inlinedAt: !13359)
!13359 = distinct !DILocation(line: 267, column: 2, scope: !13270)
!13360 = !DILocation(line: 194, column: 2, scope: !13233, inlinedAt: !13359)
!13361 = !DILocation(line: 194, column: 2, scope: !13234, inlinedAt: !13359)
!13362 = !DILocation(line: 194, column: 2, scope: !13237, inlinedAt: !13359)
!13363 = !DILocation(line: 0, scope: !13239, inlinedAt: !13364)
!13364 = distinct !DILocation(line: 215, column: 2, scope: !13225, inlinedAt: !13359)
!13365 = !DILocation(line: 95, column: 2, scope: !13239, inlinedAt: !13364)
!13366 = !DILocation(line: 269, column: 2, scope: !13270)
!13367 = !DILocation(line: 270, column: 1, scope: !13270)
!13368 = distinct !DISubprogram(name: "z_impl_k_msgq_peek", scope: !12946, file: !12946, line: 284, type: !13369, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2986, retainedNodes: !13371)
!13369 = !DISubroutineType(types: !13370)
!13370 = !{!105, !12949, !104}
!13371 = !{!13372, !13373, !13374, !13375}
!13372 = !DILocalVariable(name: "msgq", arg: 1, scope: !13368, file: !12946, line: 284, type: !12949)
!13373 = !DILocalVariable(name: "data", arg: 2, scope: !13368, file: !12946, line: 284, type: !104)
!13374 = !DILocalVariable(name: "key", scope: !13368, file: !12946, line: 286, type: !13124)
!13375 = !DILocalVariable(name: "result", scope: !13368, file: !12946, line: 287, type: !105)
!13376 = !DILocation(line: 0, scope: !13368)
!13377 = !DILocation(line: 289, column: 27, scope: !13368)
!13378 = !DILocation(line: 0, scope: !13147, inlinedAt: !13379)
!13379 = distinct !DILocation(line: 289, column: 8, scope: !13368)
!13380 = !DILocation(line: 55, column: 2, scope: !13156, inlinedAt: !13381)
!13381 = distinct !DILocation(line: 145, column: 10, scope: !13147, inlinedAt: !13379)
!13382 = !DILocation(line: 0, scope: !13156, inlinedAt: !13381)
!13383 = !DILocation(line: 148, column: 2, scope: !13164, inlinedAt: !13379)
!13384 = !DILocation(line: 148, column: 2, scope: !13165, inlinedAt: !13379)
!13385 = !DILocation(line: 148, column: 2, scope: !13168, inlinedAt: !13379)
!13386 = !DILocation(line: 160, column: 2, scope: !13147, inlinedAt: !13379)
!13387 = !DILocation(line: 291, column: 12, scope: !13388)
!13388 = distinct !DILexicalBlock(scope: !13368, file: !12946, line: 291, column: 6)
!13389 = !DILocation(line: 291, column: 22, scope: !13388)
!13390 = !DILocation(line: 291, column: 6, scope: !13368)
!13391 = !DILocation(line: 293, column: 28, scope: !13392)
!13392 = distinct !DILexicalBlock(scope: !13388, file: !12946, line: 291, column: 28)
!13393 = !DILocation(line: 293, column: 44, scope: !13392)
!13394 = !DILocation(line: 293, column: 9, scope: !13392)
!13395 = !DILocation(line: 295, column: 2, scope: !13392)
!13396 = !DILocation(line: 0, scope: !13388)
!13397 = !DILocation(line: 0, scope: !13225, inlinedAt: !13398)
!13398 = distinct !DILocation(line: 302, column: 2, scope: !13368)
!13399 = !DILocation(line: 194, column: 2, scope: !13233, inlinedAt: !13398)
!13400 = !DILocation(line: 194, column: 2, scope: !13234, inlinedAt: !13398)
!13401 = !DILocation(line: 194, column: 2, scope: !13237, inlinedAt: !13398)
!13402 = !DILocation(line: 0, scope: !13239, inlinedAt: !13403)
!13403 = distinct !DILocation(line: 215, column: 2, scope: !13225, inlinedAt: !13398)
!13404 = !DILocation(line: 95, column: 2, scope: !13239, inlinedAt: !13403)
!13405 = !DILocation(line: 304, column: 2, scope: !13368)
!13406 = distinct !DISubprogram(name: "z_impl_k_msgq_purge", scope: !12946, file: !12946, line: 318, type: !13407, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2986, retainedNodes: !13409)
!13407 = !DISubroutineType(types: !13408)
!13408 = !{null, !12949}
!13409 = !{!13410, !13411, !13412}
!13410 = !DILocalVariable(name: "msgq", arg: 1, scope: !13406, file: !12946, line: 318, type: !12949)
!13411 = !DILocalVariable(name: "key", scope: !13406, file: !12946, line: 320, type: !13124)
!13412 = !DILocalVariable(name: "pending_thread", scope: !13406, file: !12946, line: 321, type: !3004)
!13413 = !DILocation(line: 0, scope: !13406)
!13414 = !DILocation(line: 323, column: 27, scope: !13406)
!13415 = !DILocation(line: 0, scope: !13147, inlinedAt: !13416)
!13416 = distinct !DILocation(line: 323, column: 8, scope: !13406)
!13417 = !DILocation(line: 55, column: 2, scope: !13156, inlinedAt: !13418)
!13418 = distinct !DILocation(line: 145, column: 10, scope: !13147, inlinedAt: !13416)
!13419 = !DILocation(line: 0, scope: !13156, inlinedAt: !13418)
!13420 = !DILocation(line: 148, column: 2, scope: !13164, inlinedAt: !13416)
!13421 = !DILocation(line: 148, column: 2, scope: !13165, inlinedAt: !13416)
!13422 = !DILocation(line: 148, column: 2, scope: !13168, inlinedAt: !13416)
!13423 = !DILocation(line: 160, column: 2, scope: !13147, inlinedAt: !13416)
!13424 = !DILocation(line: 328, column: 27, scope: !13406)
!13425 = !DILocation(line: 328, column: 65, scope: !13406)
!13426 = !DILocation(line: 328, column: 2, scope: !13406)
!13427 = !DILocation(line: 0, scope: !13186, inlinedAt: !13428)
!13428 = distinct !DILocation(line: 329, column: 3, scope: !13429)
!13429 = distinct !DILexicalBlock(scope: !13406, file: !12946, line: 328, column: 74)
!13430 = !DILocation(line: 67, column: 15, scope: !13186, inlinedAt: !13428)
!13431 = !DILocation(line: 67, column: 33, scope: !13186, inlinedAt: !13428)
!13432 = !DILocation(line: 330, column: 3, scope: !13429)
!13433 = distinct !{!13433, !13426, !13434}
!13434 = !DILocation(line: 331, column: 2, scope: !13406)
!13435 = !DILocation(line: 333, column: 8, scope: !13406)
!13436 = !DILocation(line: 333, column: 18, scope: !13406)
!13437 = !DILocation(line: 334, column: 25, scope: !13406)
!13438 = !DILocation(line: 334, column: 8, scope: !13406)
!13439 = !DILocation(line: 334, column: 17, scope: !13406)
!13440 = !DILocation(line: 336, column: 2, scope: !13406)
!13441 = !DILocation(line: 337, column: 1, scope: !13406)
!13442 = distinct !DISubprogram(name: "z_impl_k_sem_init", scope: !2161, file: !2161, line: 41, type: !13443, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2142, retainedNodes: !13456)
!13443 = !DISubroutineType(types: !13444)
!13444 = !{!105, !13445, !32, !32}
!13445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13446, size: 32)
!13446 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sem", file: !122, line: 2909, size: 128, elements: !13447)
!13447 = !{!13448, !13454, !13455}
!13448 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !13446, file: !122, line: 2910, baseType: !13449, size: 64)
!13449 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !163, line: 233, baseType: !13450)
!13450 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !163, line: 231, size: 64, elements: !13451)
!13451 = !{!13452}
!13452 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !13450, file: !163, line: 232, baseType: !13453, size: 64)
!13453 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !137, line: 48, baseType: !2147)
!13454 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !13446, file: !122, line: 2911, baseType: !32, size: 32, offset: 64)
!13455 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !13446, file: !122, line: 2912, baseType: !32, size: 32, offset: 96)
!13456 = !{!13457, !13458, !13459}
!13457 = !DILocalVariable(name: "sem", arg: 1, scope: !13442, file: !2161, line: 41, type: !13445)
!13458 = !DILocalVariable(name: "initial_count", arg: 2, scope: !13442, file: !2161, line: 41, type: !32)
!13459 = !DILocalVariable(name: "limit", arg: 3, scope: !13442, file: !2161, line: 42, type: !32)
!13460 = !DILocation(line: 0, scope: !13442)
!13461 = !DILocation(line: 47, column: 2, scope: !13462)
!13462 = distinct !DILexicalBlock(scope: !13442, file: !2161, line: 47, column: 2)
!13463 = !DILocation(line: 53, column: 7, scope: !13442)
!13464 = !DILocation(line: 53, column: 13, scope: !13442)
!13465 = !DILocation(line: 54, column: 7, scope: !13442)
!13466 = !DILocation(line: 54, column: 13, scope: !13442)
!13467 = !DILocation(line: 58, column: 21, scope: !13442)
!13468 = !DILocation(line: 58, column: 2, scope: !13442)
!13469 = !DILocation(line: 64, column: 2, scope: !13442)
!13470 = !DILocation(line: 65, column: 1, scope: !13442)
!13471 = distinct !DISubprogram(name: "z_waitq_init", scope: !12539, file: !12539, line: 47, type: !13472, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2142, retainedNodes: !13475)
!13472 = !DISubroutineType(types: !13473)
!13473 = !{null, !13474}
!13474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13449, size: 32)
!13475 = !{!13476}
!13476 = !DILocalVariable(name: "w", arg: 1, scope: !13471, file: !12539, line: 47, type: !13474)
!13477 = !DILocation(line: 0, scope: !13471)
!13478 = !DILocation(line: 49, column: 21, scope: !13471)
!13479 = !DILocation(line: 49, column: 2, scope: !13471)
!13480 = !DILocation(line: 50, column: 1, scope: !13471)
!13481 = distinct !DISubprogram(name: "sys_dlist_init", scope: !137, file: !137, line: 197, type: !13482, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2142, retainedNodes: !13485)
!13482 = !DISubroutineType(types: !13483)
!13483 = !{null, !13484}
!13484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13453, size: 32)
!13485 = !{!13486}
!13486 = !DILocalVariable(name: "list", arg: 1, scope: !13481, file: !137, line: 197, type: !13484)
!13487 = !DILocation(line: 0, scope: !13481)
!13488 = !DILocation(line: 199, column: 8, scope: !13481)
!13489 = !DILocation(line: 199, column: 13, scope: !13481)
!13490 = !DILocation(line: 200, column: 8, scope: !13481)
!13491 = !DILocation(line: 200, column: 13, scope: !13481)
!13492 = !DILocation(line: 201, column: 1, scope: !13481)
!13493 = distinct !DISubprogram(name: "z_impl_k_sem_give", scope: !2161, file: !2161, line: 86, type: !13494, scopeLine: 87, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2142, retainedNodes: !13496)
!13494 = !DISubroutineType(types: !13495)
!13495 = !{null, !13445}
!13496 = !{!13497, !13498, !13503}
!13497 = !DILocalVariable(name: "sem", arg: 1, scope: !13493, file: !2161, line: 86, type: !13445)
!13498 = !DILocalVariable(name: "key", scope: !13493, file: !2161, line: 88, type: !13499)
!13499 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !230, line: 106, baseType: !13500)
!13500 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !230, line: 32, size: 32, elements: !13501)
!13501 = !{!13502}
!13502 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !13500, file: !230, line: 33, baseType: !105, size: 32)
!13503 = !DILocalVariable(name: "thread", scope: !13493, file: !2161, line: 89, type: !13504)
!13504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13505, size: 32)
!13505 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !127, line: 245, size: 896, elements: !13506)
!13506 = !{!13507, !13545, !13557, !13558, !13559, !13560, !13572}
!13507 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !13505, file: !127, line: 247, baseType: !13508, size: 384)
!13508 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !127, line: 57, size: 384, elements: !13509)
!13509 = !{!13510, !13520, !13521, !13522, !13523, !13532, !13533, !13534}
!13510 = !DIDerivedType(tag: DW_TAG_member, scope: !13508, file: !127, line: 60, baseType: !13511, size: 64)
!13511 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13508, file: !127, line: 60, size: 64, elements: !13512)
!13512 = !{!13513, !13514}
!13513 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !13511, file: !127, line: 61, baseType: !2146, size: 64)
!13514 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !13511, file: !127, line: 62, baseType: !13515, size: 64)
!13515 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !153, line: 49, size: 64, elements: !13516)
!13516 = !{!13517}
!13517 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !13515, file: !153, line: 50, baseType: !13518, size: 64)
!13518 = !DICompositeType(tag: DW_TAG_array_type, baseType: !13519, size: 64, elements: !158)
!13519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13515, size: 32)
!13520 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !13508, file: !127, line: 68, baseType: !13474, size: 32, offset: 64)
!13521 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !13508, file: !127, line: 71, baseType: !169, size: 8, offset: 96)
!13522 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !13508, file: !127, line: 74, baseType: !169, size: 8, offset: 104)
!13523 = !DIDerivedType(tag: DW_TAG_member, scope: !13508, file: !127, line: 90, baseType: !13524, size: 16, offset: 112)
!13524 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13508, file: !127, line: 90, size: 16, elements: !13525)
!13525 = !{!13526, !13531}
!13526 = !DIDerivedType(tag: DW_TAG_member, scope: !13524, file: !127, line: 91, baseType: !13527, size: 16)
!13527 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !13524, file: !127, line: 91, size: 16, elements: !13528)
!13528 = !{!13529, !13530}
!13529 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !13527, file: !127, line: 96, baseType: !179, size: 8)
!13530 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !13527, file: !127, line: 97, baseType: !169, size: 8, offset: 8)
!13531 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !13524, file: !127, line: 100, baseType: !183, size: 16)
!13532 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !13508, file: !127, line: 107, baseType: !113, size: 32, offset: 128)
!13533 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !13508, file: !127, line: 127, baseType: !104, size: 32, offset: 160)
!13534 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !13508, file: !127, line: 131, baseType: !13535, size: 192, offset: 192)
!13535 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !163, line: 244, size: 192, elements: !13536)
!13536 = !{!13537, !13538, !13544}
!13537 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !13535, file: !163, line: 245, baseType: !2146, size: 64)
!13538 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !13535, file: !163, line: 246, baseType: !13539, size: 32, offset: 64)
!13539 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !163, line: 242, baseType: !13540)
!13540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13541, size: 32)
!13541 = !DISubroutineType(types: !13542)
!13542 = !{null, !13543}
!13543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13535, size: 32)
!13544 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !13535, file: !163, line: 249, baseType: !109, size: 64, offset: 128)
!13545 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !13505, file: !127, line: 250, baseType: !13546, size: 288, offset: 384)
!13546 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !200, line: 25, size: 288, elements: !13547)
!13547 = !{!13548, !13549, !13550, !13551, !13552, !13553, !13554, !13555, !13556}
!13548 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !13546, file: !200, line: 26, baseType: !113, size: 32)
!13549 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !13546, file: !200, line: 27, baseType: !113, size: 32, offset: 32)
!13550 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !13546, file: !200, line: 28, baseType: !113, size: 32, offset: 64)
!13551 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !13546, file: !200, line: 29, baseType: !113, size: 32, offset: 96)
!13552 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !13546, file: !200, line: 30, baseType: !113, size: 32, offset: 128)
!13553 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !13546, file: !200, line: 31, baseType: !113, size: 32, offset: 160)
!13554 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !13546, file: !200, line: 32, baseType: !113, size: 32, offset: 192)
!13555 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !13546, file: !200, line: 33, baseType: !113, size: 32, offset: 224)
!13556 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !13546, file: !200, line: 34, baseType: !113, size: 32, offset: 256)
!13557 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !13505, file: !127, line: 253, baseType: !104, size: 32, offset: 672)
!13558 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !13505, file: !127, line: 256, baseType: !13449, size: 64, offset: 704)
!13559 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !13505, file: !127, line: 294, baseType: !105, size: 32, offset: 768)
!13560 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !13505, file: !127, line: 325, baseType: !13561, size: 32, offset: 800)
!13561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13562, size: 32)
!13562 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !122, line: 5073, size: 192, elements: !13563)
!13563 = !{!13564, !13570, !13571}
!13564 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !13562, file: !122, line: 5074, baseType: !13565, size: 96)
!13565 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !220, line: 56, size: 96, elements: !13566)
!13566 = !{!13567, !13568, !13569}
!13567 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !13565, file: !220, line: 57, baseType: !223, size: 32)
!13568 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !13565, file: !220, line: 58, baseType: !104, size: 32, offset: 32)
!13569 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !13565, file: !220, line: 59, baseType: !111, size: 32, offset: 64)
!13570 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !13562, file: !122, line: 5075, baseType: !13449, size: 64, offset: 96)
!13571 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !13562, file: !122, line: 5076, baseType: !2162, size: 32, offset: 160)
!13572 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !13505, file: !127, line: 343, baseType: !13573, size: 64, offset: 832)
!13573 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !200, line: 60, size: 64, elements: !13574)
!13574 = !{!13575, !13576}
!13575 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !13573, file: !200, line: 63, baseType: !113, size: 32)
!13576 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !13573, file: !200, line: 66, baseType: !113, size: 32, offset: 32)
!13577 = !DILocation(line: 0, scope: !13493)
!13578 = !DILocalVariable(name: "l", arg: 1, scope: !13579, file: !230, line: 136, type: !13582)
!13579 = distinct !DISubprogram(name: "k_spin_lock", scope: !230, file: !230, line: 136, type: !13580, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2142, retainedNodes: !13583)
!13580 = !DISubroutineType(types: !13581)
!13581 = !{!13499, !13582}
!13582 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2162, size: 32)
!13583 = !{!13578, !13584}
!13584 = !DILocalVariable(name: "k", scope: !13579, file: !230, line: 139, type: !13499)
!13585 = !DILocation(line: 0, scope: !13579, inlinedAt: !13586)
!13586 = distinct !DILocation(line: 88, column: 25, scope: !13493)
!13587 = !DILocation(line: 55, column: 2, scope: !13588, inlinedAt: !13592)
!13588 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7644, file: !7644, line: 42, type: !9346, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2142, retainedNodes: !13589)
!13589 = !{!13590, !13591}
!13590 = !DILocalVariable(name: "key", scope: !13588, file: !7644, line: 44, type: !32)
!13591 = !DILocalVariable(name: "tmp", scope: !13588, file: !7644, line: 53, type: !32)
!13592 = distinct !DILocation(line: 145, column: 10, scope: !13579, inlinedAt: !13586)
!13593 = !{i64 2846217}
!13594 = !DILocation(line: 0, scope: !13588, inlinedAt: !13592)
!13595 = !DILocation(line: 148, column: 2, scope: !13596, inlinedAt: !13586)
!13596 = distinct !DILexicalBlock(scope: !13597, file: !230, line: 148, column: 2)
!13597 = distinct !DILexicalBlock(scope: !13579, file: !230, line: 148, column: 2)
!13598 = !DILocation(line: 148, column: 2, scope: !13597, inlinedAt: !13586)
!13599 = !DILocation(line: 148, column: 2, scope: !13600, inlinedAt: !13586)
!13600 = distinct !DILexicalBlock(scope: !13596, file: !230, line: 148, column: 2)
!13601 = !DILocation(line: 160, column: 2, scope: !13579, inlinedAt: !13586)
!13602 = !DILocation(line: 93, column: 39, scope: !13493)
!13603 = !DILocation(line: 93, column: 11, scope: !13493)
!13604 = !DILocation(line: 95, column: 13, scope: !13605)
!13605 = distinct !DILexicalBlock(scope: !13493, file: !2161, line: 95, column: 6)
!13606 = !DILocation(line: 95, column: 6, scope: !13493)
!13607 = !DILocalVariable(name: "thread", arg: 1, scope: !13608, file: !12225, line: 65, type: !13504)
!13608 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !12225, file: !12225, line: 65, type: !13609, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2142, retainedNodes: !13611)
!13609 = !DISubroutineType(types: !13610)
!13610 = !{null, !13504, !32}
!13611 = !{!13607, !13612}
!13612 = !DILocalVariable(name: "value", arg: 2, scope: !13608, file: !12225, line: 65, type: !32)
!13613 = !DILocation(line: 0, scope: !13608, inlinedAt: !13614)
!13614 = distinct !DILocation(line: 96, column: 3, scope: !13615)
!13615 = distinct !DILexicalBlock(scope: !13605, file: !2161, line: 95, column: 22)
!13616 = !DILocation(line: 67, column: 15, scope: !13608, inlinedAt: !13614)
!13617 = !DILocation(line: 67, column: 33, scope: !13608, inlinedAt: !13614)
!13618 = !DILocation(line: 97, column: 3, scope: !13615)
!13619 = !DILocation(line: 98, column: 2, scope: !13615)
!13620 = !DILocation(line: 99, column: 23, scope: !13621)
!13621 = distinct !DILexicalBlock(scope: !13605, file: !2161, line: 98, column: 9)
!13622 = !DILocation(line: 99, column: 37, scope: !13621)
!13623 = !DILocation(line: 99, column: 29, scope: !13621)
!13624 = !DILocation(line: 99, column: 17, scope: !13621)
!13625 = !DILocation(line: 99, column: 14, scope: !13621)
!13626 = !DILocation(line: 103, column: 2, scope: !13493)
!13627 = !DILocation(line: 106, column: 1, scope: !13493)
!13628 = distinct !DISubprogram(name: "z_impl_k_sem_take", scope: !2161, file: !2161, line: 117, type: !13629, scopeLine: 118, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2142, retainedNodes: !13635)
!13629 = !DISubroutineType(types: !13630)
!13630 = !{!105, !13445, !13631}
!13631 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !108, line: 67, baseType: !13632)
!13632 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !108, line: 65, size: 64, elements: !13633)
!13633 = !{!13634}
!13634 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !13632, file: !108, line: 66, baseType: !107, size: 64)
!13635 = !{!13636, !13637, !13638, !13639, !13640}
!13636 = !DILocalVariable(name: "sem", arg: 1, scope: !13628, file: !2161, line: 117, type: !13445)
!13637 = !DILocalVariable(name: "timeout", arg: 2, scope: !13628, file: !2161, line: 117, type: !13631)
!13638 = !DILocalVariable(name: "ret", scope: !13628, file: !2161, line: 119, type: !105)
!13639 = !DILocalVariable(name: "key", scope: !13628, file: !2161, line: 124, type: !13499)
!13640 = !DILabel(scope: !13628, name: "out", file: !2161, line: 145)
!13641 = !DILocation(line: 0, scope: !13628)
!13642 = !DILocation(line: 1031, column: 3, scope: !13643, inlinedAt: !13646)
!13643 = distinct !DISubprogram(name: "__get_IPSR", scope: !7525, file: !7525, line: 1027, type: !389, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2142, retainedNodes: !13644)
!13644 = !{!13645}
!13645 = !DILocalVariable(name: "result", scope: !13643, file: !7525, line: 1029, type: !113)
!13646 = distinct !DILocation(line: 48, column: 10, scope: !13647, inlinedAt: !13648)
!13647 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !8517, file: !8517, line: 46, type: !8518, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2142, retainedNodes: !391)
!13648 = distinct !DILocation(line: 121, column: 2, scope: !13649)
!13649 = distinct !DILexicalBlock(scope: !13650, file: !2161, line: 121, column: 2)
!13650 = distinct !DILexicalBlock(scope: !13628, file: !2161, line: 121, column: 2)
!13651 = !{i64 6983789}
!13652 = !DILocation(line: 0, scope: !13643, inlinedAt: !13646)
!13653 = !DILocation(line: 48, column: 9, scope: !13647, inlinedAt: !13648)
!13654 = !DILocation(line: 121, column: 2, scope: !13649)
!13655 = !DILocation(line: 121, column: 2, scope: !13656)
!13656 = distinct !DILexicalBlock(scope: !13649, file: !2161, line: 121, column: 2)
!13657 = !DILocation(line: 0, scope: !13579, inlinedAt: !13658)
!13658 = distinct !DILocation(line: 124, column: 25, scope: !13628)
!13659 = !DILocation(line: 55, column: 2, scope: !13588, inlinedAt: !13660)
!13660 = distinct !DILocation(line: 145, column: 10, scope: !13579, inlinedAt: !13658)
!13661 = !DILocation(line: 0, scope: !13588, inlinedAt: !13660)
!13662 = !DILocation(line: 148, column: 2, scope: !13596, inlinedAt: !13658)
!13663 = !DILocation(line: 148, column: 2, scope: !13597, inlinedAt: !13658)
!13664 = !DILocation(line: 148, column: 2, scope: !13600, inlinedAt: !13658)
!13665 = !DILocation(line: 160, column: 2, scope: !13579, inlinedAt: !13658)
!13666 = !DILocation(line: 128, column: 6, scope: !13667)
!13667 = distinct !DILexicalBlock(scope: !13628, file: !2161, line: 128, column: 6)
!13668 = !DILocation(line: 128, column: 6, scope: !13628)
!13669 = !{!"branch_weights", i32 1, i32 2000}
!13670 = !DILocation(line: 129, column: 13, scope: !13671)
!13671 = distinct !DILexicalBlock(scope: !13667, file: !2161, line: 128, column: 31)
!13672 = !DILocalVariable(name: "key", arg: 2, scope: !13673, file: !230, line: 190, type: !13499)
!13673 = distinct !DISubprogram(name: "k_spin_unlock", scope: !230, file: !230, line: 189, type: !13674, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2142, retainedNodes: !13676)
!13674 = !DISubroutineType(types: !13675)
!13675 = !{null, !13582, !13499}
!13676 = !{!13677, !13672}
!13677 = !DILocalVariable(name: "l", arg: 1, scope: !13673, file: !230, line: 189, type: !13582)
!13678 = !DILocation(line: 0, scope: !13673, inlinedAt: !13679)
!13679 = distinct !DILocation(line: 130, column: 3, scope: !13671)
!13680 = !DILocation(line: 194, column: 2, scope: !13681, inlinedAt: !13679)
!13681 = distinct !DILexicalBlock(scope: !13682, file: !230, line: 194, column: 2)
!13682 = distinct !DILexicalBlock(scope: !13673, file: !230, line: 194, column: 2)
!13683 = !DILocation(line: 194, column: 2, scope: !13682, inlinedAt: !13679)
!13684 = !DILocation(line: 194, column: 2, scope: !13685, inlinedAt: !13679)
!13685 = distinct !DILexicalBlock(scope: !13681, file: !230, line: 194, column: 2)
!13686 = !DILocalVariable(name: "key", arg: 1, scope: !13687, file: !7644, line: 84, type: !32)
!13687 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7644, file: !7644, line: 84, type: !7476, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2142, retainedNodes: !13688)
!13688 = !{!13686}
!13689 = !DILocation(line: 0, scope: !13687, inlinedAt: !13690)
!13690 = distinct !DILocation(line: 215, column: 2, scope: !13673, inlinedAt: !13679)
!13691 = !DILocation(line: 95, column: 2, scope: !13687, inlinedAt: !13690)
!13692 = !{i64 2847034}
!13693 = !DILocation(line: 132, column: 3, scope: !13671)
!13694 = !DILocation(line: 135, column: 6, scope: !13628)
!13695 = !DILocation(line: 0, scope: !13673, inlinedAt: !13696)
!13696 = distinct !DILocation(line: 136, column: 3, scope: !13697)
!13697 = distinct !DILexicalBlock(scope: !13698, file: !2161, line: 135, column: 40)
!13698 = distinct !DILexicalBlock(scope: !13628, file: !2161, line: 135, column: 6)
!13699 = !DILocation(line: 194, column: 2, scope: !13681, inlinedAt: !13696)
!13700 = !DILocation(line: 194, column: 2, scope: !13682, inlinedAt: !13696)
!13701 = !DILocation(line: 194, column: 2, scope: !13685, inlinedAt: !13696)
!13702 = !DILocation(line: 0, scope: !13687, inlinedAt: !13703)
!13703 = distinct !DILocation(line: 215, column: 2, scope: !13673, inlinedAt: !13696)
!13704 = !DILocation(line: 95, column: 2, scope: !13687, inlinedAt: !13703)
!13705 = !DILocation(line: 138, column: 3, scope: !13697)
!13706 = !DILocation(line: 143, column: 38, scope: !13628)
!13707 = !DILocation(line: 143, column: 8, scope: !13628)
!13708 = !DILocation(line: 143, column: 2, scope: !13628)
!13709 = !DILocation(line: 145, column: 1, scope: !13628)
!13710 = !DILocation(line: 148, column: 2, scope: !13628)
!13711 = distinct !DISubprogram(name: "z_impl_k_sem_reset", scope: !2161, file: !2161, line: 151, type: !13494, scopeLine: 152, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2142, retainedNodes: !13712)
!13712 = !{!13713, !13714, !13715}
!13713 = !DILocalVariable(name: "sem", arg: 1, scope: !13711, file: !2161, line: 151, type: !13445)
!13714 = !DILocalVariable(name: "thread", scope: !13711, file: !2161, line: 153, type: !13504)
!13715 = !DILocalVariable(name: "key", scope: !13711, file: !2161, line: 154, type: !13499)
!13716 = !DILocation(line: 0, scope: !13711)
!13717 = !DILocation(line: 0, scope: !13579, inlinedAt: !13718)
!13718 = distinct !DILocation(line: 154, column: 25, scope: !13711)
!13719 = !DILocation(line: 55, column: 2, scope: !13588, inlinedAt: !13720)
!13720 = distinct !DILocation(line: 145, column: 10, scope: !13579, inlinedAt: !13718)
!13721 = !DILocation(line: 0, scope: !13588, inlinedAt: !13720)
!13722 = !DILocation(line: 148, column: 2, scope: !13596, inlinedAt: !13718)
!13723 = !DILocation(line: 148, column: 2, scope: !13597, inlinedAt: !13718)
!13724 = !DILocation(line: 148, column: 2, scope: !13600, inlinedAt: !13718)
!13725 = !DILocation(line: 160, column: 2, scope: !13579, inlinedAt: !13718)
!13726 = !DILocation(line: 157, column: 12, scope: !13727)
!13727 = distinct !DILexicalBlock(scope: !13711, file: !2161, line: 156, column: 15)
!13728 = !DILocation(line: 158, column: 14, scope: !13729)
!13729 = distinct !DILexicalBlock(scope: !13727, file: !2161, line: 158, column: 7)
!13730 = !DILocation(line: 158, column: 7, scope: !13727)
!13731 = !DILocation(line: 0, scope: !13608, inlinedAt: !13732)
!13732 = distinct !DILocation(line: 161, column: 3, scope: !13727)
!13733 = !DILocation(line: 67, column: 15, scope: !13608, inlinedAt: !13732)
!13734 = !DILocation(line: 67, column: 33, scope: !13608, inlinedAt: !13732)
!13735 = !DILocation(line: 162, column: 3, scope: !13727)
!13736 = distinct !{!13736, !13737, !13738}
!13737 = !DILocation(line: 156, column: 2, scope: !13711)
!13738 = !DILocation(line: 163, column: 2, scope: !13711)
!13739 = !DILocation(line: 164, column: 7, scope: !13711)
!13740 = !DILocation(line: 164, column: 13, scope: !13711)
!13741 = !DILocation(line: 170, column: 2, scope: !13711)
!13742 = !DILocation(line: 171, column: 1, scope: !13711)
!13743 = distinct !DISubprogram(name: "z_sched_prio_cmp", scope: !2271, file: !2271, line: 93, type: !13744, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2167, retainedNodes: !13746)
!13744 = !DISubroutineType(types: !13745)
!13745 = !{!116, !2170, !2170}
!13746 = !{!13747, !13748, !13749, !13750}
!13747 = !DILocalVariable(name: "thread_1", arg: 1, scope: !13743, file: !2271, line: 93, type: !2170)
!13748 = !DILocalVariable(name: "thread_2", arg: 2, scope: !13743, file: !2271, line: 94, type: !2170)
!13749 = !DILocalVariable(name: "b1", scope: !13743, file: !2271, line: 97, type: !116)
!13750 = !DILocalVariable(name: "b2", scope: !13743, file: !2271, line: 98, type: !116)
!13751 = !DILocation(line: 0, scope: !13743)
!13752 = !DILocation(line: 97, column: 30, scope: !13743)
!13753 = !DILocation(line: 98, column: 30, scope: !13743)
!13754 = !DILocation(line: 100, column: 9, scope: !13755)
!13755 = distinct !DILexicalBlock(scope: !13743, file: !2271, line: 100, column: 6)
!13756 = !DILocation(line: 100, column: 6, scope: !13743)
!13757 = !DILocation(line: 125, column: 1, scope: !13743)
!13758 = distinct !DISubprogram(name: "z_reset_time_slice", scope: !2271, file: !2271, line: 428, type: !13759, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2167, retainedNodes: !13761)
!13759 = !DISubroutineType(types: !13760)
!13760 = !{null, !2170}
!13761 = !{!13762}
!13762 = !DILocalVariable(name: "curr", arg: 1, scope: !13758, file: !2271, line: 428, type: !2170)
!13763 = !DILocation(line: 0, scope: !13758)
!13764 = !DILocation(line: 434, column: 6, scope: !13765)
!13765 = distinct !DILexicalBlock(scope: !13758, file: !2271, line: 434, column: 6)
!13766 = !DILocation(line: 434, column: 23, scope: !13765)
!13767 = !DILocation(line: 434, column: 6, scope: !13758)
!13768 = !DILocation(line: 435, column: 50, scope: !13769)
!13769 = distinct !DILexicalBlock(scope: !13765, file: !2271, line: 434, column: 29)
!13770 = !DILocation(line: 435, column: 48, scope: !13769)
!13771 = !DILocation(line: 435, column: 29, scope: !13769)
!13772 = !DILocation(line: 436, column: 24, scope: !13769)
!13773 = !DILocation(line: 436, column: 3, scope: !13769)
!13774 = !DILocation(line: 437, column: 2, scope: !13769)
!13775 = !DILocation(line: 438, column: 1, scope: !13758)
!13776 = distinct !DISubprogram(name: "slice_time", scope: !2271, file: !2271, line: 407, type: !13777, scopeLine: 408, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2167, retainedNodes: !13779)
!13777 = !DISubroutineType(types: !13778)
!13778 = !{!105, !2170}
!13779 = !{!13780, !13781}
!13780 = !DILocalVariable(name: "curr", arg: 1, scope: !13776, file: !2271, line: 407, type: !2170)
!13781 = !DILocalVariable(name: "ret", scope: !13776, file: !2271, line: 409, type: !105)
!13782 = !DILocation(line: 0, scope: !13776)
!13783 = !DILocation(line: 409, column: 12, scope: !13776)
!13784 = !DILocation(line: 416, column: 2, scope: !13776)
!13785 = distinct !DISubprogram(name: "k_sched_time_slice_set", scope: !2271, file: !2271, line: 440, type: !13786, scopeLine: 441, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2167, retainedNodes: !13788)
!13786 = !DISubroutineType(types: !13787)
!13787 = !{null, !116, !105}
!13788 = !{!13789, !13790, !13791, !13797}
!13789 = !DILocalVariable(name: "slice", arg: 1, scope: !13785, file: !2271, line: 440, type: !116)
!13790 = !DILocalVariable(name: "prio", arg: 2, scope: !13785, file: !2271, line: 440, type: !105)
!13791 = !DILocalVariable(name: "__i", scope: !13792, file: !2271, line: 442, type: !13793)
!13792 = distinct !DILexicalBlock(scope: !13785, file: !2271, line: 442, column: 2)
!13793 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !230, line: 106, baseType: !13794)
!13794 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !230, line: 32, size: 32, elements: !13795)
!13795 = !{!13796}
!13796 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !13794, file: !230, line: 33, baseType: !105, size: 32)
!13797 = !DILocalVariable(name: "__key", scope: !13792, file: !2271, line: 442, type: !13793)
!13798 = !DILocation(line: 0, scope: !13785)
!13799 = !DILocation(line: 0, scope: !13792)
!13800 = !DILocalVariable(name: "l", arg: 1, scope: !13801, file: !230, line: 136, type: !13804)
!13801 = distinct !DISubprogram(name: "k_spin_lock", scope: !230, file: !230, line: 136, type: !13802, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2167, retainedNodes: !13805)
!13802 = !DISubroutineType(types: !13803)
!13803 = !{!13793, !13804}
!13804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2258, size: 32)
!13805 = !{!13800, !13806}
!13806 = !DILocalVariable(name: "k", scope: !13801, file: !230, line: 139, type: !13793)
!13807 = !DILocation(line: 0, scope: !13801, inlinedAt: !13808)
!13808 = distinct !DILocation(line: 442, column: 2, scope: !13792)
!13809 = !DILocation(line: 55, column: 2, scope: !13810, inlinedAt: !13814)
!13810 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7644, file: !7644, line: 42, type: !9346, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2167, retainedNodes: !13811)
!13811 = !{!13812, !13813}
!13812 = !DILocalVariable(name: "key", scope: !13810, file: !7644, line: 44, type: !32)
!13813 = !DILocalVariable(name: "tmp", scope: !13810, file: !7644, line: 53, type: !32)
!13814 = distinct !DILocation(line: 145, column: 10, scope: !13801, inlinedAt: !13808)
!13815 = !{i64 2888626}
!13816 = !DILocation(line: 0, scope: !13810, inlinedAt: !13814)
!13817 = !DILocation(line: 148, column: 2, scope: !13818, inlinedAt: !13808)
!13818 = distinct !DILexicalBlock(scope: !13819, file: !230, line: 148, column: 2)
!13819 = distinct !DILexicalBlock(scope: !13801, file: !230, line: 148, column: 2)
!13820 = !DILocation(line: 148, column: 2, scope: !13819, inlinedAt: !13808)
!13821 = !DILocation(line: 148, column: 2, scope: !13822, inlinedAt: !13808)
!13822 = distinct !DILexicalBlock(scope: !13818, file: !230, line: 148, column: 2)
!13823 = !DILocation(line: 160, column: 2, scope: !13801, inlinedAt: !13808)
!13824 = !DILocation(line: 443, column: 29, scope: !13825)
!13825 = distinct !DILexicalBlock(scope: !13826, file: !2271, line: 442, column: 26)
!13826 = distinct !DILexicalBlock(scope: !13792, file: !2271, line: 442, column: 2)
!13827 = !DILocation(line: 444, column: 17, scope: !13825)
!13828 = !DILocation(line: 445, column: 51, scope: !13829)
!13829 = distinct !DILexicalBlock(scope: !13825, file: !2271, line: 445, column: 7)
!13830 = !DILocation(line: 445, column: 7, scope: !13825)
!13831 = !DILocation(line: 0, scope: !13825)
!13832 = !DILocation(line: 451, column: 18, scope: !13825)
!13833 = !DILocation(line: 452, column: 3, scope: !13825)
!13834 = !DILocalVariable(name: "key", arg: 2, scope: !13835, file: !230, line: 190, type: !13793)
!13835 = distinct !DISubprogram(name: "k_spin_unlock", scope: !230, file: !230, line: 189, type: !13836, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2167, retainedNodes: !13838)
!13836 = !DISubroutineType(types: !13837)
!13837 = !{null, !13804, !13793}
!13838 = !{!13839, !13834}
!13839 = !DILocalVariable(name: "l", arg: 1, scope: !13835, file: !230, line: 189, type: !13804)
!13840 = !DILocation(line: 0, scope: !13835, inlinedAt: !13841)
!13841 = distinct !DILocation(line: 442, column: 2, scope: !13826)
!13842 = !DILocation(line: 194, column: 2, scope: !13843, inlinedAt: !13841)
!13843 = distinct !DILexicalBlock(scope: !13844, file: !230, line: 194, column: 2)
!13844 = distinct !DILexicalBlock(scope: !13835, file: !230, line: 194, column: 2)
!13845 = !DILocation(line: 194, column: 2, scope: !13844, inlinedAt: !13841)
!13846 = !DILocation(line: 194, column: 2, scope: !13847, inlinedAt: !13841)
!13847 = distinct !DILexicalBlock(scope: !13843, file: !230, line: 194, column: 2)
!13848 = !DILocalVariable(name: "key", arg: 1, scope: !13849, file: !7644, line: 84, type: !32)
!13849 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7644, file: !7644, line: 84, type: !7476, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2167, retainedNodes: !13850)
!13850 = !{!13848}
!13851 = !DILocation(line: 0, scope: !13849, inlinedAt: !13852)
!13852 = distinct !DILocation(line: 215, column: 2, scope: !13835, inlinedAt: !13841)
!13853 = !DILocation(line: 95, column: 2, scope: !13849, inlinedAt: !13852)
!13854 = !{i64 2889443}
!13855 = !DILocation(line: 454, column: 1, scope: !13785)
!13856 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil32", scope: !12779, file: !12779, line: 389, type: !13857, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2167, retainedNodes: !13859)
!13857 = !DISubroutineType(types: !13858)
!13858 = !{!113, !113}
!13859 = !{!13860}
!13860 = !DILocalVariable(name: "t", arg: 1, scope: !13856, file: !12779, line: 389, type: !113)
!13861 = !DILocation(line: 0, scope: !13856)
!13862 = !DILocalVariable(name: "t", arg: 1, scope: !13863, file: !12779, line: 102, type: !114)
!13863 = distinct !DISubprogram(name: "z_tmcvt", scope: !12779, file: !12779, line: 102, type: !12787, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2167, retainedNodes: !13864)
!13864 = !{!13862, !13865, !13866, !13867, !13868, !13869, !13870, !13871, !13872, !13873, !13874}
!13865 = !DILocalVariable(name: "from_hz", arg: 2, scope: !13863, file: !12779, line: 102, type: !113)
!13866 = !DILocalVariable(name: "to_hz", arg: 3, scope: !13863, file: !12779, line: 103, type: !113)
!13867 = !DILocalVariable(name: "const_hz", arg: 4, scope: !13863, file: !12779, line: 103, type: !911)
!13868 = !DILocalVariable(name: "result32", arg: 5, scope: !13863, file: !12779, line: 104, type: !911)
!13869 = !DILocalVariable(name: "round_up", arg: 6, scope: !13863, file: !12779, line: 104, type: !911)
!13870 = !DILocalVariable(name: "round_off", arg: 7, scope: !13863, file: !12779, line: 105, type: !911)
!13871 = !DILocalVariable(name: "mul_ratio", scope: !13863, file: !12779, line: 107, type: !911)
!13872 = !DILocalVariable(name: "div_ratio", scope: !13863, file: !12779, line: 109, type: !911)
!13873 = !DILocalVariable(name: "off", scope: !13863, file: !12779, line: 116, type: !114)
!13874 = !DILocalVariable(name: "rdivisor", scope: !13875, file: !12779, line: 119, type: !113)
!13875 = distinct !DILexicalBlock(scope: !13876, file: !12779, line: 118, column: 18)
!13876 = distinct !DILexicalBlock(scope: !13863, file: !12779, line: 118, column: 6)
!13877 = !DILocation(line: 0, scope: !13863, inlinedAt: !13878)
!13878 = distinct !DILocation(line: 392, column: 9, scope: !13856)
!13879 = !DILocation(line: 143, column: 25, scope: !13880, inlinedAt: !13878)
!13880 = distinct !DILexicalBlock(scope: !13881, file: !12779, line: 142, column: 17)
!13881 = distinct !DILexicalBlock(scope: !13882, file: !12779, line: 142, column: 7)
!13882 = distinct !DILexicalBlock(scope: !13883, file: !12779, line: 141, column: 24)
!13883 = distinct !DILexicalBlock(scope: !13884, file: !12779, line: 141, column: 13)
!13884 = distinct !DILexicalBlock(scope: !13863, file: !12779, line: 134, column: 6)
!13885 = !DILocation(line: 392, column: 2, scope: !13856)
!13886 = distinct !DISubprogram(name: "z_time_slice", scope: !2271, file: !2271, line: 502, type: !12141, scopeLine: 503, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2167, retainedNodes: !13887)
!13887 = !{!13888, !13889}
!13888 = !DILocalVariable(name: "ticks", arg: 1, scope: !13886, file: !2271, line: 502, type: !105)
!13889 = !DILocalVariable(name: "key", scope: !13886, file: !2271, line: 511, type: !13793)
!13890 = !DILocation(line: 0, scope: !13886)
!13891 = !DILocation(line: 0, scope: !13801, inlinedAt: !13892)
!13892 = distinct !DILocation(line: 511, column: 25, scope: !13886)
!13893 = !DILocation(line: 55, column: 2, scope: !13810, inlinedAt: !13894)
!13894 = distinct !DILocation(line: 145, column: 10, scope: !13801, inlinedAt: !13892)
!13895 = !DILocation(line: 0, scope: !13810, inlinedAt: !13894)
!13896 = !DILocation(line: 148, column: 2, scope: !13818, inlinedAt: !13892)
!13897 = !DILocation(line: 148, column: 2, scope: !13819, inlinedAt: !13892)
!13898 = !DILocation(line: 148, column: 2, scope: !13822, inlinedAt: !13892)
!13899 = !DILocation(line: 160, column: 2, scope: !13801, inlinedAt: !13892)
!13900 = !DILocation(line: 514, column: 6, scope: !13901)
!13901 = distinct !DILexicalBlock(scope: !13886, file: !2271, line: 514, column: 6)
!13902 = !DILocation(line: 514, column: 25, scope: !13901)
!13903 = !DILocation(line: 514, column: 22, scope: !13901)
!13904 = !DILocation(line: 514, column: 6, scope: !13886)
!13905 = !DILocation(line: 515, column: 3, scope: !13906)
!13906 = distinct !DILexicalBlock(scope: !13901, file: !2271, line: 514, column: 35)
!13907 = !DILocation(line: 0, scope: !13835, inlinedAt: !13908)
!13908 = distinct !DILocation(line: 516, column: 3, scope: !13906)
!13909 = !DILocation(line: 194, column: 2, scope: !13843, inlinedAt: !13908)
!13910 = !DILocation(line: 194, column: 2, scope: !13844, inlinedAt: !13908)
!13911 = !DILocation(line: 194, column: 2, scope: !13847, inlinedAt: !13908)
!13912 = !DILocation(line: 0, scope: !13849, inlinedAt: !13913)
!13913 = distinct !DILocation(line: 215, column: 2, scope: !13835, inlinedAt: !13908)
!13914 = !DILocation(line: 95, column: 2, scope: !13849, inlinedAt: !13913)
!13915 = !DILocation(line: 517, column: 3, scope: !13906)
!13916 = !DILocation(line: 519, column: 18, scope: !13886)
!13917 = !DILocation(line: 522, column: 6, scope: !13918)
!13918 = distinct !DILexicalBlock(scope: !13886, file: !2271, line: 522, column: 6)
!13919 = !DILocation(line: 522, column: 27, scope: !13918)
!13920 = !DILocation(line: 522, column: 30, scope: !13918)
!13921 = !DILocation(line: 522, column: 6, scope: !13886)
!13922 = !DILocation(line: 523, column: 30, scope: !13923)
!13923 = distinct !DILexicalBlock(scope: !13924, file: !2271, line: 523, column: 7)
!13924 = distinct !DILexicalBlock(scope: !13918, file: !2271, line: 522, column: 51)
!13925 = !DILocation(line: 523, column: 13, scope: !13923)
!13926 = !DILocation(line: 523, column: 7, scope: !13924)
!13927 = !DILocation(line: 530, column: 10, scope: !13928)
!13928 = distinct !DILexicalBlock(scope: !13923, file: !2271, line: 523, column: 43)
!13929 = !DILocation(line: 531, column: 3, scope: !13928)
!13930 = !DILocation(line: 532, column: 30, scope: !13931)
!13931 = distinct !DILexicalBlock(scope: !13923, file: !2271, line: 531, column: 10)
!13932 = !DILocation(line: 535, column: 29, scope: !13933)
!13933 = distinct !DILexicalBlock(scope: !13918, file: !2271, line: 534, column: 9)
!13934 = !DILocation(line: 0, scope: !13835, inlinedAt: !13935)
!13935 = distinct !DILocation(line: 537, column: 2, scope: !13886)
!13936 = !DILocation(line: 194, column: 2, scope: !13843, inlinedAt: !13935)
!13937 = !DILocation(line: 194, column: 2, scope: !13844, inlinedAt: !13935)
!13938 = !DILocation(line: 194, column: 2, scope: !13847, inlinedAt: !13935)
!13939 = !DILocation(line: 0, scope: !13849, inlinedAt: !13940)
!13940 = distinct !DILocation(line: 215, column: 2, scope: !13835, inlinedAt: !13935)
!13941 = !DILocation(line: 95, column: 2, scope: !13849, inlinedAt: !13940)
!13942 = !DILocation(line: 538, column: 1, scope: !13886)
!13943 = distinct !DISubprogram(name: "sliceable", scope: !2271, file: !2271, line: 468, type: !13944, scopeLine: 469, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2167, retainedNodes: !13946)
!13944 = !DISubroutineType(types: !13945)
!13945 = !{!911, !2170}
!13946 = !{!13947, !13948}
!13947 = !DILocalVariable(name: "thread", arg: 1, scope: !13943, file: !2271, line: 468, type: !2170)
!13948 = !DILocalVariable(name: "ret", scope: !13943, file: !2271, line: 470, type: !911)
!13949 = !DILocation(line: 0, scope: !13943)
!13950 = !DILocation(line: 470, column: 13, scope: !13943)
!13951 = !DILocation(line: 471, column: 3, scope: !13943)
!13952 = !DILocation(line: 471, column: 7, scope: !13943)
!13953 = !DILocation(line: 472, column: 3, scope: !13943)
!13954 = !DILocation(line: 472, column: 37, scope: !13943)
!13955 = !DILocation(line: 472, column: 24, scope: !13943)
!13956 = !DILocation(line: 472, column: 43, scope: !13943)
!13957 = !DILocation(line: 472, column: 7, scope: !13943)
!13958 = !DILocation(line: 473, column: 3, scope: !13943)
!13959 = !DILocation(line: 473, column: 7, scope: !13943)
!13960 = !DILocation(line: 473, column: 6, scope: !13943)
!13961 = !DILocation(line: 479, column: 2, scope: !13943)
!13962 = distinct !DISubprogram(name: "slice_expired_locked", scope: !2271, file: !2271, line: 482, type: !13963, scopeLine: 483, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2167, retainedNodes: !13965)
!13963 = !DISubroutineType(types: !13964)
!13964 = !{!13793, !13793}
!13965 = !{!13966, !13967}
!13966 = !DILocalVariable(name: "sched_lock_key", arg: 1, scope: !13962, file: !2271, line: 482, type: !13793)
!13967 = !DILocalVariable(name: "curr", scope: !13962, file: !2271, line: 484, type: !2170)
!13968 = !DILocation(line: 0, scope: !13962)
!13969 = !DILocation(line: 484, column: 26, scope: !13962)
!13970 = !DILocation(line: 493, column: 7, scope: !13971)
!13971 = distinct !DILexicalBlock(scope: !13962, file: !2271, line: 493, column: 6)
!13972 = !DILocation(line: 493, column: 6, scope: !13962)
!13973 = !DILocation(line: 494, column: 3, scope: !13974)
!13974 = distinct !DILexicalBlock(scope: !13971, file: !2271, line: 493, column: 49)
!13975 = !DILocation(line: 495, column: 2, scope: !13974)
!13976 = !DILocation(line: 496, column: 2, scope: !13962)
!13977 = !DILocation(line: 499, column: 1, scope: !13962)
!13978 = distinct !DISubprogram(name: "z_is_thread_prevented_from_running", scope: !12184, file: !12184, line: 106, type: !13944, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2167, retainedNodes: !13979)
!13979 = !{!13980, !13981}
!13980 = !DILocalVariable(name: "thread", arg: 1, scope: !13978, file: !12184, line: 106, type: !2170)
!13981 = !DILocalVariable(name: "state", scope: !13978, file: !12184, line: 108, type: !169)
!13982 = !DILocation(line: 0, scope: !13978)
!13983 = !DILocation(line: 108, column: 31, scope: !13978)
!13984 = !DILocation(line: 110, column: 16, scope: !13978)
!13985 = !DILocation(line: 111, column: 41, scope: !13978)
!13986 = !DILocation(line: 110, column: 2, scope: !13978)
!13987 = distinct !DISubprogram(name: "move_thread_to_end_of_prio_q", scope: !2271, file: !2271, line: 393, type: !13759, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2167, retainedNodes: !13988)
!13988 = !{!13989}
!13989 = !DILocalVariable(name: "thread", arg: 1, scope: !13987, file: !2271, line: 393, type: !2170)
!13990 = !DILocation(line: 0, scope: !13987)
!13991 = !DILocation(line: 395, column: 6, scope: !13992)
!13992 = distinct !DILexicalBlock(scope: !13987, file: !2271, line: 395, column: 6)
!13993 = !DILocation(line: 395, column: 6, scope: !13987)
!13994 = !DILocalVariable(name: "thread", arg: 1, scope: !13995, file: !2271, line: 264, type: !2170)
!13995 = distinct !DISubprogram(name: "dequeue_thread", scope: !2271, file: !2271, line: 264, type: !13759, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2167, retainedNodes: !13996)
!13996 = !{!13994}
!13997 = !DILocation(line: 0, scope: !13995, inlinedAt: !13998)
!13998 = distinct !DILocation(line: 396, column: 3, scope: !13999)
!13999 = distinct !DILexicalBlock(scope: !13992, file: !2271, line: 395, column: 34)
!14000 = !DILocation(line: 266, column: 15, scope: !13995, inlinedAt: !13998)
!14001 = !DILocation(line: 266, column: 28, scope: !13995, inlinedAt: !13998)
!14002 = !DILocalVariable(name: "thread", arg: 1, scope: !14003, file: !2271, line: 232, type: !2170)
!14003 = distinct !DISubprogram(name: "runq_remove", scope: !2271, file: !2271, line: 232, type: !13759, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2167, retainedNodes: !14004)
!14004 = !{!14002}
!14005 = !DILocation(line: 0, scope: !14003, inlinedAt: !14006)
!14006 = distinct !DILocation(line: 268, column: 3, scope: !14007, inlinedAt: !13998)
!14007 = distinct !DILexicalBlock(scope: !14008, file: !2271, line: 267, column: 35)
!14008 = distinct !DILexicalBlock(scope: !13995, file: !2271, line: 267, column: 6)
!14009 = !DILocation(line: 234, column: 2, scope: !14003, inlinedAt: !14006)
!14010 = !DILocation(line: 397, column: 2, scope: !13999)
!14011 = !DILocalVariable(name: "thread", arg: 1, scope: !14012, file: !2271, line: 250, type: !2170)
!14012 = distinct !DISubprogram(name: "queue_thread", scope: !2271, file: !2271, line: 250, type: !13759, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2167, retainedNodes: !14013)
!14013 = !{!14011}
!14014 = !DILocation(line: 0, scope: !14012, inlinedAt: !14015)
!14015 = distinct !DILocation(line: 398, column: 2, scope: !13987)
!14016 = !DILocation(line: 252, column: 15, scope: !14012, inlinedAt: !14015)
!14017 = !DILocation(line: 252, column: 28, scope: !14012, inlinedAt: !14015)
!14018 = !DILocalVariable(name: "thread", arg: 1, scope: !14019, file: !2271, line: 227, type: !2170)
!14019 = distinct !DISubprogram(name: "runq_add", scope: !2271, file: !2271, line: 227, type: !13759, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2167, retainedNodes: !14020)
!14020 = !{!14018}
!14021 = !DILocation(line: 0, scope: !14019, inlinedAt: !14022)
!14022 = distinct !DILocation(line: 254, column: 3, scope: !14023, inlinedAt: !14015)
!14023 = distinct !DILexicalBlock(scope: !14024, file: !2271, line: 253, column: 35)
!14024 = distinct !DILexicalBlock(scope: !14012, file: !2271, line: 253, column: 6)
!14025 = !DILocalVariable(name: "pq", arg: 1, scope: !14026, file: !2271, line: 181, type: !14029)
!14026 = distinct !DISubprogram(name: "z_priq_dumb_add", scope: !2271, file: !2271, line: 181, type: !14027, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2167, retainedNodes: !14030)
!14027 = !DISubroutineType(types: !14028)
!14028 = !{null, !14029, !2170}
!14029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2206, size: 32)
!14030 = !{!14025, !14031, !14032}
!14031 = !DILocalVariable(name: "thread", arg: 2, scope: !14026, file: !2271, line: 182, type: !2170)
!14032 = !DILocalVariable(name: "t", scope: !14026, file: !2271, line: 184, type: !2170)
!14033 = !DILocation(line: 0, scope: !14026, inlinedAt: !14034)
!14034 = distinct !DILocation(line: 229, column: 2, scope: !14019, inlinedAt: !14022)
!14035 = !DILocation(line: 186, column: 2, scope: !14036, inlinedAt: !14034)
!14036 = distinct !DILexicalBlock(scope: !14037, file: !2271, line: 186, column: 2)
!14037 = distinct !DILexicalBlock(scope: !14026, file: !2271, line: 186, column: 2)
!14038 = !DILocation(line: 186, column: 2, scope: !14037, inlinedAt: !14034)
!14039 = !DILocation(line: 186, column: 2, scope: !14040, inlinedAt: !14034)
!14040 = distinct !DILexicalBlock(scope: !14036, file: !2271, line: 186, column: 2)
!14041 = !DILocation(line: 188, column: 2, scope: !14042, inlinedAt: !14034)
!14042 = distinct !DILexicalBlock(scope: !14026, file: !2271, line: 188, column: 2)
!14043 = !DILocation(line: 188, column: 2, scope: !14044, inlinedAt: !14034)
!14044 = distinct !DILexicalBlock(scope: !14042, file: !2271, line: 188, column: 2)
!14045 = !DILocation(line: 0, scope: !14042, inlinedAt: !14034)
!14046 = !DILocation(line: 189, column: 7, scope: !14047, inlinedAt: !14034)
!14047 = distinct !DILexicalBlock(scope: !14048, file: !2271, line: 189, column: 7)
!14048 = distinct !DILexicalBlock(scope: !14044, file: !2271, line: 188, column: 56)
!14049 = !DILocation(line: 189, column: 35, scope: !14047, inlinedAt: !14034)
!14050 = !DILocation(line: 189, column: 7, scope: !14048, inlinedAt: !14034)
!14051 = !DILocation(line: 191, column: 21, scope: !14052, inlinedAt: !14034)
!14052 = distinct !DILexicalBlock(scope: !14047, file: !2271, line: 189, column: 40)
!14053 = !DILocation(line: 190, column: 4, scope: !14052, inlinedAt: !14034)
!14054 = !DILocation(line: 192, column: 4, scope: !14052, inlinedAt: !14034)
!14055 = distinct !{!14055, !14041, !14056}
!14056 = !DILocation(line: 194, column: 2, scope: !14042, inlinedAt: !14034)
!14057 = !DILocation(line: 196, column: 37, scope: !14026, inlinedAt: !14034)
!14058 = !DILocation(line: 196, column: 2, scope: !14026, inlinedAt: !14034)
!14059 = !DILocation(line: 197, column: 1, scope: !14026, inlinedAt: !14034)
!14060 = !DILocation(line: 399, column: 25, scope: !13987)
!14061 = !DILocation(line: 399, column: 22, scope: !13987)
!14062 = !DILocation(line: 399, column: 2, scope: !13987)
!14063 = !DILocation(line: 400, column: 1, scope: !13987)
!14064 = distinct !DISubprogram(name: "z_is_thread_queued", scope: !12184, file: !12184, line: 136, type: !13944, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2167, retainedNodes: !14065)
!14065 = !{!14066}
!14066 = !DILocalVariable(name: "thread", arg: 1, scope: !14064, file: !12184, line: 136, type: !2170)
!14067 = !DILocation(line: 0, scope: !14064)
!14068 = !DILocation(line: 138, column: 9, scope: !14064)
!14069 = !DILocation(line: 138, column: 2, scope: !14064)
!14070 = distinct !DISubprogram(name: "z_priq_dumb_remove", scope: !2271, file: !2271, line: 1137, type: !14027, scopeLine: 1138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2167, retainedNodes: !14071)
!14071 = !{!14072, !14073}
!14072 = !DILocalVariable(name: "pq", arg: 1, scope: !14070, file: !2271, line: 1137, type: !14029)
!14073 = !DILocalVariable(name: "thread", arg: 2, scope: !14070, file: !2271, line: 1137, type: !2170)
!14074 = !DILocation(line: 0, scope: !14070)
!14075 = !DILocation(line: 1139, column: 2, scope: !14076)
!14076 = distinct !DILexicalBlock(scope: !14077, file: !2271, line: 1139, column: 2)
!14077 = distinct !DILexicalBlock(scope: !14070, file: !2271, line: 1139, column: 2)
!14078 = !DILocation(line: 1139, column: 2, scope: !14077)
!14079 = !DILocation(line: 1139, column: 2, scope: !14080)
!14080 = distinct !DILexicalBlock(scope: !14076, file: !2271, line: 1139, column: 2)
!14081 = !DILocation(line: 1141, column: 33, scope: !14070)
!14082 = !DILocation(line: 1141, column: 2, scope: !14070)
!14083 = !DILocation(line: 1142, column: 1, scope: !14070)
!14084 = distinct !DISubprogram(name: "z_is_idle_thread_object", scope: !12184, file: !12184, line: 83, type: !13944, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2167, retainedNodes: !14085)
!14085 = !{!14086}
!14086 = !DILocalVariable(name: "thread", arg: 1, scope: !14084, file: !12184, line: 83, type: !2170)
!14087 = !DILocation(line: 0, scope: !14084)
!14088 = !DILocation(line: 89, column: 16, scope: !14084)
!14089 = !DILocation(line: 89, column: 2, scope: !14084)
!14090 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !137, file: !137, line: 294, type: !14091, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2167, retainedNodes: !14093)
!14091 = !DISubroutineType(types: !14092)
!14092 = !{!2267, !14029}
!14093 = !{!14094}
!14094 = !DILocalVariable(name: "list", arg: 1, scope: !14090, file: !137, line: 294, type: !14029)
!14095 = !DILocation(line: 0, scope: !14090)
!14096 = !DILocation(line: 296, column: 9, scope: !14090)
!14097 = !DILocation(line: 296, column: 49, scope: !14090)
!14098 = !DILocation(line: 296, column: 2, scope: !14090)
!14099 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !137, file: !137, line: 443, type: !14100, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2167, retainedNodes: !14102)
!14100 = !DISubroutineType(types: !14101)
!14101 = !{null, !2267, !2267}
!14102 = !{!14103, !14104, !14105}
!14103 = !DILocalVariable(name: "successor", arg: 1, scope: !14099, file: !137, line: 443, type: !2267)
!14104 = !DILocalVariable(name: "node", arg: 2, scope: !14099, file: !137, line: 443, type: !2267)
!14105 = !DILocalVariable(name: "prev", scope: !14099, file: !137, line: 445, type: !14106)
!14106 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2267)
!14107 = !DILocation(line: 0, scope: !14099)
!14108 = !DILocation(line: 445, column: 39, scope: !14099)
!14109 = !DILocation(line: 447, column: 8, scope: !14099)
!14110 = !DILocation(line: 447, column: 13, scope: !14099)
!14111 = !DILocation(line: 448, column: 8, scope: !14099)
!14112 = !DILocation(line: 448, column: 13, scope: !14099)
!14113 = !DILocation(line: 449, column: 8, scope: !14099)
!14114 = !DILocation(line: 449, column: 13, scope: !14099)
!14115 = !DILocation(line: 450, column: 18, scope: !14099)
!14116 = !DILocation(line: 451, column: 1, scope: !14099)
!14117 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !137, file: !137, line: 341, type: !14118, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2167, retainedNodes: !14120)
!14118 = !DISubroutineType(types: !14119)
!14119 = !{!2267, !14029, !2267}
!14120 = !{!14121, !14122}
!14121 = !DILocalVariable(name: "list", arg: 1, scope: !14117, file: !137, line: 341, type: !14029)
!14122 = !DILocalVariable(name: "node", arg: 2, scope: !14117, file: !137, line: 342, type: !2267)
!14123 = !DILocation(line: 0, scope: !14117)
!14124 = !DILocation(line: 344, column: 15, scope: !14117)
!14125 = !DILocation(line: 344, column: 9, scope: !14117)
!14126 = !DILocation(line: 344, column: 26, scope: !14117)
!14127 = !DILocation(line: 344, column: 2, scope: !14117)
!14128 = distinct !DISubprogram(name: "sys_dlist_append", scope: !137, file: !137, line: 404, type: !14129, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2167, retainedNodes: !14131)
!14129 = !DISubroutineType(types: !14130)
!14130 = !{null, !14029, !2267}
!14131 = !{!14132, !14133, !14134}
!14132 = !DILocalVariable(name: "list", arg: 1, scope: !14128, file: !137, line: 404, type: !14029)
!14133 = !DILocalVariable(name: "node", arg: 2, scope: !14128, file: !137, line: 404, type: !2267)
!14134 = !DILocalVariable(name: "tail", scope: !14128, file: !137, line: 406, type: !14106)
!14135 = !DILocation(line: 0, scope: !14128)
!14136 = !DILocation(line: 406, column: 34, scope: !14128)
!14137 = !DILocation(line: 408, column: 8, scope: !14128)
!14138 = !DILocation(line: 408, column: 13, scope: !14128)
!14139 = !DILocation(line: 409, column: 8, scope: !14128)
!14140 = !DILocation(line: 409, column: 13, scope: !14128)
!14141 = !DILocation(line: 411, column: 8, scope: !14128)
!14142 = !DILocation(line: 411, column: 13, scope: !14128)
!14143 = !DILocation(line: 412, column: 13, scope: !14128)
!14144 = !DILocation(line: 413, column: 1, scope: !14128)
!14145 = distinct !DISubprogram(name: "update_cache", scope: !2271, file: !2271, line: 559, type: !12141, scopeLine: 560, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2167, retainedNodes: !14146)
!14146 = !{!14147, !14148}
!14147 = !DILocalVariable(name: "preempt_ok", arg: 1, scope: !14145, file: !2271, line: 559, type: !105)
!14148 = !DILocalVariable(name: "thread", scope: !14145, file: !2271, line: 562, type: !2170)
!14149 = !DILocation(line: 0, scope: !14145)
!14150 = !DILocation(line: 239, column: 9, scope: !14151, inlinedAt: !14154)
!14151 = distinct !DISubprogram(name: "runq_best", scope: !2271, file: !2271, line: 237, type: !14152, scopeLine: 238, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2167, retainedNodes: !391)
!14152 = !DISubroutineType(types: !14153)
!14153 = !{!2170}
!14154 = distinct !DILocation(line: 314, column: 28, scope: !14155, inlinedAt: !14159)
!14155 = distinct !DISubprogram(name: "next_up", scope: !2271, file: !2271, line: 312, type: !14152, scopeLine: 313, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2167, retainedNodes: !14156)
!14156 = !{!14157, !14158}
!14157 = !DILocalVariable(name: "thread", scope: !14155, file: !2271, line: 314, type: !2170)
!14158 = !DILocalVariable(name: "mirqp", scope: !14155, file: !2271, line: 322, type: !2170)
!14159 = distinct !DILocation(line: 562, column: 28, scope: !14145)
!14160 = !DILocation(line: 0, scope: !14155, inlinedAt: !14159)
!14161 = !DILocation(line: 322, column: 41, scope: !14155, inlinedAt: !14159)
!14162 = !DILocation(line: 324, column: 12, scope: !14163, inlinedAt: !14159)
!14163 = distinct !DILexicalBlock(scope: !14155, file: !2271, line: 324, column: 6)
!14164 = !DILocation(line: 324, column: 20, scope: !14163, inlinedAt: !14159)
!14165 = !DILocation(line: 324, column: 31, scope: !14163, inlinedAt: !14159)
!14166 = !DILocation(line: 324, column: 39, scope: !14163, inlinedAt: !14159)
!14167 = !DILocation(line: 324, column: 43, scope: !14163, inlinedAt: !14159)
!14168 = !DILocation(line: 324, column: 6, scope: !14155, inlinedAt: !14159)
!14169 = !DILocation(line: 325, column: 8, scope: !14170, inlinedAt: !14159)
!14170 = distinct !DILexicalBlock(scope: !14171, file: !2271, line: 325, column: 7)
!14171 = distinct !DILexicalBlock(scope: !14163, file: !2271, line: 324, column: 64)
!14172 = !DILocation(line: 325, column: 7, scope: !14171, inlinedAt: !14159)
!14173 = !DILocation(line: 328, column: 36, scope: !14174, inlinedAt: !14159)
!14174 = distinct !DILexicalBlock(scope: !14170, file: !2271, line: 327, column: 10)
!14175 = !DILocation(line: 340, column: 17, scope: !14155, inlinedAt: !14159)
!14176 = !DILocation(line: 340, column: 9, scope: !14155, inlinedAt: !14159)
!14177 = !DILocalVariable(name: "thread", arg: 1, scope: !14178, file: !2271, line: 127, type: !2170)
!14178 = distinct !DISubprogram(name: "should_preempt", scope: !2271, file: !2271, line: 127, type: !14179, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2167, retainedNodes: !14181)
!14179 = !DISubroutineType(types: !14180)
!14180 = !{!911, !2170, !105}
!14181 = !{!14177, !14182}
!14182 = !DILocalVariable(name: "preempt_ok", arg: 2, scope: !14178, file: !2271, line: 128, type: !105)
!14183 = !DILocation(line: 0, scope: !14178, inlinedAt: !14184)
!14184 = distinct !DILocation(line: 564, column: 6, scope: !14185)
!14185 = distinct !DILexicalBlock(scope: !14145, file: !2271, line: 564, column: 6)
!14186 = !DILocation(line: 133, column: 17, scope: !14187, inlinedAt: !14184)
!14187 = distinct !DILexicalBlock(scope: !14178, file: !2271, line: 133, column: 6)
!14188 = !DILocation(line: 0, scope: !14185)
!14189 = !DILocation(line: 133, column: 6, scope: !14178, inlinedAt: !14184)
!14190 = !DILocation(line: 137, column: 2, scope: !14191, inlinedAt: !14184)
!14191 = distinct !DILexicalBlock(scope: !14192, file: !2271, line: 137, column: 2)
!14192 = distinct !DILexicalBlock(scope: !14178, file: !2271, line: 137, column: 2)
!14193 = !DILocation(line: 137, column: 2, scope: !14192, inlinedAt: !14184)
!14194 = !DILocation(line: 137, column: 2, scope: !14195, inlinedAt: !14184)
!14195 = distinct !DILexicalBlock(scope: !14191, file: !2271, line: 137, column: 2)
!14196 = !DILocation(line: 140, column: 6, scope: !14197, inlinedAt: !14184)
!14197 = distinct !DILexicalBlock(scope: !14178, file: !2271, line: 140, column: 6)
!14198 = !DILocation(line: 140, column: 6, scope: !14178, inlinedAt: !14184)
!14199 = !DILocation(line: 150, column: 9, scope: !14200, inlinedAt: !14184)
!14200 = distinct !DILexicalBlock(scope: !14178, file: !2271, line: 149, column: 6)
!14201 = !DILocation(line: 149, column: 6, scope: !14178, inlinedAt: !14184)
!14202 = !DILocation(line: 157, column: 6, scope: !14203, inlinedAt: !14184)
!14203 = distinct !DILexicalBlock(scope: !14178, file: !2271, line: 157, column: 6)
!14204 = !DILocation(line: 157, column: 27, scope: !14203, inlinedAt: !14184)
!14205 = !DILocation(line: 157, column: 30, scope: !14203, inlinedAt: !14184)
!14206 = !DILocation(line: 564, column: 6, scope: !14145)
!14207 = !DILocation(line: 566, column: 14, scope: !14208)
!14208 = distinct !DILexicalBlock(scope: !14209, file: !2271, line: 566, column: 7)
!14209 = distinct !DILexicalBlock(scope: !14185, file: !2271, line: 564, column: 42)
!14210 = !DILocation(line: 566, column: 7, scope: !14209)
!14211 = !DILocation(line: 567, column: 4, scope: !14212)
!14212 = distinct !DILexicalBlock(scope: !14208, file: !2271, line: 566, column: 27)
!14213 = !DILocation(line: 568, column: 3, scope: !14212)
!14214 = !DILocation(line: 570, column: 3, scope: !14209)
!14215 = !DILocation(line: 572, column: 2, scope: !14209)
!14216 = !DILocation(line: 585, column: 1, scope: !14145)
!14217 = distinct !DISubprogram(name: "z_priq_dumb_best", scope: !2271, file: !2271, line: 1144, type: !14218, scopeLine: 1145, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2167, retainedNodes: !14220)
!14218 = !DISubroutineType(types: !14219)
!14219 = !{!2170, !14029}
!14220 = !{!14221, !14222, !14223}
!14221 = !DILocalVariable(name: "pq", arg: 1, scope: !14217, file: !2271, line: 1144, type: !14029)
!14222 = !DILocalVariable(name: "thread", scope: !14217, file: !2271, line: 1146, type: !2170)
!14223 = !DILocalVariable(name: "n", scope: !14217, file: !2271, line: 1147, type: !2267)
!14224 = !DILocation(line: 0, scope: !14217)
!14225 = !DILocation(line: 1147, column: 19, scope: !14217)
!14226 = !DILocation(line: 1152, column: 2, scope: !14217)
!14227 = distinct !DISubprogram(name: "is_metairq", scope: !2271, file: !2271, line: 68, type: !13777, scopeLine: 69, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2167, retainedNodes: !14228)
!14228 = !{!14229}
!14229 = !DILocalVariable(name: "thread", arg: 1, scope: !14227, file: !2271, line: 68, type: !2170)
!14230 = !DILocation(line: 0, scope: !14227)
!14231 = !DILocation(line: 71, column: 23, scope: !14227)
!14232 = !DILocation(line: 72, column: 3, scope: !14227)
!14233 = !DILocation(line: 71, column: 2, scope: !14227)
!14234 = distinct !DISubprogram(name: "z_is_thread_timeout_active", scope: !12184, file: !12184, line: 115, type: !13944, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2167, retainedNodes: !14235)
!14235 = !{!14236}
!14236 = !DILocalVariable(name: "thread", arg: 1, scope: !14234, file: !12184, line: 115, type: !2170)
!14237 = !DILocation(line: 0, scope: !14234)
!14238 = !DILocation(line: 117, column: 46, scope: !14234)
!14239 = !DILocation(line: 117, column: 10, scope: !14234)
!14240 = !DILocation(line: 117, column: 9, scope: !14234)
!14241 = !DILocation(line: 117, column: 2, scope: !14234)
!14242 = distinct !DISubprogram(name: "is_preempt", scope: !2271, file: !2271, line: 62, type: !13777, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2167, retainedNodes: !14243)
!14243 = !{!14244}
!14244 = !DILocalVariable(name: "thread", arg: 1, scope: !14242, file: !2271, line: 62, type: !2170)
!14245 = !DILocation(line: 0, scope: !14242)
!14246 = !DILocation(line: 65, column: 22, scope: !14242)
!14247 = !DILocation(line: 65, column: 30, scope: !14242)
!14248 = !DILocation(line: 65, column: 2, scope: !14242)
!14249 = distinct !DISubprogram(name: "update_metairq_preempt", scope: !2271, file: !2271, line: 545, type: !13759, scopeLine: 546, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2167, retainedNodes: !14250)
!14250 = !{!14251}
!14251 = !DILocalVariable(name: "thread", arg: 1, scope: !14249, file: !2271, line: 545, type: !2170)
!14252 = !DILocation(line: 0, scope: !14249)
!14253 = !DILocation(line: 548, column: 6, scope: !14254)
!14254 = distinct !DILexicalBlock(scope: !14249, file: !2271, line: 548, column: 6)
!14255 = !DILocation(line: 548, column: 25, scope: !14254)
!14256 = !DILocation(line: 548, column: 40, scope: !14254)
!14257 = !DILocation(line: 548, column: 29, scope: !14254)
!14258 = !DILocation(line: 548, column: 50, scope: !14254)
!14259 = !DILocation(line: 549, column: 7, scope: !14254)
!14260 = !DILocation(line: 548, column: 6, scope: !14249)
!14261 = !DILocation(line: 552, column: 37, scope: !14262)
!14262 = distinct !DILexicalBlock(scope: !14254, file: !2271, line: 552, column: 13)
!14263 = !DILocation(line: 552, column: 13, scope: !14254)
!14264 = !DILocation(line: 0, scope: !14254)
!14265 = !DILocation(line: 557, column: 1, scope: !14249)
!14266 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !12591, file: !12591, line: 35, type: !14267, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2167, retainedNodes: !14271)
!14267 = !DISubroutineType(types: !14268)
!14268 = !{!911, !14269}
!14269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14270, size: 32)
!14270 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2221)
!14271 = !{!14272}
!14272 = !DILocalVariable(name: "to", arg: 1, scope: !14266, file: !12591, line: 35, type: !14269)
!14273 = !DILocation(line: 0, scope: !14266)
!14274 = !DILocation(line: 37, column: 35, scope: !14266)
!14275 = !DILocation(line: 37, column: 10, scope: !14266)
!14276 = !DILocation(line: 37, column: 9, scope: !14266)
!14277 = !DILocation(line: 37, column: 2, scope: !14266)
!14278 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !137, file: !137, line: 225, type: !14279, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2167, retainedNodes: !14283)
!14279 = !DISubroutineType(types: !14280)
!14280 = !{!911, !14281}
!14281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14282, size: 32)
!14282 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2180)
!14283 = !{!14284}
!14284 = !DILocalVariable(name: "node", arg: 1, scope: !14278, file: !137, line: 225, type: !14281)
!14285 = !DILocation(line: 0, scope: !14278)
!14286 = !DILocation(line: 227, column: 15, scope: !14278)
!14287 = !DILocation(line: 227, column: 20, scope: !14278)
!14288 = !DILocation(line: 227, column: 2, scope: !14278)
!14289 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !137, file: !137, line: 325, type: !14118, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2167, retainedNodes: !14290)
!14290 = !{!14291, !14292}
!14291 = !DILocalVariable(name: "list", arg: 1, scope: !14289, file: !137, line: 325, type: !14029)
!14292 = !DILocalVariable(name: "node", arg: 2, scope: !14289, file: !137, line: 326, type: !2267)
!14293 = !DILocation(line: 0, scope: !14289)
!14294 = !DILocation(line: 328, column: 24, scope: !14289)
!14295 = !DILocation(line: 328, column: 15, scope: !14289)
!14296 = !DILocation(line: 328, column: 9, scope: !14289)
!14297 = !DILocation(line: 328, column: 45, scope: !14289)
!14298 = !DILocation(line: 328, column: 2, scope: !14289)
!14299 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !137, file: !137, line: 266, type: !14300, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2167, retainedNodes: !14302)
!14300 = !DISubroutineType(types: !14301)
!14301 = !{!911, !14029}
!14302 = !{!14303}
!14303 = !DILocalVariable(name: "list", arg: 1, scope: !14299, file: !137, line: 266, type: !14029)
!14304 = !DILocation(line: 0, scope: !14299)
!14305 = !DILocation(line: 268, column: 15, scope: !14299)
!14306 = !DILocation(line: 268, column: 20, scope: !14299)
!14307 = !DILocation(line: 268, column: 2, scope: !14299)
!14308 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !137, file: !137, line: 496, type: !14309, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2167, retainedNodes: !14311)
!14309 = !DISubroutineType(types: !14310)
!14310 = !{null, !2267}
!14311 = !{!14312, !14313, !14314}
!14312 = !DILocalVariable(name: "node", arg: 1, scope: !14308, file: !137, line: 496, type: !2267)
!14313 = !DILocalVariable(name: "prev", scope: !14308, file: !137, line: 498, type: !14106)
!14314 = !DILocalVariable(name: "next", scope: !14308, file: !137, line: 499, type: !14106)
!14315 = !DILocation(line: 0, scope: !14308)
!14316 = !DILocation(line: 498, column: 34, scope: !14308)
!14317 = !DILocation(line: 499, column: 34, scope: !14308)
!14318 = !DILocation(line: 501, column: 8, scope: !14308)
!14319 = !DILocation(line: 501, column: 13, scope: !14308)
!14320 = !DILocation(line: 502, column: 8, scope: !14308)
!14321 = !DILocation(line: 502, column: 13, scope: !14308)
!14322 = !DILocation(line: 503, column: 2, scope: !14308)
!14323 = !DILocation(line: 504, column: 1, scope: !14308)
!14324 = distinct !DISubprogram(name: "sys_dnode_init", scope: !137, file: !137, line: 211, type: !14309, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2167, retainedNodes: !14325)
!14325 = !{!14326}
!14326 = !DILocalVariable(name: "node", arg: 1, scope: !14324, file: !137, line: 211, type: !2267)
!14327 = !DILocation(line: 0, scope: !14324)
!14328 = !DILocation(line: 213, column: 8, scope: !14324)
!14329 = !DILocation(line: 213, column: 13, scope: !14324)
!14330 = !DILocation(line: 214, column: 8, scope: !14324)
!14331 = !DILocation(line: 214, column: 13, scope: !14324)
!14332 = !DILocation(line: 215, column: 1, scope: !14324)
!14333 = distinct !DISubprogram(name: "z_is_thread_state_set", scope: !12184, file: !12184, line: 131, type: !14334, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2167, retainedNodes: !14336)
!14334 = !DISubroutineType(types: !14335)
!14335 = !{!911, !2170, !113}
!14336 = !{!14337, !14338}
!14337 = !DILocalVariable(name: "thread", arg: 1, scope: !14333, file: !12184, line: 131, type: !2170)
!14338 = !DILocalVariable(name: "state", arg: 2, scope: !14333, file: !12184, line: 131, type: !113)
!14339 = !DILocation(line: 0, scope: !14333)
!14340 = !DILocation(line: 133, column: 23, scope: !14333)
!14341 = !DILocation(line: 133, column: 10, scope: !14333)
!14342 = !DILocation(line: 133, column: 36, scope: !14333)
!14343 = !DILocation(line: 133, column: 45, scope: !14333)
!14344 = !DILocation(line: 133, column: 2, scope: !14333)
!14345 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !12184, file: !12184, line: 211, type: !14346, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2167, retainedNodes: !14348)
!14346 = !DISubroutineType(types: !14347)
!14347 = !{!911, !105, !105}
!14348 = !{!14349, !14350}
!14349 = !DILocalVariable(name: "prio", arg: 1, scope: !14345, file: !12184, line: 211, type: !105)
!14350 = !DILocalVariable(name: "test_prio", arg: 2, scope: !14345, file: !12184, line: 211, type: !105)
!14351 = !DILocation(line: 0, scope: !14345)
!14352 = !DILocation(line: 213, column: 9, scope: !14345)
!14353 = !DILocation(line: 213, column: 2, scope: !14345)
!14354 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !12184, file: !12184, line: 206, type: !14346, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2167, retainedNodes: !14355)
!14355 = !{!14356, !14357}
!14356 = !DILocalVariable(name: "prio1", arg: 1, scope: !14354, file: !12184, line: 206, type: !105)
!14357 = !DILocalVariable(name: "prio2", arg: 2, scope: !14354, file: !12184, line: 206, type: !105)
!14358 = !DILocation(line: 0, scope: !14354)
!14359 = !DILocation(line: 208, column: 15, scope: !14354)
!14360 = !DILocation(line: 208, column: 2, scope: !14354)
!14361 = distinct !DISubprogram(name: "z_ready_thread", scope: !2271, file: !2271, line: 635, type: !13759, scopeLine: 636, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2167, retainedNodes: !14362)
!14362 = !{!14363, !14364, !14366}
!14363 = !DILocalVariable(name: "thread", arg: 1, scope: !14361, file: !2271, line: 635, type: !2170)
!14364 = !DILocalVariable(name: "__i", scope: !14365, file: !2271, line: 637, type: !13793)
!14365 = distinct !DILexicalBlock(scope: !14361, file: !2271, line: 637, column: 2)
!14366 = !DILocalVariable(name: "__key", scope: !14365, file: !2271, line: 637, type: !13793)
!14367 = !DILocation(line: 0, scope: !14361)
!14368 = !DILocation(line: 0, scope: !14365)
!14369 = !DILocation(line: 0, scope: !13801, inlinedAt: !14370)
!14370 = distinct !DILocation(line: 637, column: 2, scope: !14365)
!14371 = !DILocation(line: 55, column: 2, scope: !13810, inlinedAt: !14372)
!14372 = distinct !DILocation(line: 145, column: 10, scope: !13801, inlinedAt: !14370)
!14373 = !DILocation(line: 0, scope: !13810, inlinedAt: !14372)
!14374 = !DILocation(line: 148, column: 2, scope: !13818, inlinedAt: !14370)
!14375 = !DILocation(line: 148, column: 2, scope: !13819, inlinedAt: !14370)
!14376 = !DILocation(line: 148, column: 2, scope: !13822, inlinedAt: !14370)
!14377 = !DILocation(line: 160, column: 2, scope: !13801, inlinedAt: !14370)
!14378 = !DILocation(line: 639, column: 4, scope: !14379)
!14379 = distinct !DILexicalBlock(scope: !14380, file: !2271, line: 638, column: 41)
!14380 = distinct !DILexicalBlock(scope: !14381, file: !2271, line: 638, column: 7)
!14381 = distinct !DILexicalBlock(scope: !14382, file: !2271, line: 637, column: 26)
!14382 = distinct !DILexicalBlock(scope: !14365, file: !2271, line: 637, column: 2)
!14383 = !DILocation(line: 0, scope: !13835, inlinedAt: !14384)
!14384 = distinct !DILocation(line: 637, column: 2, scope: !14382)
!14385 = !DILocation(line: 194, column: 2, scope: !13843, inlinedAt: !14384)
!14386 = !DILocation(line: 194, column: 2, scope: !13844, inlinedAt: !14384)
!14387 = !DILocation(line: 194, column: 2, scope: !13847, inlinedAt: !14384)
!14388 = !DILocation(line: 0, scope: !13849, inlinedAt: !14389)
!14389 = distinct !DILocation(line: 215, column: 2, scope: !13835, inlinedAt: !14384)
!14390 = !DILocation(line: 95, column: 2, scope: !13849, inlinedAt: !14389)
!14391 = !DILocation(line: 642, column: 1, scope: !14361)
!14392 = distinct !DISubprogram(name: "ready_thread", scope: !2271, file: !2271, line: 617, type: !13759, scopeLine: 618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2167, retainedNodes: !14393)
!14393 = !{!14394}
!14394 = !DILocalVariable(name: "thread", arg: 1, scope: !14392, file: !2271, line: 617, type: !2170)
!14395 = !DILocation(line: 0, scope: !14392)
!14396 = !DILocation(line: 626, column: 7, scope: !14397)
!14397 = distinct !DILexicalBlock(scope: !14392, file: !2271, line: 626, column: 6)
!14398 = !DILocation(line: 626, column: 34, scope: !14397)
!14399 = !DILocation(line: 626, column: 37, scope: !14397)
!14400 = !DILocation(line: 626, column: 6, scope: !14392)
!14401 = !DILocation(line: 0, scope: !14012, inlinedAt: !14402)
!14402 = distinct !DILocation(line: 629, column: 3, scope: !14403)
!14403 = distinct !DILexicalBlock(scope: !14397, file: !2271, line: 626, column: 64)
!14404 = !DILocation(line: 252, column: 15, scope: !14012, inlinedAt: !14402)
!14405 = !DILocation(line: 252, column: 28, scope: !14012, inlinedAt: !14402)
!14406 = !DILocation(line: 0, scope: !14019, inlinedAt: !14407)
!14407 = distinct !DILocation(line: 254, column: 3, scope: !14023, inlinedAt: !14402)
!14408 = !DILocation(line: 0, scope: !14026, inlinedAt: !14409)
!14409 = distinct !DILocation(line: 229, column: 2, scope: !14019, inlinedAt: !14407)
!14410 = !DILocation(line: 186, column: 2, scope: !14036, inlinedAt: !14409)
!14411 = !DILocation(line: 186, column: 2, scope: !14037, inlinedAt: !14409)
!14412 = !DILocation(line: 186, column: 2, scope: !14040, inlinedAt: !14409)
!14413 = !DILocation(line: 188, column: 2, scope: !14042, inlinedAt: !14409)
!14414 = !DILocation(line: 188, column: 2, scope: !14044, inlinedAt: !14409)
!14415 = !DILocation(line: 0, scope: !14042, inlinedAt: !14409)
!14416 = !DILocation(line: 189, column: 7, scope: !14047, inlinedAt: !14409)
!14417 = !DILocation(line: 189, column: 35, scope: !14047, inlinedAt: !14409)
!14418 = !DILocation(line: 189, column: 7, scope: !14048, inlinedAt: !14409)
!14419 = !DILocation(line: 191, column: 21, scope: !14052, inlinedAt: !14409)
!14420 = !DILocation(line: 190, column: 4, scope: !14052, inlinedAt: !14409)
!14421 = !DILocation(line: 192, column: 4, scope: !14052, inlinedAt: !14409)
!14422 = distinct !{!14422, !14413, !14423}
!14423 = !DILocation(line: 194, column: 2, scope: !14042, inlinedAt: !14409)
!14424 = !DILocation(line: 196, column: 37, scope: !14026, inlinedAt: !14409)
!14425 = !DILocation(line: 196, column: 2, scope: !14026, inlinedAt: !14409)
!14426 = !DILocation(line: 197, column: 1, scope: !14026, inlinedAt: !14409)
!14427 = !DILocation(line: 630, column: 3, scope: !14403)
!14428 = !DILocation(line: 632, column: 2, scope: !14403)
!14429 = !DILocation(line: 633, column: 1, scope: !14392)
!14430 = distinct !DISubprogram(name: "z_is_thread_ready", scope: !12184, file: !12184, line: 120, type: !13944, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2167, retainedNodes: !14431)
!14431 = !{!14432}
!14432 = !DILocalVariable(name: "thread", arg: 1, scope: !14430, file: !12184, line: 120, type: !2170)
!14433 = !DILocation(line: 0, scope: !14430)
!14434 = !DILocation(line: 122, column: 12, scope: !14430)
!14435 = !DILocation(line: 122, column: 62, scope: !14430)
!14436 = !DILocation(line: 123, column: 4, scope: !14430)
!14437 = !DILocation(line: 122, column: 2, scope: !14430)
!14438 = distinct !DISubprogram(name: "z_move_thread_to_end_of_prio_q", scope: !2271, file: !2271, line: 644, type: !13759, scopeLine: 645, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2167, retainedNodes: !14439)
!14439 = !{!14440, !14441, !14443}
!14440 = !DILocalVariable(name: "thread", arg: 1, scope: !14438, file: !2271, line: 644, type: !2170)
!14441 = !DILocalVariable(name: "__i", scope: !14442, file: !2271, line: 646, type: !13793)
!14442 = distinct !DILexicalBlock(scope: !14438, file: !2271, line: 646, column: 2)
!14443 = !DILocalVariable(name: "__key", scope: !14442, file: !2271, line: 646, type: !13793)
!14444 = !DILocation(line: 0, scope: !14438)
!14445 = !DILocation(line: 0, scope: !14442)
!14446 = !DILocation(line: 0, scope: !13801, inlinedAt: !14447)
!14447 = distinct !DILocation(line: 646, column: 2, scope: !14442)
!14448 = !DILocation(line: 55, column: 2, scope: !13810, inlinedAt: !14449)
!14449 = distinct !DILocation(line: 145, column: 10, scope: !13801, inlinedAt: !14447)
!14450 = !DILocation(line: 0, scope: !13810, inlinedAt: !14449)
!14451 = !DILocation(line: 148, column: 2, scope: !13818, inlinedAt: !14447)
!14452 = !DILocation(line: 148, column: 2, scope: !13819, inlinedAt: !14447)
!14453 = !DILocation(line: 148, column: 2, scope: !13822, inlinedAt: !14447)
!14454 = !DILocation(line: 160, column: 2, scope: !13801, inlinedAt: !14447)
!14455 = !DILocation(line: 647, column: 3, scope: !14456)
!14456 = distinct !DILexicalBlock(scope: !14457, file: !2271, line: 646, column: 26)
!14457 = distinct !DILexicalBlock(scope: !14442, file: !2271, line: 646, column: 2)
!14458 = !DILocation(line: 0, scope: !13835, inlinedAt: !14459)
!14459 = distinct !DILocation(line: 646, column: 2, scope: !14457)
!14460 = !DILocation(line: 194, column: 2, scope: !13843, inlinedAt: !14459)
!14461 = !DILocation(line: 194, column: 2, scope: !13844, inlinedAt: !14459)
!14462 = !DILocation(line: 194, column: 2, scope: !13847, inlinedAt: !14459)
!14463 = !DILocation(line: 0, scope: !13849, inlinedAt: !14464)
!14464 = distinct !DILocation(line: 215, column: 2, scope: !13835, inlinedAt: !14459)
!14465 = !DILocation(line: 95, column: 2, scope: !13849, inlinedAt: !14464)
!14466 = !DILocation(line: 649, column: 1, scope: !14438)
!14467 = distinct !DISubprogram(name: "z_sched_start", scope: !2271, file: !2271, line: 651, type: !13759, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2167, retainedNodes: !14468)
!14468 = !{!14469, !14470}
!14469 = !DILocalVariable(name: "thread", arg: 1, scope: !14467, file: !2271, line: 651, type: !2170)
!14470 = !DILocalVariable(name: "key", scope: !14467, file: !2271, line: 653, type: !13793)
!14471 = !DILocation(line: 0, scope: !14467)
!14472 = !DILocation(line: 0, scope: !13801, inlinedAt: !14473)
!14473 = distinct !DILocation(line: 653, column: 25, scope: !14467)
!14474 = !DILocation(line: 55, column: 2, scope: !13810, inlinedAt: !14475)
!14475 = distinct !DILocation(line: 145, column: 10, scope: !13801, inlinedAt: !14473)
!14476 = !DILocation(line: 0, scope: !13810, inlinedAt: !14475)
!14477 = !DILocation(line: 148, column: 2, scope: !13818, inlinedAt: !14473)
!14478 = !DILocation(line: 148, column: 2, scope: !13819, inlinedAt: !14473)
!14479 = !DILocation(line: 148, column: 2, scope: !13822, inlinedAt: !14473)
!14480 = !DILocation(line: 160, column: 2, scope: !13801, inlinedAt: !14473)
!14481 = !DILocation(line: 655, column: 6, scope: !14482)
!14482 = distinct !DILexicalBlock(scope: !14467, file: !2271, line: 655, column: 6)
!14483 = !DILocation(line: 655, column: 6, scope: !14467)
!14484 = !DILocation(line: 0, scope: !13835, inlinedAt: !14485)
!14485 = distinct !DILocation(line: 656, column: 3, scope: !14486)
!14486 = distinct !DILexicalBlock(scope: !14482, file: !2271, line: 655, column: 36)
!14487 = !DILocation(line: 194, column: 2, scope: !13843, inlinedAt: !14485)
!14488 = !DILocation(line: 194, column: 2, scope: !13844, inlinedAt: !14485)
!14489 = !DILocation(line: 194, column: 2, scope: !13847, inlinedAt: !14485)
!14490 = !DILocation(line: 0, scope: !13849, inlinedAt: !14491)
!14491 = distinct !DILocation(line: 215, column: 2, scope: !13835, inlinedAt: !14485)
!14492 = !DILocation(line: 95, column: 2, scope: !13849, inlinedAt: !14491)
!14493 = !DILocation(line: 657, column: 3, scope: !14486)
!14494 = !DILocation(line: 660, column: 2, scope: !14467)
!14495 = !DILocation(line: 661, column: 2, scope: !14467)
!14496 = !DILocation(line: 662, column: 2, scope: !14467)
!14497 = !DILocation(line: 663, column: 1, scope: !14467)
!14498 = distinct !DISubprogram(name: "z_has_thread_started", scope: !12184, file: !12184, line: 126, type: !13944, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2167, retainedNodes: !14499)
!14499 = !{!14500}
!14500 = !DILocalVariable(name: "thread", arg: 1, scope: !14498, file: !12184, line: 126, type: !2170)
!14501 = !DILocation(line: 0, scope: !14498)
!14502 = !DILocation(line: 128, column: 23, scope: !14498)
!14503 = !DILocation(line: 128, column: 36, scope: !14498)
!14504 = !DILocation(line: 128, column: 56, scope: !14498)
!14505 = !DILocation(line: 128, column: 2, scope: !14498)
!14506 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !12184, file: !12184, line: 155, type: !13759, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2167, retainedNodes: !14507)
!14507 = !{!14508}
!14508 = !DILocalVariable(name: "thread", arg: 1, scope: !14506, file: !12184, line: 155, type: !2170)
!14509 = !DILocation(line: 0, scope: !14506)
!14510 = !DILocation(line: 157, column: 15, scope: !14506)
!14511 = !DILocation(line: 157, column: 28, scope: !14506)
!14512 = !DILocation(line: 158, column: 1, scope: !14506)
!14513 = distinct !DISubprogram(name: "z_reschedule", scope: !2271, file: !2271, line: 967, type: !13836, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2167, retainedNodes: !14514)
!14514 = !{!14515, !14516}
!14515 = !DILocalVariable(name: "lock", arg: 1, scope: !14513, file: !2271, line: 967, type: !13804)
!14516 = !DILocalVariable(name: "key", arg: 2, scope: !14513, file: !2271, line: 967, type: !13793)
!14517 = !DILocation(line: 0, scope: !14513)
!14518 = !DILocation(line: 969, column: 6, scope: !14519)
!14519 = distinct !DILexicalBlock(scope: !14513, file: !2271, line: 969, column: 6)
!14520 = !DILocation(line: 969, column: 23, scope: !14519)
!14521 = !DILocation(line: 969, column: 26, scope: !14519)
!14522 = !DILocation(line: 969, column: 6, scope: !14513)
!14523 = !DILocalVariable(name: "key", arg: 2, scope: !14524, file: !12307, line: 193, type: !13793)
!14524 = distinct !DISubprogram(name: "z_swap", scope: !12307, file: !12307, line: 193, type: !14525, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2167, retainedNodes: !14527)
!14525 = !DISubroutineType(types: !14526)
!14526 = !{!105, !13804, !13793}
!14527 = !{!14528, !14523}
!14528 = !DILocalVariable(name: "lock", arg: 1, scope: !14524, file: !12307, line: 193, type: !13804)
!14529 = !DILocation(line: 0, scope: !14524, inlinedAt: !14530)
!14530 = distinct !DILocation(line: 970, column: 3, scope: !14531)
!14531 = distinct !DILexicalBlock(scope: !14519, file: !2271, line: 969, column: 39)
!14532 = !DILocalVariable(name: "l", arg: 1, scope: !14533, file: !230, line: 221, type: !13804)
!14533 = distinct !DISubprogram(name: "k_spin_release", scope: !230, file: !230, line: 221, type: !14534, scopeLine: 222, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2167, retainedNodes: !14536)
!14534 = !DISubroutineType(types: !14535)
!14535 = !{null, !13804}
!14536 = !{!14532}
!14537 = !DILocation(line: 0, scope: !14533, inlinedAt: !14538)
!14538 = distinct !DILocation(line: 195, column: 2, scope: !14524, inlinedAt: !14530)
!14539 = !DILocation(line: 225, column: 2, scope: !14540, inlinedAt: !14538)
!14540 = distinct !DILexicalBlock(scope: !14541, file: !230, line: 225, column: 2)
!14541 = distinct !DILexicalBlock(scope: !14533, file: !230, line: 225, column: 2)
!14542 = !DILocation(line: 225, column: 2, scope: !14541, inlinedAt: !14538)
!14543 = !DILocation(line: 225, column: 2, scope: !14544, inlinedAt: !14538)
!14544 = distinct !DILexicalBlock(scope: !14540, file: !230, line: 225, column: 2)
!14545 = !DILocation(line: 196, column: 9, scope: !14524, inlinedAt: !14530)
!14546 = !DILocation(line: 971, column: 2, scope: !14531)
!14547 = !DILocation(line: 0, scope: !13835, inlinedAt: !14548)
!14548 = distinct !DILocation(line: 972, column: 3, scope: !14549)
!14549 = distinct !DILexicalBlock(scope: !14519, file: !2271, line: 971, column: 9)
!14550 = !DILocation(line: 194, column: 2, scope: !13843, inlinedAt: !14548)
!14551 = !DILocation(line: 194, column: 2, scope: !13844, inlinedAt: !14548)
!14552 = !DILocation(line: 194, column: 2, scope: !13847, inlinedAt: !14548)
!14553 = !DILocation(line: 0, scope: !13849, inlinedAt: !14554)
!14554 = distinct !DILocation(line: 215, column: 2, scope: !13835, inlinedAt: !14548)
!14555 = !DILocation(line: 95, column: 2, scope: !13849, inlinedAt: !14554)
!14556 = !DILocation(line: 975, column: 1, scope: !14513)
!14557 = distinct !DISubprogram(name: "resched", scope: !2271, file: !2271, line: 940, type: !14558, scopeLine: 941, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2167, retainedNodes: !14560)
!14558 = !DISubroutineType(types: !14559)
!14559 = !{!911, !113}
!14560 = !{!14561}
!14561 = !DILocalVariable(name: "key", arg: 1, scope: !14557, file: !2271, line: 940, type: !113)
!14562 = !DILocation(line: 0, scope: !14557)
!14563 = !DILocalVariable(name: "key", arg: 1, scope: !14564, file: !7644, line: 112, type: !32)
!14564 = distinct !DISubprogram(name: "arch_irq_unlocked", scope: !7644, file: !7644, line: 112, type: !14565, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2167, retainedNodes: !14567)
!14565 = !DISubroutineType(types: !14566)
!14566 = !{!911, !32}
!14567 = !{!14563}
!14568 = !DILocation(line: 0, scope: !14564, inlinedAt: !14569)
!14569 = distinct !DILocation(line: 946, column: 9, scope: !14557)
!14570 = !DILocation(line: 115, column: 13, scope: !14564, inlinedAt: !14569)
!14571 = !DILocation(line: 946, column: 32, scope: !14557)
!14572 = !DILocation(line: 1031, column: 3, scope: !14573, inlinedAt: !14576)
!14573 = distinct !DISubprogram(name: "__get_IPSR", scope: !7525, file: !7525, line: 1027, type: !389, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2167, retainedNodes: !14574)
!14574 = !{!14575}
!14575 = !DILocalVariable(name: "result", scope: !14573, file: !7525, line: 1029, type: !113)
!14576 = distinct !DILocation(line: 48, column: 10, scope: !14577, inlinedAt: !14578)
!14577 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !8517, file: !8517, line: 46, type: !8518, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2167, retainedNodes: !391)
!14578 = distinct !DILocation(line: 946, column: 36, scope: !14557)
!14579 = !{i64 7016029}
!14580 = !DILocation(line: 0, scope: !14573, inlinedAt: !14576)
!14581 = !DILocation(line: 48, column: 9, scope: !14577, inlinedAt: !14578)
!14582 = !DILocation(line: 946, column: 2, scope: !14557)
!14583 = distinct !DISubprogram(name: "need_swap", scope: !2271, file: !2271, line: 953, type: !8518, scopeLine: 954, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2167, retainedNodes: !14584)
!14584 = !{!14585}
!14585 = !DILocalVariable(name: "new_thread", scope: !14583, file: !2271, line: 959, type: !2170)
!14586 = !DILocation(line: 962, column: 31, scope: !14583)
!14587 = !DILocation(line: 0, scope: !14583)
!14588 = !DILocation(line: 963, column: 23, scope: !14583)
!14589 = !DILocation(line: 963, column: 20, scope: !14583)
!14590 = !DILocation(line: 963, column: 2, scope: !14583)
!14591 = distinct !DISubprogram(name: "z_swap_irqlock", scope: !12307, file: !12307, line: 181, type: !7535, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2167, retainedNodes: !14592)
!14592 = !{!14593, !14594}
!14593 = !DILocalVariable(name: "key", arg: 1, scope: !14591, file: !12307, line: 181, type: !32)
!14594 = !DILocalVariable(name: "ret", scope: !14591, file: !12307, line: 183, type: !105)
!14595 = !DILocation(line: 0, scope: !14591)
!14596 = !DILocation(line: 185, column: 8, scope: !14591)
!14597 = !DILocation(line: 186, column: 2, scope: !14591)
!14598 = distinct !DISubprogram(name: "z_impl_k_thread_suspend", scope: !2271, file: !2271, line: 665, type: !13759, scopeLine: 666, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2167, retainedNodes: !14599)
!14599 = !{!14600, !14601, !14603}
!14600 = !DILocalVariable(name: "thread", arg: 1, scope: !14598, file: !2271, line: 665, type: !2170)
!14601 = !DILocalVariable(name: "__i", scope: !14602, file: !2271, line: 671, type: !13793)
!14602 = distinct !DILexicalBlock(scope: !14598, file: !2271, line: 671, column: 2)
!14603 = !DILocalVariable(name: "__key", scope: !14602, file: !2271, line: 671, type: !13793)
!14604 = !DILocation(line: 0, scope: !14598)
!14605 = !DILocation(line: 669, column: 8, scope: !14598)
!14606 = !DILocation(line: 0, scope: !14602)
!14607 = !DILocation(line: 0, scope: !13801, inlinedAt: !14608)
!14608 = distinct !DILocation(line: 671, column: 2, scope: !14602)
!14609 = !DILocation(line: 55, column: 2, scope: !13810, inlinedAt: !14610)
!14610 = distinct !DILocation(line: 145, column: 10, scope: !13801, inlinedAt: !14608)
!14611 = !DILocation(line: 0, scope: !13810, inlinedAt: !14610)
!14612 = !DILocation(line: 148, column: 2, scope: !13818, inlinedAt: !14608)
!14613 = !DILocation(line: 148, column: 2, scope: !13819, inlinedAt: !14608)
!14614 = !DILocation(line: 148, column: 2, scope: !13822, inlinedAt: !14608)
!14615 = !DILocation(line: 160, column: 2, scope: !13801, inlinedAt: !14608)
!14616 = !DILocation(line: 672, column: 7, scope: !14617)
!14617 = distinct !DILexicalBlock(scope: !14618, file: !2271, line: 672, column: 7)
!14618 = distinct !DILexicalBlock(scope: !14619, file: !2271, line: 671, column: 26)
!14619 = distinct !DILexicalBlock(scope: !14602, file: !2271, line: 671, column: 2)
!14620 = !DILocation(line: 672, column: 7, scope: !14618)
!14621 = !DILocation(line: 0, scope: !13995, inlinedAt: !14622)
!14622 = distinct !DILocation(line: 673, column: 4, scope: !14623)
!14623 = distinct !DILexicalBlock(scope: !14617, file: !2271, line: 672, column: 35)
!14624 = !DILocation(line: 266, column: 15, scope: !13995, inlinedAt: !14622)
!14625 = !DILocation(line: 266, column: 28, scope: !13995, inlinedAt: !14622)
!14626 = !DILocation(line: 0, scope: !14003, inlinedAt: !14627)
!14627 = distinct !DILocation(line: 268, column: 3, scope: !14007, inlinedAt: !14622)
!14628 = !DILocation(line: 234, column: 2, scope: !14003, inlinedAt: !14627)
!14629 = !DILocation(line: 674, column: 3, scope: !14623)
!14630 = !DILocation(line: 675, column: 3, scope: !14618)
!14631 = !DILocation(line: 676, column: 26, scope: !14618)
!14632 = !DILocation(line: 676, column: 23, scope: !14618)
!14633 = !DILocation(line: 676, column: 3, scope: !14618)
!14634 = !DILocation(line: 0, scope: !13835, inlinedAt: !14635)
!14635 = distinct !DILocation(line: 671, column: 2, scope: !14619)
!14636 = !DILocation(line: 194, column: 2, scope: !13843, inlinedAt: !14635)
!14637 = !DILocation(line: 194, column: 2, scope: !13844, inlinedAt: !14635)
!14638 = !DILocation(line: 194, column: 2, scope: !13847, inlinedAt: !14635)
!14639 = !DILocation(line: 0, scope: !13849, inlinedAt: !14640)
!14640 = distinct !DILocation(line: 215, column: 2, scope: !13835, inlinedAt: !14635)
!14641 = !DILocation(line: 95, column: 2, scope: !13849, inlinedAt: !14640)
!14642 = !DILocation(line: 679, column: 16, scope: !14643)
!14643 = distinct !DILexicalBlock(scope: !14598, file: !2271, line: 679, column: 6)
!14644 = !DILocation(line: 679, column: 13, scope: !14643)
!14645 = !DILocation(line: 679, column: 6, scope: !14598)
!14646 = !DILocation(line: 680, column: 3, scope: !14647)
!14647 = distinct !DILexicalBlock(scope: !14643, file: !2271, line: 679, column: 26)
!14648 = !DILocation(line: 681, column: 2, scope: !14647)
!14649 = !DILocation(line: 684, column: 1, scope: !14598)
!14650 = distinct !DISubprogram(name: "z_abort_thread_timeout", scope: !12591, file: !12591, line: 52, type: !13777, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2167, retainedNodes: !14651)
!14651 = !{!14652}
!14652 = !DILocalVariable(name: "thread", arg: 1, scope: !14650, file: !12591, line: 52, type: !2170)
!14653 = !DILocation(line: 0, scope: !14650)
!14654 = !DILocation(line: 54, column: 39, scope: !14650)
!14655 = !DILocation(line: 54, column: 9, scope: !14650)
!14656 = !DILocation(line: 54, column: 2, scope: !14650)
!14657 = distinct !DISubprogram(name: "z_mark_thread_as_suspended", scope: !12184, file: !12184, line: 141, type: !13759, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2167, retainedNodes: !14658)
!14658 = !{!14659}
!14659 = !DILocalVariable(name: "thread", arg: 1, scope: !14657, file: !12184, line: 141, type: !2170)
!14660 = !DILocation(line: 0, scope: !14657)
!14661 = !DILocation(line: 143, column: 15, scope: !14657)
!14662 = !DILocation(line: 143, column: 28, scope: !14657)
!14663 = !DILocation(line: 146, column: 1, scope: !14657)
!14664 = distinct !DISubprogram(name: "z_reschedule_unlocked", scope: !12184, file: !12184, line: 73, type: !260, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2167, retainedNodes: !391)
!14665 = !DILocation(line: 55, column: 2, scope: !13810, inlinedAt: !14666)
!14666 = distinct !DILocation(line: 75, column: 30, scope: !14664)
!14667 = !DILocation(line: 0, scope: !13810, inlinedAt: !14666)
!14668 = !DILocation(line: 75, column: 9, scope: !14664)
!14669 = !DILocation(line: 76, column: 1, scope: !14664)
!14670 = distinct !DISubprogram(name: "z_reschedule_irqlock", scope: !2271, file: !2271, line: 977, type: !7620, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2167, retainedNodes: !14671)
!14671 = !{!14672}
!14672 = !DILocalVariable(name: "key", arg: 1, scope: !14670, file: !2271, line: 977, type: !113)
!14673 = !DILocation(line: 0, scope: !14670)
!14674 = !DILocation(line: 979, column: 6, scope: !14675)
!14675 = distinct !DILexicalBlock(scope: !14670, file: !2271, line: 979, column: 6)
!14676 = !DILocation(line: 979, column: 6, scope: !14670)
!14677 = !DILocation(line: 980, column: 3, scope: !14678)
!14678 = distinct !DILexicalBlock(scope: !14675, file: !2271, line: 979, column: 20)
!14679 = !DILocation(line: 981, column: 2, scope: !14678)
!14680 = !DILocation(line: 0, scope: !13849, inlinedAt: !14681)
!14681 = distinct !DILocation(line: 982, column: 3, scope: !14682)
!14682 = distinct !DILexicalBlock(scope: !14675, file: !2271, line: 981, column: 9)
!14683 = !DILocation(line: 95, column: 2, scope: !13849, inlinedAt: !14681)
!14684 = !DILocation(line: 985, column: 1, scope: !14670)
!14685 = distinct !DISubprogram(name: "z_impl_k_thread_resume", scope: !2271, file: !2271, line: 695, type: !13759, scopeLine: 696, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2167, retainedNodes: !14686)
!14686 = !{!14687, !14688}
!14687 = !DILocalVariable(name: "thread", arg: 1, scope: !14685, file: !2271, line: 695, type: !2170)
!14688 = !DILocalVariable(name: "key", scope: !14685, file: !2271, line: 699, type: !13793)
!14689 = !DILocation(line: 0, scope: !14685)
!14690 = !DILocation(line: 0, scope: !13801, inlinedAt: !14691)
!14691 = distinct !DILocation(line: 699, column: 25, scope: !14685)
!14692 = !DILocation(line: 55, column: 2, scope: !13810, inlinedAt: !14693)
!14693 = distinct !DILocation(line: 145, column: 10, scope: !13801, inlinedAt: !14691)
!14694 = !DILocation(line: 0, scope: !13810, inlinedAt: !14693)
!14695 = !DILocation(line: 148, column: 2, scope: !13818, inlinedAt: !14691)
!14696 = !DILocation(line: 148, column: 2, scope: !13819, inlinedAt: !14691)
!14697 = !DILocation(line: 148, column: 2, scope: !13822, inlinedAt: !14691)
!14698 = !DILocation(line: 160, column: 2, scope: !13801, inlinedAt: !14691)
!14699 = !DILocation(line: 702, column: 7, scope: !14700)
!14700 = distinct !DILexicalBlock(scope: !14685, file: !2271, line: 702, column: 6)
!14701 = !DILocation(line: 702, column: 6, scope: !14685)
!14702 = !DILocation(line: 0, scope: !13835, inlinedAt: !14703)
!14703 = distinct !DILocation(line: 703, column: 3, scope: !14704)
!14704 = distinct !DILexicalBlock(scope: !14700, file: !2271, line: 702, column: 38)
!14705 = !DILocation(line: 194, column: 2, scope: !13843, inlinedAt: !14703)
!14706 = !DILocation(line: 194, column: 2, scope: !13844, inlinedAt: !14703)
!14707 = !DILocation(line: 194, column: 2, scope: !13847, inlinedAt: !14703)
!14708 = !DILocation(line: 0, scope: !13849, inlinedAt: !14709)
!14709 = distinct !DILocation(line: 215, column: 2, scope: !13835, inlinedAt: !14703)
!14710 = !DILocation(line: 95, column: 2, scope: !13849, inlinedAt: !14709)
!14711 = !DILocation(line: 704, column: 3, scope: !14704)
!14712 = !DILocation(line: 707, column: 2, scope: !14685)
!14713 = !DILocation(line: 708, column: 2, scope: !14685)
!14714 = !DILocation(line: 710, column: 2, scope: !14685)
!14715 = !DILocation(line: 713, column: 1, scope: !14685)
!14716 = distinct !DISubprogram(name: "z_is_thread_suspended", scope: !12184, file: !12184, line: 96, type: !13944, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2167, retainedNodes: !14717)
!14717 = !{!14718}
!14718 = !DILocalVariable(name: "thread", arg: 1, scope: !14716, file: !12184, line: 96, type: !2170)
!14719 = !DILocation(line: 0, scope: !14716)
!14720 = !DILocation(line: 98, column: 23, scope: !14716)
!14721 = !DILocation(line: 98, column: 36, scope: !14716)
!14722 = !DILocation(line: 98, column: 57, scope: !14716)
!14723 = !DILocation(line: 98, column: 2, scope: !14716)
!14724 = distinct !DISubprogram(name: "z_mark_thread_as_not_suspended", scope: !12184, file: !12184, line: 148, type: !13759, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2167, retainedNodes: !14725)
!14725 = !{!14726}
!14726 = !DILocalVariable(name: "thread", arg: 1, scope: !14724, file: !12184, line: 148, type: !2170)
!14727 = !DILocation(line: 0, scope: !14724)
!14728 = !DILocation(line: 150, column: 15, scope: !14724)
!14729 = !DILocation(line: 150, column: 28, scope: !14724)
!14730 = !DILocation(line: 153, column: 1, scope: !14724)
!14731 = distinct !DISubprogram(name: "z_pend_thread", scope: !2271, file: !2271, line: 770, type: !14732, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2167, retainedNodes: !14738)
!14732 = !DISubroutineType(types: !14733)
!14733 = !{null, !2170, !2201, !14734}
!14734 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !108, line: 67, baseType: !14735)
!14735 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !108, line: 65, size: 64, elements: !14736)
!14736 = !{!14737}
!14737 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !14735, file: !108, line: 66, baseType: !107, size: 64)
!14738 = !{!14739, !14740, !14741, !14742, !14744}
!14739 = !DILocalVariable(name: "thread", arg: 1, scope: !14731, file: !2271, line: 770, type: !2170)
!14740 = !DILocalVariable(name: "wait_q", arg: 2, scope: !14731, file: !2271, line: 770, type: !2201)
!14741 = !DILocalVariable(name: "timeout", arg: 3, scope: !14731, file: !2271, line: 771, type: !14734)
!14742 = !DILocalVariable(name: "__i", scope: !14743, file: !2271, line: 774, type: !13793)
!14743 = distinct !DILexicalBlock(scope: !14731, file: !2271, line: 774, column: 2)
!14744 = !DILocalVariable(name: "__key", scope: !14743, file: !2271, line: 774, type: !13793)
!14745 = !DILocation(line: 0, scope: !14731)
!14746 = !DILocation(line: 773, column: 2, scope: !14747)
!14747 = distinct !DILexicalBlock(scope: !14748, file: !2271, line: 773, column: 2)
!14748 = distinct !DILexicalBlock(scope: !14731, file: !2271, line: 773, column: 2)
!14749 = !DILocation(line: 773, column: 2, scope: !14748)
!14750 = !DILocation(line: 773, column: 2, scope: !14751)
!14751 = distinct !DILexicalBlock(scope: !14747, file: !2271, line: 773, column: 2)
!14752 = !DILocation(line: 0, scope: !14743)
!14753 = !DILocation(line: 0, scope: !13801, inlinedAt: !14754)
!14754 = distinct !DILocation(line: 774, column: 2, scope: !14743)
!14755 = !DILocation(line: 55, column: 2, scope: !13810, inlinedAt: !14756)
!14756 = distinct !DILocation(line: 145, column: 10, scope: !13801, inlinedAt: !14754)
!14757 = !DILocation(line: 0, scope: !13810, inlinedAt: !14756)
!14758 = !DILocation(line: 148, column: 2, scope: !13818, inlinedAt: !14754)
!14759 = !DILocation(line: 148, column: 2, scope: !13819, inlinedAt: !14754)
!14760 = !DILocation(line: 148, column: 2, scope: !13822, inlinedAt: !14754)
!14761 = !DILocation(line: 160, column: 2, scope: !13801, inlinedAt: !14754)
!14762 = !DILocation(line: 775, column: 3, scope: !14763)
!14763 = distinct !DILexicalBlock(scope: !14764, file: !2271, line: 774, column: 26)
!14764 = distinct !DILexicalBlock(scope: !14743, file: !2271, line: 774, column: 2)
!14765 = !DILocation(line: 0, scope: !13835, inlinedAt: !14766)
!14766 = distinct !DILocation(line: 774, column: 2, scope: !14764)
!14767 = !DILocation(line: 194, column: 2, scope: !13843, inlinedAt: !14766)
!14768 = !DILocation(line: 194, column: 2, scope: !13844, inlinedAt: !14766)
!14769 = !DILocation(line: 194, column: 2, scope: !13847, inlinedAt: !14766)
!14770 = !DILocation(line: 0, scope: !13849, inlinedAt: !14771)
!14771 = distinct !DILocation(line: 215, column: 2, scope: !13835, inlinedAt: !14766)
!14772 = !DILocation(line: 95, column: 2, scope: !13849, inlinedAt: !14771)
!14773 = !DILocation(line: 777, column: 1, scope: !14731)
!14774 = distinct !DISubprogram(name: "is_thread_dummy", scope: !2271, file: !2271, line: 79, type: !13944, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2167, retainedNodes: !14775)
!14775 = !{!14776}
!14776 = !DILocalVariable(name: "thread", arg: 1, scope: !14774, file: !2271, line: 79, type: !2170)
!14777 = !DILocation(line: 0, scope: !14774)
!14778 = !DILocation(line: 81, column: 23, scope: !14774)
!14779 = !DILocation(line: 81, column: 36, scope: !14774)
!14780 = !DILocation(line: 81, column: 53, scope: !14774)
!14781 = !DILocation(line: 81, column: 2, scope: !14774)
!14782 = distinct !DISubprogram(name: "pend_locked", scope: !2271, file: !2271, line: 760, type: !14732, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2167, retainedNodes: !14783)
!14783 = !{!14784, !14785, !14786}
!14784 = !DILocalVariable(name: "thread", arg: 1, scope: !14782, file: !2271, line: 760, type: !2170)
!14785 = !DILocalVariable(name: "wait_q", arg: 2, scope: !14782, file: !2271, line: 760, type: !2201)
!14786 = !DILocalVariable(name: "timeout", arg: 3, scope: !14782, file: !2271, line: 761, type: !14734)
!14787 = !DILocation(line: 0, scope: !14782)
!14788 = !DILocation(line: 766, column: 2, scope: !14782)
!14789 = !DILocation(line: 767, column: 2, scope: !14782)
!14790 = !DILocation(line: 768, column: 1, scope: !14782)
!14791 = distinct !DISubprogram(name: "add_to_waitq_locked", scope: !2271, file: !2271, line: 740, type: !14792, scopeLine: 741, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2167, retainedNodes: !14794)
!14792 = !DISubroutineType(types: !14793)
!14793 = !{null, !2170, !2201}
!14794 = !{!14795, !14796}
!14795 = !DILocalVariable(name: "thread", arg: 1, scope: !14791, file: !2271, line: 740, type: !2170)
!14796 = !DILocalVariable(name: "wait_q", arg: 2, scope: !14791, file: !2271, line: 740, type: !2201)
!14797 = !DILocation(line: 0, scope: !14791)
!14798 = !DILocation(line: 742, column: 2, scope: !14791)
!14799 = !DILocation(line: 743, column: 2, scope: !14791)
!14800 = !DILocation(line: 747, column: 13, scope: !14801)
!14801 = distinct !DILexicalBlock(scope: !14791, file: !2271, line: 747, column: 6)
!14802 = !DILocation(line: 747, column: 6, scope: !14791)
!14803 = !DILocation(line: 748, column: 16, scope: !14804)
!14804 = distinct !DILexicalBlock(scope: !14801, file: !2271, line: 747, column: 22)
!14805 = !DILocation(line: 748, column: 26, scope: !14804)
!14806 = !DILocation(line: 749, column: 28, scope: !14804)
!14807 = !DILocation(line: 0, scope: !14026, inlinedAt: !14808)
!14808 = distinct !DILocation(line: 749, column: 3, scope: !14804)
!14809 = !DILocation(line: 186, column: 2, scope: !14036, inlinedAt: !14808)
!14810 = !DILocation(line: 186, column: 2, scope: !14037, inlinedAt: !14808)
!14811 = !DILocation(line: 186, column: 2, scope: !14040, inlinedAt: !14808)
!14812 = !DILocation(line: 188, column: 2, scope: !14042, inlinedAt: !14808)
!14813 = !DILocation(line: 188, column: 2, scope: !14044, inlinedAt: !14808)
!14814 = !DILocation(line: 0, scope: !14042, inlinedAt: !14808)
!14815 = !DILocation(line: 189, column: 7, scope: !14047, inlinedAt: !14808)
!14816 = !DILocation(line: 189, column: 35, scope: !14047, inlinedAt: !14808)
!14817 = !DILocation(line: 189, column: 7, scope: !14048, inlinedAt: !14808)
!14818 = !DILocation(line: 191, column: 21, scope: !14052, inlinedAt: !14808)
!14819 = !DILocation(line: 190, column: 4, scope: !14052, inlinedAt: !14808)
!14820 = !DILocation(line: 192, column: 4, scope: !14052, inlinedAt: !14808)
!14821 = distinct !{!14821, !14812, !14822}
!14822 = !DILocation(line: 194, column: 2, scope: !14042, inlinedAt: !14808)
!14823 = !DILocation(line: 196, column: 37, scope: !14026, inlinedAt: !14808)
!14824 = !DILocation(line: 196, column: 2, scope: !14026, inlinedAt: !14808)
!14825 = !DILocation(line: 197, column: 1, scope: !14026, inlinedAt: !14808)
!14826 = !DILocation(line: 751, column: 1, scope: !14791)
!14827 = distinct !DISubprogram(name: "add_thread_timeout", scope: !2271, file: !2271, line: 753, type: !14828, scopeLine: 754, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2167, retainedNodes: !14830)
!14828 = !DISubroutineType(types: !14829)
!14829 = !{null, !2170, !14734}
!14830 = !{!14831, !14832}
!14831 = !DILocalVariable(name: "thread", arg: 1, scope: !14827, file: !2271, line: 753, type: !2170)
!14832 = !DILocalVariable(name: "timeout", arg: 2, scope: !14827, file: !2271, line: 753, type: !14734)
!14833 = !DILocation(line: 0, scope: !14827)
!14834 = !DILocation(line: 755, column: 7, scope: !14835)
!14835 = distinct !DILexicalBlock(scope: !14827, file: !2271, line: 755, column: 6)
!14836 = !DILocation(line: 755, column: 6, scope: !14827)
!14837 = !DILocation(line: 756, column: 3, scope: !14838)
!14838 = distinct !DILexicalBlock(scope: !14835, file: !2271, line: 755, column: 41)
!14839 = !DILocation(line: 757, column: 2, scope: !14838)
!14840 = !DILocation(line: 758, column: 1, scope: !14827)
!14841 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !12591, file: !12591, line: 47, type: !14828, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2167, retainedNodes: !14842)
!14842 = !{!14843, !14844}
!14843 = !DILocalVariable(name: "thread", arg: 1, scope: !14841, file: !12591, line: 47, type: !2170)
!14844 = !DILocalVariable(name: "ticks", arg: 2, scope: !14841, file: !12591, line: 47, type: !14734)
!14845 = !DILocation(line: 0, scope: !14841)
!14846 = !DILocation(line: 49, column: 30, scope: !14841)
!14847 = !DILocation(line: 49, column: 2, scope: !14841)
!14848 = !DILocation(line: 50, column: 1, scope: !14841)
!14849 = distinct !DISubprogram(name: "z_thread_timeout", scope: !2271, file: !2271, line: 795, type: !2227, scopeLine: 796, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2167, retainedNodes: !14850)
!14850 = !{!14851, !14852, !14853, !14855, !14856}
!14851 = !DILocalVariable(name: "timeout", arg: 1, scope: !14849, file: !2271, line: 795, type: !2229)
!14852 = !DILocalVariable(name: "thread", scope: !14849, file: !2271, line: 797, type: !2170)
!14853 = !DILocalVariable(name: "__i", scope: !14854, file: !2271, line: 800, type: !13793)
!14854 = distinct !DILexicalBlock(scope: !14849, file: !2271, line: 800, column: 2)
!14855 = !DILocalVariable(name: "__key", scope: !14854, file: !2271, line: 800, type: !13793)
!14856 = !DILocalVariable(name: "killed", scope: !14857, file: !2271, line: 801, type: !911)
!14857 = distinct !DILexicalBlock(scope: !14858, file: !2271, line: 800, column: 26)
!14858 = distinct !DILexicalBlock(scope: !14854, file: !2271, line: 800, column: 2)
!14859 = !DILocation(line: 0, scope: !14849)
!14860 = !DILocation(line: 797, column: 28, scope: !14849)
!14861 = !DILocation(line: 0, scope: !14854)
!14862 = !DILocation(line: 0, scope: !13801, inlinedAt: !14863)
!14863 = distinct !DILocation(line: 800, column: 2, scope: !14854)
!14864 = !DILocation(line: 55, column: 2, scope: !13810, inlinedAt: !14865)
!14865 = distinct !DILocation(line: 145, column: 10, scope: !13801, inlinedAt: !14863)
!14866 = !DILocation(line: 0, scope: !13810, inlinedAt: !14865)
!14867 = !DILocation(line: 148, column: 2, scope: !13818, inlinedAt: !14863)
!14868 = !DILocation(line: 148, column: 2, scope: !13819, inlinedAt: !14863)
!14869 = !DILocation(line: 148, column: 2, scope: !13822, inlinedAt: !14863)
!14870 = !DILocation(line: 160, column: 2, scope: !13801, inlinedAt: !14863)
!14871 = !DILocation(line: 801, column: 27, scope: !14857)
!14872 = !DILocation(line: 801, column: 32, scope: !14857)
!14873 = !DILocation(line: 801, column: 61, scope: !14857)
!14874 = !DILocation(line: 0, scope: !14857)
!14875 = !DILocation(line: 804, column: 7, scope: !14857)
!14876 = !DILocation(line: 805, column: 21, scope: !14877)
!14877 = distinct !DILexicalBlock(scope: !14878, file: !2271, line: 805, column: 8)
!14878 = distinct !DILexicalBlock(scope: !14879, file: !2271, line: 804, column: 16)
!14879 = distinct !DILexicalBlock(scope: !14857, file: !2271, line: 804, column: 7)
!14880 = !DILocation(line: 805, column: 31, scope: !14877)
!14881 = !DILocation(line: 805, column: 8, scope: !14878)
!14882 = !DILocation(line: 806, column: 5, scope: !14883)
!14883 = distinct !DILexicalBlock(scope: !14877, file: !2271, line: 805, column: 40)
!14884 = !DILocation(line: 807, column: 4, scope: !14883)
!14885 = !DILocation(line: 808, column: 4, scope: !14878)
!14886 = !DILocation(line: 809, column: 4, scope: !14878)
!14887 = !DILocation(line: 810, column: 4, scope: !14878)
!14888 = !DILocation(line: 811, column: 3, scope: !14878)
!14889 = !DILocation(line: 0, scope: !13835, inlinedAt: !14890)
!14890 = distinct !DILocation(line: 800, column: 2, scope: !14858)
!14891 = !DILocation(line: 194, column: 2, scope: !13843, inlinedAt: !14890)
!14892 = !DILocation(line: 194, column: 2, scope: !13844, inlinedAt: !14890)
!14893 = !DILocation(line: 194, column: 2, scope: !13847, inlinedAt: !14890)
!14894 = !DILocation(line: 0, scope: !13849, inlinedAt: !14895)
!14895 = distinct !DILocation(line: 215, column: 2, scope: !13835, inlinedAt: !14890)
!14896 = !DILocation(line: 95, column: 2, scope: !13849, inlinedAt: !14895)
!14897 = !DILocation(line: 813, column: 1, scope: !14849)
!14898 = distinct !DISubprogram(name: "unpend_thread_no_timeout", scope: !2271, file: !2271, line: 779, type: !13759, scopeLine: 780, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2167, retainedNodes: !14899)
!14899 = !{!14900}
!14900 = !DILocalVariable(name: "thread", arg: 1, scope: !14898, file: !2271, line: 779, type: !2170)
!14901 = !DILocation(line: 0, scope: !14898)
!14902 = !DILocation(line: 781, column: 21, scope: !14898)
!14903 = !DILocation(line: 781, column: 2, scope: !14898)
!14904 = !DILocation(line: 782, column: 2, scope: !14898)
!14905 = !DILocation(line: 783, column: 15, scope: !14898)
!14906 = !DILocation(line: 783, column: 25, scope: !14898)
!14907 = !DILocation(line: 784, column: 1, scope: !14898)
!14908 = distinct !DISubprogram(name: "pended_on_thread", scope: !2271, file: !2271, line: 724, type: !14909, scopeLine: 725, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2167, retainedNodes: !14911)
!14909 = !DISubroutineType(types: !14910)
!14910 = !{!2201, !2170}
!14911 = !{!14912}
!14912 = !DILocalVariable(name: "thread", arg: 1, scope: !14908, file: !2271, line: 724, type: !2170)
!14913 = !DILocation(line: 0, scope: !14908)
!14914 = !DILocation(line: 726, column: 2, scope: !14915)
!14915 = distinct !DILexicalBlock(scope: !14916, file: !2271, line: 726, column: 2)
!14916 = distinct !DILexicalBlock(scope: !14908, file: !2271, line: 726, column: 2)
!14917 = !DILocation(line: 726, column: 2, scope: !14916)
!14918 = !DILocation(line: 726, column: 2, scope: !14919)
!14919 = distinct !DILexicalBlock(scope: !14915, file: !2271, line: 726, column: 2)
!14920 = !DILocation(line: 728, column: 2, scope: !14908)
!14921 = distinct !DISubprogram(name: "z_mark_thread_as_not_pending", scope: !12184, file: !12184, line: 165, type: !13759, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2167, retainedNodes: !14922)
!14922 = !{!14923}
!14923 = !DILocalVariable(name: "thread", arg: 1, scope: !14921, file: !12184, line: 165, type: !2170)
!14924 = !DILocation(line: 0, scope: !14921)
!14925 = !DILocation(line: 167, column: 15, scope: !14921)
!14926 = !DILocation(line: 167, column: 28, scope: !14921)
!14927 = !DILocation(line: 168, column: 1, scope: !14921)
!14928 = distinct !DISubprogram(name: "unready_thread", scope: !2271, file: !2271, line: 731, type: !13759, scopeLine: 732, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2167, retainedNodes: !14929)
!14929 = !{!14930}
!14930 = !DILocalVariable(name: "thread", arg: 1, scope: !14928, file: !2271, line: 731, type: !2170)
!14931 = !DILocation(line: 0, scope: !14928)
!14932 = !DILocation(line: 733, column: 6, scope: !14933)
!14933 = distinct !DILexicalBlock(scope: !14928, file: !2271, line: 733, column: 6)
!14934 = !DILocation(line: 733, column: 6, scope: !14928)
!14935 = !DILocation(line: 0, scope: !13995, inlinedAt: !14936)
!14936 = distinct !DILocation(line: 734, column: 3, scope: !14937)
!14937 = distinct !DILexicalBlock(scope: !14933, file: !2271, line: 733, column: 34)
!14938 = !DILocation(line: 266, column: 15, scope: !13995, inlinedAt: !14936)
!14939 = !DILocation(line: 266, column: 28, scope: !13995, inlinedAt: !14936)
!14940 = !DILocation(line: 0, scope: !14003, inlinedAt: !14941)
!14941 = distinct !DILocation(line: 268, column: 3, scope: !14007, inlinedAt: !14936)
!14942 = !DILocation(line: 234, column: 2, scope: !14003, inlinedAt: !14941)
!14943 = !DILocation(line: 735, column: 2, scope: !14937)
!14944 = !DILocation(line: 736, column: 25, scope: !14928)
!14945 = !DILocation(line: 736, column: 22, scope: !14928)
!14946 = !DILocation(line: 736, column: 2, scope: !14928)
!14947 = !DILocation(line: 737, column: 1, scope: !14928)
!14948 = distinct !DISubprogram(name: "z_mark_thread_as_pending", scope: !12184, file: !12184, line: 160, type: !13759, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2167, retainedNodes: !14949)
!14949 = !{!14950}
!14950 = !DILocalVariable(name: "thread", arg: 1, scope: !14948, file: !12184, line: 160, type: !2170)
!14951 = !DILocation(line: 0, scope: !14948)
!14952 = !DILocation(line: 162, column: 15, scope: !14948)
!14953 = !DILocation(line: 162, column: 28, scope: !14948)
!14954 = !DILocation(line: 163, column: 1, scope: !14948)
!14955 = distinct !DISubprogram(name: "z_unpend_thread_no_timeout", scope: !2271, file: !2271, line: 786, type: !13759, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2167, retainedNodes: !14956)
!14956 = !{!14957, !14958, !14960}
!14957 = !DILocalVariable(name: "thread", arg: 1, scope: !14955, file: !2271, line: 786, type: !2170)
!14958 = !DILocalVariable(name: "__i", scope: !14959, file: !2271, line: 788, type: !13793)
!14959 = distinct !DILexicalBlock(scope: !14955, file: !2271, line: 788, column: 2)
!14960 = !DILocalVariable(name: "__key", scope: !14959, file: !2271, line: 788, type: !13793)
!14961 = !DILocation(line: 0, scope: !14955)
!14962 = !DILocation(line: 0, scope: !14959)
!14963 = !DILocation(line: 0, scope: !13801, inlinedAt: !14964)
!14964 = distinct !DILocation(line: 788, column: 2, scope: !14959)
!14965 = !DILocation(line: 55, column: 2, scope: !13810, inlinedAt: !14966)
!14966 = distinct !DILocation(line: 145, column: 10, scope: !13801, inlinedAt: !14964)
!14967 = !DILocation(line: 0, scope: !13810, inlinedAt: !14966)
!14968 = !DILocation(line: 148, column: 2, scope: !13818, inlinedAt: !14964)
!14969 = !DILocation(line: 148, column: 2, scope: !13819, inlinedAt: !14964)
!14970 = !DILocation(line: 148, column: 2, scope: !13822, inlinedAt: !14964)
!14971 = !DILocation(line: 160, column: 2, scope: !13801, inlinedAt: !14964)
!14972 = !DILocation(line: 789, column: 3, scope: !14973)
!14973 = distinct !DILexicalBlock(scope: !14974, file: !2271, line: 788, column: 26)
!14974 = distinct !DILexicalBlock(scope: !14959, file: !2271, line: 788, column: 2)
!14975 = !DILocation(line: 0, scope: !13835, inlinedAt: !14976)
!14976 = distinct !DILocation(line: 788, column: 2, scope: !14974)
!14977 = !DILocation(line: 194, column: 2, scope: !13843, inlinedAt: !14976)
!14978 = !DILocation(line: 194, column: 2, scope: !13844, inlinedAt: !14976)
!14979 = !DILocation(line: 194, column: 2, scope: !13847, inlinedAt: !14976)
!14980 = !DILocation(line: 0, scope: !13849, inlinedAt: !14981)
!14981 = distinct !DILocation(line: 215, column: 2, scope: !13835, inlinedAt: !14976)
!14982 = !DILocation(line: 95, column: 2, scope: !13849, inlinedAt: !14981)
!14983 = !DILocation(line: 791, column: 1, scope: !14955)
!14984 = distinct !DISubprogram(name: "z_pend_curr_irqlock", scope: !2271, file: !2271, line: 816, type: !14985, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2167, retainedNodes: !14987)
!14985 = !DISubroutineType(types: !14986)
!14986 = !{!105, !113, !2201, !14734}
!14987 = !{!14988, !14989, !14990, !14991, !14992, !14994}
!14988 = !DILocalVariable(name: "key", arg: 1, scope: !14984, file: !2271, line: 816, type: !113)
!14989 = !DILocalVariable(name: "wait_q", arg: 2, scope: !14984, file: !2271, line: 816, type: !2201)
!14990 = !DILocalVariable(name: "timeout", arg: 3, scope: !14984, file: !2271, line: 816, type: !14734)
!14991 = !DILocalVariable(name: "ret", scope: !14984, file: !2271, line: 828, type: !105)
!14992 = !DILocalVariable(name: "__i", scope: !14993, file: !2271, line: 829, type: !13793)
!14993 = distinct !DILexicalBlock(scope: !14984, file: !2271, line: 829, column: 2)
!14994 = !DILocalVariable(name: "__key", scope: !14993, file: !2271, line: 829, type: !13793)
!14995 = !DILocation(line: 0, scope: !14984)
!14996 = !DILocation(line: 823, column: 14, scope: !14984)
!14997 = !DILocation(line: 823, column: 2, scope: !14984)
!14998 = !DILocation(line: 826, column: 20, scope: !14984)
!14999 = !DILocation(line: 826, column: 18, scope: !14984)
!15000 = !DILocation(line: 828, column: 12, scope: !14984)
!15001 = !DILocation(line: 0, scope: !14993)
!15002 = !DILocation(line: 0, scope: !13801, inlinedAt: !15003)
!15003 = distinct !DILocation(line: 829, column: 2, scope: !14993)
!15004 = !DILocation(line: 55, column: 2, scope: !13810, inlinedAt: !15005)
!15005 = distinct !DILocation(line: 145, column: 10, scope: !13801, inlinedAt: !15003)
!15006 = !DILocation(line: 0, scope: !13810, inlinedAt: !15005)
!15007 = !DILocation(line: 148, column: 2, scope: !13818, inlinedAt: !15003)
!15008 = !DILocation(line: 148, column: 2, scope: !13819, inlinedAt: !15003)
!15009 = !DILocation(line: 148, column: 2, scope: !13822, inlinedAt: !15003)
!15010 = !DILocation(line: 160, column: 2, scope: !13801, inlinedAt: !15003)
!15011 = !DILocation(line: 830, column: 7, scope: !15012)
!15012 = distinct !DILexicalBlock(scope: !15013, file: !2271, line: 830, column: 7)
!15013 = distinct !DILexicalBlock(scope: !15014, file: !2271, line: 829, column: 26)
!15014 = distinct !DILexicalBlock(scope: !14993, file: !2271, line: 829, column: 2)
!15015 = !DILocation(line: 830, column: 26, scope: !15012)
!15016 = !DILocation(line: 830, column: 23, scope: !15012)
!15017 = !DILocation(line: 830, column: 7, scope: !15013)
!15018 = !DILocation(line: 831, column: 20, scope: !15019)
!15019 = distinct !DILexicalBlock(scope: !15012, file: !2271, line: 830, column: 36)
!15020 = !DILocation(line: 832, column: 3, scope: !15019)
!15021 = !DILocation(line: 0, scope: !13835, inlinedAt: !15022)
!15022 = distinct !DILocation(line: 829, column: 2, scope: !15014)
!15023 = !DILocation(line: 194, column: 2, scope: !13843, inlinedAt: !15022)
!15024 = !DILocation(line: 194, column: 2, scope: !13844, inlinedAt: !15022)
!15025 = !DILocation(line: 194, column: 2, scope: !13847, inlinedAt: !15022)
!15026 = !DILocation(line: 0, scope: !13849, inlinedAt: !15027)
!15027 = distinct !DILocation(line: 215, column: 2, scope: !13835, inlinedAt: !15022)
!15028 = !DILocation(line: 95, column: 2, scope: !13849, inlinedAt: !15027)
!15029 = !DILocation(line: 834, column: 2, scope: !14984)
!15030 = distinct !DISubprogram(name: "z_pend_curr", scope: !2271, file: !2271, line: 840, type: !15031, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2167, retainedNodes: !15033)
!15031 = !DISubroutineType(types: !15032)
!15032 = !{!105, !13804, !13793, !2201, !14734}
!15033 = !{!15034, !15035, !15036, !15037}
!15034 = !DILocalVariable(name: "lock", arg: 1, scope: !15030, file: !2271, line: 840, type: !13804)
!15035 = !DILocalVariable(name: "key", arg: 2, scope: !15030, file: !2271, line: 840, type: !13793)
!15036 = !DILocalVariable(name: "wait_q", arg: 3, scope: !15030, file: !2271, line: 841, type: !2201)
!15037 = !DILocalVariable(name: "timeout", arg: 4, scope: !15030, file: !2271, line: 841, type: !14734)
!15038 = !DILocation(line: 0, scope: !15030)
!15039 = !DILocation(line: 844, column: 20, scope: !15030)
!15040 = !DILocation(line: 844, column: 18, scope: !15030)
!15041 = !DILocation(line: 846, column: 2, scope: !15042)
!15042 = distinct !DILexicalBlock(scope: !15043, file: !2271, line: 846, column: 2)
!15043 = distinct !DILexicalBlock(scope: !15030, file: !2271, line: 846, column: 2)
!15044 = !DILocation(line: 846, column: 2, scope: !15043)
!15045 = !DILocation(line: 846, column: 2, scope: !15046)
!15046 = distinct !DILexicalBlock(scope: !15042, file: !2271, line: 846, column: 2)
!15047 = !DILocation(line: 0, scope: !13801, inlinedAt: !15048)
!15048 = distinct !DILocation(line: 856, column: 9, scope: !15030)
!15049 = !DILocation(line: 55, column: 2, scope: !13810, inlinedAt: !15050)
!15050 = distinct !DILocation(line: 145, column: 10, scope: !13801, inlinedAt: !15048)
!15051 = !DILocation(line: 0, scope: !13810, inlinedAt: !15050)
!15052 = !DILocation(line: 148, column: 2, scope: !13818, inlinedAt: !15048)
!15053 = !DILocation(line: 148, column: 2, scope: !13819, inlinedAt: !15048)
!15054 = !DILocation(line: 148, column: 2, scope: !13822, inlinedAt: !15048)
!15055 = !DILocation(line: 160, column: 2, scope: !13801, inlinedAt: !15048)
!15056 = !DILocation(line: 857, column: 14, scope: !15030)
!15057 = !DILocation(line: 857, column: 2, scope: !15030)
!15058 = !DILocation(line: 0, scope: !14533, inlinedAt: !15059)
!15059 = distinct !DILocation(line: 858, column: 2, scope: !15030)
!15060 = !DILocation(line: 225, column: 2, scope: !14540, inlinedAt: !15059)
!15061 = !DILocation(line: 225, column: 2, scope: !14541, inlinedAt: !15059)
!15062 = !DILocation(line: 225, column: 2, scope: !14544, inlinedAt: !15059)
!15063 = !DILocation(line: 0, scope: !14524, inlinedAt: !15064)
!15064 = distinct !DILocation(line: 859, column: 9, scope: !15030)
!15065 = !DILocation(line: 0, scope: !14533, inlinedAt: !15066)
!15066 = distinct !DILocation(line: 195, column: 2, scope: !14524, inlinedAt: !15064)
!15067 = !DILocation(line: 225, column: 2, scope: !14540, inlinedAt: !15066)
!15068 = !DILocation(line: 225, column: 2, scope: !14541, inlinedAt: !15066)
!15069 = !DILocation(line: 225, column: 2, scope: !14544, inlinedAt: !15066)
!15070 = !DILocation(line: 196, column: 9, scope: !14524, inlinedAt: !15064)
!15071 = !DILocation(line: 859, column: 2, scope: !15030)
!15072 = distinct !DISubprogram(name: "z_unpend1_no_timeout", scope: !2271, file: !2271, line: 862, type: !15073, scopeLine: 863, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2167, retainedNodes: !15075)
!15073 = !DISubroutineType(types: !15074)
!15074 = !{!2170, !2201}
!15075 = !{!15076, !15077, !15078, !15080}
!15076 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15072, file: !2271, line: 862, type: !2201)
!15077 = !DILocalVariable(name: "thread", scope: !15072, file: !2271, line: 864, type: !2170)
!15078 = !DILocalVariable(name: "__i", scope: !15079, file: !2271, line: 866, type: !13793)
!15079 = distinct !DILexicalBlock(scope: !15072, file: !2271, line: 866, column: 2)
!15080 = !DILocalVariable(name: "__key", scope: !15079, file: !2271, line: 866, type: !13793)
!15081 = !DILocation(line: 0, scope: !15072)
!15082 = !DILocation(line: 0, scope: !15079)
!15083 = !DILocation(line: 0, scope: !13801, inlinedAt: !15084)
!15084 = distinct !DILocation(line: 866, column: 2, scope: !15079)
!15085 = !DILocation(line: 55, column: 2, scope: !13810, inlinedAt: !15086)
!15086 = distinct !DILocation(line: 145, column: 10, scope: !13801, inlinedAt: !15084)
!15087 = !DILocation(line: 0, scope: !13810, inlinedAt: !15086)
!15088 = !DILocation(line: 148, column: 2, scope: !13818, inlinedAt: !15084)
!15089 = !DILocation(line: 148, column: 2, scope: !13819, inlinedAt: !15084)
!15090 = !DILocation(line: 148, column: 2, scope: !13822, inlinedAt: !15084)
!15091 = !DILocation(line: 160, column: 2, scope: !13801, inlinedAt: !15084)
!15092 = !DILocation(line: 867, column: 12, scope: !15093)
!15093 = distinct !DILexicalBlock(scope: !15094, file: !2271, line: 866, column: 26)
!15094 = distinct !DILexicalBlock(scope: !15079, file: !2271, line: 866, column: 2)
!15095 = !DILocation(line: 869, column: 14, scope: !15096)
!15096 = distinct !DILexicalBlock(scope: !15093, file: !2271, line: 869, column: 7)
!15097 = !DILocation(line: 869, column: 7, scope: !15093)
!15098 = !DILocation(line: 870, column: 4, scope: !15099)
!15099 = distinct !DILexicalBlock(scope: !15096, file: !2271, line: 869, column: 23)
!15100 = !DILocation(line: 871, column: 3, scope: !15099)
!15101 = !DILocation(line: 0, scope: !13835, inlinedAt: !15102)
!15102 = distinct !DILocation(line: 866, column: 2, scope: !15094)
!15103 = !DILocation(line: 194, column: 2, scope: !13843, inlinedAt: !15102)
!15104 = !DILocation(line: 194, column: 2, scope: !13844, inlinedAt: !15102)
!15105 = !DILocation(line: 194, column: 2, scope: !13847, inlinedAt: !15102)
!15106 = !DILocation(line: 0, scope: !13849, inlinedAt: !15107)
!15107 = distinct !DILocation(line: 215, column: 2, scope: !13835, inlinedAt: !15102)
!15108 = !DILocation(line: 95, column: 2, scope: !13849, inlinedAt: !15107)
!15109 = !DILocation(line: 874, column: 2, scope: !15072)
!15110 = distinct !DISubprogram(name: "z_unpend_first_thread", scope: !2271, file: !2271, line: 877, type: !15073, scopeLine: 878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2167, retainedNodes: !15111)
!15111 = !{!15112, !15113, !15114, !15116}
!15112 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15110, file: !2271, line: 877, type: !2201)
!15113 = !DILocalVariable(name: "thread", scope: !15110, file: !2271, line: 879, type: !2170)
!15114 = !DILocalVariable(name: "__i", scope: !15115, file: !2271, line: 881, type: !13793)
!15115 = distinct !DILexicalBlock(scope: !15110, file: !2271, line: 881, column: 2)
!15116 = !DILocalVariable(name: "__key", scope: !15115, file: !2271, line: 881, type: !13793)
!15117 = !DILocation(line: 0, scope: !15110)
!15118 = !DILocation(line: 0, scope: !15115)
!15119 = !DILocation(line: 0, scope: !13801, inlinedAt: !15120)
!15120 = distinct !DILocation(line: 881, column: 2, scope: !15115)
!15121 = !DILocation(line: 55, column: 2, scope: !13810, inlinedAt: !15122)
!15122 = distinct !DILocation(line: 145, column: 10, scope: !13801, inlinedAt: !15120)
!15123 = !DILocation(line: 0, scope: !13810, inlinedAt: !15122)
!15124 = !DILocation(line: 148, column: 2, scope: !13818, inlinedAt: !15120)
!15125 = !DILocation(line: 148, column: 2, scope: !13819, inlinedAt: !15120)
!15126 = !DILocation(line: 148, column: 2, scope: !13822, inlinedAt: !15120)
!15127 = !DILocation(line: 160, column: 2, scope: !13801, inlinedAt: !15120)
!15128 = !DILocation(line: 882, column: 12, scope: !15129)
!15129 = distinct !DILexicalBlock(scope: !15130, file: !2271, line: 881, column: 26)
!15130 = distinct !DILexicalBlock(scope: !15115, file: !2271, line: 881, column: 2)
!15131 = !DILocation(line: 884, column: 14, scope: !15132)
!15132 = distinct !DILexicalBlock(scope: !15129, file: !2271, line: 884, column: 7)
!15133 = !DILocation(line: 884, column: 7, scope: !15129)
!15134 = !DILocation(line: 885, column: 4, scope: !15135)
!15135 = distinct !DILexicalBlock(scope: !15132, file: !2271, line: 884, column: 23)
!15136 = !DILocation(line: 886, column: 10, scope: !15135)
!15137 = !DILocation(line: 887, column: 3, scope: !15135)
!15138 = !DILocation(line: 0, scope: !13835, inlinedAt: !15139)
!15139 = distinct !DILocation(line: 881, column: 2, scope: !15130)
!15140 = !DILocation(line: 194, column: 2, scope: !13843, inlinedAt: !15139)
!15141 = !DILocation(line: 194, column: 2, scope: !13844, inlinedAt: !15139)
!15142 = !DILocation(line: 194, column: 2, scope: !13847, inlinedAt: !15139)
!15143 = !DILocation(line: 0, scope: !13849, inlinedAt: !15144)
!15144 = distinct !DILocation(line: 215, column: 2, scope: !13835, inlinedAt: !15139)
!15145 = !DILocation(line: 95, column: 2, scope: !13849, inlinedAt: !15144)
!15146 = !DILocation(line: 890, column: 2, scope: !15110)
!15147 = distinct !DISubprogram(name: "z_unpend_thread", scope: !2271, file: !2271, line: 893, type: !13759, scopeLine: 894, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2167, retainedNodes: !15148)
!15148 = !{!15149}
!15149 = !DILocalVariable(name: "thread", arg: 1, scope: !15147, file: !2271, line: 893, type: !2170)
!15150 = !DILocation(line: 0, scope: !15147)
!15151 = !DILocation(line: 0, scope: !14955, inlinedAt: !15152)
!15152 = distinct !DILocation(line: 895, column: 2, scope: !15147)
!15153 = !DILocation(line: 0, scope: !14959, inlinedAt: !15152)
!15154 = !DILocation(line: 0, scope: !13801, inlinedAt: !15155)
!15155 = distinct !DILocation(line: 788, column: 2, scope: !14959, inlinedAt: !15152)
!15156 = !DILocation(line: 55, column: 2, scope: !13810, inlinedAt: !15157)
!15157 = distinct !DILocation(line: 145, column: 10, scope: !13801, inlinedAt: !15155)
!15158 = !DILocation(line: 0, scope: !13810, inlinedAt: !15157)
!15159 = !DILocation(line: 148, column: 2, scope: !13818, inlinedAt: !15155)
!15160 = !DILocation(line: 148, column: 2, scope: !13819, inlinedAt: !15155)
!15161 = !DILocation(line: 148, column: 2, scope: !13822, inlinedAt: !15155)
!15162 = !DILocation(line: 160, column: 2, scope: !13801, inlinedAt: !15155)
!15163 = !DILocation(line: 789, column: 3, scope: !14973, inlinedAt: !15152)
!15164 = !DILocation(line: 0, scope: !13835, inlinedAt: !15165)
!15165 = distinct !DILocation(line: 788, column: 2, scope: !14974, inlinedAt: !15152)
!15166 = !DILocation(line: 194, column: 2, scope: !13843, inlinedAt: !15165)
!15167 = !DILocation(line: 194, column: 2, scope: !13844, inlinedAt: !15165)
!15168 = !DILocation(line: 194, column: 2, scope: !13847, inlinedAt: !15165)
!15169 = !DILocation(line: 0, scope: !13849, inlinedAt: !15170)
!15170 = distinct !DILocation(line: 215, column: 2, scope: !13835, inlinedAt: !15165)
!15171 = !DILocation(line: 95, column: 2, scope: !13849, inlinedAt: !15170)
!15172 = !DILocation(line: 896, column: 8, scope: !15147)
!15173 = !DILocation(line: 897, column: 1, scope: !15147)
!15174 = distinct !DISubprogram(name: "z_set_prio", scope: !2271, file: !2271, line: 902, type: !14179, scopeLine: 903, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2167, retainedNodes: !15175)
!15175 = !{!15176, !15177, !15178, !15179, !15181}
!15176 = !DILocalVariable(name: "thread", arg: 1, scope: !15174, file: !2271, line: 902, type: !2170)
!15177 = !DILocalVariable(name: "prio", arg: 2, scope: !15174, file: !2271, line: 902, type: !105)
!15178 = !DILocalVariable(name: "need_sched", scope: !15174, file: !2271, line: 904, type: !911)
!15179 = !DILocalVariable(name: "__i", scope: !15180, file: !2271, line: 906, type: !13793)
!15180 = distinct !DILexicalBlock(scope: !15174, file: !2271, line: 906, column: 2)
!15181 = !DILocalVariable(name: "__key", scope: !15180, file: !2271, line: 906, type: !13793)
!15182 = !DILocation(line: 0, scope: !15174)
!15183 = !DILocation(line: 0, scope: !15180)
!15184 = !DILocation(line: 0, scope: !13801, inlinedAt: !15185)
!15185 = distinct !DILocation(line: 906, column: 2, scope: !15180)
!15186 = !DILocation(line: 55, column: 2, scope: !13810, inlinedAt: !15187)
!15187 = distinct !DILocation(line: 145, column: 10, scope: !13801, inlinedAt: !15185)
!15188 = !DILocation(line: 0, scope: !13810, inlinedAt: !15187)
!15189 = !DILocation(line: 148, column: 2, scope: !13818, inlinedAt: !15185)
!15190 = !DILocation(line: 148, column: 2, scope: !13819, inlinedAt: !15185)
!15191 = !DILocation(line: 148, column: 2, scope: !13822, inlinedAt: !15185)
!15192 = !DILocation(line: 160, column: 2, scope: !13801, inlinedAt: !15185)
!15193 = !DILocation(line: 907, column: 16, scope: !15194)
!15194 = distinct !DILexicalBlock(scope: !15195, file: !2271, line: 906, column: 26)
!15195 = distinct !DILexicalBlock(scope: !15180, file: !2271, line: 906, column: 2)
!15196 = !DILocation(line: 909, column: 7, scope: !15194)
!15197 = !DILocation(line: 0, scope: !13995, inlinedAt: !15198)
!15198 = distinct !DILocation(line: 912, column: 5, scope: !15199)
!15199 = distinct !DILexicalBlock(scope: !15200, file: !2271, line: 911, column: 63)
!15200 = distinct !DILexicalBlock(scope: !15201, file: !2271, line: 911, column: 8)
!15201 = distinct !DILexicalBlock(scope: !15202, file: !2271, line: 909, column: 19)
!15202 = distinct !DILexicalBlock(scope: !15194, file: !2271, line: 909, column: 7)
!15203 = !DILocation(line: 266, column: 28, scope: !13995, inlinedAt: !15198)
!15204 = !DILocation(line: 0, scope: !14003, inlinedAt: !15205)
!15205 = distinct !DILocation(line: 268, column: 3, scope: !14007, inlinedAt: !15198)
!15206 = !DILocation(line: 234, column: 2, scope: !14003, inlinedAt: !15205)
!15207 = !DILocation(line: 913, column: 23, scope: !15199)
!15208 = !DILocation(line: 0, scope: !14012, inlinedAt: !15209)
!15209 = distinct !DILocation(line: 914, column: 5, scope: !15199)
!15210 = !DILocation(line: 252, column: 28, scope: !14012, inlinedAt: !15209)
!15211 = !DILocation(line: 0, scope: !14019, inlinedAt: !15212)
!15212 = distinct !DILocation(line: 254, column: 3, scope: !14023, inlinedAt: !15209)
!15213 = !DILocation(line: 0, scope: !14026, inlinedAt: !15214)
!15214 = distinct !DILocation(line: 229, column: 2, scope: !14019, inlinedAt: !15212)
!15215 = !DILocation(line: 186, column: 2, scope: !14036, inlinedAt: !15214)
!15216 = !DILocation(line: 186, column: 2, scope: !14037, inlinedAt: !15214)
!15217 = !DILocation(line: 186, column: 2, scope: !14040, inlinedAt: !15214)
!15218 = !DILocation(line: 188, column: 2, scope: !14042, inlinedAt: !15214)
!15219 = !DILocation(line: 188, column: 2, scope: !14044, inlinedAt: !15214)
!15220 = !DILocation(line: 0, scope: !14042, inlinedAt: !15214)
!15221 = !DILocation(line: 189, column: 7, scope: !14047, inlinedAt: !15214)
!15222 = !DILocation(line: 189, column: 35, scope: !14047, inlinedAt: !15214)
!15223 = !DILocation(line: 189, column: 7, scope: !14048, inlinedAt: !15214)
!15224 = !DILocation(line: 190, column: 4, scope: !14052, inlinedAt: !15214)
!15225 = !DILocation(line: 192, column: 4, scope: !14052, inlinedAt: !15214)
!15226 = distinct !{!15226, !15218, !15227}
!15227 = !DILocation(line: 194, column: 2, scope: !14042, inlinedAt: !15214)
!15228 = !DILocation(line: 196, column: 2, scope: !14026, inlinedAt: !15214)
!15229 = !DILocation(line: 197, column: 1, scope: !14026, inlinedAt: !15214)
!15230 = !DILocation(line: 918, column: 4, scope: !15201)
!15231 = !DILocation(line: 919, column: 3, scope: !15201)
!15232 = !DILocation(line: 920, column: 22, scope: !15233)
!15233 = distinct !DILexicalBlock(scope: !15202, file: !2271, line: 919, column: 10)
!15234 = !DILocation(line: 0, scope: !13835, inlinedAt: !15235)
!15235 = distinct !DILocation(line: 906, column: 2, scope: !15195)
!15236 = !DILocation(line: 194, column: 2, scope: !13843, inlinedAt: !15235)
!15237 = !DILocation(line: 194, column: 2, scope: !13844, inlinedAt: !15235)
!15238 = !DILocation(line: 194, column: 2, scope: !13847, inlinedAt: !15235)
!15239 = !DILocation(line: 0, scope: !13849, inlinedAt: !15240)
!15240 = distinct !DILocation(line: 215, column: 2, scope: !13835, inlinedAt: !15235)
!15241 = !DILocation(line: 95, column: 2, scope: !13849, inlinedAt: !15240)
!15242 = !DILocation(line: 926, column: 2, scope: !15174)
!15243 = distinct !DISubprogram(name: "z_thread_priority_set", scope: !2271, file: !2271, line: 929, type: !15244, scopeLine: 930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2167, retainedNodes: !15246)
!15244 = !DISubroutineType(types: !15245)
!15245 = !{null, !2170, !105}
!15246 = !{!15247, !15248, !15249}
!15247 = !DILocalVariable(name: "thread", arg: 1, scope: !15243, file: !2271, line: 929, type: !2170)
!15248 = !DILocalVariable(name: "prio", arg: 2, scope: !15243, file: !2271, line: 929, type: !105)
!15249 = !DILocalVariable(name: "need_sched", scope: !15243, file: !2271, line: 931, type: !911)
!15250 = !DILocation(line: 0, scope: !15243)
!15251 = !DILocation(line: 931, column: 20, scope: !15243)
!15252 = !DILocation(line: 935, column: 17, scope: !15253)
!15253 = distinct !DILexicalBlock(scope: !15243, file: !2271, line: 935, column: 6)
!15254 = !DILocation(line: 935, column: 20, scope: !15253)
!15255 = !DILocation(line: 935, column: 35, scope: !15253)
!15256 = !DILocation(line: 935, column: 48, scope: !15253)
!15257 = !DILocation(line: 935, column: 6, scope: !15243)
!15258 = !DILocation(line: 936, column: 3, scope: !15259)
!15259 = distinct !DILexicalBlock(scope: !15253, file: !2271, line: 935, column: 55)
!15260 = !DILocation(line: 937, column: 2, scope: !15259)
!15261 = !DILocation(line: 938, column: 1, scope: !15243)
!15262 = distinct !DISubprogram(name: "k_sched_lock", scope: !2271, file: !2271, line: 987, type: !260, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2167, retainedNodes: !15263)
!15263 = !{!15264, !15266}
!15264 = !DILocalVariable(name: "__i", scope: !15265, file: !2271, line: 989, type: !13793)
!15265 = distinct !DILexicalBlock(scope: !15262, file: !2271, line: 989, column: 2)
!15266 = !DILocalVariable(name: "__key", scope: !15265, file: !2271, line: 989, type: !13793)
!15267 = !DILocation(line: 0, scope: !15265)
!15268 = !DILocation(line: 0, scope: !13801, inlinedAt: !15269)
!15269 = distinct !DILocation(line: 989, column: 2, scope: !15265)
!15270 = !DILocation(line: 55, column: 2, scope: !13810, inlinedAt: !15271)
!15271 = distinct !DILocation(line: 145, column: 10, scope: !13801, inlinedAt: !15269)
!15272 = !DILocation(line: 0, scope: !13810, inlinedAt: !15271)
!15273 = !DILocation(line: 148, column: 2, scope: !13818, inlinedAt: !15269)
!15274 = !DILocation(line: 148, column: 2, scope: !13819, inlinedAt: !15269)
!15275 = !DILocation(line: 148, column: 2, scope: !13822, inlinedAt: !15269)
!15276 = !DILocation(line: 160, column: 2, scope: !13801, inlinedAt: !15269)
!15277 = !DILocation(line: 992, column: 3, scope: !15278)
!15278 = distinct !DILexicalBlock(scope: !15279, file: !2271, line: 989, column: 26)
!15279 = distinct !DILexicalBlock(scope: !15265, file: !2271, line: 989, column: 2)
!15280 = !DILocation(line: 0, scope: !13835, inlinedAt: !15281)
!15281 = distinct !DILocation(line: 989, column: 2, scope: !15279)
!15282 = !DILocation(line: 194, column: 2, scope: !13843, inlinedAt: !15281)
!15283 = !DILocation(line: 194, column: 2, scope: !13844, inlinedAt: !15281)
!15284 = !DILocation(line: 194, column: 2, scope: !13847, inlinedAt: !15281)
!15285 = !DILocation(line: 0, scope: !13849, inlinedAt: !15286)
!15286 = distinct !DILocation(line: 215, column: 2, scope: !13835, inlinedAt: !15281)
!15287 = !DILocation(line: 95, column: 2, scope: !13849, inlinedAt: !15286)
!15288 = !DILocation(line: 994, column: 1, scope: !15262)
!15289 = distinct !DISubprogram(name: "z_sched_lock", scope: !12184, file: !12184, line: 251, type: !260, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2167, retainedNodes: !391)
!15290 = !DILocation(line: 1031, column: 3, scope: !14573, inlinedAt: !15291)
!15291 = distinct !DILocation(line: 48, column: 10, scope: !14577, inlinedAt: !15292)
!15292 = distinct !DILocation(line: 253, column: 2, scope: !15293)
!15293 = distinct !DILexicalBlock(scope: !15294, file: !12184, line: 253, column: 2)
!15294 = distinct !DILexicalBlock(scope: !15289, file: !12184, line: 253, column: 2)
!15295 = !DILocation(line: 0, scope: !14573, inlinedAt: !15291)
!15296 = !DILocation(line: 48, column: 9, scope: !14577, inlinedAt: !15292)
!15297 = !DILocation(line: 253, column: 2, scope: !15294)
!15298 = !DILocation(line: 253, column: 2, scope: !15299)
!15299 = distinct !DILexicalBlock(scope: !15293, file: !12184, line: 253, column: 2)
!15300 = !DILocation(line: 254, column: 2, scope: !15301)
!15301 = distinct !DILexicalBlock(scope: !15302, file: !12184, line: 254, column: 2)
!15302 = distinct !DILexicalBlock(scope: !15289, file: !12184, line: 254, column: 2)
!15303 = !DILocation(line: 254, column: 2, scope: !15302)
!15304 = !DILocation(line: 254, column: 2, scope: !15305)
!15305 = distinct !DILexicalBlock(scope: !15301, file: !12184, line: 254, column: 2)
!15306 = !DILocation(line: 256, column: 2, scope: !15289)
!15307 = !DILocation(line: 258, column: 2, scope: !15308)
!15308 = distinct !DILexicalBlock(scope: !15289, file: !12184, line: 258, column: 2)
!15309 = !{i64 2154801752}
!15310 = !DILocation(line: 259, column: 1, scope: !15289)
!15311 = distinct !DISubprogram(name: "k_sched_unlock", scope: !2271, file: !2271, line: 996, type: !260, scopeLine: 997, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2167, retainedNodes: !15312)
!15312 = !{!15313, !15315}
!15313 = !DILocalVariable(name: "__i", scope: !15314, file: !2271, line: 998, type: !13793)
!15314 = distinct !DILexicalBlock(scope: !15311, file: !2271, line: 998, column: 2)
!15315 = !DILocalVariable(name: "__key", scope: !15314, file: !2271, line: 998, type: !13793)
!15316 = !DILocation(line: 0, scope: !15314)
!15317 = !DILocation(line: 0, scope: !13801, inlinedAt: !15318)
!15318 = distinct !DILocation(line: 998, column: 2, scope: !15314)
!15319 = !DILocation(line: 55, column: 2, scope: !13810, inlinedAt: !15320)
!15320 = distinct !DILocation(line: 145, column: 10, scope: !13801, inlinedAt: !15318)
!15321 = !DILocation(line: 0, scope: !13810, inlinedAt: !15320)
!15322 = !DILocation(line: 148, column: 2, scope: !13818, inlinedAt: !15318)
!15323 = !DILocation(line: 148, column: 2, scope: !13819, inlinedAt: !15318)
!15324 = !DILocation(line: 148, column: 2, scope: !13822, inlinedAt: !15318)
!15325 = !DILocation(line: 160, column: 2, scope: !13801, inlinedAt: !15318)
!15326 = !DILocation(line: 999, column: 3, scope: !15327)
!15327 = distinct !DILexicalBlock(scope: !15328, file: !2271, line: 999, column: 3)
!15328 = distinct !DILexicalBlock(scope: !15329, file: !2271, line: 999, column: 3)
!15329 = distinct !DILexicalBlock(scope: !15330, file: !2271, line: 998, column: 26)
!15330 = distinct !DILexicalBlock(scope: !15314, file: !2271, line: 998, column: 2)
!15331 = !DILocation(line: 999, column: 3, scope: !15328)
!15332 = !DILocation(line: 999, column: 3, scope: !15333)
!15333 = distinct !DILexicalBlock(scope: !15327, file: !2271, line: 999, column: 3)
!15334 = !DILocation(line: 1031, column: 3, scope: !14573, inlinedAt: !15335)
!15335 = distinct !DILocation(line: 48, column: 10, scope: !14577, inlinedAt: !15336)
!15336 = distinct !DILocation(line: 1000, column: 3, scope: !15337)
!15337 = distinct !DILexicalBlock(scope: !15338, file: !2271, line: 1000, column: 3)
!15338 = distinct !DILexicalBlock(scope: !15329, file: !2271, line: 1000, column: 3)
!15339 = !DILocation(line: 0, scope: !14573, inlinedAt: !15335)
!15340 = !DILocation(line: 48, column: 9, scope: !14577, inlinedAt: !15336)
!15341 = !DILocation(line: 1000, column: 3, scope: !15338)
!15342 = !DILocation(line: 1000, column: 3, scope: !15343)
!15343 = distinct !DILexicalBlock(scope: !15337, file: !2271, line: 1000, column: 3)
!15344 = !DILocation(line: 1002, column: 5, scope: !15329)
!15345 = !DILocation(line: 1002, column: 20, scope: !15329)
!15346 = !DILocation(line: 1002, column: 3, scope: !15329)
!15347 = !DILocation(line: 1003, column: 3, scope: !15329)
!15348 = !DILocation(line: 0, scope: !13835, inlinedAt: !15349)
!15349 = distinct !DILocation(line: 998, column: 2, scope: !15330)
!15350 = !DILocation(line: 194, column: 2, scope: !13843, inlinedAt: !15349)
!15351 = !DILocation(line: 194, column: 2, scope: !13844, inlinedAt: !15349)
!15352 = !DILocation(line: 194, column: 2, scope: !13847, inlinedAt: !15349)
!15353 = !DILocation(line: 0, scope: !13849, inlinedAt: !15354)
!15354 = distinct !DILocation(line: 215, column: 2, scope: !13835, inlinedAt: !15349)
!15355 = !DILocation(line: 95, column: 2, scope: !13849, inlinedAt: !15354)
!15356 = !DILocation(line: 1011, column: 2, scope: !15311)
!15357 = !DILocation(line: 1012, column: 1, scope: !15311)
!15358 = distinct !DISubprogram(name: "z_swap_next_thread", scope: !2271, file: !2271, line: 1014, type: !14152, scopeLine: 1015, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2167, retainedNodes: !391)
!15359 = !DILocation(line: 1028, column: 25, scope: !15358)
!15360 = !DILocation(line: 1028, column: 2, scope: !15358)
!15361 = distinct !DISubprogram(name: "z_priq_rb_lessthan", scope: !2271, file: !2271, line: 1155, type: !15362, scopeLine: 1156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2167, retainedNodes: !15364)
!15362 = !DISubroutineType(types: !15363)
!15363 = !{!911, !2199, !2199}
!15364 = !{!15365, !15366, !15367, !15368, !15369}
!15365 = !DILocalVariable(name: "a", arg: 1, scope: !15361, file: !2271, line: 1155, type: !2199)
!15366 = !DILocalVariable(name: "b", arg: 2, scope: !15361, file: !2271, line: 1155, type: !2199)
!15367 = !DILocalVariable(name: "thread_a", scope: !15361, file: !2271, line: 1157, type: !2170)
!15368 = !DILocalVariable(name: "thread_b", scope: !15361, file: !2271, line: 1157, type: !2170)
!15369 = !DILocalVariable(name: "cmp", scope: !15361, file: !2271, line: 1158, type: !116)
!15370 = !DILocation(line: 0, scope: !15361)
!15371 = !DILocation(line: 1160, column: 13, scope: !15361)
!15372 = !DILocation(line: 1161, column: 13, scope: !15361)
!15373 = !DILocation(line: 1163, column: 8, scope: !15361)
!15374 = !DILocation(line: 1165, column: 10, scope: !15375)
!15375 = distinct !DILexicalBlock(scope: !15361, file: !2271, line: 1165, column: 6)
!15376 = !DILocation(line: 1165, column: 6, scope: !15361)
!15377 = !DILocation(line: 1167, column: 17, scope: !15378)
!15378 = distinct !DILexicalBlock(scope: !15375, file: !2271, line: 1167, column: 13)
!15379 = !DILocation(line: 1167, column: 13, scope: !15375)
!15380 = !DILocation(line: 1170, column: 25, scope: !15381)
!15381 = distinct !DILexicalBlock(scope: !15378, file: !2271, line: 1169, column: 9)
!15382 = !DILocation(line: 1170, column: 52, scope: !15381)
!15383 = !DILocation(line: 1170, column: 35, scope: !15381)
!15384 = !DILocation(line: 1170, column: 3, scope: !15381)
!15385 = !DILocation(line: 0, scope: !15375)
!15386 = !DILocation(line: 1173, column: 1, scope: !15361)
!15387 = distinct !DISubprogram(name: "z_priq_rb_add", scope: !2271, file: !2271, line: 1175, type: !15388, scopeLine: 1176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2167, retainedNodes: !15403)
!15388 = !DISubroutineType(types: !15389)
!15389 = !{null, !15390, !2170}
!15390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15391, size: 32)
!15391 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_rb", file: !15392, line: 37, size: 128, elements: !15393)
!15392 = !DIFile(filename: "zephyr/include/zephyr/kernel/sched_priq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15393 = !{!15394, !15402}
!15394 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !15391, file: !15392, line: 38, baseType: !15395, size: 96)
!15395 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbtree", file: !153, line: 83, size: 96, elements: !15396)
!15396 = !{!15397, !15398, !15401}
!15397 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !15395, file: !153, line: 84, baseType: !2199, size: 32)
!15398 = !DIDerivedType(tag: DW_TAG_member, name: "lessthan_fn", scope: !15395, file: !153, line: 85, baseType: !15399, size: 32, offset: 32)
!15399 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_lessthan_t", file: !153, line: 81, baseType: !15400)
!15400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15362, size: 32)
!15401 = !DIDerivedType(tag: DW_TAG_member, name: "max_depth", scope: !15395, file: !153, line: 86, baseType: !105, size: 32, offset: 64)
!15402 = !DIDerivedType(tag: DW_TAG_member, name: "next_order_key", scope: !15391, file: !15392, line: 39, baseType: !105, size: 32, offset: 96)
!15403 = !{!15404, !15405, !15406, !15407, !15416}
!15404 = !DILocalVariable(name: "pq", arg: 1, scope: !15387, file: !2271, line: 1175, type: !15390)
!15405 = !DILocalVariable(name: "thread", arg: 2, scope: !15387, file: !2271, line: 1175, type: !2170)
!15406 = !DILocalVariable(name: "t", scope: !15387, file: !2271, line: 1177, type: !2170)
!15407 = !DILocalVariable(name: "__f", scope: !15408, file: !2271, line: 1190, type: !15411)
!15408 = distinct !DILexicalBlock(scope: !15409, file: !2271, line: 1190, column: 3)
!15409 = distinct !DILexicalBlock(scope: !15410, file: !2271, line: 1189, column: 27)
!15410 = distinct !DILexicalBlock(scope: !15387, file: !2271, line: 1189, column: 6)
!15411 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rb_foreach", file: !153, line: 155, size: 96, elements: !15412)
!15412 = !{!15413, !15414, !15415}
!15413 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !15411, file: !153, line: 156, baseType: !2266, size: 32)
!15414 = !DIDerivedType(tag: DW_TAG_member, name: "is_left", scope: !15411, file: !153, line: 157, baseType: !426, size: 32, offset: 32)
!15415 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !15411, file: !153, line: 158, baseType: !116, size: 32, offset: 64)
!15416 = !DILocalVariable(name: "n", scope: !15417, file: !2271, line: 1190, type: !2199)
!15417 = distinct !DILexicalBlock(scope: !15418, file: !2271, line: 1190, column: 3)
!15418 = distinct !DILexicalBlock(scope: !15408, file: !2271, line: 1190, column: 3)
!15419 = !DILocation(line: 0, scope: !15387)
!15420 = !DILocation(line: 1179, column: 2, scope: !15421)
!15421 = distinct !DILexicalBlock(scope: !15422, file: !2271, line: 1179, column: 2)
!15422 = distinct !DILexicalBlock(scope: !15387, file: !2271, line: 1179, column: 2)
!15423 = !DILocation(line: 1179, column: 2, scope: !15422)
!15424 = !DILocation(line: 1179, column: 2, scope: !15425)
!15425 = distinct !DILexicalBlock(scope: !15421, file: !2271, line: 1179, column: 2)
!15426 = !DILocation(line: 1181, column: 31, scope: !15387)
!15427 = !DILocation(line: 1181, column: 45, scope: !15387)
!15428 = !DILocation(line: 1181, column: 15, scope: !15387)
!15429 = !DILocation(line: 1181, column: 25, scope: !15387)
!15430 = !DILocation(line: 1189, column: 11, scope: !15410)
!15431 = !DILocation(line: 1189, column: 7, scope: !15410)
!15432 = !DILocation(line: 1189, column: 6, scope: !15387)
!15433 = !DILocation(line: 1190, column: 3, scope: !15408)
!15434 = !DILocation(line: 1190, column: 3, scope: !15417)
!15435 = !DILocation(line: 0, scope: !15417)
!15436 = !DILocation(line: 1190, column: 3, scope: !15418)
!15437 = !DILocation(line: 1193, column: 2, scope: !15409)
!15438 = !DILocation(line: 1191, column: 42, scope: !15439)
!15439 = distinct !DILexicalBlock(scope: !15418, file: !2271, line: 1190, column: 54)
!15440 = !DILocation(line: 1191, column: 12, scope: !15439)
!15441 = !DILocation(line: 1191, column: 22, scope: !15439)
!15442 = distinct !{!15442, !15433, !15443}
!15443 = !DILocation(line: 1192, column: 3, scope: !15408)
!15444 = !DILocation(line: 1195, column: 17, scope: !15387)
!15445 = !DILocation(line: 1195, column: 37, scope: !15387)
!15446 = !DILocation(line: 1195, column: 2, scope: !15387)
!15447 = !DILocation(line: 1196, column: 1, scope: !15387)
!15448 = !DISubprogram(name: "z_rb_foreach_next", scope: !153, file: !153, line: 176, type: !15449, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !391)
!15449 = !DISubroutineType(types: !15450)
!15450 = !{!2199, !15451, !15452}
!15451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15395, size: 32)
!15452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15411, size: 32)
!15453 = !DISubprogram(name: "rb_insert", scope: !153, file: !153, line: 105, type: !15454, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !391)
!15454 = !DISubroutineType(types: !15455)
!15455 = !{null, !15451, !2199}
!15456 = distinct !DISubprogram(name: "z_priq_rb_remove", scope: !2271, file: !2271, line: 1198, type: !15388, scopeLine: 1199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2167, retainedNodes: !15457)
!15457 = !{!15458, !15459}
!15458 = !DILocalVariable(name: "pq", arg: 1, scope: !15456, file: !2271, line: 1198, type: !15390)
!15459 = !DILocalVariable(name: "thread", arg: 2, scope: !15456, file: !2271, line: 1198, type: !2170)
!15460 = !DILocation(line: 0, scope: !15456)
!15461 = !DILocation(line: 1200, column: 2, scope: !15462)
!15462 = distinct !DILexicalBlock(scope: !15463, file: !2271, line: 1200, column: 2)
!15463 = distinct !DILexicalBlock(scope: !15456, file: !2271, line: 1200, column: 2)
!15464 = !DILocation(line: 1200, column: 2, scope: !15463)
!15465 = !DILocation(line: 1200, column: 2, scope: !15466)
!15466 = distinct !DILexicalBlock(scope: !15462, file: !2271, line: 1200, column: 2)
!15467 = !DILocation(line: 1202, column: 17, scope: !15456)
!15468 = !DILocation(line: 1202, column: 37, scope: !15456)
!15469 = !DILocation(line: 1202, column: 2, scope: !15456)
!15470 = !DILocation(line: 1204, column: 16, scope: !15471)
!15471 = distinct !DILexicalBlock(scope: !15456, file: !2271, line: 1204, column: 6)
!15472 = !DILocation(line: 1204, column: 7, scope: !15471)
!15473 = !DILocation(line: 1204, column: 6, scope: !15456)
!15474 = !DILocation(line: 1205, column: 7, scope: !15475)
!15475 = distinct !DILexicalBlock(scope: !15471, file: !2271, line: 1204, column: 22)
!15476 = !DILocation(line: 1205, column: 22, scope: !15475)
!15477 = !DILocation(line: 1206, column: 2, scope: !15475)
!15478 = !DILocation(line: 1207, column: 1, scope: !15456)
!15479 = !DISubprogram(name: "rb_remove", scope: !153, file: !153, line: 110, type: !15454, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !391)
!15480 = distinct !DISubprogram(name: "z_priq_rb_best", scope: !2271, file: !2271, line: 1209, type: !15481, scopeLine: 1210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2167, retainedNodes: !15483)
!15481 = !DISubroutineType(types: !15482)
!15482 = !{!2170, !15390}
!15483 = !{!15484, !15485, !15486}
!15484 = !DILocalVariable(name: "pq", arg: 1, scope: !15480, file: !2271, line: 1209, type: !15390)
!15485 = !DILocalVariable(name: "thread", scope: !15480, file: !2271, line: 1211, type: !2170)
!15486 = !DILocalVariable(name: "n", scope: !15480, file: !2271, line: 1212, type: !2199)
!15487 = !DILocation(line: 0, scope: !15480)
!15488 = !DILocation(line: 1212, column: 37, scope: !15480)
!15489 = !DILocation(line: 1212, column: 21, scope: !15480)
!15490 = !DILocation(line: 1217, column: 2, scope: !15480)
!15491 = distinct !DISubprogram(name: "rb_get_min", scope: !153, file: !153, line: 115, type: !15492, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2167, retainedNodes: !15494)
!15492 = !DISubroutineType(types: !15493)
!15493 = !{!2199, !15451}
!15494 = !{!15495}
!15495 = !DILocalVariable(name: "tree", arg: 1, scope: !15491, file: !153, line: 115, type: !15451)
!15496 = !DILocation(line: 0, scope: !15491)
!15497 = !DILocation(line: 117, column: 9, scope: !15491)
!15498 = !DILocation(line: 117, column: 2, scope: !15491)
!15499 = !DISubprogram(name: "z_rb_get_minmax", scope: !153, file: !153, line: 100, type: !15500, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !391)
!15500 = !DISubroutineType(types: !15501)
!15501 = !{!2199, !15451, !169}
!15502 = distinct !DISubprogram(name: "z_priq_mq_best", scope: !2271, file: !2271, line: 1246, type: !15503, scopeLine: 1247, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2167, retainedNodes: !15511)
!15503 = !DISubroutineType(types: !15504)
!15504 = !{!2170, !15505}
!15505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15506, size: 32)
!15506 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_mq", file: !15392, line: 53, size: 2080, elements: !15507)
!15507 = !{!15508, !15510}
!15508 = !DIDerivedType(tag: DW_TAG_member, name: "queues", scope: !15506, file: !15392, line: 54, baseType: !15509, size: 2048)
!15509 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2206, size: 2048, elements: !812)
!15510 = !DIDerivedType(tag: DW_TAG_member, name: "bitmask", scope: !15506, file: !15392, line: 55, baseType: !32, size: 32, offset: 2048)
!15511 = !{!15512, !15513, !15514, !15515}
!15512 = !DILocalVariable(name: "pq", arg: 1, scope: !15502, file: !2271, line: 1246, type: !15505)
!15513 = !DILocalVariable(name: "thread", scope: !15502, file: !2271, line: 1252, type: !2170)
!15514 = !DILocalVariable(name: "l", scope: !15502, file: !2271, line: 1253, type: !14029)
!15515 = !DILocalVariable(name: "n", scope: !15502, file: !2271, line: 1254, type: !2267)
!15516 = !DILocation(line: 0, scope: !15502)
!15517 = !DILocation(line: 1248, column: 11, scope: !15518)
!15518 = distinct !DILexicalBlock(scope: !15502, file: !2271, line: 1248, column: 6)
!15519 = !DILocation(line: 1248, column: 7, scope: !15518)
!15520 = !DILocation(line: 1248, column: 6, scope: !15502)
!15521 = !DILocation(line: 1253, column: 31, scope: !15502)
!15522 = !DILocation(line: 1253, column: 20, scope: !15502)
!15523 = !DILocation(line: 1254, column: 19, scope: !15502)
!15524 = !DILocation(line: 1260, column: 1, scope: !15502)
!15525 = distinct !DISubprogram(name: "z_unpend_all", scope: !2271, file: !2271, line: 1262, type: !15526, scopeLine: 1263, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2167, retainedNodes: !15528)
!15526 = !DISubroutineType(types: !15527)
!15527 = !{!105, !2201}
!15528 = !{!15529, !15530, !15531}
!15529 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15525, file: !2271, line: 1262, type: !2201)
!15530 = !DILocalVariable(name: "need_sched", scope: !15525, file: !2271, line: 1264, type: !105)
!15531 = !DILocalVariable(name: "thread", scope: !15525, file: !2271, line: 1265, type: !2170)
!15532 = !DILocation(line: 0, scope: !15525)
!15533 = !DILocation(line: 1267, column: 19, scope: !15525)
!15534 = !DILocation(line: 1267, column: 41, scope: !15525)
!15535 = !DILocation(line: 1267, column: 2, scope: !15525)
!15536 = !DILocation(line: 1268, column: 3, scope: !15537)
!15537 = distinct !DILexicalBlock(scope: !15525, file: !2271, line: 1267, column: 50)
!15538 = !DILocation(line: 1269, column: 3, scope: !15537)
!15539 = distinct !{!15539, !15535, !15540}
!15540 = !DILocation(line: 1271, column: 2, scope: !15525)
!15541 = !DILocation(line: 1273, column: 2, scope: !15525)
!15542 = distinct !DISubprogram(name: "z_waitq_head", scope: !12539, file: !12539, line: 52, type: !15073, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2167, retainedNodes: !15543)
!15543 = !{!15544}
!15544 = !DILocalVariable(name: "w", arg: 1, scope: !15542, file: !12539, line: 52, type: !2201)
!15545 = !DILocation(line: 0, scope: !15542)
!15546 = !DILocation(line: 54, column: 52, scope: !15542)
!15547 = !DILocation(line: 54, column: 28, scope: !15542)
!15548 = !DILocation(line: 54, column: 9, scope: !15542)
!15549 = !DILocation(line: 54, column: 2, scope: !15542)
!15550 = distinct !DISubprogram(name: "init_ready_q", scope: !2271, file: !2271, line: 1276, type: !15551, scopeLine: 1277, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2167, retainedNodes: !15558)
!15551 = !DISubroutineType(types: !15552)
!15552 = !{null, !15553}
!15553 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15554, size: 32)
!15554 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !163, line: 83, size: 96, elements: !15555)
!15555 = !{!15556, !15557}
!15556 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !15554, file: !163, line: 86, baseType: !2170, size: 32)
!15557 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !15554, file: !163, line: 90, baseType: !2206, size: 64, offset: 32)
!15558 = !{!15559}
!15559 = !DILocalVariable(name: "rq", arg: 1, scope: !15550, file: !2271, line: 1276, type: !15553)
!15560 = !DILocation(line: 0, scope: !15550)
!15561 = !DILocation(line: 1289, column: 22, scope: !15550)
!15562 = !DILocation(line: 1289, column: 2, scope: !15550)
!15563 = !DILocation(line: 1291, column: 1, scope: !15550)
!15564 = distinct !DISubprogram(name: "sys_dlist_init", scope: !137, file: !137, line: 197, type: !15565, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2167, retainedNodes: !15567)
!15565 = !DISubroutineType(types: !15566)
!15566 = !{null, !14029}
!15567 = !{!15568}
!15568 = !DILocalVariable(name: "list", arg: 1, scope: !15564, file: !137, line: 197, type: !14029)
!15569 = !DILocation(line: 0, scope: !15564)
!15570 = !DILocation(line: 199, column: 8, scope: !15564)
!15571 = !DILocation(line: 199, column: 13, scope: !15564)
!15572 = !DILocation(line: 200, column: 8, scope: !15564)
!15573 = !DILocation(line: 200, column: 13, scope: !15564)
!15574 = !DILocation(line: 201, column: 1, scope: !15564)
!15575 = distinct !DISubprogram(name: "z_sched_init", scope: !2271, file: !2271, line: 1293, type: !260, scopeLine: 1294, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2167, retainedNodes: !391)
!15576 = !DILocation(line: 1302, column: 2, scope: !15575)
!15577 = !DILocation(line: 1306, column: 2, scope: !15575)
!15578 = !DILocation(line: 1309, column: 1, scope: !15575)
!15579 = distinct !DISubprogram(name: "z_impl_k_thread_priority_get", scope: !2271, file: !2271, line: 1311, type: !15580, scopeLine: 1312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2167, retainedNodes: !15583)
!15580 = !DISubroutineType(types: !15581)
!15581 = !{!105, !15582}
!15582 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !127, line: 347, baseType: !2170)
!15583 = !{!15584}
!15584 = !DILocalVariable(name: "thread", arg: 1, scope: !15579, file: !2271, line: 1311, type: !15582)
!15585 = !DILocation(line: 0, scope: !15579)
!15586 = !DILocation(line: 1313, column: 22, scope: !15579)
!15587 = !DILocation(line: 1313, column: 9, scope: !15579)
!15588 = !DILocation(line: 1313, column: 2, scope: !15579)
!15589 = distinct !DISubprogram(name: "z_impl_k_thread_priority_set", scope: !2271, file: !2271, line: 1325, type: !15590, scopeLine: 1326, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2167, retainedNodes: !15592)
!15590 = !DISubroutineType(types: !15591)
!15591 = !{null, !15582, !105}
!15592 = !{!15593, !15594, !15595}
!15593 = !DILocalVariable(name: "thread", arg: 1, scope: !15589, file: !2271, line: 1325, type: !15582)
!15594 = !DILocalVariable(name: "prio", arg: 2, scope: !15589, file: !2271, line: 1325, type: !105)
!15595 = !DILocalVariable(name: "th", scope: !15589, file: !2271, line: 1334, type: !2170)
!15596 = !DILocation(line: 0, scope: !15589)
!15597 = !DILocation(line: 1331, column: 2, scope: !15598)
!15598 = distinct !DILexicalBlock(scope: !15599, file: !2271, line: 1331, column: 2)
!15599 = distinct !DILexicalBlock(scope: !15600, file: !2271, line: 1331, column: 2)
!15600 = distinct !DILexicalBlock(scope: !15589, file: !2271, line: 1331, column: 2)
!15601 = !DILocation(line: 1331, column: 2, scope: !15602)
!15602 = distinct !DILexicalBlock(scope: !15598, file: !2271, line: 1331, column: 2)
!15603 = !DILocation(line: 1031, column: 3, scope: !14573, inlinedAt: !15604)
!15604 = distinct !DILocation(line: 48, column: 10, scope: !14577, inlinedAt: !15605)
!15605 = distinct !DILocation(line: 1332, column: 2, scope: !15606)
!15606 = distinct !DILexicalBlock(scope: !15607, file: !2271, line: 1332, column: 2)
!15607 = distinct !DILexicalBlock(scope: !15589, file: !2271, line: 1332, column: 2)
!15608 = !DILocation(line: 0, scope: !14573, inlinedAt: !15604)
!15609 = !DILocation(line: 48, column: 9, scope: !14577, inlinedAt: !15605)
!15610 = !DILocation(line: 1332, column: 2, scope: !15607)
!15611 = !DILocation(line: 1332, column: 2, scope: !15612)
!15612 = distinct !DILexicalBlock(scope: !15606, file: !2271, line: 1332, column: 2)
!15613 = !DILocation(line: 1336, column: 2, scope: !15589)
!15614 = !DILocation(line: 1337, column: 1, scope: !15589)
!15615 = distinct !DISubprogram(name: "k_can_yield", scope: !2271, file: !2271, line: 1384, type: !8518, scopeLine: 1385, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2167, retainedNodes: !391)
!15616 = !DILocation(line: 1386, column: 11, scope: !15615)
!15617 = !DILocation(line: 1386, column: 29, scope: !15615)
!15618 = !DILocation(line: 1386, column: 32, scope: !15615)
!15619 = !DILocation(line: 1386, column: 46, scope: !15615)
!15620 = !DILocation(line: 1387, column: 28, scope: !15615)
!15621 = !DILocation(line: 1387, column: 4, scope: !15615)
!15622 = !DILocation(line: 1386, column: 2, scope: !15615)
!15623 = distinct !DISubprogram(name: "k_is_pre_kernel", scope: !122, file: !122, line: 989, type: !8518, scopeLine: 990, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2167, retainedNodes: !391)
!15624 = !DILocation(line: 993, column: 10, scope: !15623)
!15625 = !DILocation(line: 993, column: 2, scope: !15623)
!15626 = distinct !DISubprogram(name: "z_impl_k_yield", scope: !2271, file: !2271, line: 1390, type: !260, scopeLine: 1391, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2167, retainedNodes: !15627)
!15627 = !{!15628}
!15628 = !DILocalVariable(name: "key", scope: !15626, file: !2271, line: 1396, type: !13793)
!15629 = !DILocation(line: 1031, column: 3, scope: !14573, inlinedAt: !15630)
!15630 = distinct !DILocation(line: 48, column: 10, scope: !14577, inlinedAt: !15631)
!15631 = distinct !DILocation(line: 1392, column: 2, scope: !15632)
!15632 = distinct !DILexicalBlock(scope: !15633, file: !2271, line: 1392, column: 2)
!15633 = distinct !DILexicalBlock(scope: !15626, file: !2271, line: 1392, column: 2)
!15634 = !DILocation(line: 0, scope: !14573, inlinedAt: !15630)
!15635 = !DILocation(line: 48, column: 9, scope: !14577, inlinedAt: !15631)
!15636 = !DILocation(line: 1392, column: 2, scope: !15633)
!15637 = !DILocation(line: 1392, column: 2, scope: !15638)
!15638 = distinct !DILexicalBlock(scope: !15632, file: !2271, line: 1392, column: 2)
!15639 = !DILocation(line: 0, scope: !13801, inlinedAt: !15640)
!15640 = distinct !DILocation(line: 1396, column: 25, scope: !15626)
!15641 = !DILocation(line: 55, column: 2, scope: !13810, inlinedAt: !15642)
!15642 = distinct !DILocation(line: 145, column: 10, scope: !13801, inlinedAt: !15640)
!15643 = !DILocation(line: 0, scope: !13810, inlinedAt: !15642)
!15644 = !DILocation(line: 148, column: 2, scope: !13818, inlinedAt: !15640)
!15645 = !DILocation(line: 148, column: 2, scope: !13819, inlinedAt: !15640)
!15646 = !DILocation(line: 148, column: 2, scope: !13822, inlinedAt: !15640)
!15647 = !DILocation(line: 160, column: 2, scope: !13801, inlinedAt: !15640)
!15648 = !DILocation(line: 0, scope: !15626)
!15649 = !DILocation(line: 1400, column: 18, scope: !15650)
!15650 = distinct !DILexicalBlock(scope: !15651, file: !2271, line: 1399, column: 36)
!15651 = distinct !DILexicalBlock(scope: !15626, file: !2271, line: 1398, column: 6)
!15652 = !DILocation(line: 0, scope: !13995, inlinedAt: !15653)
!15653 = distinct !DILocation(line: 1400, column: 3, scope: !15650)
!15654 = !DILocation(line: 266, column: 15, scope: !13995, inlinedAt: !15653)
!15655 = !DILocation(line: 266, column: 28, scope: !13995, inlinedAt: !15653)
!15656 = !DILocation(line: 0, scope: !14003, inlinedAt: !15657)
!15657 = distinct !DILocation(line: 268, column: 3, scope: !14007, inlinedAt: !15653)
!15658 = !DILocation(line: 234, column: 2, scope: !14003, inlinedAt: !15657)
!15659 = !DILocation(line: 1402, column: 15, scope: !15626)
!15660 = !DILocation(line: 0, scope: !14012, inlinedAt: !15661)
!15661 = distinct !DILocation(line: 1402, column: 2, scope: !15626)
!15662 = !DILocation(line: 252, column: 15, scope: !14012, inlinedAt: !15661)
!15663 = !DILocation(line: 252, column: 28, scope: !14012, inlinedAt: !15661)
!15664 = !DILocation(line: 0, scope: !14019, inlinedAt: !15665)
!15665 = distinct !DILocation(line: 254, column: 3, scope: !14023, inlinedAt: !15661)
!15666 = !DILocation(line: 0, scope: !14026, inlinedAt: !15667)
!15667 = distinct !DILocation(line: 229, column: 2, scope: !14019, inlinedAt: !15665)
!15668 = !DILocation(line: 186, column: 2, scope: !14036, inlinedAt: !15667)
!15669 = !DILocation(line: 186, column: 2, scope: !14037, inlinedAt: !15667)
!15670 = !DILocation(line: 186, column: 2, scope: !14040, inlinedAt: !15667)
!15671 = !DILocation(line: 188, column: 2, scope: !14042, inlinedAt: !15667)
!15672 = !DILocation(line: 188, column: 2, scope: !14044, inlinedAt: !15667)
!15673 = !DILocation(line: 0, scope: !14042, inlinedAt: !15667)
!15674 = !DILocation(line: 189, column: 7, scope: !14047, inlinedAt: !15667)
!15675 = !DILocation(line: 189, column: 35, scope: !14047, inlinedAt: !15667)
!15676 = !DILocation(line: 189, column: 7, scope: !14048, inlinedAt: !15667)
!15677 = !DILocation(line: 191, column: 21, scope: !14052, inlinedAt: !15667)
!15678 = !DILocation(line: 190, column: 4, scope: !14052, inlinedAt: !15667)
!15679 = !DILocation(line: 192, column: 4, scope: !14052, inlinedAt: !15667)
!15680 = distinct !{!15680, !15671, !15681}
!15681 = !DILocation(line: 194, column: 2, scope: !14042, inlinedAt: !15667)
!15682 = !DILocation(line: 196, column: 37, scope: !14026, inlinedAt: !15667)
!15683 = !DILocation(line: 196, column: 2, scope: !14026, inlinedAt: !15667)
!15684 = !DILocation(line: 197, column: 1, scope: !14026, inlinedAt: !15667)
!15685 = !DILocation(line: 1403, column: 2, scope: !15626)
!15686 = !DILocation(line: 0, scope: !14524, inlinedAt: !15687)
!15687 = distinct !DILocation(line: 1404, column: 2, scope: !15626)
!15688 = !DILocation(line: 0, scope: !14533, inlinedAt: !15689)
!15689 = distinct !DILocation(line: 195, column: 2, scope: !14524, inlinedAt: !15687)
!15690 = !DILocation(line: 225, column: 2, scope: !14540, inlinedAt: !15689)
!15691 = !DILocation(line: 225, column: 2, scope: !14541, inlinedAt: !15689)
!15692 = !DILocation(line: 225, column: 2, scope: !14544, inlinedAt: !15689)
!15693 = !DILocation(line: 196, column: 9, scope: !14524, inlinedAt: !15687)
!15694 = !DILocation(line: 1405, column: 1, scope: !15626)
!15695 = distinct !DISubprogram(name: "z_impl_k_sleep", scope: !2271, file: !2271, line: 1459, type: !15696, scopeLine: 1460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2167, retainedNodes: !15698)
!15696 = !DISubroutineType(types: !15697)
!15697 = !{!116, !14734}
!15698 = !{!15699, !15700, !15701}
!15699 = !DILocalVariable(name: "timeout", arg: 1, scope: !15695, file: !2271, line: 1459, type: !14734)
!15700 = !DILocalVariable(name: "ticks", scope: !15695, file: !2271, line: 1461, type: !107)
!15701 = !DILocalVariable(name: "ret", scope: !15695, file: !2271, line: 1480, type: !116)
!15702 = !DILocation(line: 0, scope: !15695)
!15703 = !DILocation(line: 1031, column: 3, scope: !14573, inlinedAt: !15704)
!15704 = distinct !DILocation(line: 48, column: 10, scope: !14577, inlinedAt: !15705)
!15705 = distinct !DILocation(line: 1463, column: 2, scope: !15706)
!15706 = distinct !DILexicalBlock(scope: !15707, file: !2271, line: 1463, column: 2)
!15707 = distinct !DILexicalBlock(scope: !15695, file: !2271, line: 1463, column: 2)
!15708 = !DILocation(line: 0, scope: !14573, inlinedAt: !15704)
!15709 = !DILocation(line: 48, column: 9, scope: !14577, inlinedAt: !15705)
!15710 = !DILocation(line: 1463, column: 2, scope: !15707)
!15711 = !DILocation(line: 1463, column: 2, scope: !15712)
!15712 = distinct !DILexicalBlock(scope: !15706, file: !2271, line: 1463, column: 2)
!15713 = !DILocation(line: 1468, column: 6, scope: !15714)
!15714 = distinct !DILexicalBlock(scope: !15695, file: !2271, line: 1468, column: 6)
!15715 = !DILocation(line: 1468, column: 6, scope: !15695)
!15716 = !DILocation(line: 1469, column: 20, scope: !15717)
!15717 = distinct !DILexicalBlock(scope: !15714, file: !2271, line: 1468, column: 40)
!15718 = !DILocation(line: 1469, column: 3, scope: !15717)
!15719 = !DILocation(line: 1473, column: 3, scope: !15717)
!15720 = !DILocation(line: 1478, column: 10, scope: !15695)
!15721 = !DILocation(line: 1480, column: 16, scope: !15695)
!15722 = !DILocation(line: 1485, column: 1, scope: !15695)
!15723 = distinct !DISubprogram(name: "k_thread_suspend", scope: !3239, file: !3239, line: 310, type: !15724, scopeLine: 311, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2167, retainedNodes: !15726)
!15724 = !DISubroutineType(types: !15725)
!15725 = !{null, !15582}
!15726 = !{!15727}
!15727 = !DILocalVariable(name: "thread", arg: 1, scope: !15723, file: !3239, line: 310, type: !15582)
!15728 = !DILocation(line: 0, scope: !15723)
!15729 = !DILocation(line: 319, column: 2, scope: !15730)
!15730 = distinct !DILexicalBlock(scope: !15723, file: !3239, line: 319, column: 2)
!15731 = !{i64 2151088242}
!15732 = !DILocation(line: 320, column: 2, scope: !15723)
!15733 = !DILocation(line: 321, column: 1, scope: !15723)
!15734 = distinct !DISubprogram(name: "z_tick_sleep", scope: !2271, file: !2271, line: 1415, type: !15735, scopeLine: 1416, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2167, retainedNodes: !15737)
!15735 = !DISubroutineType(types: !15736)
!15736 = !{!116, !107}
!15737 = !{!15738, !15739, !15740, !15741}
!15738 = !DILocalVariable(name: "ticks", arg: 1, scope: !15734, file: !2271, line: 1415, type: !107)
!15739 = !DILocalVariable(name: "expected_wakeup_ticks", scope: !15734, file: !2271, line: 1418, type: !113)
!15740 = !DILocalVariable(name: "timeout", scope: !15734, file: !2271, line: 1430, type: !14734)
!15741 = !DILocalVariable(name: "key", scope: !15734, file: !2271, line: 1437, type: !13793)
!15742 = !DILocation(line: 0, scope: !15734)
!15743 = !DILocation(line: 1031, column: 3, scope: !14573, inlinedAt: !15744)
!15744 = distinct !DILocation(line: 48, column: 10, scope: !14577, inlinedAt: !15745)
!15745 = distinct !DILocation(line: 1420, column: 2, scope: !15746)
!15746 = distinct !DILexicalBlock(scope: !15747, file: !2271, line: 1420, column: 2)
!15747 = distinct !DILexicalBlock(scope: !15734, file: !2271, line: 1420, column: 2)
!15748 = !DILocation(line: 0, scope: !14573, inlinedAt: !15744)
!15749 = !DILocation(line: 48, column: 9, scope: !14577, inlinedAt: !15745)
!15750 = !DILocation(line: 1420, column: 2, scope: !15747)
!15751 = !DILocation(line: 1420, column: 2, scope: !15752)
!15752 = distinct !DILexicalBlock(scope: !15746, file: !2271, line: 1420, column: 2)
!15753 = !DILocation(line: 1425, column: 12, scope: !15754)
!15754 = distinct !DILexicalBlock(scope: !15734, file: !2271, line: 1425, column: 6)
!15755 = !DILocation(line: 1425, column: 6, scope: !15734)
!15756 = !DILocation(line: 1426, column: 3, scope: !15757)
!15757 = distinct !DILexicalBlock(scope: !15754, file: !2271, line: 1425, column: 18)
!15758 = !DILocation(line: 1427, column: 3, scope: !15757)
!15759 = !DILocation(line: 1431, column: 24, scope: !15760)
!15760 = distinct !DILexicalBlock(scope: !15734, file: !2271, line: 1431, column: 6)
!15761 = !DILocation(line: 1431, column: 6, scope: !15734)
!15762 = !DILocation(line: 1432, column: 35, scope: !15763)
!15763 = distinct !DILexicalBlock(scope: !15760, file: !2271, line: 1431, column: 30)
!15764 = !DILocation(line: 1432, column: 27, scope: !15763)
!15765 = !DILocation(line: 1433, column: 2, scope: !15763)
!15766 = !DILocation(line: 1434, column: 27, scope: !15767)
!15767 = distinct !DILexicalBlock(scope: !15760, file: !2271, line: 1433, column: 9)
!15768 = !DILocation(line: 0, scope: !15760)
!15769 = !DILocation(line: 0, scope: !13801, inlinedAt: !15770)
!15770 = distinct !DILocation(line: 1437, column: 25, scope: !15734)
!15771 = !DILocation(line: 55, column: 2, scope: !13810, inlinedAt: !15772)
!15772 = distinct !DILocation(line: 145, column: 10, scope: !13801, inlinedAt: !15770)
!15773 = !DILocation(line: 0, scope: !13810, inlinedAt: !15772)
!15774 = !DILocation(line: 148, column: 2, scope: !13818, inlinedAt: !15770)
!15775 = !DILocation(line: 148, column: 2, scope: !13819, inlinedAt: !15770)
!15776 = !DILocation(line: 148, column: 2, scope: !13822, inlinedAt: !15770)
!15777 = !DILocation(line: 160, column: 2, scope: !13801, inlinedAt: !15770)
!15778 = !DILocation(line: 1440, column: 20, scope: !15734)
!15779 = !DILocation(line: 1440, column: 18, scope: !15734)
!15780 = !DILocation(line: 1442, column: 2, scope: !15734)
!15781 = !DILocation(line: 1443, column: 23, scope: !15734)
!15782 = !DILocation(line: 1443, column: 2, scope: !15734)
!15783 = !DILocation(line: 1444, column: 29, scope: !15734)
!15784 = !DILocation(line: 1444, column: 2, scope: !15734)
!15785 = !DILocation(line: 0, scope: !14524, inlinedAt: !15786)
!15786 = distinct !DILocation(line: 1446, column: 8, scope: !15734)
!15787 = !DILocation(line: 0, scope: !14533, inlinedAt: !15788)
!15788 = distinct !DILocation(line: 195, column: 2, scope: !14524, inlinedAt: !15786)
!15789 = !DILocation(line: 225, column: 2, scope: !14540, inlinedAt: !15788)
!15790 = !DILocation(line: 225, column: 2, scope: !14541, inlinedAt: !15788)
!15791 = !DILocation(line: 225, column: 2, scope: !14544, inlinedAt: !15788)
!15792 = !DILocation(line: 196, column: 9, scope: !14524, inlinedAt: !15786)
!15793 = !DILocation(line: 1448, column: 2, scope: !15794)
!15794 = distinct !DILexicalBlock(scope: !15795, file: !2271, line: 1448, column: 2)
!15795 = distinct !DILexicalBlock(scope: !15734, file: !2271, line: 1448, column: 2)
!15796 = !DILocation(line: 1448, column: 2, scope: !15795)
!15797 = !DILocation(line: 1448, column: 2, scope: !15798)
!15798 = distinct !DILexicalBlock(scope: !15794, file: !2271, line: 1448, column: 2)
!15799 = !DILocation(line: 1450, column: 10, scope: !15734)
!15800 = !DILocation(line: 1450, column: 45, scope: !15734)
!15801 = !DILocation(line: 1450, column: 43, scope: !15734)
!15802 = !DILocation(line: 1451, column: 6, scope: !15734)
!15803 = !DILocation(line: 1457, column: 1, scope: !15734)
!15804 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !12779, file: !12779, line: 1103, type: !12780, scopeLine: 1104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2167, retainedNodes: !15805)
!15805 = !{!15806}
!15806 = !DILocalVariable(name: "t", arg: 1, scope: !15804, file: !12779, line: 1103, type: !114)
!15807 = !DILocation(line: 0, scope: !15804)
!15808 = !DILocation(line: 0, scope: !13863, inlinedAt: !15809)
!15809 = distinct !DILocation(line: 1106, column: 9, scope: !15804)
!15810 = !DILocation(line: 139, column: 13, scope: !15811, inlinedAt: !15809)
!15811 = distinct !DILexicalBlock(scope: !15812, file: !12779, line: 138, column: 10)
!15812 = distinct !DILexicalBlock(scope: !15813, file: !12779, line: 136, column: 7)
!15813 = distinct !DILexicalBlock(scope: !13884, file: !12779, line: 134, column: 17)
!15814 = !DILocation(line: 1106, column: 2, scope: !15804)
!15815 = distinct !DISubprogram(name: "k_yield", scope: !3239, file: !3239, line: 140, type: !260, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2167, retainedNodes: !391)
!15816 = !DILocation(line: 148, column: 2, scope: !15817)
!15817 = distinct !DILexicalBlock(scope: !15815, file: !3239, line: 148, column: 2)
!15818 = !{i64 2151087562}
!15819 = !DILocation(line: 149, column: 2, scope: !15815)
!15820 = !DILocation(line: 150, column: 1, scope: !15815)
!15821 = distinct !DISubprogram(name: "z_impl_k_usleep", scope: !2271, file: !2271, line: 1495, type: !15822, scopeLine: 1496, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2167, retainedNodes: !15824)
!15822 = !DISubroutineType(types: !15823)
!15823 = !{!116, !105}
!15824 = !{!15825, !15826}
!15825 = !DILocalVariable(name: "us", arg: 1, scope: !15821, file: !2271, line: 1495, type: !105)
!15826 = !DILocalVariable(name: "ticks", scope: !15821, file: !2271, line: 1497, type: !116)
!15827 = !DILocation(line: 0, scope: !15821)
!15828 = !DILocation(line: 1501, column: 31, scope: !15821)
!15829 = !DILocation(line: 1501, column: 10, scope: !15821)
!15830 = !DILocation(line: 1502, column: 23, scope: !15821)
!15831 = !DILocation(line: 1502, column: 10, scope: !15821)
!15832 = !DILocation(line: 1506, column: 31, scope: !15821)
!15833 = !DILocation(line: 1506, column: 9, scope: !15821)
!15834 = !DILocation(line: 1506, column: 2, scope: !15821)
!15835 = distinct !DISubprogram(name: "k_us_to_ticks_ceil64", scope: !12779, file: !12779, line: 571, type: !12780, scopeLine: 572, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2167, retainedNodes: !15836)
!15836 = !{!15837}
!15837 = !DILocalVariable(name: "t", arg: 1, scope: !15835, file: !12779, line: 571, type: !114)
!15838 = !DILocation(line: 0, scope: !15835)
!15839 = !DILocation(line: 0, scope: !13863, inlinedAt: !15840)
!15840 = distinct !DILocation(line: 574, column: 9, scope: !15835)
!15841 = !DILocation(line: 135, column: 5, scope: !15813, inlinedAt: !15840)
!15842 = !DILocation(line: 139, column: 13, scope: !15811, inlinedAt: !15840)
!15843 = !DILocation(line: 574, column: 2, scope: !15835)
!15844 = distinct !DISubprogram(name: "k_ticks_to_us_floor64", scope: !12779, file: !12779, line: 1187, type: !12780, scopeLine: 1188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2167, retainedNodes: !15845)
!15845 = !{!15846}
!15846 = !DILocalVariable(name: "t", arg: 1, scope: !15844, file: !12779, line: 1187, type: !114)
!15847 = !DILocation(line: 0, scope: !15844)
!15848 = !DILocation(line: 0, scope: !13863, inlinedAt: !15849)
!15849 = distinct !DILocation(line: 1190, column: 9, scope: !15844)
!15850 = !DILocation(line: 145, column: 13, scope: !15851, inlinedAt: !15849)
!15851 = distinct !DILexicalBlock(scope: !13881, file: !12779, line: 144, column: 10)
!15852 = !DILocation(line: 1190, column: 2, scope: !15844)
!15853 = distinct !DISubprogram(name: "z_impl_k_wakeup", scope: !2271, file: !2271, line: 1517, type: !15724, scopeLine: 1518, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2167, retainedNodes: !15854)
!15854 = !{!15855}
!15855 = !DILocalVariable(name: "thread", arg: 1, scope: !15853, file: !2271, line: 1517, type: !15582)
!15856 = !DILocation(line: 0, scope: !15853)
!15857 = !DILocation(line: 1521, column: 6, scope: !15858)
!15858 = distinct !DILexicalBlock(scope: !15853, file: !2271, line: 1521, column: 6)
!15859 = !DILocation(line: 1521, column: 6, scope: !15853)
!15860 = !DILocation(line: 1525, column: 6, scope: !15861)
!15861 = distinct !DILexicalBlock(scope: !15853, file: !2271, line: 1525, column: 6)
!15862 = !DILocation(line: 1525, column: 37, scope: !15861)
!15863 = !DILocation(line: 1525, column: 6, scope: !15853)
!15864 = !DILocation(line: 1527, column: 20, scope: !15865)
!15865 = distinct !DILexicalBlock(scope: !15866, file: !2271, line: 1527, column: 7)
!15866 = distinct !DILexicalBlock(scope: !15861, file: !2271, line: 1525, column: 42)
!15867 = !DILocation(line: 1527, column: 33, scope: !15865)
!15868 = !DILocation(line: 1527, column: 7, scope: !15866)
!15869 = !DILocation(line: 1532, column: 2, scope: !15853)
!15870 = !DILocation(line: 1533, column: 2, scope: !15853)
!15871 = !DILocation(line: 1031, column: 3, scope: !14573, inlinedAt: !15872)
!15872 = distinct !DILocation(line: 48, column: 10, scope: !14577, inlinedAt: !15873)
!15873 = distinct !DILocation(line: 1537, column: 7, scope: !15874)
!15874 = distinct !DILexicalBlock(scope: !15853, file: !2271, line: 1537, column: 6)
!15875 = !DILocation(line: 0, scope: !14573, inlinedAt: !15872)
!15876 = !DILocation(line: 48, column: 9, scope: !14577, inlinedAt: !15873)
!15877 = !DILocation(line: 1537, column: 6, scope: !15853)
!15878 = !DILocation(line: 1538, column: 3, scope: !15879)
!15879 = distinct !DILexicalBlock(scope: !15874, file: !2271, line: 1537, column: 25)
!15880 = !DILocation(line: 1539, column: 2, scope: !15879)
!15881 = !DILocation(line: 1540, column: 1, scope: !15853)
!15882 = distinct !DISubprogram(name: "z_is_thread_pending", scope: !12184, file: !12184, line: 101, type: !13944, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2167, retainedNodes: !15883)
!15883 = !{!15884}
!15884 = !DILocalVariable(name: "thread", arg: 1, scope: !15882, file: !12184, line: 101, type: !2170)
!15885 = !DILocation(line: 0, scope: !15882)
!15886 = !DILocation(line: 103, column: 23, scope: !15882)
!15887 = !DILocation(line: 103, column: 36, scope: !15882)
!15888 = !DILocation(line: 103, column: 55, scope: !15882)
!15889 = !DILocation(line: 103, column: 2, scope: !15882)
!15890 = distinct !DISubprogram(name: "z_impl_z_current_get", scope: !2271, file: !2271, line: 1567, type: !15891, scopeLine: 1568, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2167, retainedNodes: !15893)
!15891 = !DISubroutineType(types: !15892)
!15892 = !{!15582}
!15893 = !{!15894}
!15894 = !DILocalVariable(name: "ret", scope: !15890, file: !2271, line: 1577, type: !15582)
!15895 = !DILocation(line: 1577, column: 30, scope: !15890)
!15896 = !DILocation(line: 0, scope: !15890)
!15897 = !DILocation(line: 1582, column: 2, scope: !15890)
!15898 = distinct !DISubprogram(name: "z_impl_k_is_preempt_thread", scope: !2271, file: !2271, line: 1593, type: !15899, scopeLine: 1594, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2167, retainedNodes: !391)
!15899 = !DISubroutineType(types: !15900)
!15900 = !{!105}
!15901 = !DILocation(line: 1031, column: 3, scope: !14573, inlinedAt: !15902)
!15902 = distinct !DILocation(line: 48, column: 10, scope: !14577, inlinedAt: !15903)
!15903 = distinct !DILocation(line: 1595, column: 10, scope: !15898)
!15904 = !DILocation(line: 0, scope: !14573, inlinedAt: !15902)
!15905 = !DILocation(line: 48, column: 9, scope: !14577, inlinedAt: !15903)
!15906 = !DILocation(line: 1595, column: 27, scope: !15898)
!15907 = !DILocation(line: 1595, column: 41, scope: !15898)
!15908 = !DILocation(line: 1595, column: 30, scope: !15898)
!15909 = !DILocation(line: 1595, column: 2, scope: !15898)
!15910 = distinct !DISubprogram(name: "z_thread_abort", scope: !2271, file: !2271, line: 1725, type: !13759, scopeLine: 1726, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2167, retainedNodes: !15911)
!15911 = !{!15912, !15913}
!15912 = !DILocalVariable(name: "thread", arg: 1, scope: !15910, file: !2271, line: 1725, type: !2170)
!15913 = !DILocalVariable(name: "key", scope: !15910, file: !2271, line: 1727, type: !13793)
!15914 = !DILocation(line: 0, scope: !15910)
!15915 = !DILocation(line: 0, scope: !13801, inlinedAt: !15916)
!15916 = distinct !DILocation(line: 1727, column: 25, scope: !15910)
!15917 = !DILocation(line: 55, column: 2, scope: !13810, inlinedAt: !15918)
!15918 = distinct !DILocation(line: 145, column: 10, scope: !13801, inlinedAt: !15916)
!15919 = !DILocation(line: 0, scope: !13810, inlinedAt: !15918)
!15920 = !DILocation(line: 148, column: 2, scope: !13818, inlinedAt: !15916)
!15921 = !DILocation(line: 148, column: 2, scope: !13819, inlinedAt: !15916)
!15922 = !DILocation(line: 148, column: 2, scope: !13822, inlinedAt: !15916)
!15923 = !DILocation(line: 160, column: 2, scope: !13801, inlinedAt: !15916)
!15924 = !DILocation(line: 1729, column: 20, scope: !15925)
!15925 = distinct !DILexicalBlock(scope: !15910, file: !2271, line: 1729, column: 6)
!15926 = !DILocation(line: 1729, column: 33, scope: !15925)
!15927 = !DILocation(line: 1729, column: 48, scope: !15925)
!15928 = !DILocation(line: 1729, column: 6, scope: !15910)
!15929 = !DILocation(line: 0, scope: !13835, inlinedAt: !15930)
!15930 = distinct !DILocation(line: 1730, column: 3, scope: !15931)
!15931 = distinct !DILexicalBlock(scope: !15925, file: !2271, line: 1729, column: 54)
!15932 = !DILocation(line: 194, column: 2, scope: !13843, inlinedAt: !15930)
!15933 = !DILocation(line: 194, column: 2, scope: !13844, inlinedAt: !15930)
!15934 = !DILocation(line: 194, column: 2, scope: !13847, inlinedAt: !15930)
!15935 = !DILocation(line: 0, scope: !13849, inlinedAt: !15936)
!15936 = distinct !DILocation(line: 215, column: 2, scope: !13835, inlinedAt: !15930)
!15937 = !DILocation(line: 95, column: 2, scope: !13849, inlinedAt: !15936)
!15938 = !DILocation(line: 1731, column: 3, scope: !15939)
!15939 = distinct !DILexicalBlock(scope: !15940, file: !2271, line: 1731, column: 3)
!15940 = distinct !DILexicalBlock(scope: !15941, file: !2271, line: 1731, column: 3)
!15941 = distinct !DILexicalBlock(scope: !15931, file: !2271, line: 1731, column: 3)
!15942 = !DILocation(line: 1736, column: 20, scope: !15943)
!15943 = distinct !DILexicalBlock(scope: !15910, file: !2271, line: 1736, column: 6)
!15944 = !DILocation(line: 1736, column: 33, scope: !15943)
!15945 = !DILocation(line: 1736, column: 49, scope: !15943)
!15946 = !DILocation(line: 1736, column: 6, scope: !15910)
!15947 = !DILocation(line: 0, scope: !13835, inlinedAt: !15948)
!15948 = distinct !DILocation(line: 1737, column: 3, scope: !15949)
!15949 = distinct !DILexicalBlock(scope: !15943, file: !2271, line: 1736, column: 56)
!15950 = !DILocation(line: 194, column: 2, scope: !13843, inlinedAt: !15948)
!15951 = !DILocation(line: 194, column: 2, scope: !13844, inlinedAt: !15948)
!15952 = !DILocation(line: 194, column: 2, scope: !13847, inlinedAt: !15948)
!15953 = !DILocation(line: 0, scope: !13849, inlinedAt: !15954)
!15954 = distinct !DILocation(line: 215, column: 2, scope: !13835, inlinedAt: !15948)
!15955 = !DILocation(line: 95, column: 2, scope: !13849, inlinedAt: !15954)
!15956 = !DILocation(line: 1738, column: 3, scope: !15949)
!15957 = !DILocation(line: 1775, column: 2, scope: !15910)
!15958 = !DILocation(line: 1776, column: 16, scope: !15959)
!15959 = distinct !DILexicalBlock(scope: !15910, file: !2271, line: 1776, column: 6)
!15960 = !DILocation(line: 1776, column: 13, scope: !15959)
!15961 = !DILocation(line: 1776, column: 25, scope: !15959)
!15962 = !DILocation(line: 1031, column: 3, scope: !14573, inlinedAt: !15963)
!15963 = distinct !DILocation(line: 48, column: 10, scope: !14577, inlinedAt: !15964)
!15964 = distinct !DILocation(line: 1776, column: 29, scope: !15959)
!15965 = !DILocation(line: 0, scope: !14573, inlinedAt: !15963)
!15966 = !DILocation(line: 48, column: 9, scope: !14577, inlinedAt: !15964)
!15967 = !DILocation(line: 1776, column: 6, scope: !15910)
!15968 = !DILocation(line: 0, scope: !14524, inlinedAt: !15969)
!15969 = distinct !DILocation(line: 1777, column: 3, scope: !15970)
!15970 = distinct !DILexicalBlock(scope: !15959, file: !2271, line: 1776, column: 47)
!15971 = !DILocation(line: 0, scope: !14533, inlinedAt: !15972)
!15972 = distinct !DILocation(line: 195, column: 2, scope: !14524, inlinedAt: !15969)
!15973 = !DILocation(line: 225, column: 2, scope: !14540, inlinedAt: !15972)
!15974 = !DILocation(line: 225, column: 2, scope: !14541, inlinedAt: !15972)
!15975 = !DILocation(line: 225, column: 2, scope: !14544, inlinedAt: !15972)
!15976 = !DILocation(line: 196, column: 9, scope: !14524, inlinedAt: !15969)
!15977 = !DILocation(line: 1778, column: 3, scope: !15978)
!15978 = distinct !DILexicalBlock(scope: !15979, file: !2271, line: 1778, column: 3)
!15979 = distinct !DILexicalBlock(scope: !15980, file: !2271, line: 1778, column: 3)
!15980 = distinct !DILexicalBlock(scope: !15970, file: !2271, line: 1778, column: 3)
!15981 = !DILocation(line: 0, scope: !13835, inlinedAt: !15982)
!15982 = distinct !DILocation(line: 1780, column: 2, scope: !15910)
!15983 = !DILocation(line: 194, column: 2, scope: !13843, inlinedAt: !15982)
!15984 = !DILocation(line: 194, column: 2, scope: !13844, inlinedAt: !15982)
!15985 = !DILocation(line: 194, column: 2, scope: !13847, inlinedAt: !15982)
!15986 = !DILocation(line: 0, scope: !13849, inlinedAt: !15987)
!15987 = distinct !DILocation(line: 215, column: 2, scope: !13835, inlinedAt: !15982)
!15988 = !DILocation(line: 95, column: 2, scope: !13849, inlinedAt: !15987)
!15989 = !DILocation(line: 1781, column: 1, scope: !15910)
!15990 = distinct !DISubprogram(name: "end_thread", scope: !2271, file: !2271, line: 1690, type: !13759, scopeLine: 1691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2167, retainedNodes: !15991)
!15991 = !{!15992}
!15992 = !DILocalVariable(name: "thread", arg: 1, scope: !15990, file: !2271, line: 1690, type: !2170)
!15993 = !DILocation(line: 0, scope: !15990)
!15994 = !DILocation(line: 1695, column: 20, scope: !15995)
!15995 = distinct !DILexicalBlock(scope: !15990, file: !2271, line: 1695, column: 6)
!15996 = !DILocation(line: 1695, column: 33, scope: !15995)
!15997 = !DILocation(line: 1695, column: 49, scope: !15995)
!15998 = !DILocation(line: 1695, column: 6, scope: !15990)
!15999 = !DILocation(line: 1697, column: 29, scope: !16000)
!16000 = distinct !DILexicalBlock(scope: !15995, file: !2271, line: 1695, column: 56)
!16001 = !DILocation(line: 1698, column: 7, scope: !16002)
!16002 = distinct !DILexicalBlock(scope: !16000, file: !2271, line: 1698, column: 7)
!16003 = !DILocation(line: 1698, column: 7, scope: !16000)
!16004 = !DILocation(line: 0, scope: !13995, inlinedAt: !16005)
!16005 = distinct !DILocation(line: 1699, column: 4, scope: !16006)
!16006 = distinct !DILexicalBlock(scope: !16002, file: !2271, line: 1698, column: 35)
!16007 = !DILocation(line: 266, column: 28, scope: !13995, inlinedAt: !16005)
!16008 = !DILocation(line: 0, scope: !14003, inlinedAt: !16009)
!16009 = distinct !DILocation(line: 268, column: 3, scope: !14007, inlinedAt: !16005)
!16010 = !DILocation(line: 234, column: 2, scope: !14003, inlinedAt: !16009)
!16011 = !DILocation(line: 1700, column: 3, scope: !16006)
!16012 = !DILocation(line: 1701, column: 20, scope: !16013)
!16013 = distinct !DILexicalBlock(scope: !16000, file: !2271, line: 1701, column: 7)
!16014 = !DILocation(line: 1701, column: 30, scope: !16013)
!16015 = !DILocation(line: 1701, column: 7, scope: !16000)
!16016 = !DILocation(line: 1702, column: 4, scope: !16017)
!16017 = distinct !DILexicalBlock(scope: !16013, file: !2271, line: 1701, column: 39)
!16018 = !DILocation(line: 1703, column: 3, scope: !16017)
!16019 = !DILocation(line: 1704, column: 9, scope: !16000)
!16020 = !DILocation(line: 1705, column: 23, scope: !16000)
!16021 = !DILocation(line: 1705, column: 3, scope: !16000)
!16022 = !DILocation(line: 1706, column: 3, scope: !16000)
!16023 = !DILocation(line: 1722, column: 2, scope: !16000)
!16024 = !DILocation(line: 1723, column: 1, scope: !15990)
!16025 = distinct !DISubprogram(name: "unpend_all", scope: !2271, file: !2271, line: 1674, type: !16026, scopeLine: 1675, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2167, retainedNodes: !16028)
!16026 = !DISubroutineType(types: !16027)
!16027 = !{null, !2201}
!16028 = !{!16029, !16030}
!16029 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16025, file: !2271, line: 1674, type: !2201)
!16030 = !DILocalVariable(name: "thread", scope: !16025, file: !2271, line: 1676, type: !2170)
!16031 = !DILocation(line: 0, scope: !16025)
!16032 = !DILocation(line: 1678, column: 19, scope: !16025)
!16033 = !DILocation(line: 1678, column: 41, scope: !16025)
!16034 = !DILocation(line: 1678, column: 2, scope: !16025)
!16035 = !DILocation(line: 1679, column: 3, scope: !16036)
!16036 = distinct !DILexicalBlock(scope: !16025, file: !2271, line: 1678, column: 50)
!16037 = !DILocation(line: 1680, column: 9, scope: !16036)
!16038 = !DILocalVariable(name: "thread", arg: 1, scope: !16039, file: !12225, line: 65, type: !2170)
!16039 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !12225, file: !12225, line: 65, type: !16040, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2167, retainedNodes: !16042)
!16040 = !DISubroutineType(types: !16041)
!16041 = !{null, !2170, !32}
!16042 = !{!16038, !16043}
!16043 = !DILocalVariable(name: "value", arg: 2, scope: !16039, file: !12225, line: 65, type: !32)
!16044 = !DILocation(line: 0, scope: !16039, inlinedAt: !16045)
!16045 = distinct !DILocation(line: 1681, column: 3, scope: !16036)
!16046 = !DILocation(line: 67, column: 15, scope: !16039, inlinedAt: !16045)
!16047 = !DILocation(line: 67, column: 33, scope: !16039, inlinedAt: !16045)
!16048 = !DILocation(line: 1682, column: 3, scope: !16036)
!16049 = distinct !{!16049, !16034, !16050}
!16050 = !DILocation(line: 1683, column: 2, scope: !16025)
!16051 = !DILocation(line: 1684, column: 1, scope: !16025)
!16052 = distinct !DISubprogram(name: "z_impl_k_thread_join", scope: !2271, file: !2271, line: 1794, type: !16053, scopeLine: 1795, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2167, retainedNodes: !16055)
!16053 = !DISubroutineType(types: !16054)
!16054 = !{!105, !2170, !14734}
!16055 = !{!16056, !16057, !16058, !16059}
!16056 = !DILocalVariable(name: "thread", arg: 1, scope: !16052, file: !2271, line: 1794, type: !2170)
!16057 = !DILocalVariable(name: "timeout", arg: 2, scope: !16052, file: !2271, line: 1794, type: !14734)
!16058 = !DILocalVariable(name: "key", scope: !16052, file: !2271, line: 1796, type: !13793)
!16059 = !DILocalVariable(name: "ret", scope: !16052, file: !2271, line: 1797, type: !105)
!16060 = !DILocation(line: 0, scope: !16052)
!16061 = !DILocation(line: 0, scope: !13801, inlinedAt: !16062)
!16062 = distinct !DILocation(line: 1796, column: 25, scope: !16052)
!16063 = !DILocation(line: 55, column: 2, scope: !13810, inlinedAt: !16064)
!16064 = distinct !DILocation(line: 145, column: 10, scope: !13801, inlinedAt: !16062)
!16065 = !DILocation(line: 0, scope: !13810, inlinedAt: !16064)
!16066 = !DILocation(line: 148, column: 2, scope: !13818, inlinedAt: !16062)
!16067 = !DILocation(line: 148, column: 2, scope: !13819, inlinedAt: !16062)
!16068 = !DILocation(line: 148, column: 2, scope: !13822, inlinedAt: !16062)
!16069 = !DILocation(line: 160, column: 2, scope: !13801, inlinedAt: !16062)
!16070 = !DILocation(line: 1801, column: 20, scope: !16071)
!16071 = distinct !DILexicalBlock(scope: !16052, file: !2271, line: 1801, column: 6)
!16072 = !DILocation(line: 1801, column: 33, scope: !16071)
!16073 = !DILocation(line: 1801, column: 49, scope: !16071)
!16074 = !DILocation(line: 1801, column: 6, scope: !16052)
!16075 = !DILocation(line: 1803, column: 13, scope: !16076)
!16076 = distinct !DILexicalBlock(scope: !16071, file: !2271, line: 1803, column: 13)
!16077 = !DILocation(line: 1803, column: 13, scope: !16071)
!16078 = !DILocation(line: 1805, column: 24, scope: !16079)
!16079 = distinct !DILexicalBlock(scope: !16076, file: !2271, line: 1805, column: 13)
!16080 = !DILocation(line: 1805, column: 21, scope: !16079)
!16081 = !DILocation(line: 1805, column: 34, scope: !16079)
!16082 = !DILocation(line: 1806, column: 20, scope: !16079)
!16083 = !DILocation(line: 1806, column: 44, scope: !16079)
!16084 = !DILocation(line: 1806, column: 30, scope: !16079)
!16085 = !DILocation(line: 1805, column: 13, scope: !16076)
!16086 = !DILocation(line: 1031, column: 3, scope: !14573, inlinedAt: !16087)
!16087 = distinct !DILocation(line: 48, column: 10, scope: !14577, inlinedAt: !16088)
!16088 = distinct !DILocation(line: 1809, column: 3, scope: !16089)
!16089 = distinct !DILexicalBlock(scope: !16090, file: !2271, line: 1809, column: 3)
!16090 = distinct !DILexicalBlock(scope: !16091, file: !2271, line: 1809, column: 3)
!16091 = distinct !DILexicalBlock(scope: !16079, file: !2271, line: 1808, column: 9)
!16092 = !DILocation(line: 0, scope: !14573, inlinedAt: !16087)
!16093 = !DILocation(line: 48, column: 9, scope: !14577, inlinedAt: !16088)
!16094 = !DILocation(line: 1809, column: 3, scope: !16090)
!16095 = !DILocation(line: 1809, column: 3, scope: !16096)
!16096 = distinct !DILexicalBlock(scope: !16089, file: !2271, line: 1809, column: 3)
!16097 = !DILocation(line: 1810, column: 23, scope: !16091)
!16098 = !DILocation(line: 1810, column: 42, scope: !16091)
!16099 = !DILocation(line: 1810, column: 3, scope: !16091)
!16100 = !DILocation(line: 1811, column: 22, scope: !16091)
!16101 = !DILocation(line: 1811, column: 3, scope: !16091)
!16102 = !DILocation(line: 0, scope: !14524, inlinedAt: !16103)
!16103 = distinct !DILocation(line: 1814, column: 9, scope: !16091)
!16104 = !DILocation(line: 0, scope: !14533, inlinedAt: !16105)
!16105 = distinct !DILocation(line: 195, column: 2, scope: !14524, inlinedAt: !16103)
!16106 = !DILocation(line: 225, column: 2, scope: !14540, inlinedAt: !16105)
!16107 = !DILocation(line: 225, column: 2, scope: !14541, inlinedAt: !16105)
!16108 = !DILocation(line: 225, column: 2, scope: !14544, inlinedAt: !16105)
!16109 = !DILocation(line: 196, column: 9, scope: !14524, inlinedAt: !16103)
!16110 = !DILocation(line: 1817, column: 3, scope: !16091)
!16111 = !DILocation(line: 0, scope: !16071)
!16112 = !DILocation(line: 0, scope: !13835, inlinedAt: !16113)
!16113 = distinct !DILocation(line: 1822, column: 2, scope: !16052)
!16114 = !DILocation(line: 194, column: 2, scope: !13843, inlinedAt: !16113)
!16115 = !DILocation(line: 194, column: 2, scope: !13844, inlinedAt: !16113)
!16116 = !DILocation(line: 194, column: 2, scope: !13847, inlinedAt: !16113)
!16117 = !DILocation(line: 0, scope: !13849, inlinedAt: !16118)
!16118 = distinct !DILocation(line: 215, column: 2, scope: !13835, inlinedAt: !16113)
!16119 = !DILocation(line: 95, column: 2, scope: !13849, inlinedAt: !16118)
!16120 = !DILocation(line: 1823, column: 2, scope: !16052)
!16121 = !DILocation(line: 1824, column: 1, scope: !16052)
!16122 = distinct !DISubprogram(name: "z_sched_wake", scope: !2271, file: !2271, line: 1882, type: !16123, scopeLine: 1883, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2167, retainedNodes: !16125)
!16123 = !DISubroutineType(types: !16124)
!16124 = !{!911, !2201, !105, !104}
!16125 = !{!16126, !16127, !16128, !16129, !16130, !16131, !16133}
!16126 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16122, file: !2271, line: 1882, type: !2201)
!16127 = !DILocalVariable(name: "swap_retval", arg: 2, scope: !16122, file: !2271, line: 1882, type: !105)
!16128 = !DILocalVariable(name: "swap_data", arg: 3, scope: !16122, file: !2271, line: 1882, type: !104)
!16129 = !DILocalVariable(name: "thread", scope: !16122, file: !2271, line: 1884, type: !2170)
!16130 = !DILocalVariable(name: "ret", scope: !16122, file: !2271, line: 1885, type: !911)
!16131 = !DILocalVariable(name: "__i", scope: !16132, file: !2271, line: 1887, type: !13793)
!16132 = distinct !DILexicalBlock(scope: !16122, file: !2271, line: 1887, column: 2)
!16133 = !DILocalVariable(name: "__key", scope: !16132, file: !2271, line: 1887, type: !13793)
!16134 = !DILocation(line: 0, scope: !16122)
!16135 = !DILocation(line: 0, scope: !16132)
!16136 = !DILocation(line: 0, scope: !13801, inlinedAt: !16137)
!16137 = distinct !DILocation(line: 1887, column: 2, scope: !16132)
!16138 = !DILocation(line: 55, column: 2, scope: !13810, inlinedAt: !16139)
!16139 = distinct !DILocation(line: 145, column: 10, scope: !13801, inlinedAt: !16137)
!16140 = !DILocation(line: 0, scope: !13810, inlinedAt: !16139)
!16141 = !DILocation(line: 148, column: 2, scope: !13818, inlinedAt: !16137)
!16142 = !DILocation(line: 148, column: 2, scope: !13819, inlinedAt: !16137)
!16143 = !DILocation(line: 148, column: 2, scope: !13822, inlinedAt: !16137)
!16144 = !DILocation(line: 160, column: 2, scope: !13801, inlinedAt: !16137)
!16145 = !DILocation(line: 1888, column: 12, scope: !16146)
!16146 = distinct !DILexicalBlock(scope: !16147, file: !2271, line: 1887, column: 26)
!16147 = distinct !DILexicalBlock(scope: !16132, file: !2271, line: 1887, column: 2)
!16148 = !DILocation(line: 1890, column: 14, scope: !16149)
!16149 = distinct !DILexicalBlock(scope: !16146, file: !2271, line: 1890, column: 7)
!16150 = !DILocation(line: 1890, column: 7, scope: !16146)
!16151 = !DILocalVariable(name: "thread", arg: 1, scope: !16152, file: !13052, line: 134, type: !2170)
!16152 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !13052, file: !13052, line: 134, type: !16153, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2167, retainedNodes: !16155)
!16153 = !DISubroutineType(types: !16154)
!16154 = !{null, !2170, !32, !104}
!16155 = !{!16151, !16156, !16157}
!16156 = !DILocalVariable(name: "value", arg: 2, scope: !16152, file: !13052, line: 135, type: !32)
!16157 = !DILocalVariable(name: "data", arg: 3, scope: !16152, file: !13052, line: 136, type: !104)
!16158 = !DILocation(line: 0, scope: !16152, inlinedAt: !16159)
!16159 = distinct !DILocation(line: 1891, column: 4, scope: !16160)
!16160 = distinct !DILexicalBlock(scope: !16149, file: !2271, line: 1890, column: 23)
!16161 = !DILocation(line: 0, scope: !16039, inlinedAt: !16162)
!16162 = distinct !DILocation(line: 138, column: 2, scope: !16152, inlinedAt: !16159)
!16163 = !DILocation(line: 67, column: 15, scope: !16039, inlinedAt: !16162)
!16164 = !DILocation(line: 67, column: 33, scope: !16039, inlinedAt: !16162)
!16165 = !DILocation(line: 139, column: 15, scope: !16152, inlinedAt: !16159)
!16166 = !DILocation(line: 139, column: 25, scope: !16152, inlinedAt: !16159)
!16167 = !DILocation(line: 1894, column: 4, scope: !16160)
!16168 = !DILocation(line: 1895, column: 10, scope: !16160)
!16169 = !DILocation(line: 1896, column: 4, scope: !16160)
!16170 = !DILocation(line: 1898, column: 3, scope: !16160)
!16171 = !DILocation(line: 0, scope: !13835, inlinedAt: !16172)
!16172 = distinct !DILocation(line: 1887, column: 2, scope: !16147)
!16173 = !DILocation(line: 194, column: 2, scope: !13843, inlinedAt: !16172)
!16174 = !DILocation(line: 194, column: 2, scope: !13844, inlinedAt: !16172)
!16175 = !DILocation(line: 194, column: 2, scope: !13847, inlinedAt: !16172)
!16176 = !DILocation(line: 0, scope: !13849, inlinedAt: !16177)
!16177 = distinct !DILocation(line: 215, column: 2, scope: !13835, inlinedAt: !16172)
!16178 = !DILocation(line: 95, column: 2, scope: !13849, inlinedAt: !16177)
!16179 = !DILocation(line: 1901, column: 2, scope: !16122)
!16180 = distinct !DISubprogram(name: "z_sched_wait", scope: !2271, file: !2271, line: 1904, type: !16181, scopeLine: 1906, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2167, retainedNodes: !16184)
!16181 = !DISubroutineType(types: !16182)
!16182 = !{!105, !13804, !13793, !2201, !14734, !16183}
!16183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !104, size: 32)
!16184 = !{!16185, !16186, !16187, !16188, !16189, !16190}
!16185 = !DILocalVariable(name: "lock", arg: 1, scope: !16180, file: !2271, line: 1904, type: !13804)
!16186 = !DILocalVariable(name: "key", arg: 2, scope: !16180, file: !2271, line: 1904, type: !13793)
!16187 = !DILocalVariable(name: "wait_q", arg: 3, scope: !16180, file: !2271, line: 1905, type: !2201)
!16188 = !DILocalVariable(name: "timeout", arg: 4, scope: !16180, file: !2271, line: 1905, type: !14734)
!16189 = !DILocalVariable(name: "data", arg: 5, scope: !16180, file: !2271, line: 1905, type: !16183)
!16190 = !DILocalVariable(name: "ret", scope: !16180, file: !2271, line: 1907, type: !105)
!16191 = !DILocation(line: 0, scope: !16180)
!16192 = !DILocation(line: 1907, column: 12, scope: !16180)
!16193 = !DILocation(line: 1909, column: 11, scope: !16194)
!16194 = distinct !DILexicalBlock(scope: !16180, file: !2271, line: 1909, column: 6)
!16195 = !DILocation(line: 1909, column: 6, scope: !16180)
!16196 = !DILocation(line: 1910, column: 11, scope: !16197)
!16197 = distinct !DILexicalBlock(scope: !16194, file: !2271, line: 1909, column: 20)
!16198 = !DILocation(line: 1910, column: 26, scope: !16197)
!16199 = !DILocation(line: 1910, column: 9, scope: !16197)
!16200 = !DILocation(line: 1911, column: 2, scope: !16197)
!16201 = !DILocation(line: 1912, column: 2, scope: !16180)
!16202 = distinct !DISubprogram(name: "z_data_copy", scope: !16203, file: !16203, line: 22, type: !260, scopeLine: 23, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3086, retainedNodes: !391)
!16203 = !DIFile(filename: "zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16204 = !DILocation(line: 24, column: 2, scope: !16202)
!16205 = !DILocation(line: 27, column: 2, scope: !16202)
!16206 = !DILocation(line: 71, column: 1, scope: !16202)
!16207 = distinct !DISubprogram(name: "z_add_timeout", scope: !2308, file: !2308, line: 88, type: !16208, scopeLine: 90, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2278, retainedNodes: !16214)
!16208 = !DISubroutineType(types: !16209)
!16209 = !{null, !2281, !2300, !16210}
!16210 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !108, line: 67, baseType: !16211)
!16211 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !108, line: 65, size: 64, elements: !16212)
!16212 = !{!16213}
!16213 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !16211, file: !108, line: 66, baseType: !107, size: 64)
!16214 = !{!16215, !16216, !16217, !16218, !16224, !16225, !16228, !16231}
!16215 = !DILocalVariable(name: "to", arg: 1, scope: !16207, file: !2308, line: 88, type: !2281)
!16216 = !DILocalVariable(name: "fn", arg: 2, scope: !16207, file: !2308, line: 88, type: !2300)
!16217 = !DILocalVariable(name: "timeout", arg: 3, scope: !16207, file: !2308, line: 89, type: !16210)
!16218 = !DILocalVariable(name: "__i", scope: !16219, file: !2308, line: 102, type: !16220)
!16219 = distinct !DILexicalBlock(scope: !16207, file: !2308, line: 102, column: 2)
!16220 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !230, line: 106, baseType: !16221)
!16221 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !230, line: 32, size: 32, elements: !16222)
!16222 = !{!16223}
!16223 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !16221, file: !230, line: 33, baseType: !105, size: 32)
!16224 = !DILocalVariable(name: "__key", scope: !16219, file: !2308, line: 102, type: !16220)
!16225 = !DILocalVariable(name: "t", scope: !16226, file: !2308, line: 103, type: !2281)
!16226 = distinct !DILexicalBlock(scope: !16227, file: !2308, line: 102, column: 24)
!16227 = distinct !DILexicalBlock(scope: !16219, file: !2308, line: 102, column: 2)
!16228 = !DILocalVariable(name: "ticks", scope: !16229, file: !2308, line: 107, type: !107)
!16229 = distinct !DILexicalBlock(scope: !16230, file: !2308, line: 106, column: 39)
!16230 = distinct !DILexicalBlock(scope: !16226, file: !2308, line: 105, column: 7)
!16231 = !DILocalVariable(name: "next_time", scope: !16232, file: !2308, line: 137, type: !116)
!16232 = distinct !DILexicalBlock(scope: !16233, file: !2308, line: 127, column: 22)
!16233 = distinct !DILexicalBlock(scope: !16226, file: !2308, line: 127, column: 7)
!16234 = !DILocation(line: 0, scope: !16207)
!16235 = !DILocation(line: 91, column: 6, scope: !16236)
!16236 = distinct !DILexicalBlock(scope: !16207, file: !2308, line: 91, column: 6)
!16237 = !DILocation(line: 91, column: 6, scope: !16207)
!16238 = !DILocation(line: 99, column: 2, scope: !16239)
!16239 = distinct !DILexicalBlock(scope: !16240, file: !2308, line: 99, column: 2)
!16240 = distinct !DILexicalBlock(scope: !16207, file: !2308, line: 99, column: 2)
!16241 = !DILocation(line: 99, column: 2, scope: !16240)
!16242 = !DILocation(line: 99, column: 2, scope: !16243)
!16243 = distinct !DILexicalBlock(scope: !16239, file: !2308, line: 99, column: 2)
!16244 = !DILocation(line: 100, column: 6, scope: !16207)
!16245 = !DILocation(line: 100, column: 9, scope: !16207)
!16246 = !DILocation(line: 0, scope: !16219)
!16247 = !DILocalVariable(name: "l", arg: 1, scope: !16248, file: !230, line: 136, type: !16251)
!16248 = distinct !DISubprogram(name: "k_spin_lock", scope: !230, file: !230, line: 136, type: !16249, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2278, retainedNodes: !16252)
!16249 = !DISubroutineType(types: !16250)
!16250 = !{!16220, !16251}
!16251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2314, size: 32)
!16252 = !{!16247, !16253}
!16253 = !DILocalVariable(name: "k", scope: !16248, file: !230, line: 139, type: !16220)
!16254 = !DILocation(line: 0, scope: !16248, inlinedAt: !16255)
!16255 = distinct !DILocation(line: 102, column: 2, scope: !16219)
!16256 = !DILocation(line: 55, column: 2, scope: !16257, inlinedAt: !16261)
!16257 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7644, file: !7644, line: 42, type: !9346, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2278, retainedNodes: !16258)
!16258 = !{!16259, !16260}
!16259 = !DILocalVariable(name: "key", scope: !16257, file: !7644, line: 44, type: !32)
!16260 = !DILocalVariable(name: "tmp", scope: !16257, file: !7644, line: 53, type: !32)
!16261 = distinct !DILocation(line: 145, column: 10, scope: !16248, inlinedAt: !16255)
!16262 = !{i64 2850168}
!16263 = !DILocation(line: 0, scope: !16257, inlinedAt: !16261)
!16264 = !DILocation(line: 148, column: 2, scope: !16265, inlinedAt: !16255)
!16265 = distinct !DILexicalBlock(scope: !16266, file: !230, line: 148, column: 2)
!16266 = distinct !DILexicalBlock(scope: !16248, file: !230, line: 148, column: 2)
!16267 = !DILocation(line: 148, column: 2, scope: !16266, inlinedAt: !16255)
!16268 = !DILocation(line: 148, column: 2, scope: !16269, inlinedAt: !16255)
!16269 = distinct !DILexicalBlock(scope: !16265, file: !230, line: 148, column: 2)
!16270 = !DILocation(line: 160, column: 2, scope: !16248, inlinedAt: !16255)
!16271 = !DILocation(line: 106, column: 33, scope: !16230)
!16272 = !DILocation(line: 105, column: 7, scope: !16226)
!16273 = !DILocation(line: 107, column: 50, scope: !16229)
!16274 = !DILocation(line: 107, column: 48, scope: !16229)
!16275 = !DILocation(line: 0, scope: !16229)
!16276 = !DILocation(line: 109, column: 17, scope: !16229)
!16277 = !DILocation(line: 110, column: 3, scope: !16229)
!16278 = !DILocation(line: 111, column: 31, scope: !16279)
!16279 = distinct !DILexicalBlock(scope: !16230, file: !2308, line: 110, column: 10)
!16280 = !DILocation(line: 111, column: 37, scope: !16279)
!16281 = !DILocation(line: 111, column: 35, scope: !16279)
!16282 = !DILocation(line: 0, scope: !16230)
!16283 = !DILocation(line: 109, column: 8, scope: !16229)
!16284 = !DILocation(line: 109, column: 15, scope: !16229)
!16285 = !DILocation(line: 114, column: 12, scope: !16286)
!16286 = distinct !DILexicalBlock(scope: !16226, file: !2308, line: 114, column: 3)
!16287 = !DILocation(line: 0, scope: !16226)
!16288 = !DILocation(line: 114, column: 3, scope: !16286)
!16289 = !DILocation(line: 115, column: 24, scope: !16290)
!16290 = distinct !DILexicalBlock(scope: !16291, file: !2308, line: 115, column: 8)
!16291 = distinct !DILexicalBlock(scope: !16292, file: !2308, line: 114, column: 45)
!16292 = distinct !DILexicalBlock(scope: !16286, file: !2308, line: 114, column: 3)
!16293 = !DILocation(line: 115, column: 11, scope: !16290)
!16294 = !DILocation(line: 115, column: 18, scope: !16290)
!16295 = !DILocation(line: 115, column: 8, scope: !16291)
!16296 = !DILocation(line: 116, column: 15, scope: !16297)
!16297 = distinct !DILexicalBlock(scope: !16290, file: !2308, line: 115, column: 32)
!16298 = !DILocation(line: 117, column: 26, scope: !16297)
!16299 = !DILocation(line: 117, column: 5, scope: !16297)
!16300 = !DILocation(line: 123, column: 7, scope: !16226)
!16301 = !DILocation(line: 120, column: 15, scope: !16291)
!16302 = !DILocation(line: 114, column: 36, scope: !16292)
!16303 = distinct !{!16303, !16288, !16304}
!16304 = !DILocation(line: 121, column: 3, scope: !16286)
!16305 = !DILocation(line: 124, column: 4, scope: !16306)
!16306 = distinct !DILexicalBlock(scope: !16307, file: !2308, line: 123, column: 18)
!16307 = distinct !DILexicalBlock(scope: !16226, file: !2308, line: 123, column: 7)
!16308 = !DILocation(line: 125, column: 3, scope: !16306)
!16309 = !DILocation(line: 127, column: 13, scope: !16233)
!16310 = !DILocation(line: 127, column: 10, scope: !16233)
!16311 = !DILocation(line: 127, column: 7, scope: !16226)
!16312 = !DILocation(line: 137, column: 24, scope: !16232)
!16313 = !DILocation(line: 0, scope: !16232)
!16314 = !DILocation(line: 139, column: 18, scope: !16315)
!16315 = distinct !DILexicalBlock(scope: !16232, file: !2308, line: 139, column: 8)
!16316 = !DILocation(line: 139, column: 23, scope: !16315)
!16317 = !DILocation(line: 141, column: 5, scope: !16318)
!16318 = distinct !DILexicalBlock(scope: !16315, file: !2308, line: 140, column: 48)
!16319 = !DILocation(line: 142, column: 4, scope: !16318)
!16320 = !DILocalVariable(name: "key", arg: 2, scope: !16321, file: !230, line: 190, type: !16220)
!16321 = distinct !DISubprogram(name: "k_spin_unlock", scope: !230, file: !230, line: 189, type: !16322, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2278, retainedNodes: !16324)
!16322 = !DISubroutineType(types: !16323)
!16323 = !{null, !16251, !16220}
!16324 = !{!16325, !16320}
!16325 = !DILocalVariable(name: "l", arg: 1, scope: !16321, file: !230, line: 189, type: !16251)
!16326 = !DILocation(line: 0, scope: !16321, inlinedAt: !16327)
!16327 = distinct !DILocation(line: 102, column: 2, scope: !16227)
!16328 = !DILocation(line: 194, column: 2, scope: !16329, inlinedAt: !16327)
!16329 = distinct !DILexicalBlock(scope: !16330, file: !230, line: 194, column: 2)
!16330 = distinct !DILexicalBlock(scope: !16321, file: !230, line: 194, column: 2)
!16331 = !DILocation(line: 194, column: 2, scope: !16330, inlinedAt: !16327)
!16332 = !DILocation(line: 194, column: 2, scope: !16333, inlinedAt: !16327)
!16333 = distinct !DILexicalBlock(scope: !16329, file: !230, line: 194, column: 2)
!16334 = !DILocalVariable(name: "key", arg: 1, scope: !16335, file: !7644, line: 84, type: !32)
!16335 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7644, file: !7644, line: 84, type: !7476, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2278, retainedNodes: !16336)
!16336 = !{!16334}
!16337 = !DILocation(line: 0, scope: !16335, inlinedAt: !16338)
!16338 = distinct !DILocation(line: 215, column: 2, scope: !16321, inlinedAt: !16327)
!16339 = !DILocation(line: 95, column: 2, scope: !16335, inlinedAt: !16338)
!16340 = !{i64 2850985}
!16341 = !DILocation(line: 148, column: 1, scope: !16207)
!16342 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !137, file: !137, line: 225, type: !16343, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2278, retainedNodes: !16347)
!16343 = !DISubroutineType(types: !16344)
!16344 = !{!911, !16345}
!16345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16346, size: 32)
!16346 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2285)
!16347 = !{!16348}
!16348 = !DILocalVariable(name: "node", arg: 1, scope: !16342, file: !137, line: 225, type: !16345)
!16349 = !DILocation(line: 0, scope: !16342)
!16350 = !DILocation(line: 227, column: 15, scope: !16342)
!16351 = !DILocation(line: 227, column: 20, scope: !16342)
!16352 = !DILocation(line: 227, column: 2, scope: !16342)
!16353 = distinct !DISubprogram(name: "elapsed", scope: !2308, file: !2308, line: 62, type: !16354, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2278, retainedNodes: !391)
!16354 = !DISubroutineType(types: !16355)
!16355 = !{!116}
!16356 = !DILocation(line: 64, column: 9, scope: !16353)
!16357 = !DILocation(line: 64, column: 28, scope: !16353)
!16358 = !DILocation(line: 64, column: 35, scope: !16353)
!16359 = !DILocation(line: 64, column: 2, scope: !16353)
!16360 = distinct !DISubprogram(name: "first", scope: !2308, file: !2308, line: 39, type: !16361, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2278, retainedNodes: !16363)
!16361 = !DISubroutineType(types: !16362)
!16362 = !{!2281}
!16363 = !{!16364}
!16364 = !DILocalVariable(name: "t", scope: !16360, file: !2308, line: 41, type: !16365)
!16365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2285, size: 32)
!16366 = !DILocation(line: 41, column: 19, scope: !16360)
!16367 = !DILocation(line: 0, scope: !16360)
!16368 = !DILocation(line: 43, column: 9, scope: !16360)
!16369 = !DILocation(line: 43, column: 2, scope: !16360)
!16370 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !137, file: !137, line: 443, type: !16371, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2278, retainedNodes: !16373)
!16371 = !DISubroutineType(types: !16372)
!16372 = !{null, !16365, !16365}
!16373 = !{!16374, !16375, !16376}
!16374 = !DILocalVariable(name: "successor", arg: 1, scope: !16370, file: !137, line: 443, type: !16365)
!16375 = !DILocalVariable(name: "node", arg: 2, scope: !16370, file: !137, line: 443, type: !16365)
!16376 = !DILocalVariable(name: "prev", scope: !16370, file: !137, line: 445, type: !16377)
!16377 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !16365)
!16378 = !DILocation(line: 0, scope: !16370)
!16379 = !DILocation(line: 445, column: 39, scope: !16370)
!16380 = !DILocation(line: 447, column: 8, scope: !16370)
!16381 = !DILocation(line: 447, column: 13, scope: !16370)
!16382 = !DILocation(line: 448, column: 8, scope: !16370)
!16383 = !DILocation(line: 448, column: 13, scope: !16370)
!16384 = !DILocation(line: 449, column: 8, scope: !16370)
!16385 = !DILocation(line: 449, column: 13, scope: !16370)
!16386 = !DILocation(line: 450, column: 18, scope: !16370)
!16387 = !DILocation(line: 451, column: 1, scope: !16370)
!16388 = distinct !DISubprogram(name: "next", scope: !2308, file: !2308, line: 46, type: !16389, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2278, retainedNodes: !16391)
!16389 = !DISubroutineType(types: !16390)
!16390 = !{!2281, !2281}
!16391 = !{!16392, !16393}
!16392 = !DILocalVariable(name: "t", arg: 1, scope: !16388, file: !2308, line: 46, type: !2281)
!16393 = !DILocalVariable(name: "n", scope: !16388, file: !2308, line: 48, type: !16365)
!16394 = !DILocation(line: 0, scope: !16388)
!16395 = !DILocation(line: 48, column: 58, scope: !16388)
!16396 = !DILocation(line: 48, column: 19, scope: !16388)
!16397 = !DILocation(line: 50, column: 9, scope: !16388)
!16398 = !DILocation(line: 50, column: 2, scope: !16388)
!16399 = distinct !DISubprogram(name: "sys_dlist_append", scope: !137, file: !137, line: 404, type: !16400, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2278, retainedNodes: !16403)
!16400 = !DISubroutineType(types: !16401)
!16401 = !{null, !16402, !16365}
!16402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2313, size: 32)
!16403 = !{!16404, !16405, !16406}
!16404 = !DILocalVariable(name: "list", arg: 1, scope: !16399, file: !137, line: 404, type: !16402)
!16405 = !DILocalVariable(name: "node", arg: 2, scope: !16399, file: !137, line: 404, type: !16365)
!16406 = !DILocalVariable(name: "tail", scope: !16399, file: !137, line: 406, type: !16377)
!16407 = !DILocation(line: 0, scope: !16399)
!16408 = !DILocation(line: 406, column: 34, scope: !16399)
!16409 = !DILocation(line: 408, column: 8, scope: !16399)
!16410 = !DILocation(line: 408, column: 13, scope: !16399)
!16411 = !DILocation(line: 409, column: 8, scope: !16399)
!16412 = !DILocation(line: 409, column: 13, scope: !16399)
!16413 = !DILocation(line: 411, column: 8, scope: !16399)
!16414 = !DILocation(line: 411, column: 13, scope: !16399)
!16415 = !DILocation(line: 412, column: 13, scope: !16399)
!16416 = !DILocation(line: 413, column: 1, scope: !16399)
!16417 = distinct !DISubprogram(name: "next_timeout", scope: !2308, file: !2308, line: 67, type: !16354, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2278, retainedNodes: !16418)
!16418 = !{!16419, !16420, !16421}
!16419 = !DILocalVariable(name: "to", scope: !16417, file: !2308, line: 69, type: !2281)
!16420 = !DILocalVariable(name: "ticks_elapsed", scope: !16417, file: !2308, line: 70, type: !116)
!16421 = !DILocalVariable(name: "ret", scope: !16417, file: !2308, line: 71, type: !116)
!16422 = !DILocation(line: 69, column: 24, scope: !16417)
!16423 = !DILocation(line: 0, scope: !16417)
!16424 = !DILocation(line: 70, column: 26, scope: !16417)
!16425 = !DILocation(line: 73, column: 10, scope: !16426)
!16426 = distinct !DILexicalBlock(scope: !16417, file: !2308, line: 73, column: 6)
!16427 = !DILocation(line: 73, column: 19, scope: !16426)
!16428 = !DILocation(line: 74, column: 21, scope: !16426)
!16429 = !DILocation(line: 74, column: 30, scope: !16426)
!16430 = !DILocation(line: 74, column: 28, scope: !16426)
!16431 = !DILocation(line: 74, column: 45, scope: !16426)
!16432 = !DILocation(line: 73, column: 6, scope: !16417)
!16433 = !DILocation(line: 77, column: 9, scope: !16434)
!16434 = distinct !DILexicalBlock(scope: !16426, file: !2308, line: 76, column: 9)
!16435 = !DILocation(line: 0, scope: !16426)
!16436 = !DILocation(line: 81, column: 20, scope: !16437)
!16437 = distinct !DILexicalBlock(scope: !16417, file: !2308, line: 81, column: 6)
!16438 = !DILocation(line: 81, column: 6, scope: !16437)
!16439 = !DILocation(line: 81, column: 32, scope: !16437)
!16440 = !DILocation(line: 85, column: 2, scope: !16417)
!16441 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !137, file: !137, line: 341, type: !16442, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2278, retainedNodes: !16444)
!16442 = !DISubroutineType(types: !16443)
!16443 = !{!16365, !16402, !16365}
!16444 = !{!16445, !16446}
!16445 = !DILocalVariable(name: "list", arg: 1, scope: !16441, file: !137, line: 341, type: !16402)
!16446 = !DILocalVariable(name: "node", arg: 2, scope: !16441, file: !137, line: 342, type: !16365)
!16447 = !DILocation(line: 0, scope: !16441)
!16448 = !DILocation(line: 344, column: 15, scope: !16441)
!16449 = !DILocation(line: 344, column: 9, scope: !16441)
!16450 = !DILocation(line: 344, column: 26, scope: !16441)
!16451 = !DILocation(line: 344, column: 2, scope: !16441)
!16452 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !137, file: !137, line: 325, type: !16442, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2278, retainedNodes: !16453)
!16453 = !{!16454, !16455}
!16454 = !DILocalVariable(name: "list", arg: 1, scope: !16452, file: !137, line: 325, type: !16402)
!16455 = !DILocalVariable(name: "node", arg: 2, scope: !16452, file: !137, line: 326, type: !16365)
!16456 = !DILocation(line: 0, scope: !16452)
!16457 = !DILocation(line: 328, column: 24, scope: !16452)
!16458 = !DILocation(line: 328, column: 15, scope: !16452)
!16459 = !DILocation(line: 328, column: 9, scope: !16452)
!16460 = !DILocation(line: 328, column: 45, scope: !16452)
!16461 = !DILocation(line: 328, column: 2, scope: !16452)
!16462 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !137, file: !137, line: 294, type: !16463, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2278, retainedNodes: !16465)
!16463 = !DISubroutineType(types: !16464)
!16464 = !{!16365, !16402}
!16465 = !{!16466}
!16466 = !DILocalVariable(name: "list", arg: 1, scope: !16462, file: !137, line: 294, type: !16402)
!16467 = !DILocation(line: 0, scope: !16462)
!16468 = !DILocation(line: 296, column: 9, scope: !16462)
!16469 = !DILocation(line: 296, column: 2, scope: !16462)
!16470 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !137, file: !137, line: 266, type: !16471, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2278, retainedNodes: !16473)
!16471 = !DISubroutineType(types: !16472)
!16472 = !{!911, !16402}
!16473 = !{!16474}
!16474 = !DILocalVariable(name: "list", arg: 1, scope: !16470, file: !137, line: 266, type: !16402)
!16475 = !DILocation(line: 0, scope: !16470)
!16476 = !DILocation(line: 268, column: 15, scope: !16470)
!16477 = !DILocation(line: 268, column: 20, scope: !16470)
!16478 = !DILocation(line: 268, column: 2, scope: !16470)
!16479 = distinct !DISubprogram(name: "z_abort_timeout", scope: !2308, file: !2308, line: 150, type: !16480, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2278, retainedNodes: !16482)
!16480 = !DISubroutineType(types: !16481)
!16481 = !{!105, !2281}
!16482 = !{!16483, !16484, !16485, !16487}
!16483 = !DILocalVariable(name: "to", arg: 1, scope: !16479, file: !2308, line: 150, type: !2281)
!16484 = !DILocalVariable(name: "ret", scope: !16479, file: !2308, line: 152, type: !105)
!16485 = !DILocalVariable(name: "__i", scope: !16486, file: !2308, line: 154, type: !16220)
!16486 = distinct !DILexicalBlock(scope: !16479, file: !2308, line: 154, column: 2)
!16487 = !DILocalVariable(name: "__key", scope: !16486, file: !2308, line: 154, type: !16220)
!16488 = !DILocation(line: 0, scope: !16479)
!16489 = !DILocation(line: 0, scope: !16486)
!16490 = !DILocation(line: 0, scope: !16248, inlinedAt: !16491)
!16491 = distinct !DILocation(line: 154, column: 2, scope: !16486)
!16492 = !DILocation(line: 55, column: 2, scope: !16257, inlinedAt: !16493)
!16493 = distinct !DILocation(line: 145, column: 10, scope: !16248, inlinedAt: !16491)
!16494 = !DILocation(line: 0, scope: !16257, inlinedAt: !16493)
!16495 = !DILocation(line: 148, column: 2, scope: !16265, inlinedAt: !16491)
!16496 = !DILocation(line: 148, column: 2, scope: !16266, inlinedAt: !16491)
!16497 = !DILocation(line: 148, column: 2, scope: !16269, inlinedAt: !16491)
!16498 = !DILocation(line: 160, column: 2, scope: !16248, inlinedAt: !16491)
!16499 = !DILocation(line: 155, column: 7, scope: !16500)
!16500 = distinct !DILexicalBlock(scope: !16501, file: !2308, line: 155, column: 7)
!16501 = distinct !DILexicalBlock(scope: !16502, file: !2308, line: 154, column: 24)
!16502 = distinct !DILexicalBlock(scope: !16486, file: !2308, line: 154, column: 2)
!16503 = !DILocation(line: 155, column: 7, scope: !16501)
!16504 = !DILocation(line: 156, column: 4, scope: !16505)
!16505 = distinct !DILexicalBlock(scope: !16500, file: !2308, line: 155, column: 39)
!16506 = !DILocation(line: 158, column: 3, scope: !16505)
!16507 = !DILocation(line: 0, scope: !16321, inlinedAt: !16508)
!16508 = distinct !DILocation(line: 154, column: 2, scope: !16502)
!16509 = !DILocation(line: 194, column: 2, scope: !16329, inlinedAt: !16508)
!16510 = !DILocation(line: 194, column: 2, scope: !16330, inlinedAt: !16508)
!16511 = !DILocation(line: 194, column: 2, scope: !16333, inlinedAt: !16508)
!16512 = !DILocation(line: 0, scope: !16335, inlinedAt: !16513)
!16513 = distinct !DILocation(line: 215, column: 2, scope: !16321, inlinedAt: !16508)
!16514 = !DILocation(line: 95, column: 2, scope: !16335, inlinedAt: !16513)
!16515 = !DILocation(line: 161, column: 2, scope: !16479)
!16516 = distinct !DISubprogram(name: "remove_timeout", scope: !2308, file: !2308, line: 53, type: !2302, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2278, retainedNodes: !16517)
!16517 = !{!16518}
!16518 = !DILocalVariable(name: "t", arg: 1, scope: !16516, file: !2308, line: 53, type: !2281)
!16519 = !DILocation(line: 0, scope: !16516)
!16520 = !DILocation(line: 55, column: 6, scope: !16521)
!16521 = distinct !DILexicalBlock(scope: !16516, file: !2308, line: 55, column: 6)
!16522 = !DILocation(line: 55, column: 14, scope: !16521)
!16523 = !DILocation(line: 55, column: 6, scope: !16516)
!16524 = !DILocation(line: 56, column: 25, scope: !16525)
!16525 = distinct !DILexicalBlock(scope: !16521, file: !2308, line: 55, column: 23)
!16526 = !DILocation(line: 56, column: 12, scope: !16525)
!16527 = !DILocation(line: 56, column: 19, scope: !16525)
!16528 = !DILocation(line: 57, column: 2, scope: !16525)
!16529 = !DILocation(line: 59, column: 23, scope: !16516)
!16530 = !DILocation(line: 59, column: 2, scope: !16516)
!16531 = !DILocation(line: 60, column: 1, scope: !16516)
!16532 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !137, file: !137, line: 496, type: !16533, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2278, retainedNodes: !16535)
!16533 = !DISubroutineType(types: !16534)
!16534 = !{null, !16365}
!16535 = !{!16536, !16537, !16538}
!16536 = !DILocalVariable(name: "node", arg: 1, scope: !16532, file: !137, line: 496, type: !16365)
!16537 = !DILocalVariable(name: "prev", scope: !16532, file: !137, line: 498, type: !16377)
!16538 = !DILocalVariable(name: "next", scope: !16532, file: !137, line: 499, type: !16377)
!16539 = !DILocation(line: 0, scope: !16532)
!16540 = !DILocation(line: 498, column: 34, scope: !16532)
!16541 = !DILocation(line: 499, column: 34, scope: !16532)
!16542 = !DILocation(line: 501, column: 8, scope: !16532)
!16543 = !DILocation(line: 501, column: 13, scope: !16532)
!16544 = !DILocation(line: 502, column: 8, scope: !16532)
!16545 = !DILocation(line: 502, column: 13, scope: !16532)
!16546 = !DILocation(line: 503, column: 2, scope: !16532)
!16547 = !DILocation(line: 504, column: 1, scope: !16532)
!16548 = distinct !DISubprogram(name: "sys_dnode_init", scope: !137, file: !137, line: 211, type: !16533, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2278, retainedNodes: !16549)
!16549 = !{!16550}
!16550 = !DILocalVariable(name: "node", arg: 1, scope: !16548, file: !137, line: 211, type: !16365)
!16551 = !DILocation(line: 0, scope: !16548)
!16552 = !DILocation(line: 213, column: 8, scope: !16548)
!16553 = !DILocation(line: 213, column: 13, scope: !16548)
!16554 = !DILocation(line: 214, column: 8, scope: !16548)
!16555 = !DILocation(line: 214, column: 13, scope: !16548)
!16556 = !DILocation(line: 215, column: 1, scope: !16548)
!16557 = distinct !DISubprogram(name: "z_timeout_remaining", scope: !2308, file: !2308, line: 183, type: !16558, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2278, retainedNodes: !16562)
!16558 = !DISubroutineType(types: !16559)
!16559 = !{!107, !16560}
!16560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16561, size: 32)
!16561 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2282)
!16562 = !{!16563, !16564, !16565, !16567}
!16563 = !DILocalVariable(name: "timeout", arg: 1, scope: !16557, file: !2308, line: 183, type: !16560)
!16564 = !DILocalVariable(name: "ticks", scope: !16557, file: !2308, line: 185, type: !107)
!16565 = !DILocalVariable(name: "__i", scope: !16566, file: !2308, line: 187, type: !16220)
!16566 = distinct !DILexicalBlock(scope: !16557, file: !2308, line: 187, column: 2)
!16567 = !DILocalVariable(name: "__key", scope: !16566, file: !2308, line: 187, type: !16220)
!16568 = !DILocation(line: 0, scope: !16557)
!16569 = !DILocation(line: 0, scope: !16566)
!16570 = !DILocation(line: 0, scope: !16248, inlinedAt: !16571)
!16571 = distinct !DILocation(line: 187, column: 2, scope: !16566)
!16572 = !DILocation(line: 55, column: 2, scope: !16257, inlinedAt: !16573)
!16573 = distinct !DILocation(line: 145, column: 10, scope: !16248, inlinedAt: !16571)
!16574 = !DILocation(line: 0, scope: !16257, inlinedAt: !16573)
!16575 = !DILocation(line: 148, column: 2, scope: !16265, inlinedAt: !16571)
!16576 = !DILocation(line: 148, column: 2, scope: !16266, inlinedAt: !16571)
!16577 = !DILocation(line: 148, column: 2, scope: !16269, inlinedAt: !16571)
!16578 = !DILocation(line: 160, column: 2, scope: !16248, inlinedAt: !16571)
!16579 = !DILocation(line: 188, column: 11, scope: !16580)
!16580 = distinct !DILexicalBlock(scope: !16581, file: !2308, line: 187, column: 24)
!16581 = distinct !DILexicalBlock(scope: !16566, file: !2308, line: 187, column: 2)
!16582 = !DILocation(line: 0, scope: !16321, inlinedAt: !16583)
!16583 = distinct !DILocation(line: 187, column: 2, scope: !16581)
!16584 = !DILocation(line: 194, column: 2, scope: !16329, inlinedAt: !16583)
!16585 = !DILocation(line: 194, column: 2, scope: !16330, inlinedAt: !16583)
!16586 = !DILocation(line: 194, column: 2, scope: !16333, inlinedAt: !16583)
!16587 = !DILocation(line: 0, scope: !16335, inlinedAt: !16588)
!16588 = distinct !DILocation(line: 215, column: 2, scope: !16321, inlinedAt: !16583)
!16589 = !DILocation(line: 95, column: 2, scope: !16335, inlinedAt: !16588)
!16590 = !DILocation(line: 191, column: 2, scope: !16557)
!16591 = distinct !DISubprogram(name: "timeout_rem", scope: !2308, file: !2308, line: 165, type: !16558, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2278, retainedNodes: !16592)
!16592 = !{!16593, !16594, !16595}
!16593 = !DILocalVariable(name: "timeout", arg: 1, scope: !16591, file: !2308, line: 165, type: !16560)
!16594 = !DILocalVariable(name: "ticks", scope: !16591, file: !2308, line: 167, type: !107)
!16595 = !DILocalVariable(name: "t", scope: !16596, file: !2308, line: 173, type: !2281)
!16596 = distinct !DILexicalBlock(scope: !16591, file: !2308, line: 173, column: 2)
!16597 = !DILocation(line: 0, scope: !16591)
!16598 = !DILocation(line: 169, column: 6, scope: !16599)
!16599 = distinct !DILexicalBlock(scope: !16591, file: !2308, line: 169, column: 6)
!16600 = !DILocation(line: 169, column: 6, scope: !16591)
!16601 = !DILocation(line: 173, column: 28, scope: !16596)
!16602 = !DILocation(line: 0, scope: !16596)
!16603 = !DILocation(line: 173, column: 39, scope: !16604)
!16604 = distinct !DILexicalBlock(scope: !16596, file: !2308, line: 173, column: 2)
!16605 = !DILocation(line: 173, column: 2, scope: !16596)
!16606 = !DILocation(line: 174, column: 15, scope: !16607)
!16607 = distinct !DILexicalBlock(scope: !16604, file: !2308, line: 173, column: 61)
!16608 = !DILocation(line: 174, column: 9, scope: !16607)
!16609 = !DILocation(line: 175, column: 15, scope: !16610)
!16610 = distinct !DILexicalBlock(scope: !16607, file: !2308, line: 175, column: 7)
!16611 = !DILocation(line: 175, column: 7, scope: !16607)
!16612 = !DILocation(line: 173, column: 52, scope: !16604)
!16613 = distinct !{!16613, !16605, !16614}
!16614 = !DILocation(line: 178, column: 2, scope: !16596)
!16615 = !DILocation(line: 180, column: 17, scope: !16591)
!16616 = !DILocation(line: 180, column: 15, scope: !16591)
!16617 = !DILocation(line: 180, column: 2, scope: !16591)
!16618 = !DILocation(line: 181, column: 1, scope: !16591)
!16619 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !12591, file: !12591, line: 35, type: !16620, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2278, retainedNodes: !16622)
!16620 = !DISubroutineType(types: !16621)
!16621 = !{!911, !16560}
!16622 = !{!16623}
!16623 = !DILocalVariable(name: "to", arg: 1, scope: !16619, file: !12591, line: 35, type: !16560)
!16624 = !DILocation(line: 0, scope: !16619)
!16625 = !DILocation(line: 37, column: 35, scope: !16619)
!16626 = !DILocation(line: 37, column: 10, scope: !16619)
!16627 = !DILocation(line: 37, column: 9, scope: !16619)
!16628 = !DILocation(line: 37, column: 2, scope: !16619)
!16629 = distinct !DISubprogram(name: "z_timeout_expires", scope: !2308, file: !2308, line: 194, type: !16558, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2278, retainedNodes: !16630)
!16630 = !{!16631, !16632, !16633, !16635}
!16631 = !DILocalVariable(name: "timeout", arg: 1, scope: !16629, file: !2308, line: 194, type: !16560)
!16632 = !DILocalVariable(name: "ticks", scope: !16629, file: !2308, line: 196, type: !107)
!16633 = !DILocalVariable(name: "__i", scope: !16634, file: !2308, line: 198, type: !16220)
!16634 = distinct !DILexicalBlock(scope: !16629, file: !2308, line: 198, column: 2)
!16635 = !DILocalVariable(name: "__key", scope: !16634, file: !2308, line: 198, type: !16220)
!16636 = !DILocation(line: 0, scope: !16629)
!16637 = !DILocation(line: 0, scope: !16634)
!16638 = !DILocation(line: 0, scope: !16248, inlinedAt: !16639)
!16639 = distinct !DILocation(line: 198, column: 2, scope: !16634)
!16640 = !DILocation(line: 55, column: 2, scope: !16257, inlinedAt: !16641)
!16641 = distinct !DILocation(line: 145, column: 10, scope: !16248, inlinedAt: !16639)
!16642 = !DILocation(line: 0, scope: !16257, inlinedAt: !16641)
!16643 = !DILocation(line: 148, column: 2, scope: !16265, inlinedAt: !16639)
!16644 = !DILocation(line: 148, column: 2, scope: !16266, inlinedAt: !16639)
!16645 = !DILocation(line: 148, column: 2, scope: !16269, inlinedAt: !16639)
!16646 = !DILocation(line: 160, column: 2, scope: !16248, inlinedAt: !16639)
!16647 = !DILocation(line: 199, column: 11, scope: !16648)
!16648 = distinct !DILexicalBlock(scope: !16649, file: !2308, line: 198, column: 24)
!16649 = distinct !DILexicalBlock(scope: !16634, file: !2308, line: 198, column: 2)
!16650 = !DILocation(line: 199, column: 23, scope: !16648)
!16651 = !DILocation(line: 0, scope: !16321, inlinedAt: !16652)
!16652 = distinct !DILocation(line: 198, column: 2, scope: !16649)
!16653 = !DILocation(line: 194, column: 2, scope: !16329, inlinedAt: !16652)
!16654 = !DILocation(line: 194, column: 2, scope: !16330, inlinedAt: !16652)
!16655 = !DILocation(line: 194, column: 2, scope: !16333, inlinedAt: !16652)
!16656 = !DILocation(line: 0, scope: !16335, inlinedAt: !16657)
!16657 = distinct !DILocation(line: 215, column: 2, scope: !16321, inlinedAt: !16652)
!16658 = !DILocation(line: 95, column: 2, scope: !16335, inlinedAt: !16657)
!16659 = !DILocation(line: 199, column: 21, scope: !16648)
!16660 = !DILocation(line: 202, column: 2, scope: !16629)
!16661 = distinct !DISubprogram(name: "z_get_next_timeout_expiry", scope: !2308, file: !2308, line: 205, type: !16354, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2278, retainedNodes: !16662)
!16662 = !{!16663, !16664, !16666}
!16663 = !DILocalVariable(name: "ret", scope: !16661, file: !2308, line: 207, type: !116)
!16664 = !DILocalVariable(name: "__i", scope: !16665, file: !2308, line: 209, type: !16220)
!16665 = distinct !DILexicalBlock(scope: !16661, file: !2308, line: 209, column: 2)
!16666 = !DILocalVariable(name: "__key", scope: !16665, file: !2308, line: 209, type: !16220)
!16667 = !DILocation(line: 0, scope: !16661)
!16668 = !DILocation(line: 0, scope: !16665)
!16669 = !DILocation(line: 0, scope: !16248, inlinedAt: !16670)
!16670 = distinct !DILocation(line: 209, column: 2, scope: !16665)
!16671 = !DILocation(line: 55, column: 2, scope: !16257, inlinedAt: !16672)
!16672 = distinct !DILocation(line: 145, column: 10, scope: !16248, inlinedAt: !16670)
!16673 = !DILocation(line: 0, scope: !16257, inlinedAt: !16672)
!16674 = !DILocation(line: 148, column: 2, scope: !16265, inlinedAt: !16670)
!16675 = !DILocation(line: 148, column: 2, scope: !16266, inlinedAt: !16670)
!16676 = !DILocation(line: 148, column: 2, scope: !16269, inlinedAt: !16670)
!16677 = !DILocation(line: 160, column: 2, scope: !16248, inlinedAt: !16670)
!16678 = !DILocation(line: 210, column: 9, scope: !16679)
!16679 = distinct !DILexicalBlock(scope: !16680, file: !2308, line: 209, column: 24)
!16680 = distinct !DILexicalBlock(scope: !16665, file: !2308, line: 209, column: 2)
!16681 = !DILocation(line: 0, scope: !16321, inlinedAt: !16682)
!16682 = distinct !DILocation(line: 209, column: 2, scope: !16680)
!16683 = !DILocation(line: 194, column: 2, scope: !16329, inlinedAt: !16682)
!16684 = !DILocation(line: 194, column: 2, scope: !16330, inlinedAt: !16682)
!16685 = !DILocation(line: 194, column: 2, scope: !16333, inlinedAt: !16682)
!16686 = !DILocation(line: 0, scope: !16335, inlinedAt: !16687)
!16687 = distinct !DILocation(line: 215, column: 2, scope: !16321, inlinedAt: !16682)
!16688 = !DILocation(line: 95, column: 2, scope: !16335, inlinedAt: !16687)
!16689 = !DILocation(line: 212, column: 2, scope: !16661)
!16690 = distinct !DISubprogram(name: "z_set_timeout_expiry", scope: !2308, file: !2308, line: 215, type: !10022, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2278, retainedNodes: !16691)
!16691 = !{!16692, !16693, !16694, !16696, !16697, !16700, !16701}
!16692 = !DILocalVariable(name: "ticks", arg: 1, scope: !16690, file: !2308, line: 215, type: !116)
!16693 = !DILocalVariable(name: "is_idle", arg: 2, scope: !16690, file: !2308, line: 215, type: !911)
!16694 = !DILocalVariable(name: "__i", scope: !16695, file: !2308, line: 217, type: !16220)
!16695 = distinct !DILexicalBlock(scope: !16690, file: !2308, line: 217, column: 2)
!16696 = !DILocalVariable(name: "__key", scope: !16695, file: !2308, line: 217, type: !16220)
!16697 = !DILocalVariable(name: "next_to", scope: !16698, file: !2308, line: 218, type: !105)
!16698 = distinct !DILexicalBlock(scope: !16699, file: !2308, line: 217, column: 24)
!16699 = distinct !DILexicalBlock(scope: !16695, file: !2308, line: 217, column: 2)
!16700 = !DILocalVariable(name: "sooner", scope: !16698, file: !2308, line: 219, type: !911)
!16701 = !DILocalVariable(name: "imminent", scope: !16698, file: !2308, line: 221, type: !911)
!16702 = !DILocation(line: 0, scope: !16690)
!16703 = !DILocation(line: 0, scope: !16695)
!16704 = !DILocation(line: 0, scope: !16248, inlinedAt: !16705)
!16705 = distinct !DILocation(line: 217, column: 2, scope: !16695)
!16706 = !DILocation(line: 55, column: 2, scope: !16257, inlinedAt: !16707)
!16707 = distinct !DILocation(line: 145, column: 10, scope: !16248, inlinedAt: !16705)
!16708 = !DILocation(line: 0, scope: !16257, inlinedAt: !16707)
!16709 = !DILocation(line: 148, column: 2, scope: !16265, inlinedAt: !16705)
!16710 = !DILocation(line: 148, column: 2, scope: !16266, inlinedAt: !16705)
!16711 = !DILocation(line: 148, column: 2, scope: !16269, inlinedAt: !16705)
!16712 = !DILocation(line: 160, column: 2, scope: !16248, inlinedAt: !16705)
!16713 = !DILocation(line: 218, column: 17, scope: !16698)
!16714 = !DILocation(line: 0, scope: !16698)
!16715 = !DILocation(line: 221, column: 27, scope: !16698)
!16716 = !DILocation(line: 233, column: 17, scope: !16717)
!16717 = distinct !DILexicalBlock(scope: !16698, file: !2308, line: 233, column: 7)
!16718 = !DILocation(line: 234, column: 26, scope: !16719)
!16719 = distinct !DILexicalBlock(scope: !16717, file: !2308, line: 233, column: 56)
!16720 = !DILocation(line: 234, column: 4, scope: !16719)
!16721 = !DILocation(line: 235, column: 3, scope: !16719)
!16722 = !DILocation(line: 0, scope: !16321, inlinedAt: !16723)
!16723 = distinct !DILocation(line: 217, column: 2, scope: !16699)
!16724 = !DILocation(line: 194, column: 2, scope: !16329, inlinedAt: !16723)
!16725 = !DILocation(line: 194, column: 2, scope: !16330, inlinedAt: !16723)
!16726 = !DILocation(line: 194, column: 2, scope: !16333, inlinedAt: !16723)
!16727 = !DILocation(line: 0, scope: !16335, inlinedAt: !16728)
!16728 = distinct !DILocation(line: 215, column: 2, scope: !16321, inlinedAt: !16723)
!16729 = !DILocation(line: 95, column: 2, scope: !16335, inlinedAt: !16728)
!16730 = !DILocation(line: 237, column: 1, scope: !16690)
!16731 = distinct !DISubprogram(name: "sys_clock_announce", scope: !2308, file: !2308, line: 239, type: !16732, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2278, retainedNodes: !16734)
!16732 = !DISubroutineType(types: !16733)
!16733 = !{null, !116}
!16734 = !{!16735, !16736, !16737, !16739}
!16735 = !DILocalVariable(name: "ticks", arg: 1, scope: !16731, file: !2308, line: 239, type: !116)
!16736 = !DILocalVariable(name: "key", scope: !16731, file: !2308, line: 245, type: !16220)
!16737 = !DILocalVariable(name: "t", scope: !16738, file: !2308, line: 262, type: !2281)
!16738 = distinct !DILexicalBlock(scope: !16731, file: !2308, line: 261, column: 67)
!16739 = !DILocalVariable(name: "dt", scope: !16738, file: !2308, line: 263, type: !105)
!16740 = !DILocation(line: 0, scope: !16731)
!16741 = !DILocation(line: 242, column: 2, scope: !16731)
!16742 = !DILocation(line: 0, scope: !16248, inlinedAt: !16743)
!16743 = distinct !DILocation(line: 245, column: 25, scope: !16731)
!16744 = !DILocation(line: 55, column: 2, scope: !16257, inlinedAt: !16745)
!16745 = distinct !DILocation(line: 145, column: 10, scope: !16248, inlinedAt: !16743)
!16746 = !DILocation(line: 0, scope: !16257, inlinedAt: !16745)
!16747 = !DILocation(line: 148, column: 2, scope: !16265, inlinedAt: !16743)
!16748 = !DILocation(line: 148, column: 2, scope: !16266, inlinedAt: !16743)
!16749 = !DILocation(line: 148, column: 2, scope: !16269, inlinedAt: !16743)
!16750 = !DILocation(line: 160, column: 2, scope: !16248, inlinedAt: !16743)
!16751 = !DILocation(line: 261, column: 9, scope: !16731)
!16752 = !DILocation(line: 261, column: 17, scope: !16731)
!16753 = !DILocation(line: 261, column: 25, scope: !16731)
!16754 = !DILocation(line: 261, column: 37, scope: !16731)
!16755 = !DILocation(line: 261, column: 47, scope: !16731)
!16756 = !DILocation(line: 261, column: 44, scope: !16731)
!16757 = !DILocation(line: 261, column: 2, scope: !16731)
!16758 = !DILocation(line: 0, scope: !16738)
!16759 = !DILocation(line: 263, column: 12, scope: !16738)
!16760 = !DILocation(line: 265, column: 16, scope: !16738)
!16761 = !DILocation(line: 265, column: 13, scope: !16738)
!16762 = !DILocation(line: 266, column: 13, scope: !16738)
!16763 = !DILocation(line: 267, column: 3, scope: !16738)
!16764 = !DILocation(line: 0, scope: !16321, inlinedAt: !16765)
!16765 = distinct !DILocation(line: 269, column: 3, scope: !16738)
!16766 = !DILocation(line: 194, column: 2, scope: !16329, inlinedAt: !16765)
!16767 = !DILocation(line: 194, column: 2, scope: !16330, inlinedAt: !16765)
!16768 = !DILocation(line: 194, column: 2, scope: !16333, inlinedAt: !16765)
!16769 = !DILocation(line: 0, scope: !16335, inlinedAt: !16770)
!16770 = distinct !DILocation(line: 215, column: 2, scope: !16321, inlinedAt: !16765)
!16771 = !DILocation(line: 95, column: 2, scope: !16335, inlinedAt: !16770)
!16772 = !DILocation(line: 270, column: 6, scope: !16738)
!16773 = !DILocation(line: 270, column: 3, scope: !16738)
!16774 = !DILocation(line: 0, scope: !16248, inlinedAt: !16775)
!16775 = distinct !DILocation(line: 271, column: 9, scope: !16738)
!16776 = !DILocation(line: 55, column: 2, scope: !16257, inlinedAt: !16777)
!16777 = distinct !DILocation(line: 145, column: 10, scope: !16248, inlinedAt: !16775)
!16778 = !DILocation(line: 0, scope: !16257, inlinedAt: !16777)
!16779 = !DILocation(line: 148, column: 2, scope: !16265, inlinedAt: !16775)
!16780 = !DILocation(line: 148, column: 2, scope: !16266, inlinedAt: !16775)
!16781 = !DILocation(line: 148, column: 2, scope: !16269, inlinedAt: !16775)
!16782 = !DILocation(line: 160, column: 2, scope: !16248, inlinedAt: !16775)
!16783 = !DILocation(line: 272, column: 22, scope: !16738)
!16784 = distinct !{!16784, !16757, !16785}
!16785 = !DILocation(line: 273, column: 2, scope: !16731)
!16786 = !DILocation(line: 276, column: 19, scope: !16787)
!16787 = distinct !DILexicalBlock(scope: !16788, file: !2308, line: 275, column: 23)
!16788 = distinct !DILexicalBlock(scope: !16731, file: !2308, line: 275, column: 6)
!16789 = !DILocation(line: 277, column: 2, scope: !16787)
!16790 = !DILocation(line: 279, column: 15, scope: !16731)
!16791 = !DILocation(line: 279, column: 12, scope: !16731)
!16792 = !DILocation(line: 280, column: 21, scope: !16731)
!16793 = !DILocation(line: 282, column: 24, scope: !16731)
!16794 = !DILocation(line: 282, column: 2, scope: !16731)
!16795 = !DILocation(line: 0, scope: !16321, inlinedAt: !16796)
!16796 = distinct !DILocation(line: 284, column: 2, scope: !16731)
!16797 = !DILocation(line: 194, column: 2, scope: !16329, inlinedAt: !16796)
!16798 = !DILocation(line: 194, column: 2, scope: !16330, inlinedAt: !16796)
!16799 = !DILocation(line: 194, column: 2, scope: !16333, inlinedAt: !16796)
!16800 = !DILocation(line: 0, scope: !16335, inlinedAt: !16801)
!16801 = distinct !DILocation(line: 215, column: 2, scope: !16321, inlinedAt: !16796)
!16802 = !DILocation(line: 95, column: 2, scope: !16335, inlinedAt: !16801)
!16803 = !DILocation(line: 285, column: 1, scope: !16731)
!16804 = distinct !DISubprogram(name: "sys_clock_tick_get", scope: !2308, file: !2308, line: 287, type: !16805, scopeLine: 288, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2278, retainedNodes: !16807)
!16805 = !DISubroutineType(types: !16806)
!16806 = !{!109}
!16807 = !{!16808, !16809, !16811}
!16808 = !DILocalVariable(name: "t", scope: !16804, file: !2308, line: 289, type: !114)
!16809 = !DILocalVariable(name: "__i", scope: !16810, file: !2308, line: 291, type: !16220)
!16810 = distinct !DILexicalBlock(scope: !16804, file: !2308, line: 291, column: 2)
!16811 = !DILocalVariable(name: "__key", scope: !16810, file: !2308, line: 291, type: !16220)
!16812 = !DILocation(line: 0, scope: !16804)
!16813 = !DILocation(line: 0, scope: !16810)
!16814 = !DILocation(line: 0, scope: !16248, inlinedAt: !16815)
!16815 = distinct !DILocation(line: 291, column: 2, scope: !16810)
!16816 = !DILocation(line: 55, column: 2, scope: !16257, inlinedAt: !16817)
!16817 = distinct !DILocation(line: 145, column: 10, scope: !16248, inlinedAt: !16815)
!16818 = !DILocation(line: 0, scope: !16257, inlinedAt: !16817)
!16819 = !DILocation(line: 148, column: 2, scope: !16265, inlinedAt: !16815)
!16820 = !DILocation(line: 148, column: 2, scope: !16266, inlinedAt: !16815)
!16821 = !DILocation(line: 148, column: 2, scope: !16269, inlinedAt: !16815)
!16822 = !DILocation(line: 160, column: 2, scope: !16248, inlinedAt: !16815)
!16823 = !DILocation(line: 292, column: 7, scope: !16824)
!16824 = distinct !DILexicalBlock(scope: !16825, file: !2308, line: 291, column: 24)
!16825 = distinct !DILexicalBlock(scope: !16810, file: !2308, line: 291, column: 2)
!16826 = !DILocation(line: 292, column: 19, scope: !16824)
!16827 = !DILocation(line: 0, scope: !16321, inlinedAt: !16828)
!16828 = distinct !DILocation(line: 291, column: 2, scope: !16825)
!16829 = !DILocation(line: 194, column: 2, scope: !16329, inlinedAt: !16828)
!16830 = !DILocation(line: 194, column: 2, scope: !16330, inlinedAt: !16828)
!16831 = !DILocation(line: 194, column: 2, scope: !16333, inlinedAt: !16828)
!16832 = !DILocation(line: 0, scope: !16335, inlinedAt: !16833)
!16833 = distinct !DILocation(line: 215, column: 2, scope: !16321, inlinedAt: !16828)
!16834 = !DILocation(line: 95, column: 2, scope: !16335, inlinedAt: !16833)
!16835 = !DILocation(line: 292, column: 17, scope: !16824)
!16836 = !DILocation(line: 294, column: 2, scope: !16804)
!16837 = distinct !DISubprogram(name: "sys_clock_tick_get_32", scope: !2308, file: !2308, line: 297, type: !389, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2278, retainedNodes: !391)
!16838 = !DILocation(line: 300, column: 19, scope: !16837)
!16839 = !DILocation(line: 300, column: 9, scope: !16837)
!16840 = !DILocation(line: 300, column: 2, scope: !16837)
!16841 = distinct !DISubprogram(name: "z_impl_k_uptime_ticks", scope: !2308, file: !2308, line: 306, type: !16805, scopeLine: 307, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2278, retainedNodes: !391)
!16842 = !DILocation(line: 308, column: 9, scope: !16841)
!16843 = !DILocation(line: 308, column: 2, scope: !16841)
!16844 = distinct !DISubprogram(name: "z_impl_k_busy_wait", scope: !2308, file: !2308, line: 319, type: !7620, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2278, retainedNodes: !16845)
!16845 = !{!16846, !16847, !16848, !16849}
!16846 = !DILocalVariable(name: "usec_to_wait", arg: 1, scope: !16844, file: !2308, line: 319, type: !113)
!16847 = !DILocalVariable(name: "start_cycles", scope: !16844, file: !2308, line: 328, type: !113)
!16848 = !DILocalVariable(name: "cycles_to_wait", scope: !16844, file: !2308, line: 331, type: !113)
!16849 = !DILocalVariable(name: "current_cycles", scope: !16850, file: !2308, line: 338, type: !113)
!16850 = distinct !DILexicalBlock(scope: !16851, file: !2308, line: 337, column: 11)
!16851 = distinct !DILexicalBlock(scope: !16852, file: !2308, line: 337, column: 2)
!16852 = distinct !DILexicalBlock(scope: !16844, file: !2308, line: 337, column: 2)
!16853 = !DILocation(line: 0, scope: !16844)
!16854 = !DILocation(line: 322, column: 19, scope: !16855)
!16855 = distinct !DILexicalBlock(scope: !16844, file: !2308, line: 322, column: 6)
!16856 = !DILocation(line: 322, column: 6, scope: !16844)
!16857 = !DILocation(line: 328, column: 26, scope: !16844)
!16858 = !DILocation(line: 333, column: 43, scope: !16844)
!16859 = !DILocation(line: 337, column: 2, scope: !16844)
!16860 = !DILocation(line: 338, column: 29, scope: !16850)
!16861 = !DILocation(line: 0, scope: !16850)
!16862 = !DILocation(line: 341, column: 23, scope: !16863)
!16863 = distinct !DILexicalBlock(scope: !16850, file: !2308, line: 341, column: 7)
!16864 = !DILocation(line: 341, column: 39, scope: !16863)
!16865 = !DILocation(line: 349, column: 1, scope: !16844)
!16866 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !122, file: !122, line: 1675, type: !389, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2278, retainedNodes: !391)
!16867 = !DILocation(line: 1677, column: 9, scope: !16866)
!16868 = !DILocation(line: 1677, column: 2, scope: !16866)
!16869 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !3267, file: !3267, line: 24, type: !389, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2278, retainedNodes: !391)
!16870 = !DILocation(line: 26, column: 9, scope: !16869)
!16871 = !DILocation(line: 26, column: 2, scope: !16869)
!16872 = distinct !DISubprogram(name: "sys_clock_timeout_end_calc", scope: !2308, file: !2308, line: 364, type: !16873, scopeLine: 365, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2278, retainedNodes: !16875)
!16873 = !DISubroutineType(types: !16874)
!16874 = !{!114, !16210}
!16875 = !{!16876, !16877}
!16876 = !DILocalVariable(name: "timeout", arg: 1, scope: !16872, file: !2308, line: 364, type: !16210)
!16877 = !DILocalVariable(name: "dt", scope: !16872, file: !2308, line: 366, type: !107)
!16878 = !DILocation(line: 0, scope: !16872)
!16879 = !DILocation(line: 368, column: 6, scope: !16872)
!16880 = !DILocation(line: 371, column: 10, scope: !16881)
!16881 = distinct !DILexicalBlock(scope: !16882, file: !2308, line: 370, column: 47)
!16882 = distinct !DILexicalBlock(scope: !16883, file: !2308, line: 370, column: 13)
!16883 = distinct !DILexicalBlock(scope: !16872, file: !2308, line: 368, column: 6)
!16884 = !DILocation(line: 371, column: 3, scope: !16881)
!16885 = !DILocation(line: 376, column: 58, scope: !16886)
!16886 = distinct !DILexicalBlock(scope: !16887, file: !2308, line: 376, column: 7)
!16887 = distinct !DILexicalBlock(scope: !16882, file: !2308, line: 372, column: 9)
!16888 = !DILocation(line: 376, column: 7, scope: !16887)
!16889 = !DILocation(line: 376, column: 43, scope: !16886)
!16890 = !DILocation(line: 377, column: 4, scope: !16891)
!16891 = distinct !DILexicalBlock(scope: !16886, file: !2308, line: 376, column: 64)
!16892 = !DILocation(line: 379, column: 10, scope: !16887)
!16893 = !DILocation(line: 379, column: 33, scope: !16887)
!16894 = !DILocation(line: 379, column: 31, scope: !16887)
!16895 = !DILocation(line: 379, column: 3, scope: !16887)
!16896 = !DILocation(line: 0, scope: !16883)
!16897 = !DILocation(line: 381, column: 1, scope: !16872)
!16898 = distinct !DISubprogram(name: "boot_banner", scope: !16899, file: !16899, line: 26, type: !260, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3089, retainedNodes: !391)
!16899 = !DIFile(filename: "zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16900 = !DILocation(line: 34, column: 2, scope: !16898)
!16901 = !DILocation(line: 36, column: 1, scope: !16898)
!16902 = distinct !DISubprogram(name: "statics_init", scope: !2338, file: !2338, line: 21, type: !867, scopeLine: 22, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2319, retainedNodes: !16903)
!16903 = !{!16904, !16905}
!16904 = !DILocalVariable(name: "unused", arg: 1, scope: !16902, file: !2338, line: 21, type: !869)
!16905 = !DILocalVariable(name: "h", scope: !16906, file: !2338, line: 24, type: !16907)
!16906 = distinct !DILexicalBlock(scope: !16902, file: !2338, line: 24, column: 2)
!16907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16908, size: 32)
!16908 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !122, line: 5073, size: 192, elements: !16909)
!16909 = !{!16910, !16916, !16922}
!16910 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !16908, file: !122, line: 5074, baseType: !16911, size: 96)
!16911 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !220, line: 56, size: 96, elements: !16912)
!16912 = !{!16913, !16914, !16915}
!16913 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !16911, file: !220, line: 57, baseType: !223, size: 32)
!16914 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !16911, file: !220, line: 58, baseType: !104, size: 32, offset: 32)
!16915 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !16911, file: !220, line: 59, baseType: !111, size: 32, offset: 64)
!16916 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !16908, file: !122, line: 5075, baseType: !16917, size: 64, offset: 96)
!16917 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !163, line: 233, baseType: !16918)
!16918 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !163, line: 231, size: 64, elements: !16919)
!16919 = !{!16920}
!16920 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !16918, file: !163, line: 232, baseType: !16921, size: 64)
!16921 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !137, line: 48, baseType: !2324)
!16922 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !16908, file: !122, line: 5076, baseType: !16923, size: 32, offset: 160)
!16923 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !230, line: 43, size: 32, elements: !16924)
!16924 = !{!16925}
!16925 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !16923, file: !230, line: 52, baseType: !22, size: 32)
!16926 = !DILocation(line: 0, scope: !16902)
!16927 = !DILocation(line: 0, scope: !16906)
!16928 = !DILocation(line: 24, column: 2, scope: !16929)
!16929 = distinct !DILexicalBlock(scope: !16930, file: !2338, line: 24, column: 2)
!16930 = distinct !DILexicalBlock(scope: !16931, file: !2338, line: 24, column: 2)
!16931 = distinct !DILexicalBlock(scope: !16906, file: !2338, line: 24, column: 2)
!16932 = !DILocation(line: 24, column: 2, scope: !16933)
!16933 = distinct !DILexicalBlock(scope: !16934, file: !2338, line: 24, column: 2)
!16934 = distinct !DILexicalBlock(scope: !16929, file: !2338, line: 24, column: 2)
!16935 = !DILocation(line: 24, column: 2, scope: !16930)
!16936 = !DILocation(line: 24, column: 2, scope: !16906)
!16937 = !DILocation(line: 52, column: 2, scope: !16902)
!16938 = !DILocation(line: 49, column: 27, scope: !16939)
!16939 = distinct !DILexicalBlock(scope: !16940, file: !2338, line: 48, column: 3)
!16940 = distinct !DILexicalBlock(scope: !16931, file: !2338, line: 24, column: 36)
!16941 = !DILocation(line: 49, column: 45, scope: !16939)
!16942 = !DILocation(line: 49, column: 4, scope: !16939)
!16943 = !DILocation(line: 24, column: 2, scope: !16931)
!16944 = !DILocation(line: 24, column: 2, scope: !16934)
!16945 = distinct !{!16945, !16936, !16946}
!16946 = !DILocation(line: 51, column: 2, scope: !16906)
!16947 = distinct !DISubprogram(name: "k_heap_init", scope: !2338, file: !2338, line: 13, type: !16948, scopeLine: 14, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2319, retainedNodes: !16950)
!16948 = !DISubroutineType(types: !16949)
!16949 = !{null, !16907, !104, !111}
!16950 = !{!16951, !16952, !16953}
!16951 = !DILocalVariable(name: "h", arg: 1, scope: !16947, file: !2338, line: 13, type: !16907)
!16952 = !DILocalVariable(name: "mem", arg: 2, scope: !16947, file: !2338, line: 13, type: !104)
!16953 = !DILocalVariable(name: "bytes", arg: 3, scope: !16947, file: !2338, line: 13, type: !111)
!16954 = !DILocation(line: 0, scope: !16947)
!16955 = !DILocation(line: 15, column: 19, scope: !16947)
!16956 = !DILocation(line: 15, column: 2, scope: !16947)
!16957 = !DILocation(line: 16, column: 20, scope: !16947)
!16958 = !DILocation(line: 16, column: 2, scope: !16947)
!16959 = !DILocation(line: 19, column: 1, scope: !16947)
!16960 = distinct !DISubprogram(name: "z_waitq_init", scope: !12539, file: !12539, line: 47, type: !16961, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2319, retainedNodes: !16964)
!16961 = !DISubroutineType(types: !16962)
!16962 = !{null, !16963}
!16963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16917, size: 32)
!16964 = !{!16965}
!16965 = !DILocalVariable(name: "w", arg: 1, scope: !16960, file: !12539, line: 47, type: !16963)
!16966 = !DILocation(line: 0, scope: !16960)
!16967 = !DILocation(line: 49, column: 21, scope: !16960)
!16968 = !DILocation(line: 49, column: 2, scope: !16960)
!16969 = !DILocation(line: 50, column: 1, scope: !16960)
!16970 = distinct !DISubprogram(name: "sys_dlist_init", scope: !137, file: !137, line: 197, type: !16971, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2319, retainedNodes: !16974)
!16971 = !DISubroutineType(types: !16972)
!16972 = !{null, !16973}
!16973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16921, size: 32)
!16974 = !{!16975}
!16975 = !DILocalVariable(name: "list", arg: 1, scope: !16970, file: !137, line: 197, type: !16973)
!16976 = !DILocation(line: 0, scope: !16970)
!16977 = !DILocation(line: 199, column: 8, scope: !16970)
!16978 = !DILocation(line: 199, column: 13, scope: !16970)
!16979 = !DILocation(line: 200, column: 8, scope: !16970)
!16980 = !DILocation(line: 200, column: 13, scope: !16970)
!16981 = !DILocation(line: 201, column: 1, scope: !16970)
!16982 = distinct !DISubprogram(name: "k_heap_aligned_alloc", scope: !2338, file: !2338, line: 64, type: !16983, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2319, retainedNodes: !16989)
!16983 = !DISubroutineType(types: !16984)
!16984 = !{!104, !16907, !111, !111, !16985}
!16985 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !108, line: 67, baseType: !16986)
!16986 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !108, line: 65, size: 64, elements: !16987)
!16987 = !{!16988}
!16988 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !16986, file: !108, line: 66, baseType: !107, size: 64)
!16989 = !{!16990, !16991, !16992, !16993, !16994, !16995, !16996, !16997, !17002}
!16990 = !DILocalVariable(name: "h", arg: 1, scope: !16982, file: !2338, line: 64, type: !16907)
!16991 = !DILocalVariable(name: "align", arg: 2, scope: !16982, file: !2338, line: 64, type: !111)
!16992 = !DILocalVariable(name: "bytes", arg: 3, scope: !16982, file: !2338, line: 64, type: !111)
!16993 = !DILocalVariable(name: "timeout", arg: 4, scope: !16982, file: !2338, line: 65, type: !16985)
!16994 = !DILocalVariable(name: "now", scope: !16982, file: !2338, line: 67, type: !109)
!16995 = !DILocalVariable(name: "end", scope: !16982, file: !2338, line: 67, type: !109)
!16996 = !DILocalVariable(name: "ret", scope: !16982, file: !2338, line: 68, type: !104)
!16997 = !DILocalVariable(name: "key", scope: !16982, file: !2338, line: 72, type: !16998)
!16998 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !230, line: 106, baseType: !16999)
!16999 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !230, line: 32, size: 32, elements: !17000)
!17000 = !{!17001}
!17001 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !16999, file: !230, line: 33, baseType: !105, size: 32)
!17002 = !DILocalVariable(name: "blocked_alloc", scope: !16982, file: !2338, line: 78, type: !911)
!17003 = !DILocation(line: 0, scope: !16982)
!17004 = !DILocation(line: 67, column: 21, scope: !16982)
!17005 = !DILocation(line: 70, column: 8, scope: !16982)
!17006 = !DILocation(line: 72, column: 41, scope: !16982)
!17007 = !DILocalVariable(name: "l", arg: 1, scope: !17008, file: !230, line: 136, type: !17011)
!17008 = distinct !DISubprogram(name: "k_spin_lock", scope: !230, file: !230, line: 136, type: !17009, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2319, retainedNodes: !17012)
!17009 = !DISubroutineType(types: !17010)
!17010 = !{!16998, !17011}
!17011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16923, size: 32)
!17012 = !{!17007, !17013}
!17013 = !DILocalVariable(name: "k", scope: !17008, file: !230, line: 139, type: !16998)
!17014 = !DILocation(line: 0, scope: !17008, inlinedAt: !17015)
!17015 = distinct !DILocation(line: 72, column: 25, scope: !16982)
!17016 = !DILocation(line: 55, column: 2, scope: !17017, inlinedAt: !17021)
!17017 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7644, file: !7644, line: 42, type: !9346, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2319, retainedNodes: !17018)
!17018 = !{!17019, !17020}
!17019 = !DILocalVariable(name: "key", scope: !17017, file: !7644, line: 44, type: !32)
!17020 = !DILocalVariable(name: "tmp", scope: !17017, file: !7644, line: 53, type: !32)
!17021 = distinct !DILocation(line: 145, column: 10, scope: !17008, inlinedAt: !17015)
!17022 = !{i64 2845222}
!17023 = !DILocation(line: 0, scope: !17017, inlinedAt: !17021)
!17024 = !DILocation(line: 148, column: 2, scope: !17025, inlinedAt: !17015)
!17025 = distinct !DILexicalBlock(scope: !17026, file: !230, line: 148, column: 2)
!17026 = distinct !DILexicalBlock(scope: !17008, file: !230, line: 148, column: 2)
!17027 = !DILocation(line: 148, column: 2, scope: !17026, inlinedAt: !17015)
!17028 = !DILocation(line: 148, column: 2, scope: !17029, inlinedAt: !17015)
!17029 = distinct !DILexicalBlock(scope: !17025, file: !230, line: 148, column: 2)
!17030 = !DILocation(line: 160, column: 2, scope: !17008, inlinedAt: !17015)
!17031 = !DILocation(line: 1031, column: 3, scope: !17032, inlinedAt: !17035)
!17032 = distinct !DISubprogram(name: "__get_IPSR", scope: !7525, file: !7525, line: 1027, type: !389, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2319, retainedNodes: !17033)
!17033 = !{!17034}
!17034 = !DILocalVariable(name: "result", scope: !17032, file: !7525, line: 1029, type: !113)
!17035 = distinct !DILocation(line: 48, column: 10, scope: !17036, inlinedAt: !17037)
!17036 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !8517, file: !8517, line: 46, type: !8518, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2319, retainedNodes: !391)
!17037 = distinct !DILocation(line: 76, column: 2, scope: !17038)
!17038 = distinct !DILexicalBlock(scope: !17039, file: !2338, line: 76, column: 2)
!17039 = distinct !DILexicalBlock(scope: !16982, file: !2338, line: 76, column: 2)
!17040 = !{i64 6972625}
!17041 = !DILocation(line: 0, scope: !17032, inlinedAt: !17035)
!17042 = !DILocation(line: 48, column: 9, scope: !17036, inlinedAt: !17037)
!17043 = !DILocation(line: 76, column: 2, scope: !17038)
!17044 = !DILocation(line: 81, column: 9, scope: !17045)
!17045 = distinct !DILexicalBlock(scope: !16982, file: !2338, line: 80, column: 22)
!17046 = !DILocation(line: 83, column: 9, scope: !17045)
!17047 = !DILocation(line: 85, column: 12, scope: !17048)
!17048 = distinct !DILexicalBlock(scope: !17045, file: !2338, line: 84, column: 7)
!17049 = !DILocation(line: 85, column: 21, scope: !17048)
!17050 = !DILocation(line: 76, column: 2, scope: !17051)
!17051 = distinct !DILexicalBlock(scope: !17038, file: !2338, line: 76, column: 2)
!17052 = !DILocation(line: 85, column: 30, scope: !17048)
!17053 = !DILocation(line: 85, column: 37, scope: !17048)
!17054 = !DILocation(line: 84, column: 7, scope: !17045)
!17055 = !DILocation(line: 99, column: 10, scope: !17045)
!17056 = !DILocation(line: 0, scope: !17008, inlinedAt: !17057)
!17057 = distinct !DILocation(line: 101, column: 9, scope: !17045)
!17058 = !DILocation(line: 55, column: 2, scope: !17017, inlinedAt: !17059)
!17059 = distinct !DILocation(line: 145, column: 10, scope: !17008, inlinedAt: !17057)
!17060 = !DILocation(line: 0, scope: !17017, inlinedAt: !17059)
!17061 = !DILocation(line: 148, column: 2, scope: !17025, inlinedAt: !17057)
!17062 = !DILocation(line: 148, column: 2, scope: !17026, inlinedAt: !17057)
!17063 = !DILocation(line: 148, column: 2, scope: !17029, inlinedAt: !17057)
!17064 = !DILocation(line: 160, column: 2, scope: !17008, inlinedAt: !17057)
!17065 = distinct !{!17065, !17066, !17067}
!17066 = !DILocation(line: 80, column: 2, scope: !16982)
!17067 = !DILocation(line: 102, column: 2, scope: !16982)
!17068 = !DILocalVariable(name: "key", arg: 2, scope: !17069, file: !230, line: 190, type: !16998)
!17069 = distinct !DISubprogram(name: "k_spin_unlock", scope: !230, file: !230, line: 189, type: !17070, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2319, retainedNodes: !17072)
!17070 = !DISubroutineType(types: !17071)
!17071 = !{null, !17011, !16998}
!17072 = !{!17073, !17068}
!17073 = !DILocalVariable(name: "l", arg: 1, scope: !17069, file: !230, line: 189, type: !17011)
!17074 = !DILocation(line: 0, scope: !17069, inlinedAt: !17075)
!17075 = distinct !DILocation(line: 106, column: 2, scope: !16982)
!17076 = !DILocation(line: 194, column: 2, scope: !17077, inlinedAt: !17075)
!17077 = distinct !DILexicalBlock(scope: !17078, file: !230, line: 194, column: 2)
!17078 = distinct !DILexicalBlock(scope: !17069, file: !230, line: 194, column: 2)
!17079 = !DILocation(line: 194, column: 2, scope: !17078, inlinedAt: !17075)
!17080 = !DILocation(line: 194, column: 2, scope: !17081, inlinedAt: !17075)
!17081 = distinct !DILexicalBlock(scope: !17077, file: !230, line: 194, column: 2)
!17082 = !DILocalVariable(name: "key", arg: 1, scope: !17083, file: !7644, line: 84, type: !32)
!17083 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7644, file: !7644, line: 84, type: !7476, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2319, retainedNodes: !17084)
!17084 = !{!17082}
!17085 = !DILocation(line: 0, scope: !17083, inlinedAt: !17086)
!17086 = distinct !DILocation(line: 215, column: 2, scope: !17069, inlinedAt: !17075)
!17087 = !DILocation(line: 95, column: 2, scope: !17083, inlinedAt: !17086)
!17088 = !{i64 2846039}
!17089 = !DILocation(line: 107, column: 2, scope: !16982)
!17090 = distinct !DISubprogram(name: "k_heap_alloc", scope: !2338, file: !2338, line: 110, type: !17091, scopeLine: 111, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2319, retainedNodes: !17093)
!17091 = !DISubroutineType(types: !17092)
!17092 = !{!104, !16907, !111, !16985}
!17093 = !{!17094, !17095, !17096, !17097}
!17094 = !DILocalVariable(name: "h", arg: 1, scope: !17090, file: !2338, line: 110, type: !16907)
!17095 = !DILocalVariable(name: "bytes", arg: 2, scope: !17090, file: !2338, line: 110, type: !111)
!17096 = !DILocalVariable(name: "timeout", arg: 3, scope: !17090, file: !2338, line: 110, type: !16985)
!17097 = !DILocalVariable(name: "ret", scope: !17090, file: !2338, line: 114, type: !104)
!17098 = !DILocation(line: 0, scope: !17090)
!17099 = !DILocation(line: 114, column: 14, scope: !17090)
!17100 = !DILocation(line: 118, column: 2, scope: !17090)
!17101 = distinct !DISubprogram(name: "k_heap_free", scope: !2338, file: !2338, line: 121, type: !17102, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2319, retainedNodes: !17104)
!17102 = !DISubroutineType(types: !17103)
!17103 = !{null, !16907, !104}
!17104 = !{!17105, !17106, !17107}
!17105 = !DILocalVariable(name: "h", arg: 1, scope: !17101, file: !2338, line: 121, type: !16907)
!17106 = !DILocalVariable(name: "mem", arg: 2, scope: !17101, file: !2338, line: 121, type: !104)
!17107 = !DILocalVariable(name: "key", scope: !17101, file: !2338, line: 123, type: !16998)
!17108 = !DILocation(line: 0, scope: !17101)
!17109 = !DILocation(line: 123, column: 41, scope: !17101)
!17110 = !DILocation(line: 0, scope: !17008, inlinedAt: !17111)
!17111 = distinct !DILocation(line: 123, column: 25, scope: !17101)
!17112 = !DILocation(line: 55, column: 2, scope: !17017, inlinedAt: !17113)
!17113 = distinct !DILocation(line: 145, column: 10, scope: !17008, inlinedAt: !17111)
!17114 = !DILocation(line: 0, scope: !17017, inlinedAt: !17113)
!17115 = !DILocation(line: 148, column: 2, scope: !17025, inlinedAt: !17111)
!17116 = !DILocation(line: 148, column: 2, scope: !17026, inlinedAt: !17111)
!17117 = !DILocation(line: 148, column: 2, scope: !17029, inlinedAt: !17111)
!17118 = !DILocation(line: 160, column: 2, scope: !17008, inlinedAt: !17111)
!17119 = !DILocation(line: 125, column: 20, scope: !17101)
!17120 = !DILocation(line: 125, column: 2, scope: !17101)
!17121 = !DILocation(line: 128, column: 60, scope: !17122)
!17122 = distinct !DILexicalBlock(scope: !17101, file: !2338, line: 128, column: 6)
!17123 = !DILocation(line: 128, column: 43, scope: !17122)
!17124 = !DILocation(line: 128, column: 68, scope: !17122)
!17125 = !DILocation(line: 128, column: 6, scope: !17101)
!17126 = !DILocation(line: 129, column: 3, scope: !17127)
!17127 = distinct !DILexicalBlock(scope: !17122, file: !2338, line: 128, column: 74)
!17128 = !DILocation(line: 130, column: 2, scope: !17127)
!17129 = !DILocation(line: 0, scope: !17069, inlinedAt: !17130)
!17130 = distinct !DILocation(line: 131, column: 3, scope: !17131)
!17131 = distinct !DILexicalBlock(scope: !17122, file: !2338, line: 130, column: 9)
!17132 = !DILocation(line: 194, column: 2, scope: !17077, inlinedAt: !17130)
!17133 = !DILocation(line: 194, column: 2, scope: !17078, inlinedAt: !17130)
!17134 = !DILocation(line: 194, column: 2, scope: !17081, inlinedAt: !17130)
!17135 = !DILocation(line: 0, scope: !17083, inlinedAt: !17136)
!17136 = distinct !DILocation(line: 215, column: 2, scope: !17069, inlinedAt: !17130)
!17137 = !DILocation(line: 95, column: 2, scope: !17083, inlinedAt: !17136)
!17138 = !DILocation(line: 133, column: 1, scope: !17101)
