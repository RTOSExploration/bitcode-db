; ModuleID = 'build/96b_meerkat96/integration/zephyr/zephyr.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7em-none-unknown-eabi"

%struct._isr_table_entry = type { i8*, void (i8*)* }
%struct.ztest_suite_stats = type { i32, i32, i32 }
%struct.ztest_suite_node = type { i8*, i8* ()*, void (i8*)*, void (i8*)*, void (i8*)*, i1 (i8*)*, %struct.ztest_suite_stats* }
%struct.ztest_unit_test_stats = type { i32, i32, i32, i32, i32 }
%struct.ztest_unit_test = type { i8*, i8*, void (i8*)*, i32, %struct.ztest_unit_test_stats* }
%struct.log_source_const_data = type { i8*, i8 }
%struct.init_entry = type { i32 (%struct.device*)*, %struct.device* }
%struct.device = type { i8*, i8*, i8*, %struct.device_state*, i8*, i16* }
%struct.device_state = type { i8, i8 }
%struct.z_thread_stack_element = type { i8 }
%struct.k_thread = type { %struct._thread_base, %struct._callee_saved, i8*, %union.anon, [32 x i8], i32, %struct.k_heap*, %struct._thread_arch }
%struct._thread_base = type { %union.anon, %union.anon*, i8, i8, %union.anon.2, i32, i8*, %struct._timeout }
%union.anon.2 = type { i16 }
%struct._timeout = type { %struct._dnode, void (%struct._timeout*)*, i64 }
%struct._dnode = type { %union.anon.0, %union.anon.0 }
%union.anon.0 = type { %struct._dnode* }
%struct._callee_saved = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%union.anon = type { %struct._dnode }
%struct.k_heap = type { %struct.sys_heap, %union.anon, %struct.k_spinlock }
%struct.sys_heap = type { %struct.z_heap*, i8*, i32 }
%struct.z_heap = type opaque
%struct.k_spinlock = type { i32 }
%struct._thread_arch = type { i32, i32 }
%struct.ztest_test_rule = type { void (%struct.ztest_unit_test*, i8*)*, void (%struct.ztest_unit_test*, i8*)* }
%struct.ztest_expected_result_entry = type { i8*, i8*, i32 }
%struct.ztest_arch_api = type { void (i8*)*, i1 (i8*, %struct.ztest_suite_node*)*, i1 (i8*, i8*)* }
%struct.pinctrl_soc_pinmux = type { i32, i32, i32, i8 }
%struct.imx_gpio_config = type { %struct.k_spinlock, %struct.GPIO_Type*, %struct.pinctrl_soc_pinmux*, i8 }
%struct.GPIO_Type = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.gpio_driver_api = type { i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i32*)*, i32 (%struct.device*, i32, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i8, i32, i32)*, i32 (%struct.device*, %struct.gpio_callback*, i1)*, i32 (%struct.device*)* }
%struct.gpio_callback = type { %struct._snode, void (%struct.device*, %struct.gpio_callback*, i32)*, i32 }
%struct._snode = type { %struct._snode* }
%struct.imx_gpio_data = type { %struct.k_spinlock, %struct._slist }
%struct._slist = type { %struct._snode*, %struct._snode* }
%struct._isr_list = type { i32, i32, i8*, i8* }
%struct.imx_uart_config = type { %struct.UART_Type*, i32, i8, %struct.pinctrl_dev_config*, void (%struct.device*)* }
%struct.UART_Type = type { i32, [60 x i8], i32, [60 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.pinctrl_dev_config = type { %struct.pinctrl_state*, i8 }
%struct.pinctrl_state = type { %struct.pinctrl_soc_pin*, i8, i8 }
%struct.pinctrl_soc_pin = type { %struct.pinctrl_soc_pinmux, i32 }
%struct.uart_driver_api = type { i32 (%struct.device*, i8*)*, void (%struct.device*, i8)*, i32 (%struct.device*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, i8*, i32)*, i32 (%struct.device*, i8*, i32)*, void (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*, void (%struct.device*, i8*)*, i8*)* }
%struct.uart_config = type { i32, i8, i8, i8, i8 }
%struct.imx_uart_data = type { void (%struct.device*, i8*)*, i8* }
%struct._static_thread_data = type { %struct.k_thread*, %struct.z_thread_stack_element*, i32, void (i8*, i8*, i8*)*, i8*, i8*, i8*, i32, i32, i32, void ()*, i8* }
%struct.z_kernel = type { [1 x %struct._cpu], %struct._ready_q }
%struct._cpu = type { i32, i8*, %struct.k_thread*, %struct.k_thread*, i32, i8, %struct._cpu_arch }
%struct._cpu_arch = type {}
%struct._ready_q = type { %struct.k_thread*, %struct._dnode }
%struct.__va_list = type { i8* }
%struct.cbprintf_package_desc = type { i8, i8, i8, i8 }
%struct.str_context = type { i8*, i32, i32 }
%struct.anon = type { %union.argument_value, %struct.conversion }
%union.argument_value = type { i64 }
%struct.conversion = type { [3 x i8], i8, %struct.k_spinlock, %struct.k_spinlock }
%struct.CCM_Type = type { i32, i32, i32, i32, [2032 x i8], [33 x %struct.anon.4], [13808 x i8], [191 x %struct.anon.4], [13328 x i8], [125 x %struct.anon.1] }
%struct.anon.4 = type { i32, i32, i32, i32 }
%struct.anon.1 = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [48 x i8], i32, i32, i32, i32 }
%struct.RDC_Type = type { i32, [32 x i8], i32, i32, i32, [464 x i8], [27 x i32], [404 x i8], [118 x i32], [552 x i8], [52 x %struct.anon.4] }
%struct.WDOG_Type = type { i16, i16, i16, i16, i16 }
%struct.__esf = type { %struct.__basic_sf }
%struct.__basic_sf = type { %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, i32 }
%struct.k_fifo = type { %struct.k_queue }
%struct.k_queue = type { %struct._sflist, %struct.k_spinlock, %union.anon }
%struct._sflist = type { %struct.k_spinlock*, %struct.k_spinlock* }
%struct._uart_init_config = type { i32, i32, i32, i32, i32, i32 }
%struct.CCM_ANALOG_Type = type { [96 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, [12 x i8], i32, [12 x i8], i32, [12 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [12 x i8], i32, [12 x i8], i32, [12 x i8], i32, i32, i32, i32, i32, [12 x i8], i32, [12 x i8], i32, [12 x i8], i32, i32, i32, i32 }
%struct.GPT_Type = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.ECSPI_Type = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, [28 x i8], i32 }
%struct.CAN_Type = type { i32, i32, i32, [4 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [8 x i8], i32, i32, i32, [48 x i8], [64 x %struct.anon.4], [1024 x i8], [64 x i32], [96 x i8], i32 }
%struct.I2C_Type = type { i16, [2 x i8], i16, [2 x i8], i16, [2 x i8], i16, [2 x i8], i16 }
%struct.rbnode = type { [2 x %struct.rbnode*] }
%struct._priq_rb = type { %struct.rbtree, i32 }
%struct.rbtree = type { %struct.rbnode*, i1 (%struct.rbnode*, %struct.rbnode*)*, i32 }
%struct._rb_foreach = type { %struct.rbnode**, i8*, i32 }
%struct._priq_mq = type { [32 x %struct._dnode], i32 }

@_irq_vector_table = dso_local local_unnamed_addr global [127 x i32] [i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32)], section ".gnu.linkonce.irq_vector_table", align 4, !dbg !0
@_sw_isr_table = dso_local local_unnamed_addr global [127 x %struct._isr_table_entry] [%struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 536855008 to i8*), void (i8*)* inttoptr (i32 536854377 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 536854984 to i8*), void (i8*)* inttoptr (i32 536845537 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 536854984 to i8*), void (i8*)* inttoptr (i32 536845537 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }], section ".gnu.linkonce.sw_isr_table", align 4, !dbg !5
@llvm.compiler.used = appending global [15 x i8*] [i8* bitcast (%struct.ztest_suite_node* @z_ztest_test_node_framework_tests to i8*), i8* bitcast (%struct.ztest_unit_test* @z_ztest_unit_test__framework_tests__test_assert to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_cbprintf_package to i8*), i8* bitcast (%struct.init_entry* @__init_nxp_mcimx7_init to i8*), i8* bitcast (%struct.init_entry* @__init_uart_console_init to i8*), i8* bitcast (%struct.device* @__device_dts_ord_25 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_25 to i8*), i8* bitcast (%struct._isr_list* @imx_gpio_0_init.__isr_imx_gpio_port_isr_irq_0 to i8*), i8* bitcast (%struct._isr_list* @imx_gpio_0_init.__isr_imx_gpio_port_isr_irq_1 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_198 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_198 to i8*), i8* bitcast (%struct._isr_list* @irq_config_func_0.__isr_uart_imx_isr_irq_0 to i8*), i8* bitcast (%struct.init_entry* @__init_sys_clock_driver_init to i8*), i8* bitcast (%struct.init_entry* @__init_imx_pinctrl_init to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_os to i8*)], section "llvm.metadata"
@.str = private unnamed_addr constant [16 x i8] c"framework_tests\00", align 1
@z_ztest_suite_node_stats_framework_tests = dso_local global %struct.ztest_suite_stats zeroinitializer, align 4, !dbg !25
@z_ztest_test_node_framework_tests = internal constant %struct.ztest_suite_node { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str, i32 0, i32 0), i8* ()* null, void (i8*)* null, void (i8*)* null, void (i8*)* null, i1 (i8*)* null, %struct.ztest_suite_stats* @z_ztest_suite_node_stats_framework_tests }, section "._ztest_suite_node.static.z_ztest_test_node_framework_tests", align 4, !dbg !109
@.str.1 = private unnamed_addr constant [12 x i8] c"test_assert\00", align 1
@z_ztest_unit_test_stats_framework_tests_test_assert = dso_local global %struct.ztest_unit_test_stats zeroinitializer, align 4, !dbg !173
@z_ztest_unit_test__framework_tests__test_assert = internal global %struct.ztest_unit_test { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i32 0, i32 0), void (i8*)* @_framework_tests_test_assert_wrapper, i32 0, %struct.ztest_unit_test_stats* @z_ztest_unit_test_stats_framework_tests_test_assert }, section "._ztest_unit_test.static.z_ztest_unit_test__framework_tests__test_assert", align 4, !dbg !155
@.str.2 = private unnamed_addr constant [17 x i8] c"cbprintf_package\00", align 1
@log_const_cbprintf_package = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i32 0, i32 0), i8 3 }, section ".log_const_cbprintf_package", align 4, !dbg !175
@.str.1.4 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.2.5 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.3 = private unnamed_addr constant [39 x i8] c"ZEPHYR_BASE/lib/os/cbprintf_packaged.c\00", align 1
@.str.4 = private unnamed_addr constant [33 x i8] c"\09String with too many arguments\0A\00", align 1
@.str.5 = private unnamed_addr constant [26 x i8] c"\09str_ptr_pos[] too small\0A\00", align 1
@.str.6 = private unnamed_addr constant [21 x i8] c"\09unexpected size %u\0A\00", align 1
@.str.7 = private unnamed_addr constant [23 x i8] c"\09too many format args\0A\00", align 1
@.str.8 = private unnamed_addr constant [27 x i8] c"in_packaged != ((void *)0)\00", align 1
@.str.9 = private unnamed_addr constant [168 x i8] c"%c: (unsigned) char * used for %%p argument. It's recommended to cast it to void * because it may cause misbehavior in certain configurations. String:\22%s\22 argument:%d\0A\00", align 1
@.str.10 = private unnamed_addr constant [31 x i8] c"scpy_cnt < sizeof(cpy_str_pos)\00", align 1
@.str.11 = private unnamed_addr constant [32 x i8] c"keep_cnt < sizeof(keep_str_pos)\00", align 1
@__rodata_region_start = external dso_local global [0 x i8], align 1
@__rodata_region_end = external dso_local global [0 x i8], align 1
@.str.12 = private unnamed_addr constant [24 x i8] c"packaged != ((void *)0)\00", align 1
@_char_out = dso_local local_unnamed_addr global i32 (i32)* @arch_printk_char_out, align 4, !dbg !207
@.str.13 = private unnamed_addr constant [6 x i8] c"(nil)\00", align 1
@__init_nxp_mcimx7_init = internal constant %struct.init_entry { i32 (%struct.device*)* @nxp_mcimx7_init, %struct.device* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !216
@.str.21 = private unnamed_addr constant [5 x i8] c"%c: \00", align 1
@.str.1.23 = private unnamed_addr constant [6 x i8] c"%02x \00", align 1
@.str.2.24 = private unnamed_addr constant [4 x i8] c"   \00", align 1
@.str.3.22 = private unnamed_addr constant [2 x i8] c"|\00", align 1
@.str.4.26 = private unnamed_addr constant [3 x i8] c"%c\00", align 1
@.str.5.27 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.6.25 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.28 = private unnamed_addr constant [52 x i8] c"%c: r0/a1:  0x%08x  r1/a2:  0x%08x  r2/a3:  0x%08x\0A\00", align 1
@.str.1.29 = private unnamed_addr constant [52 x i8] c"%c: r3/a4:  0x%08x r12/ip:  0x%08x r14/lr:  0x%08x\0A\00", align 1
@.str.2.30 = private unnamed_addr constant [20 x i8] c"%c:  xpsr:  0x%08x\0A\00", align 1
@.str.3.31 = private unnamed_addr constant [51 x i8] c"%c: Faulting instruction address (r15/pc): 0x%08x\0A\00", align 1
@.str.32 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.33 = private unnamed_addr constant [27 x i8] c"prio <= ((1UL << (4)) - 1)\00", align 1
@.str.2.34 = private unnamed_addr constant [47 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/irq_manage.c\00", align 1
@.str.3.35 = private unnamed_addr constant [64 x i8] c"\09invalid priority %d for %d irq! values must be less than %lu\0A\0A\00", align 1
@_vector_start = external dso_local global [0 x i8], align 1
@.str.38 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.39 = private unnamed_addr constant [19 x i8] c"esf != ((void *)0)\00", align 1
@.str.2.40 = private unnamed_addr constant [51 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/cortex_m/fault.c\00", align 1
@.str.3.41 = private unnamed_addr constant [62 x i8] c"\09ESF could not be retrieved successfully. Shall never occur.\0A\00", align 1
@.str.4.55 = private unnamed_addr constant [48 x i8] c"%c: SPSEL in thread mode does not indicate PSP\0A\00", align 1
@.str.5.47 = private unnamed_addr constant [28 x i8] c"%c: ***** HARD FAULT *****\0A\00", align 1
@.str.6.48 = private unnamed_addr constant [38 x i8] c"%c:   Bus fault on vector table read\0A\00", align 1
@.str.7.49 = private unnamed_addr constant [19 x i8] c"%c:   Debug event\0A\00", align 1
@.str.8.50 = private unnamed_addr constant [36 x i8] c"%c:   Fault escalation (see below)\0A\00", align 1
@.str.9.51 = private unnamed_addr constant [33 x i8] c"%c: ARCH_EXCEPT with reason %x\0A\0A\00", align 1
@.str.10.52 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.11.53 = private unnamed_addr constant [36 x i8] c"\09Fault escalation without FSR info\0A\00", align 1
@.str.12.54 = private unnamed_addr constant [48 x i8] c"\09HardFault without HFSR info Shall never occur\0A\00", align 1
@.str.13.45 = private unnamed_addr constant [27 x i8] c"%c: ***** MPU FAULT *****\0A\00", align 1
@.str.14 = private unnamed_addr constant [56 x i8] c"%c:   Stacking error (context area might be not valid)\0A\00", align 1
@.str.15 = private unnamed_addr constant [24 x i8] c"%c:   Unstacking error\0A\00", align 1
@.str.16 = private unnamed_addr constant [29 x i8] c"%c:   Data Access Violation\0A\00", align 1
@.str.17 = private unnamed_addr constant [27 x i8] c"%c:   MMFAR Address: 0x%x\0A\00", align 1
@.str.18 = private unnamed_addr constant [36 x i8] c"%c:   Instruction Access Violation\0A\00", align 1
@.str.19 = private unnamed_addr constant [52 x i8] c"%c:   Floating-point lazy state preservation error\0A\00", align 1
@.str.20 = private unnamed_addr constant [74 x i8] c"!(((SCB_Type *) ((0xE000E000UL) + 0x0D00UL) )->CFSR & (1UL << (0U + 4U)))\00", align 1
@.str.21.46 = private unnamed_addr constant [100 x i8] c"\09Stacking or Data Access Violation error without stack guard, user-mode or null-pointer detection\0A\0A\00", align 1
@.str.22 = private unnamed_addr constant [27 x i8] c"%c: ***** BUS FAULT *****\0A\00", align 1
@.str.23 = private unnamed_addr constant [22 x i8] c"%c:   Stacking error\0A\00", align 1
@.str.24 = private unnamed_addr constant [30 x i8] c"%c:   Precise data bus error\0A\00", align 1
@.str.25 = private unnamed_addr constant [26 x i8] c"%c:   BFAR Address: 0x%x\0A\00", align 1
@.str.26 = private unnamed_addr constant [32 x i8] c"%c:   Imprecise data bus error\0A\00", align 1
@.str.27 = private unnamed_addr constant [29 x i8] c"%c:   Instruction bus error\0A\00", align 1
@.str.28.43 = private unnamed_addr constant [29 x i8] c"%c: ***** USAGE FAULT *****\0A\00", align 1
@.str.29 = private unnamed_addr constant [24 x i8] c"%c:   Division by zero\0A\00", align 1
@.str.30 = private unnamed_addr constant [31 x i8] c"%c:   Unaligned memory access\0A\00", align 1
@.str.31 = private unnamed_addr constant [35 x i8] c"%c:   No coprocessor instructions\0A\00", align 1
@.str.32.44 = private unnamed_addr constant [42 x i8] c"%c:   Illegal load of EXC_RETURN into PC\0A\00", align 1
@.str.33 = private unnamed_addr constant [31 x i8] c"%c:   Illegal use of the EPSR\0A\00", align 1
@.str.34 = private unnamed_addr constant [48 x i8] c"%c:   Attempt to execute undefined instruction\0A\00", align 1
@.str.35 = private unnamed_addr constant [41 x i8] c"%c: ***** Debug monitor exception *****\0A\00", align 1
@.str.36 = private unnamed_addr constant [24 x i8] c"%c: ***** %s %d) *****\0A\00", align 1
@.str.37 = private unnamed_addr constant [21 x i8] c"Reserved Exception (\00", align 1
@.str.38.42 = private unnamed_addr constant [25 x i8] c"Spurious interrupt (IRQ \00", align 1
@_stdout_hook = internal unnamed_addr global i32 (i32)* @_stdout_hook_default, align 4, !dbg !645
@phase = dso_local local_unnamed_addr global i32 5, align 4, !dbg !655
@test_status = internal unnamed_addr global i32 0, align 4, !dbg !711
@.str.67 = private unnamed_addr constant [69 x i8] c"===================================================================\0A\00", align 1
@.str.1.70 = private unnamed_addr constant [22 x i8] c"PROJECT EXECUTION %s\0A\00", align 1
@.str.2.69 = private unnamed_addr constant [7 x i8] c"FAILED\00", align 1
@.str.3.68 = private unnamed_addr constant [11 x i8] c"SUCCESSFUL\00", align 1
@current_test_failed_assumption = internal unnamed_addr global i1 false, align 1, !dbg !831
@test_result = internal unnamed_addr global i32 0, align 4, !dbg !698
@.str.4.82 = private unnamed_addr constant [51 x i8] c" ERROR: cannot fail in test phase '%s()', bailing\0A\00", align 1
@.str.5.83 = private unnamed_addr constant [51 x i8] c" ERROR: cannot pass in test phase '%s()', bailing\0A\00", align 1
@.str.6.71 = private unnamed_addr constant [51 x i8] c" ERROR: cannot skip in test phase '%s()', bailing\0A\00", align 1
@_ztest_unit_test_list_start = external dso_local global [0 x %struct.ztest_unit_test], align 4
@_ztest_unit_test_list_end = external dso_local global [0 x %struct.ztest_unit_test], align 4
@_ztest_suite_node_list_start = external dso_local global [0 x %struct.ztest_suite_node], align 4
@_ztest_suite_node_list_end = external dso_local global [0 x %struct.ztest_suite_node], align 4
@.str.7.98 = private unnamed_addr constant [37 x i8] c"ERROR: Test suite '%s' did not run.\0A\00", align 1
@.str.8.99 = private unnamed_addr constant [66 x i8] c"ERROR: Test '%s' assigned to test suite '%s' which doesn't exist\0A\00", align 1
@.str.9.100 = private unnamed_addr constant [21 x i8] c"Bad stats for %s.%s\0A\00", align 1
@ztest_thread_stack = dso_local global [1024 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/subsys/testsuite/ztest/src/ztest_new.c\22.0", align 8, !dbg !702
@ztest_thread = internal global %struct.k_thread zeroinitializer, align 8, !dbg !713
@.str.10.73 = private unnamed_addr constant [6 x i8] c"setup\00", align 1
@.str.11.74 = private unnamed_addr constant [7 x i8] c"before\00", align 1
@.str.12.75 = private unnamed_addr constant [5 x i8] c"test\00", align 1
@.str.13.76 = private unnamed_addr constant [6 x i8] c"after\00", align 1
@.str.14.77 = private unnamed_addr constant [9 x i8] c"teardown\00", align 1
@.str.15.78 = private unnamed_addr constant [10 x i8] c"framework\00", align 1
@.str.16.72 = private unnamed_addr constant [10 x i8] c"(unknown)\00", align 1
@.str.17.84 = private unnamed_addr constant [22 x i8] c"Running TESTSUITE %s\0A\00", align 1
@.str.18.86 = private unnamed_addr constant [24 x i8] c"TESTSUITE %s succeeded\0A\00", align 1
@.str.19.85 = private unnamed_addr constant [22 x i8] c"TESTSUITE %s failed.\0A\00", align 1
@.str.20.87 = private unnamed_addr constant [12 x i8] c"START - %s\0A\00", align 1
@tc_spend_time = internal unnamed_addr global i32 0, align 4, !dbg !829
@.str.21.88 = private unnamed_addr constant [29 x i8] c" %s - %s in %u.%03u seconds\0A\00", align 1
@tc_start_time = internal unnamed_addr global i32 0, align 4, !dbg !826
@_ztest_test_rule_list_start = external dso_local global [0 x %struct.ztest_test_rule], align 4
@_ztest_test_rule_list_end = external dso_local global [0 x %struct.ztest_test_rule], align 4
@_ztest_expected_result_entry_list_start = external dso_local global [0 x %struct.ztest_expected_result_entry], align 4
@_ztest_expected_result_entry_list_end = external dso_local global [0 x %struct.ztest_expected_result_entry], align 4
@.str.24.90 = private unnamed_addr constant [5 x i8] c"PASS\00", align 1
@.str.25.91 = private unnamed_addr constant [5 x i8] c"FAIL\00", align 1
@.str.26.92 = private unnamed_addr constant [5 x i8] c"SKIP\00", align 1
@.str.27.89 = private unnamed_addr constant [2 x i8] c"?\00", align 1
@.str.28.93 = private unnamed_addr constant [41 x i8] c"\0A------ TESTSUITE SUMMARY START ------\0A\0A\00", align 1
@.str.29.94 = private unnamed_addr constant [38 x i8] c"------ TESTSUITE SUMMARY END ------\0A\0A\00", align 1
@.str.30.95 = private unnamed_addr constant [44 x i8] c" - %s - [%s.%s] duration = %u.%03u seconds\0A\00", align 1
@.str.31.96 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.32.97 = private unnamed_addr constant [100 x i8] c"SUITE %s - %3d.%02d%% [%s]: pass = %d, fail = %d, skip = %d, total = %d duration = %u.%03u seconds\0A\00", align 1
@switch.table.get_friendly_phase_name = private unnamed_addr constant [6 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.10.73, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.11.74, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.12.75, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13.76, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.14.77, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.15.78, i32 0, i32 0)], align 4
@switch.table.TC_RESULT_TO_STR = private unnamed_addr constant [3 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.24.90, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.25.91, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.26.92, i32 0, i32 0)], align 4
@ztest_api = dso_local local_unnamed_addr constant %struct.ztest_arch_api { void (i8*)* @z_ztest_run_all, i1 (i8*, %struct.ztest_suite_node*)* @z_ztest_should_suite_run, i1 (i8*, i8*)* @z_ztest_should_test_run }, align 4, !dbg !832
@__init_uart_console_init = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_console_init, %struct.device* null }, section ".z_init_PRE_KERNEL_160_", align 4, !dbg !867
@mcux_igpio_pinmux_0 = dso_local constant [16 x %struct.pinctrl_soc_pinmux] [%struct.pinctrl_soc_pinmux { i32 808189952, i32 808190000, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808189956, i32 808190004, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808189960, i32 808190008, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808189964, i32 808190012, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808189968, i32 808190016, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808189972, i32 808190020, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808189976, i32 808190024, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808189980, i32 808190028, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808648724, i32 808649324, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808648728, i32 808649328, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808648732, i32 808649332, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808648736, i32 808649336, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808648740, i32 808649340, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808648744, i32 808649344, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808648748, i32 808649348, i32 0, i8 0 }, %struct.pinctrl_soc_pinmux { i32 808648752, i32 808649352, i32 0, i8 0 }], align 4, !dbg !972
@__devicehdl_dts_ord_25 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !1158
@.str.104 = private unnamed_addr constant [14 x i8] c"gpio@30200000\00", align 1
@imx_gpio_0_config = internal constant %struct.imx_gpio_config { %struct.k_spinlock { i32 -1 }, %struct.GPIO_Type* inttoptr (i32 807403520 to %struct.GPIO_Type*), %struct.pinctrl_soc_pinmux* getelementptr inbounds ([16 x %struct.pinctrl_soc_pinmux], [16 x %struct.pinctrl_soc_pinmux]* @mcux_igpio_pinmux_0, i32 0, i32 0), i8 16 }, align 4, !dbg !1108
@imx_gpio_driver_api = internal constant %struct.gpio_driver_api { i32 (%struct.device*, i8, i32)* @imx_gpio_configure, i32 (%struct.device*, i32*)* @imx_gpio_port_get_raw, i32 (%struct.device*, i32, i32)* @imx_gpio_port_set_masked_raw, i32 (%struct.device*, i32)* @imx_gpio_port_set_bits_raw, i32 (%struct.device*, i32)* @imx_gpio_port_clear_bits_raw, i32 (%struct.device*, i32)* @imx_gpio_port_toggle_bits, i32 (%struct.device*, i8, i32, i32)* @imx_gpio_pin_interrupt_configure, i32 (%struct.device*, %struct.gpio_callback*, i1)* @imx_gpio_manage_callback, i32 (%struct.device*)* null }, align 4, !dbg !1139
@__devstate_dts_ord_25 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1106
@imx_gpio_0_data = internal global %struct.imx_gpio_data zeroinitializer, align 4, !dbg !1094
@__device_dts_ord_25 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.104, i32 0, i32 0), i8* bitcast (%struct.imx_gpio_config* @imx_gpio_0_config to i8*), i8* bitcast (%struct.gpio_driver_api* @imx_gpio_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_25, i8* bitcast (%struct.imx_gpio_data* @imx_gpio_0_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_25, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1082
@__init___device_dts_ord_25 = internal constant %struct.init_entry { i32 (%struct.device*)* @imx_gpio_0_init, %struct.device* @__device_dts_ord_25 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1084
@.str.1.105 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.24.111 = private unnamed_addr constant [24 x i8] c"pin < config->mux_count\00", align 1
@.str.25.112 = private unnamed_addr constant [36 x i8] c"ZEPHYR_BASE/drivers/gpio/gpio_imx.c\00", align 1
@.str.26.106 = private unnamed_addr constant [9 x i8] c"callback\00", align 1
@.str.27.107 = private unnamed_addr constant [53 x i8] c"ZEPHYR_BASE/include/zephyr/drivers/gpio/gpio_utils.h\00", align 1
@.str.28.108 = private unnamed_addr constant [15 x i8] c"\09No callback!\0A\00", align 1
@.str.29.109 = private unnamed_addr constant [18 x i8] c"callback->handler\00", align 1
@.str.30.110 = private unnamed_addr constant [23 x i8] c"\09No callback handler!\0A\00", align 1
@imx_gpio_0_init.__isr_imx_gpio_port_isr_irq_0 = internal global %struct._isr_list { i32 64, i32 0, i8* bitcast (void (%struct.device*)* @imx_gpio_port_isr to i8*), i8* bitcast (%struct.device* @__device_dts_ord_25 to i8*) }, section ".intList", align 4, !dbg !1141
@imx_gpio_0_init.__isr_imx_gpio_port_isr_irq_1 = internal global %struct._isr_list { i32 65, i32 0, i8* bitcast (void (%struct.device*)* @imx_gpio_port_isr to i8*), i8* bitcast (%struct.device* @__device_dts_ord_25 to i8*) }, section ".intList", align 4, !dbg !1153
@.str.31.114 = private unnamed_addr constant [12 x i8] c"cb->handler\00", align 1
@__devicehdl_dts_ord_198 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !1163
@.str.117 = private unnamed_addr constant [14 x i8] c"uart@30860000\00", align 1
@imx_uart_0_config = internal constant %struct.imx_uart_config { %struct.UART_Type* inttoptr (i32 814088192 to %struct.UART_Type*), i32 115200, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_198, void (%struct.device*)* @irq_config_func_0 }, align 4, !dbg !1169
@uart_imx_driver_api = internal constant %struct.uart_driver_api { i32 (%struct.device*, i8*)* @uart_imx_poll_in, void (%struct.device*, i8)* @uart_imx_poll_out, i32 (%struct.device*)* null, i32 (%struct.device*, %struct.uart_config*)* null, i32 (%struct.device*, %struct.uart_config*)* null, i32 (%struct.device*, i8*, i32)* @uart_imx_fifo_fill, i32 (%struct.device*, i8*, i32)* @uart_imx_fifo_read, void (%struct.device*)* @uart_imx_irq_tx_enable, void (%struct.device*)* @uart_imx_irq_tx_disable, i32 (%struct.device*)* @uart_imx_irq_tx_ready, void (%struct.device*)* @uart_imx_irq_rx_enable, void (%struct.device*)* @uart_imx_irq_rx_disable, i32 (%struct.device*)* null, i32 (%struct.device*)* @uart_imx_irq_rx_ready, void (%struct.device*)* @uart_imx_irq_err_enable, void (%struct.device*)* @uart_imx_irq_err_disable, i32 (%struct.device*)* @uart_imx_irq_is_pending, i32 (%struct.device*)* @uart_imx_irq_update, void (%struct.device*, void (%struct.device*, i8*)*, i8*)* @uart_imx_irq_callback_set }, align 4, !dbg !1427
@__devstate_dts_ord_198 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1425
@imx_uart_0_data = internal global %struct.imx_uart_data zeroinitializer, align 4, !dbg !1419
@__device_dts_ord_198 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.117, i32 0, i32 0), i8* bitcast (%struct.imx_uart_config* @imx_uart_0_config to i8*), i8* bitcast (%struct.uart_driver_api* @uart_imx_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_198, i8* bitcast (%struct.imx_uart_data* @imx_uart_0_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_198, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1410
@__init___device_dts_ord_198 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_imx_init, %struct.device* @__device_dts_ord_198 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1412
@__pinctrl_dev_config__device_dts_ord_198 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_198, i32 0, i32 0), i8 1 }, align 4, !dbg !1429
@__pinctrl_states__device_dts_ord_198 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct.pinctrl_soc_pin* getelementptr inbounds ([2 x %struct.pinctrl_soc_pin], [2 x %struct.pinctrl_soc_pin]* @__pinctrl_state_pins_0__device_dts_ord_198, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1431
@__pinctrl_state_pins_0__device_dts_ord_198 = internal constant [2 x %struct.pinctrl_soc_pin] [%struct.pinctrl_soc_pin { %struct.pinctrl_soc_pinmux { i32 808649000, i32 808649624, i32 0, i8 0 }, i32 124 }, %struct.pinctrl_soc_pin { %struct.pinctrl_soc_pinmux { i32 808649004, i32 808649628, i32 808650484, i8 16 }, i32 124 }], align 4, !dbg !1436
@irq_config_func_0.__isr_uart_imx_isr_irq_0 = internal global %struct._isr_list { i32 26, i32 0, i8* bitcast (void (%struct.device*)* @uart_imx_isr to i8*), i8* bitcast (%struct.device* @__device_dts_ord_198 to i8*) }, section ".intList", align 4, !dbg !1439
@overflow_cyc = internal global i32 0, align 4, !dbg !1450
@cycle_count = internal unnamed_addr global i32 0, align 4, !dbg !1708
@announced_cycles = internal unnamed_addr global i32 0, align 4, !dbg !1710
@last_load = internal unnamed_addr global i32 0, align 4, !dbg !1706
@lock = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !1701
@__init_sys_clock_driver_init = internal constant %struct.init_entry { i32 (%struct.device*)* @sys_clock_driver_init, %struct.device* null }, section ".z_init_PRE_KERNEL_20_", align 4, !dbg !1675
@.str.121 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.122 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.2.123 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.3.124 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.4.125 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.5.126 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@__init_imx_pinctrl_init = internal constant %struct.init_entry { i32 (%struct.device*)* @imx_pinctrl_init, %struct.device* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !1712
@.str.134 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.135 = private unnamed_addr constant [8 x i8] c"pre < 8\00", align 1
@.str.2.136 = private unnamed_addr constant [52 x i8] c"WEST_TOPDIR/modules/hal/nxp/imx/drivers/ccm_imx7d.c\00", align 1
@.str.3.137 = private unnamed_addr constant [10 x i8] c"post < 64\00", align 1
@.str.4.138 = private unnamed_addr constant [12 x i8] c"pre && post\00", align 1
@.str.141 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.142 = private unnamed_addr constant [56 x i8] c"!CCM_ANALOG_IsPllBypassed(base, ccmAnalogPll480Control)\00", align 1
@.str.2.143 = private unnamed_addr constant [59 x i8] c"WEST_TOPDIR/modules/hal/nxp/imx/drivers/ccm_analog_imx7d.c\00", align 1
@switch.table.CCM_ANALOG_GetVideoPllFreq = private unnamed_addr constant [4 x i32] [i32 0, i32 1, i32 0, i32 2], align 4
@switch.table.CCM_ANALOG_GetVideoPllFreq.4 = private unnamed_addr constant [4 x i32] [i32 2, i32 1, i32 0, i32 0], align 4
@.str.146 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.147 = private unnamed_addr constant [9 x i8] c"pin < 32\00", align 1
@.str.2.148 = private unnamed_addr constant [51 x i8] c"WEST_TOPDIR/modules/hal/nxp/imx/drivers/gpio_imx.c\00", align 1
@.str.155 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.156 = private unnamed_addr constant [11 x i8] c"initConfig\00", align 1
@.str.2.157 = private unnamed_addr constant [51 x i8] c"WEST_TOPDIR/modules/hal/nxp/imx/drivers/uart_imx.c\00", align 1
@.str.3.158 = private unnamed_addr constant [63 x i8] c"(direction & uartDirectionTx) || (direction & uartDirectionRx)\00", align 1
@.str.4.165 = private unnamed_addr constant [57 x i8] c"(mode == uartModemModeDce) || (mode == uartModemModeDte)\00", align 1
@.str.5.166 = private unnamed_addr constant [14 x i8] c"data <= 0x1FF\00", align 1
@.str.6.167 = private unnamed_addr constant [86 x i8] c"(voteClock == uartIrdaVoteClockSampling) || (voteClock == uartIrdaVoteClockReference)\00", align 1
@switch.table.UART_SetBaudRate = private unnamed_addr constant [6 x i32] [i32 512, i32 384, i32 256, i32 128, i32 0, i32 768], align 4
@__device_start = external dso_local constant [0 x %struct.device], align 4
@__device_end = external dso_local constant [0 x %struct.device], align 4
@_k_neg_eagain = dso_local local_unnamed_addr constant i32 -11, align 4, !dbg !1742
@.str.174 = private unnamed_addr constant [20 x i8] c"%c: Halting system\0A\00", align 1
@.str.1.178 = private unnamed_addr constant [45 x i8] c"%c: >>> ZEPHYR FATAL ERROR %d: %s on CPU %d\0A\00", align 1
@.str.2.179 = private unnamed_addr constant [38 x i8] c"%c: Fault during interrupt handling\0A\0A\00", align 1
@.str.3.180 = private unnamed_addr constant [29 x i8] c"%c: Current thread: %p (%s)\0A\00", align 1
@.str.4.184 = private unnamed_addr constant [14 x i8] c"CPU exception\00", align 1
@.str.5.185 = private unnamed_addr constant [20 x i8] c"Unhandled interrupt\00", align 1
@.str.6.186 = private unnamed_addr constant [15 x i8] c"Stack overflow\00", align 1
@.str.7.187 = private unnamed_addr constant [12 x i8] c"Kernel oops\00", align 1
@.str.8.188 = private unnamed_addr constant [13 x i8] c"Kernel panic\00", align 1
@.str.9.183 = private unnamed_addr constant [14 x i8] c"Unknown error\00", align 1
@.str.10.182 = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@switch.table.reason_to_str = private unnamed_addr constant [5 x i8*] [i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.184, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5.185, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.6.186, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.7.187, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8.188, i32 0, i32 0)], align 4
@.str.190 = private unnamed_addr constant [3 x i8] c"os\00", align 1
@log_const_os = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.190, i32 0, i32 0), i8 3 }, section ".log_const_os", align 4, !dbg !1748
@__bss_start = external dso_local global [0 x i8], align 1
@__bss_end = external dso_local global [0 x i8], align 1
@z_interrupt_stacks = dso_local global [1 x [2048 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.2", align 8, !dbg !1966
@z_main_stack = dso_local global [1024 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.0", align 8, !dbg !1955
@z_main_thread = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !1961
@z_idle_stacks = internal global [1 x [320 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.1", align 8, !dbg !1973
@.str.5.196 = private unnamed_addr constant [5 x i8] c"idle\00", align 1
@z_sys_init_run_level.levels = internal unnamed_addr constant [6 x %struct.init_entry*] [%struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_EARLY_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_1_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_2_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_POST_KERNEL_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_APPLICATION_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_end, i32 0, i32 0)], align 4, !dbg !1978
@__init_EARLY_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_1_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_2_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_POST_KERNEL_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_APPLICATION_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_end = external dso_local constant [0 x %struct.init_entry], align 4
@.str.6.200 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@k_thread_state_str.states_str = internal unnamed_addr constant [8 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.207, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.208, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.209, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.210, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.211, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5.212, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.206, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7.213, i32 0, i32 0)], align 4, !dbg !2006
@.str.207 = private unnamed_addr constant [6 x i8] c"dummy\00", align 1
@.str.1.208 = private unnamed_addr constant [8 x i8] c"pending\00", align 1
@.str.2.209 = private unnamed_addr constant [9 x i8] c"prestart\00", align 1
@.str.3.210 = private unnamed_addr constant [5 x i8] c"dead\00", align 1
@.str.4.211 = private unnamed_addr constant [10 x i8] c"suspended\00", align 1
@.str.5.212 = private unnamed_addr constant [9 x i8] c"aborting\00", align 1
@.str.6.206 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.7.213 = private unnamed_addr constant [7 x i8] c"queued\00", align 1
@k_thread_state_str.states_sz = internal unnamed_addr constant [8 x i32] [i32 5, i32 7, i32 8, i32 4, i32 9, i32 8, i32 0, i32 6], align 4, !dbg !2115
@.str.8.205 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@.str.9.218 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.10.219 = private unnamed_addr constant [128 x i8] c"((((prio)) == 15 && z_is_idle_thread_entry((entry))) || (((15 - 1) >= ((-16))) && ((prio)) >= ((-16)) && ((prio)) <= (15 - 1)))\00", align 1
@.str.11.220 = private unnamed_addr constant [28 x i8] c"ZEPHYR_BASE/kernel/thread.c\00", align 1
@.str.12.221 = private unnamed_addr constant [49 x i8] c"\09invalid priority (%d); allowed range: %d to %d\0A\00", align 1
@.str.13.224 = private unnamed_addr constant [18 x i8] c"!arch_is_in_isr()\00", align 1
@.str.14.225 = private unnamed_addr constant [37 x i8] c"\09Threads may not be created in ISRs\0A\00", align 1
@__static_thread_data_list_start = external dso_local global [0 x %struct._static_thread_data], align 4
@__static_thread_data_list_end = external dso_local global [0 x %struct._static_thread_data], align 4
@.str.15.229 = private unnamed_addr constant [45 x i8] c"thread_data <= __static_thread_data_list_end\00", align 1
@.str.16.230 = private unnamed_addr constant [31 x i8] c"\09unexpected list end location\0A\00", align 1
@.str.239 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.240 = private unnamed_addr constant [40 x i8] c"_kernel.cpus[0].current->base.prio >= 0\00", align 1
@.str.2.241 = private unnamed_addr constant [26 x i8] c"ZEPHYR_BASE/kernel/idle.c\00", align 1
@sched_spinlock = dso_local global %struct.k_spinlock zeroinitializer, align 4, !dbg !2129
@slice_ticks = internal unnamed_addr global i32 0, align 4, !dbg !2234
@slice_max_prio = internal unnamed_addr global i32 0, align 4, !dbg !2237
@pending_current = internal unnamed_addr global %struct.k_thread* null, align 4, !dbg !2239
@.str.242 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.258 = private unnamed_addr constant [61 x i8] c"thread == _kernel.cpus[0].current || is_thread_dummy(thread)\00", align 1
@.str.2.249 = private unnamed_addr constant [27 x i8] c"ZEPHYR_BASE/kernel/sched.c\00", align 1
@.str.3.263 = private unnamed_addr constant [55 x i8] c"sizeof(sched_spinlock) == 0 || lock != &sched_spinlock\00", align 1
@.str.4.271 = private unnamed_addr constant [49 x i8] c"_kernel.cpus[0].current->base.sched_locked != 0U\00", align 1
@.str.5.251 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@.str.6.266 = private unnamed_addr constant [18 x i8] c"!arch_is_in_isr()\00", align 1
@.str.7.248 = private unnamed_addr constant [33 x i8] c"!z_is_idle_thread_object(thread)\00", align 1
@.str.8.275 = private unnamed_addr constant [134 x i8] c"((((prio)) == 15 && z_is_idle_thread_entry((((void *)0)))) || (((15 - 1) >= ((-16))) && ((prio)) >= ((-16)) && ((prio)) <= (15 - 1)))\00", align 1
@.str.9.276 = private unnamed_addr constant [49 x i8] c"\09invalid priority (%d); allowed range: %d to %d\0A\00", align 1
@.str.10.282 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.11.283 = private unnamed_addr constant [31 x i8] c"\09aborting essential thread %p\0A\00", align 1
@.str.12.284 = private unnamed_addr constant [34 x i8] c"\09aborted _current back from dead\0A\00", align 1
@.str.13.287 = private unnamed_addr constant [21 x i8] c"\09cannot join in ISR\0A\00", align 1
@.str.14.243 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.15.244 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.16.245 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.17.246 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.18.247 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@.str.19.250 = private unnamed_addr constant [39 x i8] c"_kernel.cpus[0].current != ((void *)0)\00", align 1
@.str.20.262 = private unnamed_addr constant [23 x i8] c"thread->base.pended_on\00", align 1
@.str.21.267 = private unnamed_addr constant [36 x i8] c"ZEPHYR_BASE/kernel/include/ksched.h\00", align 1
@.str.22.268 = private unnamed_addr constant [49 x i8] c"_kernel.cpus[0].current->base.sched_locked != 1U\00", align 1
@z_idle_threads = dso_local global [1 x %struct.k_thread] zeroinitializer, align 8, !dbg !1963
@z_sys_post_kernel = dso_local local_unnamed_addr global i8 0, align 1, !dbg !1971
@.str.23.277 = private unnamed_addr constant [64 x i8] c"!z_is_thread_state_set(_kernel.cpus[0].current, ((1UL << (4))))\00", align 1
@__data_region_start = external dso_local global [0 x i8], align 1
@__data_region_load_start = external dso_local global [0 x i8], align 1
@__data_region_end = external dso_local global [0 x i8], align 1
@__ramfunc_start = external dso_local global [0 x i8], align 1
@__ramfunc_load_start = external dso_local global [0 x i8], align 1
@__ramfunc_size = external dso_local global [0 x i8], align 1
@.str.293 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.294 = private unnamed_addr constant [32 x i8] c"!sys_dnode_is_linked(&to->node)\00", align 1
@.str.2.295 = private unnamed_addr constant [29 x i8] c"ZEPHYR_BASE/kernel/timeout.c\00", align 1
@.str.3.296 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@timeout_lock = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !2241
@curr_tick = internal unnamed_addr global i64 0, align 8, !dbg !2271
@timeout_list = internal global %struct._dnode { %union.anon.0 { %struct._dnode* @timeout_list }, %union.anon.0 { %struct._dnode* @timeout_list } }, align 4, !dbg !2276
@_kernel = dso_local global %struct.z_kernel zeroinitializer, align 4, !dbg !1835
@announce_remaining = internal unnamed_addr global i32 0, align 4, !dbg !2274
@.str.4.297 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.5.298 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.6.299 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.7.303 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.8.304 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@.str.324 = private unnamed_addr constant [66 x i8] c"*** Booting Zephyr OS build zephyr-v3.2.0-2126-gffed8388e7cb ***\0A\00", align 1

; Function Attrs: optsize
declare dso_local void @_isr_wrapper() #0

; Function Attrs: noinline nounwind optsize
define dso_local void @_OffsetAbsSyms() local_unnamed_addr #1 !dbg !2907 {
  tail call void asm sideeffect ".globl\09___cpu_t_current_OFFSET\0A\09.equ\09___cpu_t_current_OFFSET,${0:B}\0A\09.type\09___cpu_t_current_OFFSET,%object", "n"(i32 -9) #20, !dbg !2911, !srcloc !2912
  tail call void asm sideeffect ".globl\09___cpu_t_nested_OFFSET\0A\09.equ\09___cpu_t_nested_OFFSET,${0:B}\0A\09.type\09___cpu_t_nested_OFFSET,%object", "n"(i32 -1) #20, !dbg !2913, !srcloc !2914
  tail call void asm sideeffect ".globl\09___cpu_t_irq_stack_OFFSET\0A\09.equ\09___cpu_t_irq_stack_OFFSET,${0:B}\0A\09.type\09___cpu_t_irq_stack_OFFSET,%object", "n"(i32 -5) #20, !dbg !2915, !srcloc !2916
  tail call void asm sideeffect ".globl\09___cpu_t_arch_OFFSET\0A\09.equ\09___cpu_t_arch_OFFSET,${0:B}\0A\09.type\09___cpu_t_arch_OFFSET,%object", "n"(i32 -22) #20, !dbg !2917, !srcloc !2918
  tail call void asm sideeffect ".globl\09___cpu_t_SIZEOF\0A\09.equ\09___cpu_t_SIZEOF,${0:B}\0A\09.type\09___cpu_t_SIZEOF,%object", "n"(i32 -25) #20, !dbg !2919, !srcloc !2920
  tail call void asm sideeffect ".globl\09___kernel_t_cpus_OFFSET\0A\09.equ\09___kernel_t_cpus_OFFSET,${0:B}\0A\09.type\09___kernel_t_cpus_OFFSET,%object", "n"(i32 -1) #20, !dbg !2921, !srcloc !2922
  tail call void asm sideeffect ".globl\09___kernel_t_ready_q_OFFSET\0A\09.equ\09___kernel_t_ready_q_OFFSET,${0:B}\0A\09.type\09___kernel_t_ready_q_OFFSET,%object", "n"(i32 -25) #20, !dbg !2923, !srcloc !2924
  tail call void asm sideeffect ".globl\09___ready_q_t_cache_OFFSET\0A\09.equ\09___ready_q_t_cache_OFFSET,${0:B}\0A\09.type\09___ready_q_t_cache_OFFSET,%object", "n"(i32 -1) #20, !dbg !2925, !srcloc !2926
  tail call void asm sideeffect ".globl\09_STRUCT_KERNEL_SIZE\0A\09.equ\09_STRUCT_KERNEL_SIZE,${0:B}\0A\09.type\09_STRUCT_KERNEL_SIZE,%object", "n"(i32 -37) #20, !dbg !2927, !srcloc !2928
  tail call void asm sideeffect ".globl\09___thread_base_t_user_options_OFFSET\0A\09.equ\09___thread_base_t_user_options_OFFSET,${0:B}\0A\09.type\09___thread_base_t_user_options_OFFSET,%object", "n"(i32 -13) #20, !dbg !2929, !srcloc !2930
  tail call void asm sideeffect ".globl\09___thread_base_t_thread_state_OFFSET\0A\09.equ\09___thread_base_t_thread_state_OFFSET,${0:B}\0A\09.type\09___thread_base_t_thread_state_OFFSET,%object", "n"(i32 -14) #20, !dbg !2931, !srcloc !2932
  tail call void asm sideeffect ".globl\09___thread_base_t_prio_OFFSET\0A\09.equ\09___thread_base_t_prio_OFFSET,${0:B}\0A\09.type\09___thread_base_t_prio_OFFSET,%object", "n"(i32 -15) #20, !dbg !2933, !srcloc !2934
  tail call void asm sideeffect ".globl\09___thread_base_t_sched_locked_OFFSET\0A\09.equ\09___thread_base_t_sched_locked_OFFSET,${0:B}\0A\09.type\09___thread_base_t_sched_locked_OFFSET,%object", "n"(i32 -16) #20, !dbg !2935, !srcloc !2936
  tail call void asm sideeffect ".globl\09___thread_base_t_preempt_OFFSET\0A\09.equ\09___thread_base_t_preempt_OFFSET,${0:B}\0A\09.type\09___thread_base_t_preempt_OFFSET,%object", "n"(i32 -15) #20, !dbg !2937, !srcloc !2938
  tail call void asm sideeffect ".globl\09___thread_base_t_swap_data_OFFSET\0A\09.equ\09___thread_base_t_swap_data_OFFSET,${0:B}\0A\09.type\09___thread_base_t_swap_data_OFFSET,%object", "n"(i32 -21) #20, !dbg !2939, !srcloc !2940
  tail call void asm sideeffect ".globl\09___thread_t_base_OFFSET\0A\09.equ\09___thread_t_base_OFFSET,${0:B}\0A\09.type\09___thread_t_base_OFFSET,%object", "n"(i32 -1) #20, !dbg !2941, !srcloc !2942
  tail call void asm sideeffect ".globl\09___thread_t_callee_saved_OFFSET\0A\09.equ\09___thread_t_callee_saved_OFFSET,${0:B}\0A\09.type\09___thread_t_callee_saved_OFFSET,%object", "n"(i32 -49) #20, !dbg !2943, !srcloc !2944
  tail call void asm sideeffect ".globl\09___thread_t_arch_OFFSET\0A\09.equ\09___thread_t_arch_OFFSET,${0:B}\0A\09.type\09___thread_t_arch_OFFSET,%object", "n"(i32 -137) #20, !dbg !2945, !srcloc !2946
  tail call void asm sideeffect ".globl\09K_THREAD_SIZEOF\0A\09.equ\09K_THREAD_SIZEOF,${0:B}\0A\09.type\09K_THREAD_SIZEOF,%object", "n"(i32 -145) #20, !dbg !2947, !srcloc !2948
  tail call void asm sideeffect ".globl\09__z_interrupt_stack_SIZEOF\0A\09.equ\09__z_interrupt_stack_SIZEOF,${0:B}\0A\09.type\09__z_interrupt_stack_SIZEOF,%object", "n"(i32 -2049) #20, !dbg !2949, !srcloc !2950
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_SIZEOF\0A\09.equ\09_DEVICE_STRUCT_SIZEOF,${0:B}\0A\09.type\09_DEVICE_STRUCT_SIZEOF,%object", "n"(i32 -25) #20, !dbg !2951, !srcloc !2952
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_HANDLES_OFFSET\0A\09.equ\09_DEVICE_STRUCT_HANDLES_OFFSET,${0:B}\0A\09.type\09_DEVICE_STRUCT_HANDLES_OFFSET,%object", "n"(i32 -21) #20, !dbg !2953, !srcloc !2954
  tail call void asm sideeffect ".globl\09_PM_DEVICE_STRUCT_FLAGS_OFFSET\0A\09.equ\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,${0:B}\0A\09.type\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,%object", "n"(i32 -1) #20, !dbg !2955, !srcloc !2956
  tail call void asm sideeffect ".globl\09_PM_DEVICE_FLAG_PD\0A\09.equ\09_PM_DEVICE_FLAG_PD,${0:B}\0A\09.type\09_PM_DEVICE_FLAG_PD,%object", "n"(i32 -7) #20, !dbg !2957, !srcloc !2958
  tail call void asm sideeffect ".globl\09___thread_arch_t_basepri_OFFSET\0A\09.equ\09___thread_arch_t_basepri_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_basepri_OFFSET,%object", "n"(i32 -1) #20, !dbg !2959, !srcloc !2962
  tail call void asm sideeffect ".globl\09___thread_arch_t_swap_return_value_OFFSET\0A\09.equ\09___thread_arch_t_swap_return_value_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_swap_return_value_OFFSET,%object", "n"(i32 -5) #20, !dbg !2963, !srcloc !2964
  tail call void asm sideeffect ".globl\09___basic_sf_t_a1_OFFSET\0A\09.equ\09___basic_sf_t_a1_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a1_OFFSET,%object", "n"(i32 -1) #20, !dbg !2965, !srcloc !2966
  tail call void asm sideeffect ".globl\09___basic_sf_t_a2_OFFSET\0A\09.equ\09___basic_sf_t_a2_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a2_OFFSET,%object", "n"(i32 -5) #20, !dbg !2967, !srcloc !2968
  tail call void asm sideeffect ".globl\09___basic_sf_t_a3_OFFSET\0A\09.equ\09___basic_sf_t_a3_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a3_OFFSET,%object", "n"(i32 -9) #20, !dbg !2969, !srcloc !2970
  tail call void asm sideeffect ".globl\09___basic_sf_t_a4_OFFSET\0A\09.equ\09___basic_sf_t_a4_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a4_OFFSET,%object", "n"(i32 -13) #20, !dbg !2971, !srcloc !2972
  tail call void asm sideeffect ".globl\09___basic_sf_t_ip_OFFSET\0A\09.equ\09___basic_sf_t_ip_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_ip_OFFSET,%object", "n"(i32 -17) #20, !dbg !2973, !srcloc !2974
  tail call void asm sideeffect ".globl\09___basic_sf_t_lr_OFFSET\0A\09.equ\09___basic_sf_t_lr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_lr_OFFSET,%object", "n"(i32 -21) #20, !dbg !2975, !srcloc !2976
  tail call void asm sideeffect ".globl\09___basic_sf_t_pc_OFFSET\0A\09.equ\09___basic_sf_t_pc_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_pc_OFFSET,%object", "n"(i32 -25) #20, !dbg !2977, !srcloc !2978
  tail call void asm sideeffect ".globl\09___basic_sf_t_xpsr_OFFSET\0A\09.equ\09___basic_sf_t_xpsr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_xpsr_OFFSET,%object", "n"(i32 -29) #20, !dbg !2979, !srcloc !2980
  tail call void asm sideeffect ".globl\09___basic_sf_t_SIZEOF\0A\09.equ\09___basic_sf_t_SIZEOF,${0:B}\0A\09.type\09___basic_sf_t_SIZEOF,%object", "n"(i32 -33) #20, !dbg !2981, !srcloc !2982
  tail call void asm sideeffect ".globl\09___esf_t_SIZEOF\0A\09.equ\09___esf_t_SIZEOF,${0:B}\0A\09.type\09___esf_t_SIZEOF,%object", "n"(i32 -33) #20, !dbg !2983, !srcloc !2984
  tail call void asm sideeffect ".globl\09___callee_saved_t_v1_OFFSET\0A\09.equ\09___callee_saved_t_v1_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v1_OFFSET,%object", "n"(i32 -1) #20, !dbg !2985, !srcloc !2986
  tail call void asm sideeffect ".globl\09___callee_saved_t_v2_OFFSET\0A\09.equ\09___callee_saved_t_v2_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v2_OFFSET,%object", "n"(i32 -5) #20, !dbg !2987, !srcloc !2988
  tail call void asm sideeffect ".globl\09___callee_saved_t_v3_OFFSET\0A\09.equ\09___callee_saved_t_v3_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v3_OFFSET,%object", "n"(i32 -9) #20, !dbg !2989, !srcloc !2990
  tail call void asm sideeffect ".globl\09___callee_saved_t_v4_OFFSET\0A\09.equ\09___callee_saved_t_v4_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v4_OFFSET,%object", "n"(i32 -13) #20, !dbg !2991, !srcloc !2992
  tail call void asm sideeffect ".globl\09___callee_saved_t_v5_OFFSET\0A\09.equ\09___callee_saved_t_v5_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v5_OFFSET,%object", "n"(i32 -17) #20, !dbg !2993, !srcloc !2994
  tail call void asm sideeffect ".globl\09___callee_saved_t_v6_OFFSET\0A\09.equ\09___callee_saved_t_v6_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v6_OFFSET,%object", "n"(i32 -21) #20, !dbg !2995, !srcloc !2996
  tail call void asm sideeffect ".globl\09___callee_saved_t_v7_OFFSET\0A\09.equ\09___callee_saved_t_v7_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v7_OFFSET,%object", "n"(i32 -25) #20, !dbg !2997, !srcloc !2998
  tail call void asm sideeffect ".globl\09___callee_saved_t_v8_OFFSET\0A\09.equ\09___callee_saved_t_v8_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v8_OFFSET,%object", "n"(i32 -29) #20, !dbg !2999, !srcloc !3000
  tail call void asm sideeffect ".globl\09___callee_saved_t_psp_OFFSET\0A\09.equ\09___callee_saved_t_psp_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_psp_OFFSET,%object", "n"(i32 -33) #20, !dbg !3001, !srcloc !3002
  tail call void asm sideeffect ".globl\09___callee_saved_t_SIZEOF\0A\09.equ\09___callee_saved_t_SIZEOF,${0:B}\0A\09.type\09___callee_saved_t_SIZEOF,%object", "n"(i32 -37) #20, !dbg !3003, !srcloc !3004
  tail call void asm sideeffect ".globl\09_K_THREAD_NO_FLOAT_SIZEOF\0A\09.equ\09_K_THREAD_NO_FLOAT_SIZEOF,${0:B}\0A\09.type\09_K_THREAD_NO_FLOAT_SIZEOF,%object", "n"(i32 -145) #20, !dbg !3005, !srcloc !3006
  ret void, !dbg !3007
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal void @_framework_tests_test_assert_wrapper(i8* nocapture noundef %0) #2 !dbg !3010 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3012, metadata !DIExpression()), !dbg !3013
  ret void, !dbg !3014
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #3

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbvprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %4) local_unnamed_addr #1 !dbg !3015 {
  %6 = alloca [16 x i8], align 1
  %7 = alloca [16 x i8], align 1
  %8 = extractvalue [1 x i32] %4, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !3030, metadata !DIExpression()), !dbg !3093
  call void @llvm.dbg.value(metadata i8* %0, metadata !3026, metadata !DIExpression()), !dbg !3093
  call void @llvm.dbg.value(metadata i32 %1, metadata !3027, metadata !DIExpression()), !dbg !3093
  call void @llvm.dbg.value(metadata i32 %2, metadata !3028, metadata !DIExpression()), !dbg !3093
  call void @llvm.dbg.value(metadata i8* %3, metadata !3029, metadata !DIExpression()), !dbg !3093
  call void @llvm.dbg.value(metadata i8* %0, metadata !3031, metadata !DIExpression()), !dbg !3093
  call void @llvm.dbg.value(metadata i8* %0, metadata !3032, metadata !DIExpression()), !dbg !3093
  %10 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 0, !dbg !3094
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #20, !dbg !3094
  call void @llvm.dbg.declare(metadata [16 x i8]* %6, metadata !3035, metadata !DIExpression()), !dbg !3095
  %11 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 0, !dbg !3096
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #20, !dbg !3096
  call void @llvm.dbg.declare(metadata [16 x i8]* %7, metadata !3037, metadata !DIExpression()), !dbg !3097
  call void @llvm.dbg.value(metadata i32 0, metadata !3038, metadata !DIExpression()), !dbg !3093
  call void @llvm.dbg.value(metadata i32 0, metadata !3039, metadata !DIExpression()), !dbg !3093
  call void @llvm.dbg.value(metadata i32 0, metadata !3040, metadata !DIExpression()), !dbg !3093
  call void @llvm.dbg.value(metadata i32 -1, metadata !3041, metadata !DIExpression()), !dbg !3093
  call void @llvm.dbg.value(metadata i8 0, metadata !3044, metadata !DIExpression()), !dbg !3093
  %12 = and i32 %2, 4, !dbg !3098
  %13 = icmp eq i32 %12, 0, !dbg !3099
  call void @llvm.dbg.value(metadata i1 %13, metadata !3045, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3093
  %14 = lshr i32 %2, 3, !dbg !3100
  %15 = and i32 %14, 7, !dbg !3100
  %16 = add nuw nsw i32 %15, 1, !dbg !3101
  call void @llvm.dbg.value(metadata i32 %16, metadata !3046, metadata !DIExpression()), !dbg !3093
  call void @llvm.dbg.value(metadata i8 0, metadata !3047, metadata !DIExpression()), !dbg !3093
  call void @llvm.dbg.value(metadata i8* %0, metadata !3048, metadata !DIExpression()), !dbg !3093
  %17 = ptrtoint i8* %0 to i32, !dbg !3102
  %18 = and i32 %17, 3, !dbg !3104
  %19 = icmp eq i32 %18, 0, !dbg !3104
  br i1 %19, label %20, label %320, !dbg !3105

20:                                               ; preds = %5
  %21 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !3106
  call void @llvm.dbg.value(metadata i8* %21, metadata !3032, metadata !DIExpression()), !dbg !3093
  %22 = icmp eq i8* %0, null, !dbg !3107
  %23 = and i32 %1, 7, !dbg !3109
  %24 = sub nuw nsw i32 8, %23, !dbg !3109
  %25 = select i1 %22, i32 %23, i32 0, !dbg !3109
  %26 = getelementptr i8, i8* %21, i32 %25, !dbg !3109
  %27 = select i1 %22, i32 %24, i32 %1, !dbg !3109
  call void @llvm.dbg.value(metadata i32 %27, metadata !3027, metadata !DIExpression()), !dbg !3093
  call void @llvm.dbg.value(metadata i8* %26, metadata !3032, metadata !DIExpression()), !dbg !3093
  br i1 %22, label %33, label %28, !dbg !3110

28:                                               ; preds = %20
  %29 = ptrtoint i8* %26 to i32, !dbg !3112
  %30 = sub i32 4, %17, !dbg !3112
  %31 = add i32 %30, %29, !dbg !3113
  %32 = icmp ugt i32 %31, %27, !dbg !3114
  br i1 %32, label %320, label %33, !dbg !3115

33:                                               ; preds = %28, %20
  %34 = getelementptr inbounds i8, i8* %3, i32 -1, !dbg !3116
  call void @llvm.dbg.value(metadata i8* %34, metadata !3029, metadata !DIExpression()), !dbg !3093
  call void @llvm.dbg.value(metadata i8* %3, metadata !3043, metadata !DIExpression()), !dbg !3093
  call void @llvm.dbg.value(metadata i32 4, metadata !3034, metadata !DIExpression()), !dbg !3093
  call void @llvm.dbg.value(metadata i32 4, metadata !3033, metadata !DIExpression()), !dbg !3093
  %35 = and i32 %2, 2
  %36 = icmp ne i32 %35, 0
  %37 = sub i32 8, %17
  br label %130, !dbg !3117

38:                                               ; preds = %63, %219
  %39 = phi i8 [ %224, %219 ], [ %64, %63 ]
  %40 = phi i8* [ %223, %219 ], [ %65, %63 ]
  %41 = phi i8* [ %221, %219 ], [ %66, %63 ]
  %42 = phi i8* [ %40, %219 ], [ %67, %63 ]
  %43 = phi i8* [ %222, %219 ], [ %68, %63 ]
  %44 = phi i32 [ %113, %219 ], [ %69, %63 ]
  %45 = phi i32 [ %112, %219 ], [ %70, %63 ]
  %46 = phi i1 [ %110, %219 ], [ %71, %63 ]
  call void @llvm.dbg.value(metadata i8* %41, metadata !3030, metadata !DIExpression()), !dbg !3093
  call void @llvm.dbg.value(metadata i8* %42, metadata !3029, metadata !DIExpression()), !dbg !3093
  call void @llvm.dbg.value(metadata i8* %43, metadata !3032, metadata !DIExpression()), !dbg !3093
  call void @llvm.dbg.value(metadata i32 %44, metadata !3033, metadata !DIExpression()), !dbg !3093
  call void @llvm.dbg.value(metadata i32 %45, metadata !3034, metadata !DIExpression()), !dbg !3093
  call void @llvm.dbg.value(metadata i32 %72, metadata !3041, metadata !DIExpression()), !dbg !3093
  br i1 %46, label %73, label %47, !dbg !3118

47:                                               ; preds = %38
  %48 = icmp eq i8 %39, 37, !dbg !3119
  %49 = zext i1 %48 to i32, !dbg !3123
  %50 = add nsw i32 %72, %49, !dbg !3123
  %51 = select i1 %48, i32 4, i32 %45, !dbg !3123
  %52 = select i1 %48, i32 4, i32 %44, !dbg !3123
  call void @llvm.dbg.value(metadata i32 %52, metadata !3033, metadata !DIExpression()), !dbg !3093
  call void @llvm.dbg.value(metadata i32 %51, metadata !3034, metadata !DIExpression()), !dbg !3093
  call void @llvm.dbg.value(metadata i8 poison, metadata !3044, metadata !DIExpression()), !dbg !3093
  call void @llvm.dbg.value(metadata i32 %50, metadata !3041, metadata !DIExpression()), !dbg !3093
  br label %53, !dbg !3124

53:                                               ; preds = %73, %47, %74, %76, %77, %78, %106, %104
  %54 = phi i32 [ %72, %106 ], [ %72, %104 ], [ %72, %78 ], [ %72, %77 ], [ %72, %76 ], [ %75, %74 ], [ %50, %47 ], [ %72, %73 ]
  %55 = phi i1 [ false, %106 ], [ false, %104 ], [ true, %78 ], [ true, %77 ], [ true, %76 ], [ false, %74 ], [ %48, %47 ], [ true, %73 ]
  %56 = phi i32 [ %45, %106 ], [ 8, %104 ], [ 4, %78 ], [ 4, %77 ], [ %45, %76 ], [ %45, %74 ], [ %51, %47 ], [ 8, %73 ]
  %57 = phi i32 [ %44, %106 ], [ 8, %104 ], [ 4, %78 ], [ 4, %77 ], [ %44, %76 ], [ %44, %74 ], [ %52, %47 ], [ 8, %73 ]
  %58 = phi i8* [ %43, %106 ], [ %105, %104 ], [ %43, %78 ], [ %43, %77 ], [ %43, %76 ], [ %43, %74 ], [ %43, %47 ], [ %43, %73 ]
  %59 = phi i8* [ %41, %106 ], [ %93, %104 ], [ %41, %78 ], [ %41, %77 ], [ %41, %76 ], [ %41, %74 ], [ %41, %47 ], [ %41, %73 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !3030, metadata !DIExpression()), !dbg !3093
  call void @llvm.dbg.value(metadata i8* %40, metadata !3029, metadata !DIExpression()), !dbg !3093
  call void @llvm.dbg.value(metadata i8* %58, metadata !3032, metadata !DIExpression()), !dbg !3093
  call void @llvm.dbg.value(metadata i32 %57, metadata !3033, metadata !DIExpression()), !dbg !3093
  call void @llvm.dbg.value(metadata i32 %56, metadata !3034, metadata !DIExpression()), !dbg !3093
  call void @llvm.dbg.value(metadata i8 poison, metadata !3044, metadata !DIExpression()), !dbg !3093
  call void @llvm.dbg.value(metadata i32 %54, metadata !3041, metadata !DIExpression()), !dbg !3093
  %60 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !3125
  call void @llvm.dbg.value(metadata i8* %60, metadata !3029, metadata !DIExpression()), !dbg !3093
  %61 = load i8, i8* %60, align 1, !dbg !3127
  %62 = icmp eq i8 %61, 0, !dbg !3128
  br i1 %62, label %226, label %63, !dbg !3129, !llvm.loop !3130

63:                                               ; preds = %192, %53
  %64 = phi i8 [ %61, %53 ], [ %199, %192 ]
  %65 = phi i8* [ %60, %53 ], [ %198, %192 ]
  %66 = phi i8* [ %59, %53 ], [ %143, %192 ]
  %67 = phi i8* [ %40, %53 ], [ %141, %192 ]
  %68 = phi i8* [ %58, %53 ], [ %197, %192 ]
  %69 = phi i32 [ %57, %53 ], [ %139, %192 ]
  %70 = phi i32 [ %56, %53 ], [ %138, %192 ]
  %71 = phi i1 [ %55, %53 ], [ %134, %192 ]
  %72 = phi i32 [ %54, %53 ], [ %132, %192 ]
  br label %38, !dbg !3118

73:                                               ; preds = %38
  switch i8 %39, label %106 [
    i8 37, label %74
    i8 35, label %76
    i8 45, label %76
    i8 43, label %76
    i8 32, label %76
    i8 48, label %76
    i8 49, label %76
    i8 50, label %76
    i8 51, label %76
    i8 52, label %76
    i8 53, label %76
    i8 54, label %76
    i8 55, label %76
    i8 56, label %76
    i8 57, label %76
    i8 46, label %76
    i8 104, label %76
    i8 108, label %76
    i8 76, label %76
    i8 42, label %108
    i8 106, label %53
    i8 122, label %77
    i8 116, label %78
    i8 99, label %79
    i8 100, label %79
    i8 105, label %79
    i8 111, label %79
    i8 117, label %79
    i8 120, label %79
    i8 88, label %79
    i8 115, label %109
    i8 112, label %107
    i8 110, label %107
    i8 97, label %87
    i8 65, label %87
    i8 101, label %87
    i8 69, label %87
    i8 102, label %87
    i8 70, label %87
    i8 103, label %87
    i8 71, label %87
  ], !dbg !3133

74:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i8 0, metadata !3044, metadata !DIExpression()), !dbg !3093
  %75 = add nsw i32 %72, -1, !dbg !3134
  call void @llvm.dbg.value(metadata i32 %75, metadata !3041, metadata !DIExpression()), !dbg !3093
  br label %53, !dbg !3135

76:                                               ; preds = %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73
  br label %53, !dbg !3136

77:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i32 4, metadata !3034, metadata !DIExpression()), !dbg !3093
  call void @llvm.dbg.value(metadata i32 4, metadata !3033, metadata !DIExpression()), !dbg !3093
  br label %53, !dbg !3137

78:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i32 4, metadata !3034, metadata !DIExpression()), !dbg !3093
  call void @llvm.dbg.value(metadata i32 4, metadata !3033, metadata !DIExpression()), !dbg !3093
  br label %53, !dbg !3138

79:                                               ; preds = %73, %73, %73, %73, %73, %73, %73
  %80 = load i8, i8* %42, align 1, !dbg !3139
  %81 = icmp eq i8 %80, 108, !dbg !3141
  br i1 %81, label %82, label %109, !dbg !3142

82:                                               ; preds = %79
  %83 = getelementptr inbounds i8, i8* %42, i32 -1, !dbg !3143
  %84 = load i8, i8* %83, align 1, !dbg !3143
  %85 = icmp eq i8 %84, 108, !dbg !3146
  %86 = select i1 %85, i32 8, i32 4
  br label %109

87:                                               ; preds = %73, %73, %73, %73, %73, %73, %73, %73
  %88 = ptrtoint i8* %41 to i32, !dbg !3147
  %89 = add i32 %88, 7, !dbg !3147
  %90 = and i32 %89, -8, !dbg !3147
  %91 = inttoptr i32 %90 to i8*, !dbg !3147
  %92 = inttoptr i32 %90 to double*, !dbg !3147
  %93 = getelementptr inbounds i8, i8* %91, i32 8, !dbg !3147
  %94 = load double, double* %92, align 8, !dbg !3147
  call void @llvm.dbg.value(metadata i8* %93, metadata !3030, metadata !DIExpression()), !dbg !3093
  call void @llvm.dbg.value(metadata i32 8, metadata !3033, metadata !DIExpression()), !dbg !3093
  call void @llvm.dbg.value(metadata i32 8, metadata !3034, metadata !DIExpression()), !dbg !3093
  call void @llvm.dbg.value(metadata double %94, metadata !3061, metadata !DIExpression()), !dbg !3149
  %95 = ptrtoint i8* %43 to i32, !dbg !3150
  %96 = add i32 %95, 7, !dbg !3150
  %97 = and i32 %96, -8, !dbg !3150
  %98 = inttoptr i32 %97 to i8*, !dbg !3151
  call void @llvm.dbg.value(metadata i8* %98, metadata !3032, metadata !DIExpression()), !dbg !3093
  br i1 %22, label %104, label %99, !dbg !3152

99:                                               ; preds = %87
  %100 = add i32 %37, %97, !dbg !3153
  %101 = icmp ugt i32 %100, %196, !dbg !3157
  br i1 %101, label %320, label %102, !dbg !3158

102:                                              ; preds = %99
  %103 = inttoptr i32 %97 to double*, !dbg !3159
  store double %94, double* %103, align 8, !dbg !3159
  br label %104

104:                                              ; preds = %102, %87
  %105 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !3162
  call void @llvm.dbg.value(metadata i8* %105, metadata !3032, metadata !DIExpression()), !dbg !3093
  call void @llvm.dbg.value(metadata i8 poison, metadata !3044, metadata !DIExpression()), !dbg !3093
  br label %53

106:                                              ; preds = %73
  call void @llvm.dbg.value(metadata i8 0, metadata !3044, metadata !DIExpression()), !dbg !3093
  br label %53, !dbg !3163

107:                                              ; preds = %73, %73
  br label %109, !dbg !3164

108:                                              ; preds = %73
  br label %109, !dbg !3164

109:                                              ; preds = %73, %108, %107, %79, %82
  %110 = phi i1 [ false, %82 ], [ false, %79 ], [ false, %107 ], [ true, %108 ], [ false, %73 ]
  %111 = phi i1 [ false, %82 ], [ false, %79 ], [ false, %107 ], [ false, %108 ], [ true, %73 ]
  %112 = phi i32 [ %86, %82 ], [ %45, %79 ], [ 4, %107 ], [ %45, %108 ], [ 4, %73 ], !dbg !3093
  %113 = phi i32 [ %86, %82 ], [ %44, %79 ], [ 4, %107 ], [ %44, %108 ], [ 4, %73 ], !dbg !3093
  call void @llvm.dbg.value(metadata i32 %113, metadata !3033, metadata !DIExpression()), !dbg !3093
  call void @llvm.dbg.value(metadata i32 %112, metadata !3034, metadata !DIExpression()), !dbg !3093
  call void @llvm.dbg.value(metadata i8 poison, metadata !3047, metadata !DIExpression()), !dbg !3093
  call void @llvm.dbg.value(metadata i8 poison, metadata !3044, metadata !DIExpression()), !dbg !3093
  %114 = ptrtoint i8* %43 to i32, !dbg !3164
  %115 = add i32 %114, -1, !dbg !3164
  %116 = add i32 %115, %112, !dbg !3164
  %117 = sub i32 0, %112, !dbg !3164
  %118 = and i32 %116, %117, !dbg !3164
  %119 = inttoptr i32 %118 to i8*, !dbg !3165
  call void @llvm.dbg.value(metadata i8* %119, metadata !3032, metadata !DIExpression()), !dbg !3093
  br i1 %22, label %124, label %120, !dbg !3166

120:                                              ; preds = %109
  %121 = sub i32 %113, %17, !dbg !3168
  %122 = add i32 %121, %118, !dbg !3169
  %123 = icmp ugt i32 %122, %196, !dbg !3170
  br i1 %123, label %320, label %124, !dbg !3171

124:                                              ; preds = %120, %109
  br i1 %111, label %125, label %201, !dbg !3172

125:                                              ; preds = %124
  %126 = inttoptr i32 %118 to i8*, !dbg !3165
  %127 = getelementptr inbounds i8, i8* %41, i32 4, !dbg !3173
  call void @llvm.dbg.value(metadata i8* %127, metadata !3030, metadata !DIExpression()), !dbg !3093
  %128 = bitcast i8* %41 to i8**, !dbg !3173
  %129 = load i8*, i8** %128, align 4, !dbg !3173
  call void @llvm.dbg.value(metadata i8* %129, metadata !3043, metadata !DIExpression()), !dbg !3093
  br label %130, !dbg !3174

130:                                              ; preds = %125, %33
  %131 = phi i32 [ 0, %33 ], [ %193, %125 ], !dbg !3093
  %132 = phi i32 [ -1, %33 ], [ %72, %125 ], !dbg !3175
  %133 = phi i8* [ %3, %33 ], [ %129, %125 ], !dbg !3093
  %134 = phi i1 [ false, %33 ], [ %110, %125 ]
  %135 = phi i32 [ 0, %33 ], [ %194, %125 ], !dbg !3176
  %136 = phi i32 [ %16, %33 ], [ %147, %125 ], !dbg !3093
  %137 = phi i32 [ 0, %33 ], [ %195, %125 ], !dbg !3093
  %138 = phi i32 [ 4, %33 ], [ %112, %125 ], !dbg !3093
  %139 = phi i32 [ 4, %33 ], [ %113, %125 ], !dbg !3093
  %140 = phi i8* [ %26, %33 ], [ %126, %125 ], !dbg !3093
  %141 = phi i8* [ %34, %33 ], [ %40, %125 ], !dbg !3093
  %142 = phi i32 [ %27, %33 ], [ %196, %125 ], !dbg !3177
  %143 = phi i8* [ %9, %33 ], [ %127, %125 ]
  call void @llvm.dbg.value(metadata i8* %143, metadata !3030, metadata !DIExpression()), !dbg !3093
  call void @llvm.dbg.value(metadata i32 %142, metadata !3027, metadata !DIExpression()), !dbg !3093
  call void @llvm.dbg.value(metadata i8* %141, metadata !3029, metadata !DIExpression()), !dbg !3093
  call void @llvm.dbg.value(metadata i8* %140, metadata !3032, metadata !DIExpression()), !dbg !3093
  call void @llvm.dbg.value(metadata i32 %139, metadata !3033, metadata !DIExpression()), !dbg !3093
  call void @llvm.dbg.value(metadata i32 %138, metadata !3034, metadata !DIExpression()), !dbg !3093
  call void @llvm.dbg.value(metadata i32 %137, metadata !3038, metadata !DIExpression()), !dbg !3093
  call void @llvm.dbg.value(metadata i32 %136, metadata !3046, metadata !DIExpression()), !dbg !3093
  call void @llvm.dbg.value(metadata i32 %135, metadata !3039, metadata !DIExpression()), !dbg !3093
  call void @llvm.dbg.value(metadata i8 poison, metadata !3044, metadata !DIExpression()), !dbg !3093
  call void @llvm.dbg.value(metadata i8* %133, metadata !3043, metadata !DIExpression()), !dbg !3093
  call void @llvm.dbg.value(metadata i32 %132, metadata !3041, metadata !DIExpression()), !dbg !3093
  call void @llvm.dbg.value(metadata i32 %131, metadata !3040, metadata !DIExpression()), !dbg !3093
  call void @llvm.dbg.label(metadata !3092), !dbg !3179
  br i1 %22, label %146, label %144, !dbg !3180

144:                                              ; preds = %130
  %145 = bitcast i8* %140 to i8**, !dbg !3181
  store i8* %133, i8** %145, align 4, !dbg !3184
  br label %146, !dbg !3185

146:                                              ; preds = %144, %130
  %147 = add nsw i32 %136, -1, !dbg !3186
  call void @llvm.dbg.value(metadata i32 %147, metadata !3046, metadata !DIExpression()), !dbg !3093
  %148 = icmp sgt i32 %136, 0, !dbg !3187
  br i1 %148, label %152, label %149, !dbg !3188

149:                                              ; preds = %146
  %150 = tail call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %133) #21, !dbg !3189
  %151 = zext i1 %150 to i32, !dbg !3189
  br label %152, !dbg !3188

152:                                              ; preds = %146, %149
  %153 = phi i32 [ %151, %149 ], [ 1, %146 ], !dbg !3188
  %154 = icmp eq i32 %153, 0, !dbg !3188
  call void @llvm.dbg.value(metadata i1 %154, metadata !3070, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3190
  call void @llvm.dbg.value(metadata i1 %36, metadata !3073, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3190
  %155 = or i1 %36, %154, !dbg !3191
  br i1 %155, label %156, label %192, !dbg !3191

156:                                              ; preds = %152
  %157 = ptrtoint i8* %140 to i32, !dbg !3192
  %158 = sub i32 %157, %17, !dbg !3192
  %159 = lshr i32 %158, 2, !dbg !3193
  call void @llvm.dbg.value(metadata i32 %159, metadata !3074, metadata !DIExpression()), !dbg !3194
  %160 = icmp ugt i32 %158, 511
  %161 = select i1 %36, i1 %160, i1 false, !dbg !3195
  br i1 %161, label %162, label %163, !dbg !3195

162:                                              ; preds = %156
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.5, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 635) #22, !dbg !3197
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.4, i32 0, i32 0)) #22, !dbg !3197
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 635) #22, !dbg !3197
  unreachable, !dbg !3197

163:                                              ; preds = %156
  %164 = icmp ugt i32 %137, 15, !dbg !3202
  br i1 %164, label %165, label %166, !dbg !3204

165:                                              ; preds = %163
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.5, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 640) #22, !dbg !3205
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.5, i32 0, i32 0)) #22, !dbg !3205
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 640) #22, !dbg !3205
  unreachable, !dbg !3205

166:                                              ; preds = %163
  br i1 %22, label %177, label %167, !dbg !3210

167:                                              ; preds = %166
  %168 = trunc i32 %159 to i8, !dbg !3211
  %169 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %137, !dbg !3214
  store i8 %168, i8* %169, align 1, !dbg !3215
  %170 = trunc i32 %132 to i8, !dbg !3216
  %171 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %137, !dbg !3217
  store i8 %170, i8* %171, align 1, !dbg !3218
  br i1 %154, label %175, label %172, !dbg !3219

172:                                              ; preds = %167
  %173 = or i8 %168, -128, !dbg !3220
  store i8 %173, i8* %169, align 1, !dbg !3220
  %174 = add i32 %131, 1, !dbg !3223
  call void @llvm.dbg.value(metadata i32 %174, metadata !3040, metadata !DIExpression()), !dbg !3093
  br label %187, !dbg !3224

175:                                              ; preds = %167
  %176 = add i32 %135, 1, !dbg !3225
  call void @llvm.dbg.value(metadata i32 %176, metadata !3039, metadata !DIExpression()), !dbg !3093
  br label %187

177:                                              ; preds = %166
  br i1 %154, label %180, label %178, !dbg !3227

178:                                              ; preds = %177
  %179 = add i32 %142, 1, !dbg !3228
  call void @llvm.dbg.value(metadata i32 %179, metadata !3027, metadata !DIExpression()), !dbg !3093
  br label %187, !dbg !3231

180:                                              ; preds = %177
  br i1 %13, label %183, label %181, !dbg !3232

181:                                              ; preds = %180
  %182 = add i32 %142, 2, !dbg !3233
  call void @llvm.dbg.value(metadata i32 %182, metadata !3027, metadata !DIExpression()), !dbg !3093
  br label %187, !dbg !3236

183:                                              ; preds = %180
  %184 = tail call i32 @strlen(i8* noundef %133) #22, !dbg !3237
  %185 = add i32 %142, 2, !dbg !3239
  %186 = add i32 %185, %184, !dbg !3240
  call void @llvm.dbg.value(metadata i32 %186, metadata !3027, metadata !DIExpression()), !dbg !3093
  br label %187

187:                                              ; preds = %178, %183, %181, %172, %175
  %188 = phi i32 [ %174, %172 ], [ %131, %175 ], [ %131, %178 ], [ %131, %181 ], [ %131, %183 ], !dbg !3093
  %189 = phi i32 [ %135, %172 ], [ %176, %175 ], [ %135, %178 ], [ %135, %181 ], [ %135, %183 ], !dbg !3093
  %190 = phi i32 [ %142, %172 ], [ %142, %175 ], [ %179, %178 ], [ %182, %181 ], [ %186, %183 ], !dbg !3093
  call void @llvm.dbg.value(metadata i32 %190, metadata !3027, metadata !DIExpression()), !dbg !3093
  call void @llvm.dbg.value(metadata i32 %189, metadata !3039, metadata !DIExpression()), !dbg !3093
  call void @llvm.dbg.value(metadata i32 %188, metadata !3040, metadata !DIExpression()), !dbg !3093
  %191 = add nuw nsw i32 %137, 1, !dbg !3241
  call void @llvm.dbg.value(metadata i32 %191, metadata !3038, metadata !DIExpression()), !dbg !3093
  br label %192

192:                                              ; preds = %152, %187
  %193 = phi i32 [ %188, %187 ], [ %131, %152 ], !dbg !3093
  %194 = phi i32 [ %189, %187 ], [ %135, %152 ], !dbg !3176
  %195 = phi i32 [ %191, %187 ], [ %137, %152 ], !dbg !3093
  %196 = phi i32 [ %190, %187 ], [ %142, %152 ], !dbg !3177
  call void @llvm.dbg.value(metadata i32 %196, metadata !3027, metadata !DIExpression()), !dbg !3093
  call void @llvm.dbg.value(metadata i32 %195, metadata !3038, metadata !DIExpression()), !dbg !3093
  call void @llvm.dbg.value(metadata i32 %194, metadata !3039, metadata !DIExpression()), !dbg !3093
  call void @llvm.dbg.value(metadata i32 %193, metadata !3040, metadata !DIExpression()), !dbg !3093
  %197 = getelementptr inbounds i8, i8* %140, i32 4, !dbg !3242
  call void @llvm.dbg.value(metadata i8* %197, metadata !3032, metadata !DIExpression()), !dbg !3093
  call void @llvm.dbg.value(metadata i8* %143, metadata !3030, metadata !DIExpression()), !dbg !3093
  call void @llvm.dbg.value(metadata i8* %141, metadata !3029, metadata !DIExpression()), !dbg !3093
  call void @llvm.dbg.value(metadata i32 %139, metadata !3033, metadata !DIExpression()), !dbg !3093
  call void @llvm.dbg.value(metadata i32 %138, metadata !3034, metadata !DIExpression()), !dbg !3093
  call void @llvm.dbg.value(metadata i8 poison, metadata !3047, metadata !DIExpression()), !dbg !3093
  call void @llvm.dbg.value(metadata i8 poison, metadata !3044, metadata !DIExpression()), !dbg !3093
  call void @llvm.dbg.value(metadata i32 %132, metadata !3041, metadata !DIExpression()), !dbg !3093
  %198 = getelementptr inbounds i8, i8* %141, i32 1, !dbg !3125
  call void @llvm.dbg.value(metadata i8* %198, metadata !3029, metadata !DIExpression()), !dbg !3093
  %199 = load i8, i8* %198, align 1, !dbg !3127
  %200 = icmp eq i8 %199, 0, !dbg !3128
  br i1 %200, label %226, label %63, !dbg !3129

201:                                              ; preds = %124
  switch i32 %113, label %218 [
    i32 4, label %202
    i32 8, label %208
  ], !dbg !3243

202:                                              ; preds = %201
  %203 = getelementptr inbounds i8, i8* %41, i32 4, !dbg !3244
  call void @llvm.dbg.value(metadata i8* %203, metadata !3030, metadata !DIExpression()), !dbg !3093
  call void @llvm.dbg.value(metadata i32 undef, metadata !3077, metadata !DIExpression()), !dbg !3245
  br i1 %22, label %219, label %204, !dbg !3246

204:                                              ; preds = %202
  %205 = bitcast i8* %41 to i32*, !dbg !3244
  %206 = load i32, i32* %205, align 4, !dbg !3244
  call void @llvm.dbg.value(metadata i32 %206, metadata !3077, metadata !DIExpression()), !dbg !3245
  %207 = inttoptr i32 %118 to i32*, !dbg !3247
  store i32 %206, i32* %207, align 4, !dbg !3250
  br label %219, !dbg !3251

208:                                              ; preds = %201
  %209 = ptrtoint i8* %41 to i32, !dbg !3252
  %210 = add i32 %209, 7, !dbg !3252
  %211 = and i32 %210, -8, !dbg !3252
  %212 = inttoptr i32 %211 to i8*, !dbg !3252
  %213 = getelementptr inbounds i8, i8* %212, i32 8, !dbg !3252
  call void @llvm.dbg.value(metadata i8* %213, metadata !3030, metadata !DIExpression()), !dbg !3093
  call void @llvm.dbg.value(metadata i64 undef, metadata !3083, metadata !DIExpression()), !dbg !3253
  br i1 %22, label %219, label %214, !dbg !3254

214:                                              ; preds = %208
  %215 = inttoptr i32 %211 to i64*, !dbg !3252
  %216 = load i64, i64* %215, align 8, !dbg !3252
  call void @llvm.dbg.value(metadata i64 %216, metadata !3083, metadata !DIExpression()), !dbg !3253
  %217 = inttoptr i32 %118 to i64*, !dbg !3255
  store i64 %216, i64* %217, align 8, !dbg !3260
  br label %219, !dbg !3261

218:                                              ; preds = %201
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.5, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 709) #22, !dbg !3262
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6, i32 0, i32 0), i32 noundef %113) #22, !dbg !3262
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 709) #22, !dbg !3262
  unreachable, !dbg !3262

219:                                              ; preds = %208, %214, %202, %204
  %220 = phi i32 [ 4, %204 ], [ 4, %202 ], [ 8, %214 ], [ 8, %208 ]
  %221 = phi i8* [ %203, %204 ], [ %203, %202 ], [ %213, %214 ], [ %213, %208 ], !dbg !3267
  %222 = getelementptr inbounds i8, i8* %119, i32 %220, !dbg !3267
  call void @llvm.dbg.value(metadata i8* %221, metadata !3030, metadata !DIExpression()), !dbg !3093
  call void @llvm.dbg.value(metadata i8* %40, metadata !3029, metadata !DIExpression()), !dbg !3093
  call void @llvm.dbg.value(metadata i8* %222, metadata !3032, metadata !DIExpression()), !dbg !3093
  call void @llvm.dbg.value(metadata i32 %113, metadata !3033, metadata !DIExpression()), !dbg !3093
  call void @llvm.dbg.value(metadata i32 %112, metadata !3034, metadata !DIExpression()), !dbg !3093
  call void @llvm.dbg.value(metadata i8 poison, metadata !3047, metadata !DIExpression()), !dbg !3093
  call void @llvm.dbg.value(metadata i8 poison, metadata !3044, metadata !DIExpression()), !dbg !3093
  call void @llvm.dbg.value(metadata i32 %72, metadata !3041, metadata !DIExpression()), !dbg !3093
  %223 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !3125
  call void @llvm.dbg.value(metadata i8* %223, metadata !3029, metadata !DIExpression()), !dbg !3093
  %224 = load i8, i8* %223, align 1, !dbg !3127
  %225 = icmp eq i8 %224, 0, !dbg !3128
  br i1 %225, label %226, label %38, !dbg !3129

226:                                              ; preds = %192, %219, %53
  %227 = phi i8* [ %222, %219 ], [ %58, %53 ], [ %197, %192 ], !dbg !3268
  %228 = ptrtoint i8* %227 to i32, !dbg !3269
  %229 = sub i32 %228, %17, !dbg !3269
  %230 = lshr i32 %229, 2, !dbg !3271
  %231 = icmp ugt i32 %229, 1023, !dbg !3272
  br i1 %231, label %232, label %233, !dbg !3273

232:                                              ; preds = %226
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.5, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 721) #22, !dbg !3274
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7, i32 0, i32 0)) #22, !dbg !3274
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 721) #22, !dbg !3274
  unreachable, !dbg !3274

233:                                              ; preds = %226
  br i1 %22, label %234, label %237, !dbg !3279

234:                                              ; preds = %233
  %235 = add i32 %196, -8, !dbg !3280
  %236 = add i32 %235, %229, !dbg !3283
  br label %320, !dbg !3284

237:                                              ; preds = %233
  %238 = trunc i32 %230 to i8, !dbg !3285
  store i8 %238, i8* %0, align 1, !dbg !3286
  %239 = trunc i32 %194 to i8, !dbg !3287
  %240 = select i1 %13, i8 %239, i8 0
  %241 = select i1 %13, i8 0, i8 %239
  %242 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !3289
  store i8 %240, i8* %242, align 1, !dbg !3291
  %243 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !3292
  store i8 %241, i8* %243, align 1, !dbg !3293
  %244 = trunc i32 %193 to i8, !dbg !3294
  %245 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !3295
  store i8 %244, i8* %245, align 1, !dbg !3296
  %246 = icmp eq i32 %193, 0, !dbg !3297
  %247 = xor i1 %246, true, !dbg !3298
  %248 = icmp ne i32 %195, 0
  %249 = select i1 %247, i1 %248, i1 false, !dbg !3298
  call void @llvm.dbg.value(metadata i8* %227, metadata !3032, metadata !DIExpression()), !dbg !3093
  call void @llvm.dbg.value(metadata i32 0, metadata !3042, metadata !DIExpression()), !dbg !3093
  br i1 %249, label %250, label %269, !dbg !3298

250:                                              ; preds = %237
  %251 = sub i32 1, %17
  br label %252, !dbg !3299

252:                                              ; preds = %250, %265
  %253 = phi i8* [ %227, %250 ], [ %266, %265 ]
  %254 = phi i32 [ 0, %250 ], [ %267, %265 ]
  call void @llvm.dbg.value(metadata i8* %253, metadata !3032, metadata !DIExpression()), !dbg !3093
  call void @llvm.dbg.value(metadata i32 %254, metadata !3042, metadata !DIExpression()), !dbg !3093
  %255 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %254, !dbg !3300
  %256 = load i8, i8* %255, align 1, !dbg !3300
  %257 = icmp sgt i8 %256, -1, !dbg !3302
  br i1 %257, label %265, label %258, !dbg !3303

258:                                              ; preds = %252
  call void @llvm.dbg.value(metadata i8 %256, metadata !3086, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 127, DW_OP_and, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3304
  %259 = ptrtoint i8* %253 to i32, !dbg !3305
  %260 = add i32 %251, %259, !dbg !3307
  %261 = icmp ugt i32 %260, %196, !dbg !3308
  br i1 %261, label %320, label %262, !dbg !3309

262:                                              ; preds = %258
  %263 = and i8 %256, 127, !dbg !3310
  call void @llvm.dbg.value(metadata i8 %263, metadata !3086, metadata !DIExpression()), !dbg !3304
  %264 = getelementptr inbounds i8, i8* %253, i32 1, !dbg !3311
  call void @llvm.dbg.value(metadata i8* %264, metadata !3032, metadata !DIExpression()), !dbg !3093
  store i8 %263, i8* %253, align 1, !dbg !3312
  br label %265

265:                                              ; preds = %262, %252
  %266 = phi i8* [ %264, %262 ], [ %253, %252 ], !dbg !3242
  call void @llvm.dbg.value(metadata i8* %266, metadata !3032, metadata !DIExpression()), !dbg !3093
  %267 = add nuw i32 %254, 1, !dbg !3313
  call void @llvm.dbg.value(metadata i32 %267, metadata !3042, metadata !DIExpression()), !dbg !3093
  %268 = icmp eq i32 %267, %195, !dbg !3314
  br i1 %268, label %269, label %252, !dbg !3299, !llvm.loop !3315

269:                                              ; preds = %265, %237
  %270 = phi i8* [ %227, %237 ], [ %266, %265 ], !dbg !3242
  call void @llvm.dbg.value(metadata i8* %270, metadata !3032, metadata !DIExpression()), !dbg !3093
  call void @llvm.dbg.value(metadata i32 0, metadata !3042, metadata !DIExpression()), !dbg !3093
  call void @llvm.dbg.value(metadata i8* %133, metadata !3043, metadata !DIExpression()), !dbg !3093
  %271 = icmp eq i32 %195, 0, !dbg !3317
  br i1 %271, label %316, label %272, !dbg !3320

272:                                              ; preds = %269
  %273 = sub i32 1, %17
  br label %274, !dbg !3320

274:                                              ; preds = %272, %311
  %275 = phi i8* [ %270, %272 ], [ %313, %311 ]
  %276 = phi i8* [ %133, %272 ], [ %312, %311 ]
  %277 = phi i32 [ 0, %272 ], [ %314, %311 ]
  call void @llvm.dbg.value(metadata i8* %275, metadata !3032, metadata !DIExpression()), !dbg !3093
  call void @llvm.dbg.value(metadata i8* %276, metadata !3043, metadata !DIExpression()), !dbg !3093
  call void @llvm.dbg.value(metadata i32 %277, metadata !3042, metadata !DIExpression()), !dbg !3093
  br i1 %246, label %282, label %278, !dbg !3321

278:                                              ; preds = %274
  %279 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %277, !dbg !3324
  %280 = load i8, i8* %279, align 1, !dbg !3324
  %281 = icmp sgt i8 %280, -1, !dbg !3325
  br i1 %281, label %282, label %311, !dbg !3326

282:                                              ; preds = %278, %274
  br i1 %13, label %287, label %283, !dbg !3327

283:                                              ; preds = %282
  call void @llvm.dbg.value(metadata i32 0, metadata !3033, metadata !DIExpression()), !dbg !3093
  %284 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %277, !dbg !3328
  %285 = load i8, i8* %284, align 1, !dbg !3328
  %286 = getelementptr inbounds i8, i8* %275, i32 1, !dbg !3331
  call void @llvm.dbg.value(metadata i8* %286, metadata !3032, metadata !DIExpression()), !dbg !3093
  store i8 %285, i8* %275, align 1, !dbg !3332
  br label %297, !dbg !3333

287:                                              ; preds = %282
  %288 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %277, !dbg !3334
  %289 = load i8, i8* %288, align 1, !dbg !3334
  %290 = zext i8 %289 to i32, !dbg !3334
  %291 = shl nuw nsw i32 %290, 2, !dbg !3336
  %292 = getelementptr inbounds i8, i8* %0, i32 %291, !dbg !3337
  %293 = bitcast i8* %292 to i8**, !dbg !3338
  %294 = load i8*, i8** %293, align 4, !dbg !3338
  call void @llvm.dbg.value(metadata i8* %294, metadata !3043, metadata !DIExpression()), !dbg !3093
  store i8* null, i8** %293, align 4, !dbg !3339
  %295 = tail call i32 @strlen(i8* noundef %294) #22, !dbg !3340
  %296 = add i32 %295, 1, !dbg !3341
  call void @llvm.dbg.value(metadata i32 %296, metadata !3033, metadata !DIExpression()), !dbg !3093
  br label %297

297:                                              ; preds = %287, %283
  %298 = phi i8* [ %276, %283 ], [ %294, %287 ], !dbg !3093
  %299 = phi i32 [ 0, %283 ], [ %296, %287 ], !dbg !3342
  %300 = phi i8* [ %286, %283 ], [ %275, %287 ], !dbg !3093
  call void @llvm.dbg.value(metadata i8* %300, metadata !3032, metadata !DIExpression()), !dbg !3093
  call void @llvm.dbg.value(metadata i32 %299, metadata !3033, metadata !DIExpression()), !dbg !3093
  call void @llvm.dbg.value(metadata i8* %298, metadata !3043, metadata !DIExpression()), !dbg !3093
  %301 = ptrtoint i8* %300 to i32, !dbg !3343
  %302 = add i32 %273, %299, !dbg !3345
  %303 = add i32 %302, %301, !dbg !3346
  %304 = icmp ugt i32 %303, %196, !dbg !3347
  br i1 %304, label %320, label %305, !dbg !3348

305:                                              ; preds = %297
  %306 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %277, !dbg !3349
  %307 = load i8, i8* %306, align 1, !dbg !3349
  %308 = getelementptr inbounds i8, i8* %300, i32 1, !dbg !3350
  call void @llvm.dbg.value(metadata i8* %308, metadata !3032, metadata !DIExpression()), !dbg !3093
  store i8 %307, i8* %300, align 1, !dbg !3351
  %309 = tail call i8* @memcpy(i8* noundef nonnull %308, i8* noundef %298, i32 noundef %299) #22, !dbg !3352
  %310 = getelementptr inbounds i8, i8* %308, i32 %299, !dbg !3353
  call void @llvm.dbg.value(metadata i8* %310, metadata !3032, metadata !DIExpression()), !dbg !3093
  br label %311, !dbg !3354

311:                                              ; preds = %278, %305
  %312 = phi i8* [ %276, %278 ], [ %298, %305 ], !dbg !3355
  %313 = phi i8* [ %275, %278 ], [ %310, %305 ], !dbg !3093
  call void @llvm.dbg.value(metadata i8* %313, metadata !3032, metadata !DIExpression()), !dbg !3093
  call void @llvm.dbg.value(metadata i8* %312, metadata !3043, metadata !DIExpression()), !dbg !3093
  %314 = add nuw i32 %277, 1, !dbg !3356
  call void @llvm.dbg.value(metadata i32 %314, metadata !3042, metadata !DIExpression()), !dbg !3093
  %315 = icmp eq i32 %314, %195, !dbg !3317
  br i1 %315, label %316, label %274, !dbg !3320, !llvm.loop !3357

316:                                              ; preds = %311, %269
  %317 = phi i8* [ %270, %269 ], [ %313, %311 ], !dbg !3242
  %318 = ptrtoint i8* %317 to i32, !dbg !3359
  %319 = sub i32 %318, %17, !dbg !3359
  br label %320, !dbg !3360

320:                                              ; preds = %120, %99, %258, %297, %28, %5, %316, %234
  %321 = phi i32 [ %236, %234 ], [ %319, %316 ], [ -14, %5 ], [ -28, %28 ], [ -28, %297 ], [ -28, %258 ], [ -28, %99 ], [ -28, %120 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #20, !dbg !3361
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #20, !dbg !3361
  ret i32 %321, !dbg !3361
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #3

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @ptr_in_rodata(i8* noundef readnone %0) unnamed_addr #2 !dbg !3362 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3366, metadata !DIExpression()), !dbg !3367
  %2 = tail call fastcc zeroext i1 @linker_is_in_rodata(i8* noundef %0) #21, !dbg !3368
  ret i1 %2, !dbg !3369
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @linker_is_in_rodata(i8* noundef readnone %0) unnamed_addr #2 !dbg !3370 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3373, metadata !DIExpression()), !dbg !3374
  %2 = icmp uge i8* %0, getelementptr inbounds ([0 x i8], [0 x i8]* @__rodata_region_start, i32 0, i32 0), !dbg !3375
  %3 = icmp ult i8* %0, getelementptr inbounds ([0 x i8], [0 x i8]* @__rodata_region_end, i32 0, i32 0), !dbg !3376
  %4 = and i1 %2, %3, !dbg !3376
  ret i1 %4, !dbg !3377
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, ...) local_unnamed_addr #1 !dbg !3378 {
  %5 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3382, metadata !DIExpression()), !dbg !3388
  call void @llvm.dbg.value(metadata i32 %1, metadata !3383, metadata !DIExpression()), !dbg !3388
  call void @llvm.dbg.value(metadata i32 %2, metadata !3384, metadata !DIExpression()), !dbg !3388
  call void @llvm.dbg.value(metadata i8* %3, metadata !3385, metadata !DIExpression()), !dbg !3388
  %6 = bitcast %struct.__va_list* %5 to i8*, !dbg !3389
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #20, !dbg !3389
  call void @llvm.dbg.declare(metadata %struct.__va_list* %5, metadata !3386, metadata !DIExpression()), !dbg !3390
  call void @llvm.va_start(i8* nonnull %6), !dbg !3391
  %7 = bitcast %struct.__va_list* %5 to i32*, !dbg !3392
  %8 = load i32, i32* %7, align 4, !dbg !3392
  %9 = insertvalue [1 x i32] poison, i32 %8, 0, !dbg !3392
  %10 = call i32 @cbvprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %9) #21, !dbg !3392
  call void @llvm.dbg.value(metadata i32 %10, metadata !3387, metadata !DIExpression()), !dbg !3388
  call void @llvm.va_end(i8* nonnull %6), !dbg !3393
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #20, !dbg !3394
  ret i32 %10, !dbg !3395
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #5

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #5

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbpprintf_external(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* nocapture noundef readonly %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #1 !dbg !3396 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !3408, metadata !DIExpression()), !dbg !3427
  call void @llvm.dbg.value(metadata i32 (i32 (...)*, i8*, i8*, [1 x i32])* %1, metadata !3409, metadata !DIExpression()), !dbg !3427
  call void @llvm.dbg.value(metadata i8* %2, metadata !3410, metadata !DIExpression()), !dbg !3427
  call void @llvm.dbg.value(metadata i8* %3, metadata !3411, metadata !DIExpression()), !dbg !3427
  call void @llvm.dbg.value(metadata i8* %3, metadata !3412, metadata !DIExpression()), !dbg !3427
  call void @llvm.dbg.value(metadata i8* %3, metadata !3413, metadata !DIExpression()), !dbg !3427
  %5 = icmp eq i8* %3, null, !dbg !3428
  br i1 %5, label %45, label %6, !dbg !3430

6:                                                ; preds = %4
  call void @llvm.dbg.value(metadata i8 undef, metadata !3422, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !3427
  %7 = getelementptr inbounds i8, i8* %3, i32 1, !dbg !3431
  %8 = load i8, i8* %7, align 1, !dbg !3431
  %9 = zext i8 %8 to i32, !dbg !3432
  call void @llvm.dbg.value(metadata i32 %9, metadata !3423, metadata !DIExpression()), !dbg !3427
  call void @llvm.dbg.value(metadata i8 undef, metadata !3424, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3427
  call void @llvm.dbg.value(metadata i8 undef, metadata !3425, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3427
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i8 undef), metadata !3419, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3427
  call void @llvm.dbg.value(metadata i32 0, metadata !3421, metadata !DIExpression()), !dbg !3427
  %10 = icmp eq i8 %8, 0, !dbg !3433
  br i1 %10, label %39, label %11, !dbg !3436

11:                                               ; preds = %6
  %12 = load i8, i8* %3, align 1, !dbg !3437
  call void @llvm.dbg.value(metadata i8 %12, metadata !3422, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !3427
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i8 %12), metadata !3419, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3427
  %13 = zext i8 %12 to i32, !dbg !3438
  call void @llvm.dbg.value(metadata i32 %13, metadata !3422, metadata !DIExpression(DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !3427
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i32 %13), metadata !3419, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3427
  %14 = shl nuw nsw i32 %13, 2, !dbg !3439
  call void @llvm.dbg.value(metadata i32 %14, metadata !3422, metadata !DIExpression()), !dbg !3427
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i32 %14), metadata !3419, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3427
  %15 = getelementptr inbounds i8, i8* %3, i32 %14, !dbg !3440
  call void @llvm.dbg.value(metadata !DIArgList(i8* %15, i8 undef, i8 undef), metadata !3419, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3427
  %16 = getelementptr inbounds i8, i8* %3, i32 2, !dbg !3441
  %17 = load i8, i8* %16, align 1, !dbg !3441
  call void @llvm.dbg.value(metadata i8 %17, metadata !3424, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3427
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 %17, i8 undef), metadata !3419, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3427
  %18 = zext i8 %17 to i32, !dbg !3442
  call void @llvm.dbg.value(metadata i32 %18, metadata !3424, metadata !DIExpression()), !dbg !3427
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i32 %18, i8 undef), metadata !3419, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3427
  %19 = getelementptr inbounds i8, i8* %15, i32 %18, !dbg !3443
  call void @llvm.dbg.value(metadata !DIArgList(i8* %19, i8 undef), metadata !3419, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3427
  %20 = getelementptr inbounds i8, i8* %3, i32 3, !dbg !3444
  %21 = load i8, i8* %20, align 1, !dbg !3444
  call void @llvm.dbg.value(metadata i8 %21, metadata !3425, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3427
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 %21, i8 undef, i8 undef), metadata !3419, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3427
  %22 = zext i8 %21 to i32, !dbg !3445
  call void @llvm.dbg.value(metadata i32 %22, metadata !3425, metadata !DIExpression()), !dbg !3427
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i32 %22, i8 undef, i8 undef), metadata !3419, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3427
  %23 = shl nuw nsw i32 %22, 1, !dbg !3446
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i32 %23, i8 undef, i8 undef), metadata !3419, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3427
  %24 = getelementptr inbounds i8, i8* %19, i32 %23, !dbg !3447
  call void @llvm.dbg.value(metadata i8* %24, metadata !3419, metadata !DIExpression()), !dbg !3427
  br label %25, !dbg !3436

25:                                               ; preds = %11, %25
  %26 = phi i8* [ %36, %25 ], [ %24, %11 ]
  %27 = phi i32 [ %37, %25 ], [ 0, %11 ]
  call void @llvm.dbg.value(metadata i8* %26, metadata !3419, metadata !DIExpression()), !dbg !3427
  call void @llvm.dbg.value(metadata i32 %27, metadata !3421, metadata !DIExpression()), !dbg !3427
  %28 = getelementptr inbounds i8, i8* %26, i32 1, !dbg !3448
  call void @llvm.dbg.value(metadata i8* %28, metadata !3419, metadata !DIExpression()), !dbg !3427
  %29 = load i8, i8* %26, align 1, !dbg !3450
  %30 = zext i8 %29 to i32, !dbg !3450
  call void @llvm.dbg.value(metadata i32 %30, metadata !3426, metadata !DIExpression()), !dbg !3427
  %31 = shl nuw nsw i32 %30, 2, !dbg !3451
  %32 = getelementptr inbounds i8, i8* %3, i32 %31, !dbg !3452
  %33 = bitcast i8* %32 to i8**, !dbg !3453
  call void @llvm.dbg.value(metadata i8** %33, metadata !3420, metadata !DIExpression()), !dbg !3427
  store i8* %28, i8** %33, align 4, !dbg !3454
  %34 = tail call i32 @strlen(i8* noundef nonnull %28) #22, !dbg !3455
  %35 = add i32 %34, 1, !dbg !3456
  %36 = getelementptr inbounds i8, i8* %28, i32 %35, !dbg !3457
  call void @llvm.dbg.value(metadata i8* %36, metadata !3419, metadata !DIExpression()), !dbg !3427
  %37 = add nuw nsw i32 %27, 1, !dbg !3458
  call void @llvm.dbg.value(metadata i32 %37, metadata !3421, metadata !DIExpression()), !dbg !3427
  %38 = icmp eq i32 %37, %9, !dbg !3433
  br i1 %38, label %39, label %25, !dbg !3436, !llvm.loop !3459

39:                                               ; preds = %25, %6
  %40 = getelementptr inbounds i8, i8* %3, i32 8, !dbg !3461
  call void @llvm.dbg.value(metadata i8* %40, metadata !3412, metadata !DIExpression()), !dbg !3427
  %41 = getelementptr inbounds i8, i8* %3, i32 4, !dbg !3462
  %42 = bitcast i8* %41 to i8**, !dbg !3462
  %43 = load i8*, i8** %42, align 1, !dbg !3462
  %44 = tail call fastcc i32 @cbprintf_via_va_list(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* noundef %1, i8* noundef %2, i8* noundef %43, i8* noundef nonnull %40) #21, !dbg !3463
  br label %45, !dbg !3464

45:                                               ; preds = %4, %39
  %46 = phi i32 [ %44, %39 ], [ -22, %4 ], !dbg !3427
  ret i32 %46, !dbg !3465
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @cbprintf_via_va_list(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* nocapture noundef readonly %1, i8* noundef %2, i8* noundef %3, i8* noundef %4) unnamed_addr #1 !dbg !3466 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !3470, metadata !DIExpression()), !dbg !3480
  call void @llvm.dbg.value(metadata i32 (i32 (...)*, i8*, i8*, [1 x i32])* %1, metadata !3471, metadata !DIExpression()), !dbg !3480
  call void @llvm.dbg.value(metadata i8* %2, metadata !3472, metadata !DIExpression()), !dbg !3480
  call void @llvm.dbg.value(metadata i8* %3, metadata !3473, metadata !DIExpression()), !dbg !3480
  call void @llvm.dbg.value(metadata i8* %4, metadata !3474, metadata !DIExpression()), !dbg !3480
  call void @llvm.dbg.value(metadata i8* %4, metadata !3475, metadata !DIExpression()), !dbg !3480
  %6 = ptrtoint i8* %4 to i32, !dbg !3481
  %7 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !3481
  %8 = tail call i32 %1(i32 (...)* noundef %0, i8* noundef %2, i8* noundef %3, [1 x i32] %7) #22, !dbg !3481
  ret i32 %8, !dbg !3482
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local zeroext i1 @is_ptr(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #6 !dbg !3483 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3487, metadata !DIExpression()), !dbg !3492
  call void @llvm.dbg.value(metadata i32 %1, metadata !3488, metadata !DIExpression()), !dbg !3492
  call void @llvm.dbg.value(metadata i8 0, metadata !3490, metadata !DIExpression()), !dbg !3492
  call void @llvm.dbg.value(metadata i32 0, metadata !3491, metadata !DIExpression()), !dbg !3492
  call void @llvm.dbg.value(metadata i8 poison, metadata !3490, metadata !DIExpression()), !dbg !3492
  call void @llvm.dbg.value(metadata i8* %0, metadata !3487, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3492
  %3 = load i8, i8* %0, align 1, !dbg !3493
  call void @llvm.dbg.value(metadata i8 %3, metadata !3489, metadata !DIExpression()), !dbg !3492
  %4 = icmp eq i8 %3, 0, !dbg !3494
  br i1 %4, label %29, label %5, !dbg !3495

5:                                                ; preds = %2, %22
  %6 = phi i8 [ %27, %22 ], [ %3, %2 ]
  %7 = phi i8* [ %10, %22 ], [ %0, %2 ]
  %8 = phi i32 [ %24, %22 ], [ 0, %2 ]
  %9 = phi i1 [ %26, %22 ], [ false, %2 ]
  %10 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !3496
  call void @llvm.dbg.value(metadata i32 %8, metadata !3491, metadata !DIExpression()), !dbg !3492
  br i1 %9, label %11, label %22, !dbg !3497

11:                                               ; preds = %5
  %12 = icmp eq i32 %8, %1, !dbg !3499
  br i1 %12, label %13, label %17, !dbg !3503

13:                                               ; preds = %11
  %14 = icmp eq i8 %6, 112, !dbg !3504
  br i1 %14, label %29, label %15, !dbg !3507

15:                                               ; preds = %13
  %16 = tail call fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %6) #21, !dbg !3508
  br i1 %16, label %29, label %22, !dbg !3510

17:                                               ; preds = %11
  %18 = tail call fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %6) #21, !dbg !3511
  %19 = xor i1 %18, true, !dbg !3513
  %20 = zext i1 %18 to i32, !dbg !3513
  %21 = add nsw i32 %8, %20, !dbg !3513
  br label %22, !dbg !3513

22:                                               ; preds = %17, %15, %5
  %23 = phi i1 [ true, %15 ], [ false, %5 ], [ %19, %17 ]
  %24 = phi i32 [ %1, %15 ], [ %8, %5 ], [ %21, %17 ], !dbg !3492
  call void @llvm.dbg.value(metadata i32 %24, metadata !3491, metadata !DIExpression()), !dbg !3492
  call void @llvm.dbg.value(metadata i8 poison, metadata !3490, metadata !DIExpression()), !dbg !3492
  %25 = icmp eq i8 %6, 37, !dbg !3514
  %26 = xor i1 %25, %23, !dbg !3516
  call void @llvm.dbg.value(metadata i8* %10, metadata !3487, metadata !DIExpression()), !dbg !3492
  call void @llvm.dbg.value(metadata i8* %10, metadata !3487, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3492
  %27 = load i8, i8* %10, align 1, !dbg !3493
  call void @llvm.dbg.value(metadata i8 %27, metadata !3489, metadata !DIExpression()), !dbg !3492
  %28 = icmp eq i8 %27, 0, !dbg !3494
  br i1 %28, label %29, label %5, !dbg !3495, !llvm.loop !3517

29:                                               ; preds = %13, %15, %22, %2
  %30 = phi i1 [ false, %2 ], [ false, %22 ], [ false, %15 ], [ true, %13 ], !dbg !3492
  ret i1 %30, !dbg !3519
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %0) unnamed_addr #2 !dbg !3520 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !3524, metadata !DIExpression()), !dbg !3525
  %2 = add i8 %0, -64, !dbg !3526
  %3 = icmp ult i8 %2, 59, !dbg !3526
  ret i1 %3, !dbg !3527
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbprintf_package_convert(i8* noundef %0, i32 noundef %1, i32 (i8*, i32, i8*)* noundef %2, i8* noundef %3, i32 noundef %4, i16* noundef %5, i32 noundef %6) local_unnamed_addr #1 !dbg !3528 {
  %8 = alloca [16 x i8], align 1
  %9 = alloca [16 x i8], align 1
  %10 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !3536, metadata !DIExpression()), !dbg !3605
  call void @llvm.dbg.value(metadata i32 %1, metadata !3537, metadata !DIExpression()), !dbg !3605
  call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %2, metadata !3538, metadata !DIExpression()), !dbg !3605
  call void @llvm.dbg.value(metadata i8* %3, metadata !3539, metadata !DIExpression()), !dbg !3605
  call void @llvm.dbg.value(metadata i32 %4, metadata !3540, metadata !DIExpression()), !dbg !3605
  call void @llvm.dbg.value(metadata i16* %5, metadata !3541, metadata !DIExpression()), !dbg !3605
  call void @llvm.dbg.value(metadata i32 %6, metadata !3542, metadata !DIExpression()), !dbg !3605
  %11 = icmp eq i8* %0, null, !dbg !3606
  br i1 %11, label %12, label %13, !dbg !3609

12:                                               ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.8, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 916) #22, !dbg !3610
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 916) #22, !dbg !3610
  unreachable, !dbg !3610

13:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i8* %0, metadata !3543, metadata !DIExpression()), !dbg !3605
  %14 = bitcast i8* %0 to i32*, !dbg !3612
  call void @llvm.dbg.value(metadata i32* %14, metadata !3544, metadata !DIExpression()), !dbg !3605
  %15 = and i32 %4, 8, !dbg !3613
  %16 = icmp eq i32 %15, 0, !dbg !3614
  call void @llvm.dbg.value(metadata i1 %16, metadata !3548, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3605
  call void @llvm.dbg.value(metadata i8* %0, metadata !3551, metadata !DIExpression()), !dbg !3605
  %17 = icmp eq i32 %1, 0, !dbg !3615
  br i1 %17, label %18, label %20, !dbg !3616

18:                                               ; preds = %13
  %19 = tail call fastcc i32 @get_package_len(i8* noundef nonnull %0) #21, !dbg !3617
  br label %20, !dbg !3616

20:                                               ; preds = %13, %18
  %21 = phi i32 [ %19, %18 ], [ %1, %13 ], !dbg !3616
  call void @llvm.dbg.value(metadata i32 %21, metadata !3537, metadata !DIExpression()), !dbg !3605
  %22 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !3618
  %23 = load i8, i8* %22, align 1, !dbg !3618
  %24 = zext i8 %23 to i32, !dbg !3619
  call void @llvm.dbg.value(metadata i32 %24, metadata !3546, metadata !DIExpression()), !dbg !3605
  %25 = icmp ne i8 %23, 0, !dbg !3620
  %26 = and i32 %4, 1, !dbg !3621
  %27 = icmp ne i32 %26, 0, !dbg !3621
  %28 = and i1 %27, %25, !dbg !3621
  call void @llvm.dbg.value(metadata i1 %28, metadata !3550, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3605
  %29 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !3622
  %30 = load i8, i8* %29, align 1, !dbg !3622
  %31 = zext i8 %30 to i32, !dbg !3623
  call void @llvm.dbg.value(metadata i32 %31, metadata !3547, metadata !DIExpression()), !dbg !3605
  %32 = icmp ne i8 %30, 0, !dbg !3624
  %33 = and i32 %4, 2, !dbg !3625
  %34 = icmp ne i32 %33, 0, !dbg !3625
  %35 = and i1 %34, %32, !dbg !3625
  call void @llvm.dbg.value(metadata i1 %35, metadata !3549, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3605
  %36 = select i1 %35, i1 true, i1 %28, !dbg !3626
  br i1 %36, label %41, label %37, !dbg !3626

37:                                               ; preds = %20
  %38 = icmp eq i32 (i8*, i32, i8*)* %2, null, !dbg !3628
  br i1 %38, label %287, label %39, !dbg !3631

39:                                               ; preds = %37
  %40 = tail call i32 %2(i8* noundef nonnull %0, i32 noundef %21, i8* noundef %3) #22, !dbg !3632
  br label %287, !dbg !3634

41:                                               ; preds = %20
  %42 = load i8, i8* %0, align 1, !dbg !3635
  %43 = zext i8 %42 to i32, !dbg !3636
  %44 = shl nuw nsw i32 %43, 2, !dbg !3637
  call void @llvm.dbg.value(metadata i32 %44, metadata !3545, metadata !DIExpression()), !dbg !3605
  %45 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !3638
  %46 = bitcast i8* %45 to i8**, !dbg !3639
  %47 = load i8*, i8** %46, align 4, !dbg !3639
  call void @llvm.dbg.value(metadata i8* %47, metadata !3554, metadata !DIExpression()), !dbg !3605
  %48 = getelementptr inbounds i8, i8* %0, i32 %44, !dbg !3640
  call void @llvm.dbg.value(metadata i8* %48, metadata !3555, metadata !DIExpression()), !dbg !3605
  call void @llvm.dbg.value(metadata i32 0, metadata !3556, metadata !DIExpression()), !dbg !3605
  %49 = icmp eq i32 (i8*, i32, i8*)* %2, null, !dbg !3641
  br i1 %49, label %50, label %135, !dbg !3642

50:                                               ; preds = %41
  call void @llvm.dbg.value(metadata i32 %21, metadata !3553, metadata !DIExpression()), !dbg !3605
  br i1 %28, label %51, label %76, !dbg !3643

51:                                               ; preds = %50
  call void @llvm.dbg.value(metadata i32 %21, metadata !3553, metadata !DIExpression()), !dbg !3605
  call void @llvm.dbg.value(metadata i8* %48, metadata !3555, metadata !DIExpression()), !dbg !3605
  call void @llvm.dbg.value(metadata i32 0, metadata !3556, metadata !DIExpression()), !dbg !3605
  call void @llvm.dbg.value(metadata i32 0, metadata !3557, metadata !DIExpression()), !dbg !3644
  %52 = icmp ne i16* %5, null
  br label %53, !dbg !3645

53:                                               ; preds = %51, %70
  %54 = phi i32 [ %21, %51 ], [ %72, %70 ]
  %55 = phi i8* [ %48, %51 ], [ %73, %70 ]
  %56 = phi i32 [ 0, %51 ], [ %71, %70 ]
  %57 = phi i32 [ 0, %51 ], [ %74, %70 ]
  call void @llvm.dbg.value(metadata i32 %54, metadata !3553, metadata !DIExpression()), !dbg !3605
  call void @llvm.dbg.value(metadata i8* %55, metadata !3555, metadata !DIExpression()), !dbg !3605
  call void @llvm.dbg.value(metadata i32 %56, metadata !3556, metadata !DIExpression()), !dbg !3605
  call void @llvm.dbg.value(metadata i32 %57, metadata !3557, metadata !DIExpression()), !dbg !3644
  %58 = load i8, i8* %55, align 1, !dbg !3646
  %59 = zext i8 %58 to i32, !dbg !3647
  %60 = getelementptr inbounds i32, i32* %14, i32 %59, !dbg !3647
  %61 = bitcast i32* %60 to i8**, !dbg !3648
  %62 = load i8*, i8** %61, align 4, !dbg !3648
  call void @llvm.dbg.value(metadata i8* %62, metadata !3563, metadata !DIExpression()), !dbg !3649
  %63 = tail call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef null, i8* noundef null, i8* noundef %62, i16 noundef zeroext 0) #21, !dbg !3650
  call void @llvm.dbg.value(metadata i32 %63, metadata !3566, metadata !DIExpression()), !dbg !3649
  %64 = icmp ult i32 %56, %6
  %65 = select i1 %52, i1 %64, i1 false, !dbg !3651
  br i1 %65, label %66, label %70, !dbg !3651

66:                                               ; preds = %53
  %67 = trunc i32 %63 to i16, !dbg !3653
  %68 = add nuw i32 %56, 1, !dbg !3655
  call void @llvm.dbg.value(metadata i32 %68, metadata !3556, metadata !DIExpression()), !dbg !3605
  %69 = getelementptr inbounds i16, i16* %5, i32 %56, !dbg !3656
  store i16 %67, i16* %69, align 2, !dbg !3657
  br label %70, !dbg !3658

70:                                               ; preds = %66, %53
  %71 = phi i32 [ %68, %66 ], [ %56, %53 ], !dbg !3605
  call void @llvm.dbg.value(metadata i32 %71, metadata !3556, metadata !DIExpression()), !dbg !3605
  %72 = add nsw i32 %63, %54, !dbg !3659
  call void @llvm.dbg.value(metadata i32 %72, metadata !3553, metadata !DIExpression()), !dbg !3605
  %73 = getelementptr inbounds i8, i8* %55, i32 1, !dbg !3660
  call void @llvm.dbg.value(metadata i8* %73, metadata !3555, metadata !DIExpression()), !dbg !3605
  %74 = add nuw nsw i32 %57, 1, !dbg !3661
  call void @llvm.dbg.value(metadata i32 %74, metadata !3557, metadata !DIExpression()), !dbg !3644
  %75 = icmp eq i32 %74, %24, !dbg !3662
  br i1 %75, label %82, label %53, !dbg !3645, !llvm.loop !3663

76:                                               ; preds = %50
  %77 = and i32 %4, 4
  %78 = icmp ne i32 %77, 0
  %79 = and i1 %78, %25, !dbg !3665
  %80 = select i1 %79, i32 %24, i32 0, !dbg !3665
  %81 = getelementptr i8, i8* %48, i32 %80, !dbg !3665
  br label %82, !dbg !3665

82:                                               ; preds = %70, %76
  %83 = phi i32 [ 0, %76 ], [ %71, %70 ], !dbg !3668
  %84 = phi i8* [ %81, %76 ], [ %73, %70 ], !dbg !3605
  %85 = phi i32 [ %21, %76 ], [ %72, %70 ], !dbg !3669
  call void @llvm.dbg.value(metadata i1 undef, metadata !3567, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3670
  call void @llvm.dbg.value(metadata i32 0, metadata !3568, metadata !DIExpression()), !dbg !3671
  call void @llvm.dbg.value(metadata i32 %85, metadata !3553, metadata !DIExpression()), !dbg !3605
  call void @llvm.dbg.value(metadata i8* %84, metadata !3555, metadata !DIExpression()), !dbg !3605
  call void @llvm.dbg.value(metadata i32 %83, metadata !3556, metadata !DIExpression()), !dbg !3605
  %86 = icmp eq i8 %30, 0, !dbg !3672
  br i1 %86, label %287, label %87, !dbg !3673

87:                                               ; preds = %82
  %88 = and i32 %4, 5, !dbg !3674
  %89 = icmp eq i32 %88, 0, !dbg !3675
  call void @llvm.dbg.value(metadata i1 %89, metadata !3567, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3670
  %90 = icmp eq i32 %33, 0
  %91 = icmp eq i32 %26, 0
  %92 = icmp ne i16* %5, null
  %93 = select i1 %89, i32 -2, i32 -1
  br label %94, !dbg !3673

94:                                               ; preds = %87, %130
  %95 = phi i32 [ %85, %87 ], [ %132, %130 ]
  %96 = phi i8* [ %84, %87 ], [ %100, %130 ]
  %97 = phi i32 [ %83, %87 ], [ %131, %130 ]
  %98 = phi i32 [ 0, %87 ], [ %133, %130 ]
  call void @llvm.dbg.value(metadata i32 %95, metadata !3553, metadata !DIExpression()), !dbg !3605
  call void @llvm.dbg.value(metadata i8* %96, metadata !3555, metadata !DIExpression()), !dbg !3605
  call void @llvm.dbg.value(metadata i32 %97, metadata !3556, metadata !DIExpression()), !dbg !3605
  call void @llvm.dbg.value(metadata i32 %98, metadata !3568, metadata !DIExpression()), !dbg !3671
  %99 = getelementptr inbounds i8, i8* %96, i32 1, !dbg !3676
  call void @llvm.dbg.value(metadata i8* %99, metadata !3555, metadata !DIExpression()), !dbg !3605
  call void @llvm.dbg.value(metadata i8 undef, metadata !3570, metadata !DIExpression()), !dbg !3677
  %100 = getelementptr inbounds i8, i8* %96, i32 2, !dbg !3678
  call void @llvm.dbg.value(metadata i8* %100, metadata !3555, metadata !DIExpression()), !dbg !3605
  %101 = load i8, i8* %99, align 1, !dbg !3679
  call void @llvm.dbg.value(metadata i8 %101, metadata !3573, metadata !DIExpression()), !dbg !3677
  %102 = zext i8 %101 to i32, !dbg !3680
  %103 = getelementptr inbounds i32, i32* %14, i32 %102, !dbg !3680
  %104 = bitcast i32* %103 to i8**, !dbg !3681
  %105 = load i8*, i8** %104, align 4, !dbg !3681
  call void @llvm.dbg.value(metadata i8* %105, metadata !3574, metadata !DIExpression()), !dbg !3677
  %106 = tail call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %105) #21, !dbg !3682
  call void @llvm.dbg.value(metadata i1 %106, metadata !3575, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3677
  br i1 %16, label %113, label %107, !dbg !3683

107:                                              ; preds = %94
  %108 = load i8, i8* %96, align 1, !dbg !3685
  call void @llvm.dbg.value(metadata i8 %108, metadata !3570, metadata !DIExpression()), !dbg !3677
  %109 = zext i8 %108 to i32, !dbg !3686
  %110 = tail call zeroext i1 @is_ptr(i8* noundef %47, i32 noundef %109) #21, !dbg !3687
  br i1 %110, label %111, label %113, !dbg !3688

111:                                              ; preds = %107
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([168 x i8], [168 x i8]* @.str.9, i32 0, i32 0), i32 noundef 87, i8* noundef %47, i32 noundef %109) #22, !dbg !3689
  %112 = add nsw i32 %95, -2, !dbg !3695
  call void @llvm.dbg.value(metadata i32 %112, metadata !3553, metadata !DIExpression()), !dbg !3605
  br label %130, !dbg !3696

113:                                              ; preds = %107, %94
  br i1 %106, label %114, label %117, !dbg !3697

114:                                              ; preds = %113
  br i1 %91, label %115, label %118, !dbg !3698

115:                                              ; preds = %114
  %116 = add i32 %95, %93, !dbg !3700
  call void @llvm.dbg.value(metadata i32 %116, metadata !3553, metadata !DIExpression()), !dbg !3605
  br label %130, !dbg !3703

117:                                              ; preds = %113
  br i1 %90, label %130, label %118, !dbg !3704

118:                                              ; preds = %117, %114
  call void @llvm.dbg.label(metadata !3601), !dbg !3705
  %119 = tail call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef null, i8* noundef null, i8* noundef %105, i16 noundef zeroext 0) #21, !dbg !3706
  call void @llvm.dbg.value(metadata i32 %119, metadata !3576, metadata !DIExpression()), !dbg !3677
  %120 = icmp ult i32 %97, %6
  %121 = select i1 %92, i1 %120, i1 false, !dbg !3707
  br i1 %121, label %122, label %126, !dbg !3707

122:                                              ; preds = %118
  %123 = trunc i32 %119 to i16, !dbg !3709
  %124 = add nuw i32 %97, 1, !dbg !3711
  call void @llvm.dbg.value(metadata i32 %124, metadata !3556, metadata !DIExpression()), !dbg !3605
  %125 = getelementptr inbounds i16, i16* %5, i32 %97, !dbg !3712
  store i16 %123, i16* %125, align 2, !dbg !3713
  br label %126, !dbg !3714

126:                                              ; preds = %122, %118
  %127 = phi i32 [ %124, %122 ], [ %97, %118 ], !dbg !3605
  call void @llvm.dbg.value(metadata i32 %127, metadata !3556, metadata !DIExpression()), !dbg !3605
  %128 = add i32 %95, -1, !dbg !3715
  %129 = add i32 %128, %119, !dbg !3716
  call void @llvm.dbg.value(metadata i32 %129, metadata !3553, metadata !DIExpression()), !dbg !3605
  br label %130, !dbg !3717

130:                                              ; preds = %115, %126, %117, %111
  %131 = phi i32 [ %97, %111 ], [ %127, %126 ], [ %97, %115 ], [ %97, %117 ], !dbg !3605
  %132 = phi i32 [ %112, %111 ], [ %129, %126 ], [ %116, %115 ], [ %95, %117 ], !dbg !3677
  call void @llvm.dbg.value(metadata i32 %132, metadata !3553, metadata !DIExpression()), !dbg !3605
  call void @llvm.dbg.value(metadata i32 %131, metadata !3556, metadata !DIExpression()), !dbg !3605
  %133 = add nuw nsw i32 %98, 1, !dbg !3718
  call void @llvm.dbg.value(metadata i8* %100, metadata !3555, metadata !DIExpression()), !dbg !3605
  call void @llvm.dbg.value(metadata i32 %133, metadata !3568, metadata !DIExpression()), !dbg !3671
  %134 = icmp eq i32 %133, %31, !dbg !3672
  br i1 %134, label %287, label %94, !dbg !3673, !llvm.loop !3719

135:                                              ; preds = %41
  call void @llvm.dbg.declare(metadata [16 x i8]* %8, metadata !3578, metadata !DIExpression()), !dbg !3721
  call void @llvm.dbg.declare(metadata [16 x i8]* %9, metadata !3579, metadata !DIExpression()), !dbg !3722
  br i1 %28, label %136, label %138, !dbg !3723

136:                                              ; preds = %135
  call void @llvm.dbg.value(metadata i8 %23, metadata !3580, metadata !DIExpression()), !dbg !3605
  call void @llvm.dbg.value(metadata i8 0, metadata !3581, metadata !DIExpression()), !dbg !3605
  %137 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 0, !dbg !3724
  call void @llvm.dbg.value(metadata i8* %137, metadata !3582, metadata !DIExpression()), !dbg !3605
  br label %143, !dbg !3727

138:                                              ; preds = %135
  %139 = and i32 %4, 4
  %140 = icmp ne i32 %139, 0
  %141 = and i1 %140, %25, !dbg !3728
  %142 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0
  br i1 %141, label %143, label %148, !dbg !3728

143:                                              ; preds = %136, %138
  %144 = phi i8 [ 0, %138 ], [ %23, %136 ]
  %145 = phi i8 [ %23, %138 ], [ 0, %136 ]
  %146 = phi i8* [ %142, %138 ], [ %137, %136 ]
  call void @llvm.dbg.value(metadata i8* null, metadata !3582, metadata !DIExpression()), !dbg !3605
  call void @llvm.dbg.value(metadata i8 undef, metadata !3581, metadata !DIExpression()), !dbg !3605
  call void @llvm.dbg.value(metadata i8 0, metadata !3580, metadata !DIExpression()), !dbg !3605
  %147 = call i8* @memcpy(i8* noundef nonnull %146, i8* noundef nonnull %48, i32 noundef %24) #22, !dbg !3730
  br label %148, !dbg !3733

148:                                              ; preds = %138, %143
  %149 = phi i8 [ %145, %143 ], [ 0, %138 ]
  %150 = phi i8 [ %144, %143 ], [ 0, %138 ]
  %151 = getelementptr inbounds i8, i8* %48, i32 %24, !dbg !3734
  call void @llvm.dbg.value(metadata i8* %151, metadata !3555, metadata !DIExpression()), !dbg !3605
  call void @llvm.dbg.value(metadata i32 0, metadata !3584, metadata !DIExpression()), !dbg !3735
  call void @llvm.dbg.value(metadata i8 %149, metadata !3581, metadata !DIExpression()), !dbg !3605
  call void @llvm.dbg.value(metadata i8 %150, metadata !3580, metadata !DIExpression()), !dbg !3605
  %152 = icmp eq i8 %30, 0, !dbg !3736
  br i1 %152, label %153, label %155, !dbg !3737

153:                                              ; preds = %148
  %154 = and i32 %4, 4, !dbg !3738
  br label %160, !dbg !3737

155:                                              ; preds = %148
  %156 = icmp eq i32 %33, 0
  %157 = icmp eq i32 %26, 0
  %158 = and i32 %4, 4
  %159 = icmp eq i32 %158, 0
  br label %179, !dbg !3737

160:                                              ; preds = %235, %153
  %161 = phi i32 [ %154, %153 ], [ %158, %235 ], !dbg !3738
  %162 = phi i8 [ %150, %153 ], [ %236, %235 ], !dbg !3739
  %163 = phi i8 [ %149, %153 ], [ %237, %235 ], !dbg !3740
  %164 = phi i8* [ %151, %153 ], [ %186, %235 ], !dbg !3605
  call void @llvm.dbg.value(metadata i8 undef, metadata !3577, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 8)), !dbg !3605
  %165 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !3741
  %166 = load i8, i8* %165, align 1, !dbg !3741
  %167 = zext i8 %162 to i32, !dbg !3742
  %168 = add i8 %166, %162, !dbg !3743
  call void @llvm.dbg.value(metadata i8 %168, metadata !3577, metadata !DIExpression(DW_OP_LLVM_fragment, 8, 8)), !dbg !3605
  %169 = icmp eq i32 %33, 0, !dbg !3744
  %170 = lshr i8 %163, 1, !dbg !3745
  %171 = select i1 %169, i8 %170, i8 0, !dbg !3745
  call void @llvm.dbg.value(metadata i8 %171, metadata !3577, metadata !DIExpression(DW_OP_LLVM_fragment, 24, 8)), !dbg !3605
  %172 = icmp eq i32 %26, 0, !dbg !3746
  %173 = icmp eq i32 %161, 0, !dbg !3738
  %174 = select i1 %173, i8 0, i8 %163, !dbg !3738
  %175 = select i1 %172, i8 %174, i8 0, !dbg !3738
  call void @llvm.dbg.value(metadata i8 %175, metadata !3577, metadata !DIExpression(DW_OP_LLVM_fragment, 16, 8)), !dbg !3605
  call void @llvm.dbg.declare(metadata %struct.cbprintf_package_desc* undef, metadata !3592, metadata !DIExpression()), !dbg !3747
  %176 = load i32, i32* %14, align 1, !dbg !3748
  store i8 %168, i8* %165, align 1, !dbg !3749
  store i8 %175, i8* %22, align 1, !dbg !3749
  store i8 %171, i8* %29, align 1, !dbg !3749
  %177 = call i32 %2(i8* noundef nonnull %0, i32 noundef %44, i8* noundef %3) #22, !dbg !3750
  call void @llvm.dbg.value(metadata i32 %177, metadata !3583, metadata !DIExpression()), !dbg !3605
  %178 = icmp slt i32 %177, 0, !dbg !3751
  br i1 %178, label %287, label %240, !dbg !3753

179:                                              ; preds = %155, %235
  %180 = phi i8* [ %151, %155 ], [ %186, %235 ]
  %181 = phi i32 [ 0, %155 ], [ %238, %235 ]
  %182 = phi i8 [ %149, %155 ], [ %237, %235 ]
  %183 = phi i8 [ %150, %155 ], [ %236, %235 ]
  call void @llvm.dbg.value(metadata i8* %180, metadata !3555, metadata !DIExpression()), !dbg !3605
  call void @llvm.dbg.value(metadata i32 %181, metadata !3584, metadata !DIExpression()), !dbg !3735
  call void @llvm.dbg.value(metadata i8 %182, metadata !3581, metadata !DIExpression()), !dbg !3605
  call void @llvm.dbg.value(metadata i8 %183, metadata !3580, metadata !DIExpression()), !dbg !3605
  %184 = getelementptr inbounds i8, i8* %180, i32 1, !dbg !3754
  call void @llvm.dbg.value(metadata i8* %184, metadata !3555, metadata !DIExpression()), !dbg !3605
  %185 = load i8, i8* %180, align 1, !dbg !3755
  call void @llvm.dbg.value(metadata i8 %185, metadata !3586, metadata !DIExpression()), !dbg !3756
  %186 = getelementptr inbounds i8, i8* %180, i32 2, !dbg !3757
  call void @llvm.dbg.value(metadata i8* %186, metadata !3555, metadata !DIExpression()), !dbg !3605
  %187 = load i8, i8* %184, align 1, !dbg !3758
  call void @llvm.dbg.value(metadata i8 %187, metadata !3589, metadata !DIExpression()), !dbg !3756
  %188 = zext i8 %187 to i32, !dbg !3759
  %189 = getelementptr inbounds i32, i32* %14, i32 %188, !dbg !3759
  %190 = bitcast i32* %189 to i8**, !dbg !3760
  %191 = load i8*, i8** %190, align 4, !dbg !3760
  call void @llvm.dbg.value(metadata i8* %191, metadata !3590, metadata !DIExpression()), !dbg !3756
  %192 = call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %191) #21, !dbg !3761
  call void @llvm.dbg.value(metadata i1 %192, metadata !3591, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3756
  br i1 %16, label %196, label %193, !dbg !3762

193:                                              ; preds = %179
  %194 = zext i8 %185 to i32, !dbg !3764
  %195 = call zeroext i1 @is_ptr(i8* noundef %47, i32 noundef %194) #21, !dbg !3765
  br i1 %195, label %235, label %196, !dbg !3766

196:                                              ; preds = %193, %179
  br i1 %192, label %197, label %213, !dbg !3767

197:                                              ; preds = %196
  br i1 %157, label %205, label %198, !dbg !3768

198:                                              ; preds = %197
  %199 = icmp ult i8 %183, 16, !dbg !3771
  br i1 %199, label %201, label %200, !dbg !3776

200:                                              ; preds = %198
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.10, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 1086) #22, !dbg !3777
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 1086) #22, !dbg !3777
  unreachable, !dbg !3777

201:                                              ; preds = %198
  %202 = zext i8 %183 to i32, !dbg !3771
  %203 = add nuw nsw i8 %183, 1, !dbg !3779
  call void @llvm.dbg.value(metadata i8 %203, metadata !3580, metadata !DIExpression()), !dbg !3605
  %204 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %202, !dbg !3780
  br label %231, !dbg !3781

205:                                              ; preds = %197
  br i1 %159, label %235, label %206, !dbg !3782

206:                                              ; preds = %205
  %207 = icmp ult i8 %182, 16, !dbg !3783
  br i1 %207, label %209, label %208, !dbg !3788

208:                                              ; preds = %206
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.11, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 1089) #22, !dbg !3789
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 1089) #22, !dbg !3789
  unreachable, !dbg !3789

209:                                              ; preds = %206
  %210 = zext i8 %182 to i32, !dbg !3783
  %211 = add nuw nsw i8 %182, 1, !dbg !3791
  call void @llvm.dbg.value(metadata i8 %211, metadata !3581, metadata !DIExpression()), !dbg !3605
  %212 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %210, !dbg !3792
  br label %231, !dbg !3793

213:                                              ; preds = %196
  br i1 %156, label %221, label %214, !dbg !3794

214:                                              ; preds = %213
  %215 = icmp ult i8 %183, 16, !dbg !3796
  br i1 %215, label %217, label %216, !dbg !3801

216:                                              ; preds = %214
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.10, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 1096) #22, !dbg !3802
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 1096) #22, !dbg !3802
  unreachable, !dbg !3802

217:                                              ; preds = %214
  %218 = zext i8 %183 to i32, !dbg !3796
  %219 = add nuw nsw i8 %183, 1, !dbg !3804
  call void @llvm.dbg.value(metadata i8 %219, metadata !3580, metadata !DIExpression()), !dbg !3605
  %220 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %218, !dbg !3805
  br label %231, !dbg !3806

221:                                              ; preds = %213
  %222 = icmp ult i8 %182, 16, !dbg !3807
  br i1 %222, label %224, label %223, !dbg !3811

223:                                              ; preds = %221
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.11, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 1099) #22, !dbg !3812
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 1099) #22, !dbg !3812
  unreachable, !dbg !3812

224:                                              ; preds = %221
  %225 = zext i8 %182 to i32, !dbg !3807
  %226 = add nuw nsw i8 %182, 1, !dbg !3814
  call void @llvm.dbg.value(metadata i8 %226, metadata !3581, metadata !DIExpression()), !dbg !3605
  %227 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %225, !dbg !3815
  store i8 %185, i8* %227, align 1, !dbg !3816
  %228 = add nuw nsw i8 %182, 2, !dbg !3817
  call void @llvm.dbg.value(metadata i8 %228, metadata !3581, metadata !DIExpression()), !dbg !3605
  %229 = zext i8 %226 to i32, !dbg !3818
  %230 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %229, !dbg !3818
  br label %231

231:                                              ; preds = %217, %224, %201, %209
  %232 = phi i8* [ %212, %209 ], [ %204, %201 ], [ %230, %224 ], [ %220, %217 ]
  %233 = phi i8 [ %183, %209 ], [ %203, %201 ], [ %183, %224 ], [ %219, %217 ]
  %234 = phi i8 [ %211, %209 ], [ %182, %201 ], [ %228, %224 ], [ %182, %217 ]
  store i8 %187, i8* %232, align 1, !dbg !3819
  br label %235, !dbg !3820

235:                                              ; preds = %231, %205, %193
  %236 = phi i8 [ %183, %193 ], [ %183, %205 ], [ %233, %231 ], !dbg !3605
  %237 = phi i8 [ %182, %193 ], [ %182, %205 ], [ %234, %231 ], !dbg !3740
  call void @llvm.dbg.value(metadata i8 %237, metadata !3581, metadata !DIExpression()), !dbg !3605
  call void @llvm.dbg.value(metadata i8 %236, metadata !3580, metadata !DIExpression()), !dbg !3605
  %238 = add nuw nsw i32 %181, 1, !dbg !3820
  call void @llvm.dbg.value(metadata i8* %186, metadata !3555, metadata !DIExpression()), !dbg !3605
  call void @llvm.dbg.value(metadata i32 %238, metadata !3584, metadata !DIExpression()), !dbg !3735
  %239 = icmp eq i32 %238, %31, !dbg !3736
  br i1 %239, label %160, label %179, !dbg !3737, !llvm.loop !3821

240:                                              ; preds = %160
  %241 = zext i8 %163 to i32, !dbg !3745
  call void @llvm.dbg.value(metadata i32 %177, metadata !3553, metadata !DIExpression()), !dbg !3605
  store i32 %176, i32* %14, align 1, !dbg !3823
  %242 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0, !dbg !3824
  %243 = call i32 %2(i8* noundef nonnull %242, i32 noundef %241, i8* noundef %3) #22, !dbg !3825
  call void @llvm.dbg.value(metadata i32 %243, metadata !3583, metadata !DIExpression()), !dbg !3605
  %244 = icmp slt i32 %243, 0, !dbg !3826
  br i1 %244, label %287, label %245, !dbg !3828

245:                                              ; preds = %240
  call void @llvm.dbg.value(metadata !DIArgList(i32 %177, i32 %243), metadata !3553, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !3605
  %246 = mul nsw i32 %31, -2
  %247 = add i32 %21, %246, !dbg !3829
  %248 = add nuw nsw i32 %44, %24, !dbg !3829
  %249 = sub i32 %247, %248, !dbg !3829
  call void @llvm.dbg.value(metadata i32 %249, metadata !3593, metadata !DIExpression()), !dbg !3605
  %250 = call i32 %2(i8* noundef %164, i32 noundef %249, i8* noundef %3) #22, !dbg !3830
  call void @llvm.dbg.value(metadata i32 %250, metadata !3583, metadata !DIExpression()), !dbg !3605
  %251 = icmp slt i32 %250, 0, !dbg !3831
  br i1 %251, label %287, label %252, !dbg !3833

252:                                              ; preds = %245
  %253 = add nuw nsw i32 %243, %177, !dbg !3834
  call void @llvm.dbg.value(metadata i32 %253, metadata !3553, metadata !DIExpression()), !dbg !3605
  %254 = add nuw nsw i32 %253, %250, !dbg !3835
  call void @llvm.dbg.value(metadata i32 %254, metadata !3553, metadata !DIExpression()), !dbg !3605
  call void @llvm.dbg.value(metadata i32 0, metadata !3594, metadata !DIExpression()), !dbg !3836
  %255 = icmp eq i8 %162, 0, !dbg !3837
  br i1 %255, label %284, label %256, !dbg !3838

256:                                              ; preds = %252
  %257 = icmp eq i16* %5, null
  br label %258, !dbg !3838

258:                                              ; preds = %256, %279
  %259 = phi i32 [ 0, %256 ], [ %282, %279 ]
  %260 = phi i32 [ %254, %256 ], [ %281, %279 ]
  call void @llvm.dbg.value(metadata i32 %259, metadata !3594, metadata !DIExpression()), !dbg !3836
  call void @llvm.dbg.value(metadata i32 %260, metadata !3553, metadata !DIExpression()), !dbg !3605
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10) #20, !dbg !3839
  %261 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %259, !dbg !3840
  %262 = load i8, i8* %261, align 1, !dbg !3840
  call void @llvm.dbg.value(metadata i8 %262, metadata !3596, metadata !DIExpression()), !dbg !3841
  store i8 %262, i8* %10, align 1, !dbg !3842
  %263 = zext i8 %262 to i32, !dbg !3843
  %264 = getelementptr inbounds i32, i32* %14, i32 %263, !dbg !3843
  %265 = bitcast i32* %264 to i8**, !dbg !3844
  %266 = load i8*, i8** %265, align 4, !dbg !3844
  call void @llvm.dbg.value(metadata i8* %266, metadata !3599, metadata !DIExpression()), !dbg !3841
  br i1 %257, label %270, label %267, !dbg !3845

267:                                              ; preds = %258
  %268 = getelementptr inbounds i16, i16* %5, i32 %259, !dbg !3846
  %269 = load i16, i16* %268, align 2, !dbg !3846
  br label %270, !dbg !3845

270:                                              ; preds = %258, %267
  %271 = phi i16 [ %269, %267 ], [ 0, %258 ], !dbg !3845
  call void @llvm.dbg.value(metadata i32 undef, metadata !3600, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3841
  call void @llvm.dbg.value(metadata i8* %10, metadata !3596, metadata !DIExpression(DW_OP_deref)), !dbg !3841
  %272 = call i32 %2(i8* noundef nonnull %10, i32 noundef 1, i8* noundef %3) #22, !dbg !3847
  call void @llvm.dbg.value(metadata i32 %272, metadata !3583, metadata !DIExpression()), !dbg !3605
  %273 = icmp slt i32 %272, 0, !dbg !3848
  br i1 %273, label %277, label %274, !dbg !3850

274:                                              ; preds = %270
  call void @llvm.dbg.value(metadata i16 %271, metadata !3600, metadata !DIExpression()), !dbg !3841
  call void @llvm.dbg.value(metadata !DIArgList(i32 %260, i32 %272), metadata !3553, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !3605
  %275 = call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef nonnull %2, i8* noundef %3, i8* noundef %266, i16 noundef zeroext %271) #21, !dbg !3851
  call void @llvm.dbg.value(metadata i32 %275, metadata !3583, metadata !DIExpression()), !dbg !3605
  %276 = icmp slt i32 %275, 0, !dbg !3852
  br i1 %276, label %277, label %279, !dbg !3854

277:                                              ; preds = %274, %270
  %278 = phi i32 [ %275, %274 ], [ %272, %270 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !3553, metadata !DIExpression()), !dbg !3605
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #20, !dbg !3855
  call void @llvm.dbg.value(metadata i32 undef, metadata !3553, metadata !DIExpression()), !dbg !3605
  br label %287

279:                                              ; preds = %274
  %280 = add nsw i32 %272, %260, !dbg !3856
  call void @llvm.dbg.value(metadata i32 %280, metadata !3553, metadata !DIExpression()), !dbg !3605
  %281 = add nsw i32 %280, %275, !dbg !3857
  call void @llvm.dbg.value(metadata i32 %281, metadata !3553, metadata !DIExpression()), !dbg !3605
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #20, !dbg !3855
  %282 = add nuw nsw i32 %259, 1, !dbg !3858
  call void @llvm.dbg.value(metadata i32 %282, metadata !3594, metadata !DIExpression()), !dbg !3836
  %283 = icmp eq i32 %282, %167, !dbg !3837
  br i1 %283, label %284, label %258, !dbg !3838, !llvm.loop !3859

284:                                              ; preds = %279, %252
  %285 = phi i32 [ %254, %252 ], [ %281, %279 ], !dbg !3835
  call void @llvm.dbg.value(metadata i32 %285, metadata !3553, metadata !DIExpression()), !dbg !3605
  %286 = call i32 %2(i8* noundef null, i32 noundef 0, i8* noundef %3) #22, !dbg !3861
  br label %287, !dbg !3862

287:                                              ; preds = %130, %82, %277, %284, %160, %240, %245, %37, %39
  %288 = phi i32 [ %21, %39 ], [ %21, %37 ], [ %285, %284 ], [ %177, %160 ], [ %243, %240 ], [ %250, %245 ], [ %278, %277 ], [ %85, %82 ], [ %132, %130 ], !dbg !3605
  ret i32 %288, !dbg !3863
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @get_package_len(i8* noundef %0) unnamed_addr #1 !dbg !3864 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3868, metadata !DIExpression()), !dbg !3876
  %2 = icmp eq i8* %0, null, !dbg !3877
  br i1 %2, label %3, label %4, !dbg !3880

3:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.12, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 198) #22, !dbg !3881
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 198) #22, !dbg !3881
  unreachable, !dbg !3881

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i8* %0, metadata !3869, metadata !DIExpression()), !dbg !3876
  call void @llvm.dbg.value(metadata i8* %0, metadata !3870, metadata !DIExpression()), !dbg !3876
  %5 = load i8, i8* %0, align 1, !dbg !3883
  %6 = zext i8 %5 to i32, !dbg !3883
  %7 = shl nuw nsw i32 %6, 2, !dbg !3884
  call void @llvm.dbg.value(metadata i32 %7, metadata !3871, metadata !DIExpression()), !dbg !3876
  %8 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !3885
  %9 = load i8, i8* %8, align 1, !dbg !3885
  %10 = zext i8 %9 to i32, !dbg !3885
  call void @llvm.dbg.value(metadata i32 %10, metadata !3872, metadata !DIExpression()), !dbg !3876
  %11 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !3886
  %12 = load i8, i8* %11, align 1, !dbg !3886
  %13 = zext i8 %12 to i32, !dbg !3886
  call void @llvm.dbg.value(metadata i32 %13, metadata !3873, metadata !DIExpression()), !dbg !3876
  %14 = getelementptr inbounds i8, i8* %0, i32 %7, !dbg !3887
  call void @llvm.dbg.value(metadata i8* %14, metadata !3869, metadata !DIExpression()), !dbg !3876
  %15 = getelementptr inbounds i8, i8* %14, i32 %13, !dbg !3888
  call void @llvm.dbg.value(metadata i8* %15, metadata !3869, metadata !DIExpression()), !dbg !3876
  call void @llvm.dbg.value(metadata i32 0, metadata !3874, metadata !DIExpression()), !dbg !3889
  %16 = icmp eq i8 %9, 0, !dbg !3890
  br i1 %16, label %17, label %22, !dbg !3892

17:                                               ; preds = %22, %4
  %18 = phi i8* [ %15, %4 ], [ %28, %22 ], !dbg !3876
  %19 = ptrtoint i8* %18 to i32, !dbg !3893
  %20 = ptrtoint i8* %0 to i32, !dbg !3893
  %21 = sub i32 %19, %20, !dbg !3893
  ret i32 %21, !dbg !3894

22:                                               ; preds = %4, %22
  %23 = phi i32 [ %29, %22 ], [ 0, %4 ]
  %24 = phi i8* [ %28, %22 ], [ %15, %4 ]
  call void @llvm.dbg.value(metadata i32 %23, metadata !3874, metadata !DIExpression()), !dbg !3889
  call void @llvm.dbg.value(metadata i8* %24, metadata !3869, metadata !DIExpression()), !dbg !3876
  %25 = getelementptr inbounds i8, i8* %24, i32 1, !dbg !3895
  call void @llvm.dbg.value(metadata i8* %25, metadata !3869, metadata !DIExpression()), !dbg !3876
  %26 = tail call i32 @strlen(i8* noundef nonnull %25) #22, !dbg !3897
  %27 = add i32 %26, 1, !dbg !3898
  %28 = getelementptr inbounds i8, i8* %25, i32 %27, !dbg !3899
  call void @llvm.dbg.value(metadata i8* %28, metadata !3869, metadata !DIExpression()), !dbg !3876
  %29 = add nuw nsw i32 %23, 1, !dbg !3900
  call void @llvm.dbg.value(metadata i32 %29, metadata !3874, metadata !DIExpression()), !dbg !3889
  %30 = icmp eq i32 %29, %10, !dbg !3890
  br i1 %30, label %17, label %22, !dbg !3892, !llvm.loop !3901
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef readonly %0, i8* noundef %1, i8* noundef %2, i16 noundef zeroext %3) unnamed_addr #1 !dbg !3903 {
  call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %0, metadata !3907, metadata !DIExpression()), !dbg !3911
  call void @llvm.dbg.value(metadata i8* %1, metadata !3908, metadata !DIExpression()), !dbg !3911
  call void @llvm.dbg.value(metadata i8* %2, metadata !3909, metadata !DIExpression()), !dbg !3911
  call void @llvm.dbg.value(metadata i16 %3, metadata !3910, metadata !DIExpression()), !dbg !3911
  %5 = icmp eq i32 (i8*, i32, i8*)* %0, null, !dbg !3912
  br i1 %5, label %6, label %9, !dbg !3914

6:                                                ; preds = %4
  %7 = tail call i32 @strlen(i8* noundef %2) #22, !dbg !3915
  %8 = add i32 %7, 1, !dbg !3917
  br label %20, !dbg !3918

9:                                                ; preds = %4
  %10 = icmp eq i16 %3, 0, !dbg !3919
  br i1 %10, label %13, label %11, !dbg !3920

11:                                               ; preds = %9
  %12 = zext i16 %3 to i32, !dbg !3920
  br label %16, !dbg !3920

13:                                               ; preds = %9
  %14 = tail call i32 @strlen(i8* noundef %2) #22, !dbg !3921
  %15 = add i32 %14, 1, !dbg !3922
  br label %16, !dbg !3920

16:                                               ; preds = %13, %11
  %17 = phi i32 [ %12, %11 ], [ %15, %13 ], !dbg !3920
  %18 = and i32 %17, 65535, !dbg !3923
  call void @llvm.dbg.value(metadata i32 %17, metadata !3910, metadata !DIExpression()), !dbg !3911
  %19 = tail call i32 %0(i8* noundef %2, i32 noundef %18, i8* noundef %1) #22, !dbg !3924
  br label %20, !dbg !3925

20:                                               ; preds = %16, %6
  %21 = phi i32 [ %8, %6 ], [ %19, %16 ], !dbg !3911
  ret i32 %21, !dbg !3926
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @arch_printk_char_out(i32 noundef %0) #1 !dbg !3927 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3929, metadata !DIExpression()), !dbg !3930
  ret i32 0, !dbg !3931
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__printk_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #7 !dbg !3932 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !3936, metadata !DIExpression()), !dbg !3937
  store i32 (i32)* %0, i32 (i32)** @_char_out, align 4, !dbg !3938
  ret void, !dbg !3939
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i8* @__printk_get_hook() local_unnamed_addr #8 !dbg !3940 {
  %1 = load i8*, i8** bitcast (i32 (i32)** @_char_out to i8**), align 4, !dbg !3941
  ret i8* %1, !dbg !3942
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !3943 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !3954, metadata !DIExpression()), !dbg !3965
  call void @llvm.dbg.value(metadata i8* %0, metadata !3953, metadata !DIExpression()), !dbg !3965
  tail call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, i8*)* @char_out to i32 (...)*), i8* noundef null, i8* noundef %0, [1 x i32] %1) #21, !dbg !3966
  ret void, !dbg !3968
}

; Function Attrs: noinline nounwind optsize
define internal i32 @char_out(i32 noundef %0, i8* nocapture noundef readnone %1) #1 !dbg !3969 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3973, metadata !DIExpression()), !dbg !3975
  call void @llvm.dbg.value(metadata i8* %1, metadata !3974, metadata !DIExpression()), !dbg !3975
  %3 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !3976
  %4 = tail call i32 %3(i32 noundef %0) #22, !dbg !3976
  ret i32 %4, !dbg !3977
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cbvprintf(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3) unnamed_addr #1 !dbg !3978 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !3985, metadata !DIExpression()), !dbg !3986
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !3982, metadata !DIExpression()), !dbg !3986
  call void @llvm.dbg.value(metadata i8* %1, metadata !3983, metadata !DIExpression()), !dbg !3986
  call void @llvm.dbg.value(metadata i8* %2, metadata !3984, metadata !DIExpression()), !dbg !3986
  %5 = tail call i32 @z_cbvprintf_impl(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef 0) #22, !dbg !3987
  ret void, !dbg !3988
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_str_out(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !3989 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3993, metadata !DIExpression()), !dbg !3996
  call void @llvm.dbg.value(metadata i32 %1, metadata !3994, metadata !DIExpression()), !dbg !3996
  call void @llvm.dbg.value(metadata i32 0, metadata !3995, metadata !DIExpression()), !dbg !3996
  %3 = icmp eq i32 %1, 0, !dbg !3997
  br i1 %3, label %13, label %4, !dbg !4000

4:                                                ; preds = %2, %4
  %5 = phi i32 [ %11, %4 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !3995, metadata !DIExpression()), !dbg !3996
  %6 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !4001
  %7 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !4003
  %8 = load i8, i8* %7, align 1, !dbg !4003
  %9 = zext i8 %8 to i32, !dbg !4003
  %10 = tail call i32 %6(i32 noundef %9) #22, !dbg !4001
  %11 = add nuw i32 %5, 1, !dbg !4004
  call void @llvm.dbg.value(metadata i32 %11, metadata !3995, metadata !DIExpression()), !dbg !3996
  %12 = icmp eq i32 %11, %1, !dbg !3997
  br i1 %12, label %13, label %4, !dbg !4000, !llvm.loop !4005

13:                                               ; preds = %4, %2
  ret void, !dbg !4007
}

; Function Attrs: noinline nounwind optsize
define dso_local void @printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !4008 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4012, metadata !DIExpression()), !dbg !4014
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !4015
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #20, !dbg !4015
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !4013, metadata !DIExpression()), !dbg !4016
  call void @llvm.va_start(i8* nonnull %3), !dbg !4017
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !4018
  %5 = load i32, i32* %4, align 4, !dbg !4018
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !4018
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #21, !dbg !4018
  call void @llvm.va_end(i8* nonnull %3), !dbg !4019
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #20, !dbg !4020
  ret void, !dbg !4020
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @snprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #1 !dbg !4021 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4025, metadata !DIExpression()), !dbg !4030
  call void @llvm.dbg.value(metadata i32 %1, metadata !4026, metadata !DIExpression()), !dbg !4030
  call void @llvm.dbg.value(metadata i8* %2, metadata !4027, metadata !DIExpression()), !dbg !4030
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !4031
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #20, !dbg !4031
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !4028, metadata !DIExpression()), !dbg !4032
  call void @llvm.va_start(i8* nonnull %5), !dbg !4033
  %6 = bitcast %struct.__va_list* %4 to i32*, !dbg !4034
  %7 = load i32, i32* %6, align 4, !dbg !4034
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !4034
  %9 = call i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %8) #21, !dbg !4034
  call void @llvm.dbg.value(metadata i32 %9, metadata !4029, metadata !DIExpression()), !dbg !4030
  call void @llvm.va_end(i8* nonnull %5), !dbg !4035
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #20, !dbg !4036
  ret i32 %9, !dbg !4037
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %3) local_unnamed_addr #1 !dbg !4038 {
  %5 = alloca %struct.str_context, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !4045, metadata !DIExpression()), !dbg !4052
  call void @llvm.dbg.value(metadata i8* %0, metadata !4042, metadata !DIExpression()), !dbg !4052
  call void @llvm.dbg.value(metadata i32 %1, metadata !4043, metadata !DIExpression()), !dbg !4052
  call void @llvm.dbg.value(metadata i8* %2, metadata !4044, metadata !DIExpression()), !dbg !4052
  %6 = bitcast %struct.str_context* %5 to i8*, !dbg !4053
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %6) #20, !dbg !4053
  call void @llvm.dbg.declare(metadata %struct.str_context* %5, metadata !4046, metadata !DIExpression()), !dbg !4054
  %7 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 0, !dbg !4055
  store i8* %0, i8** %7, align 4, !dbg !4055
  %8 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 1, !dbg !4055
  store i32 %1, i32* %8, align 4, !dbg !4055
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 2, !dbg !4055
  store i32 0, i32* %9, align 4, !dbg !4055
  call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, %struct.str_context*)* @str_out to i32 (...)*), i8* noundef nonnull %6, i8* noundef %2, [1 x i32] %3) #21, !dbg !4056
  %10 = load i32, i32* %9, align 4, !dbg !4057
  %11 = load i32, i32* %8, align 4, !dbg !4059
  %12 = icmp slt i32 %10, %11, !dbg !4060
  br i1 %12, label %13, label %15, !dbg !4061

13:                                               ; preds = %4
  %14 = getelementptr inbounds i8, i8* %0, i32 %10, !dbg !4062
  store i8 0, i8* %14, align 1, !dbg !4064
  br label %15, !dbg !4065

15:                                               ; preds = %13, %4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %6) #20, !dbg !4066
  ret i32 %10, !dbg !4067
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @str_out(i32 noundef returned %0, %struct.str_context* nocapture noundef %1) #9 !dbg !4068 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4073, metadata !DIExpression()), !dbg !4075
  call void @llvm.dbg.value(metadata %struct.str_context* %1, metadata !4074, metadata !DIExpression()), !dbg !4075
  %3 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 0, !dbg !4076
  %4 = load i8*, i8** %3, align 4, !dbg !4076
  %5 = icmp eq i8* %4, null, !dbg !4078
  %6 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2
  %7 = load i32, i32* %6, align 4, !dbg !4079
  br i1 %5, label %12, label %8, !dbg !4080

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 1, !dbg !4081
  %10 = load i32, i32* %9, align 4, !dbg !4081
  %11 = icmp slt i32 %7, %10, !dbg !4082
  br i1 %11, label %15, label %12, !dbg !4083

12:                                               ; preds = %2, %8
  %13 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2, !dbg !4084
  %14 = add nsw i32 %7, 1, !dbg !4086
  store i32 %14, i32* %13, align 4, !dbg !4086
  br label %25, !dbg !4087

15:                                               ; preds = %8
  %16 = add nsw i32 %10, -1, !dbg !4088
  %17 = icmp eq i32 %7, %16, !dbg !4090
  br i1 %17, label %18, label %21, !dbg !4091

18:                                               ; preds = %15
  %19 = add nsw i32 %7, 1, !dbg !4092
  store i32 %19, i32* %6, align 4, !dbg !4092
  %20 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !4094
  store i8 0, i8* %20, align 1, !dbg !4095
  br label %25, !dbg !4096

21:                                               ; preds = %15
  %22 = trunc i32 %0 to i8, !dbg !4097
  %23 = add nsw i32 %7, 1, !dbg !4099
  store i32 %23, i32* %6, align 4, !dbg !4099
  %24 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !4100
  store i8 %22, i8* %24, align 1, !dbg !4101
  br label %25

25:                                               ; preds = %18, %21, %12
  ret i32 %0, !dbg !4102
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_thread_entry(void (i8*, i8*, i8*)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #10 !dbg !4103 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !4108, metadata !DIExpression()), !dbg !4112
  call void @llvm.dbg.value(metadata i8* %1, metadata !4109, metadata !DIExpression()), !dbg !4112
  call void @llvm.dbg.value(metadata i8* %2, metadata !4110, metadata !DIExpression()), !dbg !4112
  call void @llvm.dbg.value(metadata i8* %3, metadata !4111, metadata !DIExpression()), !dbg !4112
  tail call void %0(i8* noundef %1, i8* noundef %2, i8* noundef %3) #22, !dbg !4113
  %5 = tail call fastcc %struct.k_thread* @k_current_get() #23, !dbg !4114
  tail call fastcc void @k_thread_abort(%struct.k_thread* noundef %5) #21, !dbg !4115
  unreachable, !dbg !4116
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get() unnamed_addr #11 !dbg !4117 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get() #23, !dbg !4218
  ret %struct.k_thread* %1, !dbg !4219
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !4220 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !4225, metadata !DIExpression()), !dbg !4226
  tail call void asm sideeffect "", "~{memory}"() #20, !dbg !4227, !srcloc !4229
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #22, !dbg !4230
  ret void, !dbg !4231
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get() unnamed_addr #11 !dbg !4232 {
  tail call void asm sideeffect "", "~{memory}"() #20, !dbg !4233, !srcloc !4235
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #22, !dbg !4236
  ret %struct.k_thread* %1, !dbg !4237
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_cbvprintf_impl(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef %4) local_unnamed_addr #1 !dbg !4238 {
  %6 = alloca [22 x i8], align 1
  %7 = alloca %struct.anon, align 8
  %8 = extractvalue [1 x i32] %3, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !4251, metadata !DIExpression()), !dbg !4377
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4248, metadata !DIExpression()), !dbg !4377
  call void @llvm.dbg.value(metadata i8* %1, metadata !4249, metadata !DIExpression()), !dbg !4377
  call void @llvm.dbg.value(metadata i8* %2, metadata !4250, metadata !DIExpression()), !dbg !4377
  call void @llvm.dbg.value(metadata i32 %4, metadata !4252, metadata !DIExpression()), !dbg !4377
  %10 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 0, !dbg !4378
  call void @llvm.lifetime.start.p0i8(i64 22, i8* nonnull %10) #20, !dbg !4378
  call void @llvm.dbg.declare(metadata [22 x i8]* %6, metadata !4253, metadata !DIExpression()), !dbg !4379
  call void @llvm.dbg.value(metadata i32 0, metadata !4257, metadata !DIExpression()), !dbg !4377
  call void @llvm.dbg.value(metadata i1 undef, metadata !4259, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4377
  %11 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  %12 = bitcast %struct.anon* %7 to i8*
  %13 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1
  %14 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 22
  %15 = bitcast %struct.conversion* %13 to i24*
  %16 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 2, i32 0
  %17 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 3, i32 0
  %18 = bitcast %struct.anon* %7 to i8**
  %19 = bitcast %struct.anon* %7 to double*
  %20 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 1
  %22 = ptrtoint i8* %14 to i32
  %23 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 1
  br label %24, !dbg !4380

24:                                               ; preds = %363, %5
  %25 = phi i32 [ %364, %363 ], [ 0, %5 ]
  %26 = phi i8* [ %39, %363 ], [ %2, %5 ]
  %27 = phi i8* [ %178, %363 ], [ %9, %5 ]
  br label %28, !dbg !4380

28:                                               ; preds = %24, %32
  %29 = phi i32 [ %37, %32 ], [ %25, %24 ], !dbg !4381
  %30 = phi i8* [ %34, %32 ], [ %26, %24 ]
  call void @llvm.dbg.value(metadata i8* %27, metadata !4251, metadata !DIExpression()), !dbg !4377
  call void @llvm.dbg.value(metadata i8* %30, metadata !4250, metadata !DIExpression()), !dbg !4377
  call void @llvm.dbg.value(metadata i32 %29, metadata !4257, metadata !DIExpression()), !dbg !4377
  %31 = load i8, i8* %30, align 1, !dbg !4382
  switch i8 %31, label %32 [
    i8 0, label %365
    i8 37, label %38
  ], !dbg !4380

32:                                               ; preds = %28
  %33 = zext i8 %31 to i32, !dbg !4382
  %34 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !4383
  call void @llvm.dbg.value(metadata i8* %34, metadata !4250, metadata !DIExpression()), !dbg !4377
  %35 = call i32 %11(i32 noundef %33, i8* noundef %1) #22, !dbg !4383
  call void @llvm.dbg.value(metadata i32 %35, metadata !4261, metadata !DIExpression()), !dbg !4384
  %36 = icmp slt i32 %35, 0, !dbg !4385
  %37 = add i32 %29, 1, !dbg !4383
  call void @llvm.dbg.value(metadata i32 undef, metadata !4257, metadata !DIExpression()), !dbg !4377
  br i1 %36, label %365, label %28, !llvm.loop !4387

38:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #20, !dbg !4389
  call void @llvm.dbg.declare(metadata %struct.anon* %7, metadata !4266, metadata !DIExpression()), !dbg !4390
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 8 dereferenceable(24) %12, i8 0, i32 24, i1 false), !dbg !4390
  call void @llvm.dbg.value(metadata %struct.conversion* %13, metadata !4309, metadata !DIExpression()), !dbg !4391
  call void @llvm.dbg.value(metadata %struct.anon* %7, metadata !4312, metadata !DIExpression()), !dbg !4391
  call void @llvm.dbg.value(metadata i8* %30, metadata !4315, metadata !DIExpression()), !dbg !4391
  call void @llvm.dbg.value(metadata i32 -1, metadata !4316, metadata !DIExpression()), !dbg !4391
  call void @llvm.dbg.value(metadata i32 -1, metadata !4317, metadata !DIExpression()), !dbg !4391
  call void @llvm.dbg.value(metadata i8* null, metadata !4318, metadata !DIExpression()), !dbg !4391
  call void @llvm.dbg.value(metadata i8* %14, metadata !4319, metadata !DIExpression()), !dbg !4391
  call void @llvm.dbg.value(metadata i8 0, metadata !4320, metadata !DIExpression()), !dbg !4391
  %39 = call fastcc i8* @extract_conversion(%struct.conversion* noundef nonnull %13, i8* noundef nonnull %30) #21, !dbg !4392
  call void @llvm.dbg.value(metadata i8* %39, metadata !4250, metadata !DIExpression()), !dbg !4377
  %40 = load i24, i24* %15, align 8, !dbg !4393
  %41 = and i24 %40, 256, !dbg !4393
  %42 = icmp eq i24 %41, 0, !dbg !4393
  br i1 %42, label %51, label %43, !dbg !4395

43:                                               ; preds = %38
  %44 = getelementptr inbounds i8, i8* %27, i32 4, !dbg !4396
  call void @llvm.dbg.value(metadata i8* %44, metadata !4251, metadata !DIExpression()), !dbg !4377
  %45 = bitcast i8* %27 to i32*, !dbg !4396
  %46 = load i32, i32* %45, align 4, !dbg !4396
  call void @llvm.dbg.value(metadata i32 %46, metadata !4316, metadata !DIExpression()), !dbg !4391
  %47 = icmp slt i32 %46, 0, !dbg !4398
  br i1 %47, label %48, label %56, !dbg !4400

48:                                               ; preds = %43
  %49 = or i24 %40, 4, !dbg !4401
  store i24 %49, i24* %15, align 8, !dbg !4401
  %50 = sub nsw i32 0, %46, !dbg !4403
  call void @llvm.dbg.value(metadata i32 %50, metadata !4316, metadata !DIExpression()), !dbg !4391
  br label %56, !dbg !4404

51:                                               ; preds = %38
  %52 = and i24 %40, 128, !dbg !4405
  %53 = icmp eq i24 %52, 0, !dbg !4405
  %54 = load i32, i32* %16, align 4
  %55 = select i1 %53, i32 -1, i32 %54, !dbg !4407
  br label %56, !dbg !4407

56:                                               ; preds = %51, %43, %48
  %57 = phi i24 [ %49, %48 ], [ %40, %43 ], [ %40, %51 ], !dbg !4408
  %58 = phi i32 [ %50, %48 ], [ %46, %43 ], [ %55, %51 ], !dbg !4391
  %59 = phi i8* [ %44, %48 ], [ %44, %43 ], [ %27, %51 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !4251, metadata !DIExpression()), !dbg !4377
  call void @llvm.dbg.value(metadata i32 %58, metadata !4316, metadata !DIExpression()), !dbg !4391
  %60 = and i24 %57, 1024, !dbg !4408
  %61 = icmp eq i24 %60, 0, !dbg !4408
  br i1 %61, label %69, label %62, !dbg !4409

62:                                               ; preds = %56
  %63 = getelementptr inbounds i8, i8* %59, i32 4, !dbg !4410
  call void @llvm.dbg.value(metadata i8* %63, metadata !4251, metadata !DIExpression()), !dbg !4377
  %64 = bitcast i8* %59 to i32*, !dbg !4410
  %65 = load i32, i32* %64, align 4, !dbg !4410
  call void @llvm.dbg.value(metadata i32 %65, metadata !4321, metadata !DIExpression()), !dbg !4411
  %66 = icmp slt i32 %65, 0, !dbg !4412
  br i1 %66, label %67, label %74, !dbg !4414

67:                                               ; preds = %62
  %68 = and i24 %57, -513, !dbg !4415
  store i24 %68, i24* %15, align 8, !dbg !4415
  br label %74, !dbg !4417

69:                                               ; preds = %56
  %70 = and i24 %57, 512, !dbg !4418
  %71 = icmp eq i24 %70, 0, !dbg !4418
  %72 = load i32, i32* %17, align 8
  %73 = select i1 %71, i32 -1, i32 %72, !dbg !4420
  br label %74, !dbg !4420

74:                                               ; preds = %69, %67, %62
  %75 = phi i24 [ %68, %67 ], [ %57, %62 ], [ %57, %69 ], !dbg !4421
  %76 = phi i32 [ -1, %67 ], [ %65, %62 ], [ %73, %69 ], !dbg !4391
  %77 = phi i8* [ %63, %67 ], [ %63, %62 ], [ %59, %69 ], !dbg !4391
  call void @llvm.dbg.value(metadata i8* %77, metadata !4251, metadata !DIExpression()), !dbg !4377
  call void @llvm.dbg.value(metadata i32 %76, metadata !4317, metadata !DIExpression()), !dbg !4391
  store i32 0, i32* %16, align 4, !dbg !4422
  store i32 0, i32* %17, align 8, !dbg !4423
  %78 = lshr i24 %75, 16, !dbg !4421
  call void @llvm.dbg.value(metadata i24 %78, metadata !4324, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_LLVM_convert, 24, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4391
  %79 = lshr i24 %75, 11, !dbg !4424
  %80 = and i24 %79, 15, !dbg !4424
  %81 = zext i24 %80 to i32, !dbg !4424
  call void @llvm.dbg.value(metadata i32 %81, metadata !4325, metadata !DIExpression()), !dbg !4391
  %82 = trunc i24 %78 to i3, !dbg !4425
  switch i3 %82, label %177 [
    i3 1, label %83
    i3 2, label %125
    i3 -4, label %165
    i3 3, label %173
  ], !dbg !4425

83:                                               ; preds = %74
  switch i32 %81, label %84 [
    i32 7, label %110
    i32 6, label %110
    i32 5, label %102
    i32 3, label %89
    i32 4, label %94
  ], !dbg !4426

84:                                               ; preds = %83
  %85 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4429
  call void @llvm.dbg.value(metadata i8* %85, metadata !4251, metadata !DIExpression()), !dbg !4377
  %86 = bitcast i8* %77 to i32*, !dbg !4429
  %87 = load i32, i32* %86, align 4, !dbg !4429
  %88 = sext i32 %87 to i64, !dbg !4429
  store i64 %88, i64* %20, align 8, !dbg !4431
  br label %115, !dbg !4432

89:                                               ; preds = %83
  %90 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4433
  call void @llvm.dbg.value(metadata i8* %90, metadata !4251, metadata !DIExpression()), !dbg !4377
  %91 = bitcast i8* %77 to i32*, !dbg !4433
  %92 = load i32, i32* %91, align 4, !dbg !4433
  %93 = sext i32 %92 to i64, !dbg !4433
  store i64 %93, i64* %20, align 8, !dbg !4436
  br label %115, !dbg !4437

94:                                               ; preds = %83
  %95 = ptrtoint i8* %77 to i32, !dbg !4438
  %96 = add i32 %95, 7, !dbg !4438
  %97 = and i32 %96, -8, !dbg !4438
  %98 = inttoptr i32 %97 to i8*, !dbg !4438
  %99 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !4438
  call void @llvm.dbg.value(metadata i8* %99, metadata !4251, metadata !DIExpression()), !dbg !4377
  %100 = inttoptr i32 %97 to i64*, !dbg !4438
  %101 = load i64, i64* %100, align 8, !dbg !4438
  store i64 %101, i64* %20, align 8, !dbg !4439
  br label %115, !dbg !4440

102:                                              ; preds = %83
  %103 = ptrtoint i8* %77 to i32, !dbg !4441
  %104 = add i32 %103, 7, !dbg !4441
  %105 = and i32 %104, -8, !dbg !4441
  %106 = inttoptr i32 %105 to i8*, !dbg !4441
  %107 = getelementptr inbounds i8, i8* %106, i32 8, !dbg !4441
  call void @llvm.dbg.value(metadata i8* %107, metadata !4251, metadata !DIExpression()), !dbg !4377
  %108 = inttoptr i32 %105 to i64*, !dbg !4441
  %109 = load i64, i64* %108, align 8, !dbg !4441
  store i64 %109, i64* %20, align 8, !dbg !4442
  br label %115, !dbg !4443

110:                                              ; preds = %83, %83
  %111 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4444
  call void @llvm.dbg.value(metadata i8* %111, metadata !4251, metadata !DIExpression()), !dbg !4377
  %112 = bitcast i8* %77 to i32*, !dbg !4444
  %113 = load i32, i32* %112, align 4, !dbg !4444
  %114 = sext i32 %113 to i64, !dbg !4445
  store i64 %114, i64* %20, align 8, !dbg !4446
  br label %115, !dbg !4447

115:                                              ; preds = %110, %102, %94, %89, %84
  %116 = phi i64 [ %88, %84 ], [ %101, %94 ], [ %93, %89 ], [ %109, %102 ], [ %114, %110 ]
  %117 = phi i8* [ %85, %84 ], [ %99, %94 ], [ %90, %89 ], [ %107, %102 ], [ %111, %110 ], !dbg !4448
  call void @llvm.dbg.value(metadata i8* %117, metadata !4251, metadata !DIExpression()), !dbg !4377
  %118 = trunc i24 %79 to i4, !dbg !4449
  switch i4 %118, label %177 [
    i4 1, label %119
    i4 2, label %122
  ], !dbg !4449

119:                                              ; preds = %115
  %120 = shl i64 %116, 56, !dbg !4450
  %121 = ashr exact i64 %120, 56, !dbg !4450
  store i64 %121, i64* %20, align 8, !dbg !4453
  br label %177, !dbg !4454

122:                                              ; preds = %115
  %123 = shl i64 %116, 48, !dbg !4455
  %124 = ashr exact i64 %123, 48, !dbg !4455
  store i64 %124, i64* %20, align 8, !dbg !4458
  br label %177, !dbg !4459

125:                                              ; preds = %74
  switch i32 %81, label %126 [
    i32 7, label %152
    i32 6, label %152
    i32 5, label %144
    i32 3, label %131
    i32 4, label %136
  ], !dbg !4460

126:                                              ; preds = %125
  %127 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4463
  call void @llvm.dbg.value(metadata i8* %127, metadata !4251, metadata !DIExpression()), !dbg !4377
  %128 = bitcast i8* %77 to i32*, !dbg !4463
  %129 = load i32, i32* %128, align 4, !dbg !4463
  %130 = zext i32 %129 to i64, !dbg !4463
  store i64 %130, i64* %20, align 8, !dbg !4465
  br label %157, !dbg !4466

131:                                              ; preds = %125
  %132 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4467
  call void @llvm.dbg.value(metadata i8* %132, metadata !4251, metadata !DIExpression()), !dbg !4377
  call void @llvm.dbg.value(metadata i8* %132, metadata !4251, metadata !DIExpression()), !dbg !4377
  %133 = bitcast i8* %77 to i32*, !dbg !4467
  %134 = load i32, i32* %133, align 4, !dbg !4467
  %135 = zext i32 %134 to i64, !dbg !4467
  store i64 %135, i64* %20, align 8, !dbg !4467
  br label %157

136:                                              ; preds = %125
  %137 = ptrtoint i8* %77 to i32, !dbg !4469
  %138 = add i32 %137, 7, !dbg !4469
  %139 = and i32 %138, -8, !dbg !4469
  %140 = inttoptr i32 %139 to i8*, !dbg !4469
  %141 = getelementptr inbounds i8, i8* %140, i32 8, !dbg !4469
  call void @llvm.dbg.value(metadata i8* %141, metadata !4251, metadata !DIExpression()), !dbg !4377
  %142 = inttoptr i32 %139 to i64*, !dbg !4469
  %143 = load i64, i64* %142, align 8, !dbg !4469
  store i64 %143, i64* %20, align 8, !dbg !4470
  br label %157, !dbg !4471

144:                                              ; preds = %125
  %145 = ptrtoint i8* %77 to i32, !dbg !4472
  %146 = add i32 %145, 7, !dbg !4472
  %147 = and i32 %146, -8, !dbg !4472
  %148 = inttoptr i32 %147 to i8*, !dbg !4472
  %149 = getelementptr inbounds i8, i8* %148, i32 8, !dbg !4472
  call void @llvm.dbg.value(metadata i8* %149, metadata !4251, metadata !DIExpression()), !dbg !4377
  %150 = inttoptr i32 %147 to i64*, !dbg !4472
  %151 = load i64, i64* %150, align 8, !dbg !4472
  store i64 %151, i64* %20, align 8, !dbg !4473
  br label %157, !dbg !4474

152:                                              ; preds = %125, %125
  %153 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4475
  call void @llvm.dbg.value(metadata i8* %153, metadata !4251, metadata !DIExpression()), !dbg !4377
  %154 = bitcast i8* %77 to i32*, !dbg !4475
  %155 = load i32, i32* %154, align 4, !dbg !4475
  %156 = zext i32 %155 to i64, !dbg !4476
  store i64 %156, i64* %20, align 8, !dbg !4477
  br label %157, !dbg !4478

157:                                              ; preds = %131, %152, %144, %136, %126
  %158 = phi i64 [ %130, %126 ], [ %143, %136 ], [ %151, %144 ], [ %156, %152 ], [ %135, %131 ]
  %159 = phi i8* [ %127, %126 ], [ %141, %136 ], [ %149, %144 ], [ %153, %152 ], [ %132, %131 ], !dbg !4479
  call void @llvm.dbg.value(metadata i8* %159, metadata !4251, metadata !DIExpression()), !dbg !4377
  %160 = trunc i24 %79 to i4, !dbg !4480
  switch i4 %160, label %177 [
    i4 1, label %161
    i4 2, label %163
  ], !dbg !4480

161:                                              ; preds = %157
  %162 = and i64 %158, 255, !dbg !4481
  store i64 %162, i64* %20, align 8, !dbg !4484
  br label %177, !dbg !4485

163:                                              ; preds = %157
  %164 = and i64 %158, 65535, !dbg !4486
  store i64 %164, i64* %20, align 8, !dbg !4489
  br label %177, !dbg !4490

165:                                              ; preds = %74
  %166 = ptrtoint i8* %77 to i32, !dbg !4491
  %167 = add i32 %166, 7, !dbg !4491
  %168 = and i32 %167, -8, !dbg !4491
  %169 = inttoptr i32 %168 to i8*, !dbg !4491
  %170 = getelementptr inbounds i8, i8* %169, i32 8, !dbg !4491
  call void @llvm.dbg.value(metadata i8* %170, metadata !4251, metadata !DIExpression()), !dbg !4377
  call void @llvm.dbg.value(metadata i8* %170, metadata !4251, metadata !DIExpression()), !dbg !4377
  %171 = inttoptr i32 %168 to double*, !dbg !4491
  %172 = load double, double* %171, align 8, !dbg !4491
  store double %172, double* %19, align 8, !dbg !4491
  br label %177

173:                                              ; preds = %74
  %174 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4495
  call void @llvm.dbg.value(metadata i8* %174, metadata !4251, metadata !DIExpression()), !dbg !4377
  %175 = bitcast i8* %77 to i8**, !dbg !4495
  %176 = load i8*, i8** %175, align 4, !dbg !4495
  store i8* %176, i8** %18, align 8, !dbg !4498
  br label %177, !dbg !4499

177:                                              ; preds = %165, %74, %157, %115, %163, %161, %173, %119, %122
  %178 = phi i8* [ %117, %119 ], [ %117, %122 ], [ %159, %161 ], [ %159, %163 ], [ %174, %173 ], [ %117, %115 ], [ %159, %157 ], [ %77, %74 ], [ %170, %165 ], !dbg !4391
  call void @llvm.dbg.value(metadata i8* %178, metadata !4251, metadata !DIExpression()), !dbg !4377
  %179 = and i24 %75, 3, !dbg !4500
  %180 = icmp eq i24 %179, 0, !dbg !4500
  br i1 %180, label %185, label %181, !dbg !4500

181:                                              ; preds = %177
  %182 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %30, i8* noundef nonnull %39) #21, !dbg !4501
  call void @llvm.dbg.value(metadata i32 %182, metadata !4326, metadata !DIExpression()), !dbg !4502
  %183 = icmp slt i32 %182, 0, !dbg !4503
  %184 = add i32 %182, %29, !dbg !4501
  call void @llvm.dbg.value(metadata i32 undef, metadata !4257, metadata !DIExpression()), !dbg !4377
  br i1 %183, label %361, label %363

185:                                              ; preds = %177
  %186 = load i8, i8* %21, align 1, !dbg !4505
  switch i8 %186, label %363 [
    i8 37, label %187
    i8 115, label %191
    i8 99, label %198
    i8 100, label %201
    i8 105, label %201
    i8 111, label %212
    i8 117, label %212
    i8 120, label %212
    i8 88, label %212
    i8 112, label %230
    i8 110, label %239
  ], !dbg !4506

187:                                              ; preds = %185
  %188 = call i32 %11(i32 noundef 37, i8* noundef %1) #22, !dbg !4507
  call void @llvm.dbg.value(metadata i32 %188, metadata !4330, metadata !DIExpression()), !dbg !4508
  %189 = icmp slt i32 %188, 0, !dbg !4509
  %190 = add i32 %29, 1, !dbg !4507
  call void @llvm.dbg.value(metadata i32 undef, metadata !4257, metadata !DIExpression()), !dbg !4377
  br i1 %189, label %361, label %363

191:                                              ; preds = %185
  %192 = load i8*, i8** %18, align 8, !dbg !4511
  call void @llvm.dbg.value(metadata i8* %192, metadata !4318, metadata !DIExpression()), !dbg !4391
  %193 = icmp sgt i32 %76, -1, !dbg !4512
  br i1 %193, label %194, label %196, !dbg !4514

194:                                              ; preds = %191
  %195 = call i32 @strnlen(i8* noundef %192, i32 noundef %76) #22, !dbg !4515
  call void @llvm.dbg.value(metadata i32 %195, metadata !4333, metadata !DIExpression()), !dbg !4517
  br label %241, !dbg !4518

196:                                              ; preds = %191
  %197 = call i32 @strlen(i8* noundef %192) #22, !dbg !4519
  call void @llvm.dbg.value(metadata i32 %197, metadata !4333, metadata !DIExpression()), !dbg !4517
  br label %241

198:                                              ; preds = %185
  call void @llvm.dbg.value(metadata i8* %10, metadata !4318, metadata !DIExpression()), !dbg !4391
  %199 = load i64, i64* %20, align 8, !dbg !4521
  %200 = trunc i64 %199 to i8, !dbg !4522
  store i8 %200, i8* %10, align 1, !dbg !4523
  call void @llvm.dbg.value(metadata i8* %23, metadata !4319, metadata !DIExpression()), !dbg !4391
  br label %245, !dbg !4524

201:                                              ; preds = %185, %185
  %202 = and i24 %75, 8, !dbg !4525
  %203 = icmp eq i24 %202, 0, !dbg !4525
  %204 = trunc i24 %75 to i8, !dbg !4527
  %205 = shl i8 %204, 1, !dbg !4527
  %206 = and i8 %205, 32, !dbg !4527
  %207 = select i1 %203, i8 %206, i8 43, !dbg !4527
  call void @llvm.dbg.value(metadata i8 %207, metadata !4320, metadata !DIExpression()), !dbg !4391
  %208 = load i64, i64* %20, align 8, !dbg !4528
  call void @llvm.dbg.value(metadata i64 %208, metadata !4258, metadata !DIExpression()), !dbg !4377
  %209 = icmp slt i64 %208, 0, !dbg !4529
  br i1 %209, label %210, label %212, !dbg !4531

210:                                              ; preds = %201
  call void @llvm.dbg.value(metadata i8 45, metadata !4320, metadata !DIExpression()), !dbg !4391
  %211 = sub nsw i64 0, %208, !dbg !4532
  store i64 %211, i64* %20, align 8, !dbg !4534
  br label %212, !dbg !4535

212:                                              ; preds = %201, %210, %185, %185, %185, %185
  %213 = phi i8 [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 45, %210 ], [ %207, %201 ], !dbg !4391
  call void @llvm.dbg.value(metadata i8 %213, metadata !4320, metadata !DIExpression()), !dbg !4391
  %214 = load i64, i64* %20, align 8, !dbg !4536
  %215 = call fastcc i8* @encode_uint(i64 noundef %214, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #21, !dbg !4537
  call void @llvm.dbg.value(metadata i8* %215, metadata !4318, metadata !DIExpression()), !dbg !4391
  br label %216, !dbg !4538

216:                                              ; preds = %233, %212
  %217 = phi i8 [ 0, %233 ], [ %213, %212 ], !dbg !4539
  %218 = phi i8* [ %236, %233 ], [ %215, %212 ], !dbg !4540
  call void @llvm.dbg.value(metadata i8* %218, metadata !4318, metadata !DIExpression()), !dbg !4391
  call void @llvm.dbg.value(metadata i8 %217, metadata !4320, metadata !DIExpression()), !dbg !4391
  call void @llvm.dbg.label(metadata !4376), !dbg !4541
  %219 = icmp sgt i32 %76, -1, !dbg !4542
  br i1 %219, label %222, label %220, !dbg !4543

220:                                              ; preds = %216
  %221 = load i24, i24* %15, align 8, !dbg !4544
  br label %245, !dbg !4543

222:                                              ; preds = %216
  %223 = ptrtoint i8* %218 to i32, !dbg !4546
  %224 = sub i32 %22, %223, !dbg !4546
  call void @llvm.dbg.value(metadata i32 %224, metadata !4335, metadata !DIExpression()), !dbg !4547
  %225 = load i24, i24* %15, align 8, !dbg !4548
  %226 = and i24 %225, -65, !dbg !4548
  store i24 %226, i24* %15, align 8, !dbg !4548
  %227 = icmp ugt i32 %76, %224, !dbg !4549
  br i1 %227, label %228, label %245, !dbg !4551

228:                                              ; preds = %222
  %229 = sub nsw i32 %76, %224, !dbg !4552
  store i32 %229, i32* %16, align 4, !dbg !4554
  br label %245, !dbg !4555

230:                                              ; preds = %185
  %231 = load i8*, i8** %18, align 8, !dbg !4556
  %232 = icmp eq i8* %231, null, !dbg !4558
  br i1 %232, label %245, label %233, !dbg !4559

233:                                              ; preds = %230
  %234 = ptrtoint i8* %231 to i32, !dbg !4560
  %235 = zext i32 %234 to i64, !dbg !4560
  %236 = call fastcc i8* @encode_uint(i64 noundef %235, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #21, !dbg !4562
  call void @llvm.dbg.value(metadata i8* %236, metadata !4318, metadata !DIExpression()), !dbg !4391
  %237 = load i24, i24* %15, align 8, !dbg !4563
  %238 = or i24 %237, 1048576, !dbg !4563
  store i24 %238, i24* %15, align 8, !dbg !4563
  store i8 120, i8* %21, align 1, !dbg !4564
  br label %216, !dbg !4565

239:                                              ; preds = %185
  %240 = load i8*, i8** %18, align 8, !dbg !4566
  call fastcc void @store_count(%struct.conversion* noundef nonnull %13, i8* noundef %240, i32 noundef %29) #21, !dbg !4569
  br label %363, !dbg !4570

241:                                              ; preds = %194, %196
  %242 = phi i32 [ %195, %194 ], [ %197, %196 ], !dbg !4571
  call void @llvm.dbg.value(metadata i32 %242, metadata !4333, metadata !DIExpression()), !dbg !4517
  %243 = getelementptr inbounds i8, i8* %192, i32 %242, !dbg !4572
  call void @llvm.dbg.value(metadata i32 -1, metadata !4317, metadata !DIExpression()), !dbg !4391
  call void @llvm.dbg.value(metadata i32 %29, metadata !4257, metadata !DIExpression()), !dbg !4377
  call void @llvm.dbg.value(metadata i8* %192, metadata !4318, metadata !DIExpression()), !dbg !4391
  call void @llvm.dbg.value(metadata i8* %243, metadata !4319, metadata !DIExpression()), !dbg !4391
  call void @llvm.dbg.value(metadata i8 0, metadata !4320, metadata !DIExpression()), !dbg !4391
  %244 = icmp eq i8* %192, null, !dbg !4573
  br i1 %244, label %363, label %245, !dbg !4575, !llvm.loop !4387

245:                                              ; preds = %220, %230, %222, %228, %198, %241
  %246 = phi i24 [ %75, %241 ], [ %75, %230 ], [ %226, %222 ], [ %226, %228 ], [ %75, %198 ], [ %221, %220 ], !dbg !4544
  %247 = phi i8* [ %192, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13, i32 0, i32 0), %230 ], [ %218, %222 ], [ %218, %228 ], [ %10, %198 ], [ %218, %220 ]
  %248 = phi i8* [ %243, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13, i32 0, i32 5), %230 ], [ %14, %222 ], [ %14, %228 ], [ %23, %198 ], [ %14, %220 ]
  %249 = phi i8 [ 0, %241 ], [ 0, %230 ], [ %217, %222 ], [ %217, %228 ], [ 0, %198 ], [ %217, %220 ]
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i8* %247), metadata !4338, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4391
  call void @llvm.dbg.value(metadata i32 0, metadata !4339, metadata !DIExpression()), !dbg !4391
  %250 = zext i8 %249 to i32, !dbg !4576
  %251 = icmp eq i8 %249, 0, !dbg !4578
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i8* %247), metadata !4338, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4391
  call void @llvm.dbg.value(metadata i32 undef, metadata !4338, metadata !DIExpression()), !dbg !4391
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 undef), metadata !4338, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4391
  call void @llvm.dbg.value(metadata i32 undef, metadata !4338, metadata !DIExpression()), !dbg !4391
  %252 = icmp sgt i32 %58, 0, !dbg !4579
  br i1 %252, label %253, label %302, !dbg !4580

253:                                              ; preds = %245
  %254 = and i24 %246, 1048576, !dbg !4544
  %255 = icmp eq i24 %254, 0, !dbg !4544
  %256 = ptrtoint i8* %248 to i32, !dbg !4581
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i8* %247), metadata !4338, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4391
  %257 = ptrtoint i8* %247 to i32, !dbg !4581
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i32 %257), metadata !4338, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4391
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i32 %257), metadata !4338, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4391
  %258 = xor i1 %251, true, !dbg !4582
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !4338, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4391
  %259 = sext i1 %258 to i32, !dbg !4582
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !4338, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4391
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %258, i32 %257), metadata !4338, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4391
  %260 = lshr i24 %246, 19, !dbg !4583
  %261 = and i24 %260, 1, !dbg !4583
  %262 = select i1 %255, i24 %261, i24 2, !dbg !4583
  %263 = zext i24 %262 to i32, !dbg !4583
  %264 = add i32 %257, %259, !dbg !4583
  %265 = add i32 %256, %263, !dbg !4583
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i32 undef, i32 %263, i1 %258, i32 %257), metadata !4338, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 4, DW_OP_minus, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4391
  %266 = and i24 %246, 4194304, !dbg !4584
  %267 = icmp eq i24 %266, 0, !dbg !4584
  %268 = load i32, i32* %16, align 4, !dbg !4586
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 %268), metadata !4338, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4391
  call void @llvm.dbg.value(metadata i32 undef, metadata !4338, metadata !DIExpression()), !dbg !4391
  %269 = load i32, i32* %17, align 8, !dbg !4587
  %270 = select i1 %267, i32 0, i32 %269, !dbg !4587
  call void @llvm.dbg.value(metadata i32 undef, metadata !4338, metadata !DIExpression()), !dbg !4391
  %271 = add i32 %264, %58, !dbg !4587
  %272 = add i32 %265, %268, !dbg !4587
  %273 = add i32 %272, %270, !dbg !4588
  %274 = sub i32 %271, %273, !dbg !4588
  call void @llvm.dbg.value(metadata i32 %274, metadata !4316, metadata !DIExpression()), !dbg !4391
  %275 = and i24 %246, 4, !dbg !4589
  %276 = icmp eq i24 %275, 0, !dbg !4589
  br i1 %276, label %277, label %302, !dbg !4590

277:                                              ; preds = %253
  call void @llvm.dbg.value(metadata i8 32, metadata !4340, metadata !DIExpression()), !dbg !4591
  %278 = and i24 %246, 64, !dbg !4592
  %279 = icmp eq i24 %278, 0, !dbg !4592
  %280 = select i1 %279, i1 true, i1 %251, !dbg !4593
  %281 = select i1 %279, i8 %249, i8 0, !dbg !4593
  %282 = select i1 %279, i32 32, i32 48, !dbg !4593
  br i1 %280, label %287, label %283, !dbg !4593

283:                                              ; preds = %277
  %284 = call i32 %11(i32 noundef %250, i8* noundef %1) #22, !dbg !4594
  call void @llvm.dbg.value(metadata i32 %284, metadata !4345, metadata !DIExpression()), !dbg !4595
  %285 = icmp slt i32 %284, 0, !dbg !4596
  %286 = add i32 %29, 1, !dbg !4594
  call void @llvm.dbg.value(metadata i32 undef, metadata !4257, metadata !DIExpression()), !dbg !4377
  br i1 %285, label %361, label %287

287:                                              ; preds = %277, %283
  %288 = phi i8 [ %281, %277 ], [ 0, %283 ], !dbg !4391
  %289 = phi i32 [ %282, %277 ], [ 48, %283 ]
  %290 = phi i32 [ %29, %277 ], [ %286, %283 ], !dbg !4381
  call void @llvm.dbg.value(metadata i32 %290, metadata !4257, metadata !DIExpression()), !dbg !4377
  call void @llvm.dbg.value(metadata i8 undef, metadata !4340, metadata !DIExpression()), !dbg !4591
  call void @llvm.dbg.value(metadata i8 %288, metadata !4320, metadata !DIExpression()), !dbg !4391
  %291 = call i32 @llvm.smin.i32(i32 %274, i32 0), !dbg !4598
  %292 = add i32 %291, -1, !dbg !4598
  br label %293, !dbg !4598

293:                                              ; preds = %297, %287
  %294 = phi i32 [ %274, %287 ], [ %298, %297 ], !dbg !4599
  %295 = phi i32 [ %290, %287 ], [ %301, %297 ], !dbg !4381
  call void @llvm.dbg.value(metadata i32 %295, metadata !4257, metadata !DIExpression()), !dbg !4377
  call void @llvm.dbg.value(metadata i32 %294, metadata !4316, metadata !DIExpression()), !dbg !4391
  call void @llvm.dbg.value(metadata i32 %294, metadata !4316, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4391
  %296 = icmp sgt i32 %294, 0, !dbg !4600
  br i1 %296, label %297, label %302, !dbg !4598

297:                                              ; preds = %293
  %298 = add nsw i32 %294, -1, !dbg !4601
  call void @llvm.dbg.value(metadata i32 %298, metadata !4316, metadata !DIExpression()), !dbg !4391
  %299 = call i32 %11(i32 noundef %289, i8* noundef %1) #22, !dbg !4602
  call void @llvm.dbg.value(metadata i32 %299, metadata !4351, metadata !DIExpression()), !dbg !4603
  %300 = icmp slt i32 %299, 0, !dbg !4604
  %301 = add i32 %295, 1, !dbg !4602
  call void @llvm.dbg.value(metadata i32 undef, metadata !4257, metadata !DIExpression()), !dbg !4377
  br i1 %300, label %361, label %293, !llvm.loop !4606

302:                                              ; preds = %293, %253, %245
  %303 = phi i8 [ %249, %253 ], [ %249, %245 ], [ %288, %293 ], !dbg !4391
  %304 = phi i32 [ %274, %253 ], [ %58, %245 ], [ %292, %293 ], !dbg !4391
  %305 = phi i32 [ %29, %253 ], [ %29, %245 ], [ %295, %293 ], !dbg !4381
  call void @llvm.dbg.value(metadata i32 %305, metadata !4257, metadata !DIExpression()), !dbg !4377
  call void @llvm.dbg.value(metadata i32 %304, metadata !4316, metadata !DIExpression()), !dbg !4391
  call void @llvm.dbg.value(metadata i8 %303, metadata !4320, metadata !DIExpression()), !dbg !4391
  %306 = icmp eq i8 %303, 0, !dbg !4608
  br i1 %306, label %312, label %307, !dbg !4609

307:                                              ; preds = %302
  %308 = zext i8 %303 to i32, !dbg !4610
  %309 = call i32 %11(i32 noundef %308, i8* noundef %1) #22, !dbg !4611
  call void @llvm.dbg.value(metadata i32 %309, metadata !4354, metadata !DIExpression()), !dbg !4612
  %310 = icmp slt i32 %309, 0, !dbg !4613
  %311 = add i32 %305, 1, !dbg !4611
  call void @llvm.dbg.value(metadata i32 undef, metadata !4257, metadata !DIExpression()), !dbg !4377
  br i1 %310, label %361, label %312

312:                                              ; preds = %307, %302
  %313 = phi i32 [ %311, %307 ], [ %305, %302 ], !dbg !4381
  call void @llvm.dbg.value(metadata i32 %313, metadata !4257, metadata !DIExpression()), !dbg !4377
  %314 = lshr i24 %246, 20, !dbg !4615
  %315 = lshr i24 %246, 19, !dbg !4616
  %316 = or i24 %314, %315, !dbg !4617
  %317 = and i24 %316, 1, !dbg !4617
  %318 = icmp eq i24 %317, 0, !dbg !4617
  br i1 %318, label %323, label %319, !dbg !4618

319:                                              ; preds = %312
  %320 = call i32 %11(i32 noundef 48, i8* noundef %1) #22, !dbg !4619
  call void @llvm.dbg.value(metadata i32 %320, metadata !4358, metadata !DIExpression()), !dbg !4620
  %321 = icmp slt i32 %320, 0, !dbg !4621
  %322 = add i32 %313, 1, !dbg !4619
  call void @llvm.dbg.value(metadata i32 undef, metadata !4257, metadata !DIExpression()), !dbg !4377
  br i1 %321, label %361, label %323

323:                                              ; preds = %319, %312
  %324 = phi i32 [ %322, %319 ], [ %313, %312 ], !dbg !4381
  call void @llvm.dbg.value(metadata i32 %324, metadata !4257, metadata !DIExpression()), !dbg !4377
  %325 = and i24 %246, 1048576, !dbg !4623
  %326 = icmp eq i24 %325, 0, !dbg !4623
  br i1 %326, label %333, label %327, !dbg !4624

327:                                              ; preds = %323
  %328 = load i8, i8* %21, align 1, !dbg !4625
  %329 = zext i8 %328 to i32, !dbg !4625
  %330 = call i32 %11(i32 noundef %329, i8* noundef %1) #22, !dbg !4625
  call void @llvm.dbg.value(metadata i32 %330, metadata !4364, metadata !DIExpression()), !dbg !4626
  %331 = icmp slt i32 %330, 0, !dbg !4627
  %332 = add i32 %324, 1, !dbg !4625
  call void @llvm.dbg.value(metadata i32 undef, metadata !4257, metadata !DIExpression()), !dbg !4377
  br i1 %331, label %361, label %333

333:                                              ; preds = %327, %323
  %334 = phi i32 [ %332, %327 ], [ %324, %323 ], !dbg !4381
  call void @llvm.dbg.value(metadata i32 %334, metadata !4257, metadata !DIExpression()), !dbg !4377
  %335 = load i32, i32* %16, align 4, !dbg !4629
  call void @llvm.dbg.value(metadata i32 %335, metadata !4339, metadata !DIExpression()), !dbg !4391
  br label %336, !dbg !4630

336:                                              ; preds = %340, %333
  %337 = phi i32 [ %335, %333 ], [ %341, %340 ], !dbg !4631
  %338 = phi i32 [ %334, %333 ], [ %344, %340 ], !dbg !4381
  call void @llvm.dbg.value(metadata i32 %338, metadata !4257, metadata !DIExpression()), !dbg !4377
  call void @llvm.dbg.value(metadata i32 %337, metadata !4339, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4391
  %339 = icmp sgt i32 %337, 0, !dbg !4632
  br i1 %339, label %340, label %345, !dbg !4630

340:                                              ; preds = %336
  %341 = add nsw i32 %337, -1, !dbg !4633
  call void @llvm.dbg.value(metadata i32 %341, metadata !4339, metadata !DIExpression()), !dbg !4391
  %342 = call i32 %11(i32 noundef 48, i8* noundef %1) #22, !dbg !4634
  call void @llvm.dbg.value(metadata i32 %342, metadata !4368, metadata !DIExpression()), !dbg !4635
  %343 = icmp slt i32 %342, 0, !dbg !4636
  %344 = add i32 %338, 1, !dbg !4634
  call void @llvm.dbg.value(metadata i32 undef, metadata !4257, metadata !DIExpression()), !dbg !4377
  br i1 %343, label %361, label %336, !llvm.loop !4638

345:                                              ; preds = %336
  %346 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %247, i8* noundef %248) #21, !dbg !4640
  call void @llvm.dbg.value(metadata i32 %346, metadata !4371, metadata !DIExpression()), !dbg !4641
  %347 = icmp slt i32 %346, 0, !dbg !4642
  call void @llvm.dbg.value(metadata i32 undef, metadata !4257, metadata !DIExpression()), !dbg !4377
  br i1 %347, label %361, label %348

348:                                              ; preds = %345
  %349 = add i32 %346, %338, !dbg !4640
  call void @llvm.dbg.value(metadata i32 %349, metadata !4257, metadata !DIExpression()), !dbg !4377
  call void @llvm.dbg.value(metadata i32 %304, metadata !4316, metadata !DIExpression()), !dbg !4391
  %350 = icmp sgt i32 %304, 0, !dbg !4644
  br i1 %350, label %351, label %363, !dbg !4645

351:                                              ; preds = %348
  %352 = add nuw i32 %346, %304, !dbg !4645
  %353 = add i32 %352, %338, !dbg !4645
  br label %354, !dbg !4645

354:                                              ; preds = %351, %358
  %355 = phi i32 [ %359, %358 ], [ %304, %351 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !4257, metadata !DIExpression()), !dbg !4377
  call void @llvm.dbg.value(metadata i32 %355, metadata !4316, metadata !DIExpression()), !dbg !4391
  %356 = call i32 %11(i32 noundef 32, i8* noundef %1) #22, !dbg !4646
  call void @llvm.dbg.value(metadata i32 %356, metadata !4373, metadata !DIExpression()), !dbg !4647
  %357 = icmp slt i32 %356, 0, !dbg !4648
  br i1 %357, label %361, label %358

358:                                              ; preds = %354
  %359 = add nsw i32 %355, -1, !dbg !4650
  call void @llvm.dbg.value(metadata i32 undef, metadata !4257, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4377
  call void @llvm.dbg.value(metadata i32 %359, metadata !4316, metadata !DIExpression()), !dbg !4391
  %360 = icmp sgt i32 %355, 1, !dbg !4644
  br i1 %360, label %354, label %363, !dbg !4645, !llvm.loop !4651

361:                                              ; preds = %345, %327, %319, %307, %187, %283, %181, %297, %340, %354
  %362 = phi i32 [ %356, %354 ], [ %342, %340 ], [ %299, %297 ], [ %188, %187 ], [ %309, %307 ], [ %320, %319 ], [ %330, %327 ], [ %346, %345 ], [ %284, %283 ], [ %182, %181 ]
  call void @llvm.dbg.value(metadata i32 %364, metadata !4257, metadata !DIExpression()), !dbg !4377
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #20, !dbg !4388
  br label %365

363:                                              ; preds = %358, %348, %187, %239, %185, %181, %241
  %364 = phi i32 [ %29, %241 ], [ %184, %181 ], [ %190, %187 ], [ %29, %239 ], [ %29, %185 ], [ %349, %348 ], [ %353, %358 ], !dbg !4381
  call void @llvm.dbg.value(metadata i32 %364, metadata !4257, metadata !DIExpression()), !dbg !4377
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #20, !dbg !4388
  br label %24

365:                                              ; preds = %28, %32, %361
  %366 = phi i32 [ %362, %361 ], [ %29, %28 ], [ %35, %32 ], !dbg !4377
  call void @llvm.lifetime.end.p0i8(i64 22, i8* nonnull %10) #20, !dbg !4653
  ret i32 %366, !dbg !4653
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #12

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @extract_conversion(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #13 !dbg !4654 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4658, metadata !DIExpression()), !dbg !4660
  call void @llvm.dbg.value(metadata i8* %1, metadata !4659, metadata !DIExpression()), !dbg !4660
  %3 = bitcast %struct.conversion* %0 to i24*, !dbg !4661
  store i24 0, i24* %3, align 4, !dbg !4661
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !4661
  store i8 0, i8* %4, align 1, !dbg !4661
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !4661
  store i32 0, i32* %5, align 4, !dbg !4661
  %6 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !4661
  store i32 0, i32* %6, align 4, !dbg !4661
  %7 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4662
  call void @llvm.dbg.value(metadata i8* %7, metadata !4659, metadata !DIExpression()), !dbg !4660
  %8 = load i8, i8* %7, align 1, !dbg !4663
  %9 = icmp eq i8 %8, 37, !dbg !4665
  br i1 %9, label %10, label %12, !dbg !4666

10:                                               ; preds = %2
  %11 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !4667
  call void @llvm.dbg.value(metadata i8* %11, metadata !4659, metadata !DIExpression()), !dbg !4660
  store i8 37, i8* %4, align 1, !dbg !4669
  br label %18, !dbg !4670

12:                                               ; preds = %2
  %13 = tail call fastcc i8* @extract_flags(%struct.conversion* noundef nonnull %0, i8* noundef nonnull %7) #21, !dbg !4671
  call void @llvm.dbg.value(metadata i8* %13, metadata !4659, metadata !DIExpression()), !dbg !4660
  %14 = tail call fastcc i8* @extract_width(%struct.conversion* noundef nonnull %0, i8* noundef %13) #21, !dbg !4672
  call void @llvm.dbg.value(metadata i8* %14, metadata !4659, metadata !DIExpression()), !dbg !4660
  %15 = tail call fastcc i8* @extract_prec(%struct.conversion* noundef nonnull %0, i8* noundef %14) #21, !dbg !4673
  call void @llvm.dbg.value(metadata i8* %15, metadata !4659, metadata !DIExpression()), !dbg !4660
  %16 = tail call fastcc i8* @extract_length(%struct.conversion* noundef nonnull %0, i8* noundef %15) #21, !dbg !4674
  call void @llvm.dbg.value(metadata i8* %16, metadata !4659, metadata !DIExpression()), !dbg !4660
  %17 = tail call fastcc i8* @extract_specifier(%struct.conversion* noundef nonnull %0, i8* noundef %16) #21, !dbg !4675
  call void @llvm.dbg.value(metadata i8* %17, metadata !4659, metadata !DIExpression()), !dbg !4660
  br label %18, !dbg !4676

18:                                               ; preds = %12, %10
  %19 = phi i8* [ %11, %10 ], [ %17, %12 ], !dbg !4660
  ret i8* %19, !dbg !4677
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @outs(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef readonly %2, i8* noundef readnone %3) unnamed_addr #1 !dbg !4678 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4682, metadata !DIExpression()), !dbg !4689
  call void @llvm.dbg.value(metadata i8* %1, metadata !4683, metadata !DIExpression()), !dbg !4689
  call void @llvm.dbg.value(metadata i8* %2, metadata !4684, metadata !DIExpression()), !dbg !4689
  call void @llvm.dbg.value(metadata i8* %3, metadata !4685, metadata !DIExpression()), !dbg !4689
  call void @llvm.dbg.value(metadata i32 0, metadata !4686, metadata !DIExpression()), !dbg !4689
  %5 = icmp eq i8* %3, null
  %6 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  br label %7, !dbg !4690

7:                                                ; preds = %17, %4
  %8 = phi i8* [ %2, %4 ], [ %19, %17 ]
  %9 = phi i32 [ 0, %4 ], [ %23, %17 ], !dbg !4691
  call void @llvm.dbg.value(metadata i32 %9, metadata !4686, metadata !DIExpression()), !dbg !4689
  call void @llvm.dbg.value(metadata i8* %8, metadata !4684, metadata !DIExpression()), !dbg !4689
  %10 = icmp ult i8* %8, %3, !dbg !4692
  br i1 %10, label %11, label %13, !dbg !4693

11:                                               ; preds = %7
  %12 = load i8, i8* %8, align 1, !dbg !4694
  br label %17, !dbg !4693

13:                                               ; preds = %7
  br i1 %5, label %14, label %24, !dbg !4695

14:                                               ; preds = %13
  %15 = load i8, i8* %8, align 1, !dbg !4696
  %16 = icmp eq i8 %15, 0, !dbg !4695
  br i1 %16, label %24, label %17, !dbg !4690

17:                                               ; preds = %11, %14
  %18 = phi i8 [ %12, %11 ], [ %15, %14 ], !dbg !4694
  %19 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !4697
  call void @llvm.dbg.value(metadata i8* %19, metadata !4684, metadata !DIExpression()), !dbg !4689
  %20 = zext i8 %18 to i32, !dbg !4698
  %21 = tail call i32 %6(i32 noundef %20, i8* noundef %1) #22, !dbg !4699
  call void @llvm.dbg.value(metadata i32 %21, metadata !4687, metadata !DIExpression()), !dbg !4700
  %22 = icmp slt i32 %21, 0, !dbg !4701
  %23 = add i32 %9, 1, !dbg !4703
  call void @llvm.dbg.value(metadata i32 undef, metadata !4686, metadata !DIExpression()), !dbg !4689
  br i1 %22, label %24, label %7, !llvm.loop !4704

24:                                               ; preds = %14, %13, %17
  %25 = phi i32 [ %21, %17 ], [ %9, %13 ], [ %9, %14 ], !dbg !4689
  ret i32 %25, !dbg !4706
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @encode_uint(i64 noundef %0, %struct.conversion* nocapture noundef %1, i8* noundef %2, i8* noundef %3) unnamed_addr #13 !dbg !4707 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !4711, metadata !DIExpression()), !dbg !4721
  call void @llvm.dbg.value(metadata %struct.conversion* %1, metadata !4712, metadata !DIExpression()), !dbg !4721
  call void @llvm.dbg.value(metadata i8* %2, metadata !4713, metadata !DIExpression()), !dbg !4721
  call void @llvm.dbg.value(metadata i8* %3, metadata !4714, metadata !DIExpression()), !dbg !4721
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %1, i32 0, i32 1, !dbg !4722
  %6 = load i8, i8* %5, align 1, !dbg !4722
  %7 = zext i8 %6 to i32, !dbg !4723
  %8 = tail call fastcc i32 @isupper(i32 noundef %7) #21, !dbg !4724
  %9 = icmp eq i32 %8, 0, !dbg !4724
  call void @llvm.dbg.value(metadata i1 %9, metadata !4715, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4721
  %10 = tail call fastcc i32 @conversion_radix(i8 noundef zeroext %6) #21, !dbg !4725
  call void @llvm.dbg.value(metadata i32 %10, metadata !4716, metadata !DIExpression()), !dbg !4721
  %11 = ptrtoint i8* %3 to i32, !dbg !4726
  %12 = ptrtoint i8* %2 to i32, !dbg !4726
  %13 = sub i32 %11, %12, !dbg !4726
  %14 = getelementptr inbounds i8, i8* %2, i32 %13, !dbg !4727
  call void @llvm.dbg.value(metadata i8* %14, metadata !4718, metadata !DIExpression()), !dbg !4721
  %15 = zext i32 %10 to i64
  %16 = select i1 %9, i32 87, i32 55
  br label %17, !dbg !4728

17:                                               ; preds = %17, %4
  %18 = phi i8* [ %14, %4 ], [ %30, %17 ], !dbg !4721
  %19 = phi i64 [ %0, %4 ], [ %22, %17 ]
  call void @llvm.dbg.value(metadata i64 %19, metadata !4711, metadata !DIExpression()), !dbg !4721
  call void @llvm.dbg.value(metadata i8* %18, metadata !4718, metadata !DIExpression()), !dbg !4721
  %20 = freeze i64 %19
  %21 = freeze i64 %15
  %22 = udiv i64 %20, %21, !dbg !4729
  %23 = mul i64 %22, %21
  %24 = sub i64 %20, %23
  %25 = trunc i64 %24 to i32, !dbg !4730
  call void @llvm.dbg.value(metadata i32 %25, metadata !4719, metadata !DIExpression()), !dbg !4731
  %26 = icmp ult i32 %25, 10, !dbg !4732
  %27 = select i1 %26, i32 48, i32 %16, !dbg !4733
  %28 = add i32 %27, %25, !dbg !4731
  %29 = trunc i32 %28 to i8, !dbg !4733
  %30 = getelementptr inbounds i8, i8* %18, i32 -1, !dbg !4734
  call void @llvm.dbg.value(metadata i8* %30, metadata !4718, metadata !DIExpression()), !dbg !4721
  store i8 %29, i8* %30, align 1, !dbg !4735
  call void @llvm.dbg.value(metadata i64 %22, metadata !4711, metadata !DIExpression()), !dbg !4721
  %31 = icmp uge i64 %19, %15, !dbg !4736
  %32 = icmp ugt i8* %30, %2, !dbg !4737
  %33 = and i1 %31, %32, !dbg !4737
  br i1 %33, label %17, label %34, !dbg !4738, !llvm.loop !4739

34:                                               ; preds = %17
  %35 = bitcast %struct.conversion* %1 to i24*, !dbg !4741
  %36 = load i24, i24* %35, align 4, !dbg !4741
  %37 = and i24 %36, 32, !dbg !4741
  %38 = icmp eq i24 %37, 0, !dbg !4741
  br i1 %38, label %44, label %39, !dbg !4743

39:                                               ; preds = %34
  switch i32 %10, label %44 [
    i32 8, label %41
    i32 16, label %40
  ], !dbg !4744

40:                                               ; preds = %39
  br label %41, !dbg !4746

41:                                               ; preds = %39, %40
  %42 = phi i24 [ 1048576, %40 ], [ 524288, %39 ]
  %43 = or i24 %36, %42, !dbg !4750
  store i24 %43, i24* %35, align 4, !dbg !4750
  br label %44, !dbg !4751

44:                                               ; preds = %41, %39, %34
  ret i8* %30, !dbg !4751
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @store_count(%struct.conversion* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) unnamed_addr #9 !dbg !4752 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4758, metadata !DIExpression()), !dbg !4761
  call void @llvm.dbg.value(metadata i8* %1, metadata !4759, metadata !DIExpression()), !dbg !4761
  call void @llvm.dbg.value(metadata i32 %2, metadata !4760, metadata !DIExpression()), !dbg !4761
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !4762
  %5 = load i24, i24* %4, align 4, !dbg !4762
  %6 = lshr i24 %5, 11, !dbg !4762
  %7 = and i24 %6, 15, !dbg !4762
  %8 = zext i24 %7 to i32, !dbg !4762
  switch i32 %8, label %28 [
    i32 0, label %9
    i32 1, label %11
    i32 2, label %13
    i32 3, label %16
    i32 4, label %18
    i32 5, label %21
    i32 6, label %24
    i32 7, label %26
  ], !dbg !4763

9:                                                ; preds = %3
  %10 = bitcast i8* %1 to i32*, !dbg !4764
  store i32 %2, i32* %10, align 4, !dbg !4766
  br label %28, !dbg !4767

11:                                               ; preds = %3
  %12 = trunc i32 %2 to i8, !dbg !4768
  store i8 %12, i8* %1, align 1, !dbg !4769
  br label %28, !dbg !4770

13:                                               ; preds = %3
  %14 = trunc i32 %2 to i16, !dbg !4771
  %15 = bitcast i8* %1 to i16*, !dbg !4772
  store i16 %14, i16* %15, align 2, !dbg !4773
  br label %28, !dbg !4774

16:                                               ; preds = %3
  %17 = bitcast i8* %1 to i32*, !dbg !4775
  store i32 %2, i32* %17, align 4, !dbg !4776
  br label %28, !dbg !4777

18:                                               ; preds = %3
  %19 = sext i32 %2 to i64, !dbg !4778
  %20 = bitcast i8* %1 to i64*, !dbg !4779
  store i64 %19, i64* %20, align 8, !dbg !4780
  br label %28, !dbg !4781

21:                                               ; preds = %3
  %22 = sext i32 %2 to i64, !dbg !4782
  %23 = bitcast i8* %1 to i64*, !dbg !4783
  store i64 %22, i64* %23, align 8, !dbg !4784
  br label %28, !dbg !4785

24:                                               ; preds = %3
  %25 = bitcast i8* %1 to i32*, !dbg !4786
  store i32 %2, i32* %25, align 4, !dbg !4787
  br label %28, !dbg !4788

26:                                               ; preds = %3
  %27 = bitcast i8* %1 to i32*, !dbg !4789
  store i32 %2, i32* %27, align 4, !dbg !4790
  br label %28, !dbg !4791

28:                                               ; preds = %3, %26, %24, %21, %18, %16, %13, %11, %9
  ret void, !dbg !4792
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isupper(i32 noundef %0) unnamed_addr #2 !dbg !4793 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4796, metadata !DIExpression()), !dbg !4797
  %2 = add i32 %0, -65, !dbg !4798
  %3 = icmp ult i32 %2, 26, !dbg !4799
  %4 = zext i1 %3 to i32, !dbg !4799
  ret i32 %4, !dbg !4800
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @conversion_radix(i8 noundef zeroext %0) unnamed_addr #2 !dbg !4801 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !4805, metadata !DIExpression()), !dbg !4806
  switch i8 %0, label %4 [
    i8 88, label %3
    i8 120, label %3
    i8 112, label %3
    i8 111, label %2
  ], !dbg !4807

2:                                                ; preds = %1
  br label %4, !dbg !4808

3:                                                ; preds = %1, %1, %1
  br label %4, !dbg !4810

4:                                                ; preds = %1, %3, %2
  %5 = phi i32 [ 8, %2 ], [ 16, %3 ], [ 10, %1 ], !dbg !4811
  ret i32 %5, !dbg !4812
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_flags(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #13 !dbg !4813 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4815, metadata !DIExpression()), !dbg !4818
  call void @llvm.dbg.value(metadata i8* %1, metadata !4816, metadata !DIExpression()), !dbg !4818
  call void @llvm.dbg.value(metadata i8 1, metadata !4817, metadata !DIExpression()), !dbg !4818
  %3 = bitcast %struct.conversion* %0 to i24*
  br label %4, !dbg !4819

4:                                                ; preds = %11, %2
  %5 = phi i8* [ %1, %2 ], [ %15, %11 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !4817, metadata !DIExpression()), !dbg !4818
  call void @llvm.dbg.value(metadata i8* %5, metadata !4816, metadata !DIExpression()), !dbg !4818
  %6 = load i8, i8* %5, align 1, !dbg !4820
  switch i8 %6, label %16 [
    i8 45, label %11
    i8 43, label %7
    i8 32, label %8
    i8 35, label %9
    i8 48, label %10
  ], !dbg !4822

7:                                                ; preds = %4
  br label %11, !dbg !4823

8:                                                ; preds = %4
  br label %11, !dbg !4825

9:                                                ; preds = %4
  br label %11, !dbg !4826

10:                                               ; preds = %4
  br label %11, !dbg !4827

11:                                               ; preds = %4, %7, %8, %9, %10
  %12 = phi i24 [ 8, %7 ], [ 16, %8 ], [ 32, %9 ], [ 64, %10 ], [ 4, %4 ]
  %13 = load i24, i24* %3, align 4, !dbg !4828
  %14 = or i24 %13, %12, !dbg !4828
  store i24 %14, i24* %3, align 4, !dbg !4828
  call void @llvm.dbg.value(metadata i8 poison, metadata !4817, metadata !DIExpression()), !dbg !4818
  %15 = getelementptr inbounds i8, i8* %5, i32 1
  call void @llvm.dbg.value(metadata i8* %15, metadata !4816, metadata !DIExpression()), !dbg !4818
  br label %4

16:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i8 poison, metadata !4817, metadata !DIExpression()), !dbg !4818
  call void @llvm.dbg.value(metadata i8* %15, metadata !4816, metadata !DIExpression()), !dbg !4818
  %17 = load i24, i24* %3, align 4, !dbg !4829
  %18 = and i24 %17, 68, !dbg !4831
  %19 = icmp eq i24 %18, 68, !dbg !4831
  br i1 %19, label %20, label %22, !dbg !4831

20:                                               ; preds = %16
  %21 = and i24 %17, -65, !dbg !4832
  store i24 %21, i24* %3, align 4, !dbg !4832
  br label %22, !dbg !4834

22:                                               ; preds = %20, %16
  ret i8* %5, !dbg !4835
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_width(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #13 !dbg !4836 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4838, metadata !DIExpression()), !dbg !4842
  call void @llvm.dbg.value(metadata i8* %1, metadata !4839, metadata !DIExpression()), !dbg !4842
  store i8* %1, i8** %3, align 4
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !4843
  %5 = load i24, i24* %4, align 4, !dbg !4844
  %6 = or i24 %5, 128, !dbg !4844
  store i24 %6, i24* %4, align 4, !dbg !4844
  call void @llvm.dbg.value(metadata i8* %1, metadata !4839, metadata !DIExpression()), !dbg !4842
  %7 = load i8, i8* %1, align 1, !dbg !4845
  %8 = icmp eq i8 %7, 42, !dbg !4847
  br i1 %8, label %9, label %12, !dbg !4848

9:                                                ; preds = %2
  %10 = or i24 %5, 384, !dbg !4849
  store i24 %10, i24* %4, align 4, !dbg !4849
  call void @llvm.dbg.value(metadata i8* %1, metadata !4839, metadata !DIExpression()), !dbg !4842
  %11 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4851
  call void @llvm.dbg.value(metadata i8* %11, metadata !4839, metadata !DIExpression()), !dbg !4842
  store i8* %11, i8** %3, align 4, !dbg !4851
  br label %29, !dbg !4852

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !4840, metadata !DIExpression()), !dbg !4842
  call void @llvm.dbg.value(metadata i8** %3, metadata !4839, metadata !DIExpression(DW_OP_deref)), !dbg !4842
  %13 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #21, !dbg !4853
  call void @llvm.dbg.value(metadata i32 %13, metadata !4841, metadata !DIExpression()), !dbg !4842
  %14 = load i8*, i8** %3, align 4, !dbg !4854
  call void @llvm.dbg.value(metadata i8* %14, metadata !4839, metadata !DIExpression()), !dbg !4842
  %15 = icmp eq i8* %14, %1, !dbg !4856
  br i1 %15, label %29, label %16, !dbg !4857

16:                                               ; preds = %12
  %17 = load i24, i24* %4, align 4, !dbg !4858
  %18 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !4860
  store i32 %13, i32* %18, align 4, !dbg !4861
  %19 = lshr i32 %13, 31, !dbg !4862
  %20 = lshr i24 %17, 1, !dbg !4863
  %21 = and i24 %20, 1, !dbg !4863
  %22 = zext i24 %21 to i32, !dbg !4863
  %23 = or i32 %19, %22, !dbg !4863
  %24 = trunc i32 %23 to i24, !dbg !4863
  %25 = shl nuw nsw i24 %24, 1, !dbg !4863
  %26 = and i24 %17, -131, !dbg !4863
  %27 = or i24 %26, 128, !dbg !4863
  %28 = or i24 %25, %27, !dbg !4863
  store i24 %28, i24* %4, align 4, !dbg !4863
  br label %29, !dbg !4864

29:                                               ; preds = %12, %16, %9
  %30 = phi i8* [ %11, %9 ], [ %14, %16 ], [ %1, %12 ], !dbg !4842
  ret i8* %30, !dbg !4865
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_prec(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #13 !dbg !4866 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4868, metadata !DIExpression()), !dbg !4871
  call void @llvm.dbg.value(metadata i8* %1, metadata !4869, metadata !DIExpression()), !dbg !4871
  %4 = load i8, i8* %1, align 1, !dbg !4872
  %5 = icmp eq i8 %4, 46, !dbg !4873
  %6 = bitcast %struct.conversion* %0 to i24*, !dbg !4874
  %7 = load i24, i24* %6, align 4, !dbg !4875
  %8 = select i1 %5, i24 512, i24 0, !dbg !4875
  %9 = and i24 %7, -513, !dbg !4875
  %10 = or i24 %9, %8, !dbg !4875
  store i24 %10, i24* %6, align 4, !dbg !4875
  br i1 %5, label %11, label %32, !dbg !4876

11:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !4869, metadata !DIExpression()), !dbg !4871
  %12 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4877
  call void @llvm.dbg.value(metadata i8* %12, metadata !4869, metadata !DIExpression()), !dbg !4871
  store i8* %12, i8** %3, align 4, !dbg !4877
  %13 = load i8, i8* %12, align 1, !dbg !4878
  %14 = icmp eq i8 %13, 42, !dbg !4880
  br i1 %14, label %15, label %18, !dbg !4881

15:                                               ; preds = %11
  %16 = or i24 %10, 1024, !dbg !4882
  store i24 %16, i24* %6, align 4, !dbg !4882
  call void @llvm.dbg.value(metadata i8* %12, metadata !4869, metadata !DIExpression()), !dbg !4871
  %17 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !4884
  call void @llvm.dbg.value(metadata i8* %17, metadata !4869, metadata !DIExpression()), !dbg !4871
  store i8* %17, i8** %3, align 4, !dbg !4884
  br label %32, !dbg !4885

18:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8** %3, metadata !4869, metadata !DIExpression(DW_OP_deref)), !dbg !4871
  %19 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #21, !dbg !4886
  call void @llvm.dbg.value(metadata i32 %19, metadata !4870, metadata !DIExpression()), !dbg !4871
  %20 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !4887
  store i32 %19, i32* %20, align 4, !dbg !4888
  %21 = lshr i32 %19, 31, !dbg !4889
  %22 = load i24, i24* %6, align 4, !dbg !4890
  %23 = lshr i24 %22, 1, !dbg !4890
  %24 = and i24 %23, 1, !dbg !4890
  %25 = zext i24 %24 to i32, !dbg !4890
  %26 = or i32 %21, %25, !dbg !4890
  %27 = trunc i32 %26 to i24, !dbg !4890
  %28 = shl nuw nsw i24 %27, 1, !dbg !4890
  %29 = and i24 %22, -3, !dbg !4890
  %30 = or i24 %28, %29, !dbg !4890
  store i24 %30, i24* %6, align 4, !dbg !4890
  %31 = load i8*, i8** %3, align 4, !dbg !4891
  call void @llvm.dbg.value(metadata i8* %31, metadata !4869, metadata !DIExpression()), !dbg !4871
  br label %32

32:                                               ; preds = %2, %18, %15
  %33 = phi i8* [ %17, %15 ], [ %31, %18 ], [ %1, %2 ], !dbg !4871
  ret i8* %33, !dbg !4892
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i8* @extract_length(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #9 !dbg !4893 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4895, metadata !DIExpression()), !dbg !4897
  call void @llvm.dbg.value(metadata i8* %1, metadata !4896, metadata !DIExpression()), !dbg !4897
  %3 = load i8, i8* %1, align 1, !dbg !4898
  switch i8 %3, label %52 [
    i8 104, label %4
    i8 108, label %16
    i8 106, label %28
    i8 122, label %34
    i8 116, label %40
    i8 76, label %46
  ], !dbg !4899

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4900
  call void @llvm.dbg.value(metadata i8* %5, metadata !4896, metadata !DIExpression()), !dbg !4897
  %6 = load i8, i8* %5, align 1, !dbg !4903
  %7 = icmp eq i8 %6, 104, !dbg !4904
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !4905
  %9 = load i24, i24* %8, align 4, !dbg !4905
  %10 = and i24 %9, -30721, !dbg !4905
  br i1 %7, label %11, label %14, !dbg !4906

11:                                               ; preds = %4
  %12 = or i24 %10, 2048, !dbg !4907
  store i24 %12, i24* %8, align 4, !dbg !4907
  %13 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !4909
  call void @llvm.dbg.value(metadata i8* %13, metadata !4896, metadata !DIExpression()), !dbg !4897
  br label %56, !dbg !4910

14:                                               ; preds = %4
  %15 = or i24 %10, 4096, !dbg !4911
  store i24 %15, i24* %8, align 4, !dbg !4911
  br label %56

16:                                               ; preds = %2
  %17 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4913
  call void @llvm.dbg.value(metadata i8* %17, metadata !4896, metadata !DIExpression()), !dbg !4897
  %18 = load i8, i8* %17, align 1, !dbg !4915
  %19 = icmp eq i8 %18, 108, !dbg !4916
  %20 = bitcast %struct.conversion* %0 to i24*, !dbg !4917
  %21 = load i24, i24* %20, align 4, !dbg !4917
  %22 = and i24 %21, -30721, !dbg !4917
  br i1 %19, label %23, label %26, !dbg !4918

23:                                               ; preds = %16
  %24 = or i24 %22, 8192, !dbg !4919
  store i24 %24, i24* %20, align 4, !dbg !4919
  %25 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !4921
  call void @llvm.dbg.value(metadata i8* %25, metadata !4896, metadata !DIExpression()), !dbg !4897
  br label %56, !dbg !4922

26:                                               ; preds = %16
  %27 = or i24 %22, 6144, !dbg !4923
  store i24 %27, i24* %20, align 4, !dbg !4923
  br label %56

28:                                               ; preds = %2
  %29 = bitcast %struct.conversion* %0 to i24*, !dbg !4925
  %30 = load i24, i24* %29, align 4, !dbg !4926
  %31 = and i24 %30, -30721, !dbg !4926
  %32 = or i24 %31, 10240, !dbg !4926
  store i24 %32, i24* %29, align 4, !dbg !4926
  %33 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4927
  call void @llvm.dbg.value(metadata i8* %33, metadata !4896, metadata !DIExpression()), !dbg !4897
  br label %56, !dbg !4928

34:                                               ; preds = %2
  %35 = bitcast %struct.conversion* %0 to i24*, !dbg !4929
  %36 = load i24, i24* %35, align 4, !dbg !4930
  %37 = and i24 %36, -30721, !dbg !4930
  %38 = or i24 %37, 12288, !dbg !4930
  store i24 %38, i24* %35, align 4, !dbg !4930
  %39 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4931
  call void @llvm.dbg.value(metadata i8* %39, metadata !4896, metadata !DIExpression()), !dbg !4897
  br label %56, !dbg !4932

40:                                               ; preds = %2
  %41 = bitcast %struct.conversion* %0 to i24*, !dbg !4933
  %42 = load i24, i24* %41, align 4, !dbg !4934
  %43 = and i24 %42, -30721, !dbg !4934
  %44 = or i24 %43, 14336, !dbg !4934
  store i24 %44, i24* %41, align 4, !dbg !4934
  %45 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4935
  call void @llvm.dbg.value(metadata i8* %45, metadata !4896, metadata !DIExpression()), !dbg !4897
  br label %56, !dbg !4936

46:                                               ; preds = %2
  %47 = bitcast %struct.conversion* %0 to i24*, !dbg !4937
  %48 = load i24, i24* %47, align 4, !dbg !4938
  %49 = and i24 %48, -30723, !dbg !4938
  %50 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4939
  call void @llvm.dbg.value(metadata i8* %50, metadata !4896, metadata !DIExpression()), !dbg !4897
  %51 = or i24 %49, 16386, !dbg !4940
  store i24 %51, i24* %47, align 4, !dbg !4940
  br label %56, !dbg !4941

52:                                               ; preds = %2
  %53 = bitcast %struct.conversion* %0 to i24*, !dbg !4942
  %54 = load i24, i24* %53, align 4, !dbg !4943
  %55 = and i24 %54, -30721, !dbg !4943
  store i24 %55, i24* %53, align 4, !dbg !4943
  br label %56, !dbg !4944

56:                                               ; preds = %23, %26, %11, %14, %52, %46, %40, %34, %28
  %57 = phi i8* [ %1, %52 ], [ %50, %46 ], [ %45, %40 ], [ %39, %34 ], [ %33, %28 ], [ %25, %23 ], [ %17, %26 ], [ %13, %11 ], [ %5, %14 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !4896, metadata !DIExpression()), !dbg !4897
  ret i8* %57, !dbg !4945
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc nonnull i8* @extract_specifier(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #9 !dbg !4946 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4948, metadata !DIExpression()), !dbg !4953
  call void @llvm.dbg.value(metadata i8* %1, metadata !4949, metadata !DIExpression()), !dbg !4953
  call void @llvm.dbg.value(metadata i8 0, metadata !4950, metadata !DIExpression()), !dbg !4953
  call void @llvm.dbg.value(metadata i8* %1, metadata !4949, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4953
  %3 = load i8, i8* %1, align 1, !dbg !4954
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !4955
  store i8 %3, i8* %4, align 1, !dbg !4956
  switch i8 %3, label %39 [
    i8 100, label %6
    i8 105, label %6
    i8 111, label %5
    i8 99, label %5
    i8 117, label %5
    i8 120, label %5
    i8 88, label %5
    i8 97, label %20
    i8 65, label %20
    i8 101, label %20
    i8 69, label %20
    i8 102, label %20
    i8 70, label %20
    i8 103, label %20
    i8 71, label %20
    i8 110, label %25
    i8 115, label %32
    i8 112, label %32
  ], !dbg !4957

5:                                                ; preds = %2, %2, %2, %2, %2
  br label %6, !dbg !4958

6:                                                ; preds = %2, %2, %5
  %7 = phi i24 [ 131072, %5 ], [ 65536, %2 ], [ 65536, %2 ]
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !4959
  %9 = load i24, i24* %8, align 4, !dbg !4959
  %10 = and i24 %9, -458753, !dbg !4959
  %11 = or i24 %10, %7, !dbg !4959
  call void @llvm.dbg.label(metadata !4951), !dbg !4960
  %12 = and i24 %9, 30720, !dbg !4961
  %13 = icmp eq i24 %12, 16384, !dbg !4961
  %14 = zext i1 %13 to i24, !dbg !4963
  %15 = or i24 %11, %14, !dbg !4963
  %16 = icmp eq i8 %3, 99, !dbg !4964
  br i1 %16, label %17, label %43, !dbg !4966

17:                                               ; preds = %6
  %18 = and i24 %9, 30720, !dbg !4967
  %19 = icmp ne i24 %18, 0, !dbg !4967
  call void @llvm.dbg.value(metadata i1 %19, metadata !4950, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4953
  br label %43, !dbg !4969

20:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2
  %21 = bitcast %struct.conversion* %0 to i24*, !dbg !4970
  %22 = load i24, i24* %21, align 4, !dbg !4971
  %23 = and i24 %22, -458753, !dbg !4971
  %24 = or i24 %23, 262144, !dbg !4971
  call void @llvm.dbg.value(metadata i8 1, metadata !4950, metadata !DIExpression()), !dbg !4953
  br label %43, !dbg !4972

25:                                               ; preds = %2
  %26 = bitcast %struct.conversion* %0 to i24*, !dbg !4975
  %27 = load i24, i24* %26, align 4, !dbg !4976
  %28 = and i24 %27, -458753, !dbg !4976
  %29 = or i24 %28, 196608, !dbg !4976
  %30 = and i24 %27, 30720, !dbg !4977
  %31 = icmp eq i24 %30, 16384, !dbg !4977
  br label %43, !dbg !4979

32:                                               ; preds = %2, %2
  %33 = bitcast %struct.conversion* %0 to i24*, !dbg !4980
  %34 = load i24, i24* %33, align 4, !dbg !4981
  %35 = and i24 %34, -458753, !dbg !4981
  %36 = or i24 %35, 196608, !dbg !4981
  %37 = and i24 %34, 30720, !dbg !4982
  %38 = icmp ne i24 %37, 0, !dbg !4982
  br label %43, !dbg !4984

39:                                               ; preds = %2
  %40 = bitcast %struct.conversion* %0 to i24*, !dbg !4985
  %41 = load i24, i24* %40, align 4, !dbg !4986
  %42 = or i24 %41, 1, !dbg !4986
  br label %43, !dbg !4987

43:                                               ; preds = %32, %25, %17, %6, %39, %20
  %44 = phi i24 [ %36, %32 ], [ %29, %25 ], [ %15, %17 ], [ %15, %6 ], [ %42, %39 ], [ %24, %20 ], !dbg !4988
  %45 = phi i1 [ %38, %32 ], [ %31, %25 ], [ %19, %17 ], [ false, %6 ], [ false, %39 ], [ true, %20 ]
  %46 = bitcast %struct.conversion* %0 to i24*, !dbg !4989
  %47 = zext i1 %45 to i32
  %48 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4990
  call void @llvm.dbg.value(metadata i8* %48, metadata !4949, metadata !DIExpression()), !dbg !4953
  call void @llvm.dbg.value(metadata i8 poison, metadata !4950, metadata !DIExpression()), !dbg !4953
  %49 = lshr i24 %44, 1, !dbg !4988
  %50 = and i24 %49, 1, !dbg !4988
  %51 = zext i24 %50 to i32, !dbg !4988
  %52 = or i32 %51, %47, !dbg !4988
  %53 = trunc i32 %52 to i24, !dbg !4988
  %54 = shl nuw nsw i24 %53, 1, !dbg !4988
  %55 = and i24 %44, -3, !dbg !4988
  %56 = or i24 %54, %55, !dbg !4988
  store i24 %56, i24* %46, align 4, !dbg !4988
  ret i8* %48, !dbg !4991
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @extract_decimal(i8** nocapture noundef %0) unnamed_addr #13 !dbg !4992 {
  call void @llvm.dbg.value(metadata i8** %0, metadata !4996, metadata !DIExpression()), !dbg !4999
  %2 = load i8*, i8** %0, align 4, !dbg !5000
  call void @llvm.dbg.value(metadata i8* %2, metadata !4997, metadata !DIExpression()), !dbg !4999
  call void @llvm.dbg.value(metadata i32 0, metadata !4998, metadata !DIExpression()), !dbg !4999
  %3 = load i8, i8* %2, align 1, !dbg !5001
  %4 = zext i8 %3 to i32, !dbg !5002
  %5 = tail call fastcc i32 @isdigit(i32 noundef %4) #21, !dbg !5003
  %6 = icmp eq i32 %5, 0, !dbg !5004
  br i1 %6, label %19, label %7, !dbg !5004

7:                                                ; preds = %1, %7
  %8 = phi i32 [ %16, %7 ], [ %4, %1 ]
  %9 = phi i32 [ %14, %7 ], [ 0, %1 ]
  %10 = phi i8* [ %12, %7 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !4998, metadata !DIExpression()), !dbg !4999
  call void @llvm.dbg.value(metadata i8* %10, metadata !4997, metadata !DIExpression()), !dbg !4999
  %11 = mul i32 %9, 10, !dbg !5005
  %12 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !5007
  call void @llvm.dbg.value(metadata i8* %12, metadata !4997, metadata !DIExpression()), !dbg !4999
  %13 = add i32 %11, -48, !dbg !5008
  %14 = add i32 %13, %8, !dbg !5009
  call void @llvm.dbg.value(metadata i32 %14, metadata !4998, metadata !DIExpression()), !dbg !4999
  %15 = load i8, i8* %12, align 1, !dbg !5001
  %16 = zext i8 %15 to i32, !dbg !5002
  %17 = tail call fastcc i32 @isdigit(i32 noundef %16) #21, !dbg !5003
  %18 = icmp eq i32 %17, 0, !dbg !5004
  br i1 %18, label %19, label %7, !dbg !5004, !llvm.loop !5010

19:                                               ; preds = %7, %1
  %20 = phi i8* [ %2, %1 ], [ %12, %7 ], !dbg !4999
  %21 = phi i32 [ 0, %1 ], [ %14, %7 ], !dbg !4999
  store i8* %20, i8** %0, align 4, !dbg !5012
  ret i32 %21, !dbg !5013
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit(i32 noundef %0) unnamed_addr #2 !dbg !5014 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5016, metadata !DIExpression()), !dbg !5017
  %2 = add i32 %0, -48, !dbg !5018
  %3 = icmp ult i32 %2, 10, !dbg !5019
  %4 = zext i1 %3 to i32, !dbg !5019
  ret i32 %4, !dbg !5020
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @assert_post_action(i8* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !5021 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5026, metadata !DIExpression()), !dbg !5028
  call void @llvm.dbg.value(metadata i32 %1, metadata !5027, metadata !DIExpression()), !dbg !5028
  tail call void asm sideeffect "eors.n r0, r0\0A\09msr BASEPRI, r0\0A\09mov r0, $0\0A\09svc $1\0A\09", "i,i,~{memory}"(i32 4, i32 2) #20, !dbg !5029, !srcloc !5031
  ret void, !dbg !5032
}

; Function Attrs: noinline nounwind optsize
define dso_local void @assert_print(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !5033 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !5035, metadata !DIExpression()), !dbg !5043
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !5044
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #20, !dbg !5044
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !5036, metadata !DIExpression()), !dbg !5045
  call void @llvm.va_start(i8* nonnull %3), !dbg !5046
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !5047
  %5 = load i32, i32* %4, align 4, !dbg !5047
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !5047
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #22, !dbg !5047
  call void @llvm.va_end(i8* nonnull %3), !dbg !5048
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #20, !dbg !5049
  ret void, !dbg !5049
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_ConfigAbsSyms() local_unnamed_addr #1 !dbg !5050 {
  tail call void asm sideeffect ".globl\09CONFIG_GPIO\0A\09.equ\09CONFIG_GPIO,1\0A\09.type\09CONFIG_GPIO,%object", ""() #20, !dbg !5052, !srcloc !5053
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_INIT_PRIORITY\0A\09.equ\09CONFIG_GPIO_INIT_PRIORITY,40\0A\09.type\09CONFIG_GPIO_INIT_PRIORITY,%object", ""() #20, !dbg !5054, !srcloc !5055
  tail call void asm sideeffect ".globl\09CONFIG_UART_INTERRUPT_DRIVEN\0A\09.equ\09CONFIG_UART_INTERRUPT_DRIVEN,1\0A\09.type\09CONFIG_UART_INTERRUPT_DRIVEN,%object", ""() #20, !dbg !5056, !srcloc !5057
  tail call void asm sideeffect ".globl\09CONFIG_BOARD\0A\09.equ\09CONFIG_BOARD,1\0A\09.type\09CONFIG_BOARD,%object", ""() #20, !dbg !5058, !srcloc !5059
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_SIZE\0A\09.equ\09CONFIG_FLASH_SIZE,32\0A\09.type\09CONFIG_FLASH_SIZE,%object", ""() #20, !dbg !5060, !srcloc !5061
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_BASE_ADDRESS\0A\09.equ\09CONFIG_FLASH_BASE_ADDRESS,0x1fff8000\0A\09.type\09CONFIG_FLASH_BASE_ADDRESS,%object", ""() #20, !dbg !5062, !srcloc !5063
  tail call void asm sideeffect ".globl\09CONFIG_SOC\0A\09.equ\09CONFIG_SOC,1\0A\09.type\09CONFIG_SOC,%object", ""() #20, !dbg !5064, !srcloc !5065
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES\0A\09.equ\09CONFIG_SOC_SERIES,1\0A\09.type\09CONFIG_SOC_SERIES,%object", ""() #20, !dbg !5066, !srcloc !5067
  tail call void asm sideeffect ".globl\09CONFIG_NUM_IRQS\0A\09.equ\09CONFIG_NUM_IRQS,127\0A\09.type\09CONFIG_NUM_IRQS,%object", ""() #20, !dbg !5068, !srcloc !5069
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,200000000\0A\09.type\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,%object", ""() #20, !dbg !5070, !srcloc !5071
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY\0A\09.equ\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,30\0A\09.type\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,%object", ""() #20, !dbg !5072, !srcloc !5073
  tail call void asm sideeffect ".globl\09CONFIG_ICACHE_LINE_SIZE\0A\09.equ\09CONFIG_ICACHE_LINE_SIZE,32\0A\09.type\09CONFIG_ICACHE_LINE_SIZE,%object", ""() #20, !dbg !5074, !srcloc !5075
  tail call void asm sideeffect ".globl\09CONFIG_DCACHE_LINE_SIZE\0A\09.equ\09CONFIG_DCACHE_LINE_SIZE,32\0A\09.type\09CONFIG_DCACHE_LINE_SIZE,%object", ""() #20, !dbg !5076, !srcloc !5077
  tail call void asm sideeffect ".globl\09CONFIG_SOC_PART_NUMBER\0A\09.equ\09CONFIG_SOC_PART_NUMBER,1\0A\09.type\09CONFIG_SOC_PART_NUMBER,%object", ""() #20, !dbg !5078, !srcloc !5079
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL\0A\09.equ\09CONFIG_PINCTRL,1\0A\09.type\09CONFIG_PINCTRL,%object", ""() #20, !dbg !5080, !srcloc !5081
  tail call void asm sideeffect ".globl\09CONFIG_HEAP_MEM_POOL_SIZE\0A\09.equ\09CONFIG_HEAP_MEM_POOL_SIZE,0\0A\09.type\09CONFIG_HEAP_MEM_POOL_SIZE,%object", ""() #20, !dbg !5082, !srcloc !5083
  tail call void asm sideeffect ".globl\09CONFIG_ROM_START_OFFSET\0A\09.equ\09CONFIG_ROM_START_OFFSET,0x0\0A\09.type\09CONFIG_ROM_START_OFFSET,%object", ""() #20, !dbg !5084, !srcloc !5085
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL\0A\09.equ\09CONFIG_CLOCK_CONTROL,1\0A\09.type\09CONFIG_CLOCK_CONTROL,%object", ""() #20, !dbg !5086, !srcloc !5087
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK,%object", ""() #20, !dbg !5088, !srcloc !5089
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DOMAIN_NAME\0A\09.equ\09CONFIG_LOG_DOMAIN_NAME,1\0A\09.type\09CONFIG_LOG_DOMAIN_NAME,%object", ""() #20, !dbg !5090, !srcloc !5091
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_TICKS_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,10000\0A\09.type\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,%object", ""() #20, !dbg !5092, !srcloc !5093
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_INIT_PRIORITY\0A\09.equ\09CONFIG_SERIAL_INIT_PRIORITY,55\0A\09.type\09CONFIG_SERIAL_INIT_PRIORITY,%object", ""() #20, !dbg !5094, !srcloc !5095
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_IMX\0A\09.equ\09CONFIG_PINCTRL_IMX,1\0A\09.type\09CONFIG_PINCTRL_IMX,%object", ""() #20, !dbg !5096, !srcloc !5097
  tail call void asm sideeffect ".globl\09CONFIG_TEST_EXTRA_STACK_SIZE\0A\09.equ\09CONFIG_TEST_EXTRA_STACK_SIZE,0\0A\09.type\09CONFIG_TEST_EXTRA_STACK_SIZE,%object", ""() #20, !dbg !5098, !srcloc !5099
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL\0A\09.equ\09CONFIG_SERIAL,1\0A\09.type\09CONFIG_SERIAL,%object", ""() #20, !dbg !5100, !srcloc !5101
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_STACK_SIZE\0A\09.equ\09CONFIG_MAIN_STACK_SIZE,1024\0A\09.type\09CONFIG_MAIN_STACK_SIZE,%object", ""() #20, !dbg !5102, !srcloc !5103
  tail call void asm sideeffect ".globl\09CONFIG_MP_MAX_NUM_CPUS\0A\09.equ\09CONFIG_MP_MAX_NUM_CPUS,1\0A\09.type\09CONFIG_MP_MAX_NUM_CPUS,%object", ""() #20, !dbg !5104, !srcloc !5105
  tail call void asm sideeffect ".globl\09CONFIG_HAS_DTS\0A\09.equ\09CONFIG_HAS_DTS,1\0A\09.type\09CONFIG_HAS_DTS,%object", ""() #20, !dbg !5106, !srcloc !5107
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,%object", ""() #20, !dbg !5108, !srcloc !5109
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_CORTEX_M4_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_CORTEX_M4_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_CORTEX_M4_ENABLED,%object", ""() #20, !dbg !5110, !srcloc !5111
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,%object", ""() #20, !dbg !5112, !srcloc !5113
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,%object", ""() #20, !dbg !5114, !srcloc !5115
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_NXP_IMX_DTCM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_NXP_IMX_DTCM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_NXP_IMX_DTCM_ENABLED,%object", ""() #20, !dbg !5116, !srcloc !5117
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_NXP_IMX_GPIO_ENABLED\0A\09.equ\09CONFIG_DT_HAS_NXP_IMX_GPIO_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_NXP_IMX_GPIO_ENABLED,%object", ""() #20, !dbg !5118, !srcloc !5119
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_NXP_IMX_IOMUXC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_NXP_IMX_IOMUXC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_NXP_IMX_IOMUXC_ENABLED,%object", ""() #20, !dbg !5120, !srcloc !5121
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_NXP_IMX_ITCM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_NXP_IMX_ITCM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_NXP_IMX_ITCM_ENABLED,%object", ""() #20, !dbg !5122, !srcloc !5123
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_NXP_IMX_MU_ENABLED\0A\09.equ\09CONFIG_DT_HAS_NXP_IMX_MU_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_NXP_IMX_MU_ENABLED,%object", ""() #20, !dbg !5124, !srcloc !5125
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_NXP_IMX_UART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_NXP_IMX_UART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_NXP_IMX_UART_ENABLED,%object", ""() #20, !dbg !5126, !srcloc !5127
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_NXP_IMX7D_PINCTRL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_NXP_IMX7D_PINCTRL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_NXP_IMX7D_PINCTRL_ENABLED,%object", ""() #20, !dbg !5128, !srcloc !5129
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CANOPENNODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,%object", ""() #20, !dbg !5130, !srcloc !5131
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CHRE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CHRE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CHRE_MODULE,%object", ""() #20, !dbg !5132, !srcloc !5133
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_FATFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_FATFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_FATFS_MODULE,%object", ""() #20, !dbg !5134, !srcloc !5135
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,%object", ""() #20, !dbg !5136, !srcloc !5137
  tail call void asm sideeffect ".globl\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF,%object", ""() #20, !dbg !5138, !srcloc !5139
  tail call void asm sideeffect ".globl\09CONFIG_ARM_ETHOS_U_LOG_LEVEL\0A\09.equ\09CONFIG_ARM_ETHOS_U_LOG_LEVEL,3\0A\09.type\09CONFIG_ARM_ETHOS_U_LOG_LEVEL,%object", ""() #20, !dbg !5140, !srcloc !5141
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,%object", ""() #20, !dbg !5142, !srcloc !5143
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,%object", ""() #20, !dbg !5144, !srcloc !5145
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,%object", ""() #20, !dbg !5146, !srcloc !5147
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,%object", ""() #20, !dbg !5148, !srcloc !5149
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NXP_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NXP_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NXP_MODULE,%object", ""() #20, !dbg !5150, !srcloc !5151
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,%object", ""() #20, !dbg !5152, !srcloc !5153
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_TELINK_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,%object", ""() #20, !dbg !5154, !srcloc !5155
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LIBLC3_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LIBLC3_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LIBLC3_MODULE,%object", ""() #20, !dbg !5156, !srcloc !5157
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LITTLEFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LITTLEFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LITTLEFS_MODULE,%object", ""() #20, !dbg !5158, !srcloc !5159
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,%object", ""() #20, !dbg !5160, !srcloc !5161
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LVGL_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LVGL_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LVGL_MODULE,%object", ""() #20, !dbg !5162, !srcloc !5163
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LZ4_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LZ4_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LZ4_MODULE,%object", ""() #20, !dbg !5164, !srcloc !5165
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_MBEDTLS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_MBEDTLS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_MBEDTLS_MODULE,%object", ""() #20, !dbg !5166, !srcloc !5167
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_NANOPB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_NANOPB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_NANOPB_MODULE,%object", ""() #20, !dbg !5168, !srcloc !5169
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_OPENTHREAD_MODULE\0A\09.equ\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,%object", ""() #20, !dbg !5170, !srcloc !5171
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_PICOLIBC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_PICOLIBC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_PICOLIBC_MODULE,%object", ""() #20, !dbg !5172, !srcloc !5173
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_SOF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_SOF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_SOF_MODULE,%object", ""() #20, !dbg !5174, !srcloc !5175
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,%object", ""() #20, !dbg !5176, !srcloc !5177
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRACERECORDER_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,%object", ""() #20, !dbg !5178, !srcloc !5179
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,%object", ""() #20, !dbg !5180, !srcloc !5181
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,%object", ""() #20, !dbg !5182, !srcloc !5183
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,%object", ""() #20, !dbg !5184, !srcloc !5185
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZCBOR_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZCBOR_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZCBOR_MODULE,%object", ""() #20, !dbg !5186, !srcloc !5187
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZSCILIB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZSCILIB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZSCILIB_MODULE,%object", ""() #20, !dbg !5188, !srcloc !5189
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE\0A\09.equ\09CONFIG_HAS_CMSIS_CORE,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE,%object", ""() #20, !dbg !5190, !srcloc !5191
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE_M\0A\09.equ\09CONFIG_HAS_CMSIS_CORE_M,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE_M,%object", ""() #20, !dbg !5192, !srcloc !5193
  tail call void asm sideeffect ".globl\09CONFIG_HAS_IMX_HAL\0A\09.equ\09CONFIG_HAS_IMX_HAL,1\0A\09.type\09CONFIG_HAS_IMX_HAL,%object", ""() #20, !dbg !5194, !srcloc !5195
  tail call void asm sideeffect ".globl\09CONFIG_HAS_IMX_GPIO\0A\09.equ\09CONFIG_HAS_IMX_GPIO,1\0A\09.type\09CONFIG_HAS_IMX_GPIO,%object", ""() #20, !dbg !5196, !srcloc !5197
  tail call void asm sideeffect ".globl\09CONFIG_HAS_IMX_I2C\0A\09.equ\09CONFIG_HAS_IMX_I2C,1\0A\09.type\09CONFIG_HAS_IMX_I2C,%object", ""() #20, !dbg !5198, !srcloc !5199
  tail call void asm sideeffect ".globl\09CONFIG_HAS_IMX_IOMUXC\0A\09.equ\09CONFIG_HAS_IMX_IOMUXC,1\0A\09.type\09CONFIG_HAS_IMX_IOMUXC,%object", ""() #20, !dbg !5200, !srcloc !5201
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_REVISION\0A\09.equ\09CONFIG_BOARD_REVISION,1\0A\09.type\09CONFIG_BOARD_REVISION,%object", ""() #20, !dbg !5202, !srcloc !5203
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_96B_MEERKAT96\0A\09.equ\09CONFIG_BOARD_96B_MEERKAT96,1\0A\09.type\09CONFIG_BOARD_96B_MEERKAT96,%object", ""() #20, !dbg !5204, !srcloc !5205
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES_IMX7_M4\0A\09.equ\09CONFIG_SOC_SERIES_IMX7_M4,1\0A\09.type\09CONFIG_SOC_SERIES_IMX7_M4,%object", ""() #20, !dbg !5206, !srcloc !5207
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY\0A\09.equ\09CONFIG_SOC_FAMILY,1\0A\09.type\09CONFIG_SOC_FAMILY,%object", ""() #20, !dbg !5208, !srcloc !5209
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY_IMX\0A\09.equ\09CONFIG_SOC_FAMILY_IMX,1\0A\09.type\09CONFIG_SOC_FAMILY_IMX,%object", ""() #20, !dbg !5210, !srcloc !5211
  tail call void asm sideeffect ".globl\09CONFIG_SOC_MCIMX7_M4\0A\09.equ\09CONFIG_SOC_MCIMX7_M4,1\0A\09.type\09CONFIG_SOC_MCIMX7_M4,%object", ""() #20, !dbg !5212, !srcloc !5213
  tail call void asm sideeffect ".globl\09CONFIG_SOC_PART_NUMBER_MCIMX7D5EVM10SC\0A\09.equ\09CONFIG_SOC_PART_NUMBER_MCIMX7D5EVM10SC,1\0A\09.type\09CONFIG_SOC_PART_NUMBER_MCIMX7D5EVM10SC,%object", ""() #20, !dbg !5214, !srcloc !5215
  tail call void asm sideeffect ".globl\09CONFIG_SOC_PART_NUMBER_IMX7_M4\0A\09.equ\09CONFIG_SOC_PART_NUMBER_IMX7_M4,1\0A\09.type\09CONFIG_SOC_PART_NUMBER_IMX7_M4,%object", ""() #20, !dbg !5216, !srcloc !5217
  tail call void asm sideeffect ".globl\09CONFIG_SOC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_SOC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_SOC_LOG_LEVEL_INF,%object", ""() #20, !dbg !5218, !srcloc !5219
  tail call void asm sideeffect ".globl\09CONFIG_SOC_LOG_LEVEL\0A\09.equ\09CONFIG_SOC_LOG_LEVEL,3\0A\09.type\09CONFIG_SOC_LOG_LEVEL,%object", ""() #20, !dbg !5220, !srcloc !5221
  tail call void asm sideeffect ".globl\09CONFIG_ARCH\0A\09.equ\09CONFIG_ARCH,1\0A\09.type\09CONFIG_ARCH,%object", ""() #20, !dbg !5222, !srcloc !5223
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX\0A\09.equ\09CONFIG_CPU_CORTEX,1\0A\09.type\09CONFIG_CPU_CORTEX,%object", ""() #20, !dbg !5224, !srcloc !5225
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M\0A\09.equ\09CONFIG_CPU_CORTEX_M,1\0A\09.type\09CONFIG_CPU_CORTEX_M,%object", ""() #20, !dbg !5226, !srcloc !5227
  tail call void asm sideeffect ".globl\09CONFIG_ISA_THUMB2\0A\09.equ\09CONFIG_ISA_THUMB2,1\0A\09.type\09CONFIG_ISA_THUMB2,%object", ""() #20, !dbg !5228, !srcloc !5229
  tail call void asm sideeffect ".globl\09CONFIG_ASSEMBLER_ISA_THUMB2\0A\09.equ\09CONFIG_ASSEMBLER_ISA_THUMB2,1\0A\09.type\09CONFIG_ASSEMBLER_ISA_THUMB2,%object", ""() #20, !dbg !5230, !srcloc !5231
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_ISA_THUMB2\0A\09.equ\09CONFIG_COMPILER_ISA_THUMB2,1\0A\09.type\09CONFIG_COMPILER_ISA_THUMB2,%object", ""() #20, !dbg !5232, !srcloc !5233
  tail call void asm sideeffect ".globl\09CONFIG_STACK_ALIGN_DOUBLE_WORD\0A\09.equ\09CONFIG_STACK_ALIGN_DOUBLE_WORD,1\0A\09.type\09CONFIG_STACK_ALIGN_DOUBLE_WORD,%object", ""() #20, !dbg !5234, !srcloc !5235
  tail call void asm sideeffect ".globl\09CONFIG_FAULT_DUMP\0A\09.equ\09CONFIG_FAULT_DUMP,2\0A\09.type\09CONFIG_FAULT_DUMP,%object", ""() #20, !dbg !5236, !srcloc !5237
  tail call void asm sideeffect ".globl\09CONFIG_FP16\0A\09.equ\09CONFIG_FP16,1\0A\09.type\09CONFIG_FP16,%object", ""() #20, !dbg !5238, !srcloc !5239
  tail call void asm sideeffect ".globl\09CONFIG_FP16_IEEE\0A\09.equ\09CONFIG_FP16_IEEE,1\0A\09.type\09CONFIG_FP16_IEEE,%object", ""() #20, !dbg !5240, !srcloc !5241
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M4\0A\09.equ\09CONFIG_CPU_CORTEX_M4,1\0A\09.type\09CONFIG_CPU_CORTEX_M4,%object", ""() #20, !dbg !5242, !srcloc !5243
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,%object", ""() #20, !dbg !5244, !srcloc !5245
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_DWT\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_DWT,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_DWT,%object", ""() #20, !dbg !5246, !srcloc !5247
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,%object", ""() #20, !dbg !5248, !srcloc !5249
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_VTOR\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_VTOR,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_VTOR,%object", ""() #20, !dbg !5250, !srcloc !5251
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,%object", ""() #20, !dbg !5252, !srcloc !5253
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,%object", ""() #20, !dbg !5254, !srcloc !5255
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_FP\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_FP,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_FP,%object", ""() #20, !dbg !5256, !srcloc !5257
  tail call void asm sideeffect ".globl\09CONFIG_GEN_ISR_TABLES\0A\09.equ\09CONFIG_GEN_ISR_TABLES,1\0A\09.type\09CONFIG_GEN_ISR_TABLES,%object", ""() #20, !dbg !5258, !srcloc !5259
  tail call void asm sideeffect ".globl\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE\0A\09.equ\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,1\0A\09.type\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,%object", ""() #20, !dbg !5260, !srcloc !5261
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_VECTOR_TABLE\0A\09.equ\09CONFIG_GEN_IRQ_VECTOR_TABLE,1\0A\09.type\09CONFIG_GEN_IRQ_VECTOR_TABLE,%object", ""() #20, !dbg !5262, !srcloc !5263
  tail call void asm sideeffect ".globl\09CONFIG_ARM\0A\09.equ\09CONFIG_ARM,1\0A\09.type\09CONFIG_ARM,%object", ""() #20, !dbg !5264, !srcloc !5265
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IS_SET\0A\09.equ\09CONFIG_ARCH_IS_SET,1\0A\09.type\09CONFIG_ARCH_IS_SET,%object", ""() #20, !dbg !5266, !srcloc !5267
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ARCH_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ARCH_LOG_LEVEL_INF,%object", ""() #20, !dbg !5268, !srcloc !5269
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_LOG_LEVEL\0A\09.equ\09CONFIG_ARCH_LOG_LEVEL,3\0A\09.type\09CONFIG_ARCH_LOG_LEVEL,%object", ""() #20, !dbg !5270, !srcloc !5271
  tail call void asm sideeffect ".globl\09CONFIG_LITTLE_ENDIAN\0A\09.equ\09CONFIG_LITTLE_ENDIAN,1\0A\09.type\09CONFIG_LITTLE_ENDIAN,%object", ""() #20, !dbg !5272, !srcloc !5273
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_SIZE\0A\09.equ\09CONFIG_SRAM_SIZE,32\0A\09.type\09CONFIG_SRAM_SIZE,%object", ""() #20, !dbg !5274, !srcloc !5275
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_BASE_ADDRESS\0A\09.equ\09CONFIG_SRAM_BASE_ADDRESS,0x20000000\0A\09.type\09CONFIG_SRAM_BASE_ADDRESS,%object", ""() #20, !dbg !5276, !srcloc !5277
  tail call void asm sideeffect ".globl\09CONFIG_GEN_PRIV_STACKS\0A\09.equ\09CONFIG_GEN_PRIV_STACKS,1\0A\09.type\09CONFIG_GEN_PRIV_STACKS,%object", ""() #20, !dbg !5278, !srcloc !5279
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,%object", ""() #20, !dbg !5280, !srcloc !5281
  tail call void asm sideeffect ".globl\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS\0A\09.equ\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,1\0A\09.type\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,%object", ""() #20, !dbg !5282, !srcloc !5283
  tail call void asm sideeffect ".globl\09CONFIG_GEN_SW_ISR_TABLE\0A\09.equ\09CONFIG_GEN_SW_ISR_TABLE,1\0A\09.type\09CONFIG_GEN_SW_ISR_TABLE,%object", ""() #20, !dbg !5284, !srcloc !5285
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,%object", ""() #20, !dbg !5286, !srcloc !5287
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_START_VECTOR\0A\09.equ\09CONFIG_GEN_IRQ_START_VECTOR,0\0A\09.type\09CONFIG_GEN_IRQ_START_VECTOR,%object", ""() #20, !dbg !5288, !srcloc !5289
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,%object", ""() #20, !dbg !5290, !srcloc !5291
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS\0A\09.equ\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,1\0A\09.type\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,%object", ""() #20, !dbg !5292, !srcloc !5293
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,%object", ""() #20, !dbg !5294, !srcloc !5295
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION\0A\09.equ\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,1\0A\09.type\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,%object", ""() #20, !dbg !5296, !srcloc !5297
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_COREDUMP\0A\09.equ\09CONFIG_ARCH_SUPPORTS_COREDUMP,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_COREDUMP,%object", ""() #20, !dbg !5298, !srcloc !5299
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT\0A\09.equ\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,%object", ""() #20, !dbg !5300, !srcloc !5301
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO\0A\09.equ\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,1\0A\09.type\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,%object", ""() #20, !dbg !5302, !srcloc !5303
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,%object", ""() #20, !dbg !5304, !srcloc !5305
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM\0A\09.equ\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,1\0A\09.type\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,%object", ""() #20, !dbg !5306, !srcloc !5307
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_ABORT\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_ABORT,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_ABORT,%object", ""() #20, !dbg !5308, !srcloc !5309
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION\0A\09.equ\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,1\0A\09.type\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,%object", ""() #20, !dbg !5310, !srcloc !5311
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_FPU\0A\09.equ\09CONFIG_CPU_HAS_FPU,1\0A\09.type\09CONFIG_CPU_HAS_FPU,%object", ""() #20, !dbg !5312, !srcloc !5313
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS\0A\09.equ\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,1\0A\09.type\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,%object", ""() #20, !dbg !5314, !srcloc !5315
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_KERNEL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_KERNEL_LOG_LEVEL_INF,%object", ""() #20, !dbg !5316, !srcloc !5317
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_LOG_LEVEL\0A\09.equ\09CONFIG_KERNEL_LOG_LEVEL,3\0A\09.type\09CONFIG_KERNEL_LOG_LEVEL,%object", ""() #20, !dbg !5318, !srcloc !5319
  tail call void asm sideeffect ".globl\09CONFIG_MULTITHREADING\0A\09.equ\09CONFIG_MULTITHREADING,1\0A\09.type\09CONFIG_MULTITHREADING,%object", ""() #20, !dbg !5320, !srcloc !5321
  tail call void asm sideeffect ".globl\09CONFIG_NUM_COOP_PRIORITIES\0A\09.equ\09CONFIG_NUM_COOP_PRIORITIES,16\0A\09.type\09CONFIG_NUM_COOP_PRIORITIES,%object", ""() #20, !dbg !5322, !srcloc !5323
  tail call void asm sideeffect ".globl\09CONFIG_NUM_PREEMPT_PRIORITIES\0A\09.equ\09CONFIG_NUM_PREEMPT_PRIORITIES,15\0A\09.type\09CONFIG_NUM_PREEMPT_PRIORITIES,%object", ""() #20, !dbg !5324, !srcloc !5325
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_THREAD_PRIORITY\0A\09.equ\09CONFIG_MAIN_THREAD_PRIORITY,0\0A\09.type\09CONFIG_MAIN_THREAD_PRIORITY,%object", ""() #20, !dbg !5326, !srcloc !5327
  tail call void asm sideeffect ".globl\09CONFIG_COOP_ENABLED\0A\09.equ\09CONFIG_COOP_ENABLED,1\0A\09.type\09CONFIG_COOP_ENABLED,%object", ""() #20, !dbg !5328, !srcloc !5329
  tail call void asm sideeffect ".globl\09CONFIG_PREEMPT_ENABLED\0A\09.equ\09CONFIG_PREEMPT_ENABLED,1\0A\09.type\09CONFIG_PREEMPT_ENABLED,%object", ""() #20, !dbg !5330, !srcloc !5331
  tail call void asm sideeffect ".globl\09CONFIG_PRIORITY_CEILING\0A\09.equ\09CONFIG_PRIORITY_CEILING,-127\0A\09.type\09CONFIG_PRIORITY_CEILING,%object", ""() #20, !dbg !5332, !srcloc !5333
  tail call void asm sideeffect ".globl\09CONFIG_NUM_METAIRQ_PRIORITIES\0A\09.equ\09CONFIG_NUM_METAIRQ_PRIORITIES,0\0A\09.type\09CONFIG_NUM_METAIRQ_PRIORITIES,%object", ""() #20, !dbg !5334, !srcloc !5335
  tail call void asm sideeffect ".globl\09CONFIG_IDLE_STACK_SIZE\0A\09.equ\09CONFIG_IDLE_STACK_SIZE,320\0A\09.type\09CONFIG_IDLE_STACK_SIZE,%object", ""() #20, !dbg !5336, !srcloc !5337
  tail call void asm sideeffect ".globl\09CONFIG_ISR_STACK_SIZE\0A\09.equ\09CONFIG_ISR_STACK_SIZE,2048\0A\09.type\09CONFIG_ISR_STACK_SIZE,%object", ""() #20, !dbg !5338, !srcloc !5339
  tail call void asm sideeffect ".globl\09CONFIG_ERRNO\0A\09.equ\09CONFIG_ERRNO,1\0A\09.type\09CONFIG_ERRNO,%object", ""() #20, !dbg !5340, !srcloc !5341
  tail call void asm sideeffect ".globl\09CONFIG_SCHED_DUMB\0A\09.equ\09CONFIG_SCHED_DUMB,1\0A\09.type\09CONFIG_SCHED_DUMB,%object", ""() #20, !dbg !5342, !srcloc !5343
  tail call void asm sideeffect ".globl\09CONFIG_WAITQ_DUMB\0A\09.equ\09CONFIG_WAITQ_DUMB,1\0A\09.type\09CONFIG_WAITQ_DUMB,%object", ""() #20, !dbg !5344, !srcloc !5345
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_BANNER\0A\09.equ\09CONFIG_BOOT_BANNER,1\0A\09.type\09CONFIG_BOOT_BANNER,%object", ""() #20, !dbg !5346, !srcloc !5347
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_DELAY\0A\09.equ\09CONFIG_BOOT_DELAY,0\0A\09.type\09CONFIG_BOOT_DELAY,%object", ""() #20, !dbg !5348, !srcloc !5349
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_NAME\0A\09.equ\09CONFIG_THREAD_NAME,1\0A\09.type\09CONFIG_THREAD_NAME,%object", ""() #20, !dbg !5350, !srcloc !5351
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_MAX_NAME_LEN\0A\09.equ\09CONFIG_THREAD_MAX_NAME_LEN,32\0A\09.type\09CONFIG_THREAD_MAX_NAME_LEN,%object", ""() #20, !dbg !5352, !srcloc !5353
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,1024\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,%object", ""() #20, !dbg !5354, !srcloc !5355
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,-1\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,%object", ""() #20, !dbg !5356, !srcloc !5357
  tail call void asm sideeffect ".globl\09CONFIG_ATOMIC_OPERATIONS_BUILTIN\0A\09.equ\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,1\0A\09.type\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,%object", ""() #20, !dbg !5358, !srcloc !5359
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICING\0A\09.equ\09CONFIG_TIMESLICING,1\0A\09.type\09CONFIG_TIMESLICING,%object", ""() #20, !dbg !5360, !srcloc !5361
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_SIZE\0A\09.equ\09CONFIG_TIMESLICE_SIZE,0\0A\09.type\09CONFIG_TIMESLICE_SIZE,%object", ""() #20, !dbg !5362, !srcloc !5363
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_PRIORITY\0A\09.equ\09CONFIG_TIMESLICE_PRIORITY,0\0A\09.type\09CONFIG_TIMESLICE_PRIORITY,%object", ""() #20, !dbg !5364, !srcloc !5365
  tail call void asm sideeffect ".globl\09CONFIG_NUM_MBOX_ASYNC_MSGS\0A\09.equ\09CONFIG_NUM_MBOX_ASYNC_MSGS,10\0A\09.type\09CONFIG_NUM_MBOX_ASYNC_MSGS,%object", ""() #20, !dbg !5366, !srcloc !5367
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_MEM_POOL\0A\09.equ\09CONFIG_KERNEL_MEM_POOL,1\0A\09.type\09CONFIG_KERNEL_MEM_POOL,%object", ""() #20, !dbg !5368, !srcloc !5369
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN\0A\09.equ\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,1\0A\09.type\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,%object", ""() #20, !dbg !5370, !srcloc !5371
  tail call void asm sideeffect ".globl\09CONFIG_SWAP_NONATOMIC\0A\09.equ\09CONFIG_SWAP_NONATOMIC,1\0A\09.type\09CONFIG_SWAP_NONATOMIC,%object", ""() #20, !dbg !5372, !srcloc !5373
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_EXISTS\0A\09.equ\09CONFIG_SYS_CLOCK_EXISTS,1\0A\09.type\09CONFIG_SYS_CLOCK_EXISTS,%object", ""() #20, !dbg !5374, !srcloc !5375
  tail call void asm sideeffect ".globl\09CONFIG_TIMEOUT_64BIT\0A\09.equ\09CONFIG_TIMEOUT_64BIT,1\0A\09.type\09CONFIG_TIMEOUT_64BIT,%object", ""() #20, !dbg !5376, !srcloc !5377
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS\0A\09.equ\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,365\0A\09.type\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,%object", ""() #20, !dbg !5378, !srcloc !5379
  tail call void asm sideeffect ".globl\09CONFIG_XIP\0A\09.equ\09CONFIG_XIP,1\0A\09.type\09CONFIG_XIP,%object", ""() #20, !dbg !5380, !srcloc !5381
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,30\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,%object", ""() #20, !dbg !5382, !srcloc !5383
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,40\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,%object", ""() #20, !dbg !5384, !srcloc !5385
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,50\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,%object", ""() #20, !dbg !5386, !srcloc !5387
  tail call void asm sideeffect ".globl\09CONFIG_APPLICATION_INIT_PRIORITY\0A\09.equ\09CONFIG_APPLICATION_INIT_PRIORITY,90\0A\09.type\09CONFIG_APPLICATION_INIT_PRIORITY,%object", ""() #20, !dbg !5388, !srcloc !5389
  tail call void asm sideeffect ".globl\09CONFIG_MP_NUM_CPUS\0A\09.equ\09CONFIG_MP_NUM_CPUS,1\0A\09.type\09CONFIG_MP_NUM_CPUS,%object", ""() #20, !dbg !5390, !srcloc !5391
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_KERNEL\0A\09.equ\09CONFIG_TICKLESS_KERNEL,1\0A\09.type\09CONFIG_TICKLESS_KERNEL,%object", ""() #20, !dbg !5392, !srcloc !5393
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #20, !dbg !5394, !srcloc !5395
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE\0A\09.equ\09CONFIG_CONSOLE,1\0A\09.type\09CONFIG_CONSOLE,%object", ""() #20, !dbg !5396, !srcloc !5397
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN\0A\09.equ\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,128\0A\09.type\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,%object", ""() #20, !dbg !5398, !srcloc !5399
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HAS_DRIVER\0A\09.equ\09CONFIG_CONSOLE_HAS_DRIVER,1\0A\09.type\09CONFIG_CONSOLE_HAS_DRIVER,%object", ""() #20, !dbg !5400, !srcloc !5401
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INIT_PRIORITY\0A\09.equ\09CONFIG_CONSOLE_INIT_PRIORITY,60\0A\09.type\09CONFIG_CONSOLE_INIT_PRIORITY,%object", ""() #20, !dbg !5402, !srcloc !5403
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE\0A\09.equ\09CONFIG_UART_CONSOLE,1\0A\09.type\09CONFIG_UART_CONSOLE,%object", ""() #20, !dbg !5404, !srcloc !5405
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF\0A\09.equ\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF,%object", ""() #20, !dbg !5406, !srcloc !5407
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_LOG_LEVEL\0A\09.equ\09CONFIG_UART_CONSOLE_LOG_LEVEL,3\0A\09.type\09CONFIG_UART_CONSOLE_LOG_LEVEL,%object", ""() #20, !dbg !5408, !srcloc !5409
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SEGGER_RTT\0A\09.equ\09CONFIG_HAS_SEGGER_RTT,1\0A\09.type\09CONFIG_HAS_SEGGER_RTT,%object", ""() #20, !dbg !5410, !srcloc !5411
  tail call void asm sideeffect ".globl\09CONFIG_ETH_INIT_PRIORITY\0A\09.equ\09CONFIG_ETH_INIT_PRIORITY,80\0A\09.type\09CONFIG_ETH_INIT_PRIORITY,%object", ""() #20, !dbg !5412, !srcloc !5413
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_HAS_DRIVER\0A\09.equ\09CONFIG_SERIAL_HAS_DRIVER,1\0A\09.type\09CONFIG_SERIAL_HAS_DRIVER,%object", ""() #20, !dbg !5414, !srcloc !5415
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_INTERRUPT\0A\09.equ\09CONFIG_SERIAL_SUPPORT_INTERRUPT,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_INTERRUPT,%object", ""() #20, !dbg !5416, !srcloc !5417
  tail call void asm sideeffect ".globl\09CONFIG_UART_LOG_LEVEL_INF\0A\09.equ\09CONFIG_UART_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_UART_LOG_LEVEL_INF,%object", ""() #20, !dbg !5418, !srcloc !5419
  tail call void asm sideeffect ".globl\09CONFIG_UART_LOG_LEVEL\0A\09.equ\09CONFIG_UART_LOG_LEVEL,3\0A\09.type\09CONFIG_UART_LOG_LEVEL,%object", ""() #20, !dbg !5420, !srcloc !5421
  tail call void asm sideeffect ".globl\09CONFIG_UART_USE_RUNTIME_CONFIGURE\0A\09.equ\09CONFIG_UART_USE_RUNTIME_CONFIGURE,1\0A\09.type\09CONFIG_UART_USE_RUNTIME_CONFIGURE,%object", ""() #20, !dbg !5422, !srcloc !5423
  tail call void asm sideeffect ".globl\09CONFIG_UART_IMX\0A\09.equ\09CONFIG_UART_IMX,1\0A\09.type\09CONFIG_UART_IMX,%object", ""() #20, !dbg !5424, !srcloc !5425
  tail call void asm sideeffect ".globl\09CONFIG_INTC_INIT_PRIORITY\0A\09.equ\09CONFIG_INTC_INIT_PRIORITY,40\0A\09.type\09CONFIG_INTC_INIT_PRIORITY,%object", ""() #20, !dbg !5426, !srcloc !5427
  tail call void asm sideeffect ".globl\09CONFIG_INTC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_INTC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_INTC_LOG_LEVEL_INF,%object", ""() #20, !dbg !5428, !srcloc !5429
  tail call void asm sideeffect ".globl\09CONFIG_INTC_LOG_LEVEL\0A\09.equ\09CONFIG_INTC_LOG_LEVEL,3\0A\09.type\09CONFIG_INTC_LOG_LEVEL,%object", ""() #20, !dbg !5430, !srcloc !5431
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,0\0A\09.type\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,%object", ""() #20, !dbg !5432, !srcloc !5433
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_CAPABLE\0A\09.equ\09CONFIG_TICKLESS_CAPABLE,1\0A\09.type\09CONFIG_TICKLESS_CAPABLE,%object", ""() #20, !dbg !5434, !srcloc !5435
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT\0A\09.equ\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,1\0A\09.type\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,%object", ""() #20, !dbg !5436, !srcloc !5437
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,%object", ""() #20, !dbg !5438, !srcloc !5439
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_LOG_LEVEL_INF\0A\09.equ\09CONFIG_GPIO_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_GPIO_LOG_LEVEL_INF,%object", ""() #20, !dbg !5440, !srcloc !5441
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_LOG_LEVEL\0A\09.equ\09CONFIG_GPIO_LOG_LEVEL,3\0A\09.type\09CONFIG_GPIO_LOG_LEVEL,%object", ""() #20, !dbg !5442, !srcloc !5443
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_IMX\0A\09.equ\09CONFIG_GPIO_IMX,1\0A\09.type\09CONFIG_GPIO_IMX,%object", ""() #20, !dbg !5444, !srcloc !5445
  tail call void asm sideeffect ".globl\09CONFIG_FXL6408_LOG_LEVEL_INF\0A\09.equ\09CONFIG_FXL6408_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_FXL6408_LOG_LEVEL_INF,%object", ""() #20, !dbg !5446, !srcloc !5447
  tail call void asm sideeffect ".globl\09CONFIG_FXL6408_LOG_LEVEL\0A\09.equ\09CONFIG_FXL6408_LOG_LEVEL,3\0A\09.type\09CONFIG_FXL6408_LOG_LEVEL,%object", ""() #20, !dbg !5448, !srcloc !5449
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF,%object", ""() #20, !dbg !5450, !srcloc !5451
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_LOG_LEVEL\0A\09.equ\09CONFIG_CLOCK_CONTROL_LOG_LEVEL,3\0A\09.type\09CONFIG_CLOCK_CONTROL_LOG_LEVEL,%object", ""() #20, !dbg !5452, !srcloc !5453
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_PINCTRL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_PINCTRL_LOG_LEVEL_INF,%object", ""() #20, !dbg !5454, !srcloc !5455
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_LOG_LEVEL\0A\09.equ\09CONFIG_PINCTRL_LOG_LEVEL,3\0A\09.type\09CONFIG_PINCTRL_LOG_LEVEL,%object", ""() #20, !dbg !5456, !srcloc !5457
  tail call void asm sideeffect ".globl\09CONFIG_USBC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_USBC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_USBC_LOG_LEVEL_INF,%object", ""() #20, !dbg !5458, !srcloc !5459
  tail call void asm sideeffect ".globl\09CONFIG_USBC_LOG_LEVEL\0A\09.equ\09CONFIG_USBC_LOG_LEVEL,3\0A\09.type\09CONFIG_USBC_LOG_LEVEL,%object", ""() #20, !dbg !5460, !srcloc !5461
  tail call void asm sideeffect ".globl\09CONFIG_SUPPORT_MINIMAL_LIBC\0A\09.equ\09CONFIG_SUPPORT_MINIMAL_LIBC,1\0A\09.type\09CONFIG_SUPPORT_MINIMAL_LIBC,%object", ""() #20, !dbg !5462, !srcloc !5463
  tail call void asm sideeffect ".globl\09CONFIG_PICOLIBC_SUPPORTED\0A\09.equ\09CONFIG_PICOLIBC_SUPPORTED,1\0A\09.type\09CONFIG_PICOLIBC_SUPPORTED,%object", ""() #20, !dbg !5464, !srcloc !5465
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC\0A\09.equ\09CONFIG_MINIMAL_LIBC,1\0A\09.type\09CONFIG_MINIMAL_LIBC,%object", ""() #20, !dbg !5466, !srcloc !5467
  tail call void asm sideeffect ".globl\09CONFIG_HAS_NEWLIB_LIBC_NANO\0A\09.equ\09CONFIG_HAS_NEWLIB_LIBC_NANO,1\0A\09.type\09CONFIG_HAS_NEWLIB_LIBC_NANO,%object", ""() #20, !dbg !5468, !srcloc !5469
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS\0A\09.equ\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,1\0A\09.type\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,%object", ""() #20, !dbg !5470, !srcloc !5471
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC,%object", ""() #20, !dbg !5472, !srcloc !5473
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,0\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,%object", ""() #20, !dbg !5474, !srcloc !5475
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_CALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_CALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_CALLOC,%object", ""() #20, !dbg !5476, !srcloc !5477
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_REALLOCARRAY\0A\09.equ\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,1\0A\09.type\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,%object", ""() #20, !dbg !5478, !srcloc !5479
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,1\0A\09.type\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,%object", ""() #20, !dbg !5480, !srcloc !5481
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_TIME\0A\09.equ\09CONFIG_MINIMAL_LIBC_TIME,1\0A\09.type\09CONFIG_MINIMAL_LIBC_TIME,%object", ""() #20, !dbg !5482, !srcloc !5483
  tail call void asm sideeffect ".globl\09CONFIG_STDOUT_CONSOLE\0A\09.equ\09CONFIG_STDOUT_CONSOLE,1\0A\09.type\09CONFIG_STDOUT_CONSOLE,%object", ""() #20, !dbg !5484, !srcloc !5485
  tail call void asm sideeffect ".globl\09CONFIG_NEED_LIBC_MEM_PARTITION\0A\09.equ\09CONFIG_NEED_LIBC_MEM_PARTITION,1\0A\09.type\09CONFIG_NEED_LIBC_MEM_PARTITION,%object", ""() #20, !dbg !5486, !srcloc !5487
  tail call void asm sideeffect ".globl\09CONFIG_CRC\0A\09.equ\09CONFIG_CRC,1\0A\09.type\09CONFIG_CRC,%object", ""() #20, !dbg !5488, !srcloc !5489
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_COMPLETE\0A\09.equ\09CONFIG_CBPRINTF_COMPLETE,1\0A\09.type\09CONFIG_CBPRINTF_COMPLETE,%object", ""() #20, !dbg !5490, !srcloc !5491
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_FULL_INTEGRAL\0A\09.equ\09CONFIG_CBPRINTF_FULL_INTEGRAL,1\0A\09.type\09CONFIG_CBPRINTF_FULL_INTEGRAL,%object", ""() #20, !dbg !5492, !srcloc !5493
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_N_SPECIFIER\0A\09.equ\09CONFIG_CBPRINTF_N_SPECIFIER,1\0A\09.type\09CONFIG_CBPRINTF_N_SPECIFIER,%object", ""() #20, !dbg !5494, !srcloc !5495
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF\0A\09.equ\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF,%object", ""() #20, !dbg !5496, !srcloc !5497
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL\0A\09.equ\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL,3\0A\09.type\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL,%object", ""() #20, !dbg !5498, !srcloc !5499
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_ALLOC_LOOPS\0A\09.equ\09CONFIG_SYS_HEAP_ALLOC_LOOPS,3\0A\09.type\09CONFIG_SYS_HEAP_ALLOC_LOOPS,%object", ""() #20, !dbg !5500, !srcloc !5501
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_SMALL_ONLY\0A\09.equ\09CONFIG_SYS_HEAP_SMALL_ONLY,1\0A\09.type\09CONFIG_SYS_HEAP_SMALL_ONLY,%object", ""() #20, !dbg !5502, !srcloc !5503
  tail call void asm sideeffect ".globl\09CONFIG_POSIX_MAX_FDS\0A\09.equ\09CONFIG_POSIX_MAX_FDS,4\0A\09.type\09CONFIG_POSIX_MAX_FDS,%object", ""() #20, !dbg !5504, !srcloc !5505
  tail call void asm sideeffect ".globl\09CONFIG_MAX_TIMER_COUNT\0A\09.equ\09CONFIG_MAX_TIMER_COUNT,5\0A\09.type\09CONFIG_MAX_TIMER_COUNT,%object", ""() #20, !dbg !5506, !srcloc !5507
  tail call void asm sideeffect ".globl\09CONFIG_PRINTK\0A\09.equ\09CONFIG_PRINTK,1\0A\09.type\09CONFIG_PRINTK,%object", ""() #20, !dbg !5508, !srcloc !5509
  tail call void asm sideeffect ".globl\09CONFIG_EARLY_CONSOLE\0A\09.equ\09CONFIG_EARLY_CONSOLE,1\0A\09.type\09CONFIG_EARLY_CONSOLE,%object", ""() #20, !dbg !5510, !srcloc !5511
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT\0A\09.equ\09CONFIG_ASSERT,1\0A\09.type\09CONFIG_ASSERT,%object", ""() #20, !dbg !5512, !srcloc !5513
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_LEVEL\0A\09.equ\09CONFIG_ASSERT_LEVEL,2\0A\09.type\09CONFIG_ASSERT_LEVEL,%object", ""() #20, !dbg !5514, !srcloc !5515
  tail call void asm sideeffect ".globl\09CONFIG_SPIN_VALIDATE\0A\09.equ\09CONFIG_SPIN_VALIDATE,1\0A\09.type\09CONFIG_SPIN_VALIDATE,%object", ""() #20, !dbg !5516, !srcloc !5517
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ASSERT_VERBOSE,%object", ""() #20, !dbg !5518, !srcloc !5519
  tail call void asm sideeffect ".globl\09CONFIG_LOG\0A\09.equ\09CONFIG_LOG,1\0A\09.type\09CONFIG_LOG,%object", ""() #20, !dbg !5520, !srcloc !5521
  tail call void asm sideeffect ".globl\09CONFIG_LOG_MODE_MINIMAL\0A\09.equ\09CONFIG_LOG_MODE_MINIMAL,1\0A\09.type\09CONFIG_LOG_MODE_MINIMAL,%object", ""() #20, !dbg !5522, !srcloc !5523
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DEFAULT_MINIMAL\0A\09.equ\09CONFIG_LOG_DEFAULT_MINIMAL,1\0A\09.type\09CONFIG_LOG_DEFAULT_MINIMAL,%object", ""() #20, !dbg !5524, !srcloc !5525
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DEFAULT_LEVEL\0A\09.equ\09CONFIG_LOG_DEFAULT_LEVEL,3\0A\09.type\09CONFIG_LOG_DEFAULT_LEVEL,%object", ""() #20, !dbg !5526, !srcloc !5527
  tail call void asm sideeffect ".globl\09CONFIG_LOG_OVERRIDE_LEVEL\0A\09.equ\09CONFIG_LOG_OVERRIDE_LEVEL,0\0A\09.type\09CONFIG_LOG_OVERRIDE_LEVEL,%object", ""() #20, !dbg !5528, !srcloc !5529
  tail call void asm sideeffect ".globl\09CONFIG_LOG_MAX_LEVEL\0A\09.equ\09CONFIG_LOG_MAX_LEVEL,4\0A\09.type\09CONFIG_LOG_MAX_LEVEL,%object", ""() #20, !dbg !5530, !srcloc !5531
  tail call void asm sideeffect ".globl\09CONFIG_LOG_TEST_CLEAR_MESSAGE_SPACE\0A\09.equ\09CONFIG_LOG_TEST_CLEAR_MESSAGE_SPACE,1\0A\09.type\09CONFIG_LOG_TEST_CLEAR_MESSAGE_SPACE,%object", ""() #20, !dbg !5532, !srcloc !5533
  tail call void asm sideeffect ".globl\09CONFIG_LOG_USE_VLA\0A\09.equ\09CONFIG_LOG_USE_VLA,1\0A\09.type\09CONFIG_LOG_USE_VLA,%object", ""() #20, !dbg !5534, !srcloc !5535
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST\0A\09.equ\09CONFIG_ZTEST,1\0A\09.type\09CONFIG_ZTEST,%object", ""() #20, !dbg !5536, !srcloc !5537
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST_NEW_API\0A\09.equ\09CONFIG_ZTEST_NEW_API,1\0A\09.type\09CONFIG_ZTEST_NEW_API,%object", ""() #20, !dbg !5538, !srcloc !5539
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST_STACK_SIZE\0A\09.equ\09CONFIG_ZTEST_STACK_SIZE,1024\0A\09.type\09CONFIG_ZTEST_STACK_SIZE,%object", ""() #20, !dbg !5540, !srcloc !5541
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST_TEST_DELAY_MS\0A\09.equ\09CONFIG_ZTEST_TEST_DELAY_MS,0\0A\09.type\09CONFIG_ZTEST_TEST_DELAY_MS,%object", ""() #20, !dbg !5542, !srcloc !5543
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST_CPU_HOLD_TIME_MS\0A\09.equ\09CONFIG_ZTEST_CPU_HOLD_TIME_MS,3000\0A\09.type\09CONFIG_ZTEST_CPU_HOLD_TIME_MS,%object", ""() #20, !dbg !5544, !srcloc !5545
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ZTEST_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ZTEST_ASSERT_VERBOSE,%object", ""() #20, !dbg !5546, !srcloc !5547
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST_THREAD_PRIORITY\0A\09.equ\09CONFIG_ZTEST_THREAD_PRIORITY,-1\0A\09.type\09CONFIG_ZTEST_THREAD_PRIORITY,%object", ""() #20, !dbg !5548, !srcloc !5549
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST_VERIFY_RUN_ALL\0A\09.equ\09CONFIG_ZTEST_VERIFY_RUN_ALL,1\0A\09.type\09CONFIG_ZTEST_VERIFY_RUN_ALL,%object", ""() #20, !dbg !5550, !srcloc !5551
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST_VERBOSE_OUTPUT\0A\09.equ\09CONFIG_ZTEST_VERBOSE_OUTPUT,1\0A\09.type\09CONFIG_ZTEST_VERBOSE_OUTPUT,%object", ""() #20, !dbg !5552, !srcloc !5553
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST_VERBOSE_SUMMARY\0A\09.equ\09CONFIG_ZTEST_VERBOSE_SUMMARY,1\0A\09.type\09CONFIG_ZTEST_VERBOSE_SUMMARY,%object", ""() #20, !dbg !5554, !srcloc !5555
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST_FAIL_ON_ASSUME\0A\09.equ\09CONFIG_ZTEST_FAIL_ON_ASSUME,1\0A\09.type\09CONFIG_ZTEST_FAIL_ON_ASSUME,%object", ""() #20, !dbg !5556, !srcloc !5557
  tail call void asm sideeffect ".globl\09CONFIG_TEST_LOGGING_FLUSH_AFTER_TEST\0A\09.equ\09CONFIG_TEST_LOGGING_FLUSH_AFTER_TEST,1\0A\09.type\09CONFIG_TEST_LOGGING_FLUSH_AFTER_TEST,%object", ""() #20, !dbg !5558, !srcloc !5559
  tail call void asm sideeffect ".globl\09CONFIG_TEST\0A\09.equ\09CONFIG_TEST,1\0A\09.type\09CONFIG_TEST,%object", ""() #20, !dbg !5560, !srcloc !5561
  tail call void asm sideeffect ".globl\09CONFIG_COVERAGE_GCOV_HEAP_SIZE\0A\09.equ\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,16384\0A\09.type\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,%object", ""() #20, !dbg !5562, !srcloc !5563
  tail call void asm sideeffect ".globl\09CONFIG_TEST_LOGGING_DEFAULTS\0A\09.equ\09CONFIG_TEST_LOGGING_DEFAULTS,1\0A\09.type\09CONFIG_TEST_LOGGING_DEFAULTS,%object", ""() #20, !dbg !5564, !srcloc !5565
  tail call void asm sideeffect ".globl\09CONFIG_TEST_ARM_CORTEX_M\0A\09.equ\09CONFIG_TEST_ARM_CORTEX_M,1\0A\09.type\09CONFIG_TEST_ARM_CORTEX_M,%object", ""() #20, !dbg !5566, !srcloc !5567
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_0_15\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,%object", ""() #20, !dbg !5568, !srcloc !5569
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #20, !dbg !5570, !srcloc !5571
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_ORPHAN_SECTION_WARN\0A\09.equ\09CONFIG_LINKER_ORPHAN_SECTION_WARN,1\0A\09.type\09CONFIG_LINKER_ORPHAN_SECTION_WARN,%object", ""() #20, !dbg !5572, !srcloc !5573
  tail call void asm sideeffect ".globl\09CONFIG_HAS_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_HAS_FLASH_LOAD_OFFSET,1\0A\09.type\09CONFIG_HAS_FLASH_LOAD_OFFSET,%object", ""() #20, !dbg !5574, !srcloc !5575
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_FLASH_LOAD_OFFSET,0x0\0A\09.type\09CONFIG_FLASH_LOAD_OFFSET,%object", ""() #20, !dbg !5576, !srcloc !5577
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_SIZE\0A\09.equ\09CONFIG_FLASH_LOAD_SIZE,0x0\0A\09.type\09CONFIG_FLASH_LOAD_SIZE,%object", ""() #20, !dbg !5578, !srcloc !5579
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED\0A\09.equ\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,1\0A\09.type\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,%object", ""() #20, !dbg !5580, !srcloc !5581
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_TEMPLATE\0A\09.equ\09CONFIG_LD_LINKER_TEMPLATE,1\0A\09.type\09CONFIG_LD_LINKER_TEMPLATE,%object", ""() #20, !dbg !5582, !srcloc !5583
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_ENTRY\0A\09.equ\09CONFIG_KERNEL_ENTRY,1\0A\09.type\09CONFIG_KERNEL_ENTRY,%object", ""() #20, !dbg !5584, !srcloc !5585
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_SORT_BY_ALIGNMENT\0A\09.equ\09CONFIG_LINKER_SORT_BY_ALIGNMENT,1\0A\09.type\09CONFIG_LINKER_SORT_BY_ALIGNMENT,%object", ""() #20, !dbg !5586, !srcloc !5587
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_OFFSET\0A\09.equ\09CONFIG_SRAM_OFFSET,0x0\0A\09.type\09CONFIG_SRAM_OFFSET,%object", ""() #20, !dbg !5588, !srcloc !5589
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT\0A\09.equ\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,1\0A\09.type\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,%object", ""() #20, !dbg !5590, !srcloc !5591
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID,1\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID,%object", ""() #20, !dbg !5592, !srcloc !5593
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,0xE015E015\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,%object", ""() #20, !dbg !5594, !srcloc !5595
  tail call void asm sideeffect ".globl\09CONFIG_SIZE_OPTIMIZATIONS\0A\09.equ\09CONFIG_SIZE_OPTIMIZATIONS,1\0A\09.type\09CONFIG_SIZE_OPTIMIZATIONS,%object", ""() #20, !dbg !5596, !srcloc !5597
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_COLOR_DIAGNOSTICS\0A\09.equ\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,1\0A\09.type\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,%object", ""() #20, !dbg !5598, !srcloc !5599
  tail call void asm sideeffect ".globl\09CONFIG_FORTIFY_SOURCE_NONE\0A\09.equ\09CONFIG_FORTIFY_SOURCE_NONE,1\0A\09.type\09CONFIG_FORTIFY_SOURCE_NONE,%object", ""() #20, !dbg !5600, !srcloc !5601
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_OPT\0A\09.equ\09CONFIG_COMPILER_OPT,1\0A\09.type\09CONFIG_COMPILER_OPT,%object", ""() #20, !dbg !5602, !srcloc !5603
  tail call void asm sideeffect ".globl\09CONFIG_RUNTIME_ERROR_CHECKS\0A\09.equ\09CONFIG_RUNTIME_ERROR_CHECKS,1\0A\09.type\09CONFIG_RUNTIME_ERROR_CHECKS,%object", ""() #20, !dbg !5604, !srcloc !5605
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_BIN_NAME\0A\09.equ\09CONFIG_KERNEL_BIN_NAME,1\0A\09.type\09CONFIG_KERNEL_BIN_NAME,%object", ""() #20, !dbg !5606, !srcloc !5607
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_STAT\0A\09.equ\09CONFIG_OUTPUT_STAT,1\0A\09.type\09CONFIG_OUTPUT_STAT,%object", ""() #20, !dbg !5608, !srcloc !5609
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_SYMBOLS\0A\09.equ\09CONFIG_OUTPUT_SYMBOLS,1\0A\09.type\09CONFIG_OUTPUT_SYMBOLS,%object", ""() #20, !dbg !5610, !srcloc !5611
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_DISASSEMBLY\0A\09.equ\09CONFIG_OUTPUT_DISASSEMBLY,1\0A\09.type\09CONFIG_OUTPUT_DISASSEMBLY,%object", ""() #20, !dbg !5612, !srcloc !5613
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE\0A\09.equ\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,1\0A\09.type\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,%object", ""() #20, !dbg !5614, !srcloc !5615
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_BIN\0A\09.equ\09CONFIG_BUILD_OUTPUT_BIN,1\0A\09.type\09CONFIG_BUILD_OUTPUT_BIN,%object", ""() #20, !dbg !5616, !srcloc !5617
  tail call void asm sideeffect ".globl\09CONFIG_WARN_DEPRECATED\0A\09.equ\09CONFIG_WARN_DEPRECATED,1\0A\09.type\09CONFIG_WARN_DEPRECATED,%object", ""() #20, !dbg !5618, !srcloc !5619
  tail call void asm sideeffect ".globl\09CONFIG_ENFORCE_ZEPHYR_STDINT\0A\09.equ\09CONFIG_ENFORCE_ZEPHYR_STDINT,1\0A\09.type\09CONFIG_ENFORCE_ZEPHYR_STDINT,%object", ""() #20, !dbg !5620, !srcloc !5621
  tail call void asm sideeffect ".globl\09CONFIG_COMPAT_INCLUDES\0A\09.equ\09CONFIG_COMPAT_INCLUDES,1\0A\09.type\09CONFIG_COMPAT_INCLUDES,%object", ""() #20, !dbg !5622, !srcloc !5623
  ret void, !dbg !5624
}

; Function Attrs: noinline nounwind optsize
define internal i32 @nxp_mcimx7_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !5625 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !5627, metadata !DIExpression()), !dbg !5628
  tail call void @SOC_RdcInit() #21, !dbg !5629
  tail call void @SOC_ClockInit() #21, !dbg !5630
  tail call fastcc void @nxp_mcimx7_gpio_config() #21, !dbg !5631
  ret i32 0, !dbg !5632
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @SOC_RdcInit() local_unnamed_addr #14 !dbg !5633 {
  tail call fastcc void @RDC_SetDomainID() #21, !dbg !5634
  ret void, !dbg !5635
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SOC_ClockInit() local_unnamed_addr #1 !dbg !5636 {
  tail call void @CCM_UpdateRoot(%struct.CCM_Type* noundef nonnull inttoptr (i32 808976384 to %struct.CCM_Type*), i32 noundef 809024384, i32 noundef 0, i32 noundef 0, i32 noundef 0) #22, !dbg !5637
  tail call fastcc void @CCM_EnableRoot() #21, !dbg !5638
  tail call fastcc void @CCM_ControlGate(i32 noundef 808995296, i32 noundef 4369) #21, !dbg !5639
  tail call fastcc void @RDC_SetPdapAccess(i32 noundef 10, i8 noundef zeroext 12) #21, !dbg !5640
  tail call fastcc void @WDOG_DisablePowerdown() #21, !dbg !5641
  tail call fastcc void @CCM_ControlGate(i32 noundef 808995296, i32 noundef 0) #21, !dbg !5642
  tail call fastcc void @CCM_ControlGate(i32 noundef 808978528, i32 noundef 4369) #21, !dbg !5643
  tail call fastcc void @CCM_ControlGate(i32 noundef 808978560, i32 noundef 4369) #21, !dbg !5644
  tail call fastcc void @CCM_ControlGate(i32 noundef 808992928, i32 noundef 4369) #21, !dbg !5645
  tail call fastcc void @CCM_ControlGate(i32 noundef 808992944, i32 noundef 4369) #21, !dbg !5646
  tail call fastcc void @CCM_ControlGate(i32 noundef 808992960, i32 noundef 4369) #21, !dbg !5647
  tail call fastcc void @CCM_ControlGate(i32 noundef 808995456, i32 noundef 4369) #21, !dbg !5648
  tail call fastcc void @CCM_ControlGate(i32 noundef 808995472, i32 noundef 4369) #21, !dbg !5649
  tail call fastcc void @CCM_ControlGate(i32 noundef 808993376, i32 noundef 4369) #21, !dbg !5650
  ret void, !dbg !5651
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @nxp_mcimx7_gpio_config() unnamed_addr #14 !dbg !5652 {
  tail call fastcc void @RDC_SetPdapAccess(i32 noundef 0, i8 noundef zeroext 15) #21, !dbg !5653
  tail call fastcc void @CCM_ControlGate(i32 noundef 808995328, i32 noundef 8738) #21, !dbg !5654
  ret void, !dbg !5655
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @RDC_SetPdapAccess(i32 noundef %0, i8 noundef zeroext %1) unnamed_addr #14 !dbg !5656 {
  call void @llvm.dbg.value(metadata %struct.RDC_Type* inttoptr (i32 809304064 to %struct.RDC_Type*), metadata !5661, metadata !DIExpression()), !dbg !5666
  call void @llvm.dbg.value(metadata i32 %0, metadata !5662, metadata !DIExpression()), !dbg !5666
  call void @llvm.dbg.value(metadata i8 %1, metadata !5663, metadata !DIExpression()), !dbg !5666
  call void @llvm.dbg.value(metadata i8 0, metadata !5664, metadata !DIExpression()), !dbg !5666
  call void @llvm.dbg.value(metadata i8 0, metadata !5665, metadata !DIExpression()), !dbg !5666
  %3 = zext i8 %1 to i32, !dbg !5667
  %4 = getelementptr inbounds [118 x i32], [118 x i32]* inttoptr (i32 809305088 to [118 x i32]*), i32 0, i32 %0, !dbg !5668
  store volatile i32 %3, i32* %4, align 4, !dbg !5669
  ret void, !dbg !5670
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @CCM_ControlGate(i32 noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !5671 {
  call void @llvm.dbg.value(metadata %struct.CCM_Type* undef, metadata !5675, metadata !DIExpression()), !dbg !5678
  call void @llvm.dbg.value(metadata i32 %0, metadata !5676, metadata !DIExpression()), !dbg !5678
  call void @llvm.dbg.value(metadata i32 %1, metadata !5677, metadata !DIExpression()), !dbg !5678
  %3 = inttoptr i32 %0 to i32*, !dbg !5679
  store volatile i32 %1, i32* %3, align 4, !dbg !5680
  ret void, !dbg !5681
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @CCM_EnableRoot() unnamed_addr #14 !dbg !5682 {
  call void @llvm.dbg.value(metadata %struct.CCM_Type* undef, metadata !5686, metadata !DIExpression()), !dbg !5688
  call void @llvm.dbg.value(metadata i32 809024384, metadata !5687, metadata !DIExpression()), !dbg !5688
  store volatile i32 268435456, i32* inttoptr (i32 809024388 to i32*), align 4, !dbg !5689
  ret void, !dbg !5690
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @WDOG_DisablePowerdown() unnamed_addr #14 !dbg !5691 {
  call void @llvm.dbg.value(metadata %struct.WDOG_Type* inttoptr (i32 808058880 to %struct.WDOG_Type*), metadata !5696, metadata !DIExpression()), !dbg !5697
  %1 = load volatile i16, i16* inttoptr (i32 808058888 to i16*), align 8, !dbg !5698
  %2 = and i16 %1, -2, !dbg !5698
  store volatile i16 %2, i16* inttoptr (i32 808058888 to i16*), align 8, !dbg !5698
  ret void, !dbg !5699
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @RDC_SetDomainID() unnamed_addr #14 !dbg !5700 {
  call void @llvm.dbg.value(metadata %struct.RDC_Type* inttoptr (i32 809304064 to %struct.RDC_Type*), metadata !5704, metadata !DIExpression()), !dbg !5708
  call void @llvm.dbg.value(metadata i32 1, metadata !5705, metadata !DIExpression()), !dbg !5708
  call void @llvm.dbg.value(metadata i32 1, metadata !5706, metadata !DIExpression()), !dbg !5708
  call void @llvm.dbg.value(metadata i8 0, metadata !5707, metadata !DIExpression()), !dbg !5708
  store volatile i32 1, i32* inttoptr (i32 809304580 to i32*), align 4, !dbg !5709
  ret void, !dbg !5710
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !5711 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !5714, metadata !DIExpression()), !dbg !5722
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !5723
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #20, !dbg !5723
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !5715, metadata !DIExpression()), !dbg !5724
  call void @llvm.va_start(i8* nonnull %3), !dbg !5725
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !5726
  %5 = load i32, i32* %4, align 4, !dbg !5726
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !5726
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #22, !dbg !5726
  call void @llvm.va_end(i8* nonnull %3), !dbg !5727
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #20, !dbg !5728
  ret void, !dbg !5728
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !5729 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !5734, metadata !DIExpression()), !dbg !5735
  call void @llvm.dbg.value(metadata i8* %0, metadata !5733, metadata !DIExpression()), !dbg !5735
  tail call void @vprintk(i8* noundef %0, [1 x i32] %1) #22, !dbg !5736
  ret void, !dbg !5737
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_hexdump_print(i32 noundef %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #1 !dbg !5738 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5742, metadata !DIExpression()), !dbg !5746
  call void @llvm.dbg.value(metadata i8* %1, metadata !5743, metadata !DIExpression()), !dbg !5746
  call void @llvm.dbg.value(metadata i32 %2, metadata !5744, metadata !DIExpression()), !dbg !5746
  call void @llvm.dbg.value(metadata i8* %1, metadata !5745, metadata !DIExpression()), !dbg !5746
  %4 = icmp eq i32 %2, 0, !dbg !5747
  br i1 %4, label %14, label %5, !dbg !5748

5:                                                ; preds = %3
  %6 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef %0) #21, !dbg !5746
  %7 = zext i8 %6 to i32
  br label %8, !dbg !5748

8:                                                ; preds = %8, %5
  %9 = phi i8* [ %1, %5 ], [ %12, %8 ]
  %10 = phi i32 [ %2, %5 ], [ %11, %8 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !5745, metadata !DIExpression()), !dbg !5746
  call void @llvm.dbg.value(metadata i32 %10, metadata !5744, metadata !DIExpression()), !dbg !5746
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.21, i32 0, i32 0), i32 noundef %7) #22, !dbg !5749
  tail call fastcc void @minimal_hexdump_line_print(i8* noundef %9, i32 noundef %10) #21, !dbg !5751
  %11 = add i32 %10, -8
  %12 = getelementptr inbounds i8, i8* %9, i32 8
  %13 = icmp ult i32 %10, 9, !dbg !5752
  call void @llvm.dbg.value(metadata i32 %11, metadata !5744, metadata !DIExpression()), !dbg !5746
  call void @llvm.dbg.value(metadata i8* %12, metadata !5745, metadata !DIExpression()), !dbg !5746
  br i1 %13, label %14, label %8, !dbg !5752, !llvm.loop !5753

14:                                               ; preds = %8, %3
  ret void, !dbg !5755
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef %0) unnamed_addr #2 !dbg !5756 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5761, metadata !DIExpression()), !dbg !5762
  %2 = add i32 %0, -1, !dbg !5763
  %3 = icmp ult i32 %2, 4, !dbg !5763
  %4 = shl i32 %2, 3, !dbg !5763
  %5 = lshr i32 1145657157, %4, !dbg !5763
  %6 = trunc i32 %5 to i8, !dbg !5763
  %7 = select i1 %3, i8 %6, i8 63, !dbg !5763
  ret i8 %7, !dbg !5764
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @minimal_hexdump_line_print(i8* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !5765 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5769, metadata !DIExpression()), !dbg !5780
  call void @llvm.dbg.value(metadata i32 %1, metadata !5770, metadata !DIExpression()), !dbg !5780
  call void @llvm.dbg.value(metadata i32 0, metadata !5771, metadata !DIExpression()), !dbg !5781
  br label %4, !dbg !5782

3:                                                ; preds = %12
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.22, i32 0, i32 0)) #22, !dbg !5783
  call void @llvm.dbg.value(metadata i32 0, metadata !5773, metadata !DIExpression()), !dbg !5784
  br label %16, !dbg !5785

4:                                                ; preds = %2, %12
  %5 = phi i32 [ 0, %2 ], [ %13, %12 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !5771, metadata !DIExpression()), !dbg !5781
  %6 = icmp ult i32 %5, %1, !dbg !5786
  br i1 %6, label %7, label %11, !dbg !5790

7:                                                ; preds = %4
  %8 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !5791
  %9 = load i8, i8* %8, align 1, !dbg !5791
  %10 = zext i8 %9 to i32, !dbg !5793
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.23, i32 0, i32 0), i32 noundef %10) #22, !dbg !5794
  br label %12, !dbg !5795

11:                                               ; preds = %4
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.24, i32 0, i32 0)) #22, !dbg !5796
  br label %12

12:                                               ; preds = %7, %11
  %13 = add nuw nsw i32 %5, 1, !dbg !5798
  call void @llvm.dbg.value(metadata i32 %13, metadata !5771, metadata !DIExpression()), !dbg !5781
  %14 = icmp eq i32 %13, 8, !dbg !5799
  br i1 %14, label %3, label %4, !dbg !5782, !llvm.loop !5800

15:                                               ; preds = %27
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6.25, i32 0, i32 0)) #22, !dbg !5802
  ret void, !dbg !5803

16:                                               ; preds = %3, %27
  %17 = phi i32 [ 0, %3 ], [ %28, %27 ]
  call void @llvm.dbg.value(metadata i32 %17, metadata !5773, metadata !DIExpression()), !dbg !5784
  %18 = icmp ult i32 %17, %1, !dbg !5804
  br i1 %18, label %19, label %26, !dbg !5805

19:                                               ; preds = %16
  %20 = getelementptr inbounds i8, i8* %0, i32 %17, !dbg !5806
  %21 = load i8, i8* %20, align 1, !dbg !5806
  call void @llvm.dbg.value(metadata i8 %21, metadata !5775, metadata !DIExpression()), !dbg !5807
  %22 = zext i8 %21 to i32, !dbg !5808
  %23 = tail call fastcc i32 @isprint(i32 noundef %22) #21, !dbg !5809
  %24 = icmp eq i32 %23, 0, !dbg !5810
  %25 = select i1 %24, i32 46, i32 %22, !dbg !5809
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4.26, i32 0, i32 0), i32 noundef %25) #22, !dbg !5811
  br label %27, !dbg !5812

26:                                               ; preds = %16
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5.27, i32 0, i32 0)) #22, !dbg !5813
  br label %27

27:                                               ; preds = %19, %26
  %28 = add nuw nsw i32 %17, 1, !dbg !5815
  call void @llvm.dbg.value(metadata i32 %28, metadata !5773, metadata !DIExpression()), !dbg !5784
  %29 = icmp eq i32 %28, 8, !dbg !5816
  br i1 %29, label %15, label %16, !dbg !5785, !llvm.loop !5817
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isprint(i32 noundef %0) unnamed_addr #2 !dbg !5819 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5821, metadata !DIExpression()), !dbg !5822
  %2 = add i32 %0, -32, !dbg !5823
  %3 = icmp ult i32 %2, 95, !dbg !5823
  %4 = zext i1 %3 to i32, !dbg !5823
  ret i32 %4, !dbg !5824
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !5825 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5874, metadata !DIExpression()), !dbg !5876
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !5875, metadata !DIExpression()), !dbg !5876
  %3 = icmp eq %struct.__esf* %1, null, !dbg !5877
  br i1 %3, label %5, label %4, !dbg !5879

4:                                                ; preds = %2
  tail call fastcc void @esf_dump(%struct.__esf* noundef nonnull %1) #21, !dbg !5880
  br label %5, !dbg !5882

5:                                                ; preds = %4, %2
  tail call void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) #22, !dbg !5883
  ret void, !dbg !5884
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @esf_dump(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !5885 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !5889, metadata !DIExpression()), !dbg !5890
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !5891
  %3 = load i32, i32* %2, align 4, !dbg !5891
  %4 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 1, i32 0, !dbg !5891
  %5 = load i32, i32* %4, align 4, !dbg !5891
  %6 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 2, i32 0, !dbg !5891
  %7 = load i32, i32* %6, align 4, !dbg !5891
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.28, i32 0, i32 0), i32 noundef 69, i32 noundef %3, i32 noundef %5, i32 noundef %7) #22, !dbg !5891
  %8 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 3, i32 0, !dbg !5896
  %9 = load i32, i32* %8, align 4, !dbg !5896
  %10 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 4, i32 0, !dbg !5896
  %11 = load i32, i32* %10, align 4, !dbg !5896
  %12 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 5, i32 0, !dbg !5896
  %13 = load i32, i32* %12, align 4, !dbg !5896
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.29, i32 0, i32 0), i32 noundef 69, i32 noundef %9, i32 noundef %11, i32 noundef %13) #22, !dbg !5896
  %14 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 7, !dbg !5901
  %15 = load i32, i32* %14, align 4, !dbg !5901
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.2.30, i32 0, i32 0), i32 noundef 69, i32 noundef %15) #22, !dbg !5901
  %16 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !5906
  %17 = load i32, i32* %16, align 4, !dbg !5906
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.3.31, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #22, !dbg !5906
  ret void, !dbg !5911
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_do_kernel_oops(%struct.__esf* noundef %0, %struct._callee_saved* nocapture noundef readnone %1) local_unnamed_addr #1 !dbg !5912 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !5929, metadata !DIExpression()), !dbg !5932
  call void @llvm.dbg.value(metadata %struct._callee_saved* %1, metadata !5930, metadata !DIExpression()), !dbg !5932
  %3 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !5933
  %4 = load i32, i32* %3, align 4, !dbg !5933
  call void @llvm.dbg.value(metadata i32 %4, metadata !5931, metadata !DIExpression()), !dbg !5932
  tail call void @z_arm_fatal_error(i32 noundef %4, %struct.__esf* noundef %0) #21, !dbg !5934
  ret void, !dbg !5935
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_syscall_oops(i8* nocapture noundef readonly %0) local_unnamed_addr #10 !dbg !5936 {
  %2 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !5938, metadata !DIExpression()), !dbg !5941
  call void @llvm.dbg.value(metadata i8* %0, metadata !5939, metadata !DIExpression()), !dbg !5941
  %3 = bitcast %struct.__esf* %2 to i8*, !dbg !5942
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #20, !dbg !5942
  call void @llvm.dbg.declare(metadata %struct.__esf* %2, metadata !5940, metadata !DIExpression()), !dbg !5943
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(32) %3, i8 0, i32 32, i1 false), !dbg !5943
  %4 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !5944
  %5 = bitcast i8* %4 to i32*, !dbg !5944
  %6 = load i32, i32* %5, align 4, !dbg !5944
  %7 = getelementptr inbounds %struct.__esf, %struct.__esf* %2, i32 0, i32 0, i32 6, i32 0, !dbg !5945
  store i32 %6, i32* %7, align 4, !dbg !5946
  call void @z_arm_fatal_error(i32 noundef 3, %struct.__esf* noundef nonnull %2) #21, !dbg !5947
  unreachable, !dbg !5948
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !5949 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5954, metadata !DIExpression()), !dbg !5955
  tail call fastcc void @__NVIC_EnableIRQ(i32 noundef %0) #21, !dbg !5956
  ret void, !dbg !5957
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !5958 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5962, metadata !DIExpression()), !dbg !5963
  %2 = icmp sgt i32 %0, -1, !dbg !5964
  br i1 %2, label %3, label %8, !dbg !5966

3:                                                ; preds = %1
  tail call void asm sideeffect "", "~{memory}"() #20, !dbg !5967, !srcloc !5969
  %4 = and i32 %0, 31, !dbg !5970
  %5 = shl nuw i32 1, %4, !dbg !5971
  %6 = lshr i32 %0, 5, !dbg !5972
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %6, !dbg !5973
  store volatile i32 %5, i32* %7, align 4, !dbg !5974
  tail call void asm sideeffect "", "~{memory}"() #20, !dbg !5975, !srcloc !5976
  br label %8, !dbg !5977

8:                                                ; preds = %3, %1
  ret void, !dbg !5978
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_disable(i32 noundef %0) local_unnamed_addr #1 !dbg !5979 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5981, metadata !DIExpression()), !dbg !5982
  tail call fastcc void @__NVIC_DisableIRQ(i32 noundef %0) #21, !dbg !5983
  ret void, !dbg !5984
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !5985 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5987, metadata !DIExpression()), !dbg !5988
  %2 = icmp sgt i32 %0, -1, !dbg !5989
  br i1 %2, label %3, label %8, !dbg !5991

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !5992
  %5 = shl nuw i32 1, %4, !dbg !5994
  %6 = lshr i32 %0, 5, !dbg !5995
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %6, !dbg !5996
  store volatile i32 %5, i32* %7, align 4, !dbg !5997
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #20, !dbg !5998, !srcloc !6002
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #20, !dbg !6003, !srcloc !6006
  br label %8, !dbg !6007

8:                                                ; preds = %3, %1
  ret void, !dbg !6008
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @arch_irq_is_enabled(i32 noundef %0) local_unnamed_addr #15 !dbg !6009 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6013, metadata !DIExpression()), !dbg !6014
  %2 = lshr i32 %0, 5, !dbg !6015
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %2, !dbg !6016
  %4 = load volatile i32, i32* %3, align 4, !dbg !6016
  %5 = and i32 %0, 31, !dbg !6017
  %6 = shl nuw i32 1, %5, !dbg !6017
  %7 = and i32 %4, %6, !dbg !6018
  ret i32 %7, !dbg !6019
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_irq_priority_set(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !6020 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6024, metadata !DIExpression()), !dbg !6027
  call void @llvm.dbg.value(metadata i32 %1, metadata !6025, metadata !DIExpression()), !dbg !6027
  call void @llvm.dbg.value(metadata i32 %2, metadata !6026, metadata !DIExpression()), !dbg !6027
  %4 = add i32 %1, 1, !dbg !6028
  call void @llvm.dbg.value(metadata i32 %4, metadata !6025, metadata !DIExpression()), !dbg !6027
  %5 = icmp ult i32 %4, 16, !dbg !6031
  br i1 %5, label %7, label %6, !dbg !6034

6:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.32, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1.33, i32 0, i32 0), i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2.34, i32 0, i32 0), i32 noundef 94) #22, !dbg !6035
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @.str.3.35, i32 0, i32 0), i32 noundef %1, i32 noundef %0, i32 noundef 15) #22, !dbg !6035
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2.34, i32 0, i32 0), i32 noundef 94) #22, !dbg !6035
  unreachable, !dbg !6035

7:                                                ; preds = %3
  tail call fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %4) #21, !dbg !6037
  ret void, !dbg !6038
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !6039 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6043, metadata !DIExpression()), !dbg !6045
  call void @llvm.dbg.value(metadata i32 %1, metadata !6044, metadata !DIExpression()), !dbg !6045
  %3 = trunc i32 %1 to i8, !dbg !6046
  %4 = shl i8 %3, 4, !dbg !6046
  %5 = and i32 %0, 15, !dbg !6048
  %6 = add nsw i32 %5, -4, !dbg !6048
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !6048
  %8 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !6048
  %9 = icmp slt i32 %0, 0, !dbg !6048
  %10 = select i1 %9, i8* %7, i8* %8, !dbg !6048
  store volatile i8 %4, i8* %10, align 1, !dbg !6046
  ret void, !dbg !6049
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_irq_spurious(i8* nocapture noundef readnone %0) #1 !dbg !6050 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6052, metadata !DIExpression()), !dbg !6053
  tail call void @z_arm_fatal_error(i32 noundef 1, %struct.__esf* noundef null) #22, !dbg !6054
  ret void, !dbg !6055
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_nmi() local_unnamed_addr #1 !dbg !6056 {
  tail call void @z_SysNmiOnReset() #22, !dbg !6058
  tail call void @z_arm_int_exit() #22, !dbg !6059
  ret void, !dbg !6060
}

; Function Attrs: optsize
declare !dbg !6061 dso_local void @z_SysNmiOnReset() local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !6062 dso_local void @z_arm_int_exit() local_unnamed_addr #0

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_arm_prep_c() local_unnamed_addr #10 !dbg !6064 {
  tail call fastcc void @relocate_vector_table() #21, !dbg !6066
  tail call fastcc void @z_arm_floating_point_init() #21, !dbg !6067
  tail call void @z_bss_zero() #22, !dbg !6068
  tail call void @z_data_copy() #22, !dbg !6069
  tail call void @z_arm_interrupt_init() #22, !dbg !6070
  tail call void @z_cstart() #24, !dbg !6071
  unreachable, !dbg !6071
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @relocate_vector_table() unnamed_addr #1 !dbg !6072 {
  store volatile i32 and (i32 ptrtoint ([0 x i8]* @_vector_start to i32), i32 -128), i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !6073
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #20, !dbg !6074, !srcloc !6077
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #20, !dbg !6078, !srcloc !6081
  ret void, !dbg !6082
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_arm_floating_point_init() unnamed_addr #1 !dbg !6083 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !6084
  %2 = and i32 %1, -15728641, !dbg !6084
  store volatile i32 %2, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !6084
  %3 = tail call i32 asm sideeffect "MRS $0, control", "=r"() #20, !dbg !6085, !srcloc !6092
  call void @llvm.dbg.value(metadata i32 %3, metadata !6090, metadata !DIExpression()) #20, !dbg !6093
  %4 = and i32 %3, -5, !dbg !6094
  call void @llvm.dbg.value(metadata i32 %4, metadata !6095, metadata !DIExpression()) #20, !dbg !6100
  tail call void asm sideeffect "MSR control, $0", "r,~{memory}"(i32 %4) #20, !dbg !6102, !srcloc !6103
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #20, !dbg !6104, !srcloc !6081
  ret void, !dbg !6106
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @arch_swap(i32 noundef %0) local_unnamed_addr #1 !dbg !6107 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6110, metadata !DIExpression()), !dbg !6111
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6112
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 0, !dbg !6113
  store i32 %0, i32* %3, align 8, !dbg !6114
  %4 = load i32, i32* @_k_neg_eagain, align 4, !dbg !6115
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 1, !dbg !6116
  store i32 %4, i32* %5, align 4, !dbg !6117
  %6 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6118
  %7 = or i32 %6, 268435456, !dbg !6118
  store volatile i32 %7, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6118
  call void @llvm.dbg.value(metadata i32 0, metadata !6119, metadata !DIExpression()) #20, !dbg !6123
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #20, !dbg !6125, !srcloc !6126
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6127
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %8, i32 0, i32 7, i32 1, !dbg !6128
  %10 = load i32, i32* %9, align 4, !dbg !6128
  ret i32 %10, !dbg !6129
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @arch_new_thread(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* nocapture noundef readnone %1, i8* noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) local_unnamed_addr #7 !dbg !6130 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6237, metadata !DIExpression()), !dbg !6245
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !6238, metadata !DIExpression()), !dbg !6245
  call void @llvm.dbg.value(metadata i8* %2, metadata !6239, metadata !DIExpression()), !dbg !6245
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !6240, metadata !DIExpression()), !dbg !6245
  call void @llvm.dbg.value(metadata i8* %4, metadata !6241, metadata !DIExpression()), !dbg !6245
  call void @llvm.dbg.value(metadata i8* %5, metadata !6242, metadata !DIExpression()), !dbg !6245
  call void @llvm.dbg.value(metadata i8* %6, metadata !6243, metadata !DIExpression()), !dbg !6245
  %8 = getelementptr inbounds i8, i8* %2, i32 -32, !dbg !6246
  call void @llvm.dbg.value(metadata i8* %8, metadata !6244, metadata !DIExpression()), !dbg !6245
  %9 = getelementptr inbounds i8, i8* %2, i32 -8, !dbg !6247
  %10 = bitcast i8* %9 to i32*, !dbg !6247
  store i32 and (i32 ptrtoint (void (void (i8*, i8*, i8*)*, i8*, i8*, i8*)* @z_thread_entry to i32), i32 -2), i32* %10, align 4, !dbg !6248
  %11 = ptrtoint void (i8*, i8*, i8*)* %3 to i32, !dbg !6249
  %12 = bitcast i8* %8 to i32*, !dbg !6250
  store i32 %11, i32* %12, align 4, !dbg !6251
  %13 = ptrtoint i8* %4 to i32, !dbg !6252
  %14 = getelementptr inbounds i8, i8* %2, i32 -28, !dbg !6253
  %15 = bitcast i8* %14 to i32*, !dbg !6253
  store i32 %13, i32* %15, align 4, !dbg !6254
  %16 = ptrtoint i8* %5 to i32, !dbg !6255
  %17 = getelementptr inbounds i8, i8* %2, i32 -24, !dbg !6256
  %18 = bitcast i8* %17 to i32*, !dbg !6256
  store i32 %16, i32* %18, align 4, !dbg !6257
  %19 = ptrtoint i8* %6 to i32, !dbg !6258
  %20 = getelementptr inbounds i8, i8* %2, i32 -20, !dbg !6259
  %21 = bitcast i8* %20 to i32*, !dbg !6259
  store i32 %19, i32* %21, align 4, !dbg !6260
  %22 = getelementptr inbounds i8, i8* %2, i32 -4, !dbg !6261
  %23 = bitcast i8* %22 to i32*, !dbg !6261
  store i32 16777216, i32* %23, align 4, !dbg !6262
  %24 = ptrtoint i8* %8 to i32, !dbg !6263
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 1, i32 8, !dbg !6264
  store i32 %24, i32* %25, align 8, !dbg !6265
  %26 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, i32 0, !dbg !6266
  store i32 0, i32* %26, align 8, !dbg !6267
  ret void, !dbg !6268
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_switch_to_main_thread(%struct.k_thread* noundef %0, i8* noundef %1, void (i8*, i8*, i8*)* noundef %2) local_unnamed_addr #10 !dbg !6269 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6273, metadata !DIExpression()), !dbg !6276
  call void @llvm.dbg.value(metadata i8* %1, metadata !6274, metadata !DIExpression()), !dbg !6276
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %2, metadata !6275, metadata !DIExpression()), !dbg !6276
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6277
  tail call void asm sideeffect "mov   r0,  $0\0A\09msr   PSP, $1\0A\09movs r1, #0\0A\09cpsie if\0A\09msr   BASEPRI, r1\0A\09isb\0A\09movs r2, #0\0A\09movs r3, #0\0A\09bl z_thread_entry\0A\09", "r,r,~{r0}"(void (i8*, i8*, i8*)* %2, i8* %1) #20, !dbg !6278, !srcloc !6279
  unreachable, !dbg !6280
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fault(i32 noundef %0, i32 noundef %1, i32 noundef %2, %struct._callee_saved* nocapture noundef readnone %3) local_unnamed_addr #1 !dbg !6281 {
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6299, metadata !DIExpression()), !dbg !6309
  call void @llvm.dbg.value(metadata i32 %1, metadata !6300, metadata !DIExpression()), !dbg !6309
  call void @llvm.dbg.value(metadata i32 %2, metadata !6301, metadata !DIExpression()), !dbg !6309
  call void @llvm.dbg.value(metadata %struct._callee_saved* %3, metadata !6302, metadata !DIExpression()), !dbg !6309
  call void @llvm.dbg.value(metadata i32 0, metadata !6303, metadata !DIExpression()), !dbg !6309
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6310
  call void @llvm.dbg.value(metadata i32 %8, metadata !6304, metadata !DIExpression(DW_OP_constu, 511, DW_OP_and, DW_OP_stack_value)), !dbg !6309
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #20, !dbg !6311
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #20, !dbg !6311
  %9 = bitcast %struct.__esf* %7 to i8*, !dbg !6312
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #20, !dbg !6312
  call void @llvm.dbg.declare(metadata %struct.__esf* %7, metadata !6308, metadata !DIExpression()), !dbg !6313
  call void @llvm.dbg.value(metadata i32 0, metadata !6314, metadata !DIExpression()) #20, !dbg !6317
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #20, !dbg !6319, !srcloc !6320
  call void @llvm.dbg.value(metadata i8* %6, metadata !6306, metadata !DIExpression(DW_OP_deref)), !dbg !6309
  %10 = call fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef nonnull %6) #21, !dbg !6321
  call void @llvm.dbg.value(metadata %struct.__esf* %10, metadata !6307, metadata !DIExpression()), !dbg !6309
  %11 = icmp eq %struct.__esf* %10, null, !dbg !6322
  br i1 %11, label %12, label %13, !dbg !6325

12:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.38, i32 0, i32 0), i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1.39, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.40, i32 0, i32 0), i32 noundef 1057) #22, !dbg !6326
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([62 x i8], [62 x i8]* @.str.3.41, i32 0, i32 0)) #22, !dbg !6326
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.40, i32 0, i32 0), i32 noundef 1057) #22, !dbg !6326
  unreachable, !dbg !6326

13:                                               ; preds = %4
  %14 = and i32 %8, 511, !dbg !6328
  call void @llvm.dbg.value(metadata i32 %14, metadata !6304, metadata !DIExpression()), !dbg !6309
  call void @llvm.dbg.value(metadata i8* %5, metadata !6305, metadata !DIExpression(DW_OP_deref)), !dbg !6309
  %15 = call fastcc i32 @fault_handle(%struct.__esf* noundef nonnull %10, i32 noundef %14, i8* noundef nonnull %5) #21, !dbg !6329
  call void @llvm.dbg.value(metadata i32 %15, metadata !6303, metadata !DIExpression()), !dbg !6309
  %16 = load i8, i8* %5, align 1, !dbg !6330, !range !6332
  call void @llvm.dbg.value(metadata i8 %16, metadata !6305, metadata !DIExpression()), !dbg !6309
  %17 = icmp eq i8 %16, 0, !dbg !6330
  br i1 %17, label %18, label %35, !dbg !6333

18:                                               ; preds = %13
  %19 = bitcast %struct.__esf* %10 to i8*, !dbg !6334
  %20 = call i8* @memcpy(i8* noundef nonnull %9, i8* noundef nonnull %19, i32 noundef 32) #22, !dbg !6335
  %21 = load i8, i8* %6, align 1, !dbg !6336, !range !6332
  call void @llvm.dbg.value(metadata i8 %21, metadata !6306, metadata !DIExpression()), !dbg !6309
  %22 = icmp eq i8 %21, 0, !dbg !6336
  %23 = getelementptr inbounds %struct.__esf, %struct.__esf* %7, i32 0, i32 0, i32 7, !dbg !6338
  %24 = load i32, i32* %23, align 4, !dbg !6338
  br i1 %22, label %30, label %25, !dbg !6339

25:                                               ; preds = %18
  %26 = and i32 %24, 511, !dbg !6340
  %27 = icmp eq i32 %26, 0, !dbg !6343
  br i1 %27, label %28, label %34, !dbg !6344

28:                                               ; preds = %25
  %29 = or i32 %24, 511, !dbg !6345
  br label %32, !dbg !6347

30:                                               ; preds = %18
  %31 = and i32 %24, -512, !dbg !6348
  br label %32

32:                                               ; preds = %30, %28
  %33 = phi i32 [ %29, %28 ], [ %31, %30 ]
  store i32 %33, i32* %23, align 4, !dbg !6338
  br label %34, !dbg !6350

34:                                               ; preds = %32, %25
  call void @z_arm_fatal_error(i32 noundef %15, %struct.__esf* noundef nonnull %7) #22, !dbg !6350
  br label %35, !dbg !6351

35:                                               ; preds = %13, %34
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #20, !dbg !6351
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #20, !dbg !6351
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #20, !dbg !6351
  ret void, !dbg !6351
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* nocapture noundef writeonly %3) unnamed_addr #1 !dbg !6352 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6357, metadata !DIExpression()), !dbg !6363
  call void @llvm.dbg.value(metadata i32 %1, metadata !6358, metadata !DIExpression()), !dbg !6363
  call void @llvm.dbg.value(metadata i32 %2, metadata !6359, metadata !DIExpression()), !dbg !6363
  call void @llvm.dbg.value(metadata i8* %3, metadata !6360, metadata !DIExpression()), !dbg !6363
  call void @llvm.dbg.value(metadata i8 0, metadata !6361, metadata !DIExpression()), !dbg !6363
  call void @llvm.dbg.value(metadata %struct.__esf* null, metadata !6362, metadata !DIExpression()), !dbg !6363
  store i8 0, i8* %3, align 1, !dbg !6364
  %5 = icmp ugt i32 %2, -16777217, !dbg !6365
  br i1 %5, label %6, label %17, !dbg !6367

6:                                                ; preds = %4
  %7 = and i32 %2, 12, !dbg !6368
  %8 = icmp eq i32 %7, 8, !dbg !6368
  br i1 %8, label %9, label %10, !dbg !6368

9:                                                ; preds = %6
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.4.55, i32 0, i32 0), i32 noundef 69) #22, !dbg !6370
  br label %17, !dbg !6376

10:                                               ; preds = %6
  %11 = and i32 %2, 8, !dbg !6377
  %12 = icmp eq i32 %11, 0, !dbg !6377
  br i1 %12, label %13, label %14, !dbg !6378

13:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i32 %0, metadata !6362, metadata !DIExpression()), !dbg !6363
  store i8 1, i8* %3, align 1, !dbg !6381
  br label %14

14:                                               ; preds = %10, %13
  %15 = phi i32 [ %0, %13 ], [ %1, %10 ]
  %16 = inttoptr i32 %15 to %struct.__esf*, !dbg !6363
  call void @llvm.dbg.value(metadata %struct.__esf* %16, metadata !6362, metadata !DIExpression()), !dbg !6363
  br label %17, !dbg !6384

17:                                               ; preds = %4, %14, %9
  %18 = phi %struct.__esf* [ %16, %14 ], [ null, %9 ], [ null, %4 ], !dbg !6363
  ret %struct.__esf* %18, !dbg !6385
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @fault_handle(%struct.__esf* nocapture noundef readonly %0, i32 noundef %1, i8* nocapture noundef %2) unnamed_addr #1 !dbg !6386 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6390, metadata !DIExpression()), !dbg !6394
  call void @llvm.dbg.value(metadata i32 %1, metadata !6391, metadata !DIExpression()), !dbg !6394
  call void @llvm.dbg.value(metadata i8* %2, metadata !6392, metadata !DIExpression()), !dbg !6394
  call void @llvm.dbg.value(metadata i32 0, metadata !6393, metadata !DIExpression()), !dbg !6394
  store i8 0, i8* %2, align 1, !dbg !6395
  switch i32 %1, label %10 [
    i32 3, label %4
    i32 4, label %6
    i32 5, label %7
    i32 6, label %8
    i32 12, label %9
  ], !dbg !6396

4:                                                ; preds = %3
  %5 = tail call fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* noundef nonnull %2) #21, !dbg !6397
  call void @llvm.dbg.value(metadata i32 %5, metadata !6393, metadata !DIExpression()), !dbg !6394
  br label %11, !dbg !6399

6:                                                ; preds = %3
  tail call fastcc void @mem_manage_fault(i32 noundef 0, i8* noundef nonnull %2) #21, !dbg !6400
  call void @llvm.dbg.value(metadata i32 0, metadata !6393, metadata !DIExpression()), !dbg !6394
  br label %11, !dbg !6401

7:                                                ; preds = %3
  tail call fastcc void @bus_fault(i32 noundef 0, i8* noundef nonnull %2) #21, !dbg !6402
  call void @llvm.dbg.value(metadata i32 0, metadata !6393, metadata !DIExpression()), !dbg !6394
  br label %11, !dbg !6403

8:                                                ; preds = %3
  tail call fastcc void @usage_fault() #21, !dbg !6404
  call void @llvm.dbg.value(metadata i32 0, metadata !6393, metadata !DIExpression()), !dbg !6394
  br label %11, !dbg !6405

9:                                                ; preds = %3
  tail call fastcc void @debug_monitor(i8* noundef nonnull %2) #21, !dbg !6406
  br label %11, !dbg !6407

10:                                               ; preds = %3
  tail call fastcc void @reserved_exception(i32 noundef %1) #21, !dbg !6408
  br label %11, !dbg !6409

11:                                               ; preds = %4, %6, %7, %8, %9, %10
  %12 = phi i32 [ 0, %10 ], [ 0, %9 ], [ 0, %8 ], [ 0, %7 ], [ 0, %6 ], [ %5, %4 ], !dbg !6394
  call void @llvm.dbg.value(metadata i32 %12, metadata !6393, metadata !DIExpression()), !dbg !6394
  ret i32 %12, !dbg !6410
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @hard_fault(%struct.__esf* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !6411 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6415, metadata !DIExpression()), !dbg !6418
  call void @llvm.dbg.value(metadata i8* %1, metadata !6416, metadata !DIExpression()), !dbg !6418
  call void @llvm.dbg.value(metadata i32 0, metadata !6417, metadata !DIExpression()), !dbg !6418
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5.47, i32 0, i32 0), i32 noundef 69) #22, !dbg !6419
  store i8 0, i8* %1, align 1, !dbg !6424
  %3 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6425
  %4 = and i32 %3, 2, !dbg !6427
  %5 = icmp eq i32 %4, 0, !dbg !6428
  br i1 %5, label %7, label %6, !dbg !6429

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.48, i32 0, i32 0), i32 noundef 69) #22, !dbg !6430
  br label %37, !dbg !6436

7:                                                ; preds = %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6437
  %9 = icmp sgt i32 %8, -1, !dbg !6439
  br i1 %9, label %11, label %10, !dbg !6440

10:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.7.49, i32 0, i32 0), i32 noundef 69) #22, !dbg !6441
  br label %37, !dbg !6447

11:                                               ; preds = %7
  %12 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6448
  %13 = and i32 %12, 1073741824, !dbg !6450
  %14 = icmp eq i32 %13, 0, !dbg !6451
  br i1 %14, label %36, label %15, !dbg !6452

15:                                               ; preds = %11
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.8.50, i32 0, i32 0), i32 noundef 69) #22, !dbg !6453
  %16 = tail call fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* noundef %0) #21, !dbg !6459
  br i1 %16, label %17, label %21, !dbg !6461

17:                                               ; preds = %15
  %18 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6462
  %19 = load i32, i32* %18, align 4, !dbg !6462
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.9.51, i32 0, i32 0), i32 noundef 69, i32 noundef %19) #22, !dbg !6462
  %20 = load i32, i32* %18, align 4, !dbg !6468
  call void @llvm.dbg.value(metadata i32 %20, metadata !6417, metadata !DIExpression()), !dbg !6418
  br label %37, !dbg !6469

21:                                               ; preds = %15
  %22 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6470
  %23 = and i32 %22, 255, !dbg !6472
  %24 = icmp eq i32 %23, 0, !dbg !6473
  br i1 %24, label %26, label %25, !dbg !6474

25:                                               ; preds = %21
  tail call fastcc void @mem_manage_fault(i32 noundef 1, i8* noundef nonnull %1) #21, !dbg !6475
  call void @llvm.dbg.value(metadata i32 0, metadata !6417, metadata !DIExpression()), !dbg !6418
  br label %37, !dbg !6477

26:                                               ; preds = %21
  %27 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6478
  %28 = and i32 %27, 65280, !dbg !6480
  %29 = icmp eq i32 %28, 0, !dbg !6481
  br i1 %29, label %31, label %30, !dbg !6482

30:                                               ; preds = %26
  tail call fastcc void @bus_fault(i32 noundef 1, i8* noundef nonnull %1) #21, !dbg !6483
  call void @llvm.dbg.value(metadata i32 0, metadata !6417, metadata !DIExpression()), !dbg !6418
  br label %37, !dbg !6485

31:                                               ; preds = %26
  %32 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6486
  %33 = icmp ult i32 %32, 65536, !dbg !6488
  br i1 %33, label %35, label %34, !dbg !6489

34:                                               ; preds = %31
  tail call fastcc void @usage_fault() #21, !dbg !6490
  call void @llvm.dbg.value(metadata i32 0, metadata !6417, metadata !DIExpression()), !dbg !6418
  br label %37

35:                                               ; preds = %31
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.38, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.52, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.40, i32 0, i32 0), i32 noundef 755) #22, !dbg !6492
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.11.53, i32 0, i32 0)) #22, !dbg !6492
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.40, i32 0, i32 0), i32 noundef 755) #22, !dbg !6492
  unreachable, !dbg !6492

36:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.38, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.52, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.40, i32 0, i32 0), i32 noundef 760) #22, !dbg !6497
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.12.54, i32 0, i32 0)) #22, !dbg !6497
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.40, i32 0, i32 0), i32 noundef 760) #22, !dbg !6497
  unreachable, !dbg !6497

37:                                               ; preds = %10, %17, %30, %34, %25, %6
  %38 = phi i32 [ 0, %6 ], [ 0, %10 ], [ %20, %17 ], [ 0, %25 ], [ 0, %30 ], [ 0, %34 ], !dbg !6418
  call void @llvm.dbg.value(metadata i32 %38, metadata !6417, metadata !DIExpression()), !dbg !6418
  ret i32 %38, !dbg !6502
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @mem_manage_fault(i32 noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !6503 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !6505, metadata !DIExpression()), !dbg !6513
  call void @llvm.dbg.value(metadata i32 %0, metadata !6506, metadata !DIExpression()), !dbg !6513
  call void @llvm.dbg.value(metadata i8* %1, metadata !6507, metadata !DIExpression()), !dbg !6513
  call void @llvm.dbg.value(metadata i32 0, metadata !6508, metadata !DIExpression()), !dbg !6513
  call void @llvm.dbg.value(metadata i32 -22, metadata !6509, metadata !DIExpression()), !dbg !6513
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.13.45, i32 0, i32 0), i32 noundef 69) #22, !dbg !6514
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6519
  %4 = and i32 %3, 16, !dbg !6521
  %5 = icmp eq i32 %4, 0, !dbg !6522
  br i1 %5, label %7, label %6, !dbg !6523

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([56 x i8], [56 x i8]* @.str.14, i32 0, i32 0), i32 noundef 69) #22, !dbg !6524
  br label %7, !dbg !6530

7:                                                ; preds = %6, %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6531
  %9 = and i32 %8, 8, !dbg !6533
  %10 = icmp eq i32 %9, 0, !dbg !6534
  br i1 %10, label %12, label %11, !dbg !6535

11:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.15, i32 0, i32 0), i32 noundef 69) #22, !dbg !6536
  br label %12, !dbg !6542

12:                                               ; preds = %11, %7
  %13 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6543
  %14 = and i32 %13, 2, !dbg !6544
  %15 = icmp eq i32 %14, 0, !dbg !6545
  br i1 %15, label %26, label %16, !dbg !6546

16:                                               ; preds = %12
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.16, i32 0, i32 0), i32 noundef 69) #22, !dbg !6547
  %17 = load volatile i32, i32* inttoptr (i32 -536810188 to i32*), align 4, !dbg !6552
  call void @llvm.dbg.value(metadata i32 %17, metadata !6510, metadata !DIExpression()), !dbg !6553
  %18 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6554
  %19 = and i32 %18, 128, !dbg !6556
  %20 = icmp eq i32 %19, 0, !dbg !6557
  br i1 %20, label %26, label %21, !dbg !6558

21:                                               ; preds = %16
  call void @llvm.dbg.value(metadata i32 %17, metadata !6509, metadata !DIExpression()), !dbg !6513
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.17, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #22, !dbg !6559
  %22 = icmp eq i32 %0, 0, !dbg !6565
  br i1 %22, label %26, label %23, !dbg !6567

23:                                               ; preds = %21
  %24 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6568
  %25 = and i32 %24, -129, !dbg !6568
  store volatile i32 %25, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6568
  br label %26, !dbg !6570

26:                                               ; preds = %16, %23, %21, %12
  call void @llvm.dbg.value(metadata i32 undef, metadata !6509, metadata !DIExpression()), !dbg !6513
  %27 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6571
  %28 = and i32 %27, 1, !dbg !6573
  %29 = icmp eq i32 %28, 0, !dbg !6574
  br i1 %29, label %31, label %30, !dbg !6575

30:                                               ; preds = %26
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.18, i32 0, i32 0), i32 noundef 69) #22, !dbg !6576
  br label %31, !dbg !6582

31:                                               ; preds = %30, %26
  %32 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6583
  %33 = and i32 %32, 32, !dbg !6585
  %34 = icmp eq i32 %33, 0, !dbg !6586
  br i1 %34, label %36, label %35, !dbg !6587

35:                                               ; preds = %31
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.19, i32 0, i32 0), i32 noundef 69) #22, !dbg !6588
  br label %36, !dbg !6594

36:                                               ; preds = %35, %31
  %37 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6595
  %38 = and i32 %37, 16, !dbg !6597
  %39 = icmp eq i32 %38, 0, !dbg !6597
  br i1 %39, label %40, label %44, !dbg !6598

40:                                               ; preds = %36
  %41 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6599
  %42 = and i32 %41, 2, !dbg !6600
  %43 = icmp eq i32 %42, 0, !dbg !6600
  br i1 %43, label %49, label %44, !dbg !6601

44:                                               ; preds = %40, %36
  %45 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6602
  %46 = and i32 %45, 16, !dbg !6602
  %47 = icmp eq i32 %46, 0, !dbg !6602
  br i1 %47, label %49, label %48, !dbg !6606

48:                                               ; preds = %44
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.38, i32 0, i32 0), i8* noundef getelementptr inbounds ([74 x i8], [74 x i8]* @.str.20, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.40, i32 0, i32 0), i32 noundef 350) #22, !dbg !6607
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([100 x i8], [100 x i8]* @.str.21.46, i32 0, i32 0)) #22, !dbg !6607
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.40, i32 0, i32 0), i32 noundef 350) #22, !dbg !6607
  unreachable, !dbg !6607

49:                                               ; preds = %44, %40
  %50 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6609
  %51 = and i32 %50, 32, !dbg !6611
  %52 = icmp eq i32 %51, 0, !dbg !6612
  br i1 %52, label %56, label %53, !dbg !6613

53:                                               ; preds = %49
  %54 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !6614
  %55 = and i32 %54, -8193, !dbg !6614
  store volatile i32 %55, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !6614
  br label %56, !dbg !6616

56:                                               ; preds = %53, %49
  %57 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6617
  %58 = or i32 %57, 255, !dbg !6617
  store volatile i32 %58, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6617
  store i8 0, i8* %1, align 1, !dbg !6618
  ret void, !dbg !6619
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @bus_fault(i32 noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !6620 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !6624, metadata !DIExpression()), !dbg !6631
  call void @llvm.dbg.value(metadata i32 %0, metadata !6625, metadata !DIExpression()), !dbg !6631
  call void @llvm.dbg.value(metadata i8* %1, metadata !6626, metadata !DIExpression()), !dbg !6631
  call void @llvm.dbg.value(metadata i32 0, metadata !6627, metadata !DIExpression()), !dbg !6631
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.22, i32 0, i32 0), i32 noundef 69) #22, !dbg !6632
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6637
  %4 = and i32 %3, 4096, !dbg !6639
  %5 = icmp eq i32 %4, 0, !dbg !6639
  br i1 %5, label %7, label %6, !dbg !6640

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.23, i32 0, i32 0), i32 noundef 69) #22, !dbg !6641
  br label %7, !dbg !6647

7:                                                ; preds = %6, %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6648
  %9 = and i32 %8, 2048, !dbg !6650
  %10 = icmp eq i32 %9, 0, !dbg !6650
  br i1 %10, label %12, label %11, !dbg !6651

11:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.15, i32 0, i32 0), i32 noundef 69) #22, !dbg !6652
  br label %12, !dbg !6658

12:                                               ; preds = %11, %7
  %13 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6659
  %14 = and i32 %13, 512, !dbg !6660
  %15 = icmp eq i32 %14, 0, !dbg !6660
  br i1 %15, label %26, label %16, !dbg !6661

16:                                               ; preds = %12
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.24, i32 0, i32 0), i32 noundef 69) #22, !dbg !6662
  %17 = load volatile i32, i32* inttoptr (i32 -536810184 to i32*), align 8, !dbg !6667
  call void @llvm.dbg.value(metadata i32 %17, metadata !6628, metadata !DIExpression()), !dbg !6668
  %18 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6669
  %19 = and i32 %18, 32768, !dbg !6671
  %20 = icmp eq i32 %19, 0, !dbg !6672
  br i1 %20, label %26, label %21, !dbg !6673

21:                                               ; preds = %16
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.25, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #22, !dbg !6674
  %22 = icmp eq i32 %0, 0, !dbg !6680
  br i1 %22, label %26, label %23, !dbg !6682

23:                                               ; preds = %21
  %24 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6683
  %25 = and i32 %24, -32769, !dbg !6683
  store volatile i32 %25, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6683
  br label %26, !dbg !6685

26:                                               ; preds = %16, %23, %21, %12
  %27 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6686
  %28 = and i32 %27, 1024, !dbg !6688
  %29 = icmp eq i32 %28, 0, !dbg !6688
  br i1 %29, label %31, label %30, !dbg !6689

30:                                               ; preds = %26
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.26, i32 0, i32 0), i32 noundef 69) #22, !dbg !6690
  br label %31, !dbg !6696

31:                                               ; preds = %30, %26
  %32 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6697
  %33 = and i32 %32, 256, !dbg !6699
  %34 = icmp eq i32 %33, 0, !dbg !6700
  br i1 %34, label %35, label %39, !dbg !6701

35:                                               ; preds = %31
  %36 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6702
  %37 = and i32 %36, 8192, !dbg !6704
  %38 = icmp eq i32 %37, 0, !dbg !6704
  br i1 %38, label %41, label %39, !dbg !6705

39:                                               ; preds = %35, %31
  %40 = phi i8* [ getelementptr inbounds ([29 x i8], [29 x i8]* @.str.27, i32 0, i32 0), %31 ], [ getelementptr inbounds ([52 x i8], [52 x i8]* @.str.19, i32 0, i32 0), %35 ]
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef %40, i32 noundef 69) #22, !dbg !6706
  br label %41, !dbg !6707

41:                                               ; preds = %39, %35
  %42 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6707
  %43 = or i32 %42, 65280, !dbg !6707
  store volatile i32 %43, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6707
  store i8 0, i8* %1, align 1, !dbg !6708
  ret void, !dbg !6709
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @usage_fault() unnamed_addr #1 !dbg !6710 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !6716, metadata !DIExpression()), !dbg !6718
  call void @llvm.dbg.value(metadata i32 0, metadata !6717, metadata !DIExpression()), !dbg !6718
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.28.43, i32 0, i32 0), i32 noundef 69) #22, !dbg !6719
  %1 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6724
  %2 = and i32 %1, 33554432, !dbg !6726
  %3 = icmp eq i32 %2, 0, !dbg !6727
  br i1 %3, label %5, label %4, !dbg !6728

4:                                                ; preds = %0
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.29, i32 0, i32 0), i32 noundef 69) #22, !dbg !6729
  br label %5, !dbg !6735

5:                                                ; preds = %4, %0
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6736
  %7 = and i32 %6, 16777216, !dbg !6738
  %8 = icmp eq i32 %7, 0, !dbg !6739
  br i1 %8, label %10, label %9, !dbg !6740

9:                                                ; preds = %5
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.30, i32 0, i32 0), i32 noundef 69) #22, !dbg !6741
  br label %10, !dbg !6747

10:                                               ; preds = %9, %5
  %11 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6748
  %12 = and i32 %11, 524288, !dbg !6750
  %13 = icmp eq i32 %12, 0, !dbg !6751
  br i1 %13, label %15, label %14, !dbg !6752

14:                                               ; preds = %10
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.31, i32 0, i32 0), i32 noundef 69) #22, !dbg !6753
  br label %15, !dbg !6759

15:                                               ; preds = %14, %10
  %16 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6760
  %17 = and i32 %16, 262144, !dbg !6762
  %18 = icmp eq i32 %17, 0, !dbg !6763
  br i1 %18, label %20, label %19, !dbg !6764

19:                                               ; preds = %15
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.32.44, i32 0, i32 0), i32 noundef 69) #22, !dbg !6765
  br label %20, !dbg !6771

20:                                               ; preds = %19, %15
  %21 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6772
  %22 = and i32 %21, 131072, !dbg !6774
  %23 = icmp eq i32 %22, 0, !dbg !6775
  br i1 %23, label %25, label %24, !dbg !6776

24:                                               ; preds = %20
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.33, i32 0, i32 0), i32 noundef 69) #22, !dbg !6777
  br label %25, !dbg !6783

25:                                               ; preds = %24, %20
  %26 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6784
  %27 = and i32 %26, 65536, !dbg !6786
  %28 = icmp eq i32 %27, 0, !dbg !6787
  br i1 %28, label %30, label %29, !dbg !6788

29:                                               ; preds = %25
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.34, i32 0, i32 0), i32 noundef 69) #22, !dbg !6789
  br label %30, !dbg !6795

30:                                               ; preds = %29, %25
  %31 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6796
  %32 = or i32 %31, -65536, !dbg !6796
  store volatile i32 %32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6796
  ret void, !dbg !6797
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @debug_monitor(i8* nocapture noundef writeonly %0) unnamed_addr #1 !dbg !6798 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !6802, metadata !DIExpression()), !dbg !6804
  call void @llvm.dbg.value(metadata i8* %0, metadata !6803, metadata !DIExpression()), !dbg !6804
  store i8 0, i8* %0, align 1, !dbg !6805
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.35, i32 0, i32 0), i32 noundef 69) #22, !dbg !6806
  ret void, !dbg !6811
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @reserved_exception(i32 noundef %0) unnamed_addr #1 !dbg !6812 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !6816, metadata !DIExpression()), !dbg !6818
  call void @llvm.dbg.value(metadata i32 %0, metadata !6817, metadata !DIExpression()), !dbg !6818
  %2 = icmp slt i32 %0, 16, !dbg !6819
  %3 = select i1 %2, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.37, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.38.42, i32 0, i32 0), !dbg !6819
  %4 = add nsw i32 %0, -16, !dbg !6819
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.36, i32 0, i32 0), i32 noundef 69, i8* noundef %3, i32 noundef %4) #22, !dbg !6819
  ret void, !dbg !6824
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !6825 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6829, metadata !DIExpression()), !dbg !6832
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !6833
  %3 = load i32, i32* %2, align 4, !dbg !6833
  %4 = inttoptr i32 %3 to i16*, !dbg !6834
  call void @llvm.dbg.value(metadata i16* %4, metadata !6830, metadata !DIExpression()), !dbg !6832
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6835
  %6 = or i32 %5, 256, !dbg !6835
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6835
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #20, !dbg !6836, !srcloc !6839
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #20, !dbg !6840, !srcloc !6843
  %7 = getelementptr inbounds i16, i16* %4, i32 -1, !dbg !6844
  %8 = load i16, i16* %7, align 2, !dbg !6845
  call void @llvm.dbg.value(metadata i16 %8, metadata !6831, metadata !DIExpression()), !dbg !6832
  %9 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6846
  %10 = and i32 %9, -257, !dbg !6846
  store volatile i32 %10, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6846
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #20, !dbg !6847, !srcloc !6839
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #20, !dbg !6849, !srcloc !6843
  %11 = icmp eq i16 %8, -8446, !dbg !6851
  ret i1 %11, !dbg !6853
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_fault_init() local_unnamed_addr #14 !dbg !6854 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6855
  %2 = or i32 %1, 16, !dbg !6855
  store volatile i32 %2, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6855
  ret void, !dbg !6856
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_interrupt_init() local_unnamed_addr #14 !dbg !6857 {
  call void @llvm.dbg.value(metadata i32 0, metadata !6860, metadata !DIExpression()), !dbg !6861
  br label %1, !dbg !6862

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !6860, metadata !DIExpression()), !dbg !6861
  tail call fastcc void @__NVIC_SetPriority.58(i32 noundef %2) #21, !dbg !6864
  %3 = add nuw nsw i32 %2, 1, !dbg !6867
  call void @llvm.dbg.value(metadata i32 %3, metadata !6860, metadata !DIExpression()), !dbg !6861
  %4 = icmp eq i32 %3, 127, !dbg !6868
  br i1 %4, label %5, label %1, !dbg !6862, !llvm.loop !6869

5:                                                ; preds = %1
  ret void, !dbg !6871
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.58(i32 noundef %0) unnamed_addr #14 !dbg !6872 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6874, metadata !DIExpression()), !dbg !6876
  call void @llvm.dbg.value(metadata i32 1, metadata !6875, metadata !DIExpression()), !dbg !6876
  %2 = and i32 %0, 15, !dbg !6877
  %3 = add nsw i32 %2, -4, !dbg !6877
  %4 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %3, !dbg !6877
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !6877
  %6 = icmp slt i32 %0, 0, !dbg !6877
  %7 = select i1 %6, i8* %4, i8* %5, !dbg !6877
  store volatile i8 16, i8* %7, align 1, !dbg !6878
  ret void, !dbg !6880
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !6881 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6984, metadata !DIExpression()), !dbg !6985
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6986
  %3 = icmp eq %struct.k_thread* %2, %0, !dbg !6988
  br i1 %3, label %4, label %12, !dbg !6989

4:                                                ; preds = %1
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #20, !dbg !6990, !srcloc !7002
  call void @llvm.dbg.value(metadata i32 %5, metadata !6993, metadata !DIExpression()) #20, !dbg !7003
  %6 = icmp eq i32 %5, 0, !dbg !7004
  br i1 %6, label %12, label %7, !dbg !7005

7:                                                ; preds = %4
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7006
  %9 = or i32 %8, 268435456, !dbg !7006
  store volatile i32 %9, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7006
  %10 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7008
  %11 = and i32 %10, -32769, !dbg !7008
  store volatile i32 %11, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7008
  br label %12, !dbg !7009

12:                                               ; preds = %4, %7, %1
  tail call void @z_thread_abort(%struct.k_thread* noundef %0) #22, !dbg !7010
  ret void, !dbg !7011
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #13 !dbg !7012 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7019, metadata !DIExpression()), !dbg !7022
  call void @llvm.dbg.value(metadata i8* %1, metadata !7020, metadata !DIExpression()), !dbg !7022
  call void @llvm.dbg.value(metadata i8* %0, metadata !7021, metadata !DIExpression()), !dbg !7022
  %3 = load i8, i8* %1, align 1, !dbg !7023
  %4 = icmp eq i8 %3, 0, !dbg !7024
  br i1 %4, label %13, label %5, !dbg !7025

5:                                                ; preds = %2, %5
  %6 = phi i8 [ %11, %5 ], [ %3, %2 ]
  %7 = phi i8* [ %9, %5 ], [ %0, %2 ]
  %8 = phi i8* [ %10, %5 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8* %7, metadata !7019, metadata !DIExpression()), !dbg !7022
  call void @llvm.dbg.value(metadata i8* %8, metadata !7020, metadata !DIExpression()), !dbg !7022
  store i8 %6, i8* %7, align 1, !dbg !7026
  %9 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7028
  call void @llvm.dbg.value(metadata i8* %9, metadata !7019, metadata !DIExpression()), !dbg !7022
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7029
  call void @llvm.dbg.value(metadata i8* %10, metadata !7020, metadata !DIExpression()), !dbg !7022
  %11 = load i8, i8* %10, align 1, !dbg !7023
  %12 = icmp eq i8 %11, 0, !dbg !7024
  br i1 %12, label %13, label %5, !dbg !7025, !llvm.loop !7030

13:                                               ; preds = %5, %2
  %14 = phi i8* [ %0, %2 ], [ %9, %5 ]
  store i8 0, i8* %14, align 1, !dbg !7032
  ret i8* %0, !dbg !7033
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #13 !dbg !7034 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7038, metadata !DIExpression()), !dbg !7042
  call void @llvm.dbg.value(metadata i8* %1, metadata !7039, metadata !DIExpression()), !dbg !7042
  call void @llvm.dbg.value(metadata i32 %2, metadata !7040, metadata !DIExpression()), !dbg !7042
  call void @llvm.dbg.value(metadata i8* %0, metadata !7041, metadata !DIExpression()), !dbg !7042
  %4 = icmp eq i32 %2, 0, !dbg !7043
  br i1 %4, label %22, label %5, !dbg !7044

5:                                                ; preds = %3, %11
  %6 = phi i8* [ %13, %11 ], [ %0, %3 ]
  %7 = phi i32 [ %14, %11 ], [ %2, %3 ]
  %8 = phi i8* [ %12, %11 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !7038, metadata !DIExpression()), !dbg !7042
  call void @llvm.dbg.value(metadata i32 %7, metadata !7040, metadata !DIExpression()), !dbg !7042
  call void @llvm.dbg.value(metadata i8* %8, metadata !7039, metadata !DIExpression()), !dbg !7042
  %9 = load i8, i8* %8, align 1, !dbg !7045
  %10 = icmp eq i8 %9, 0, !dbg !7046
  br i1 %10, label %16, label %11, !dbg !7047

11:                                               ; preds = %5
  store i8 %9, i8* %6, align 1, !dbg !7048
  %12 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7050
  call void @llvm.dbg.value(metadata i8* %12, metadata !7039, metadata !DIExpression()), !dbg !7042
  %13 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7051
  call void @llvm.dbg.value(metadata i8* %13, metadata !7038, metadata !DIExpression()), !dbg !7042
  %14 = add i32 %7, -1, !dbg !7052
  call void @llvm.dbg.value(metadata i32 %14, metadata !7040, metadata !DIExpression()), !dbg !7042
  %15 = icmp eq i32 %14, 0, !dbg !7043
  br i1 %15, label %22, label %5, !dbg !7044, !llvm.loop !7053

16:                                               ; preds = %5, %16
  %17 = phi i8* [ %19, %16 ], [ %6, %5 ]
  %18 = phi i32 [ %20, %16 ], [ %7, %5 ]
  call void @llvm.dbg.value(metadata i8* %17, metadata !7038, metadata !DIExpression()), !dbg !7042
  call void @llvm.dbg.value(metadata i32 %18, metadata !7040, metadata !DIExpression()), !dbg !7042
  store i8 0, i8* %17, align 1, !dbg !7055
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !7057
  call void @llvm.dbg.value(metadata i8* %19, metadata !7038, metadata !DIExpression()), !dbg !7042
  %20 = add i32 %18, -1, !dbg !7058
  call void @llvm.dbg.value(metadata i32 %20, metadata !7040, metadata !DIExpression()), !dbg !7042
  %21 = icmp eq i32 %20, 0, !dbg !7059
  br i1 %21, label %22, label %16, !dbg !7060, !llvm.loop !7061

22:                                               ; preds = %11, %16, %3
  ret i8* %0, !dbg !7063
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #6 !dbg !7064 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7068, metadata !DIExpression()), !dbg !7071
  call void @llvm.dbg.value(metadata i32 %1, metadata !7069, metadata !DIExpression()), !dbg !7071
  call void @llvm.dbg.value(metadata i32 %1, metadata !7070, metadata !DIExpression()), !dbg !7071
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !7072

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  call void @llvm.dbg.value(metadata i8* %5, metadata !7068, metadata !DIExpression()), !dbg !7071
  %6 = load i8, i8* %5, align 1, !dbg !7073
  %7 = icmp eq i8 %6, %3, !dbg !7074
  %8 = icmp eq i8 %6, 0
  %9 = or i1 %7, %8, !dbg !7075
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !7076
  call void @llvm.dbg.value(metadata i8* %10, metadata !7068, metadata !DIExpression()), !dbg !7071
  br i1 %9, label %11, label %4, !dbg !7075, !llvm.loop !7078

11:                                               ; preds = %4
  %12 = select i1 %7, i8* %5, i8* null, !dbg !7080
  ret i8* %12, !dbg !7081
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strrchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #6 !dbg !7082 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7084, metadata !DIExpression()), !dbg !7087
  call void @llvm.dbg.value(metadata i32 %1, metadata !7085, metadata !DIExpression()), !dbg !7087
  call void @llvm.dbg.value(metadata i8* null, metadata !7086, metadata !DIExpression()), !dbg !7087
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !7088

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  %6 = phi i8* [ null, %2 ], [ %9, %4 ], !dbg !7087
  call void @llvm.dbg.value(metadata i8* %6, metadata !7086, metadata !DIExpression()), !dbg !7087
  call void @llvm.dbg.value(metadata i8* %5, metadata !7084, metadata !DIExpression()), !dbg !7087
  %7 = load i8, i8* %5, align 1, !dbg !7089
  %8 = icmp eq i8 %7, %3, !dbg !7092
  %9 = select i1 %8, i8* %5, i8* %6, !dbg !7093
  call void @llvm.dbg.value(metadata i8* %9, metadata !7086, metadata !DIExpression()), !dbg !7087
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !7094
  call void @llvm.dbg.value(metadata i8* %10, metadata !7084, metadata !DIExpression()), !dbg !7087
  %11 = icmp eq i8 %7, 0, !dbg !7095
  br i1 %11, label %12, label %4, !dbg !7095, !llvm.loop !7096

12:                                               ; preds = %4
  ret i8* %9, !dbg !7098
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strlen(i8* nocapture noundef readonly %0) local_unnamed_addr #6 !dbg !7099 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7103, metadata !DIExpression()), !dbg !7105
  call void @llvm.dbg.value(metadata i32 0, metadata !7104, metadata !DIExpression()), !dbg !7105
  %2 = load i8, i8* %0, align 1, !dbg !7106
  %3 = icmp eq i8 %2, 0, !dbg !7107
  br i1 %3, label %11, label %4, !dbg !7108

4:                                                ; preds = %1, %4
  %5 = phi i32 [ %8, %4 ], [ 0, %1 ]
  %6 = phi i8* [ %7, %4 ], [ %0, %1 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !7104, metadata !DIExpression()), !dbg !7105
  call void @llvm.dbg.value(metadata i8* %6, metadata !7103, metadata !DIExpression()), !dbg !7105
  %7 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7109
  call void @llvm.dbg.value(metadata i8* %7, metadata !7103, metadata !DIExpression()), !dbg !7105
  %8 = add i32 %5, 1, !dbg !7111
  call void @llvm.dbg.value(metadata i32 %8, metadata !7104, metadata !DIExpression()), !dbg !7105
  %9 = load i8, i8* %7, align 1, !dbg !7106
  %10 = icmp eq i8 %9, 0, !dbg !7107
  br i1 %10, label %11, label %4, !dbg !7108, !llvm.loop !7112

11:                                               ; preds = %4, %1
  %12 = phi i32 [ 0, %1 ], [ %8, %4 ], !dbg !7105
  ret i32 %12, !dbg !7114
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strnlen(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #6 !dbg !7115 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7119, metadata !DIExpression()), !dbg !7122
  call void @llvm.dbg.value(metadata i32 %1, metadata !7120, metadata !DIExpression()), !dbg !7122
  call void @llvm.dbg.value(metadata i32 0, metadata !7121, metadata !DIExpression()), !dbg !7122
  %3 = load i8, i8* %0, align 1, !dbg !7123
  %4 = icmp ne i8 %3, 0, !dbg !7124
  %5 = icmp ne i32 %1, 0, !dbg !7125
  %6 = and i1 %4, %5, !dbg !7125
  br i1 %6, label %7, label %16, !dbg !7126

7:                                                ; preds = %2, %7
  %8 = phi i32 [ %11, %7 ], [ 0, %2 ]
  %9 = phi i8* [ %10, %7 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !7121, metadata !DIExpression()), !dbg !7122
  call void @llvm.dbg.value(metadata i8* %9, metadata !7119, metadata !DIExpression()), !dbg !7122
  %10 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7127
  call void @llvm.dbg.value(metadata i8* %10, metadata !7119, metadata !DIExpression()), !dbg !7122
  %11 = add nuw i32 %8, 1, !dbg !7129
  call void @llvm.dbg.value(metadata i32 %11, metadata !7121, metadata !DIExpression()), !dbg !7122
  %12 = load i8, i8* %10, align 1, !dbg !7123
  %13 = icmp ne i8 %12, 0, !dbg !7124
  %14 = icmp ult i32 %11, %1, !dbg !7125
  %15 = select i1 %13, i1 %14, i1 false, !dbg !7125
  br i1 %15, label %7, label %16, !dbg !7126, !llvm.loop !7130

16:                                               ; preds = %7, %2
  %17 = phi i32 [ 0, %2 ], [ %11, %7 ], !dbg !7122
  ret i32 %17, !dbg !7132
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1) local_unnamed_addr #6 !dbg !7133 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7137, metadata !DIExpression()), !dbg !7139
  call void @llvm.dbg.value(metadata i8* %1, metadata !7138, metadata !DIExpression()), !dbg !7139
  %3 = load i8, i8* %0, align 1, !dbg !7140
  %4 = load i8, i8* %1, align 1, !dbg !7141
  %5 = icmp ne i8 %3, %4, !dbg !7142
  %6 = icmp eq i8 %3, 0
  %7 = or i1 %6, %5, !dbg !7143
  br i1 %7, label %18, label %8, !dbg !7143

8:                                                ; preds = %2, %8
  %9 = phi i8* [ %12, %8 ], [ %1, %2 ]
  %10 = phi i8* [ %11, %8 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !7138, metadata !DIExpression()), !dbg !7139
  call void @llvm.dbg.value(metadata i8* %10, metadata !7137, metadata !DIExpression()), !dbg !7139
  %11 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !7144
  call void @llvm.dbg.value(metadata i8* %11, metadata !7137, metadata !DIExpression()), !dbg !7139
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7146
  call void @llvm.dbg.value(metadata i8* %12, metadata !7138, metadata !DIExpression()), !dbg !7139
  %13 = load i8, i8* %11, align 1, !dbg !7140
  %14 = load i8, i8* %12, align 1, !dbg !7141
  %15 = icmp ne i8 %13, %14, !dbg !7142
  %16 = icmp eq i8 %13, 0
  %17 = or i1 %16, %15, !dbg !7143
  br i1 %17, label %18, label %8, !dbg !7143, !llvm.loop !7147

18:                                               ; preds = %8, %2
  %19 = phi i8 [ %3, %2 ], [ %13, %8 ], !dbg !7140
  %20 = phi i8 [ %4, %2 ], [ %14, %8 ], !dbg !7141
  %21 = zext i8 %19 to i32, !dbg !7150
  %22 = zext i8 %20 to i32, !dbg !7151
  %23 = sub nsw i32 %21, %22, !dbg !7152
  ret i32 %23, !dbg !7153
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strncmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #6 !dbg !7154 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7158, metadata !DIExpression()), !dbg !7161
  call void @llvm.dbg.value(metadata i8* %1, metadata !7159, metadata !DIExpression()), !dbg !7161
  call void @llvm.dbg.value(metadata i32 %2, metadata !7160, metadata !DIExpression()), !dbg !7161
  %4 = icmp eq i32 %2, 0, !dbg !7162
  br i1 %4, label %23, label %5, !dbg !7162

5:                                                ; preds = %3, %14
  %6 = phi i32 [ %17, %14 ], [ %2, %3 ]
  %7 = phi i8* [ %16, %14 ], [ %1, %3 ]
  %8 = phi i8* [ %15, %14 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !7160, metadata !DIExpression()), !dbg !7161
  call void @llvm.dbg.value(metadata i8* %7, metadata !7159, metadata !DIExpression()), !dbg !7161
  call void @llvm.dbg.value(metadata i8* %8, metadata !7158, metadata !DIExpression()), !dbg !7161
  %9 = load i8, i8* %8, align 1, !dbg !7163
  %10 = load i8, i8* %7, align 1, !dbg !7164
  %11 = icmp ne i8 %9, %10, !dbg !7165
  %12 = icmp eq i8 %9, 0
  %13 = or i1 %12, %11, !dbg !7166
  br i1 %13, label %19, label %14, !dbg !7166

14:                                               ; preds = %5
  %15 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7167
  call void @llvm.dbg.value(metadata i8* %15, metadata !7158, metadata !DIExpression()), !dbg !7161
  %16 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7169
  call void @llvm.dbg.value(metadata i8* %16, metadata !7159, metadata !DIExpression()), !dbg !7161
  %17 = add i32 %6, -1, !dbg !7170
  call void @llvm.dbg.value(metadata i32 %17, metadata !7160, metadata !DIExpression()), !dbg !7161
  %18 = icmp eq i32 %17, 0, !dbg !7162
  br i1 %18, label %23, label %5, !dbg !7162, !llvm.loop !7171

19:                                               ; preds = %5
  %20 = zext i8 %9 to i32, !dbg !7174
  %21 = zext i8 %10 to i32, !dbg !7175
  %22 = sub nsw i32 %20, %21, !dbg !7176
  br label %23, !dbg !7177

23:                                               ; preds = %14, %3, %19
  %24 = phi i32 [ %22, %19 ], [ 0, %3 ], [ 0, %14 ], !dbg !7177
  ret i32 %24, !dbg !7178
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strtok_r(i8* noundef %0, i8* noundef readonly %1, i8** nocapture noundef %2) local_unnamed_addr #13 !dbg !7179 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7183, metadata !DIExpression()), !dbg !7188
  call void @llvm.dbg.value(metadata i8* %1, metadata !7184, metadata !DIExpression()), !dbg !7188
  call void @llvm.dbg.value(metadata i8** %2, metadata !7185, metadata !DIExpression()), !dbg !7188
  %4 = icmp eq i8* %0, null, !dbg !7189
  br i1 %4, label %5, label %7, !dbg !7189

5:                                                ; preds = %3
  %6 = load i8*, i8** %2, align 4, !dbg !7190
  br label %7, !dbg !7189

7:                                                ; preds = %3, %5
  %8 = phi i8* [ %6, %5 ], [ %0, %3 ], !dbg !7189
  call void @llvm.dbg.value(metadata i8* %8, metadata !7186, metadata !DIExpression()), !dbg !7188
  %9 = load i8, i8* %8, align 1, !dbg !7191
  %10 = icmp eq i8 %9, 0, !dbg !7191
  br i1 %10, label %33, label %11, !dbg !7192

11:                                               ; preds = %7, %17
  %12 = phi i8 [ %19, %17 ], [ %9, %7 ]
  %13 = phi i8* [ %18, %17 ], [ %8, %7 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !7186, metadata !DIExpression()), !dbg !7188
  %14 = zext i8 %12 to i32, !dbg !7191
  %15 = tail call i8* @strchr(i8* noundef %1, i32 noundef %14) #21, !dbg !7193
  %16 = icmp eq i8* %15, null, !dbg !7192
  br i1 %16, label %21, label %17, !dbg !7194

17:                                               ; preds = %11
  %18 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !7195
  call void @llvm.dbg.value(metadata i8* %18, metadata !7186, metadata !DIExpression()), !dbg !7188
  %19 = load i8, i8* %18, align 1, !dbg !7191
  %20 = icmp eq i8 %19, 0, !dbg !7191
  br i1 %20, label %33, label %11, !dbg !7192, !llvm.loop !7197

21:                                               ; preds = %11, %27
  %22 = phi i8 [ %29, %27 ], [ %12, %11 ]
  %23 = phi i8* [ %28, %27 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i8* %23, metadata !7187, metadata !DIExpression()), !dbg !7188
  %24 = zext i8 %22 to i32, !dbg !7199
  %25 = tail call i8* @strchr(i8* noundef %1, i32 noundef %24) #21, !dbg !7200
  %26 = icmp eq i8* %25, null, !dbg !7201
  br i1 %26, label %27, label %31, !dbg !7202

27:                                               ; preds = %21
  %28 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !7203
  call void @llvm.dbg.value(metadata i8* %28, metadata !7187, metadata !DIExpression()), !dbg !7188
  %29 = load i8, i8* %28, align 1, !dbg !7199
  %30 = icmp eq i8 %29, 0, !dbg !7199
  br i1 %30, label %33, label %21, !dbg !7205, !llvm.loop !7206

31:                                               ; preds = %21
  store i8 0, i8* %23, align 1, !dbg !7208
  %32 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !7211
  br label %33, !dbg !7212

33:                                               ; preds = %17, %27, %7, %31
  %34 = phi i8* [ %32, %31 ], [ %8, %7 ], [ %28, %27 ], [ %18, %17 ], !dbg !7188
  %35 = phi i8* [ %13, %31 ], [ null, %7 ], [ %13, %27 ], [ null, %17 ], !dbg !7188
  store i8* %34, i8** %2, align 4, !dbg !7188
  ret i8* %35, !dbg !7213
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #13 !dbg !7214 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7216, metadata !DIExpression()), !dbg !7218
  call void @llvm.dbg.value(metadata i8* %1, metadata !7217, metadata !DIExpression()), !dbg !7218
  %3 = tail call i32 @strlen(i8* noundef %0) #21, !dbg !7219
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !7220
  %5 = tail call i8* @strcpy(i8* noundef %4, i8* noundef %1) #21, !dbg !7221
  ret i8* %0, !dbg !7222
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #13 !dbg !7223 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7225, metadata !DIExpression()), !dbg !7230
  call void @llvm.dbg.value(metadata i8* %1, metadata !7226, metadata !DIExpression()), !dbg !7230
  call void @llvm.dbg.value(metadata i32 %2, metadata !7227, metadata !DIExpression()), !dbg !7230
  call void @llvm.dbg.value(metadata i8* %0, metadata !7228, metadata !DIExpression()), !dbg !7230
  %4 = tail call i32 @strlen(i8* noundef %0) #21, !dbg !7231
  call void @llvm.dbg.value(metadata i32 %4, metadata !7229, metadata !DIExpression()), !dbg !7230
  %5 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !7232
  call void @llvm.dbg.value(metadata i8* %5, metadata !7225, metadata !DIExpression()), !dbg !7230
  call void @llvm.dbg.value(metadata i8* %1, metadata !7226, metadata !DIExpression()), !dbg !7230
  call void @llvm.dbg.value(metadata i32 %2, metadata !7227, metadata !DIExpression()), !dbg !7230
  call void @llvm.dbg.value(metadata i32 %2, metadata !7227, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7230
  %6 = icmp eq i32 %2, 0, !dbg !7233
  br i1 %6, label %18, label %7, !dbg !7234

7:                                                ; preds = %3, %14
  %8 = phi i32 [ %11, %14 ], [ %2, %3 ]
  %9 = phi i8* [ %16, %14 ], [ %5, %3 ]
  %10 = phi i8* [ %15, %14 ], [ %1, %3 ]
  %11 = add i32 %8, -1, !dbg !7235
  call void @llvm.dbg.value(metadata i8* %9, metadata !7225, metadata !DIExpression()), !dbg !7230
  call void @llvm.dbg.value(metadata i8* %10, metadata !7226, metadata !DIExpression()), !dbg !7230
  %12 = load i8, i8* %10, align 1, !dbg !7236
  %13 = icmp eq i8 %12, 0, !dbg !7237
  br i1 %13, label %18, label %14, !dbg !7238

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !7239
  call void @llvm.dbg.value(metadata i8* %15, metadata !7226, metadata !DIExpression()), !dbg !7230
  %16 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7241
  call void @llvm.dbg.value(metadata i8* %16, metadata !7225, metadata !DIExpression()), !dbg !7230
  store i8 %12, i8* %9, align 1, !dbg !7242
  call void @llvm.dbg.value(metadata i32 %11, metadata !7227, metadata !DIExpression()), !dbg !7230
  call void @llvm.dbg.value(metadata i32 %11, metadata !7227, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7230
  %17 = icmp eq i32 %11, 0, !dbg !7233
  br i1 %17, label %18, label %7, !dbg !7234, !llvm.loop !7243

18:                                               ; preds = %7, %14, %3
  %19 = phi i8* [ %5, %3 ], [ %16, %14 ], [ %9, %7 ], !dbg !7230
  store i8 0, i8* %19, align 1, !dbg !7245
  ret i8* %0, !dbg !7246
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @memcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #6 !dbg !7247 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7251, metadata !DIExpression()), !dbg !7256
  call void @llvm.dbg.value(metadata i8* %1, metadata !7252, metadata !DIExpression()), !dbg !7256
  call void @llvm.dbg.value(metadata i32 %2, metadata !7253, metadata !DIExpression()), !dbg !7256
  call void @llvm.dbg.value(metadata i8* %0, metadata !7254, metadata !DIExpression()), !dbg !7256
  call void @llvm.dbg.value(metadata i8* %1, metadata !7255, metadata !DIExpression()), !dbg !7256
  %4 = icmp eq i32 %2, 0, !dbg !7257
  br i1 %4, label %31, label %5, !dbg !7259

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !7255, metadata !DIExpression()), !dbg !7256
  call void @llvm.dbg.value(metadata i8* %0, metadata !7254, metadata !DIExpression()), !dbg !7256
  call void @llvm.dbg.value(metadata i32 %2, metadata !7253, metadata !DIExpression()), !dbg !7256
  %6 = add i32 %2, -1, !dbg !7260
  call void @llvm.dbg.value(metadata i32 %6, metadata !7253, metadata !DIExpression()), !dbg !7256
  %7 = icmp eq i32 %6, 0, !dbg !7261
  br i1 %7, label %23, label %8, !dbg !7262

8:                                                ; preds = %5
  %9 = getelementptr i8, i8* %0, i32 %6, !dbg !7263
  %10 = getelementptr i8, i8* %1, i32 %6, !dbg !7263
  br label %11, !dbg !7263

11:                                               ; preds = %8, %18
  %12 = phi i32 [ %21, %18 ], [ %6, %8 ]
  %13 = phi i8* [ %20, %18 ], [ %1, %8 ]
  %14 = phi i8* [ %19, %18 ], [ %0, %8 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !7255, metadata !DIExpression()), !dbg !7256
  call void @llvm.dbg.value(metadata i8* %14, metadata !7254, metadata !DIExpression()), !dbg !7256
  %15 = load i8, i8* %14, align 1, !dbg !7264
  %16 = load i8, i8* %13, align 1, !dbg !7265
  %17 = icmp eq i8 %15, %16, !dbg !7266
  br i1 %17, label %18, label %23, !dbg !7263

18:                                               ; preds = %11
  %19 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !7267
  call void @llvm.dbg.value(metadata i8* %19, metadata !7254, metadata !DIExpression()), !dbg !7256
  %20 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !7269
  call void @llvm.dbg.value(metadata i8* %20, metadata !7255, metadata !DIExpression()), !dbg !7256
  call void @llvm.dbg.value(metadata i32 %12, metadata !7253, metadata !DIExpression()), !dbg !7256
  %21 = add i32 %12, -1, !dbg !7260
  call void @llvm.dbg.value(metadata i32 %21, metadata !7253, metadata !DIExpression()), !dbg !7256
  %22 = icmp eq i32 %21, 0, !dbg !7261
  br i1 %22, label %23, label %11, !dbg !7262, !llvm.loop !7270

23:                                               ; preds = %11, %18, %5
  %24 = phi i8* [ %0, %5 ], [ %9, %18 ], [ %14, %11 ], !dbg !7256
  %25 = phi i8* [ %1, %5 ], [ %10, %18 ], [ %13, %11 ], !dbg !7256
  %26 = load i8, i8* %24, align 1, !dbg !7272
  %27 = zext i8 %26 to i32, !dbg !7272
  %28 = load i8, i8* %25, align 1, !dbg !7273
  %29 = zext i8 %28 to i32, !dbg !7273
  %30 = sub nsw i32 %27, %29, !dbg !7274
  br label %31, !dbg !7275

31:                                               ; preds = %3, %23
  %32 = phi i32 [ %30, %23 ], [ 0, %3 ], !dbg !7256
  ret i32 %32, !dbg !7276
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memmove(i8* noundef returned %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #13 !dbg !7277 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7281, metadata !DIExpression()), !dbg !7286
  call void @llvm.dbg.value(metadata i8* %1, metadata !7282, metadata !DIExpression()), !dbg !7286
  call void @llvm.dbg.value(metadata i32 %2, metadata !7283, metadata !DIExpression()), !dbg !7286
  call void @llvm.dbg.value(metadata i8* %0, metadata !7284, metadata !DIExpression()), !dbg !7286
  call void @llvm.dbg.value(metadata i8* %1, metadata !7285, metadata !DIExpression()), !dbg !7286
  %4 = ptrtoint i8* %0 to i32, !dbg !7287
  %5 = ptrtoint i8* %1 to i32, !dbg !7287
  %6 = sub i32 %4, %5, !dbg !7287
  %7 = icmp ult i32 %6, %2, !dbg !7289
  br i1 %7, label %10, label %8, !dbg !7290

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !7285, metadata !DIExpression()), !dbg !7286
  call void @llvm.dbg.value(metadata i8* %0, metadata !7284, metadata !DIExpression()), !dbg !7286
  call void @llvm.dbg.value(metadata i32 %2, metadata !7283, metadata !DIExpression()), !dbg !7286
  %9 = icmp eq i32 %2, 0, !dbg !7291
  br i1 %9, label %26, label %17, !dbg !7293

10:                                               ; preds = %3, %10
  %11 = phi i32 [ %12, %10 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !7283, metadata !DIExpression()), !dbg !7286
  %12 = add i32 %11, -1, !dbg !7294
  call void @llvm.dbg.value(metadata i32 %12, metadata !7283, metadata !DIExpression()), !dbg !7286
  %13 = getelementptr inbounds i8, i8* %1, i32 %12, !dbg !7297
  %14 = load i8, i8* %13, align 1, !dbg !7297
  %15 = getelementptr inbounds i8, i8* %0, i32 %12, !dbg !7298
  store i8 %14, i8* %15, align 1, !dbg !7299
  %16 = icmp eq i32 %12, 0, !dbg !7300
  br i1 %16, label %26, label %10, !dbg !7301, !llvm.loop !7302

17:                                               ; preds = %8, %17
  %18 = phi i8* [ %23, %17 ], [ %1, %8 ]
  %19 = phi i8* [ %22, %17 ], [ %0, %8 ]
  %20 = phi i32 [ %24, %17 ], [ %2, %8 ]
  call void @llvm.dbg.value(metadata i8* %18, metadata !7285, metadata !DIExpression()), !dbg !7286
  call void @llvm.dbg.value(metadata i8* %19, metadata !7284, metadata !DIExpression()), !dbg !7286
  call void @llvm.dbg.value(metadata i32 %20, metadata !7283, metadata !DIExpression()), !dbg !7286
  %21 = load i8, i8* %18, align 1, !dbg !7304
  store i8 %21, i8* %19, align 1, !dbg !7306
  %22 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !7307
  call void @llvm.dbg.value(metadata i8* %22, metadata !7284, metadata !DIExpression()), !dbg !7286
  %23 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !7308
  call void @llvm.dbg.value(metadata i8* %23, metadata !7285, metadata !DIExpression()), !dbg !7286
  %24 = add i32 %20, -1, !dbg !7309
  call void @llvm.dbg.value(metadata i32 %24, metadata !7283, metadata !DIExpression()), !dbg !7286
  %25 = icmp eq i32 %24, 0, !dbg !7291
  br i1 %25, label %26, label %17, !dbg !7293, !llvm.loop !7310

26:                                               ; preds = %17, %10, %8
  ret i8* %0, !dbg !7312
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #13 !dbg !7313 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7319, metadata !DIExpression()), !dbg !7324
  call void @llvm.dbg.value(metadata i8* %1, metadata !7320, metadata !DIExpression()), !dbg !7324
  call void @llvm.dbg.value(metadata i32 %2, metadata !7321, metadata !DIExpression()), !dbg !7324
  call void @llvm.dbg.value(metadata i8* %0, metadata !7322, metadata !DIExpression()), !dbg !7324
  call void @llvm.dbg.value(metadata i8* %1, metadata !7323, metadata !DIExpression()), !dbg !7324
  %4 = icmp eq i32 %2, 0, !dbg !7325
  br i1 %4, label %14, label %5, !dbg !7326

5:                                                ; preds = %3, %5
  %6 = phi i8* [ %9, %5 ], [ %1, %3 ]
  %7 = phi i8* [ %11, %5 ], [ %0, %3 ]
  %8 = phi i32 [ %12, %5 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !7323, metadata !DIExpression()), !dbg !7324
  call void @llvm.dbg.value(metadata i8* %7, metadata !7322, metadata !DIExpression()), !dbg !7324
  call void @llvm.dbg.value(metadata i32 %8, metadata !7321, metadata !DIExpression()), !dbg !7324
  %9 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7327
  call void @llvm.dbg.value(metadata i8* %9, metadata !7323, metadata !DIExpression()), !dbg !7324
  %10 = load i8, i8* %6, align 1, !dbg !7329
  %11 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7330
  call void @llvm.dbg.value(metadata i8* %11, metadata !7322, metadata !DIExpression()), !dbg !7324
  store i8 %10, i8* %7, align 1, !dbg !7331
  %12 = add i32 %8, -1, !dbg !7332
  call void @llvm.dbg.value(metadata i32 %12, metadata !7321, metadata !DIExpression()), !dbg !7324
  %13 = icmp eq i32 %12, 0, !dbg !7325
  br i1 %13, label %14, label %5, !dbg !7326, !llvm.loop !7333

14:                                               ; preds = %5, %3
  ret i8* %0, !dbg !7335
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local i8* @memset(i8* noundef returned writeonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #16 !dbg !7336 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7340, metadata !DIExpression()), !dbg !7345
  call void @llvm.dbg.value(metadata i32 %1, metadata !7341, metadata !DIExpression()), !dbg !7345
  call void @llvm.dbg.value(metadata i32 %2, metadata !7342, metadata !DIExpression()), !dbg !7345
  call void @llvm.dbg.value(metadata i8* %0, metadata !7343, metadata !DIExpression()), !dbg !7345
  %4 = trunc i32 %1 to i8, !dbg !7346
  call void @llvm.dbg.value(metadata i8 %4, metadata !7344, metadata !DIExpression()), !dbg !7345
  call void @llvm.dbg.value(metadata i32 %2, metadata !7342, metadata !DIExpression()), !dbg !7345
  call void @llvm.dbg.value(metadata i8* %0, metadata !7343, metadata !DIExpression()), !dbg !7345
  %5 = icmp eq i32 %2, 0, !dbg !7347
  br i1 %5, label %12, label %6, !dbg !7348

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %10, %6 ], [ %2, %3 ]
  %8 = phi i8* [ %9, %6 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !7342, metadata !DIExpression()), !dbg !7345
  call void @llvm.dbg.value(metadata i8* %8, metadata !7343, metadata !DIExpression()), !dbg !7345
  %9 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7349
  call void @llvm.dbg.value(metadata i8* %9, metadata !7343, metadata !DIExpression()), !dbg !7345
  store i8 %4, i8* %8, align 1, !dbg !7351
  %10 = add i32 %7, -1, !dbg !7352
  call void @llvm.dbg.value(metadata i32 %10, metadata !7342, metadata !DIExpression()), !dbg !7345
  %11 = icmp eq i32 %10, 0, !dbg !7347
  br i1 %11, label %12, label %6, !dbg !7348, !llvm.loop !7353

12:                                               ; preds = %6, %3
  ret i8* %0, !dbg !7355
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @memchr(i8* noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #6 !dbg !7356 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7360, metadata !DIExpression()), !dbg !7366
  call void @llvm.dbg.value(metadata i32 %1, metadata !7361, metadata !DIExpression()), !dbg !7366
  call void @llvm.dbg.value(metadata i32 %2, metadata !7362, metadata !DIExpression()), !dbg !7366
  %4 = icmp eq i32 %2, 0, !dbg !7367
  br i1 %4, label %17, label %5, !dbg !7368

5:                                                ; preds = %3
  %6 = trunc i32 %1 to i8
  br label %7, !dbg !7369

7:                                                ; preds = %5, %7
  %8 = phi i32 [ %13, %7 ], [ %2, %5 ]
  %9 = phi i8* [ %12, %7 ], [ %0, %5 ], !dbg !7370
  call void @llvm.dbg.value(metadata i8* %9, metadata !7363, metadata !DIExpression()), !dbg !7370
  call void @llvm.dbg.value(metadata i32 %8, metadata !7362, metadata !DIExpression()), !dbg !7366
  call void @llvm.dbg.value(metadata i8* %9, metadata !7363, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !7370
  %10 = load i8, i8* %9, align 1, !dbg !7371
  %11 = icmp eq i8 %10, %6, !dbg !7374
  %12 = getelementptr inbounds i8, i8* %9, i32 1
  %13 = add i32 %8, -1
  %14 = icmp eq i32 %13, 0
  %15 = select i1 %11, i1 true, i1 %14, !dbg !7375
  call void @llvm.dbg.value(metadata i8* %12, metadata !7363, metadata !DIExpression()), !dbg !7370
  call void @llvm.dbg.value(metadata i32 %13, metadata !7362, metadata !DIExpression()), !dbg !7366
  br i1 %15, label %16, label %7, !dbg !7375, !llvm.loop !7376

16:                                               ; preds = %7
  br i1 %11, label %18, label %17

17:                                               ; preds = %16, %3
  br label %18, !dbg !7378

18:                                               ; preds = %16, %17
  %19 = phi i8* [ %9, %16 ], [ null, %17 ], !dbg !7366
  ret i8* %19, !dbg !7379
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__stdout_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #7 !dbg !7380 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !7382, metadata !DIExpression()), !dbg !7383
  store i32 (i32)* %0, i32 (i32)** @_stdout_hook, align 4, !dbg !7384
  ret void, !dbg !7385
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @_stdout_hook_default(i32 noundef %0) #2 !dbg !7386 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7388, metadata !DIExpression()), !dbg !7389
  ret i32 -1, !dbg !7390
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !7391 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7395, metadata !DIExpression()), !dbg !7397
  call void @llvm.dbg.value(metadata i32* %1, metadata !7396, metadata !DIExpression()), !dbg !7397
  %3 = ptrtoint i32* %1 to i32, !dbg !7398
  %4 = and i32 %3, -2, !dbg !7398
  %5 = icmp eq i32 %4, 2, !dbg !7398
  br i1 %5, label %6, label %9, !dbg !7398

6:                                                ; preds = %2
  %7 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !7399
  %8 = tail call i32 %7(i32 noundef %0) #22, !dbg !7399
  br label %9, !dbg !7400

9:                                                ; preds = %2, %6
  %10 = phi i32 [ %8, %6 ], [ -1, %2 ], !dbg !7400
  ret i32 %10, !dbg !7401
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !7402 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7404, metadata !DIExpression()), !dbg !7406
  call void @llvm.dbg.value(metadata i32* %1, metadata !7405, metadata !DIExpression()), !dbg !7406
  %3 = tail call fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) #21, !dbg !7407
  ret i32 %3, !dbg !7408
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) unnamed_addr #1 !dbg !7409 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7412, metadata !DIExpression()), !dbg !7414
  call void @llvm.dbg.value(metadata i32* %1, metadata !7413, metadata !DIExpression()), !dbg !7414
  tail call void asm sideeffect "", "~{memory}"() #20, !dbg !7415, !srcloc !7417
  %3 = tail call i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) #21, !dbg !7418
  ret i32 %3, !dbg !7419
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputs(i8* noalias noundef %0, i32* noalias noundef %1) local_unnamed_addr #1 !dbg !7420 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7425, metadata !DIExpression()), !dbg !7429
  call void @llvm.dbg.value(metadata i32* %1, metadata !7426, metadata !DIExpression()), !dbg !7429
  %3 = tail call i32 @strlen(i8* noundef %0) #22, !dbg !7430
  call void @llvm.dbg.value(metadata i32 %3, metadata !7427, metadata !DIExpression()), !dbg !7429
  %4 = tail call i32 @fwrite(i8* noundef %0, i32 noundef 1, i32 noundef %3, i32* noundef %1) #21, !dbg !7431
  call void @llvm.dbg.value(metadata i32 %4, metadata !7428, metadata !DIExpression()), !dbg !7429
  %5 = icmp ne i32 %3, %4, !dbg !7432
  %6 = sext i1 %5 to i32, !dbg !7433
  ret i32 %6, !dbg !7434
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) local_unnamed_addr #1 !dbg !7435 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7439, metadata !DIExpression()), !dbg !7443
  call void @llvm.dbg.value(metadata i32 %1, metadata !7440, metadata !DIExpression()), !dbg !7443
  call void @llvm.dbg.value(metadata i32 %2, metadata !7441, metadata !DIExpression()), !dbg !7443
  call void @llvm.dbg.value(metadata i32* %3, metadata !7442, metadata !DIExpression()), !dbg !7443
  %5 = tail call fastcc i32 @zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #21, !dbg !7444
  ret i32 %5, !dbg !7445
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) unnamed_addr #1 !dbg !7446 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7448, metadata !DIExpression()), !dbg !7452
  call void @llvm.dbg.value(metadata i32 %1, metadata !7449, metadata !DIExpression()), !dbg !7452
  call void @llvm.dbg.value(metadata i32 %2, metadata !7450, metadata !DIExpression()), !dbg !7452
  call void @llvm.dbg.value(metadata i32* %3, metadata !7451, metadata !DIExpression()), !dbg !7452
  tail call void asm sideeffect "", "~{memory}"() #20, !dbg !7453, !srcloc !7455
  %5 = tail call i32 @z_impl_zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #21, !dbg !7456
  ret i32 %5, !dbg !7457
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef readnone %3) local_unnamed_addr #1 !dbg !7458 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7460, metadata !DIExpression()), !dbg !7468
  call void @llvm.dbg.value(metadata i32 %1, metadata !7461, metadata !DIExpression()), !dbg !7468
  call void @llvm.dbg.value(metadata i32 %2, metadata !7462, metadata !DIExpression()), !dbg !7468
  call void @llvm.dbg.value(metadata i32* %3, metadata !7463, metadata !DIExpression()), !dbg !7468
  %5 = icmp ne i32* %3, inttoptr (i32 2 to i32*), !dbg !7469
  %6 = icmp ne i32* %3, inttoptr (i32 3 to i32*)
  %7 = and i1 %5, %6, !dbg !7471
  %8 = icmp eq i32 %2, 0
  %9 = or i1 %8, %7, !dbg !7471
  %10 = icmp eq i32 %1, 0
  %11 = or i1 %10, %9, !dbg !7471
  br i1 %11, label %33, label %12, !dbg !7471

12:                                               ; preds = %4, %27
  %13 = phi i32 [ %28, %27 ], [ %2, %4 ], !dbg !7468
  %14 = phi i8* [ %19, %27 ], [ %0, %4 ], !dbg !7468
  call void @llvm.dbg.value(metadata i8* %14, metadata !7466, metadata !DIExpression()), !dbg !7468
  call void @llvm.dbg.value(metadata i32 %13, metadata !7464, metadata !DIExpression()), !dbg !7468
  call void @llvm.dbg.value(metadata i32 %1, metadata !7465, metadata !DIExpression()), !dbg !7468
  br label %15, !dbg !7472

15:                                               ; preds = %24, %12
  %16 = phi i32 [ %1, %12 ], [ %25, %24 ], !dbg !7474
  %17 = phi i8* [ %14, %12 ], [ %19, %24 ], !dbg !7468
  call void @llvm.dbg.value(metadata i8* %17, metadata !7466, metadata !DIExpression()), !dbg !7468
  call void @llvm.dbg.value(metadata i32 %16, metadata !7465, metadata !DIExpression()), !dbg !7468
  %18 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !7475
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !7478
  call void @llvm.dbg.value(metadata i8* %19, metadata !7466, metadata !DIExpression()), !dbg !7468
  %20 = load i8, i8* %17, align 1, !dbg !7479
  %21 = zext i8 %20 to i32, !dbg !7480
  %22 = tail call i32 %18(i32 noundef %21) #22, !dbg !7475
  %23 = icmp eq i32 %22, -1, !dbg !7481
  br i1 %23, label %30, label %24, !dbg !7482

24:                                               ; preds = %15
  %25 = add i32 %16, -1, !dbg !7483
  call void @llvm.dbg.value(metadata i32 %25, metadata !7465, metadata !DIExpression()), !dbg !7468
  %26 = icmp eq i32 %25, 0, !dbg !7484
  br i1 %26, label %27, label %15, !dbg !7485, !llvm.loop !7486

27:                                               ; preds = %24
  %28 = add i32 %13, -1, !dbg !7488
  call void @llvm.dbg.value(metadata i32 %28, metadata !7464, metadata !DIExpression()), !dbg !7468
  %29 = icmp eq i32 %28, 0, !dbg !7489
  br i1 %29, label %30, label %12, !dbg !7490, !llvm.loop !7491

30:                                               ; preds = %27, %15
  %31 = phi i32 [ %13, %15 ], [ 0, %27 ], !dbg !7468
  call void @llvm.dbg.value(metadata i32 %31, metadata !7464, metadata !DIExpression()), !dbg !7468
  call void @llvm.dbg.label(metadata !7467), !dbg !7494
  %32 = sub i32 %2, %31, !dbg !7495
  br label %33, !dbg !7496

33:                                               ; preds = %4, %30
  %34 = phi i32 [ %32, %30 ], [ 0, %4 ], !dbg !7468
  ret i32 %34, !dbg !7497
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @puts(i8* noundef %0) local_unnamed_addr #1 !dbg !7498 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7502, metadata !DIExpression()), !dbg !7503
  %2 = tail call i32 @fputs(i8* noundef %0, i32* noundef nonnull inttoptr (i32 2 to i32*)) #21, !dbg !7504
  %3 = icmp eq i32 %2, -1, !dbg !7506
  br i1 %3, label %8, label %4, !dbg !7507

4:                                                ; preds = %1
  %5 = tail call i32 @fputc(i32 noundef 10, i32* noundef nonnull inttoptr (i32 2 to i32*)) #21, !dbg !7508
  %6 = icmp eq i32 %5, -1, !dbg !7509
  %7 = sext i1 %6 to i32, !dbg !7508
  br label %8, !dbg !7510

8:                                                ; preds = %1, %4
  %9 = phi i32 [ %7, %4 ], [ -1, %1 ], !dbg !7503
  ret i32 %9, !dbg !7511
}

; Function Attrs: noinline nounwind optsize
define dso_local void @end_report() local_unnamed_addr #1 !dbg !7512 {
  %1 = load i32, i32* @test_status, align 4, !dbg !7513
  %2 = icmp eq i32 %1, 0, !dbg !7513
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([69 x i8], [69 x i8]* @.str.67, i32 0, i32 0)) #22, !dbg !7515
  %3 = select i1 %2, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3.68, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2.69, i32 0, i32 0)
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.1.70, i32 0, i32 0), i8* noundef %3) #22, !dbg !7515
  ret void, !dbg !7516
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @z_impl_z_test_1cpu_start() local_unnamed_addr #2 !dbg !7517 {
  ret void, !dbg !7518
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @z_impl_z_test_1cpu_stop() local_unnamed_addr #2 !dbg !7519 {
  ret void, !dbg !7520
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ztest_skip_failed_assumption() local_unnamed_addr #1 !dbg !7521 {
  store i1 true, i1* @current_test_failed_assumption, align 1, !dbg !7522
  tail call void @ztest_test_skip() #21, !dbg !7525
  ret void, !dbg !7526
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ztest_test_skip() local_unnamed_addr #1 !dbg !7527 {
  %1 = load i32, i32* @phase, align 4, !dbg !7528
  switch i32 %1, label %4 [
    i32 0, label %2
    i32 1, label %3
    i32 2, label %3
  ], !dbg !7529

2:                                                ; preds = %0
  store i32 4, i32* @test_result, align 4, !dbg !7530
  br label %6, !dbg !7532

3:                                                ; preds = %0, %0
  store i32 3, i32* @test_result, align 4, !dbg !7533
  tail call fastcc void @test_finalize() #21, !dbg !7534
  br label %6, !dbg !7535

4:                                                ; preds = %0
  %5 = tail call fastcc i8* @get_friendly_phase_name(i32 noundef %1) #21, !dbg !7536
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.6.71, i32 0, i32 0), i8* noundef %5) #22, !dbg !7537
  store i32 2, i32* @test_status, align 4, !dbg !7538
  br label %6, !dbg !7539

6:                                                ; preds = %4, %3, %2
  ret void, !dbg !7540
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @test_finalize() unnamed_addr #1 !dbg !7541 {
  tail call fastcc void @k_thread_abort.79(%struct.k_thread* noundef nonnull @ztest_thread) #21, !dbg !7542
  %1 = tail call fastcc %struct.k_thread* @k_current_get.80() #23, !dbg !7545
  tail call fastcc void @k_thread_abort.79(%struct.k_thread* noundef %1) #21, !dbg !7546
  ret void, !dbg !7547
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i8* @get_friendly_phase_name(i32 noundef %0) unnamed_addr #2 !dbg !7548 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7552, metadata !DIExpression()), !dbg !7553
  %2 = icmp ult i32 %0, 6, !dbg !7554
  br i1 %2, label %3, label %6, !dbg !7554

3:                                                ; preds = %1
  %4 = getelementptr inbounds [6 x i8*], [6 x i8*]* @switch.table.get_friendly_phase_name, i32 0, i32 %0, !dbg !7554
  %5 = load i8*, i8** %4, align 4, !dbg !7554
  br label %6, !dbg !7554

6:                                                ; preds = %1, %3
  %7 = phi i8* [ %5, %3 ], [ getelementptr inbounds ([10 x i8], [10 x i8]* @.str.16.72, i32 0, i32 0), %1 ], !dbg !7555
  ret i8* %7, !dbg !7557
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort.79(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !7558 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !7564, metadata !DIExpression()), !dbg !7565
  tail call void asm sideeffect "", "~{memory}"() #20, !dbg !7566, !srcloc !7568
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #22, !dbg !7569
  ret void, !dbg !7570
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.80() unnamed_addr #11 !dbg !7571 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.81() #23, !dbg !7574
  ret %struct.k_thread* %1, !dbg !7575
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.81() unnamed_addr #11 !dbg !7576 {
  tail call void asm sideeffect "", "~{memory}"() #20, !dbg !7577, !srcloc !7579
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #22, !dbg !7580
  ret %struct.k_thread* %1, !dbg !7581
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ztest_test_fail() local_unnamed_addr #1 !dbg !7582 {
  %1 = load i32, i32* @phase, align 4, !dbg !7583
  switch i32 %1, label %4 [
    i32 0, label %2
    i32 1, label %3
    i32 2, label %3
  ], !dbg !7584

2:                                                ; preds = %0
  store i32 5, i32* @test_result, align 4, !dbg !7585
  br label %6, !dbg !7587

3:                                                ; preds = %0, %0
  store i32 2, i32* @test_result, align 4, !dbg !7588
  tail call fastcc void @test_finalize() #21, !dbg !7589
  br label %6, !dbg !7590

4:                                                ; preds = %0
  %5 = tail call fastcc i8* @get_friendly_phase_name(i32 noundef %1) #21, !dbg !7591
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.4.82, i32 0, i32 0), i8* noundef %5) #22, !dbg !7592
  store i32 2, i32* @test_status, align 4, !dbg !7593
  br label %6, !dbg !7594

6:                                                ; preds = %4, %3, %2
  ret void, !dbg !7595
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ztest_test_pass() local_unnamed_addr #1 !dbg !7596 {
  %1 = load i32, i32* @phase, align 4, !dbg !7597
  %2 = icmp eq i32 %1, 2, !dbg !7598
  br i1 %2, label %3, label %4, !dbg !7598

3:                                                ; preds = %0
  store i32 1, i32* @test_result, align 4, !dbg !7599
  br label %8, !dbg !7601

4:                                                ; preds = %0
  %5 = tail call fastcc i8* @get_friendly_phase_name(i32 noundef %1) #21, !dbg !7602
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.5.83, i32 0, i32 0), i8* noundef %5) #22, !dbg !7603
  store i32 2, i32* @test_status, align 4, !dbg !7604
  %6 = load i32, i32* @phase, align 4, !dbg !7605
  %7 = icmp eq i32 %6, 1, !dbg !7607
  br i1 %7, label %8, label %9, !dbg !7608

8:                                                ; preds = %4, %3
  tail call fastcc void @test_finalize() #21, !dbg !7609
  br label %9, !dbg !7610

9:                                                ; preds = %8, %4
  ret void, !dbg !7610
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ztest_simple_1cpu_before(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !7611 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7613, metadata !DIExpression()), !dbg !7614
  tail call fastcc void @z_test_1cpu_start() #21, !dbg !7615
  ret void, !dbg !7616
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_test_1cpu_start() unnamed_addr #1 !dbg !7617 {
  tail call void asm sideeffect "", "~{memory}"() #20, !dbg !7619, !srcloc !7621
  ret void, !dbg !7622
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ztest_simple_1cpu_after(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !7623 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7625, metadata !DIExpression()), !dbg !7626
  tail call fastcc void @z_test_1cpu_stop() #21, !dbg !7627
  ret void, !dbg !7628
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_test_1cpu_stop() unnamed_addr #1 !dbg !7629 {
  tail call void asm sideeffect "", "~{memory}"() #20, !dbg !7630, !srcloc !7632
  ret void, !dbg !7633
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.ztest_unit_test* @z_ztest_get_next_test(i8* noundef %0, %struct.ztest_unit_test* noundef readonly %1) local_unnamed_addr #1 !dbg !7634 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7655, metadata !DIExpression()), !dbg !7658
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %1, metadata !7656, metadata !DIExpression()), !dbg !7658
  %3 = icmp eq %struct.ztest_unit_test* %1, null, !dbg !7659
  %4 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %1, i32 1, !dbg !7660
  %5 = select i1 %3, %struct.ztest_unit_test* getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_start, i32 0, i32 0), %struct.ztest_unit_test* %4, !dbg !7660
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %5, metadata !7657, metadata !DIExpression()), !dbg !7658
  %6 = icmp ult %struct.ztest_unit_test* %5, getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_end, i32 0, i32 0), !dbg !7661
  br i1 %6, label %7, label %16, !dbg !7664

7:                                                ; preds = %2, %13
  %8 = phi %struct.ztest_unit_test* [ %14, %13 ], [ %5, %2 ]
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %8, metadata !7657, metadata !DIExpression()), !dbg !7658
  %9 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %8, i32 0, i32 0, !dbg !7665
  %10 = load i8*, i8** %9, align 4, !dbg !7665
  %11 = tail call i32 @strcmp(i8* noundef %0, i8* noundef %10) #22, !dbg !7668
  %12 = icmp eq i32 %11, 0, !dbg !7669
  br i1 %12, label %16, label %13, !dbg !7670

13:                                               ; preds = %7
  %14 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %8, i32 1, !dbg !7671
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %14, metadata !7657, metadata !DIExpression()), !dbg !7658
  %15 = icmp ult %struct.ztest_unit_test* %14, getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_end, i32 0, i32 0), !dbg !7661
  br i1 %15, label %7, label %16, !dbg !7664, !llvm.loop !7672

16:                                               ; preds = %7, %13, %2
  %17 = phi %struct.ztest_unit_test* [ null, %2 ], [ null, %13 ], [ %8, %7 ], !dbg !7658
  ret %struct.ztest_unit_test* %17, !dbg !7674
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_ztest_run_test_suite(i8* noundef %0) local_unnamed_addr #1 !dbg !7675 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7677, metadata !DIExpression()), !dbg !7678
  %2 = tail call fastcc %struct.ztest_suite_node* @ztest_find_test_suite(i8* noundef %0) #21, !dbg !7679
  %3 = tail call fastcc i32 @z_ztest_run_test_suite_ptr(%struct.ztest_suite_node* noundef %2) #21, !dbg !7680
  ret i32 %3, !dbg !7681
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.ztest_suite_node* @ztest_find_test_suite(i8* noundef %0) unnamed_addr #1 !dbg !7682 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7703, metadata !DIExpression()), !dbg !7705
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), metadata !7704, metadata !DIExpression()), !dbg !7705
  br i1 icmp ult (%struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), %struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_end, i32 0, i32 0)), label %2, label %11, !dbg !7706

2:                                                ; preds = %1, %8
  %3 = phi %struct.ztest_suite_node* [ %9, %8 ], [ getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), %1 ]
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %3, metadata !7704, metadata !DIExpression()), !dbg !7705
  %4 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %3, i32 0, i32 0, !dbg !7708
  %5 = load i8*, i8** %4, align 4, !dbg !7708
  %6 = tail call i32 @strcmp(i8* noundef %0, i8* noundef %5) #22, !dbg !7712
  %7 = icmp eq i32 %6, 0, !dbg !7713
  br i1 %7, label %11, label %8, !dbg !7714

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %3, i32 1, !dbg !7715
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %9, metadata !7704, metadata !DIExpression()), !dbg !7705
  %10 = icmp ult %struct.ztest_suite_node* %9, getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_end, i32 0, i32 0), !dbg !7716
  br i1 %10, label %2, label %11, !dbg !7706, !llvm.loop !7717

11:                                               ; preds = %2, %8, %1
  %12 = phi %struct.ztest_suite_node* [ null, %1 ], [ null, %8 ], [ %3, %2 ], !dbg !7705
  ret %struct.ztest_suite_node* %12, !dbg !7719
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_ztest_run_test_suite_ptr(%struct.ztest_suite_node* noundef %0) unnamed_addr #1 !dbg !7720 {
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %0, metadata !7724, metadata !DIExpression()), !dbg !7731
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* null, metadata !7725, metadata !DIExpression()), !dbg !7731
  call void @llvm.dbg.value(metadata i8* null, metadata !7726, metadata !DIExpression()), !dbg !7731
  call void @llvm.dbg.value(metadata i32 0, metadata !7727, metadata !DIExpression()), !dbg !7731
  call void @llvm.dbg.value(metadata i32 0, metadata !7728, metadata !DIExpression()), !dbg !7731
  %2 = icmp eq %struct.ztest_suite_node* %0, null, !dbg !7732
  br i1 %2, label %3, label %4, !dbg !7734

3:                                                ; preds = %1
  store i32 2, i32* @test_status, align 4, !dbg !7735
  br label %68, !dbg !7737

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %0, i32 0, i32 0, !dbg !7738
  %6 = load i8*, i8** %5, align 4, !dbg !7738
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.17.84, i32 0, i32 0), i8* noundef %6) #22, !dbg !7738
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([69 x i8], [69 x i8]* @.str.67, i32 0, i32 0)) #22, !dbg !7738
  store i1 false, i1* @current_test_failed_assumption, align 1, !dbg !7740
  store i32 0, i32* @test_result, align 4, !dbg !7741
  store i32 0, i32* @phase, align 4, !dbg !7742
  %7 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %0, i32 0, i32 1, !dbg !7743
  %8 = load i8* ()*, i8* ()** %7, align 4, !dbg !7743
  %9 = icmp eq i8* ()* %8, null, !dbg !7745
  br i1 %9, label %12, label %10, !dbg !7746

10:                                               ; preds = %4
  %11 = tail call i8* %8() #22, !dbg !7747
  call void @llvm.dbg.value(metadata i8* %11, metadata !7726, metadata !DIExpression()), !dbg !7731
  br label %12, !dbg !7749

12:                                               ; preds = %10, %4
  %13 = phi i8* [ %11, %10 ], [ null, %4 ], !dbg !7731
  call void @llvm.dbg.value(metadata i8* %13, metadata !7726, metadata !DIExpression()), !dbg !7731
  call void @llvm.dbg.value(metadata i32 0, metadata !7729, metadata !DIExpression()), !dbg !7750
  call void @llvm.dbg.value(metadata i32 undef, metadata !7729, metadata !DIExpression()), !dbg !7750
  call void @llvm.dbg.value(metadata i32 0, metadata !7727, metadata !DIExpression()), !dbg !7731
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* null, metadata !7725, metadata !DIExpression()), !dbg !7731
  %14 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** getelementptr inbounds (%struct.ztest_arch_api, %struct.ztest_arch_api* @ztest_api, i32 0, i32 2), align 4
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* null, metadata !7725, metadata !DIExpression()), !dbg !7731
  br label %15, !dbg !7751

15:                                               ; preds = %12, %49
  %16 = phi %struct.ztest_unit_test* [ %19, %49 ], [ null, %12 ], !dbg !7731
  %17 = phi i32 [ %50, %49 ], [ 0, %12 ], !dbg !7754
  call void @llvm.dbg.value(metadata i32 %17, metadata !7727, metadata !DIExpression()), !dbg !7731
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %16, metadata !7725, metadata !DIExpression()), !dbg !7731
  %18 = load i8*, i8** %5, align 4, !dbg !7755
  %19 = tail call %struct.ztest_unit_test* @z_ztest_get_next_test(i8* noundef %18, %struct.ztest_unit_test* noundef %16) #21, !dbg !7756
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %19, metadata !7725, metadata !DIExpression()), !dbg !7731
  %20 = icmp eq %struct.ztest_unit_test* %19, null, !dbg !7757
  br i1 %20, label %53, label %21, !dbg !7751

21:                                               ; preds = %15
  %22 = load i8*, i8** %5, align 4, !dbg !7758
  %23 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %19, i32 0, i32 1, !dbg !7761
  %24 = load i8*, i8** %23, align 4, !dbg !7761
  %25 = tail call zeroext i1 %14(i8* noundef %22, i8* noundef %24) #22, !dbg !7762
  br i1 %25, label %26, label %49, !dbg !7763

26:                                               ; preds = %21
  %27 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %19, i32 0, i32 4, !dbg !7764
  %28 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %27, align 4, !dbg !7764
  %29 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %28, i32 0, i32 0, !dbg !7766
  %30 = load i32, i32* %29, align 4, !dbg !7767
  %31 = add i32 %30, 1, !dbg !7767
  store i32 %31, i32* %29, align 4, !dbg !7767
  %32 = tail call fastcc i32 @run_test(%struct.ztest_suite_node* noundef nonnull %0, %struct.ztest_unit_test* noundef nonnull %19, i8* noundef %13) #21, !dbg !7768
  call void @llvm.dbg.value(metadata i32 %32, metadata !7728, metadata !DIExpression()), !dbg !7731
  switch i32 %32, label %49 [
    i32 0, label %33
    i32 2, label %36
    i32 1, label %39
  ], !dbg !7769

33:                                               ; preds = %26
  %34 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %27, align 4, !dbg !7770
  %35 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %34, i32 0, i32 3, !dbg !7773
  br label %42, !dbg !7774

36:                                               ; preds = %26
  %37 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %27, align 4, !dbg !7775
  %38 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %37, i32 0, i32 1, !dbg !7778
  br label %42, !dbg !7779

39:                                               ; preds = %26
  %40 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %27, align 4, !dbg !7780
  %41 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %40, i32 0, i32 2, !dbg !7783
  br label %42, !dbg !7784

42:                                               ; preds = %36, %39, %33
  %43 = phi i32* [ %38, %36 ], [ %41, %39 ], [ %35, %33 ]
  %44 = load i32, i32* %43, align 4, !dbg !7785
  %45 = add i32 %44, 1, !dbg !7785
  store i32 %45, i32* %43, align 4, !dbg !7785
  %46 = icmp eq i32 %32, 1, !dbg !7786
  %47 = zext i1 %46 to i32, !dbg !7788
  %48 = add nsw i32 %17, %47, !dbg !7788
  br label %49, !dbg !7788

49:                                               ; preds = %42, %26, %21
  %50 = phi i32 [ %17, %21 ], [ %17, %26 ], [ %48, %42 ], !dbg !7754
  call void @llvm.dbg.value(metadata i32 %50, metadata !7727, metadata !DIExpression()), !dbg !7731
  %51 = load i32, i32* @test_status, align 4, !dbg !7789
  %52 = icmp eq i32 %51, 2, !dbg !7791
  br i1 %52, label %59, label %15, !dbg !7792, !llvm.loop !7793

53:                                               ; preds = %15
  %54 = load i32, i32* @test_status, align 4, !dbg !7795
  %55 = icmp eq i32 %54, 0, !dbg !7751
  call void @llvm.dbg.value(metadata i32 %17, metadata !7727, metadata !DIExpression()), !dbg !7731
  %56 = icmp ne i32 %17, 0
  %57 = select i1 %55, i1 %56, i1 false, !dbg !7797
  br i1 %57, label %58, label %59, !dbg !7797

58:                                               ; preds = %53
  store i32 1, i32* @test_status, align 4, !dbg !7798
  br label %59, !dbg !7800

59:                                               ; preds = %49, %53, %58
  %60 = phi i32 [ %17, %53 ], [ %17, %58 ], [ %50, %49 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !7729, metadata !DIExpression()), !dbg !7750
  call void @llvm.dbg.value(metadata i32 %17, metadata !7727, metadata !DIExpression()), !dbg !7731
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* undef, metadata !7725, metadata !DIExpression()), !dbg !7731
  %61 = icmp sgt i32 %60, 0, !dbg !7801
  %62 = load i8*, i8** %5, align 4, !dbg !7804
  %63 = select i1 %61, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.19.85, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.18.86, i32 0, i32 0)
  tail call void (i8*, ...) @printk(i8* noundef %63, i8* noundef %62) #22, !dbg !7804
  store i32 4, i32* @phase, align 4, !dbg !7805
  %64 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %0, i32 0, i32 4, !dbg !7806
  %65 = load void (i8*)*, void (i8*)** %64, align 4, !dbg !7806
  %66 = icmp eq void (i8*)* %65, null, !dbg !7808
  br i1 %66, label %68, label %67, !dbg !7809

67:                                               ; preds = %59
  tail call void %65(i8* noundef %13) #22, !dbg !7810
  br label %68, !dbg !7812

68:                                               ; preds = %59, %67, %3
  %69 = phi i32 [ -1, %3 ], [ %60, %67 ], [ %60, %59 ], !dbg !7731
  ret i32 %69, !dbg !7813
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @run_test(%struct.ztest_suite_node* noundef %0, %struct.ztest_unit_test* noundef %1, i8* noundef %2) unnamed_addr #1 !dbg !7814 {
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %0, metadata !7818, metadata !DIExpression()), !dbg !7822
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %1, metadata !7819, metadata !DIExpression()), !dbg !7822
  call void @llvm.dbg.value(metadata i8* %2, metadata !7820, metadata !DIExpression()), !dbg !7822
  call void @llvm.dbg.value(metadata i32 0, metadata !7821, metadata !DIExpression()), !dbg !7822
  %4 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %1, i32 0, i32 1, !dbg !7823
  %5 = load i8*, i8** %4, align 4, !dbg !7823
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.20.87, i32 0, i32 0), i8* noundef %5) #22, !dbg !7823
  store i32 1, i32* @phase, align 4, !dbg !7825
  tail call fastcc void @get_start_time_cyc() #21, !dbg !7826
  %6 = bitcast %struct.ztest_suite_node* %0 to i8*, !dbg !7829
  %7 = bitcast %struct.ztest_unit_test* %1 to i8*, !dbg !7830
  %8 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %1, i32 0, i32 3, !dbg !7831
  %9 = load i32, i32* %8, align 4, !dbg !7831
  %10 = or i32 %9, 8, !dbg !7832
  tail call fastcc void @k_thread_create(i8* noundef %6, i8* noundef %7, i8* noundef %2, i32 noundef %10) #21, !dbg !7833
  tail call fastcc void @k_object_access_grant() #21, !dbg !7834
  tail call fastcc void @k_object_access_grant() #21, !dbg !7834
  tail call fastcc void @k_object_access_grant() #21, !dbg !7834
  %11 = load i8*, i8** %4, align 4, !dbg !7835
  %12 = icmp eq i8* %11, null, !dbg !7837
  br i1 %12, label %14, label %13, !dbg !7838

13:                                               ; preds = %3
  tail call fastcc void @k_thread_name_set(i8* noundef nonnull %11) #21, !dbg !7839
  br label %14, !dbg !7841

14:                                               ; preds = %13, %3
  %15 = load i32, i32* @test_result, align 4, !dbg !7842
  %16 = and i32 %15, -2, !dbg !7844
  %17 = icmp eq i32 %16, 4, !dbg !7844
  br i1 %17, label %19, label %18, !dbg !7844

18:                                               ; preds = %14
  tail call fastcc void @k_thread_start() #21, !dbg !7845
  tail call fastcc void @k_thread_join() #21, !dbg !7847
  br label %19, !dbg !7848

19:                                               ; preds = %18, %14
  store i32 3, i32* @phase, align 4, !dbg !7849
  %20 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %0, i32 0, i32 3, !dbg !7850
  %21 = load void (i8*)*, void (i8*)** %20, align 4, !dbg !7850
  %22 = icmp eq void (i8*)* %21, null, !dbg !7852
  br i1 %22, label %24, label %23, !dbg !7853

23:                                               ; preds = %19
  tail call void %21(i8* noundef %2) #22, !dbg !7854
  br label %24, !dbg !7856

24:                                               ; preds = %23, %19
  tail call fastcc void @run_test_rules(i1 noundef zeroext false, %struct.ztest_unit_test* noundef nonnull %1, i8* noundef %2) #21, !dbg !7857
  tail call fastcc void @get_test_duration_ms() #21, !dbg !7858
  %25 = load i32, i32* @tc_spend_time, align 4, !dbg !7859
  %26 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %1, i32 0, i32 4, !dbg !7861
  %27 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %26, align 4, !dbg !7861
  %28 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %27, i32 0, i32 4, !dbg !7862
  %29 = load i32, i32* %28, align 4, !dbg !7862
  %30 = icmp ugt i32 %25, %29, !dbg !7863
  br i1 %30, label %31, label %32, !dbg !7864

31:                                               ; preds = %24
  store i32 %25, i32* %28, align 4, !dbg !7865
  br label %32, !dbg !7867

32:                                               ; preds = %31, %24
  store i32 5, i32* @phase, align 4, !dbg !7868
  %33 = load i32, i32* @test_result, align 4, !dbg !7869
  switch i32 %33, label %34 [
    i32 5, label %38
    i32 2, label %38
  ], !dbg !7871

34:                                               ; preds = %32
  %35 = add i32 %33, -3, !dbg !7872
  %36 = icmp ult i32 %35, 2, !dbg !7872
  %37 = select i1 %36, i32 2, i32 0, !dbg !7872
  br label %38, !dbg !7872

38:                                               ; preds = %34, %32, %32
  %39 = phi i32 [ 1, %32 ], [ 1, %32 ], [ %37, %34 ], !dbg !7822
  call void @llvm.dbg.value(metadata i32 %39, metadata !7821, metadata !DIExpression()), !dbg !7822
  tail call fastcc void @cleanup_test() #21, !dbg !7874
  call void @llvm.dbg.value(metadata i32 %39, metadata !7821, metadata !DIExpression()), !dbg !7822
  %40 = tail call fastcc i32 @get_final_test_result(%struct.ztest_unit_test* noundef nonnull %1, i32 noundef %39) #21, !dbg !7877
  call void @llvm.dbg.value(metadata i32 %40, metadata !7821, metadata !DIExpression()), !dbg !7822
  %41 = tail call fastcc i8* @TC_RESULT_TO_STR(i32 noundef %40) #21, !dbg !7878
  %42 = load i8*, i8** %4, align 4, !dbg !7878
  %43 = load i32, i32* @tc_spend_time, align 4, !dbg !7878
  %44 = freeze i32 %43
  %45 = udiv i32 %44, 1000, !dbg !7878
  %46 = mul i32 %45, 1000
  %47 = sub i32 %44, %46
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.21.88, i32 0, i32 0), i8* noundef %41, i8* noundef %42, i32 noundef %45, i32 noundef %47) #22, !dbg !7878
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([69 x i8], [69 x i8]* @.str.67, i32 0, i32 0)) #22, !dbg !7878
  %48 = icmp eq i32 %40, 2, !dbg !7880
  br i1 %48, label %49, label %52, !dbg !7882

49:                                               ; preds = %38
  %50 = load i1, i1* @current_test_failed_assumption, align 1, !dbg !7883
  br i1 %50, label %51, label %52, !dbg !7884

51:                                               ; preds = %49
  store i32 1, i32* @test_status, align 4, !dbg !7885
  br label %52, !dbg !7887

52:                                               ; preds = %51, %49, %38
  ret i32 %40, !dbg !7888
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @get_start_time_cyc() unnamed_addr #1 !dbg !7889 {
  %1 = tail call fastcc i32 @k_cycle_get_32() #21, !dbg !7890
  store i32 %1, i32* @tc_start_time, align 4, !dbg !7891
  ret void, !dbg !7892
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_create(i8* noundef %0, i8* noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !7893 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !7912, metadata !DIExpression()), !dbg !7913
  call void @llvm.dbg.value(metadata %struct.k_thread* @ztest_thread, metadata !7903, metadata !DIExpression()), !dbg !7913
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* getelementptr inbounds ([1024 x %struct.z_thread_stack_element], [1024 x %struct.z_thread_stack_element]* @ztest_thread_stack, i32 0, i32 0), metadata !7904, metadata !DIExpression()), !dbg !7913
  call void @llvm.dbg.value(metadata i32 1024, metadata !7905, metadata !DIExpression()), !dbg !7913
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* @test_cb, metadata !7906, metadata !DIExpression()), !dbg !7913
  call void @llvm.dbg.value(metadata i8* %0, metadata !7907, metadata !DIExpression()), !dbg !7913
  call void @llvm.dbg.value(metadata i8* %1, metadata !7908, metadata !DIExpression()), !dbg !7913
  call void @llvm.dbg.value(metadata i8* %2, metadata !7909, metadata !DIExpression()), !dbg !7913
  call void @llvm.dbg.value(metadata i32 -1, metadata !7910, metadata !DIExpression()), !dbg !7913
  call void @llvm.dbg.value(metadata i32 %3, metadata !7911, metadata !DIExpression()), !dbg !7913
  tail call void asm sideeffect "", "~{memory}"() #20, !dbg !7914, !srcloc !7916
  %5 = tail call %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef nonnull @ztest_thread, %struct.z_thread_stack_element* noundef getelementptr inbounds ([1024 x %struct.z_thread_stack_element], [1024 x %struct.z_thread_stack_element]* @ztest_thread_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @test_cb, i8* noundef %0, i8* noundef %1, i8* noundef %2, i32 noundef -1, i32 noundef %3, [1 x i64] [i64 -1]) #22, !dbg !7917
  ret void, !dbg !7918
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_object_access_grant() unnamed_addr #1 !dbg !7919 {
  call void @llvm.dbg.value(metadata i8* undef, metadata !7924, metadata !DIExpression()), !dbg !7926
  call void @llvm.dbg.value(metadata %struct.k_thread* @ztest_thread, metadata !7925, metadata !DIExpression()), !dbg !7926
  tail call void asm sideeffect "", "~{memory}"() #20, !dbg !7927, !srcloc !7929
  ret void, !dbg !7930
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_name_set(i8* noundef %0) unnamed_addr #1 !dbg !7931 {
  call void @llvm.dbg.value(metadata %struct.k_thread* @ztest_thread, metadata !7935, metadata !DIExpression()), !dbg !7937
  call void @llvm.dbg.value(metadata i8* %0, metadata !7936, metadata !DIExpression()), !dbg !7937
  tail call void asm sideeffect "", "~{memory}"() #20, !dbg !7938, !srcloc !7940
  %2 = tail call i32 @z_impl_k_thread_name_set(%struct.k_thread* noundef nonnull @ztest_thread, i8* noundef %0) #22, !dbg !7941
  ret void, !dbg !7942
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start() unnamed_addr #1 !dbg !7943 {
  call void @llvm.dbg.value(metadata %struct.k_thread* @ztest_thread, metadata !7945, metadata !DIExpression()), !dbg !7946
  tail call void asm sideeffect "", "~{memory}"() #20, !dbg !7947, !srcloc !7949
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef nonnull @ztest_thread) #22, !dbg !7950
  ret void, !dbg !7951
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_join() unnamed_addr #1 !dbg !7952 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !7957, metadata !DIExpression()), !dbg !7958
  call void @llvm.dbg.value(metadata %struct.k_thread* @ztest_thread, metadata !7956, metadata !DIExpression()), !dbg !7958
  tail call void asm sideeffect "", "~{memory}"() #20, !dbg !7959, !srcloc !7961
  %1 = tail call i32 @z_impl_k_thread_join(%struct.k_thread* noundef nonnull @ztest_thread, [1 x i64] [i64 -1]) #22, !dbg !7962
  ret void, !dbg !7963
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @run_test_rules(i1 noundef zeroext %0, %struct.ztest_unit_test* noundef %1, i8* noundef %2) unnamed_addr #1 !dbg !7964 {
  call void @llvm.dbg.value(metadata i1 %0, metadata !7968, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7984
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %1, metadata !7969, metadata !DIExpression()), !dbg !7984
  call void @llvm.dbg.value(metadata i8* %2, metadata !7970, metadata !DIExpression()), !dbg !7984
  call void @llvm.dbg.value(metadata %struct.ztest_test_rule* getelementptr inbounds ([0 x %struct.ztest_test_rule], [0 x %struct.ztest_test_rule]* @_ztest_test_rule_list_start, i32 0, i32 0), metadata !7971, metadata !DIExpression()), !dbg !7985
  br i1 icmp ult (%struct.ztest_test_rule* getelementptr inbounds ([0 x %struct.ztest_test_rule], [0 x %struct.ztest_test_rule]* @_ztest_test_rule_list_start, i32 0, i32 0), %struct.ztest_test_rule* getelementptr inbounds ([0 x %struct.ztest_test_rule], [0 x %struct.ztest_test_rule]* @_ztest_test_rule_list_end, i32 0, i32 0)), label %5, label %4, !dbg !7986

4:                                                ; preds = %17, %3
  ret void, !dbg !7987

5:                                                ; preds = %3, %17
  %6 = phi %struct.ztest_test_rule* [ %18, %17 ], [ getelementptr inbounds ([0 x %struct.ztest_test_rule], [0 x %struct.ztest_test_rule]* @_ztest_test_rule_list_start, i32 0, i32 0), %3 ]
  call void @llvm.dbg.value(metadata %struct.ztest_test_rule* %6, metadata !7971, metadata !DIExpression()), !dbg !7985
  br i1 %0, label %7, label %11, !dbg !7988

7:                                                ; preds = %5
  %8 = getelementptr inbounds %struct.ztest_test_rule, %struct.ztest_test_rule* %6, i32 0, i32 0, !dbg !7992
  %9 = load void (%struct.ztest_unit_test*, i8*)*, void (%struct.ztest_unit_test*, i8*)** %8, align 4, !dbg !7992
  %10 = icmp eq void (%struct.ztest_unit_test*, i8*)* %9, null, !dbg !7993
  br i1 %10, label %17, label %15, !dbg !7994

11:                                               ; preds = %5
  %12 = getelementptr inbounds %struct.ztest_test_rule, %struct.ztest_test_rule* %6, i32 0, i32 1, !dbg !7995
  %13 = load void (%struct.ztest_unit_test*, i8*)*, void (%struct.ztest_unit_test*, i8*)** %12, align 4, !dbg !7995
  %14 = icmp eq void (%struct.ztest_unit_test*, i8*)* %13, null, !dbg !7997
  br i1 %14, label %17, label %15, !dbg !7998

15:                                               ; preds = %11, %7
  %16 = phi void (%struct.ztest_unit_test*, i8*)* [ %9, %7 ], [ %13, %11 ]
  tail call void %16(%struct.ztest_unit_test* noundef %1, i8* noundef %2) #22, !dbg !7999
  br label %17, !dbg !8000

17:                                               ; preds = %15, %7, %11
  %18 = getelementptr inbounds %struct.ztest_test_rule, %struct.ztest_test_rule* %6, i32 1, !dbg !8000
  call void @llvm.dbg.value(metadata %struct.ztest_test_rule* %18, metadata !7971, metadata !DIExpression()), !dbg !7985
  %19 = icmp ult %struct.ztest_test_rule* %18, getelementptr inbounds ([0 x %struct.ztest_test_rule], [0 x %struct.ztest_test_rule]* @_ztest_test_rule_list_end, i32 0, i32 0), !dbg !8001
  br i1 %19, label %5, label %4, !dbg !7986, !llvm.loop !8002
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @get_test_duration_ms() unnamed_addr #1 !dbg !8004 {
  %1 = tail call fastcc i32 @k_cycle_get_32() #21, !dbg !8007
  %2 = load i32, i32* @tc_start_time, align 4, !dbg !8008
  %3 = sub i32 %1, %2, !dbg !8009
  call void @llvm.dbg.value(metadata i32 %3, metadata !8006, metadata !DIExpression()), !dbg !8010
  %4 = tail call fastcc i32 @k_cyc_to_ms_ceil32(i32 noundef %3) #21, !dbg !8011
  store i32 %4, i32* @tc_spend_time, align 4, !dbg !8012
  ret void, !dbg !8013
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cleanup_test() unnamed_addr #1 !dbg !8014 {
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* undef, metadata !8018, metadata !DIExpression()), !dbg !8021
  call void @llvm.dbg.value(metadata i32 0, metadata !8019, metadata !DIExpression()), !dbg !8021
  call void @llvm.dbg.value(metadata i32 0, metadata !8020, metadata !DIExpression()), !dbg !8021
  tail call fastcc void @k_thread_abort.79(%struct.k_thread* noundef nonnull @ztest_thread) #21, !dbg !8022
  call void @llvm.dbg.value(metadata i32 0, metadata !8019, metadata !DIExpression()), !dbg !8021
  ret void, !dbg !8025
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @get_final_test_result(%struct.ztest_unit_test* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !8026 {
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %0, metadata !8030, metadata !DIExpression()), !dbg !8041
  call void @llvm.dbg.value(metadata i32 %1, metadata !8031, metadata !DIExpression()), !dbg !8041
  call void @llvm.dbg.value(metadata i32 -1, metadata !8032, metadata !DIExpression()), !dbg !8041
  call void @llvm.dbg.value(metadata %struct.ztest_expected_result_entry* getelementptr inbounds ([0 x %struct.ztest_expected_result_entry], [0 x %struct.ztest_expected_result_entry]* @_ztest_expected_result_entry_list_start, i32 0, i32 0), metadata !8033, metadata !DIExpression()), !dbg !8042
  br i1 icmp ult (%struct.ztest_expected_result_entry* getelementptr inbounds ([0 x %struct.ztest_expected_result_entry], [0 x %struct.ztest_expected_result_entry]* @_ztest_expected_result_entry_list_start, i32 0, i32 0), %struct.ztest_expected_result_entry* getelementptr inbounds ([0 x %struct.ztest_expected_result_entry], [0 x %struct.ztest_expected_result_entry]* @_ztest_expected_result_entry_list_end, i32 0, i32 0)), label %3, label %31, !dbg !8043

3:                                                ; preds = %2
  %4 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %0, i32 0, i32 1
  %5 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %0, i32 0, i32 0
  br label %6, !dbg !8043

6:                                                ; preds = %3, %19
  %7 = phi %struct.ztest_expected_result_entry* [ getelementptr inbounds ([0 x %struct.ztest_expected_result_entry], [0 x %struct.ztest_expected_result_entry]* @_ztest_expected_result_entry_list_start, i32 0, i32 0), %3 ], [ %20, %19 ]
  call void @llvm.dbg.value(metadata %struct.ztest_expected_result_entry* %7, metadata !8033, metadata !DIExpression()), !dbg !8042
  %8 = getelementptr inbounds %struct.ztest_expected_result_entry, %struct.ztest_expected_result_entry* %7, i32 0, i32 1, !dbg !8044
  %9 = load i8*, i8** %8, align 4, !dbg !8044
  %10 = load i8*, i8** %4, align 4, !dbg !8048
  %11 = tail call i32 @strcmp(i8* noundef %9, i8* noundef %10) #22, !dbg !8049
  %12 = icmp eq i32 %11, 0, !dbg !8050
  br i1 %12, label %13, label %19, !dbg !8051

13:                                               ; preds = %6
  %14 = getelementptr inbounds %struct.ztest_expected_result_entry, %struct.ztest_expected_result_entry* %7, i32 0, i32 0, !dbg !8052
  %15 = load i8*, i8** %14, align 4, !dbg !8052
  %16 = load i8*, i8** %5, align 4, !dbg !8053
  %17 = tail call i32 @strcmp(i8* noundef %15, i8* noundef %16) #22, !dbg !8054
  %18 = icmp eq i32 %17, 0, !dbg !8055
  br i1 %18, label %22, label %19, !dbg !8056

19:                                               ; preds = %6, %13
  %20 = getelementptr inbounds %struct.ztest_expected_result_entry, %struct.ztest_expected_result_entry* %7, i32 1, !dbg !8057
  call void @llvm.dbg.value(metadata %struct.ztest_expected_result_entry* %20, metadata !8033, metadata !DIExpression()), !dbg !8042
  %21 = icmp ult %struct.ztest_expected_result_entry* %20, getelementptr inbounds ([0 x %struct.ztest_expected_result_entry], [0 x %struct.ztest_expected_result_entry]* @_ztest_expected_result_entry_list_end, i32 0, i32 0), !dbg !8058
  br i1 %21, label %6, label %31, !dbg !8043, !llvm.loop !8059

22:                                               ; preds = %13
  %23 = getelementptr inbounds %struct.ztest_expected_result_entry, %struct.ztest_expected_result_entry* %7, i32 0, i32 2, !dbg !8061
  %24 = load i32, i32* %23, align 4, !dbg !8061
  call void @llvm.dbg.value(metadata i32 %24, metadata !8032, metadata !DIExpression()), !dbg !8041
  switch i32 %24, label %31 [
    i32 0, label %25
    i32 1, label %28
  ], !dbg !8063

25:                                               ; preds = %22
  %26 = icmp ne i32 %1, 1, !dbg !8064
  %27 = zext i1 %26 to i32, !dbg !8067
  br label %31, !dbg !8068

28:                                               ; preds = %22
  %29 = icmp ne i32 %1, 2, !dbg !8069
  %30 = zext i1 %29 to i32, !dbg !8072
  br label %31, !dbg !8073

31:                                               ; preds = %19, %2, %22, %28, %25
  %32 = phi i32 [ %27, %25 ], [ %30, %28 ], [ %1, %22 ], [ %1, %2 ], [ %1, %19 ], !dbg !8041
  ret i32 %32, !dbg !8074
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i8* @TC_RESULT_TO_STR(i32 noundef %0) unnamed_addr #2 !dbg !8075 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8079, metadata !DIExpression()), !dbg !8080
  %2 = icmp ult i32 %0, 3, !dbg !8081
  br i1 %2, label %3, label %6, !dbg !8081

3:                                                ; preds = %1
  %4 = getelementptr inbounds [3 x i8*], [3 x i8*]* @switch.table.TC_RESULT_TO_STR, i32 0, i32 %0, !dbg !8081
  %5 = load i8*, i8** %4, align 4, !dbg !8081
  br label %6, !dbg !8081

6:                                                ; preds = %1, %3
  %7 = phi i8* [ %5, %3 ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.27.89, i32 0, i32 0), %1 ], !dbg !8082
  ret i8* %7, !dbg !8084
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32() unnamed_addr #1 !dbg !8085 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32() #21, !dbg !8086
  ret i32 %1, !dbg !8087
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @k_cyc_to_ms_ceil32(i32 noundef %0) unnamed_addr #2 !dbg !8088 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8093, metadata !DIExpression()), !dbg !8094
  %2 = zext i32 %0 to i64, !dbg !8095
  call void @llvm.dbg.value(metadata i64 %2, metadata !8096, metadata !DIExpression()), !dbg !8113
  call void @llvm.dbg.value(metadata i32 200000000, metadata !8101, metadata !DIExpression()), !dbg !8113
  call void @llvm.dbg.value(metadata i32 1000, metadata !8102, metadata !DIExpression()), !dbg !8113
  call void @llvm.dbg.value(metadata i8 1, metadata !8103, metadata !DIExpression()), !dbg !8113
  call void @llvm.dbg.value(metadata i8 1, metadata !8104, metadata !DIExpression()), !dbg !8113
  call void @llvm.dbg.value(metadata i8 1, metadata !8105, metadata !DIExpression()), !dbg !8113
  call void @llvm.dbg.value(metadata i8 0, metadata !8106, metadata !DIExpression()), !dbg !8113
  call void @llvm.dbg.value(metadata i8 0, metadata !8107, metadata !DIExpression()), !dbg !8113
  call void @llvm.dbg.value(metadata i8 1, metadata !8108, metadata !DIExpression()), !dbg !8113
  call void @llvm.dbg.value(metadata i64 0, metadata !8109, metadata !DIExpression()), !dbg !8113
  call void @llvm.dbg.value(metadata i64 199999, metadata !8109, metadata !DIExpression()), !dbg !8113
  call void @llvm.dbg.value(metadata i64 199999, metadata !8109, metadata !DIExpression()), !dbg !8113
  call void @llvm.dbg.value(metadata i64 199999, metadata !8109, metadata !DIExpression()), !dbg !8113
  call void @llvm.dbg.value(metadata i64 199999, metadata !8109, metadata !DIExpression()), !dbg !8113
  %3 = add nuw nsw i64 %2, 199999, !dbg !8115
  call void @llvm.dbg.value(metadata i64 %3, metadata !8096, metadata !DIExpression()), !dbg !8113
  %4 = icmp ult i32 %0, -199999
  %5 = trunc i64 %3 to i32, !dbg !8118
  %6 = udiv i32 %5, 200000, !dbg !8118
  %7 = zext i32 %6 to i64, !dbg !8118
  %8 = udiv i64 %3, 200000, !dbg !8118
  %9 = select i1 %4, i64 %7, i64 %8, !dbg !8118
  %10 = trunc i64 %9 to i32, !dbg !8120
  ret i32 %10, !dbg !8121
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32() unnamed_addr #1 !dbg !8122 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #22, !dbg !8124
  ret i32 %1, !dbg !8125
}

; Function Attrs: noinline nounwind optsize
define internal void @test_cb(i8* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2) #1 !dbg !8126 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8128, metadata !DIExpression()), !dbg !8133
  call void @llvm.dbg.value(metadata i8* %1, metadata !8129, metadata !DIExpression()), !dbg !8133
  call void @llvm.dbg.value(metadata i8* %2, metadata !8130, metadata !DIExpression()), !dbg !8133
  call void @llvm.dbg.value(metadata i8* %0, metadata !8131, metadata !DIExpression()), !dbg !8133
  %4 = bitcast i8* %1 to %struct.ztest_unit_test*, !dbg !8134
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %4, metadata !8132, metadata !DIExpression()), !dbg !8133
  store i32 0, i32* @test_result, align 4, !dbg !8135
  tail call fastcc void @run_test_rules(i1 noundef zeroext true, %struct.ztest_unit_test* noundef %4, i8* noundef %2) #21, !dbg !8136
  %5 = getelementptr inbounds i8, i8* %0, i32 8, !dbg !8137
  %6 = bitcast i8* %5 to void (i8*)**, !dbg !8137
  %7 = load void (i8*)*, void (i8*)** %6, align 4, !dbg !8137
  %8 = icmp eq void (i8*)* %7, null, !dbg !8139
  br i1 %8, label %10, label %9, !dbg !8140

9:                                                ; preds = %3
  tail call void %7(i8* noundef %2) #22, !dbg !8141
  br label %10, !dbg !8143

10:                                               ; preds = %9, %3
  tail call fastcc void @run_test_functions(%struct.ztest_unit_test* noundef %4, i8* noundef %2) #21, !dbg !8144
  store i32 1, i32* @test_result, align 4, !dbg !8145
  ret void, !dbg !8146
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @run_test_functions(%struct.ztest_unit_test* nocapture noundef readonly %0, i8* noundef %1) unnamed_addr #1 !dbg !8147 {
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* undef, metadata !8151, metadata !DIExpression()), !dbg !8154
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %0, metadata !8152, metadata !DIExpression()), !dbg !8154
  call void @llvm.dbg.value(metadata i8* %1, metadata !8153, metadata !DIExpression()), !dbg !8154
  store i32 2, i32* @phase, align 4, !dbg !8155
  %3 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %0, i32 0, i32 2, !dbg !8156
  %4 = load void (i8*)*, void (i8*)** %3, align 4, !dbg !8156
  tail call void %4(i8* noundef %1) #22, !dbg !8157
  ret void, !dbg !8158
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_ztest_run_test_suites(i8* noundef %0) local_unnamed_addr #1 !dbg !8159 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8163, metadata !DIExpression()), !dbg !8167
  call void @llvm.dbg.value(metadata i32 0, metadata !8164, metadata !DIExpression()), !dbg !8167
  %2 = load i32, i32* @test_status, align 4, !dbg !8168
  %3 = icmp eq i32 %2, 2, !dbg !8170
  br i1 %3, label %17, label %4, !dbg !8171

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), metadata !8165, metadata !DIExpression()), !dbg !8172
  call void @llvm.dbg.value(metadata i32 0, metadata !8164, metadata !DIExpression()), !dbg !8167
  br i1 icmp ult (%struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), %struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_end, i32 0, i32 0)), label %5, label %15, !dbg !8173

5:                                                ; preds = %4, %5
  %6 = phi %struct.ztest_suite_node* [ %12, %5 ], [ getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), %4 ]
  %7 = phi i32 [ %9, %5 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %6, metadata !8165, metadata !DIExpression()), !dbg !8172
  call void @llvm.dbg.value(metadata i32 %7, metadata !8164, metadata !DIExpression()), !dbg !8167
  %8 = tail call fastcc i32 @__ztest_run_test_suite(%struct.ztest_suite_node* noundef nonnull %6, i8* noundef %0) #21, !dbg !8174
  %9 = add nsw i32 %8, %7, !dbg !8177
  call void @llvm.dbg.value(metadata i32 %9, metadata !8164, metadata !DIExpression()), !dbg !8167
  %10 = load i32, i32* @test_status, align 4, !dbg !8178
  %11 = icmp ne i32 %10, 2, !dbg !8180
  %12 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %6, i32 1, !dbg !8181
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %12, metadata !8165, metadata !DIExpression()), !dbg !8172
  %13 = icmp ult %struct.ztest_suite_node* %12, getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_end, i32 0, i32 0)
  %14 = select i1 %11, i1 %13, i1 false, !dbg !8182
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %12, metadata !8165, metadata !DIExpression()), !dbg !8172
  call void @llvm.dbg.value(metadata i32 %9, metadata !8164, metadata !DIExpression()), !dbg !8167
  br i1 %14, label %5, label %15, !dbg !8182, !llvm.loop !8183

15:                                               ; preds = %5, %4
  %16 = phi i32 [ 0, %4 ], [ %9, %5 ], !dbg !8167
  call void @llvm.dbg.value(metadata i32 %16, metadata !8164, metadata !DIExpression()), !dbg !8167
  tail call fastcc void @__ztest_show_suite_summary() #21, !dbg !8185
  br label %17, !dbg !8186

17:                                               ; preds = %1, %15
  %18 = phi i32 [ %16, %15 ], [ 0, %1 ], !dbg !8167
  ret i32 %18, !dbg !8187
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @__ztest_run_test_suite(%struct.ztest_suite_node* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !8188 {
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %0, metadata !8192, metadata !DIExpression()), !dbg !8203
  call void @llvm.dbg.value(metadata i8* %1, metadata !8193, metadata !DIExpression()), !dbg !8203
  %3 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %0, i32 0, i32 6, !dbg !8204
  %4 = load %struct.ztest_suite_stats*, %struct.ztest_suite_stats** %3, align 4, !dbg !8204
  call void @llvm.dbg.value(metadata %struct.ztest_suite_stats* %4, metadata !8194, metadata !DIExpression()), !dbg !8203
  call void @llvm.dbg.value(metadata i32 0, metadata !8195, metadata !DIExpression()), !dbg !8203
  tail call fastcc void @__ztest_init_unit_test_result_for_suite(%struct.ztest_suite_node* noundef %0) #21, !dbg !8205
  call void @llvm.dbg.value(metadata i32 0, metadata !8196, metadata !DIExpression()), !dbg !8206
  call void @llvm.dbg.value(metadata i32 0, metadata !8195, metadata !DIExpression()), !dbg !8203
  call void @llvm.dbg.value(metadata i32 undef, metadata !8196, metadata !DIExpression()), !dbg !8206
  %5 = load i1 (i8*, %struct.ztest_suite_node*)*, i1 (i8*, %struct.ztest_suite_node*)** getelementptr inbounds (%struct.ztest_arch_api, %struct.ztest_arch_api* @ztest_api, i32 0, i32 1), align 4
  %6 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %4, i32 0, i32 1
  %7 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %4, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 0, metadata !8195, metadata !DIExpression()), !dbg !8203
  %8 = tail call zeroext i1 %5(i8* noundef %1, %struct.ztest_suite_node* noundef %0) #22, !dbg !8207
  br i1 %8, label %9, label %16, !dbg !8208

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %4, i32 0, i32 2
  %11 = tail call fastcc i32 @z_ztest_run_test_suite_ptr(%struct.ztest_suite_node* noundef nonnull %0) #21, !dbg !8209
  call void @llvm.dbg.value(metadata i32 %11, metadata !8198, metadata !DIExpression()), !dbg !8210
  call void @llvm.dbg.value(metadata i32 1, metadata !8195, metadata !DIExpression()), !dbg !8203
  %12 = load i32, i32* %7, align 4, !dbg !8211
  %13 = add i32 %12, 1, !dbg !8211
  store i32 %13, i32* %7, align 4, !dbg !8211
  %14 = icmp ne i32 %11, 0, !dbg !8212
  %15 = zext i1 %14 to i32, !dbg !8213
  br label %16, !dbg !8214

16:                                               ; preds = %2, %9
  %17 = phi i32* [ %10, %9 ], [ %6, %2 ]
  %18 = phi i32 [ %15, %9 ], [ 1, %2 ]
  %19 = phi i32 [ 1, %9 ], [ 0, %2 ], !dbg !8203
  %20 = load i32, i32* %17, align 4, !dbg !8215
  %21 = add i32 %20, %18, !dbg !8215
  store i32 %21, i32* %17, align 4, !dbg !8215
  call void @llvm.dbg.value(metadata i32 %19, metadata !8195, metadata !DIExpression()), !dbg !8203
  call void @llvm.dbg.value(metadata i32 undef, metadata !8196, metadata !DIExpression()), !dbg !8206
  ret i32 %19, !dbg !8216
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__ztest_show_suite_summary() unnamed_addr #1 !dbg !8217 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.28.93, i32 0, i32 0)) #22, !dbg !8221
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), metadata !8219, metadata !DIExpression()), !dbg !8222
  br i1 icmp ult (%struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), %struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_end, i32 0, i32 0)), label %2, label %1, !dbg !8223

1:                                                ; preds = %2, %0
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.29.94, i32 0, i32 0)) #22, !dbg !8224
  ret void, !dbg !8225

2:                                                ; preds = %0, %2
  %3 = phi %struct.ztest_suite_node* [ %4, %2 ], [ getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), %0 ]
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %3, metadata !8219, metadata !DIExpression()), !dbg !8222
  tail call fastcc void @__ztest_show_suite_summary_verbose(%struct.ztest_suite_node* noundef nonnull %3) #21, !dbg !8226
  %4 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %3, i32 1, !dbg !8229
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %4, metadata !8219, metadata !DIExpression()), !dbg !8222
  %5 = icmp ult %struct.ztest_suite_node* %4, getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_end, i32 0, i32 0), !dbg !8230
  br i1 %5, label %2, label %1, !dbg !8223, !llvm.loop !8231
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__ztest_show_suite_summary_verbose(%struct.ztest_suite_node* nocapture noundef readonly %0) unnamed_addr #1 !dbg !8233 {
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %0, metadata !8237, metadata !DIExpression()), !dbg !8241
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* null, metadata !8238, metadata !DIExpression()), !dbg !8241
  call void @llvm.dbg.value(metadata i32 0, metadata !8239, metadata !DIExpression()), !dbg !8241
  call void @llvm.dbg.value(metadata i32 0, metadata !8240, metadata !DIExpression()), !dbg !8241
  tail call fastcc void @__ztest_show_suite_summary_oneline(%struct.ztest_suite_node* noundef %0) #21, !dbg !8242
  %2 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 poison, metadata !8240, metadata !DIExpression()), !dbg !8241
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* null, metadata !8238, metadata !DIExpression()), !dbg !8241
  %3 = load i8*, i8** %2, align 4, !dbg !8243
  %4 = tail call %struct.ztest_unit_test* @z_ztest_get_next_test(i8* noundef %3, %struct.ztest_unit_test* noundef null) #21, !dbg !8244
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %4, metadata !8238, metadata !DIExpression()), !dbg !8241
  %5 = icmp eq %struct.ztest_unit_test* %4, null, !dbg !8245
  br i1 %5, label %36, label %6, !dbg !8246

6:                                                ; preds = %1, %20
  %7 = phi %struct.ztest_unit_test* [ %34, %20 ], [ %4, %1 ]
  %8 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %7, i32 0, i32 4, !dbg !8247
  %9 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %8, align 4, !dbg !8247
  %10 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %9, i32 0, i32 1, !dbg !8250
  %11 = load i32, i32* %10, align 4, !dbg !8250
  %12 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %9, i32 0, i32 0, !dbg !8251
  %13 = load i32, i32* %12, align 4, !dbg !8251
  %14 = icmp eq i32 %11, %13, !dbg !8252
  br i1 %14, label %20, label %15, !dbg !8253

15:                                               ; preds = %6
  %16 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %9, i32 0, i32 3, !dbg !8254
  %17 = load i32, i32* %16, align 4, !dbg !8254
  %18 = icmp ne i32 %17, %13, !dbg !8256
  %19 = zext i1 %18 to i32
  br label %20

20:                                               ; preds = %15, %6
  %21 = phi i32 [ 2, %6 ], [ %19, %15 ], !dbg !8257
  call void @llvm.dbg.value(metadata i32 %21, metadata !8239, metadata !DIExpression()), !dbg !8241
  %22 = tail call fastcc i8* @TC_RESULT_TO_STR(i32 noundef %21) #21, !dbg !8258
  %23 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %7, i32 0, i32 0, !dbg !8258
  %24 = load i8*, i8** %23, align 4, !dbg !8258
  %25 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %7, i32 0, i32 1, !dbg !8258
  %26 = load i8*, i8** %25, align 4, !dbg !8258
  %27 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %9, i32 0, i32 4, !dbg !8258
  %28 = load i32, i32* %27, align 4, !dbg !8258
  %29 = freeze i32 %28
  %30 = udiv i32 %29, 1000, !dbg !8258
  %31 = mul i32 %30, 1000
  %32 = sub i32 %29, %31
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.30.95, i32 0, i32 0), i8* noundef %22, i8* noundef %24, i8* noundef %26, i32 noundef %30, i32 noundef %32) #22, !dbg !8258
  call void @llvm.dbg.value(metadata i32 poison, metadata !8240, metadata !DIExpression()), !dbg !8241
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %7, metadata !8238, metadata !DIExpression()), !dbg !8241
  %33 = load i8*, i8** %2, align 4, !dbg !8243
  %34 = tail call %struct.ztest_unit_test* @z_ztest_get_next_test(i8* noundef %33, %struct.ztest_unit_test* noundef nonnull %7) #21, !dbg !8244
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %34, metadata !8238, metadata !DIExpression()), !dbg !8241
  %35 = icmp eq %struct.ztest_unit_test* %34, null, !dbg !8245
  br i1 %35, label %36, label %6, !dbg !8246, !llvm.loop !8259

36:                                               ; preds = %20, %1
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.31.96, i32 0, i32 0)) #22, !dbg !8261
  ret void, !dbg !8262
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__ztest_show_suite_summary_oneline(%struct.ztest_suite_node* nocapture noundef readonly %0) unnamed_addr #1 !dbg !8263 {
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %0, metadata !8265, metadata !DIExpression()), !dbg !8279
  call void @llvm.dbg.value(metadata i32 0, metadata !8266, metadata !DIExpression()), !dbg !8279
  call void @llvm.dbg.value(metadata i32 0, metadata !8267, metadata !DIExpression()), !dbg !8279
  call void @llvm.dbg.value(metadata i32 0, metadata !8268, metadata !DIExpression()), !dbg !8279
  call void @llvm.dbg.value(metadata i32 0, metadata !8269, metadata !DIExpression()), !dbg !8279
  call void @llvm.dbg.value(metadata i32 0, metadata !8270, metadata !DIExpression()), !dbg !8279
  call void @llvm.dbg.value(metadata i32 0, metadata !8271, metadata !DIExpression()), !dbg !8279
  call void @llvm.dbg.value(metadata i32 0, metadata !8272, metadata !DIExpression()), !dbg !8279
  call void @llvm.dbg.value(metadata i32 0, metadata !8273, metadata !DIExpression()), !dbg !8279
  call void @llvm.dbg.value(metadata i32 0, metadata !8274, metadata !DIExpression()), !dbg !8279
  call void @llvm.dbg.value(metadata i32 0, metadata !8275, metadata !DIExpression()), !dbg !8279
  call void @llvm.dbg.value(metadata i32 0, metadata !8276, metadata !DIExpression()), !dbg !8279
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* null, metadata !8277, metadata !DIExpression()), !dbg !8279
  call void @llvm.dbg.value(metadata i32 0, metadata !8278, metadata !DIExpression()), !dbg !8279
  %2 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 0, metadata !8278, metadata !DIExpression()), !dbg !8279
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* null, metadata !8277, metadata !DIExpression()), !dbg !8279
  call void @llvm.dbg.value(metadata i32 0, metadata !8269, metadata !DIExpression()), !dbg !8279
  call void @llvm.dbg.value(metadata i32 0, metadata !8268, metadata !DIExpression()), !dbg !8279
  call void @llvm.dbg.value(metadata i32 0, metadata !8267, metadata !DIExpression()), !dbg !8279
  call void @llvm.dbg.value(metadata i32 0, metadata !8266, metadata !DIExpression()), !dbg !8279
  %3 = load i8*, i8** %2, align 4, !dbg !8280
  %4 = tail call %struct.ztest_unit_test* @z_ztest_get_next_test(i8* noundef %3, %struct.ztest_unit_test* noundef null) #21, !dbg !8281
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %4, metadata !8277, metadata !DIExpression()), !dbg !8279
  %5 = icmp eq %struct.ztest_unit_test* %4, null, !dbg !8282
  br i1 %5, label %58, label %6, !dbg !8283

6:                                                ; preds = %1, %34
  %7 = phi %struct.ztest_unit_test* [ %39, %34 ], [ %4, %1 ]
  %8 = phi i32 [ %18, %34 ], [ 0, %1 ]
  %9 = phi i32 [ %13, %34 ], [ 0, %1 ]
  %10 = phi i32 [ %37, %34 ], [ 0, %1 ]
  %11 = phi i32 [ %36, %34 ], [ 0, %1 ]
  %12 = phi i32 [ %35, %34 ], [ 0, %1 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !8278, metadata !DIExpression()), !dbg !8279
  call void @llvm.dbg.value(metadata i32 %9, metadata !8269, metadata !DIExpression()), !dbg !8279
  call void @llvm.dbg.value(metadata i32 %10, metadata !8268, metadata !DIExpression()), !dbg !8279
  call void @llvm.dbg.value(metadata i32 %11, metadata !8267, metadata !DIExpression()), !dbg !8279
  call void @llvm.dbg.value(metadata i32 %12, metadata !8266, metadata !DIExpression()), !dbg !8279
  %13 = add nuw nsw i32 %9, 1, !dbg !8284
  call void @llvm.dbg.value(metadata i32 %13, metadata !8269, metadata !DIExpression()), !dbg !8279
  %14 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %7, i32 0, i32 4, !dbg !8286
  %15 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %14, align 4, !dbg !8286
  %16 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %15, i32 0, i32 4, !dbg !8287
  %17 = load i32, i32* %16, align 4, !dbg !8287
  %18 = add i32 %17, %8, !dbg !8288
  call void @llvm.dbg.value(metadata i32 %18, metadata !8278, metadata !DIExpression()), !dbg !8279
  %19 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %15, i32 0, i32 1, !dbg !8289
  %20 = load i32, i32* %19, align 4, !dbg !8289
  %21 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %15, i32 0, i32 0, !dbg !8291
  %22 = load i32, i32* %21, align 4, !dbg !8291
  %23 = icmp eq i32 %20, %22, !dbg !8292
  br i1 %23, label %24, label %26, !dbg !8293

24:                                               ; preds = %6
  %25 = add nsw i32 %10, 1, !dbg !8294
  call void @llvm.dbg.value(metadata i32 %25, metadata !8268, metadata !DIExpression()), !dbg !8279
  br label %34, !dbg !8296

26:                                               ; preds = %6
  %27 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %15, i32 0, i32 3, !dbg !8297
  %28 = load i32, i32* %27, align 4, !dbg !8297
  %29 = icmp eq i32 %28, %22, !dbg !8299
  br i1 %29, label %30, label %32, !dbg !8300

30:                                               ; preds = %26
  %31 = add nsw i32 %12, 1, !dbg !8301
  call void @llvm.dbg.value(metadata i32 %31, metadata !8266, metadata !DIExpression()), !dbg !8279
  br label %34, !dbg !8303

32:                                               ; preds = %26
  %33 = add nsw i32 %11, 1, !dbg !8304
  call void @llvm.dbg.value(metadata i32 %33, metadata !8267, metadata !DIExpression()), !dbg !8279
  br label %34

34:                                               ; preds = %30, %32, %24
  %35 = phi i32 [ %12, %24 ], [ %31, %30 ], [ %12, %32 ], !dbg !8279
  %36 = phi i32 [ %11, %24 ], [ %11, %30 ], [ %33, %32 ], !dbg !8279
  %37 = phi i32 [ %25, %24 ], [ %10, %30 ], [ %10, %32 ], !dbg !8279
  call void @llvm.dbg.value(metadata i32 %18, metadata !8278, metadata !DIExpression()), !dbg !8279
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %7, metadata !8277, metadata !DIExpression()), !dbg !8279
  call void @llvm.dbg.value(metadata i32 %13, metadata !8269, metadata !DIExpression()), !dbg !8279
  call void @llvm.dbg.value(metadata i32 %37, metadata !8268, metadata !DIExpression()), !dbg !8279
  call void @llvm.dbg.value(metadata i32 %36, metadata !8267, metadata !DIExpression()), !dbg !8279
  call void @llvm.dbg.value(metadata i32 %35, metadata !8266, metadata !DIExpression()), !dbg !8279
  %38 = load i8*, i8** %2, align 4, !dbg !8280
  %39 = tail call %struct.ztest_unit_test* @z_ztest_get_next_test(i8* noundef %38, %struct.ztest_unit_test* noundef nonnull %7) #21, !dbg !8281
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %39, metadata !8277, metadata !DIExpression()), !dbg !8279
  %40 = icmp eq %struct.ztest_unit_test* %39, null, !dbg !8282
  br i1 %40, label %41, label %6, !dbg !8283, !llvm.loop !8306

41:                                               ; preds = %34
  %42 = icmp eq i32 %13, %37, !dbg !8308
  br i1 %42, label %58, label %43, !dbg !8310

43:                                               ; preds = %41
  %44 = icmp sgt i32 %36, 0, !dbg !8311
  %45 = zext i1 %44 to i32, !dbg !8313
  call void @llvm.dbg.value(metadata i32 %45, metadata !8276, metadata !DIExpression()), !dbg !8279
  %46 = sub nsw i32 %13, %37, !dbg !8314
  call void @llvm.dbg.value(metadata i32 %46, metadata !8270, metadata !DIExpression()), !dbg !8279
  %47 = mul nsw i32 %35, 100000, !dbg !8315
  call void @llvm.dbg.value(metadata i32 %47, metadata !8271, metadata !DIExpression()), !dbg !8279
  %48 = sdiv i32 %47, %46, !dbg !8316
  call void @llvm.dbg.value(metadata i32 %48, metadata !8272, metadata !DIExpression()), !dbg !8279
  %49 = sdiv i32 %48, 1000, !dbg !8317
  call void @llvm.dbg.value(metadata i32 %49, metadata !8273, metadata !DIExpression()), !dbg !8279
  %50 = mul nsw i32 %49, -1000, !dbg !8318
  %51 = add i32 %50, %48, !dbg !8319
  %52 = sdiv i32 %51, 10, !dbg !8320
  call void @llvm.dbg.value(metadata i32 %52, metadata !8274, metadata !DIExpression()), !dbg !8279
  %53 = mul nsw i32 %52, -10, !dbg !8321
  %54 = add i32 %53, %51, !dbg !8322
  call void @llvm.dbg.value(metadata i32 %54, metadata !8275, metadata !DIExpression()), !dbg !8279
  %55 = icmp sgt i32 %54, 4, !dbg !8323
  %56 = zext i1 %55 to i32, !dbg !8325
  %57 = add nsw i32 %52, %56, !dbg !8325
  br label %58, !dbg !8325

58:                                               ; preds = %1, %43, %41
  %59 = phi i32 [ %18, %41 ], [ %18, %43 ], [ 0, %1 ]
  %60 = phi i32 [ %13, %41 ], [ %13, %43 ], [ 0, %1 ]
  %61 = phi i32 [ %37, %41 ], [ %37, %43 ], [ 0, %1 ]
  %62 = phi i32 [ %36, %41 ], [ %36, %43 ], [ 0, %1 ]
  %63 = phi i32 [ %35, %41 ], [ %35, %43 ], [ 0, %1 ]
  %64 = phi i32 [ 0, %41 ], [ %49, %43 ], [ 0, %1 ], !dbg !8326
  %65 = phi i32 [ 0, %41 ], [ %57, %43 ], [ 0, %1 ], !dbg !8326
  %66 = phi i32 [ 2, %41 ], [ %45, %43 ], [ 2, %1 ], !dbg !8326
  call void @llvm.dbg.value(metadata i32 %66, metadata !8276, metadata !DIExpression()), !dbg !8279
  call void @llvm.dbg.value(metadata i32 %65, metadata !8274, metadata !DIExpression()), !dbg !8279
  call void @llvm.dbg.value(metadata i32 %64, metadata !8273, metadata !DIExpression()), !dbg !8279
  %67 = tail call fastcc i8* @TC_RESULT_TO_STR(i32 noundef %66) #21, !dbg !8327
  %68 = load i8*, i8** %2, align 4, !dbg !8327
  %69 = freeze i32 %59
  %70 = udiv i32 %69, 1000, !dbg !8327
  %71 = mul i32 %70, 1000
  %72 = sub i32 %69, %71
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([100 x i8], [100 x i8]* @.str.32.97, i32 0, i32 0), i8* noundef %67, i32 noundef %64, i32 noundef %65, i8* noundef %68, i32 noundef %63, i32 noundef %62, i32 noundef %61, i32 noundef %60, i32 noundef %70, i32 noundef %72) #22, !dbg !8327
  ret void, !dbg !8328
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__ztest_init_unit_test_result_for_suite(%struct.ztest_suite_node* nocapture noundef readonly %0) unnamed_addr #1 !dbg !8329 {
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %0, metadata !8331, metadata !DIExpression()), !dbg !8333
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* null, metadata !8332, metadata !DIExpression()), !dbg !8333
  %2 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* null, metadata !8332, metadata !DIExpression()), !dbg !8333
  %3 = load i8*, i8** %2, align 4, !dbg !8334
  %4 = tail call %struct.ztest_unit_test* @z_ztest_get_next_test(i8* noundef %3, %struct.ztest_unit_test* noundef null) #21, !dbg !8335
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %4, metadata !8332, metadata !DIExpression()), !dbg !8333
  %5 = icmp eq %struct.ztest_unit_test* %4, null, !dbg !8336
  br i1 %5, label %22, label %6, !dbg !8337

6:                                                ; preds = %1, %6
  %7 = phi %struct.ztest_unit_test* [ %20, %6 ], [ %4, %1 ]
  %8 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %7, i32 0, i32 4, !dbg !8338
  %9 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %8, align 4, !dbg !8338
  %10 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %9, i32 0, i32 0, !dbg !8340
  store i32 0, i32* %10, align 4, !dbg !8341
  %11 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %8, align 4, !dbg !8342
  %12 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %11, i32 0, i32 1, !dbg !8343
  store i32 0, i32* %12, align 4, !dbg !8344
  %13 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %8, align 4, !dbg !8345
  %14 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %13, i32 0, i32 2, !dbg !8346
  store i32 0, i32* %14, align 4, !dbg !8347
  %15 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %8, align 4, !dbg !8348
  %16 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %15, i32 0, i32 3, !dbg !8349
  store i32 0, i32* %16, align 4, !dbg !8350
  %17 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %8, align 4, !dbg !8351
  %18 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %17, i32 0, i32 4, !dbg !8352
  store i32 0, i32* %18, align 4, !dbg !8353
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %7, metadata !8332, metadata !DIExpression()), !dbg !8333
  %19 = load i8*, i8** %2, align 4, !dbg !8334
  %20 = tail call %struct.ztest_unit_test* @z_ztest_get_next_test(i8* noundef %19, %struct.ztest_unit_test* noundef nonnull %7) #21, !dbg !8335
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %20, metadata !8332, metadata !DIExpression()), !dbg !8333
  %21 = icmp eq %struct.ztest_unit_test* %20, null, !dbg !8336
  br i1 %21, label %22, label %6, !dbg !8337, !llvm.loop !8354

22:                                               ; preds = %6, %1
  ret void, !dbg !8356
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ztest_verify_all_test_suites_ran() local_unnamed_addr #1 !dbg !8357 {
  call void @llvm.dbg.value(metadata i8 1, metadata !8359, metadata !DIExpression()), !dbg !8362
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), metadata !8360, metadata !DIExpression()), !dbg !8362
  call void @llvm.dbg.value(metadata i8 poison, metadata !8359, metadata !DIExpression()), !dbg !8362
  br i1 icmp ult (%struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), %struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_end, i32 0, i32 0)), label %3, label %1, !dbg !8363

1:                                                ; preds = %14, %0
  %2 = phi i1 [ true, %0 ], [ %15, %14 ]
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_start, i32 0, i32 0), metadata !8361, metadata !DIExpression()), !dbg !8362
  call void @llvm.dbg.value(metadata i8 poison, metadata !8359, metadata !DIExpression()), !dbg !8362
  br i1 icmp ult (%struct.ztest_unit_test* getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_start, i32 0, i32 0), %struct.ztest_unit_test* getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_end, i32 0, i32 0)), label %18, label %33, !dbg !8367

3:                                                ; preds = %0, %14
  %4 = phi %struct.ztest_suite_node* [ %16, %14 ], [ getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), %0 ]
  %5 = phi i1 [ %15, %14 ], [ true, %0 ]
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %4, metadata !8360, metadata !DIExpression()), !dbg !8362
  %6 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %4, i32 0, i32 6, !dbg !8369
  %7 = load %struct.ztest_suite_stats*, %struct.ztest_suite_stats** %6, align 4, !dbg !8369
  %8 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %7, i32 0, i32 0, !dbg !8373
  %9 = load i32, i32* %8, align 4, !dbg !8373
  %10 = icmp eq i32 %9, 0, !dbg !8374
  br i1 %10, label %11, label %14, !dbg !8375

11:                                               ; preds = %3
  %12 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %4, i32 0, i32 0, !dbg !8376
  %13 = load i8*, i8** %12, align 4, !dbg !8376
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.7.98, i32 0, i32 0), i8* noundef %13) #22, !dbg !8378
  call void @llvm.dbg.value(metadata i8 0, metadata !8359, metadata !DIExpression()), !dbg !8362
  br label %14, !dbg !8379

14:                                               ; preds = %3, %11
  %15 = phi i1 [ false, %11 ], [ %5, %3 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !8359, metadata !DIExpression()), !dbg !8362
  %16 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %4, i32 1, !dbg !8380
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %16, metadata !8360, metadata !DIExpression()), !dbg !8362
  %17 = icmp ult %struct.ztest_suite_node* %16, getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_end, i32 0, i32 0), !dbg !8381
  br i1 %17, label %3, label %1, !dbg !8363, !llvm.loop !8382

18:                                               ; preds = %1, %29
  %19 = phi %struct.ztest_unit_test* [ %31, %29 ], [ getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_start, i32 0, i32 0), %1 ]
  %20 = phi i1 [ %30, %29 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %19, metadata !8361, metadata !DIExpression()), !dbg !8362
  %21 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %19, i32 0, i32 0, !dbg !8384
  %22 = load i8*, i8** %21, align 4, !dbg !8384
  %23 = tail call fastcc %struct.ztest_suite_node* @ztest_find_test_suite(i8* noundef %22) #21, !dbg !8387
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %23, metadata !8360, metadata !DIExpression()), !dbg !8362
  %24 = icmp eq %struct.ztest_suite_node* %23, null, !dbg !8388
  br i1 %24, label %25, label %29, !dbg !8390

25:                                               ; preds = %18
  %26 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %19, i32 0, i32 1, !dbg !8391
  %27 = load i8*, i8** %26, align 4, !dbg !8391
  %28 = load i8*, i8** %21, align 4, !dbg !8393
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.8.99, i32 0, i32 0), i8* noundef %27, i8* noundef %28) #22, !dbg !8394
  call void @llvm.dbg.value(metadata i8 0, metadata !8359, metadata !DIExpression()), !dbg !8362
  br label %29, !dbg !8395

29:                                               ; preds = %18, %25
  %30 = phi i1 [ false, %25 ], [ %20, %18 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !8359, metadata !DIExpression()), !dbg !8362
  %31 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %19, i32 1, !dbg !8396
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %31, metadata !8361, metadata !DIExpression()), !dbg !8362
  %32 = icmp ult %struct.ztest_unit_test* %31, getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_end, i32 0, i32 0), !dbg !8397
  br i1 %32, label %18, label %33, !dbg !8367, !llvm.loop !8398

33:                                               ; preds = %29, %1
  %34 = phi i1 [ %2, %1 ], [ %30, %29 ]
  br i1 %34, label %36, label %35, !dbg !8400

35:                                               ; preds = %33
  store i32 1, i32* @test_status, align 4, !dbg !8401
  br label %36, !dbg !8404

36:                                               ; preds = %35, %33
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_start, i32 0, i32 0), metadata !8361, metadata !DIExpression()), !dbg !8362
  br i1 icmp ult (%struct.ztest_unit_test* getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_start, i32 0, i32 0), %struct.ztest_unit_test* getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_end, i32 0, i32 0)), label %37, label %60, !dbg !8405

37:                                               ; preds = %36, %57
  %38 = phi %struct.ztest_unit_test* [ %58, %57 ], [ getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_start, i32 0, i32 0), %36 ]
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %38, metadata !8361, metadata !DIExpression()), !dbg !8362
  %39 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %38, i32 0, i32 4, !dbg !8407
  %40 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %39, align 4, !dbg !8407
  %41 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %40, i32 0, i32 2, !dbg !8411
  %42 = load i32, i32* %41, align 4, !dbg !8411
  %43 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %40, i32 0, i32 3, !dbg !8412
  %44 = load i32, i32* %43, align 4, !dbg !8412
  %45 = add i32 %44, %42, !dbg !8413
  %46 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %40, i32 0, i32 1, !dbg !8414
  %47 = load i32, i32* %46, align 4, !dbg !8414
  %48 = add i32 %45, %47, !dbg !8415
  %49 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %40, i32 0, i32 0, !dbg !8416
  %50 = load i32, i32* %49, align 4, !dbg !8416
  %51 = icmp eq i32 %48, %50, !dbg !8417
  br i1 %51, label %57, label %52, !dbg !8418

52:                                               ; preds = %37
  %53 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %38, i32 0, i32 0, !dbg !8419
  %54 = load i8*, i8** %53, align 4, !dbg !8419
  %55 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %38, i32 0, i32 1, !dbg !8421
  %56 = load i8*, i8** %55, align 4, !dbg !8421
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9.100, i32 0, i32 0), i8* noundef %54, i8* noundef %56) #22, !dbg !8422
  store i32 1, i32* @test_status, align 4, !dbg !8423
  br label %57, !dbg !8424

57:                                               ; preds = %37, %52
  %58 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %38, i32 1, !dbg !8425
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %58, metadata !8361, metadata !DIExpression()), !dbg !8362
  %59 = icmp ult %struct.ztest_unit_test* %58, getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_end, i32 0, i32 0), !dbg !8426
  br i1 %59, label %37, label %60, !dbg !8405, !llvm.loop !8427

60:                                               ; preds = %57, %36
  ret void, !dbg !8429
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ztest_run_all(i8* noundef %0) local_unnamed_addr #1 !dbg !8430 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8432, metadata !DIExpression()), !dbg !8433
  %2 = load void (i8*)*, void (i8*)** getelementptr inbounds (%struct.ztest_arch_api, %struct.ztest_arch_api* @ztest_api, i32 0, i32 0), align 4, !dbg !8434
  tail call void %2(i8* noundef %0) #22, !dbg !8435
  ret void, !dbg !8436
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @test_main() local_unnamed_addr #1 !dbg !8437 {
  tail call void @ztest_run_all(i8* noundef null) #21, !dbg !8438
  tail call void @ztest_verify_all_test_suites_ran() #21, !dbg !8439
  ret void, !dbg !8440
}

; Function Attrs: noinline nounwind optsize
define dso_local void @main() local_unnamed_addr #1 !dbg !8441 {
  tail call void @test_main() #21, !dbg !8442
  tail call void @end_report() #21, !dbg !8443
  ret void, !dbg !8444
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_ztest_run_all(i8* noundef %0) #1 !dbg !8445 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8447, metadata !DIExpression()), !dbg !8448
  tail call fastcc void @ztest_run_test_suites(i8* noundef %0) #21, !dbg !8449
  ret void, !dbg !8450
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_ztest_should_suite_run(i8* noundef %0, %struct.ztest_suite_node* nocapture noundef readonly %1) #1 !dbg !8451 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8453, metadata !DIExpression()), !dbg !8456
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %1, metadata !8454, metadata !DIExpression()), !dbg !8456
  call void @llvm.dbg.value(metadata i8 1, metadata !8455, metadata !DIExpression()), !dbg !8456
  %3 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %1, i32 0, i32 5, !dbg !8457
  %4 = load i1 (i8*)*, i1 (i8*)** %3, align 4, !dbg !8457
  %5 = icmp eq i1 (i8*)* %4, null, !dbg !8459
  br i1 %5, label %8, label %6, !dbg !8460

6:                                                ; preds = %2
  %7 = tail call zeroext i1 %4(i8* noundef %0) #22, !dbg !8461
  call void @llvm.dbg.value(metadata i1 %7, metadata !8455, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8456
  br label %8, !dbg !8463

8:                                                ; preds = %6, %2
  %9 = phi i1 [ %7, %6 ], [ true, %2 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !8455, metadata !DIExpression()), !dbg !8456
  ret i1 %9, !dbg !8464
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local zeroext i1 @z_ztest_should_test_run(i8* nocapture readnone %0, i8* nocapture readnone %1) #2 !dbg !8465 {
  call void @llvm.dbg.value(metadata i8* undef, metadata !8467, metadata !DIExpression()), !dbg !8469
  call void @llvm.dbg.value(metadata i8* undef, metadata !8468, metadata !DIExpression()), !dbg !8469
  ret i1 true, !dbg !8470
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ztest_run_test_suites(i8* noundef %0) unnamed_addr #1 !dbg !8471 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8474, metadata !DIExpression()), !dbg !8475
  tail call void asm sideeffect "", "~{memory}"() #20, !dbg !8476, !srcloc !8478
  %2 = tail call i32 @z_impl_ztest_run_test_suites(i8* noundef %0) #22, !dbg !8479
  ret void, !dbg !8480
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i8* @ztest_relative_filename(i8* noundef readnone returned %0) local_unnamed_addr #2 !dbg !8481 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8485, metadata !DIExpression()), !dbg !8486
  ret i8* %0, !dbg !8487
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_console_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !8488 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8490, metadata !DIExpression()), !dbg !8491
  %2 = tail call fastcc zeroext i1 @device_is_ready() #21, !dbg !8492
  br i1 %2, label %3, label %4, !dbg !8494

3:                                                ; preds = %1
  tail call fastcc void @uart_console_hook_install() #21, !dbg !8495
  br label %4, !dbg !8496

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -19, %1 ], !dbg !8491
  ret i32 %5, !dbg !8497
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready() unnamed_addr #1 !dbg !8498 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_198, metadata !8503, metadata !DIExpression()), !dbg !8504
  tail call void asm sideeffect "", "~{memory}"() #20, !dbg !8505, !srcloc !8507
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready() #21, !dbg !8508
  ret i1 %1, !dbg !8509
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_console_hook_install() unnamed_addr #1 !dbg !8510 {
  tail call void @__stdout_hook_install(i32 (i32)* noundef nonnull @console_out) #22, !dbg !8511
  tail call void @__printk_hook_install(i32 (i32)* noundef nonnull @console_out) #22, !dbg !8512
  ret void, !dbg !8513
}

; Function Attrs: noinline nounwind optsize
define internal i32 @console_out(i32 noundef returned %0) #1 !dbg !8514 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8516, metadata !DIExpression()), !dbg !8517
  %2 = icmp eq i32 %0, 10, !dbg !8518
  br i1 %2, label %3, label %4, !dbg !8520

3:                                                ; preds = %1
  tail call fastcc void @uart_poll_out(i8 noundef zeroext 13) #21, !dbg !8521
  br label %4, !dbg !8523

4:                                                ; preds = %3, %1
  %5 = trunc i32 %0 to i8, !dbg !8524
  tail call fastcc void @uart_poll_out(i8 noundef zeroext %5) #21, !dbg !8525
  ret i32 %0, !dbg !8526
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !8527 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_198, metadata !8530, metadata !DIExpression()), !dbg !8532
  call void @llvm.dbg.value(metadata i8 %0, metadata !8531, metadata !DIExpression()), !dbg !8532
  tail call void asm sideeffect "", "~{memory}"() #20, !dbg !8533, !srcloc !8535
  tail call fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) #21, !dbg !8536
  ret void, !dbg !8537
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !8538 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_198, metadata !8540, metadata !DIExpression()), !dbg !8543
  call void @llvm.dbg.value(metadata i8 %0, metadata !8541, metadata !DIExpression()), !dbg !8543
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_198, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !8544
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !8542, metadata !DIExpression()), !dbg !8543
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 1, !dbg !8545
  %4 = load void (%struct.device*, i8)*, void (%struct.device*, i8)** %3, align 4, !dbg !8545
  tail call void %4(%struct.device* noundef nonnull @__device_dts_ord_198, i8 noundef zeroext %0) #22, !dbg !8546
  ret void, !dbg !8547
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready() unnamed_addr #1 !dbg !8548 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_198, metadata !8550, metadata !DIExpression()), !dbg !8551
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_198) #22, !dbg !8552
  ret i1 %1, !dbg !8553
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @uart_register_input(%struct.k_fifo* nocapture noundef %0, %struct.k_fifo* nocapture noundef %1, i8 (i8*, i8)* nocapture noundef %2) local_unnamed_addr #2 !dbg !8554 {
  call void @llvm.dbg.value(metadata %struct.k_fifo* %0, metadata !8603, metadata !DIExpression()), !dbg !8606
  call void @llvm.dbg.value(metadata %struct.k_fifo* %1, metadata !8604, metadata !DIExpression()), !dbg !8606
  call void @llvm.dbg.value(metadata i8 (i8*, i8)* %2, metadata !8605, metadata !DIExpression()), !dbg !8606
  ret void, !dbg !8607
}

; Function Attrs: noinline nounwind optsize
define internal i32 @imx_gpio_configure(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) #1 !dbg !8608 {
  %4 = alloca %struct.pinctrl_soc_pin, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8610, metadata !DIExpression()), !dbg !8623
  call void @llvm.dbg.value(metadata i8 %1, metadata !8611, metadata !DIExpression()), !dbg !8623
  call void @llvm.dbg.value(metadata i32 %2, metadata !8612, metadata !DIExpression()), !dbg !8623
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8624
  %6 = bitcast i8** %5 to %struct.imx_gpio_config**, !dbg !8624
  %7 = load %struct.imx_gpio_config*, %struct.imx_gpio_config** %6, align 4, !dbg !8624
  call void @llvm.dbg.value(metadata %struct.imx_gpio_config* %7, metadata !8613, metadata !DIExpression()), !dbg !8623
  %8 = getelementptr inbounds %struct.imx_gpio_config, %struct.imx_gpio_config* %7, i32 0, i32 1, !dbg !8625
  %9 = load %struct.GPIO_Type*, %struct.GPIO_Type** %8, align 4, !dbg !8625
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %9, metadata !8615, metadata !DIExpression()), !dbg !8623
  %10 = and i32 %2, 131072
  %11 = icmp eq i32 %10, 0
  %12 = and i32 %2, 196608, !dbg !8626
  %13 = icmp eq i32 %12, 196608, !dbg !8626
  br i1 %13, label %71, label %14, !dbg !8626

14:                                               ; preds = %3
  %15 = zext i8 %1 to i32, !dbg !8628
  %16 = getelementptr inbounds %struct.imx_gpio_config, %struct.imx_gpio_config* %7, i32 0, i32 3, !dbg !8628
  %17 = load i8, i8* %16, align 4, !dbg !8628
  %18 = icmp ugt i8 %17, %1, !dbg !8628
  br i1 %18, label %20, label %19, !dbg !8631

19:                                               ; preds = %14
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.105, i32 0, i32 0), i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.24.111, i32 0, i32 0), i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.25.112, i32 0, i32 0), i32 noundef 50) #22, !dbg !8632
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.25.112, i32 0, i32 0), i32 noundef 50) #22, !dbg !8632
  unreachable, !dbg !8632

20:                                               ; preds = %14
  %21 = bitcast %struct.pinctrl_soc_pin* %4 to i8*, !dbg !8634
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %21) #20, !dbg !8634
  call void @llvm.dbg.declare(metadata %struct.pinctrl_soc_pin* %4, metadata !8616, metadata !DIExpression()), !dbg !8635
  %22 = getelementptr inbounds %struct.imx_gpio_config, %struct.imx_gpio_config* %7, i32 0, i32 2, !dbg !8636
  %23 = load %struct.pinctrl_soc_pinmux*, %struct.pinctrl_soc_pinmux** %22, align 4, !dbg !8636
  %24 = getelementptr inbounds %struct.pinctrl_soc_pinmux, %struct.pinctrl_soc_pinmux* %23, i32 %15, i32 1, !dbg !8637
  %25 = load i32, i32* %24, align 4, !dbg !8637
  %26 = inttoptr i32 %25 to i32*, !dbg !8638
  call void @llvm.dbg.value(metadata i32* %26, metadata !8621, metadata !DIExpression()), !dbg !8623
  %27 = load volatile i32, i32* %26, align 4, !dbg !8639
  call void @llvm.dbg.value(metadata i32 %27, metadata !8622, metadata !DIExpression()), !dbg !8623
  %28 = and i32 %2, 2, !dbg !8640
  %29 = icmp eq i32 %28, 0, !dbg !8642
  br i1 %29, label %30, label %69, !dbg !8643

30:                                               ; preds = %20
  %31 = and i32 %2, 48, !dbg !8644
  %32 = icmp eq i32 %31, 0, !dbg !8644
  br i1 %32, label %41, label %33, !dbg !8644

33:                                               ; preds = %30
  %34 = and i32 %2, 16, !dbg !8646
  %35 = icmp eq i32 %34, 0, !dbg !8647
  call void @llvm.dbg.value(metadata i32 %27, metadata !8622, metadata !DIExpression(DW_OP_constu, 16, DW_OP_or, DW_OP_stack_value)), !dbg !8623
  br i1 %35, label %38, label %36, !dbg !8648

36:                                               ; preds = %33
  %37 = or i32 %27, 48, !dbg !8650
  call void @llvm.dbg.value(metadata i32 %37, metadata !8622, metadata !DIExpression()), !dbg !8623
  br label %43, !dbg !8653

38:                                               ; preds = %33
  call void @llvm.dbg.value(metadata i32 %27, metadata !8622, metadata !DIExpression(DW_OP_constu, 16, DW_OP_or, DW_OP_stack_value)), !dbg !8623
  %39 = and i32 %27, -49, !dbg !8654
  %40 = or i32 %39, 16, !dbg !8654
  call void @llvm.dbg.value(metadata i32 %40, metadata !8622, metadata !DIExpression()), !dbg !8623
  br label %43

41:                                               ; preds = %30
  %42 = and i32 %27, -17, !dbg !8656
  call void @llvm.dbg.value(metadata i32 %42, metadata !8622, metadata !DIExpression()), !dbg !8623
  br label %43

43:                                               ; preds = %36, %38, %41
  %44 = phi i32 [ %37, %36 ], [ %40, %38 ], [ %42, %41 ], !dbg !8658
  call void @llvm.dbg.value(metadata i32 %44, metadata !8622, metadata !DIExpression()), !dbg !8623
  %45 = getelementptr inbounds %struct.pinctrl_soc_pinmux, %struct.pinctrl_soc_pinmux* %23, i32 %15, !dbg !8659
  %46 = bitcast %struct.pinctrl_soc_pinmux* %45 to i8*, !dbg !8660
  %47 = call i8* @memcpy(i8* noundef nonnull %21, i8* noundef %46, i32 noundef 20) #22, !dbg !8661
  %48 = getelementptr inbounds %struct.pinctrl_soc_pin, %struct.pinctrl_soc_pin* %4, i32 0, i32 1, !dbg !8662
  store i32 %44, i32* %48, align 4, !dbg !8663
  %49 = call i32 @pinctrl_configure_pins(%struct.pinctrl_soc_pin* noundef nonnull %4, i8 noundef zeroext 1, i32 noundef 0) #22, !dbg !8664
  call void @GPIO_SetPinIntMode(%struct.GPIO_Type* noundef %9, i32 noundef %15, i1 noundef zeroext false) #22, !dbg !8665
  call void @GPIO_SetIntEdgeSelect(%struct.GPIO_Type* noundef %9, i32 noundef %15, i1 noundef zeroext false) #22, !dbg !8666
  br i1 %11, label %63, label %50, !dbg !8667

50:                                               ; preds = %43
  %51 = and i32 %2, 262144, !dbg !8668
  %52 = icmp eq i32 %51, 0, !dbg !8672
  br i1 %52, label %53, label %56, !dbg !8673

53:                                               ; preds = %50
  %54 = and i32 %2, 524288, !dbg !8674
  %55 = icmp eq i32 %54, 0, !dbg !8676
  br i1 %55, label %58, label %56, !dbg !8677

56:                                               ; preds = %53, %50
  %57 = phi i32 [ 0, %50 ], [ 1, %53 ]
  call void @GPIO_WritePinOutput(%struct.GPIO_Type* noundef %9, i32 noundef %15, i32 noundef %57) #22, !dbg !8678
  br label %58, !dbg !8679

58:                                               ; preds = %56, %53
  %59 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 1, !dbg !8679
  %60 = load volatile i32, i32* %59, align 4, !dbg !8679
  %61 = shl nuw i32 1, %15, !dbg !8679
  %62 = or i32 %60, %61, !dbg !8679
  store volatile i32 %62, i32* %59, align 4, !dbg !8679
  br label %69, !dbg !8680

63:                                               ; preds = %43
  %64 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 1, !dbg !8681
  %65 = load volatile i32, i32* %64, align 4, !dbg !8681
  %66 = shl nuw i32 1, %15, !dbg !8681
  %67 = xor i32 %66, -1, !dbg !8681
  %68 = and i32 %65, %67, !dbg !8681
  store volatile i32 %68, i32* %64, align 4, !dbg !8681
  br label %69

69:                                               ; preds = %58, %63, %20
  %70 = phi i32 [ -134, %20 ], [ 0, %63 ], [ 0, %58 ], !dbg !8623
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %21) #20, !dbg !8683
  br label %71

71:                                               ; preds = %3, %69
  %72 = phi i32 [ %70, %69 ], [ -134, %3 ], !dbg !8623
  ret i32 %72, !dbg !8683
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @imx_gpio_port_get_raw(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) #15 !dbg !8684 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8688, metadata !DIExpression()), !dbg !8692
  call void @llvm.dbg.value(metadata i32* %1, metadata !8689, metadata !DIExpression()), !dbg !8692
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8693
  %4 = bitcast i8** %3 to %struct.imx_gpio_config**, !dbg !8693
  %5 = load %struct.imx_gpio_config*, %struct.imx_gpio_config** %4, align 4, !dbg !8693
  call void @llvm.dbg.value(metadata %struct.imx_gpio_config* %5, metadata !8690, metadata !DIExpression()), !dbg !8692
  %6 = getelementptr inbounds %struct.imx_gpio_config, %struct.imx_gpio_config* %5, i32 0, i32 1, !dbg !8694
  %7 = load %struct.GPIO_Type*, %struct.GPIO_Type** %6, align 4, !dbg !8694
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %7, metadata !8691, metadata !DIExpression()), !dbg !8692
  %8 = tail call fastcc i32 @GPIO_ReadPortInput(%struct.GPIO_Type* noundef %7) #21, !dbg !8695
  store i32 %8, i32* %1, align 4, !dbg !8696
  ret i32 0, !dbg !8697
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @imx_gpio_port_set_masked_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) #14 !dbg !8698 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8700, metadata !DIExpression()), !dbg !8705
  call void @llvm.dbg.value(metadata i32 %1, metadata !8701, metadata !DIExpression()), !dbg !8705
  call void @llvm.dbg.value(metadata i32 %2, metadata !8702, metadata !DIExpression()), !dbg !8705
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8706
  %5 = bitcast i8** %4 to %struct.imx_gpio_config**, !dbg !8706
  %6 = load %struct.imx_gpio_config*, %struct.imx_gpio_config** %5, align 4, !dbg !8706
  call void @llvm.dbg.value(metadata %struct.imx_gpio_config* %6, metadata !8703, metadata !DIExpression()), !dbg !8705
  %7 = getelementptr inbounds %struct.imx_gpio_config, %struct.imx_gpio_config* %6, i32 0, i32 1, !dbg !8707
  %8 = load %struct.GPIO_Type*, %struct.GPIO_Type** %7, align 4, !dbg !8707
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %8, metadata !8704, metadata !DIExpression()), !dbg !8705
  %9 = tail call fastcc i32 @GPIO_ReadPortInput(%struct.GPIO_Type* noundef %8) #21, !dbg !8708
  %10 = xor i32 %1, -1, !dbg !8709
  %11 = and i32 %9, %10, !dbg !8710
  %12 = and i32 %2, %1, !dbg !8711
  %13 = or i32 %11, %12, !dbg !8712
  tail call fastcc void @GPIO_WritePortOutput(%struct.GPIO_Type* noundef %8, i32 noundef %13) #21, !dbg !8713
  ret i32 0, !dbg !8714
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @imx_gpio_port_set_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #14 !dbg !8715 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8717, metadata !DIExpression()), !dbg !8721
  call void @llvm.dbg.value(metadata i32 %1, metadata !8718, metadata !DIExpression()), !dbg !8721
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8722
  %4 = bitcast i8** %3 to %struct.imx_gpio_config**, !dbg !8722
  %5 = load %struct.imx_gpio_config*, %struct.imx_gpio_config** %4, align 4, !dbg !8722
  call void @llvm.dbg.value(metadata %struct.imx_gpio_config* %5, metadata !8719, metadata !DIExpression()), !dbg !8721
  %6 = getelementptr inbounds %struct.imx_gpio_config, %struct.imx_gpio_config* %5, i32 0, i32 1, !dbg !8723
  %7 = load %struct.GPIO_Type*, %struct.GPIO_Type** %6, align 4, !dbg !8723
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %7, metadata !8720, metadata !DIExpression()), !dbg !8721
  %8 = tail call fastcc i32 @GPIO_ReadPortInput(%struct.GPIO_Type* noundef %7) #21, !dbg !8724
  %9 = or i32 %8, %1, !dbg !8725
  tail call fastcc void @GPIO_WritePortOutput(%struct.GPIO_Type* noundef %7, i32 noundef %9) #21, !dbg !8726
  ret i32 0, !dbg !8727
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @imx_gpio_port_clear_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #14 !dbg !8728 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8730, metadata !DIExpression()), !dbg !8734
  call void @llvm.dbg.value(metadata i32 %1, metadata !8731, metadata !DIExpression()), !dbg !8734
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8735
  %4 = bitcast i8** %3 to %struct.imx_gpio_config**, !dbg !8735
  %5 = load %struct.imx_gpio_config*, %struct.imx_gpio_config** %4, align 4, !dbg !8735
  call void @llvm.dbg.value(metadata %struct.imx_gpio_config* %5, metadata !8732, metadata !DIExpression()), !dbg !8734
  %6 = getelementptr inbounds %struct.imx_gpio_config, %struct.imx_gpio_config* %5, i32 0, i32 1, !dbg !8736
  %7 = load %struct.GPIO_Type*, %struct.GPIO_Type** %6, align 4, !dbg !8736
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %7, metadata !8733, metadata !DIExpression()), !dbg !8734
  %8 = tail call fastcc i32 @GPIO_ReadPortInput(%struct.GPIO_Type* noundef %7) #21, !dbg !8737
  %9 = xor i32 %1, -1, !dbg !8738
  %10 = and i32 %8, %9, !dbg !8739
  tail call fastcc void @GPIO_WritePortOutput(%struct.GPIO_Type* noundef %7, i32 noundef %10) #21, !dbg !8740
  ret i32 0, !dbg !8741
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @imx_gpio_port_toggle_bits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #14 !dbg !8742 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8744, metadata !DIExpression()), !dbg !8748
  call void @llvm.dbg.value(metadata i32 %1, metadata !8745, metadata !DIExpression()), !dbg !8748
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8749
  %4 = bitcast i8** %3 to %struct.imx_gpio_config**, !dbg !8749
  %5 = load %struct.imx_gpio_config*, %struct.imx_gpio_config** %4, align 4, !dbg !8749
  call void @llvm.dbg.value(metadata %struct.imx_gpio_config* %5, metadata !8746, metadata !DIExpression()), !dbg !8748
  %6 = getelementptr inbounds %struct.imx_gpio_config, %struct.imx_gpio_config* %5, i32 0, i32 1, !dbg !8750
  %7 = load %struct.GPIO_Type*, %struct.GPIO_Type** %6, align 4, !dbg !8750
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %7, metadata !8747, metadata !DIExpression()), !dbg !8748
  %8 = tail call fastcc i32 @GPIO_ReadPortInput(%struct.GPIO_Type* noundef %7) #21, !dbg !8751
  %9 = xor i32 %8, %1, !dbg !8752
  tail call fastcc void @GPIO_WritePortOutput(%struct.GPIO_Type* noundef %7, i32 noundef %9) #21, !dbg !8753
  ret i32 0, !dbg !8754
}

; Function Attrs: noinline nounwind optsize
define internal i32 @imx_gpio_pin_interrupt_configure(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) #1 !dbg !8755 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8757, metadata !DIExpression()), !dbg !8767
  call void @llvm.dbg.value(metadata i8 %1, metadata !8758, metadata !DIExpression()), !dbg !8767
  call void @llvm.dbg.value(metadata i32 %2, metadata !8759, metadata !DIExpression()), !dbg !8767
  call void @llvm.dbg.value(metadata i32 %3, metadata !8760, metadata !DIExpression()), !dbg !8767
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8768
  %6 = bitcast i8** %5 to %struct.imx_gpio_config**, !dbg !8768
  %7 = load %struct.imx_gpio_config*, %struct.imx_gpio_config** %6, align 4, !dbg !8768
  call void @llvm.dbg.value(metadata %struct.imx_gpio_config* %7, metadata !8761, metadata !DIExpression()), !dbg !8767
  %8 = getelementptr inbounds %struct.imx_gpio_config, %struct.imx_gpio_config* %7, i32 0, i32 1, !dbg !8769
  %9 = load %struct.GPIO_Type*, %struct.GPIO_Type** %8, align 4, !dbg !8769
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %9, metadata !8762, metadata !DIExpression()), !dbg !8767
  %10 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 1, !dbg !8770
  %11 = load volatile i32, i32* %10, align 4, !dbg !8770
  %12 = zext i8 %1 to i32, !dbg !8772
  %13 = shl nuw i32 1, %12, !dbg !8772
  %14 = and i32 %11, %13, !dbg !8773
  %15 = icmp ne i32 %14, 0, !dbg !8774
  %16 = icmp ne i32 %2, 2097152
  %17 = and i1 %16, %15, !dbg !8775
  br i1 %17, label %77, label %18, !dbg !8775

18:                                               ; preds = %4
  %19 = icmp eq i32 %2, 20971520, !dbg !8776
  %20 = icmp eq i32 %3, 33554432
  %21 = and i1 %19, %20, !dbg !8778
  br i1 %21, label %29, label %22, !dbg !8778

22:                                               ; preds = %18
  %23 = icmp eq i32 %3, 67108864
  %24 = and i1 %19, %23, !dbg !8779
  br i1 %24, label %29, label %25, !dbg !8779

25:                                               ; preds = %22
  %26 = icmp eq i32 %2, 4194304, !dbg !8781
  %27 = and i1 %26, %23, !dbg !8783
  %28 = zext i1 %27 to i32
  br label %29

29:                                               ; preds = %25, %22, %18
  %30 = phi i32 [ 3, %18 ], [ 2, %22 ], [ %28, %25 ], !dbg !8784
  call void @llvm.dbg.value(metadata i32 %30, metadata !8765, metadata !DIExpression()), !dbg !8767
  %31 = icmp ult i8 %1, 16, !dbg !8785
  br i1 %31, label %32, label %35, !dbg !8787

32:                                               ; preds = %29
  %33 = shl nuw nsw i8 %1, 1, !dbg !8788
  call void @llvm.dbg.value(metadata i8 %33, metadata !8766, metadata !DIExpression()), !dbg !8767
  %34 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 3, !dbg !8790
  call void @llvm.dbg.value(metadata i32* %34, metadata !8763, metadata !DIExpression()), !dbg !8767
  br label %41, !dbg !8791

35:                                               ; preds = %29
  %36 = icmp ult i8 %1, 32, !dbg !8792
  br i1 %36, label %37, label %77, !dbg !8794

37:                                               ; preds = %35
  %38 = shl nuw nsw i8 %1, 1, !dbg !8795
  %39 = add nsw i8 %38, -32, !dbg !8795
  call void @llvm.dbg.value(metadata i8 %39, metadata !8766, metadata !DIExpression()), !dbg !8767
  %40 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 4, !dbg !8797
  call void @llvm.dbg.value(metadata i32* %40, metadata !8763, metadata !DIExpression()), !dbg !8767
  br label %41

41:                                               ; preds = %37, %32
  %42 = phi i32* [ %34, %32 ], [ %40, %37 ], !dbg !8798
  %43 = phi i8 [ %33, %32 ], [ %39, %37 ], !dbg !8798
  call void @llvm.dbg.value(metadata i8 %43, metadata !8766, metadata !DIExpression()), !dbg !8767
  call void @llvm.dbg.value(metadata i32* %42, metadata !8763, metadata !DIExpression()), !dbg !8767
  %44 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #20, !dbg !8799, !srcloc !8807
  %45 = extractvalue { i32, i32 } %44, 0, !dbg !8799
  call void @llvm.dbg.value(metadata i32 %45, metadata !8804, metadata !DIExpression()) #20, !dbg !8808
  call void @llvm.dbg.value(metadata i32 undef, metadata !8805, metadata !DIExpression()) #20, !dbg !8808
  call void @llvm.dbg.value(metadata i32 %45, metadata !8764, metadata !DIExpression()), !dbg !8767
  %46 = load volatile i32, i32* %42, align 4, !dbg !8809
  %47 = zext i8 %43 to i32, !dbg !8810
  %48 = shl nuw i32 3, %47, !dbg !8811
  %49 = xor i32 %48, -1, !dbg !8812
  %50 = and i32 %46, %49, !dbg !8813
  %51 = shl nuw i32 %30, %47, !dbg !8814
  %52 = or i32 %50, %51, !dbg !8815
  store volatile i32 %52, i32* %42, align 4, !dbg !8816
  %53 = icmp eq i32 %3, 100663296, !dbg !8817
  %54 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 7, !dbg !8817
  %55 = load volatile i32, i32* %54, align 4, !dbg !8817
  %56 = or i32 %55, %13, !dbg !8817
  %57 = xor i32 %13, -1, !dbg !8817
  %58 = and i32 %55, %57, !dbg !8817
  %59 = select i1 %53, i32 %56, i32 %58, !dbg !8817
  %60 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 7, !dbg !8817
  store volatile i32 %59, i32* %60, align 4, !dbg !8817
  %61 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 6, !dbg !8818
  %62 = load volatile i32, i32* %61, align 4, !dbg !8818
  br i1 %16, label %63, label %68, !dbg !8818

63:                                               ; preds = %41
  %64 = or i32 %62, %13, !dbg !8818
  store volatile i32 %64, i32* %61, align 4, !dbg !8818
  %65 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 5, !dbg !8819
  %66 = load volatile i32, i32* %65, align 4, !dbg !8819
  %67 = or i32 %66, %13, !dbg !8819
  br label %74, !dbg !8819

68:                                               ; preds = %41
  %69 = xor i32 %13, -1, !dbg !8818
  %70 = and i32 %62, %69, !dbg !8818
  store volatile i32 %70, i32* %61, align 4, !dbg !8818
  %71 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 5, !dbg !8819
  %72 = load volatile i32, i32* %71, align 4, !dbg !8819
  %73 = and i32 %72, %69, !dbg !8819
  br label %74, !dbg !8819

74:                                               ; preds = %68, %63
  %75 = phi i32 [ %67, %63 ], [ %73, %68 ], !dbg !8819
  %76 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 5, !dbg !8819
  store volatile i32 %75, i32* %76, align 4, !dbg !8819
  call void @llvm.dbg.value(metadata i32 %45, metadata !8820, metadata !DIExpression()) #20, !dbg !8823
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %45) #20, !dbg !8825, !srcloc !8826
  br label %77, !dbg !8827

77:                                               ; preds = %35, %4, %74
  %78 = phi i32 [ 0, %74 ], [ -134, %4 ], [ -22, %35 ], !dbg !8767
  ret i32 %78, !dbg !8828
}

; Function Attrs: noinline nounwind optsize
define internal i32 @imx_gpio_manage_callback(%struct.device* nocapture noundef readonly %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #1 !dbg !8829 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8831, metadata !DIExpression()), !dbg !8836
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !8832, metadata !DIExpression()), !dbg !8836
  call void @llvm.dbg.value(metadata i1 %2, metadata !8833, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8836
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !8837
  %5 = bitcast i8** %4 to %struct.imx_gpio_data**, !dbg !8837
  %6 = load %struct.imx_gpio_data*, %struct.imx_gpio_data** %5, align 4, !dbg !8837
  call void @llvm.dbg.value(metadata %struct.imx_gpio_data* %6, metadata !8834, metadata !DIExpression()), !dbg !8836
  %7 = getelementptr inbounds %struct.imx_gpio_data, %struct.imx_gpio_data* %6, i32 0, i32 1, !dbg !8838
  %8 = tail call fastcc i32 @gpio_manage_callback(%struct._slist* noundef nonnull %7, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #21, !dbg !8839
  ret i32 %8, !dbg !8840
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_manage_callback(%struct._slist* nocapture noundef %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) unnamed_addr #1 !dbg !8841 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8847, metadata !DIExpression()), !dbg !8850
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !8848, metadata !DIExpression()), !dbg !8850
  call void @llvm.dbg.value(metadata i1 %2, metadata !8849, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8850
  %4 = icmp eq %struct.gpio_callback* %1, null, !dbg !8851
  br i1 %4, label %5, label %6, !dbg !8854

5:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.105, i32 0, i32 0), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.26.106, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.27.107, i32 0, i32 0), i32 noundef 42) #22, !dbg !8855
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.28.108, i32 0, i32 0)) #22, !dbg !8855
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.27.107, i32 0, i32 0), i32 noundef 42) #22, !dbg !8855
  unreachable, !dbg !8855

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 1, !dbg !8857
  %8 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %7, align 4, !dbg !8857
  %9 = icmp eq void (%struct.device*, %struct.gpio_callback*, i32)* %8, null, !dbg !8857
  br i1 %9, label %10, label %11, !dbg !8860

10:                                               ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.105, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.29.109, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.27.107, i32 0, i32 0), i32 noundef 43) #22, !dbg !8861
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.30.110, i32 0, i32 0)) #22, !dbg !8861
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.27.107, i32 0, i32 0), i32 noundef 43) #22, !dbg !8861
  unreachable, !dbg !8861

11:                                               ; preds = %6
  %12 = tail call fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* noundef %0) #21, !dbg !8863
  br i1 %12, label %18, label %13, !dbg !8865

13:                                               ; preds = %11
  %14 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !8866
  %15 = tail call fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* noundef %0, %struct._snode* noundef nonnull %14) #21, !dbg !8869
  %16 = or i1 %15, %2, !dbg !8870
  %17 = select i1 %16, i32 0, i32 -22, !dbg !8870
  br i1 %2, label %19, label %21, !dbg !8870

18:                                               ; preds = %11
  br i1 %2, label %19, label %21, !dbg !8871

19:                                               ; preds = %18, %13
  %20 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !8872
  tail call fastcc void @sys_slist_prepend(%struct._slist* noundef %0, %struct._snode* noundef nonnull %20) #21, !dbg !8875
  br label %21, !dbg !8876

21:                                               ; preds = %13, %19, %18
  %22 = phi i32 [ %17, %13 ], [ -22, %18 ], [ 0, %19 ], !dbg !8850
  ret i32 %22, !dbg !8877
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* nocapture noundef readonly %0) unnamed_addr #8 !dbg !8878 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8882, metadata !DIExpression()), !dbg !8883
  %2 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #21, !dbg !8884
  %3 = icmp eq %struct._snode* %2, null, !dbg !8884
  ret i1 %3, !dbg !8884
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #13 !dbg !8885 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8889, metadata !DIExpression()), !dbg !8893
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !8890, metadata !DIExpression()), !dbg !8893
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !8891, metadata !DIExpression()), !dbg !8893
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #21, !dbg !8894
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !8892, metadata !DIExpression()), !dbg !8893
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !8891, metadata !DIExpression()), !dbg !8893
  %4 = icmp eq %struct._snode* %3, null, !dbg !8896
  br i1 %4, label %15, label %5, !dbg !8894

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !8892, metadata !DIExpression()), !dbg !8893
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !8891, metadata !DIExpression()), !dbg !8893
  %6 = icmp eq %struct._snode* %3, %1, !dbg !8898
  br i1 %6, label %9, label %11, !dbg !8901

7:                                                ; preds = %11
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !8892, metadata !DIExpression()), !dbg !8893
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !8891, metadata !DIExpression()), !dbg !8893
  %8 = icmp eq %struct._snode* %13, %1, !dbg !8898
  br i1 %8, label %9, label %11, !dbg !8901, !llvm.loop !8902

9:                                                ; preds = %7, %5
  %10 = phi %struct._snode* [ null, %5 ], [ %12, %7 ]
  tail call fastcc void @sys_slist_remove(%struct._slist* noundef %0, %struct._snode* noundef %10, %struct._snode* noundef %1) #21, !dbg !8903
  br label %15, !dbg !8903

11:                                               ; preds = %5, %7
  %12 = phi %struct._snode* [ %13, %7 ], [ %3, %5 ]
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !8892, metadata !DIExpression()), !dbg !8893
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !8891, metadata !DIExpression()), !dbg !8893
  %13 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %12) #21, !dbg !8896
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !8892, metadata !DIExpression()), !dbg !8893
  %14 = icmp eq %struct._snode* %13, null, !dbg !8896
  br i1 %14, label %15, label %7, !dbg !8894, !llvm.loop !8902

15:                                               ; preds = %11, %2, %9
  %16 = phi i1 [ true, %9 ], [ false, %2 ], [ false, %11 ]
  ret i1 %16, !dbg !8905
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_prepend(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #9 !dbg !8906 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8910, metadata !DIExpression()), !dbg !8912
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !8911, metadata !DIExpression()), !dbg !8912
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #21, !dbg !8913
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %1, %struct._snode* noundef %3) #21, !dbg !8913
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %1) #21, !dbg !8913
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #21, !dbg !8914
  %5 = icmp eq %struct._snode* %4, null, !dbg !8914
  br i1 %5, label %6, label %8, !dbg !8913

6:                                                ; preds = %2
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #21, !dbg !8916
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %7) #21, !dbg !8916
  br label %8, !dbg !8916

8:                                                ; preds = %6, %2
  ret void, !dbg !8913
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* nocapture noundef readonly %0) unnamed_addr #8 !dbg !8918 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8922, metadata !DIExpression()), !dbg !8923
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !8924
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !8924
  ret %struct._snode* %3, !dbg !8925
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_snode_next_set(%struct._snode* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #7 !dbg !8926 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !8930, metadata !DIExpression()), !dbg !8932
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !8931, metadata !DIExpression()), !dbg !8932
  %3 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !8933
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !8934
  ret void, !dbg !8935
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_head_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #7 !dbg !8936 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8938, metadata !DIExpression()), !dbg !8940
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !8939, metadata !DIExpression()), !dbg !8940
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !8941
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !8942
  ret void, !dbg !8943
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* nocapture noundef readonly %0) unnamed_addr #8 !dbg !8944 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8946, metadata !DIExpression()), !dbg !8947
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !8948
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !8948
  ret %struct._snode* %3, !dbg !8949
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_tail_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #7 !dbg !8950 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8952, metadata !DIExpression()), !dbg !8954
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !8953, metadata !DIExpression()), !dbg !8954
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !8955
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !8956
  ret void, !dbg !8957
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1, %struct._snode* noundef %2) unnamed_addr #9 !dbg !8958 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8962, metadata !DIExpression()), !dbg !8965
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !8963, metadata !DIExpression()), !dbg !8965
  call void @llvm.dbg.value(metadata %struct._snode* %2, metadata !8964, metadata !DIExpression()), !dbg !8965
  %4 = icmp eq %struct._snode* %1, null, !dbg !8966
  %5 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %2) #21, !dbg !8968
  br i1 %4, label %6, label %11, !dbg !8969

6:                                                ; preds = %3
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %5) #21, !dbg !8970
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #21, !dbg !8972
  %8 = icmp eq %struct._snode* %7, %2, !dbg !8972
  br i1 %8, label %9, label %15, !dbg !8970

9:                                                ; preds = %6
  %10 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #21, !dbg !8974
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %10) #21, !dbg !8974
  br label %15, !dbg !8974

11:                                               ; preds = %3
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef nonnull %1, %struct._snode* noundef %5) #21, !dbg !8976
  %12 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #21, !dbg !8978
  %13 = icmp eq %struct._snode* %12, %2, !dbg !8978
  br i1 %13, label %14, label %15, !dbg !8976

14:                                               ; preds = %11
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef nonnull %1) #21, !dbg !8980
  br label %15, !dbg !8980

15:                                               ; preds = %11, %14, %6, %9
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %2, %struct._snode* noundef null) #21, !dbg !8969
  ret void, !dbg !8969
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef readonly %0) unnamed_addr #8 !dbg !8982 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !8986, metadata !DIExpression()), !dbg !8987
  %2 = icmp eq %struct._snode* %0, null, !dbg !8988
  br i1 %2, label %5, label %3, !dbg !8988

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* noundef nonnull %0) #21, !dbg !8988
  br label %5, !dbg !8988

5:                                                ; preds = %1, %3
  %6 = phi %struct._snode* [ %4, %3 ], [ null, %1 ], !dbg !8988
  ret %struct._snode* %6, !dbg !8988
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* nocapture noundef readonly %0) unnamed_addr #8 !dbg !8989 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !8991, metadata !DIExpression()), !dbg !8992
  %2 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %0) #21, !dbg !8993
  ret %struct._snode* %2, !dbg !8993
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @z_snode_next_peek(%struct._snode* nocapture noundef readonly %0) unnamed_addr #8 !dbg !8994 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !8996, metadata !DIExpression()), !dbg !8997
  %2 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !8998
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !8998
  ret %struct._snode* %3, !dbg !8999
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @GPIO_ReadPortInput(%struct.GPIO_Type* noundef %0) unnamed_addr #15 !dbg !9000 {
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %0, metadata !9004, metadata !DIExpression()), !dbg !9005
  %2 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 0, !dbg !9006
  %3 = load volatile i32, i32* %2, align 4, !dbg !9006
  ret i32 %3, !dbg !9007
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @GPIO_WritePortOutput(%struct.GPIO_Type* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !9008 {
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %0, metadata !9012, metadata !DIExpression()), !dbg !9014
  call void @llvm.dbg.value(metadata i32 %1, metadata !9013, metadata !DIExpression()), !dbg !9014
  %3 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 0, !dbg !9015
  store volatile i32 %1, i32* %3, align 4, !dbg !9016
  ret void, !dbg !9017
}

; Function Attrs: noinline nounwind optsize
define internal void @imx_gpio_port_isr(%struct.device* noundef %0) #1 !dbg !9018 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9022, metadata !DIExpression()), !dbg !9026
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9027
  %3 = bitcast i8** %2 to %struct.imx_gpio_config**, !dbg !9027
  %4 = load %struct.imx_gpio_config*, %struct.imx_gpio_config** %3, align 4, !dbg !9027
  call void @llvm.dbg.value(metadata %struct.imx_gpio_config* %4, metadata !9023, metadata !DIExpression()), !dbg !9026
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9028
  %6 = bitcast i8** %5 to %struct.imx_gpio_data**, !dbg !9028
  %7 = load %struct.imx_gpio_data*, %struct.imx_gpio_data** %6, align 4, !dbg !9028
  call void @llvm.dbg.value(metadata %struct.imx_gpio_data* %7, metadata !9024, metadata !DIExpression()), !dbg !9026
  %8 = getelementptr inbounds %struct.imx_gpio_config, %struct.imx_gpio_config* %4, i32 0, i32 1, !dbg !9029
  %9 = load %struct.GPIO_Type*, %struct.GPIO_Type** %8, align 4, !dbg !9029
  %10 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %9, i32 0, i32 6, !dbg !9030
  %11 = load volatile i32, i32* %10, align 4, !dbg !9030
  call void @llvm.dbg.value(metadata i32 %11, metadata !9025, metadata !DIExpression()), !dbg !9026
  store volatile i32 %11, i32* %10, align 4, !dbg !9031
  %12 = getelementptr inbounds %struct.imx_gpio_data, %struct.imx_gpio_data* %7, i32 0, i32 1, !dbg !9032
  tail call fastcc void @gpio_fire_callbacks(%struct._slist* noundef nonnull %12, %struct.device* noundef %0, i32 noundef %11) #21, !dbg !9033
  ret void, !dbg !9034
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_fire_callbacks(%struct._slist* nocapture noundef readonly %0, %struct.device* noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9035 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9039, metadata !DIExpression()), !dbg !9044
  call void @llvm.dbg.value(metadata %struct.device* %1, metadata !9040, metadata !DIExpression()), !dbg !9044
  call void @llvm.dbg.value(metadata i32 %2, metadata !9041, metadata !DIExpression()), !dbg !9044
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #21, !dbg !9045
  %5 = icmp eq %struct._snode* %4, null, !dbg !9045
  br i1 %5, label %24, label %6, !dbg !9045

6:                                                ; preds = %3, %22
  %7 = phi %struct._snode* [ %8, %22 ], [ %4, %3 ]
  %8 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %7) #21, !dbg !9047
  %9 = bitcast %struct._snode* %7 to %struct.gpio_callback*
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !9043, metadata !DIExpression()), !dbg !9044
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %9, metadata !9042, metadata !DIExpression()), !dbg !9044
  %10 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 2, !dbg !9048
  %11 = bitcast %struct._snode* %10 to i32*, !dbg !9048
  %12 = load i32, i32* %11, align 4, !dbg !9048
  %13 = and i32 %12, %2, !dbg !9052
  %14 = icmp eq i32 %13, 0, !dbg !9052
  br i1 %14, label %22, label %15, !dbg !9053

15:                                               ; preds = %6
  %16 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 1, !dbg !9054
  %17 = bitcast %struct._snode* %16 to void (%struct.device*, %struct.gpio_callback*, i32)**, !dbg !9054
  %18 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %17, align 4, !dbg !9054
  %19 = icmp eq void (%struct.device*, %struct.gpio_callback*, i32)* %18, null, !dbg !9054
  br i1 %19, label %20, label %21, !dbg !9058

20:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.105, i32 0, i32 0), i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.31.114, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.27.107, i32 0, i32 0), i32 noundef 77) #22, !dbg !9059
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.30.110, i32 0, i32 0)) #22, !dbg !9059
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.27.107, i32 0, i32 0), i32 noundef 77) #22, !dbg !9059
  unreachable, !dbg !9059

21:                                               ; preds = %15
  tail call void %18(%struct.device* noundef %1, %struct.gpio_callback* noundef nonnull %9, i32 noundef %13) #22, !dbg !9061
  br label %22, !dbg !9062

22:                                               ; preds = %6, %21
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !9042, metadata !DIExpression()), !dbg !9044
  %23 = icmp eq %struct._snode* %8, null, !dbg !9063
  br i1 %23, label %24, label %6, !dbg !9063

24:                                               ; preds = %22, %3
  ret void, !dbg !9064
}

; Function Attrs: noinline nounwind optsize
define internal i32 @imx_gpio_0_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !1143 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !1145, metadata !DIExpression()), !dbg !9065
  tail call void @z_arm_irq_priority_set(i32 noundef 64, i32 noundef 0, i32 noundef 0) #22, !dbg !9066
  tail call void @arch_irq_enable(i32 noundef 64) #22, !dbg !9068
  tail call void @z_arm_irq_priority_set(i32 noundef 65, i32 noundef 0, i32 noundef 0) #22, !dbg !9069
  tail call void @arch_irq_enable(i32 noundef 65) #22, !dbg !9068
  ret i32 0, !dbg !9068
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_imx_poll_in(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1) #1 !dbg !9071 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9073, metadata !DIExpression()), !dbg !9077
  call void @llvm.dbg.value(metadata i8* %1, metadata !9074, metadata !DIExpression()), !dbg !9077
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9078
  %4 = bitcast i8** %3 to %struct.imx_uart_config**, !dbg !9078
  %5 = load %struct.imx_uart_config*, %struct.imx_uart_config** %4, align 4, !dbg !9078
  %6 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %5, i32 0, i32 0, !dbg !9078
  %7 = load %struct.UART_Type*, %struct.UART_Type** %6, align 4, !dbg !9078
  call void @llvm.dbg.value(metadata %struct.UART_Type* %7, metadata !9075, metadata !DIExpression()), !dbg !9077
  call void @llvm.dbg.value(metadata i32 -1, metadata !9076, metadata !DIExpression()), !dbg !9077
  %8 = tail call fastcc zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %7, i32 noundef 9961472) #21, !dbg !9079
  br i1 %8, label %9, label %13, !dbg !9081

9:                                                ; preds = %2
  %10 = tail call fastcc zeroext i8 @UART_Getchar(%struct.UART_Type* noundef %7) #21, !dbg !9082
  store i8 %10, i8* %1, align 1, !dbg !9084
  %11 = tail call fastcc zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %7, i32 noundef 9961473) #21, !dbg !9085
  br i1 %11, label %12, label %13, !dbg !9087

12:                                               ; preds = %9
  tail call void @UART_ClearStatusFlag(%struct.UART_Type* noundef %7, i32 noundef 9961473) #22, !dbg !9088
  br label %13, !dbg !9090

13:                                               ; preds = %9, %12, %2
  %14 = phi i32 [ -1, %2 ], [ 0, %12 ], [ 0, %9 ], !dbg !9077
  call void @llvm.dbg.value(metadata i32 %14, metadata !9076, metadata !DIExpression()), !dbg !9077
  ret i32 %14, !dbg !9091
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal void @uart_imx_poll_out(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1) #14 !dbg !9092 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9094, metadata !DIExpression()), !dbg !9097
  call void @llvm.dbg.value(metadata i8 %1, metadata !9095, metadata !DIExpression()), !dbg !9097
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9098
  %4 = bitcast i8** %3 to %struct.imx_uart_config**, !dbg !9098
  %5 = load %struct.imx_uart_config*, %struct.imx_uart_config** %4, align 4, !dbg !9098
  %6 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %5, i32 0, i32 0, !dbg !9098
  %7 = load %struct.UART_Type*, %struct.UART_Type** %6, align 4, !dbg !9098
  call void @llvm.dbg.value(metadata %struct.UART_Type* %7, metadata !9096, metadata !DIExpression()), !dbg !9097
  br label %8, !dbg !9099

8:                                                ; preds = %8, %2
  %9 = tail call fastcc zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %7, i32 noundef 9699341) #21, !dbg !9100
  br i1 %9, label %10, label %8, !dbg !9099, !llvm.loop !9101

10:                                               ; preds = %8
  tail call fastcc void @UART_Putchar(%struct.UART_Type* noundef %7, i8 noundef zeroext %1) #21, !dbg !9103
  ret void, !dbg !9104
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @uart_imx_fifo_fill(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) #14 !dbg !9105 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9107, metadata !DIExpression()), !dbg !9112
  call void @llvm.dbg.value(metadata i8* %1, metadata !9108, metadata !DIExpression()), !dbg !9112
  call void @llvm.dbg.value(metadata i32 %2, metadata !9109, metadata !DIExpression()), !dbg !9112
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9113
  %5 = bitcast i8** %4 to %struct.imx_uart_config**, !dbg !9113
  %6 = load %struct.imx_uart_config*, %struct.imx_uart_config** %5, align 4, !dbg !9113
  %7 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %6, i32 0, i32 0, !dbg !9113
  %8 = load %struct.UART_Type*, %struct.UART_Type** %7, align 4, !dbg !9113
  call void @llvm.dbg.value(metadata %struct.UART_Type* %8, metadata !9110, metadata !DIExpression()), !dbg !9112
  call void @llvm.dbg.value(metadata i32 0, metadata !9111, metadata !DIExpression()), !dbg !9112
  %9 = icmp eq i32 %2, 0, !dbg !9114
  br i1 %9, label %18, label %10, !dbg !9115

10:                                               ; preds = %3, %13
  %11 = phi i32 [ %16, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !9111, metadata !DIExpression()), !dbg !9112
  %12 = tail call fastcc zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %8, i32 noundef 9699341) #21, !dbg !9116
  br i1 %12, label %13, label %18, !dbg !9117

13:                                               ; preds = %10
  %14 = getelementptr inbounds i8, i8* %1, i32 %11, !dbg !9118
  %15 = load i8, i8* %14, align 1, !dbg !9118
  tail call fastcc void @UART_Putchar(%struct.UART_Type* noundef %8, i8 noundef zeroext %15) #21, !dbg !9120
  %16 = add nuw i32 %11, 1, !dbg !9121
  call void @llvm.dbg.value(metadata i32 %16, metadata !9111, metadata !DIExpression()), !dbg !9112
  %17 = icmp eq i32 %16, %2, !dbg !9114
  br i1 %17, label %18, label %10, !dbg !9115, !llvm.loop !9122

18:                                               ; preds = %10, %13, %3
  %19 = phi i32 [ 0, %3 ], [ %2, %13 ], [ %11, %10 ], !dbg !9112
  ret i32 %19, !dbg !9124
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_imx_fifo_read(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) #1 !dbg !9125 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9127, metadata !DIExpression()), !dbg !9132
  call void @llvm.dbg.value(metadata i8* %1, metadata !9128, metadata !DIExpression()), !dbg !9132
  call void @llvm.dbg.value(metadata i32 %2, metadata !9129, metadata !DIExpression()), !dbg !9132
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9133
  %5 = bitcast i8** %4 to %struct.imx_uart_config**, !dbg !9133
  %6 = load %struct.imx_uart_config*, %struct.imx_uart_config** %5, align 4, !dbg !9133
  %7 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %6, i32 0, i32 0, !dbg !9133
  %8 = load %struct.UART_Type*, %struct.UART_Type** %7, align 4, !dbg !9133
  call void @llvm.dbg.value(metadata %struct.UART_Type* %8, metadata !9130, metadata !DIExpression()), !dbg !9132
  call void @llvm.dbg.value(metadata i32 0, metadata !9131, metadata !DIExpression()), !dbg !9132
  %9 = icmp eq i32 %2, 0, !dbg !9134
  br i1 %9, label %18, label %10, !dbg !9135

10:                                               ; preds = %3, %13
  %11 = phi i32 [ %15, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !9131, metadata !DIExpression()), !dbg !9132
  %12 = tail call fastcc zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %8, i32 noundef 9699337) #21, !dbg !9136
  br i1 %12, label %13, label %18, !dbg !9137

13:                                               ; preds = %10
  %14 = tail call fastcc zeroext i8 @UART_Getchar(%struct.UART_Type* noundef %8) #21, !dbg !9138
  %15 = add nuw i32 %11, 1, !dbg !9140
  call void @llvm.dbg.value(metadata i32 %15, metadata !9131, metadata !DIExpression()), !dbg !9132
  %16 = getelementptr inbounds i8, i8* %1, i32 %11, !dbg !9141
  store i8 %14, i8* %16, align 1, !dbg !9142
  %17 = icmp eq i32 %15, %2, !dbg !9134
  br i1 %17, label %18, label %10, !dbg !9135, !llvm.loop !9143

18:                                               ; preds = %10, %13, %3
  %19 = phi i32 [ 0, %3 ], [ %2, %13 ], [ %11, %10 ], !dbg !9132
  %20 = tail call fastcc zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %8, i32 noundef 9961473) #21, !dbg !9145
  br i1 %20, label %21, label %22, !dbg !9147

21:                                               ; preds = %18
  tail call void @UART_ClearStatusFlag(%struct.UART_Type* noundef %8, i32 noundef 9961473) #22, !dbg !9148
  br label %22, !dbg !9150

22:                                               ; preds = %21, %18
  ret i32 %19, !dbg !9151
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_imx_irq_tx_enable(%struct.device* nocapture noundef readonly %0) #1 !dbg !9152 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9154, metadata !DIExpression()), !dbg !9156
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9157
  %3 = bitcast i8** %2 to %struct.imx_uart_config**, !dbg !9157
  %4 = load %struct.imx_uart_config*, %struct.imx_uart_config** %3, align 4, !dbg !9157
  %5 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %4, i32 0, i32 0, !dbg !9157
  %6 = load %struct.UART_Type*, %struct.UART_Type** %5, align 4, !dbg !9157
  call void @llvm.dbg.value(metadata %struct.UART_Type* %6, metadata !9155, metadata !DIExpression()), !dbg !9156
  tail call void @UART_SetIntCmd(%struct.UART_Type* noundef %6, i32 noundef 8388621, i1 noundef zeroext true) #22, !dbg !9158
  ret void, !dbg !9159
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_imx_irq_tx_disable(%struct.device* nocapture noundef readonly %0) #1 !dbg !9160 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9162, metadata !DIExpression()), !dbg !9164
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9165
  %3 = bitcast i8** %2 to %struct.imx_uart_config**, !dbg !9165
  %4 = load %struct.imx_uart_config*, %struct.imx_uart_config** %3, align 4, !dbg !9165
  %5 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %4, i32 0, i32 0, !dbg !9165
  %6 = load %struct.UART_Type*, %struct.UART_Type** %5, align 4, !dbg !9165
  call void @llvm.dbg.value(metadata %struct.UART_Type* %6, metadata !9163, metadata !DIExpression()), !dbg !9164
  tail call void @UART_SetIntCmd(%struct.UART_Type* noundef %6, i32 noundef 8388621, i1 noundef zeroext false) #22, !dbg !9166
  ret void, !dbg !9167
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_imx_irq_tx_ready(%struct.device* nocapture noundef readonly %0) #15 !dbg !9168 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9170, metadata !DIExpression()), !dbg !9172
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9173
  %3 = bitcast i8** %2 to %struct.imx_uart_config**, !dbg !9173
  %4 = load %struct.imx_uart_config*, %struct.imx_uart_config** %3, align 4, !dbg !9173
  %5 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %4, i32 0, i32 0, !dbg !9173
  %6 = load %struct.UART_Type*, %struct.UART_Type** %5, align 4, !dbg !9173
  call void @llvm.dbg.value(metadata %struct.UART_Type* %6, metadata !9171, metadata !DIExpression()), !dbg !9172
  %7 = tail call fastcc zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %6, i32 noundef 9699341) #21, !dbg !9174
  %8 = zext i1 %7 to i32, !dbg !9174
  ret i32 %8, !dbg !9175
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_imx_irq_rx_enable(%struct.device* nocapture noundef readonly %0) #1 !dbg !9176 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9178, metadata !DIExpression()), !dbg !9180
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9181
  %3 = bitcast i8** %2 to %struct.imx_uart_config**, !dbg !9181
  %4 = load %struct.imx_uart_config*, %struct.imx_uart_config** %3, align 4, !dbg !9181
  %5 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %4, i32 0, i32 0, !dbg !9181
  %6 = load %struct.UART_Type*, %struct.UART_Type** %5, align 4, !dbg !9181
  call void @llvm.dbg.value(metadata %struct.UART_Type* %6, metadata !9179, metadata !DIExpression()), !dbg !9180
  tail call void @UART_SetIntCmd(%struct.UART_Type* noundef %6, i32 noundef 8388617, i1 noundef zeroext true) #22, !dbg !9182
  ret void, !dbg !9183
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_imx_irq_rx_disable(%struct.device* nocapture noundef readonly %0) #1 !dbg !9184 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9186, metadata !DIExpression()), !dbg !9188
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9189
  %3 = bitcast i8** %2 to %struct.imx_uart_config**, !dbg !9189
  %4 = load %struct.imx_uart_config*, %struct.imx_uart_config** %3, align 4, !dbg !9189
  %5 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %4, i32 0, i32 0, !dbg !9189
  %6 = load %struct.UART_Type*, %struct.UART_Type** %5, align 4, !dbg !9189
  call void @llvm.dbg.value(metadata %struct.UART_Type* %6, metadata !9187, metadata !DIExpression()), !dbg !9188
  tail call void @UART_SetIntCmd(%struct.UART_Type* noundef %6, i32 noundef 8388617, i1 noundef zeroext false) #22, !dbg !9190
  ret void, !dbg !9191
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_imx_irq_rx_ready(%struct.device* nocapture noundef readonly %0) #15 !dbg !9192 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9194, metadata !DIExpression()), !dbg !9196
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9197
  %3 = bitcast i8** %2 to %struct.imx_uart_config**, !dbg !9197
  %4 = load %struct.imx_uart_config*, %struct.imx_uart_config** %3, align 4, !dbg !9197
  %5 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %4, i32 0, i32 0, !dbg !9197
  %6 = load %struct.UART_Type*, %struct.UART_Type** %5, align 4, !dbg !9197
  call void @llvm.dbg.value(metadata %struct.UART_Type* %6, metadata !9195, metadata !DIExpression()), !dbg !9196
  %7 = tail call fastcc zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %6, i32 noundef 9699337) #21, !dbg !9198
  %8 = zext i1 %7 to i32, !dbg !9198
  ret i32 %8, !dbg !9199
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_imx_irq_err_enable(%struct.device* nocapture noundef readonly %0) #1 !dbg !9200 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9202, metadata !DIExpression()), !dbg !9204
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9205
  %3 = bitcast i8** %2 to %struct.imx_uart_config**, !dbg !9205
  %4 = load %struct.imx_uart_config*, %struct.imx_uart_config** %3, align 4, !dbg !9205
  %5 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %4, i32 0, i32 0, !dbg !9205
  %6 = load %struct.UART_Type*, %struct.UART_Type** %5, align 4, !dbg !9205
  call void @llvm.dbg.value(metadata %struct.UART_Type* %6, metadata !9203, metadata !DIExpression()), !dbg !9204
  tail call void @UART_SetIntCmd(%struct.UART_Type* noundef %6, i32 noundef 8912908, i1 noundef zeroext true) #22, !dbg !9206
  tail call void @UART_SetIntCmd(%struct.UART_Type* noundef %6, i32 noundef 8912907, i1 noundef zeroext true) #22, !dbg !9207
  ret void, !dbg !9208
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_imx_irq_err_disable(%struct.device* nocapture noundef readonly %0) #1 !dbg !9209 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9211, metadata !DIExpression()), !dbg !9213
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9214
  %3 = bitcast i8** %2 to %struct.imx_uart_config**, !dbg !9214
  %4 = load %struct.imx_uart_config*, %struct.imx_uart_config** %3, align 4, !dbg !9214
  %5 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %4, i32 0, i32 0, !dbg !9214
  %6 = load %struct.UART_Type*, %struct.UART_Type** %5, align 4, !dbg !9214
  call void @llvm.dbg.value(metadata %struct.UART_Type* %6, metadata !9212, metadata !DIExpression()), !dbg !9213
  tail call void @UART_SetIntCmd(%struct.UART_Type* noundef %6, i32 noundef 8912908, i1 noundef zeroext false) #22, !dbg !9215
  tail call void @UART_SetIntCmd(%struct.UART_Type* noundef %6, i32 noundef 8912907, i1 noundef zeroext false) #22, !dbg !9216
  ret void, !dbg !9217
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_imx_irq_is_pending(%struct.device* nocapture noundef readonly %0) #15 !dbg !9218 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9220, metadata !DIExpression()), !dbg !9222
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9223
  %3 = bitcast i8** %2 to %struct.imx_uart_config**, !dbg !9223
  %4 = load %struct.imx_uart_config*, %struct.imx_uart_config** %3, align 4, !dbg !9223
  %5 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %4, i32 0, i32 0, !dbg !9223
  %6 = load %struct.UART_Type*, %struct.UART_Type** %5, align 4, !dbg !9223
  call void @llvm.dbg.value(metadata %struct.UART_Type* %6, metadata !9221, metadata !DIExpression()), !dbg !9222
  %7 = tail call fastcc zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %6, i32 noundef 9699337) #21, !dbg !9224
  br i1 %7, label %11, label %8, !dbg !9225

8:                                                ; preds = %1
  %9 = tail call fastcc zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %6, i32 noundef 9699341) #21, !dbg !9226
  %10 = zext i1 %9 to i32, !dbg !9225
  br label %11, !dbg !9225

11:                                               ; preds = %8, %1
  %12 = phi i32 [ 1, %1 ], [ %10, %8 ]
  ret i32 %12, !dbg !9227
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @uart_imx_irq_update(%struct.device* nocapture noundef readnone %0) #2 !dbg !9228 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9230, metadata !DIExpression()), !dbg !9231
  ret i32 1, !dbg !9232
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal void @uart_imx_irq_callback_set(%struct.device* nocapture noundef readonly %0, void (%struct.device*, i8*)* noundef %1, i8* noundef %2) #9 !dbg !9233 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9235, metadata !DIExpression()), !dbg !9240
  call void @llvm.dbg.value(metadata void (%struct.device*, i8*)* %1, metadata !9236, metadata !DIExpression()), !dbg !9240
  call void @llvm.dbg.value(metadata i8* %2, metadata !9237, metadata !DIExpression()), !dbg !9240
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9241
  %5 = bitcast i8** %4 to %struct.imx_uart_data**, !dbg !9241
  %6 = load %struct.imx_uart_data*, %struct.imx_uart_data** %5, align 4, !dbg !9241
  call void @llvm.dbg.value(metadata %struct.imx_uart_data* %6, metadata !9238, metadata !DIExpression()), !dbg !9240
  %7 = getelementptr inbounds %struct.imx_uart_data, %struct.imx_uart_data* %6, i32 0, i32 0, !dbg !9242
  store void (%struct.device*, i8*)* %1, void (%struct.device*, i8*)** %7, align 4, !dbg !9243
  %8 = getelementptr inbounds %struct.imx_uart_data, %struct.imx_uart_data* %6, i32 0, i32 1, !dbg !9244
  store i8* %2, i8** %8, align 4, !dbg !9245
  ret void, !dbg !9246
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i1 @UART_GetStatusFlag(%struct.UART_Type* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !9247 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !9251, metadata !DIExpression()), !dbg !9254
  call void @llvm.dbg.value(metadata i32 %1, metadata !9252, metadata !DIExpression()), !dbg !9254
  call void @llvm.dbg.value(metadata i32* null, metadata !9253, metadata !DIExpression()), !dbg !9254
  %3 = ptrtoint %struct.UART_Type* %0 to i32, !dbg !9255
  %4 = lshr i32 %1, 16, !dbg !9256
  %5 = add i32 %4, %3, !dbg !9257
  %6 = inttoptr i32 %5 to i32*, !dbg !9258
  call void @llvm.dbg.value(metadata i32* %6, metadata !9253, metadata !DIExpression()), !dbg !9254
  %7 = load volatile i32, i32* %6, align 4, !dbg !9259
  %8 = and i32 %1, 65535, !dbg !9260
  %9 = shl nuw i32 1, %8, !dbg !9261
  %10 = and i32 %7, %9, !dbg !9261
  %11 = icmp ne i32 %10, 0, !dbg !9261
  ret i1 %11, !dbg !9262
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i8 @UART_Getchar(%struct.UART_Type* noundef %0) unnamed_addr #15 !dbg !9263 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !9267, metadata !DIExpression()), !dbg !9268
  %2 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 0, !dbg !9269
  %3 = load volatile i32, i32* %2, align 4, !dbg !9269
  %4 = trunc i32 %3 to i8, !dbg !9270
  ret i8 %4, !dbg !9271
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @UART_Putchar(%struct.UART_Type* noundef %0, i8 noundef zeroext %1) unnamed_addr #14 !dbg !9272 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !9276, metadata !DIExpression()), !dbg !9278
  call void @llvm.dbg.value(metadata i8 %1, metadata !9277, metadata !DIExpression()), !dbg !9278
  %3 = zext i8 %1 to i32, !dbg !9279
  %4 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 2, !dbg !9280
  store volatile i32 %3, i32* %4, align 4, !dbg !9281
  ret void, !dbg !9282
}

; Function Attrs: noinline nounwind optsize
define internal void @irq_config_func_0(%struct.device* nocapture noundef readnone %0) #1 !dbg !1441 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !1443, metadata !DIExpression()), !dbg !9283
  tail call void @z_arm_irq_priority_set(i32 noundef 26, i32 noundef 3, i32 noundef 0) #22, !dbg !9284
  tail call void @arch_irq_enable(i32 noundef 26) #22, !dbg !9286
  ret void, !dbg !9286
}

; Function Attrs: noinline nounwind optsize
define dso_local void @uart_imx_isr(%struct.device* noundef %0) #1 !dbg !9287 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9289, metadata !DIExpression()), !dbg !9291
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9292
  %3 = bitcast i8** %2 to %struct.imx_uart_data**, !dbg !9292
  %4 = load %struct.imx_uart_data*, %struct.imx_uart_data** %3, align 4, !dbg !9292
  call void @llvm.dbg.value(metadata %struct.imx_uart_data* %4, metadata !9290, metadata !DIExpression()), !dbg !9291
  %5 = getelementptr inbounds %struct.imx_uart_data, %struct.imx_uart_data* %4, i32 0, i32 0, !dbg !9293
  %6 = load void (%struct.device*, i8*)*, void (%struct.device*, i8*)** %5, align 4, !dbg !9293
  %7 = icmp eq void (%struct.device*, i8*)* %6, null, !dbg !9295
  br i1 %7, label %11, label %8, !dbg !9296

8:                                                ; preds = %1
  %9 = getelementptr inbounds %struct.imx_uart_data, %struct.imx_uart_data* %4, i32 0, i32 1, !dbg !9297
  %10 = load i8*, i8** %9, align 4, !dbg !9297
  tail call void %6(%struct.device* noundef nonnull %0, i8* noundef %10) #22, !dbg !9299
  br label %11, !dbg !9300

11:                                               ; preds = %8, %1
  ret void, !dbg !9301
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_imx_init(%struct.device* noundef %0) #1 !dbg !9302 {
  %2 = alloca %struct._uart_init_config, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9304, metadata !DIExpression()), !dbg !9319
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9320
  %4 = bitcast i8** %3 to %struct.imx_uart_config**, !dbg !9320
  %5 = load %struct.imx_uart_config*, %struct.imx_uart_config** %4, align 4, !dbg !9320
  %6 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %5, i32 0, i32 0, !dbg !9320
  %7 = load %struct.UART_Type*, %struct.UART_Type** %6, align 4, !dbg !9320
  call void @llvm.dbg.value(metadata %struct.UART_Type* %7, metadata !9305, metadata !DIExpression()), !dbg !9319
  call void @llvm.dbg.value(metadata %struct.imx_uart_config* %5, metadata !9306, metadata !DIExpression()), !dbg !9319
  %8 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #20, !dbg !9321, !srcloc !9327
  call void @llvm.dbg.value(metadata i32 undef, metadata !9324, metadata !DIExpression()) #20, !dbg !9328
  call void @llvm.dbg.value(metadata i32 undef, metadata !9325, metadata !DIExpression()) #20, !dbg !9328
  call void @llvm.dbg.value(metadata i32 undef, metadata !9307, metadata !DIExpression()), !dbg !9319
  %9 = bitcast %struct._uart_init_config* %2 to i8*, !dbg !9329
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #20, !dbg !9329
  call void @llvm.dbg.declare(metadata %struct._uart_init_config* %2, metadata !9309, metadata !DIExpression()), !dbg !9330
  %10 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %2, i32 0, i32 1, !dbg !9331
  %11 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %5, i32 0, i32 1, !dbg !9332
  %12 = load i32, i32* %11, align 4, !dbg !9332
  store i32 %12, i32* %10, align 4, !dbg !9331
  %13 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %2, i32 0, i32 2, !dbg !9331
  store i32 32, i32* %13, align 4, !dbg !9331
  %14 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %2, i32 0, i32 3, !dbg !9331
  store i32 0, i32* %14, align 4, !dbg !9331
  %15 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %2, i32 0, i32 4, !dbg !9331
  store i32 0, i32* %15, align 4, !dbg !9331
  %16 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %2, i32 0, i32 5, !dbg !9331
  store i32 6, i32* %16, align 4, !dbg !9331
  %17 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %5, i32 0, i32 3, !dbg !9333
  %18 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %17, align 4, !dbg !9333
  %19 = tail call fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %18) #21, !dbg !9334
  call void @llvm.dbg.value(metadata i32 %19, metadata !9308, metadata !DIExpression()), !dbg !9319
  %20 = icmp eq i32 %19, 0, !dbg !9335
  br i1 %20, label %21, label %30, !dbg !9337

21:                                               ; preds = %1
  %22 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %2, i32 0, i32 0, !dbg !9331
  %23 = extractvalue { i32, i32 } %8, 0, !dbg !9321
  call void @llvm.dbg.value(metadata i32 %23, metadata !9324, metadata !DIExpression()) #20, !dbg !9328
  call void @llvm.dbg.value(metadata i32 %23, metadata !9307, metadata !DIExpression()), !dbg !9319
  %24 = tail call i32 @get_uart_clock_freq(%struct.UART_Type* noundef %7) #22, !dbg !9338
  store i32 %24, i32* %22, align 4, !dbg !9339
  call void @UART_Init(%struct.UART_Type* noundef %7, %struct._uart_init_config* noundef nonnull %2) #22, !dbg !9340
  call fastcc void @UART_SetTxFifoWatermark(%struct.UART_Type* noundef %7) #21, !dbg !9341
  call fastcc void @UART_SetRxFifoWatermark(%struct.UART_Type* noundef %7) #21, !dbg !9342
  call void @llvm.dbg.value(metadata i32 undef, metadata !9343, metadata !DIExpression()) #20, !dbg !9346
  call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %23) #20, !dbg !9348, !srcloc !9349
  %25 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %5, i32 0, i32 4, !dbg !9350
  %26 = load void (%struct.device*)*, void (%struct.device*)** %25, align 4, !dbg !9350
  call void %26(%struct.device* noundef nonnull %0) #22, !dbg !9351
  %27 = getelementptr inbounds %struct.imx_uart_config, %struct.imx_uart_config* %5, i32 0, i32 2, !dbg !9352
  %28 = load i8, i8* %27, align 4, !dbg !9352
  %29 = zext i8 %28 to i32, !dbg !9353
  call void @UART_SetModemMode(%struct.UART_Type* noundef %7, i32 noundef %29) #22, !dbg !9354
  call fastcc void @UART_Enable(%struct.UART_Type* noundef %7) #21, !dbg !9355
  br label %30, !dbg !9356

30:                                               ; preds = %1, %21
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #20, !dbg !9357
  ret i32 %19, !dbg !9357
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %0) unnamed_addr #1 !dbg !9358 {
  %2 = alloca %struct.pinctrl_state*, align 4
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !9362, metadata !DIExpression()), !dbg !9366
  call void @llvm.dbg.value(metadata i8 0, metadata !9363, metadata !DIExpression()), !dbg !9366
  %3 = bitcast %struct.pinctrl_state** %2 to i8*, !dbg !9367
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #20, !dbg !9367
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !9365, metadata !DIExpression(DW_OP_deref)), !dbg !9366
  %4 = call i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* noundef %0, i8 noundef zeroext 0, %struct.pinctrl_state** noundef nonnull %2) #22, !dbg !9368
  call void @llvm.dbg.value(metadata i32 %4, metadata !9364, metadata !DIExpression()), !dbg !9366
  %5 = icmp slt i32 %4, 0, !dbg !9369
  br i1 %5, label %9, label %6, !dbg !9371

6:                                                ; preds = %1
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %2, align 4, !dbg !9372
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %7, metadata !9365, metadata !DIExpression()), !dbg !9366
  %8 = call fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* noundef %7) #21, !dbg !9373
  br label %9, !dbg !9374

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ %4, %1 ], !dbg !9366
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #20, !dbg !9375
  ret i32 %10, !dbg !9375
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @UART_SetTxFifoWatermark(%struct.UART_Type* noundef %0) unnamed_addr #14 !dbg !9376 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !9378, metadata !DIExpression()), !dbg !9380
  call void @llvm.dbg.value(metadata i8 2, metadata !9379, metadata !DIExpression()), !dbg !9380
  %2 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 8, !dbg !9381
  %3 = load volatile i32, i32* %2, align 4, !dbg !9381
  %4 = and i32 %3, -64513, !dbg !9382
  %5 = or i32 %4, 2048, !dbg !9383
  store volatile i32 %5, i32* %2, align 4, !dbg !9384
  ret void, !dbg !9385
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @UART_SetRxFifoWatermark(%struct.UART_Type* noundef %0) unnamed_addr #14 !dbg !9386 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !9388, metadata !DIExpression()), !dbg !9390
  call void @llvm.dbg.value(metadata i8 1, metadata !9389, metadata !DIExpression()), !dbg !9390
  %2 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 8, !dbg !9391
  %3 = load volatile i32, i32* %2, align 4, !dbg !9391
  %4 = and i32 %3, -64, !dbg !9392
  %5 = or i32 %4, 1, !dbg !9393
  store volatile i32 %5, i32* %2, align 4, !dbg !9394
  ret void, !dbg !9395
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @UART_Enable(%struct.UART_Type* noundef %0) unnamed_addr #14 !dbg !9396 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !9400, metadata !DIExpression()), !dbg !9401
  %2 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 4, !dbg !9402
  %3 = load volatile i32, i32* %2, align 4, !dbg !9403
  %4 = or i32 %3, 1, !dbg !9403
  store volatile i32 %4, i32* %2, align 4, !dbg !9403
  ret void, !dbg !9404
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* nocapture noundef readonly %0) unnamed_addr #1 !dbg !9405 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* undef, metadata !9409, metadata !DIExpression()), !dbg !9412
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %0, metadata !9410, metadata !DIExpression()), !dbg !9412
  call void @llvm.dbg.value(metadata i32 0, metadata !9411, metadata !DIExpression()), !dbg !9412
  %2 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 0, !dbg !9413
  %3 = load %struct.pinctrl_soc_pin*, %struct.pinctrl_soc_pin** %2, align 4, !dbg !9413
  %4 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 1, !dbg !9414
  %5 = load i8, i8* %4, align 4, !dbg !9414
  %6 = tail call i32 @pinctrl_configure_pins(%struct.pinctrl_soc_pin* noundef %3, i8 noundef zeroext %5, i32 noundef 0) #22, !dbg !9415
  ret i32 %6, !dbg !9416
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @sys_clock_driver_init(%struct.device* nocapture noundef readnone %0) #14 !dbg !9417 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9419, metadata !DIExpression()), !dbg !9420
  tail call fastcc void @__NVIC_SetPriority.120() #21, !dbg !9421
  store i32 19999, i32* @last_load, align 4, !dbg !9422
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !9423
  store volatile i32 19999, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !9424
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !9425
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !9426
  %3 = or i32 %2, 7, !dbg !9426
  store volatile i32 %3, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !9426
  ret i32 0, !dbg !9427
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.120() unnamed_addr #14 !dbg !9428 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !9430, metadata !DIExpression()), !dbg !9432
  call void @llvm.dbg.value(metadata i32 1, metadata !9431, metadata !DIExpression()), !dbg !9432
  store volatile i8 16, i8* inttoptr (i32 -536810205 to i8*), align 1, !dbg !9433
  ret void, !dbg !9436
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_isr(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !9437 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9439, metadata !DIExpression()), !dbg !9441
  %2 = tail call fastcc i32 @elapsed() #21, !dbg !9442
  %3 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !9443
  %4 = load i32, i32* @cycle_count, align 4, !dbg !9444
  %5 = add i32 %4, %3, !dbg !9444
  store i32 %5, i32* @cycle_count, align 4, !dbg !9444
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !9445
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !9446
  %7 = sub i32 %5, %6, !dbg !9449
  %8 = udiv i32 %7, 20000, !dbg !9450
  call void @llvm.dbg.value(metadata i32 %8, metadata !9440, metadata !DIExpression()), !dbg !9441
  %9 = mul nuw i32 %8, 20000, !dbg !9451
  %10 = add i32 %9, %6, !dbg !9452
  store i32 %10, i32* @announced_cycles, align 4, !dbg !9452
  tail call void @sys_clock_announce(i32 noundef %8) #22, !dbg !9453
  tail call void @z_arm_int_exit() #22, !dbg !9454
  ret void, !dbg !9455
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @elapsed() unnamed_addr #14 !dbg !9456 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !9461
  call void @llvm.dbg.value(metadata i32 %1, metadata !9458, metadata !DIExpression()), !dbg !9462
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !9463
  call void @llvm.dbg.value(metadata i32 %2, metadata !9459, metadata !DIExpression()), !dbg !9462
  %3 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !9464
  call void @llvm.dbg.value(metadata i32 %3, metadata !9460, metadata !DIExpression()), !dbg !9462
  %4 = and i32 %2, 65536, !dbg !9465
  %5 = icmp ne i32 %4, 0, !dbg !9465
  %6 = icmp ult i32 %1, %3
  %7 = select i1 %5, i1 true, i1 %6, !dbg !9467
  %8 = load i32, i32* @last_load, align 4, !dbg !9462
  br i1 %7, label %9, label %13, !dbg !9467

9:                                                ; preds = %0
  %10 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !9468
  %11 = add i32 %10, %8, !dbg !9468
  store volatile i32 %11, i32* @overflow_cyc, align 4, !dbg !9468
  %12 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !9470
  br label %13, !dbg !9471

13:                                               ; preds = %0, %9
  %14 = sub i32 %8, %3, !dbg !9472
  %15 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !9473
  %16 = add i32 %14, %15, !dbg !9474
  ret i32 %16, !dbg !9475
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_set_timeout(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !9476 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9480, metadata !DIExpression()), !dbg !9493
  call void @llvm.dbg.value(metadata i1 %1, metadata !9481, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9493
  %3 = icmp eq i32 %0, -1
  %4 = and i1 %3, %1, !dbg !9494
  br i1 %4, label %5, label %8, !dbg !9494

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !9496
  %7 = and i32 %6, -2, !dbg !9496
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !9496
  store i32 -16777216, i32* @last_load, align 4, !dbg !9498
  br label %60, !dbg !9499

8:                                                ; preds = %2
  %9 = load i32, i32* @last_load, align 4, !dbg !9500
  call void @llvm.dbg.value(metadata i32 %9, metadata !9485, metadata !DIExpression()), !dbg !9493
  br i1 %3, label %18, label %10, !dbg !9501

10:                                               ; preds = %8
  %11 = add i32 %0, -1, !dbg !9501
  call void @llvm.dbg.value(metadata i32 undef, metadata !9480, metadata !DIExpression()), !dbg !9493
  %12 = icmp slt i32 %11, 1, !dbg !9502
  br i1 %12, label %18, label %13, !dbg !9502

13:                                               ; preds = %10
  %14 = icmp ult i32 %11, 837, !dbg !9502
  %15 = select i1 %14, i32 %11, i32 837, !dbg !9502
  %16 = mul nuw nsw i32 %15, 20000, !dbg !9502
  %17 = add nuw nsw i32 %16, 19999, !dbg !9502
  br label %18, !dbg !9502

18:                                               ; preds = %13, %8, %10
  %19 = phi i32 [ 19999, %10 ], [ 16739999, %8 ], [ %17, %13 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !9480, metadata !DIExpression()), !dbg !9493
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !9503, metadata !DIExpression()) #20, !dbg !9510
  %20 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #20, !dbg !9512, !srcloc !9518
  call void @llvm.dbg.value(metadata i32 undef, metadata !9515, metadata !DIExpression()) #20, !dbg !9519
  call void @llvm.dbg.value(metadata i32 undef, metadata !9516, metadata !DIExpression()) #20, !dbg !9519
  call void @llvm.dbg.value(metadata i32 undef, metadata !9509, metadata !DIExpression()) #20, !dbg !9510
  %21 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #22, !dbg !9520
  br i1 %21, label %23, label %22, !dbg !9523

22:                                               ; preds = %18
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.121, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.122, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.123, i32 0, i32 0), i32 noundef 148) #22, !dbg !9524
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.124, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #22, !dbg !9524
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.123, i32 0, i32 0), i32 noundef 148) #22, !dbg !9524
  unreachable, !dbg !9524

23:                                               ; preds = %18
  %24 = extractvalue { i32, i32 } %20, 0, !dbg !9512
  call void @llvm.dbg.value(metadata i32 %24, metadata !9515, metadata !DIExpression()) #20, !dbg !9519
  call void @llvm.dbg.value(metadata i32 %24, metadata !9509, metadata !DIExpression()) #20, !dbg !9510
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #22, !dbg !9526
  call void @llvm.dbg.value(metadata i32 %24, metadata !9486, metadata !DIExpression()), !dbg !9493
  %25 = tail call fastcc i32 @elapsed() #21, !dbg !9527
  call void @llvm.dbg.value(metadata i32 %25, metadata !9491, metadata !DIExpression()), !dbg !9493
  %26 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !9528
  call void @llvm.dbg.value(metadata i32 %26, metadata !9483, metadata !DIExpression()), !dbg !9493
  %27 = load i32, i32* @cycle_count, align 4, !dbg !9529
  %28 = add i32 %27, %25, !dbg !9529
  store i32 %28, i32* @cycle_count, align 4, !dbg !9529
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !9530
  %29 = load i32, i32* @announced_cycles, align 4, !dbg !9531
  %30 = sub i32 %28, %29, !dbg !9532
  call void @llvm.dbg.value(metadata i32 %30, metadata !9492, metadata !DIExpression()), !dbg !9493
  %31 = icmp slt i32 %30, 0, !dbg !9533
  br i1 %31, label %41, label %32, !dbg !9535

32:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 undef, metadata !9482, metadata !DIExpression()), !dbg !9493
  call void @llvm.dbg.value(metadata i32 undef, metadata !9482, metadata !DIExpression()), !dbg !9493
  %33 = add nuw i32 %19, %30, !dbg !9536
  %34 = urem i32 %33, 20000, !dbg !9538
  call void @llvm.dbg.value(metadata !DIArgList(i32 %33, i32 %34), metadata !9482, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !9493
  %35 = sub nuw nsw i32 %19, %34, !dbg !9539
  call void @llvm.dbg.value(metadata i32 %35, metadata !9482, metadata !DIExpression()), !dbg !9493
  %36 = icmp ugt i32 %35, 1250, !dbg !9540
  br i1 %36, label %37, label %39, !dbg !9540

37:                                               ; preds = %32
  call void @llvm.dbg.value(metadata i32 %35, metadata !9482, metadata !DIExpression()), !dbg !9493
  %38 = icmp ugt i32 %35, 16740000, !dbg !9541
  br i1 %38, label %41, label %39, !dbg !9543

39:                                               ; preds = %32, %37
  %40 = phi i32 [ %35, %37 ], [ 1250, %32 ]
  br label %41

41:                                               ; preds = %37, %23, %39
  %42 = phi i32 [ %40, %39 ], [ 1250, %23 ], [ 16740000, %37 ]
  store i32 %42, i32* @last_load, align 4, !dbg !9544
  %43 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !9545
  call void @llvm.dbg.value(metadata i32 %43, metadata !9484, metadata !DIExpression()), !dbg !9493
  %44 = add nsw i32 %42, -1, !dbg !9546
  store volatile i32 %44, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !9547
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !9548
  %45 = icmp ult i32 %26, %43, !dbg !9549
  br i1 %45, label %46, label %51, !dbg !9551

46:                                               ; preds = %41
  %47 = load i32, i32* @cycle_count, align 4, !dbg !9552
  %48 = add i32 %26, %9, !dbg !9554
  %49 = sub i32 %48, %43, !dbg !9555
  %50 = add i32 %49, %47, !dbg !9552
  br label %55, !dbg !9556

51:                                               ; preds = %41
  %52 = sub i32 %26, %43, !dbg !9557
  %53 = load i32, i32* @cycle_count, align 4, !dbg !9559
  %54 = add i32 %52, %53, !dbg !9559
  br label %55

55:                                               ; preds = %51, %46
  %56 = phi i32 [ %54, %51 ], [ %50, %46 ], !dbg !9560
  store i32 %56, i32* @cycle_count, align 4, !dbg !9560
  call void @llvm.dbg.value(metadata i32 undef, metadata !9561, metadata !DIExpression()) #20, !dbg !9567
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !9566, metadata !DIExpression()) #20, !dbg !9567
  %57 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #22, !dbg !9569
  br i1 %57, label %59, label %58, !dbg !9572

58:                                               ; preds = %55
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.121, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.125, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.123, i32 0, i32 0), i32 noundef 194) #22, !dbg !9573
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.126, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #22, !dbg !9573
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.123, i32 0, i32 0), i32 noundef 194) #22, !dbg !9573
  unreachable, !dbg !9573

59:                                               ; preds = %55
  call void @llvm.dbg.value(metadata i32 %24, metadata !9561, metadata !DIExpression()) #20, !dbg !9567
  call void @llvm.dbg.value(metadata i32 %24, metadata !9575, metadata !DIExpression()) #20, !dbg !9578
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %24) #20, !dbg !9580, !srcloc !9581
  br label %60

60:                                               ; preds = %59, %5
  ret void, !dbg !9582
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_elapsed() local_unnamed_addr #1 !dbg !9583 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !9503, metadata !DIExpression()) #20, !dbg !9587
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #20, !dbg !9589, !srcloc !9518
  call void @llvm.dbg.value(metadata i32 undef, metadata !9515, metadata !DIExpression()) #20, !dbg !9591
  call void @llvm.dbg.value(metadata i32 undef, metadata !9516, metadata !DIExpression()) #20, !dbg !9591
  call void @llvm.dbg.value(metadata i32 undef, metadata !9509, metadata !DIExpression()) #20, !dbg !9587
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #22, !dbg !9592
  br i1 %2, label %4, label %3, !dbg !9593

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.121, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.122, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.123, i32 0, i32 0), i32 noundef 148) #22, !dbg !9594
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.124, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #22, !dbg !9594
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.123, i32 0, i32 0), i32 noundef 148) #22, !dbg !9594
  unreachable, !dbg !9594

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !9515, metadata !DIExpression()) #20, !dbg !9591
  call void @llvm.dbg.value(metadata i32 undef, metadata !9509, metadata !DIExpression()) #20, !dbg !9587
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #22, !dbg !9595
  call void @llvm.dbg.value(metadata i32 undef, metadata !9585, metadata !DIExpression()), !dbg !9596
  %5 = tail call fastcc i32 @elapsed() #21, !dbg !9597
  %6 = load i32, i32* @cycle_count, align 4, !dbg !9598
  %7 = load i32, i32* @announced_cycles, align 4, !dbg !9599
  call void @llvm.dbg.value(metadata !DIArgList(i32 %5, i32 %7, i32 %6), metadata !9586, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !9596
  call void @llvm.dbg.value(metadata i32 undef, metadata !9561, metadata !DIExpression()) #20, !dbg !9600
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !9566, metadata !DIExpression()) #20, !dbg !9600
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #22, !dbg !9602
  br i1 %8, label %10, label %9, !dbg !9603

9:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.121, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.125, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.123, i32 0, i32 0), i32 noundef 194) #22, !dbg !9604
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.126, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #22, !dbg !9604
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.123, i32 0, i32 0), i32 noundef 194) #22, !dbg !9604
  unreachable, !dbg !9604

10:                                               ; preds = %4
  %11 = add i32 %6, %5, !dbg !9605
  call void @llvm.dbg.value(metadata !DIArgList(i32 %11, i32 %7), metadata !9586, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !9596
  %12 = sub i32 %11, %7, !dbg !9606
  call void @llvm.dbg.value(metadata i32 %12, metadata !9586, metadata !DIExpression()), !dbg !9596
  %13 = extractvalue { i32, i32 } %1, 0, !dbg !9589
  call void @llvm.dbg.value(metadata i32 %13, metadata !9515, metadata !DIExpression()) #20, !dbg !9591
  call void @llvm.dbg.value(metadata i32 %13, metadata !9509, metadata !DIExpression()) #20, !dbg !9587
  call void @llvm.dbg.value(metadata i32 %13, metadata !9585, metadata !DIExpression()), !dbg !9596
  call void @llvm.dbg.value(metadata i32 undef, metadata !9561, metadata !DIExpression()) #20, !dbg !9600
  call void @llvm.dbg.value(metadata i32 undef, metadata !9575, metadata !DIExpression()) #20, !dbg !9607
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #20, !dbg !9609, !srcloc !9581
  %14 = udiv i32 %12, 20000, !dbg !9610
  ret i32 %14, !dbg !9611
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_cycle_get_32() local_unnamed_addr #1 !dbg !9612 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !9503, metadata !DIExpression()) #20, !dbg !9616
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #20, !dbg !9618, !srcloc !9518
  call void @llvm.dbg.value(metadata i32 undef, metadata !9515, metadata !DIExpression()) #20, !dbg !9620
  call void @llvm.dbg.value(metadata i32 undef, metadata !9516, metadata !DIExpression()) #20, !dbg !9620
  call void @llvm.dbg.value(metadata i32 undef, metadata !9509, metadata !DIExpression()) #20, !dbg !9616
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #22, !dbg !9621
  br i1 %2, label %4, label %3, !dbg !9622

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.121, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.122, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.123, i32 0, i32 0), i32 noundef 148) #22, !dbg !9623
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.124, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #22, !dbg !9623
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.123, i32 0, i32 0), i32 noundef 148) #22, !dbg !9623
  unreachable, !dbg !9623

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !9515, metadata !DIExpression()) #20, !dbg !9620
  call void @llvm.dbg.value(metadata i32 undef, metadata !9509, metadata !DIExpression()) #20, !dbg !9616
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #22, !dbg !9624
  call void @llvm.dbg.value(metadata i32 undef, metadata !9614, metadata !DIExpression()), !dbg !9625
  %5 = tail call fastcc i32 @elapsed() #21, !dbg !9626
  %6 = load i32, i32* @cycle_count, align 4, !dbg !9627
  call void @llvm.dbg.value(metadata !DIArgList(i32 %5, i32 %6), metadata !9615, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !9625
  call void @llvm.dbg.value(metadata i32 undef, metadata !9561, metadata !DIExpression()) #20, !dbg !9628
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !9566, metadata !DIExpression()) #20, !dbg !9628
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #22, !dbg !9630
  br i1 %7, label %9, label %8, !dbg !9631

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.121, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.125, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.123, i32 0, i32 0), i32 noundef 194) #22, !dbg !9632
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.126, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #22, !dbg !9632
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.123, i32 0, i32 0), i32 noundef 194) #22, !dbg !9632
  unreachable, !dbg !9632

9:                                                ; preds = %4
  %10 = add i32 %6, %5, !dbg !9633
  call void @llvm.dbg.value(metadata i32 %10, metadata !9615, metadata !DIExpression()), !dbg !9625
  %11 = extractvalue { i32, i32 } %1, 0, !dbg !9618
  call void @llvm.dbg.value(metadata i32 %11, metadata !9515, metadata !DIExpression()) #20, !dbg !9620
  call void @llvm.dbg.value(metadata i32 %11, metadata !9509, metadata !DIExpression()) #20, !dbg !9616
  call void @llvm.dbg.value(metadata i32 %11, metadata !9614, metadata !DIExpression()), !dbg !9625
  call void @llvm.dbg.value(metadata i32 undef, metadata !9561, metadata !DIExpression()) #20, !dbg !9628
  call void @llvm.dbg.value(metadata i32 undef, metadata !9575, metadata !DIExpression()) #20, !dbg !9634
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %11) #20, !dbg !9636, !srcloc !9581
  ret i32 %10, !dbg !9637
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_idle_exit() local_unnamed_addr #14 !dbg !9638 {
  %1 = load i32, i32* @last_load, align 4, !dbg !9639
  %2 = icmp eq i32 %1, -16777216, !dbg !9641
  br i1 %2, label %3, label %6, !dbg !9642

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !9643
  %5 = or i32 %4, 1, !dbg !9643
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !9643
  br label %6, !dbg !9645

6:                                                ; preds = %3, %0
  ret void, !dbg !9646
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_disable() local_unnamed_addr #14 !dbg !9647 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !9648
  %2 = and i32 %1, -2, !dbg !9648
  store volatile i32 %2, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !9648
  ret void, !dbg !9649
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* nocapture noundef readonly %0, i8 noundef zeroext %1, %struct.pinctrl_state** nocapture noundef writeonly %2) local_unnamed_addr #13 !dbg !9650 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !9683, metadata !DIExpression()), !dbg !9686
  call void @llvm.dbg.value(metadata i8 %1, metadata !9684, metadata !DIExpression()), !dbg !9686
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !9685, metadata !DIExpression()), !dbg !9686
  %4 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 0, !dbg !9687
  %5 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !9687
  %6 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 1
  store %struct.pinctrl_state* %5, %struct.pinctrl_state** %2, align 4, !dbg !9686
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !9688
  %8 = load i8, i8* %6, align 4, !dbg !9689
  %9 = zext i8 %8 to i32, !dbg !9690
  %10 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %7, i32 %9, !dbg !9690
  %11 = icmp ult %struct.pinctrl_state* %5, %10, !dbg !9691
  br i1 %11, label %18, label %24, !dbg !9692

12:                                               ; preds = %18
  store %struct.pinctrl_state* %23, %struct.pinctrl_state** %2, align 4, !dbg !9686
  %13 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !9688
  %14 = load i8, i8* %6, align 4, !dbg !9689
  %15 = zext i8 %14 to i32, !dbg !9690
  %16 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %13, i32 %15, !dbg !9690
  %17 = icmp ult %struct.pinctrl_state* %23, %16, !dbg !9691
  br i1 %17, label %18, label %24, !dbg !9692, !llvm.loop !9693

18:                                               ; preds = %3, %12
  %19 = phi %struct.pinctrl_state* [ %23, %12 ], [ %5, %3 ]
  %20 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 0, i32 2, !dbg !9695
  %21 = load i8, i8* %20, align 1, !dbg !9695
  %22 = icmp eq i8 %21, %1, !dbg !9698
  %23 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 1, !dbg !9699
  br i1 %22, label %24, label %12, !dbg !9700

24:                                               ; preds = %18, %12, %3
  %25 = phi i32 [ -2, %3 ], [ -2, %12 ], [ 0, %18 ], !dbg !9686
  ret i32 %25, !dbg !9701
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @imx_pinctrl_init(%struct.device* nocapture noundef readnone %0) #2 !dbg !9702 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9704, metadata !DIExpression()), !dbg !9705
  ret i32 0, !dbg !9706
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @pinctrl_configure_pins(%struct.pinctrl_soc_pin* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #14 !dbg !9707 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_soc_pin* %0, metadata !9725, metadata !DIExpression()), !dbg !9738
  call void @llvm.dbg.value(metadata i8 %1, metadata !9726, metadata !DIExpression()), !dbg !9738
  call void @llvm.dbg.value(metadata i32 %2, metadata !9727, metadata !DIExpression()), !dbg !9738
  call void @llvm.dbg.value(metadata i8 0, metadata !9728, metadata !DIExpression()), !dbg !9739
  %4 = icmp eq i8 %1, 0, !dbg !9740
  br i1 %4, label %7, label %5, !dbg !9741

5:                                                ; preds = %3
  %6 = zext i8 %1 to i32, !dbg !9740
  br label %8, !dbg !9741

7:                                                ; preds = %37, %3
  ret i32 0, !dbg !9742

8:                                                ; preds = %5, %37
  %9 = phi i32 [ 0, %5 ], [ %38, %37 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !9728, metadata !DIExpression()), !dbg !9739
  %10 = getelementptr inbounds %struct.pinctrl_soc_pin, %struct.pinctrl_soc_pin* %0, i32 %9, i32 0, i32 0, !dbg !9743
  %11 = load i32, i32* %10, align 4, !dbg !9743
  call void @llvm.dbg.value(metadata i32 %11, metadata !9730, metadata !DIExpression()), !dbg !9744
  %12 = getelementptr inbounds %struct.pinctrl_soc_pin, %struct.pinctrl_soc_pin* %0, i32 %9, i32 0, i32 3, !dbg !9745
  %13 = load i8, i8* %12, align 4, !dbg !9745
  call void @llvm.dbg.value(metadata i8 %13, metadata !9733, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9744
  %14 = getelementptr inbounds %struct.pinctrl_soc_pin, %struct.pinctrl_soc_pin* %0, i32 %9, i32 0, i32 2, !dbg !9746
  %15 = load i32, i32* %14, align 4, !dbg !9746
  call void @llvm.dbg.value(metadata i32 %15, metadata !9734, metadata !DIExpression()), !dbg !9744
  call void @llvm.dbg.value(metadata i8 %13, metadata !9735, metadata !DIExpression(DW_OP_constu, 4, DW_OP_shr, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9744
  %16 = getelementptr inbounds %struct.pinctrl_soc_pin, %struct.pinctrl_soc_pin* %0, i32 %9, i32 0, i32 1, !dbg !9747
  %17 = load i32, i32* %16, align 4, !dbg !9747
  call void @llvm.dbg.value(metadata i32 %17, metadata !9736, metadata !DIExpression()), !dbg !9744
  %18 = getelementptr inbounds %struct.pinctrl_soc_pin, %struct.pinctrl_soc_pin* %0, i32 %9, i32 1, !dbg !9748
  %19 = load i32, i32* %18, align 4, !dbg !9748
  call void @llvm.dbg.value(metadata i32 %19, metadata !9737, metadata !DIExpression()), !dbg !9744
  %20 = and i8 %13, 15, !dbg !9749
  %21 = zext i8 %20 to i32, !dbg !9749
  %22 = lshr i32 %19, 27, !dbg !9750
  %23 = and i32 %22, 16, !dbg !9750
  %24 = or i32 %23, %21, !dbg !9751
  %25 = inttoptr i32 %11 to i32*, !dbg !9752
  store volatile i32 %24, i32* %25, align 4, !dbg !9753
  %26 = icmp eq i32 %15, 0, !dbg !9754
  br i1 %26, label %32, label %27, !dbg !9756

27:                                               ; preds = %8
  %28 = lshr i8 %13, 4, !dbg !9757
  call void @llvm.dbg.value(metadata i8 %28, metadata !9735, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9744
  %29 = and i8 %28, 7, !dbg !9758
  %30 = zext i8 %29 to i32, !dbg !9758
  %31 = inttoptr i32 %15 to i32*, !dbg !9760
  store volatile i32 %30, i32* %31, align 4, !dbg !9761
  br label %32, !dbg !9762

32:                                               ; preds = %27, %8
  %33 = icmp eq i32 %17, 0, !dbg !9763
  br i1 %33, label %37, label %34, !dbg !9765

34:                                               ; preds = %32
  %35 = and i32 %19, 2147483647, !dbg !9766
  %36 = inttoptr i32 %17 to i32*, !dbg !9768
  store volatile i32 %35, i32* %36, align 4, !dbg !9769
  br label %37, !dbg !9770

37:                                               ; preds = %34, %32
  %38 = add nuw nsw i32 %9, 1, !dbg !9771
  call void @llvm.dbg.value(metadata i32 %38, metadata !9728, metadata !DIExpression()), !dbg !9739
  %39 = icmp eq i32 %38, %6, !dbg !9740
  br i1 %39, label %7, label %8, !dbg !9741, !llvm.loop !9772
}

; Function Attrs: noinline nounwind optsize
define dso_local void @CCM_SetRootDivider(%struct.CCM_Type* nocapture noundef readnone %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !9774 {
  call void @llvm.dbg.value(metadata %struct.CCM_Type* %0, metadata !9831, metadata !DIExpression()), !dbg !9835
  call void @llvm.dbg.value(metadata i32 %1, metadata !9832, metadata !DIExpression()), !dbg !9835
  call void @llvm.dbg.value(metadata i32 %2, metadata !9833, metadata !DIExpression()), !dbg !9835
  call void @llvm.dbg.value(metadata i32 %3, metadata !9834, metadata !DIExpression()), !dbg !9835
  %5 = icmp ult i32 %2, 8, !dbg !9836
  br i1 %5, label %7, label %6, !dbg !9839

6:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.134, i32 0, i32 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.135, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.2.136, i32 0, i32 0), i32 noundef 45) #22, !dbg !9840
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.2.136, i32 0, i32 0), i32 noundef 45) #22, !dbg !9840
  unreachable, !dbg !9840

7:                                                ; preds = %4
  %8 = icmp ult i32 %3, 64, !dbg !9842
  br i1 %8, label %10, label %9, !dbg !9845

9:                                                ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.134, i32 0, i32 0), i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3.137, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.2.136, i32 0, i32 0), i32 noundef 46) #22, !dbg !9846
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.2.136, i32 0, i32 0), i32 noundef 46) #22, !dbg !9846
  unreachable, !dbg !9846

10:                                               ; preds = %7
  %11 = inttoptr i32 %1 to i32*, !dbg !9848
  %12 = load volatile i32, i32* %11, align 4, !dbg !9848
  %13 = and i32 %12, -458816, !dbg !9849
  %14 = shl nuw nsw i32 %2, 16, !dbg !9850
  %15 = and i32 %14, 458752, !dbg !9850
  %16 = or i32 %15, %3, !dbg !9851
  %17 = or i32 %16, %13, !dbg !9852
  store volatile i32 %17, i32* %11, align 4, !dbg !9853
  ret void, !dbg !9854
}

; Function Attrs: noinline nounwind optsize
define dso_local void @CCM_GetRootDivider(%struct.CCM_Type* nocapture noundef readnone %0, i32 noundef %1, i32* noundef writeonly %2, i32* noundef writeonly %3) local_unnamed_addr #1 !dbg !9855 {
  call void @llvm.dbg.value(metadata %struct.CCM_Type* %0, metadata !9859, metadata !DIExpression()), !dbg !9863
  call void @llvm.dbg.value(metadata i32 %1, metadata !9860, metadata !DIExpression()), !dbg !9863
  call void @llvm.dbg.value(metadata i32* %2, metadata !9861, metadata !DIExpression()), !dbg !9863
  call void @llvm.dbg.value(metadata i32* %3, metadata !9862, metadata !DIExpression()), !dbg !9863
  %5 = icmp ne i32* %2, null, !dbg !9864
  %6 = icmp ne i32* %3, null, !dbg !9864
  %7 = and i1 %5, %6, !dbg !9864
  br i1 %7, label %9, label %8, !dbg !9864

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.134, i32 0, i32 0), i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.4.138, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.2.136, i32 0, i32 0), i32 noundef 61) #22, !dbg !9867
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.2.136, i32 0, i32 0), i32 noundef 61) #22, !dbg !9867
  unreachable, !dbg !9867

9:                                                ; preds = %4
  %10 = inttoptr i32 %1 to i32*, !dbg !9869
  %11 = load volatile i32, i32* %10, align 4, !dbg !9869
  %12 = lshr i32 %11, 16, !dbg !9870
  %13 = and i32 %12, 7, !dbg !9870
  store i32 %13, i32* %2, align 4, !dbg !9871
  %14 = load volatile i32, i32* %10, align 4, !dbg !9872
  %15 = and i32 %14, 63, !dbg !9873
  store i32 %15, i32* %3, align 4, !dbg !9874
  ret void, !dbg !9875
}

; Function Attrs: noinline nounwind optsize
define dso_local void @CCM_UpdateRoot(%struct.CCM_Type* nocapture noundef readnone %0, i32 noundef %1, i32 noundef %2, i32 noundef %3, i32 noundef %4) local_unnamed_addr #1 !dbg !9876 {
  call void @llvm.dbg.value(metadata %struct.CCM_Type* %0, metadata !9880, metadata !DIExpression()), !dbg !9885
  call void @llvm.dbg.value(metadata i32 %1, metadata !9881, metadata !DIExpression()), !dbg !9885
  call void @llvm.dbg.value(metadata i32 %2, metadata !9882, metadata !DIExpression()), !dbg !9885
  call void @llvm.dbg.value(metadata i32 %3, metadata !9883, metadata !DIExpression()), !dbg !9885
  call void @llvm.dbg.value(metadata i32 %4, metadata !9884, metadata !DIExpression()), !dbg !9885
  %6 = icmp ult i32 %3, 8, !dbg !9886
  br i1 %6, label %8, label %7, !dbg !9889

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.134, i32 0, i32 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.135, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.2.136, i32 0, i32 0), i32 noundef 75) #22, !dbg !9890
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.2.136, i32 0, i32 0), i32 noundef 75) #22, !dbg !9890
  unreachable, !dbg !9890

8:                                                ; preds = %5
  %9 = icmp ult i32 %4, 64, !dbg !9892
  br i1 %9, label %11, label %10, !dbg !9895

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.134, i32 0, i32 0), i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3.137, i32 0, i32 0), i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.2.136, i32 0, i32 0), i32 noundef 76) #22, !dbg !9896
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.2.136, i32 0, i32 0), i32 noundef 76) #22, !dbg !9896
  unreachable, !dbg !9896

11:                                               ; preds = %8
  %12 = inttoptr i32 %1 to i32*, !dbg !9898
  %13 = load volatile i32, i32* %12, align 4, !dbg !9898
  %14 = and i32 %13, -117899328, !dbg !9899
  %15 = shl i32 %2, 24, !dbg !9900
  %16 = and i32 %15, 117440512, !dbg !9900
  %17 = shl nuw nsw i32 %3, 16, !dbg !9901
  %18 = and i32 %17, 458752, !dbg !9901
  %19 = or i32 %16, %4, !dbg !9902
  %20 = or i32 %19, %18, !dbg !9903
  %21 = or i32 %20, %14, !dbg !9904
  store volatile i32 %21, i32* %12, align 4, !dbg !9905
  ret void, !dbg !9906
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @CCM_ANALOG_GetArmPllFreq(%struct.CCM_ANALOG_Type* noundef %0) local_unnamed_addr #15 !dbg !9907 {
  call void @llvm.dbg.value(metadata %struct.CCM_ANALOG_Type* %0, metadata !9912, metadata !DIExpression()), !dbg !9913
  %2 = tail call fastcc zeroext i1 @CCM_ANALOG_IsPllBypassed(%struct.CCM_ANALOG_Type* noundef %0, i32 noundef 786528) #21, !dbg !9914
  br i1 %2, label %7, label %3, !dbg !9916

3:                                                ; preds = %1
  %4 = load volatile i32, i32* inttoptr (i32 808845408 to i32*), align 32, !dbg !9917
  %5 = and i32 %4, 127, !dbg !9918
  %6 = mul nuw nsw i32 %5, 12000000, !dbg !9919
  br label %7, !dbg !9920

7:                                                ; preds = %1, %3
  %8 = phi i32 [ %6, %3 ], [ 24000000, %1 ], !dbg !9913
  ret i32 %8, !dbg !9921
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i1 @CCM_ANALOG_IsPllBypassed(%struct.CCM_ANALOG_Type* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !9922 {
  call void @llvm.dbg.value(metadata %struct.CCM_ANALOG_Type* %0, metadata !9926, metadata !DIExpression()), !dbg !9928
  call void @llvm.dbg.value(metadata i32 %1, metadata !9927, metadata !DIExpression()), !dbg !9928
  %3 = ptrtoint %struct.CCM_ANALOG_Type* %0 to i32, !dbg !9929
  %4 = and i32 %1, 65535, !dbg !9929
  %5 = add i32 %4, %3, !dbg !9929
  %6 = inttoptr i32 %5 to i32*, !dbg !9929
  %7 = load volatile i32, i32* %6, align 4, !dbg !9929
  %8 = and i32 %7, 65536, !dbg !9930
  %9 = icmp ne i32 %8, 0, !dbg !9931
  ret i1 %9, !dbg !9932
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @CCM_ANALOG_GetSysPllFreq(%struct.CCM_ANALOG_Type* noundef %0) local_unnamed_addr #15 !dbg !9933 {
  call void @llvm.dbg.value(metadata %struct.CCM_ANALOG_Type* %0, metadata !9935, metadata !DIExpression()), !dbg !9936
  %2 = tail call fastcc zeroext i1 @CCM_ANALOG_IsPllBypassed(%struct.CCM_ANALOG_Type* noundef %0, i32 noundef 786608) #21, !dbg !9937
  br i1 %2, label %8, label %3, !dbg !9939

3:                                                ; preds = %1
  %4 = load volatile i32, i32* inttoptr (i32 808845488 to i32*), align 16, !dbg !9940
  %5 = and i32 %4, 1, !dbg !9942
  %6 = icmp eq i32 %5, 0, !dbg !9942
  %7 = select i1 %6, i32 480000000, i32 528000000, !dbg !9943
  br label %8, !dbg !9943

8:                                                ; preds = %3, %1
  %9 = phi i32 [ 24000000, %1 ], [ %7, %3 ], !dbg !9936
  ret i32 %9, !dbg !9944
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @CCM_ANALOG_GetDdrPllFreq(%struct.CCM_ANALOG_Type* noundef %0) local_unnamed_addr #15 !dbg !9945 {
  call void @llvm.dbg.value(metadata %struct.CCM_ANALOG_Type* %0, metadata !9947, metadata !DIExpression()), !dbg !9951
  %2 = tail call fastcc zeroext i1 @CCM_ANALOG_IsPllBypassed(%struct.CCM_ANALOG_Type* noundef %0, i32 noundef 1310832) #21, !dbg !9952
  br i1 %2, label %40, label %3, !dbg !9954

3:                                                ; preds = %1
  %4 = load volatile i32, i32* inttoptr (i32 808845424 to i32*), align 16, !dbg !9955
  %5 = trunc i32 %4 to i8, !dbg !9955
  %6 = and i8 %5, 127, !dbg !9955
  call void @llvm.dbg.value(metadata i8 %6, metadata !9948, metadata !DIExpression()), !dbg !9951
  %7 = load volatile i32, i32* inttoptr (i32 808845424 to i32*), align 16, !dbg !9956
  %8 = lshr i32 %7, 21, !dbg !9957
  %9 = and i32 %8, 3, !dbg !9958
  call void @llvm.dbg.value(metadata i32 %9, metadata !9949, metadata !DIExpression()), !dbg !9951
  %10 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.CCM_ANALOG_GetVideoPllFreq.4, i32 0, i32 %9, !dbg !9959
  %11 = load i32, i32* %10, align 4, !dbg !9959
  call void @llvm.dbg.value(metadata i8 undef, metadata !9949, metadata !DIExpression()), !dbg !9951
  %12 = getelementptr inbounds %struct.CCM_ANALOG_Type, %struct.CCM_ANALOG_Type* %0, i32 0, i32 9, !dbg !9960
  %13 = load volatile i32, i32* %12, align 4, !dbg !9960
  %14 = and i32 %13, 32768, !dbg !9962
  %15 = icmp eq i32 %14, 0, !dbg !9962
  br i1 %15, label %36, label %16, !dbg !9963

16:                                               ; preds = %3
  %17 = load volatile i32, i32* %12, align 4, !dbg !9964
  %18 = and i32 %17, 32767, !dbg !9966
  %19 = uitofp i32 %18 to float, !dbg !9967
  %20 = getelementptr inbounds %struct.CCM_ANALOG_Type, %struct.CCM_ANALOG_Type* %0, i32 0, i32 13, !dbg !9968
  %21 = load volatile i32, i32* %20, align 4, !dbg !9968
  %22 = and i32 %21, 1073741823, !dbg !9969
  %23 = uitofp i32 %22 to float, !dbg !9970
  %24 = fdiv float %19, %23, !dbg !9971
  %25 = getelementptr inbounds %struct.CCM_ANALOG_Type, %struct.CCM_ANALOG_Type* %0, i32 0, i32 11, !dbg !9972
  %26 = load volatile i32, i32* %25, align 4, !dbg !9972
  %27 = and i32 %26, 1073741823, !dbg !9973
  %28 = uitofp i32 %27 to float, !dbg !9974
  %29 = fmul float %24, %28, !dbg !9975
  call void @llvm.dbg.value(metadata float %29, metadata !9950, metadata !DIExpression()), !dbg !9951
  %30 = lshr i32 24000000, %11, !dbg !9976
  %31 = uitofp i32 %30 to float, !dbg !9977
  %32 = uitofp i8 %6 to float, !dbg !9978
  %33 = fadd float %29, %32, !dbg !9979
  %34 = fmul float %33, %31, !dbg !9980
  %35 = fptoui float %34 to i32, !dbg !9981
  br label %40, !dbg !9982

36:                                               ; preds = %3
  %37 = lshr i32 24000000, %11, !dbg !9983
  %38 = zext i8 %6 to i32, !dbg !9985
  %39 = mul nuw i32 %37, %38, !dbg !9986
  br label %40, !dbg !9987

40:                                               ; preds = %1, %36, %16
  %41 = phi i32 [ %35, %16 ], [ %39, %36 ], [ 24000000, %1 ], !dbg !9951
  ret i32 %41, !dbg !9988
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @CCM_ANALOG_GetEnetPllFreq(%struct.CCM_ANALOG_Type* noundef %0) local_unnamed_addr #15 !dbg !9989 {
  call void @llvm.dbg.value(metadata %struct.CCM_ANALOG_Type* %0, metadata !9991, metadata !DIExpression()), !dbg !9992
  %2 = tail call fastcc zeroext i1 @CCM_ANALOG_IsPllBypassed(%struct.CCM_ANALOG_Type* noundef %0, i32 noundef 327904) #21, !dbg !9993
  %3 = select i1 %2, i32 24000000, i32 1000000000, !dbg !9992
  ret i32 %3, !dbg !9995
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @CCM_ANALOG_GetAudioPllFreq(%struct.CCM_ANALOG_Type* noundef %0) local_unnamed_addr #15 !dbg !9996 {
  call void @llvm.dbg.value(metadata %struct.CCM_ANALOG_Type* %0, metadata !9998, metadata !DIExpression()), !dbg !10003
  %2 = tail call fastcc zeroext i1 @CCM_ANALOG_IsPllBypassed(%struct.CCM_ANALOG_Type* noundef %0, i32 noundef 786672) #21, !dbg !10004
  br i1 %2, label %47, label %3, !dbg !10006

3:                                                ; preds = %1
  %4 = load volatile i32, i32* inttoptr (i32 808845552 to i32*), align 16, !dbg !10007
  %5 = trunc i32 %4 to i8, !dbg !10007
  %6 = and i8 %5, 127, !dbg !10007
  call void @llvm.dbg.value(metadata i8 %6, metadata !9999, metadata !DIExpression()), !dbg !10003
  %7 = load volatile i32, i32* inttoptr (i32 808845552 to i32*), align 16, !dbg !10008
  %8 = lshr i32 %7, 22, !dbg !10009
  %9 = and i32 %8, 3, !dbg !10010
  call void @llvm.dbg.value(metadata i32 %8, metadata !10000, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_constu, 3, DW_OP_and, DW_OP_stack_value)), !dbg !10003
  %10 = load volatile i32, i32* inttoptr (i32 808845552 to i32*), align 16, !dbg !10011
  %11 = lshr i32 %10, 19, !dbg !10012
  %12 = and i32 %11, 3, !dbg !10013
  call void @llvm.dbg.value(metadata i32 %11, metadata !10001, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_constu, 3, DW_OP_and, DW_OP_stack_value)), !dbg !10003
  %13 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.CCM_ANALOG_GetVideoPllFreq, i32 0, i32 %9, !dbg !10014
  %14 = load i32, i32* %13, align 4, !dbg !10014
  call void @llvm.dbg.value(metadata i8 undef, metadata !10000, metadata !DIExpression()), !dbg !10003
  %15 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.CCM_ANALOG_GetVideoPllFreq.4, i32 0, i32 %12, !dbg !10015
  %16 = load i32, i32* %15, align 4, !dbg !10015
  call void @llvm.dbg.value(metadata i8 undef, metadata !10001, metadata !DIExpression()), !dbg !10003
  %17 = getelementptr inbounds %struct.CCM_ANALOG_Type, %struct.CCM_ANALOG_Type* %0, i32 0, i32 35, !dbg !10016
  %18 = load volatile i32, i32* %17, align 4, !dbg !10016
  %19 = and i32 %18, 32768, !dbg !10018
  %20 = icmp eq i32 %19, 0, !dbg !10018
  br i1 %20, label %42, label %21, !dbg !10019

21:                                               ; preds = %3
  %22 = load volatile i32, i32* %17, align 4, !dbg !10020
  %23 = and i32 %22, 32767, !dbg !10022
  %24 = uitofp i32 %23 to float, !dbg !10023
  %25 = getelementptr inbounds %struct.CCM_ANALOG_Type, %struct.CCM_ANALOG_Type* %0, i32 0, i32 39, !dbg !10024
  %26 = load volatile i32, i32* %25, align 4, !dbg !10024
  %27 = and i32 %26, 1073741823, !dbg !10025
  %28 = uitofp i32 %27 to float, !dbg !10026
  %29 = fdiv float %24, %28, !dbg !10027
  %30 = getelementptr inbounds %struct.CCM_ANALOG_Type, %struct.CCM_ANALOG_Type* %0, i32 0, i32 37, !dbg !10028
  %31 = load volatile i32, i32* %30, align 4, !dbg !10028
  %32 = and i32 %31, 1073741823, !dbg !10029
  %33 = uitofp i32 %32 to float, !dbg !10030
  %34 = fmul float %29, %33, !dbg !10031
  call void @llvm.dbg.value(metadata float %34, metadata !10002, metadata !DIExpression()), !dbg !10003
  %35 = lshr i32 24000000, %16, !dbg !10032
  %36 = lshr i32 %35, %14, !dbg !10033
  %37 = uitofp i32 %36 to float, !dbg !10034
  %38 = uitofp i8 %6 to float, !dbg !10035
  %39 = fadd float %34, %38, !dbg !10036
  %40 = fmul float %39, %37, !dbg !10037
  %41 = fptoui float %40 to i32, !dbg !10038
  br label %47, !dbg !10039

42:                                               ; preds = %3
  %43 = lshr i32 24000000, %16, !dbg !10040
  %44 = lshr i32 %43, %14, !dbg !10042
  %45 = zext i8 %6 to i32, !dbg !10043
  %46 = mul nuw i32 %44, %45, !dbg !10044
  br label %47, !dbg !10045

47:                                               ; preds = %1, %42, %21
  %48 = phi i32 [ %41, %21 ], [ %46, %42 ], [ 24000000, %1 ], !dbg !10003
  ret i32 %48, !dbg !10046
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @CCM_ANALOG_GetVideoPllFreq(%struct.CCM_ANALOG_Type* noundef %0) local_unnamed_addr #15 !dbg !10047 {
  call void @llvm.dbg.value(metadata %struct.CCM_ANALOG_Type* %0, metadata !10049, metadata !DIExpression()), !dbg !10054
  %2 = tail call fastcc zeroext i1 @CCM_ANALOG_IsPllBypassed(%struct.CCM_ANALOG_Type* noundef %0, i32 noundef 786736) #21, !dbg !10055
  br i1 %2, label %47, label %3, !dbg !10057

3:                                                ; preds = %1
  %4 = load volatile i32, i32* inttoptr (i32 808845616 to i32*), align 16, !dbg !10058
  %5 = trunc i32 %4 to i8, !dbg !10058
  %6 = and i8 %5, 127, !dbg !10058
  call void @llvm.dbg.value(metadata i8 %6, metadata !10050, metadata !DIExpression()), !dbg !10054
  %7 = load volatile i32, i32* inttoptr (i32 808845616 to i32*), align 16, !dbg !10059
  %8 = lshr i32 %7, 22, !dbg !10060
  %9 = and i32 %8, 3, !dbg !10061
  call void @llvm.dbg.value(metadata i32 %8, metadata !10051, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_constu, 3, DW_OP_and, DW_OP_stack_value)), !dbg !10054
  %10 = load volatile i32, i32* inttoptr (i32 808845616 to i32*), align 16, !dbg !10062
  %11 = lshr i32 %10, 19, !dbg !10063
  %12 = and i32 %11, 3, !dbg !10064
  call void @llvm.dbg.value(metadata i32 %11, metadata !10052, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_constu, 3, DW_OP_and, DW_OP_stack_value)), !dbg !10054
  %13 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.CCM_ANALOG_GetVideoPllFreq, i32 0, i32 %9, !dbg !10065
  %14 = load i32, i32* %13, align 4, !dbg !10065
  call void @llvm.dbg.value(metadata i8 undef, metadata !10051, metadata !DIExpression()), !dbg !10054
  %15 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.CCM_ANALOG_GetVideoPllFreq.4, i32 0, i32 %12, !dbg !10066
  %16 = load i32, i32* %15, align 4, !dbg !10066
  call void @llvm.dbg.value(metadata i8 undef, metadata !10052, metadata !DIExpression()), !dbg !10054
  %17 = getelementptr inbounds %struct.CCM_ANALOG_Type, %struct.CCM_ANALOG_Type* %0, i32 0, i32 45, !dbg !10067
  %18 = load volatile i32, i32* %17, align 4, !dbg !10067
  %19 = and i32 %18, 32768, !dbg !10069
  %20 = icmp eq i32 %19, 0, !dbg !10069
  br i1 %20, label %42, label %21, !dbg !10070

21:                                               ; preds = %3
  %22 = load volatile i32, i32* %17, align 4, !dbg !10071
  %23 = and i32 %22, 32767, !dbg !10073
  %24 = uitofp i32 %23 to float, !dbg !10074
  %25 = getelementptr inbounds %struct.CCM_ANALOG_Type, %struct.CCM_ANALOG_Type* %0, i32 0, i32 49, !dbg !10075
  %26 = load volatile i32, i32* %25, align 4, !dbg !10075
  %27 = and i32 %26, 1073741823, !dbg !10076
  %28 = uitofp i32 %27 to float, !dbg !10077
  %29 = fdiv float %24, %28, !dbg !10078
  %30 = getelementptr inbounds %struct.CCM_ANALOG_Type, %struct.CCM_ANALOG_Type* %0, i32 0, i32 47, !dbg !10079
  %31 = load volatile i32, i32* %30, align 4, !dbg !10079
  %32 = and i32 %31, 1073741823, !dbg !10080
  %33 = uitofp i32 %32 to float, !dbg !10081
  %34 = fmul float %29, %33, !dbg !10082
  call void @llvm.dbg.value(metadata float %34, metadata !10053, metadata !DIExpression()), !dbg !10054
  %35 = lshr i32 24000000, %16, !dbg !10083
  %36 = lshr i32 %35, %14, !dbg !10084
  %37 = uitofp i32 %36 to float, !dbg !10085
  %38 = uitofp i8 %6 to float, !dbg !10086
  %39 = fadd float %34, %38, !dbg !10087
  %40 = fmul float %39, %37, !dbg !10088
  %41 = fptoui float %40 to i32, !dbg !10089
  br label %47, !dbg !10090

42:                                               ; preds = %3
  %43 = lshr i32 24000000, %16, !dbg !10091
  %44 = lshr i32 %43, %14, !dbg !10093
  %45 = zext i8 %6 to i32, !dbg !10094
  %46 = mul nuw i32 %44, %45, !dbg !10095
  br label %47, !dbg !10096

47:                                               ; preds = %1, %42, %21
  %48 = phi i32 [ %41, %21 ], [ %46, %42 ], [ 24000000, %1 ], !dbg !10054
  ret i32 %48, !dbg !10097
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @CCM_ANALOG_GetPfdFreq(%struct.CCM_ANALOG_Type* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !10098 {
  call void @llvm.dbg.value(metadata %struct.CCM_ANALOG_Type* %0, metadata !10102, metadata !DIExpression()), !dbg !10106
  call void @llvm.dbg.value(metadata i32 %1, metadata !10103, metadata !DIExpression()), !dbg !10106
  %3 = tail call fastcc zeroext i1 @CCM_ANALOG_IsPllBypassed(%struct.CCM_ANALOG_Type* noundef %0, i32 noundef 786608) #21, !dbg !10107
  br i1 %3, label %4, label %5, !dbg !10110

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.141, i32 0, i32 0), i8* noundef getelementptr inbounds ([56 x i8], [56 x i8]* @.str.1.142, i32 0, i32 0), i8* noundef getelementptr inbounds ([59 x i8], [59 x i8]* @.str.2.143, i32 0, i32 0), i32 noundef 260) #22, !dbg !10111
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([59 x i8], [59 x i8]* @.str.2.143, i32 0, i32 0), i32 noundef 260) #22, !dbg !10111
  unreachable, !dbg !10111

5:                                                ; preds = %2
  %6 = tail call i32 @CCM_ANALOG_GetSysPllFreq(%struct.CCM_ANALOG_Type* noundef %0) #21, !dbg !10113
  call void @llvm.dbg.value(metadata i32 %6, metadata !10104, metadata !DIExpression()), !dbg !10106
  %7 = tail call fastcc i32 @CCM_ANALOG_GetPfdFrac(%struct.CCM_ANALOG_Type* noundef %0, i32 noundef %1) #21, !dbg !10114
  call void @llvm.dbg.value(metadata i32 %7, metadata !10105, metadata !DIExpression()), !dbg !10106
  %8 = udiv i32 %6, %7, !dbg !10115
  %9 = mul i32 %8, 18, !dbg !10116
  ret i32 %9, !dbg !10117
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @CCM_ANALOG_GetPfdFrac(%struct.CCM_ANALOG_Type* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !10118 {
  call void @llvm.dbg.value(metadata %struct.CCM_ANALOG_Type* %0, metadata !10120, metadata !DIExpression()), !dbg !10122
  call void @llvm.dbg.value(metadata i32 %1, metadata !10121, metadata !DIExpression()), !dbg !10122
  %3 = ptrtoint %struct.CCM_ANALOG_Type* %0 to i32, !dbg !10123
  %4 = and i32 %1, 65535, !dbg !10123
  %5 = add i32 %4, %3, !dbg !10123
  %6 = inttoptr i32 %5 to i32*, !dbg !10123
  %7 = load volatile i32, i32* %6, align 4, !dbg !10123
  %8 = lshr i32 %1, 16, !dbg !10124
  %9 = and i32 %8, 31, !dbg !10124
  %10 = lshr i32 %7, %9, !dbg !10125
  %11 = and i32 %10, 63, !dbg !10126
  ret i32 %11, !dbg !10127
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @GPIO_Init(%struct.GPIO_Type* noundef %0, %struct.ztest_suite_stats* nocapture noundef readonly %1) local_unnamed_addr #14 !dbg !10128 {
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %0, metadata !10155, metadata !DIExpression()), !dbg !10159
  call void @llvm.dbg.value(metadata %struct.ztest_suite_stats* %1, metadata !10156, metadata !DIExpression()), !dbg !10159
  %3 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 5, !dbg !10160
  store volatile i32 0, i32* %3, align 4, !dbg !10161
  %4 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 7, !dbg !10162
  store volatile i32 0, i32* %4, align 4, !dbg !10163
  %5 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %1, i32 0, i32 0, !dbg !10164
  %6 = load i32, i32* %5, align 4, !dbg !10164
  call void @llvm.dbg.value(metadata i32 %6, metadata !10157, metadata !DIExpression()), !dbg !10159
  %7 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %1, i32 0, i32 1, !dbg !10165
  %8 = load i32, i32* %7, align 4, !dbg !10165
  %9 = icmp eq i32 %8, 1, !dbg !10167
  %10 = shl nuw i32 1, %6, !dbg !10168
  br i1 %9, label %11, label %15, !dbg !10169

11:                                               ; preds = %2
  %12 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 1, !dbg !10170
  %13 = load volatile i32, i32* %12, align 4, !dbg !10171
  %14 = or i32 %13, %10, !dbg !10171
  store volatile i32 %14, i32* %12, align 4, !dbg !10171
  br label %20, !dbg !10170

15:                                               ; preds = %2
  %16 = xor i32 %10, -1, !dbg !10172
  %17 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 1, !dbg !10173
  %18 = load volatile i32, i32* %17, align 4, !dbg !10174
  %19 = and i32 %18, %16, !dbg !10174
  store volatile i32 %19, i32* %17, align 4, !dbg !10174
  br label %20

20:                                               ; preds = %15, %11
  %21 = icmp ult i32 %6, 16, !dbg !10175
  %22 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 3, !dbg !10177
  %23 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 4, !dbg !10177
  %24 = add i32 %6, -16, !dbg !10177
  %25 = select i1 %21, i32 %6, i32 %24, !dbg !10177
  %26 = select i1 %21, i32* %22, i32* %23, !dbg !10177
  call void @llvm.dbg.value(metadata i32* %26, metadata !10158, metadata !DIExpression()), !dbg !10159
  call void @llvm.dbg.value(metadata i32 %25, metadata !10157, metadata !DIExpression()), !dbg !10159
  %27 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %1, i32 0, i32 2, !dbg !10178
  %28 = load i32, i32* %27, align 4, !dbg !10178
  switch i32 %28, label %58 [
    i32 0, label %29
    i32 1, label %35
    i32 2, label %43
    i32 3, label %51
  ], !dbg !10179

29:                                               ; preds = %20
  %30 = shl i32 %25, 1, !dbg !10180
  %31 = shl i32 3, %30, !dbg !10183
  %32 = xor i32 %31, -1, !dbg !10184
  %33 = load volatile i32, i32* %26, align 4, !dbg !10185
  %34 = and i32 %33, %32, !dbg !10185
  br label %56, !dbg !10186

35:                                               ; preds = %20
  %36 = load volatile i32, i32* %26, align 4, !dbg !10187
  %37 = shl i32 %25, 1, !dbg !10189
  %38 = shl i32 3, %37, !dbg !10190
  %39 = xor i32 %38, -1, !dbg !10191
  %40 = and i32 %36, %39, !dbg !10192
  %41 = shl nuw i32 1, %37, !dbg !10193
  %42 = or i32 %40, %41, !dbg !10194
  br label %56, !dbg !10195

43:                                               ; preds = %20
  %44 = load volatile i32, i32* %26, align 4, !dbg !10196
  %45 = shl i32 %25, 1, !dbg !10198
  %46 = shl i32 3, %45, !dbg !10199
  %47 = xor i32 %46, -1, !dbg !10200
  %48 = and i32 %44, %47, !dbg !10201
  %49 = shl i32 2, %45, !dbg !10202
  %50 = or i32 %48, %49, !dbg !10203
  br label %56, !dbg !10204

51:                                               ; preds = %20
  %52 = shl i32 %25, 1, !dbg !10205
  %53 = shl i32 3, %52, !dbg !10207
  %54 = load volatile i32, i32* %26, align 4, !dbg !10208
  %55 = or i32 %54, %53, !dbg !10208
  br label %56, !dbg !10209

56:                                               ; preds = %29, %35, %43, %51
  %57 = phi i32 [ %55, %51 ], [ %50, %43 ], [ %42, %35 ], [ %34, %29 ]
  store volatile i32 %57, i32* %26, align 4, !dbg !10210
  br label %58, !dbg !10211

58:                                               ; preds = %56, %20
  ret void, !dbg !10211
}

; Function Attrs: noinline nounwind optsize
define dso_local void @GPIO_WritePinOutput(%struct.GPIO_Type* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !10212 {
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %0, metadata !10217, metadata !DIExpression()), !dbg !10220
  call void @llvm.dbg.value(metadata i32 %1, metadata !10218, metadata !DIExpression()), !dbg !10220
  call void @llvm.dbg.value(metadata i32 %2, metadata !10219, metadata !DIExpression()), !dbg !10220
  %4 = icmp ult i32 %1, 32, !dbg !10221
  br i1 %4, label %6, label %5, !dbg !10224

5:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.146, i32 0, i32 0), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1.147, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.148, i32 0, i32 0), i32 noundef 113) #22, !dbg !10225
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.148, i32 0, i32 0), i32 noundef 113) #22, !dbg !10225
  unreachable, !dbg !10225

6:                                                ; preds = %3
  %7 = icmp eq i32 %2, 1, !dbg !10227
  %8 = shl nuw i32 1, %1, !dbg !10229
  br i1 %7, label %9, label %13, !dbg !10230

9:                                                ; preds = %6
  %10 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 0, !dbg !10231
  %11 = load volatile i32, i32* %10, align 4, !dbg !10233
  %12 = or i32 %11, %8, !dbg !10233
  store volatile i32 %12, i32* %10, align 4, !dbg !10233
  br label %18, !dbg !10234

13:                                               ; preds = %6
  %14 = xor i32 %8, -1, !dbg !10235
  %15 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 0, !dbg !10237
  %16 = load volatile i32, i32* %15, align 4, !dbg !10238
  %17 = and i32 %16, %14, !dbg !10238
  store volatile i32 %17, i32* %15, align 4, !dbg !10238
  br label %18

18:                                               ; preds = %13, %9
  ret void, !dbg !10239
}

; Function Attrs: noinline nounwind optsize
define dso_local void @GPIO_SetPinIntMode(%struct.GPIO_Type* noundef %0, i32 noundef %1, i1 noundef zeroext %2) local_unnamed_addr #1 !dbg !10240 {
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %0, metadata !10244, metadata !DIExpression()), !dbg !10247
  call void @llvm.dbg.value(metadata i32 %1, metadata !10245, metadata !DIExpression()), !dbg !10247
  call void @llvm.dbg.value(metadata i1 %2, metadata !10246, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10247
  %4 = icmp ult i32 %1, 32, !dbg !10248
  br i1 %4, label %6, label %5, !dbg !10251

5:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.146, i32 0, i32 0), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1.147, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.148, i32 0, i32 0), i32 noundef 135) #22, !dbg !10252
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.148, i32 0, i32 0), i32 noundef 135) #22, !dbg !10252
  unreachable, !dbg !10252

6:                                                ; preds = %3
  %7 = shl nuw i32 1, %1, !dbg !10254
  br i1 %2, label %8, label %12, !dbg !10256

8:                                                ; preds = %6
  %9 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 5, !dbg !10257
  %10 = load volatile i32, i32* %9, align 4, !dbg !10258
  %11 = or i32 %10, %7, !dbg !10258
  store volatile i32 %11, i32* %9, align 4, !dbg !10258
  br label %17, !dbg !10257

12:                                               ; preds = %6
  %13 = xor i32 %7, -1, !dbg !10259
  %14 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 5, !dbg !10260
  %15 = load volatile i32, i32* %14, align 4, !dbg !10261
  %16 = and i32 %15, %13, !dbg !10261
  store volatile i32 %16, i32* %14, align 4, !dbg !10261
  br label %17

17:                                               ; preds = %12, %8
  ret void, !dbg !10262
}

; Function Attrs: noinline nounwind optsize
define dso_local void @GPIO_SetIntEdgeSelect(%struct.GPIO_Type* noundef %0, i32 noundef %1, i1 noundef zeroext %2) local_unnamed_addr #1 !dbg !10263 {
  call void @llvm.dbg.value(metadata %struct.GPIO_Type* %0, metadata !10265, metadata !DIExpression()), !dbg !10268
  call void @llvm.dbg.value(metadata i32 %1, metadata !10266, metadata !DIExpression()), !dbg !10268
  call void @llvm.dbg.value(metadata i1 %2, metadata !10267, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10268
  %4 = icmp ult i32 %1, 32, !dbg !10269
  br i1 %4, label %6, label %5, !dbg !10272

5:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.146, i32 0, i32 0), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1.147, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.148, i32 0, i32 0), i32 noundef 152) #22, !dbg !10273
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.148, i32 0, i32 0), i32 noundef 152) #22, !dbg !10273
  unreachable, !dbg !10273

6:                                                ; preds = %3
  %7 = shl nuw i32 1, %1, !dbg !10275
  br i1 %2, label %8, label %12, !dbg !10277

8:                                                ; preds = %6
  %9 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 7, !dbg !10278
  %10 = load volatile i32, i32* %9, align 4, !dbg !10279
  %11 = or i32 %10, %7, !dbg !10279
  store volatile i32 %11, i32* %9, align 4, !dbg !10279
  br label %17, !dbg !10278

12:                                               ; preds = %6
  %13 = xor i32 %7, -1, !dbg !10280
  %14 = getelementptr inbounds %struct.GPIO_Type, %struct.GPIO_Type* %0, i32 0, i32 7, !dbg !10281
  %15 = load volatile i32, i32* %14, align 4, !dbg !10282
  %16 = and i32 %15, %13, !dbg !10282
  store volatile i32 %16, i32* %14, align 4, !dbg !10282
  br label %17

17:                                               ; preds = %12, %8
  ret void, !dbg !10283
}

; Function Attrs: noinline nounwind optsize
define dso_local void @UART_Init(%struct.UART_Type* noundef %0, %struct._uart_init_config* noundef readonly %1) local_unnamed_addr #1 !dbg !10284 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !10323, metadata !DIExpression()), !dbg !10325
  call void @llvm.dbg.value(metadata %struct._uart_init_config* %1, metadata !10324, metadata !DIExpression()), !dbg !10325
  %3 = icmp eq %struct._uart_init_config* %1, null, !dbg !10326
  br i1 %3, label %4, label %5, !dbg !10329

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.155, i32 0, i32 0), i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1.156, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.157, i32 0, i32 0), i32 noundef 49) #22, !dbg !10330
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.157, i32 0, i32 0), i32 noundef 49) #22, !dbg !10330
  unreachable, !dbg !10330

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 4, !dbg !10332
  %7 = load volatile i32, i32* %6, align 4, !dbg !10333
  %8 = and i32 %7, -2, !dbg !10333
  store volatile i32 %8, i32* %6, align 4, !dbg !10333
  tail call void @UART_Deinit(%struct.UART_Type* noundef %0) #21, !dbg !10334
  %9 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %1, i32 0, i32 2, !dbg !10335
  %10 = load i32, i32* %9, align 4, !dbg !10335
  %11 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %1, i32 0, i32 3, !dbg !10336
  %12 = load i32, i32* %11, align 4, !dbg !10336
  %13 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %1, i32 0, i32 4, !dbg !10337
  %14 = load i32, i32* %13, align 4, !dbg !10337
  %15 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %1, i32 0, i32 5, !dbg !10338
  %16 = load i32, i32* %15, align 4, !dbg !10338
  %17 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 5, !dbg !10339
  %18 = load volatile i32, i32* %17, align 4, !dbg !10340
  %19 = or i32 %10, %12, !dbg !10341
  %20 = or i32 %19, %14, !dbg !10342
  %21 = or i32 %20, %16, !dbg !10343
  %22 = or i32 %21, %18, !dbg !10340
  %23 = or i32 %22, 16384, !dbg !10340
  store volatile i32 %23, i32* %17, align 4, !dbg !10340
  %24 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 6, !dbg !10344
  %25 = load volatile i32, i32* %24, align 4, !dbg !10345
  %26 = or i32 %25, 4, !dbg !10345
  store volatile i32 %26, i32* %24, align 4, !dbg !10345
  %27 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %1, i32 0, i32 0, !dbg !10346
  %28 = load i32, i32* %27, align 4, !dbg !10346
  %29 = getelementptr inbounds %struct._uart_init_config, %struct._uart_init_config* %1, i32 0, i32 1, !dbg !10347
  %30 = load i32, i32* %29, align 4, !dbg !10347
  tail call void @UART_SetBaudRate(%struct.UART_Type* noundef %0, i32 noundef %28, i32 noundef %30) #21, !dbg !10348
  ret void, !dbg !10349
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_Deinit(%struct.UART_Type* noundef %0) local_unnamed_addr #14 !dbg !10350 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !10354, metadata !DIExpression()), !dbg !10355
  %2 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 4, !dbg !10356
  %3 = load volatile i32, i32* %2, align 4, !dbg !10357
  %4 = and i32 %3, -2, !dbg !10357
  store volatile i32 %4, i32* %2, align 4, !dbg !10357
  store volatile i32 0, i32* %2, align 4, !dbg !10358
  %5 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 5, !dbg !10359
  store volatile i32 1, i32* %5, align 4, !dbg !10360
  %6 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 6, !dbg !10361
  store volatile i32 1792, i32* %6, align 4, !dbg !10362
  %7 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 7, !dbg !10363
  store volatile i32 32768, i32* %7, align 4, !dbg !10364
  %8 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 8, !dbg !10365
  store volatile i32 2049, i32* %8, align 4, !dbg !10366
  %9 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 11, !dbg !10367
  store volatile i32 43, i32* %9, align 4, !dbg !10368
  %10 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 12, !dbg !10369
  store volatile i32 0, i32* %10, align 4, !dbg !10370
  %11 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 16, !dbg !10371
  store volatile i32 0, i32* %11, align 4, !dbg !10372
  %12 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 17, !dbg !10373
  store volatile i32 96, i32* %12, align 4, !dbg !10374
  %13 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 18, !dbg !10375
  store volatile i32 0, i32* %13, align 4, !dbg !10376
  %14 = load volatile i32, i32* %5, align 4, !dbg !10377
  %15 = and i32 %14, -2, !dbg !10377
  store volatile i32 %15, i32* %5, align 4, !dbg !10377
  br label %16, !dbg !10378

16:                                               ; preds = %16, %1
  %17 = load volatile i32, i32* %5, align 4, !dbg !10379
  %18 = and i32 %17, 1, !dbg !10380
  %19 = icmp eq i32 %18, 0, !dbg !10381
  br i1 %19, label %16, label %20, !dbg !10378, !llvm.loop !10382

20:                                               ; preds = %16
  ret void, !dbg !10384
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetBaudRate(%struct.UART_Type* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #14 !dbg !10385 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !10389, metadata !DIExpression()), !dbg !10402
  call void @llvm.dbg.value(metadata i32 %1, metadata !10390, metadata !DIExpression()), !dbg !10402
  call void @llvm.dbg.value(metadata i32 %2, metadata !10391, metadata !DIExpression()), !dbg !10402
  call void @llvm.dbg.value(metadata i32 1, metadata !10396, metadata !DIExpression()), !dbg !10402
  call void @llvm.dbg.value(metadata i32 %1, metadata !10392, metadata !DIExpression()), !dbg !10402
  %4 = shl i32 %2, 4, !dbg !10403
  call void @llvm.dbg.value(metadata i32 %4, metadata !10393, metadata !DIExpression()), !dbg !10402
  call void @llvm.dbg.value(metadata i32 1, metadata !10394, metadata !DIExpression()), !dbg !10402
  call void @llvm.dbg.value(metadata i32 %1, metadata !10392, metadata !DIExpression()), !dbg !10402
  %5 = icmp eq i32 %4, 0, !dbg !10404
  br i1 %5, label %11, label %6, !dbg !10405

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %8, %6 ], [ %1, %3 ]
  %8 = phi i32 [ %9, %6 ], [ %4, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !10392, metadata !DIExpression()), !dbg !10402
  call void @llvm.dbg.value(metadata i32 %8, metadata !10393, metadata !DIExpression()), !dbg !10402
  call void @llvm.dbg.value(metadata i32 %8, metadata !10394, metadata !DIExpression()), !dbg !10402
  %9 = urem i32 %7, %8, !dbg !10406
  call void @llvm.dbg.value(metadata i32 %8, metadata !10392, metadata !DIExpression()), !dbg !10402
  call void @llvm.dbg.value(metadata i32 %9, metadata !10393, metadata !DIExpression()), !dbg !10402
  %10 = icmp eq i32 %9, 0, !dbg !10404
  br i1 %10, label %11, label %6, !dbg !10405, !llvm.loop !10408

11:                                               ; preds = %6, %3
  %12 = phi i32 [ 1, %3 ], [ %8, %6 ], !dbg !10402
  %13 = udiv i32 %1, %12, !dbg !10410
  call void @llvm.dbg.value(metadata i32 %13, metadata !10392, metadata !DIExpression()), !dbg !10402
  %14 = udiv i32 %4, %12, !dbg !10411
  call void @llvm.dbg.value(metadata i32 %14, metadata !10393, metadata !DIExpression()), !dbg !10402
  %15 = icmp ugt i32 %13, 458745, !dbg !10412
  %16 = icmp ugt i32 %14, 65535
  %17 = or i1 %15, %16, !dbg !10413
  br i1 %17, label %18, label %33, !dbg !10413

18:                                               ; preds = %11
  %19 = add i32 %13, -1, !dbg !10414
  %20 = udiv i32 %19, 458745, !dbg !10415
  %21 = add nuw nsw i32 %20, 1, !dbg !10416
  call void @llvm.dbg.value(metadata i32 %21, metadata !10397, metadata !DIExpression()), !dbg !10417
  %22 = add i32 %14, -1, !dbg !10418
  %23 = udiv i32 %22, 65535, !dbg !10419
  %24 = add nuw nsw i32 %23, 1, !dbg !10420
  call void @llvm.dbg.value(metadata i32 %24, metadata !10400, metadata !DIExpression()), !dbg !10417
  %25 = icmp ugt i32 %21, %24, !dbg !10421
  %26 = select i1 %25, i32 %21, i32 %24, !dbg !10422
  call void @llvm.dbg.value(metadata i32 %26, metadata !10401, metadata !DIExpression()), !dbg !10417
  %27 = udiv i32 %13, %26, !dbg !10423
  call void @llvm.dbg.value(metadata i32 %27, metadata !10392, metadata !DIExpression()), !dbg !10402
  %28 = udiv i32 %14, %26, !dbg !10424
  call void @llvm.dbg.value(metadata i32 %28, metadata !10393, metadata !DIExpression()), !dbg !10402
  %29 = icmp ugt i32 %26, %13, !dbg !10425
  %30 = select i1 %29, i32 1, i32 %27, !dbg !10427
  call void @llvm.dbg.value(metadata i32 %30, metadata !10392, metadata !DIExpression()), !dbg !10402
  %31 = icmp ugt i32 %26, %14, !dbg !10428
  %32 = select i1 %31, i32 1, i32 %28, !dbg !10430
  call void @llvm.dbg.value(metadata i32 %32, metadata !10393, metadata !DIExpression()), !dbg !10402
  br label %33, !dbg !10431

33:                                               ; preds = %11, %18
  %34 = phi i32 [ %32, %18 ], [ %14, %11 ], !dbg !10402
  %35 = phi i32 [ %30, %18 ], [ %13, %11 ], !dbg !10402
  call void @llvm.dbg.value(metadata i32 %35, metadata !10392, metadata !DIExpression()), !dbg !10402
  call void @llvm.dbg.value(metadata i32 %34, metadata !10393, metadata !DIExpression()), !dbg !10402
  %36 = add i32 %35, -1, !dbg !10432
  %37 = udiv i32 %36, 65535, !dbg !10433
  %38 = add nuw nsw i32 %37, 1, !dbg !10434
  call void @llvm.dbg.value(metadata i32 %38, metadata !10396, metadata !DIExpression()), !dbg !10402
  %39 = add nsw i32 %37, -1, !dbg !10435
  %40 = icmp ult i32 %39, 6, !dbg !10435
  br i1 %40, label %41, label %44, !dbg !10435

41:                                               ; preds = %33
  %42 = getelementptr inbounds [6 x i32], [6 x i32]* @switch.table.UART_SetBaudRate, i32 0, i32 %39, !dbg !10435
  %43 = load i32, i32* %42, align 4, !dbg !10435
  br label %44, !dbg !10435

44:                                               ; preds = %41, %33
  %45 = phi i32 [ 640, %33 ], [ %43, %41 ], !dbg !10436
  call void @llvm.dbg.value(metadata i32 %45, metadata !10395, metadata !DIExpression()), !dbg !10402
  %46 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 8, !dbg !10438
  %47 = load volatile i32, i32* %46, align 4, !dbg !10439
  %48 = and i32 %47, -897, !dbg !10439
  store volatile i32 %48, i32* %46, align 4, !dbg !10439
  %49 = load volatile i32, i32* %46, align 4, !dbg !10440
  %50 = or i32 %49, %45, !dbg !10440
  store volatile i32 %50, i32* %46, align 4, !dbg !10440
  %51 = add i32 %34, 65535, !dbg !10441
  %52 = and i32 %51, 65535, !dbg !10441
  %53 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 13, !dbg !10442
  store volatile i32 %52, i32* %53, align 4, !dbg !10443
  %54 = udiv i32 %35, %38, !dbg !10444
  %55 = add i32 %54, 65535, !dbg !10444
  %56 = and i32 %55, 65535, !dbg !10444
  %57 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 14, !dbg !10445
  store volatile i32 %56, i32* %57, align 4, !dbg !10446
  %58 = mul nuw nsw i32 %38, 1000, !dbg !10447
  %59 = udiv i32 %1, %58, !dbg !10447
  %60 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 16, !dbg !10448
  store volatile i32 %59, i32* %60, align 4, !dbg !10449
  ret void, !dbg !10450
}

; Function Attrs: noinline nounwind optsize
define dso_local void @UART_SetInvertCmd(%struct.UART_Type* noundef %0, i32 noundef %1, i1 noundef zeroext %2) local_unnamed_addr #1 !dbg !10451 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !10455, metadata !DIExpression()), !dbg !10458
  call void @llvm.dbg.value(metadata i32 %1, metadata !10456, metadata !DIExpression()), !dbg !10458
  call void @llvm.dbg.value(metadata i1 %2, metadata !10457, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10458
  %4 = and i32 %1, 4, !dbg !10459
  %5 = icmp eq i32 %4, 0, !dbg !10459
  %6 = and i32 %1, 2, !dbg !10459
  %7 = icmp eq i32 %6, 0, !dbg !10459
  %8 = and i32 %1, 6, !dbg !10459
  %9 = icmp eq i32 %8, 0, !dbg !10459
  br i1 %9, label %10, label %11, !dbg !10459

10:                                               ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.155, i32 0, i32 0), i8* noundef getelementptr inbounds ([63 x i8], [63 x i8]* @.str.3.158, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.157, i32 0, i32 0), i32 noundef 196) #22, !dbg !10462
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.157, i32 0, i32 0), i32 noundef 196) #22, !dbg !10462
  unreachable, !dbg !10462

11:                                               ; preds = %3
  br i1 %2, label %12, label %22, !dbg !10464

12:                                               ; preds = %11
  br i1 %7, label %17, label %13, !dbg !10465

13:                                               ; preds = %12
  %14 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 7, !dbg !10468
  %15 = load volatile i32, i32* %14, align 4, !dbg !10470
  %16 = or i32 %15, 512, !dbg !10470
  store volatile i32 %16, i32* %14, align 4, !dbg !10470
  br label %17, !dbg !10468

17:                                               ; preds = %13, %12
  br i1 %5, label %32, label %18, !dbg !10471

18:                                               ; preds = %17
  %19 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 6, !dbg !10472
  %20 = load volatile i32, i32* %19, align 4, !dbg !10474
  %21 = or i32 %20, 2, !dbg !10474
  store volatile i32 %21, i32* %19, align 4, !dbg !10474
  br label %32, !dbg !10472

22:                                               ; preds = %11
  br i1 %7, label %27, label %23, !dbg !10475

23:                                               ; preds = %22
  %24 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 7, !dbg !10477
  %25 = load volatile i32, i32* %24, align 4, !dbg !10479
  %26 = and i32 %25, -513, !dbg !10479
  store volatile i32 %26, i32* %24, align 4, !dbg !10479
  br label %27, !dbg !10477

27:                                               ; preds = %23, %22
  br i1 %5, label %32, label %28, !dbg !10480

28:                                               ; preds = %27
  %29 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 6, !dbg !10481
  %30 = load volatile i32, i32* %29, align 4, !dbg !10483
  %31 = and i32 %30, -3, !dbg !10483
  store volatile i32 %31, i32* %29, align 4, !dbg !10483
  br label %32, !dbg !10481

32:                                               ; preds = %27, %28, %17, %18
  ret void, !dbg !10484
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetDozeMode(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #14 !dbg !10485 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !10489, metadata !DIExpression()), !dbg !10491
  call void @llvm.dbg.value(metadata i1 %1, metadata !10490, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10491
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 4, !dbg !10492
  %4 = load volatile i32, i32* %3, align 4, !dbg !10492
  %5 = and i32 %4, 2, !dbg !10494
  %6 = select i1 %1, i32 0, i32 -3, !dbg !10494
  %7 = or i32 %5, %6, !dbg !10494
  store volatile i32 %7, i32* %3, align 4, !dbg !10492
  ret void, !dbg !10495
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetLowPowerMode(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #14 !dbg !10496 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !10498, metadata !DIExpression()), !dbg !10500
  call void @llvm.dbg.value(metadata i1 %1, metadata !10499, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10500
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 7, !dbg !10501
  %4 = load volatile i32, i32* %3, align 4, !dbg !10501
  %5 = and i32 %4, -17, !dbg !10503
  %6 = select i1 %1, i32 0, i32 16, !dbg !10503
  %7 = or i32 %5, %6, !dbg !10503
  store volatile i32 %7, i32* %3, align 4, !dbg !10501
  ret void, !dbg !10504
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetIntCmd(%struct.UART_Type* noundef %0, i32 noundef %1, i1 noundef zeroext %2) local_unnamed_addr #14 !dbg !10505 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !10507, metadata !DIExpression()), !dbg !10512
  call void @llvm.dbg.value(metadata i32 %1, metadata !10508, metadata !DIExpression()), !dbg !10512
  call void @llvm.dbg.value(metadata i1 %2, metadata !10509, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10512
  call void @llvm.dbg.value(metadata i32* null, metadata !10510, metadata !DIExpression()), !dbg !10512
  call void @llvm.dbg.value(metadata i32 0, metadata !10511, metadata !DIExpression()), !dbg !10512
  %4 = ptrtoint %struct.UART_Type* %0 to i32, !dbg !10513
  %5 = lshr i32 %1, 16, !dbg !10514
  %6 = add i32 %5, %4, !dbg !10515
  %7 = inttoptr i32 %6 to i32*, !dbg !10516
  call void @llvm.dbg.value(metadata i32* %7, metadata !10510, metadata !DIExpression()), !dbg !10512
  %8 = and i32 %1, 65535, !dbg !10517
  %9 = shl nuw i32 1, %8, !dbg !10518
  call void @llvm.dbg.value(metadata i32 %9, metadata !10511, metadata !DIExpression()), !dbg !10512
  br i1 %2, label %10, label %13, !dbg !10519

10:                                               ; preds = %3
  %11 = load volatile i32, i32* %7, align 4, !dbg !10520
  %12 = or i32 %11, %9, !dbg !10520
  br label %17, !dbg !10522

13:                                               ; preds = %3
  %14 = xor i32 %9, -1, !dbg !10523
  %15 = load volatile i32, i32* %7, align 4, !dbg !10524
  %16 = and i32 %15, %14, !dbg !10524
  br label %17

17:                                               ; preds = %13, %10
  %18 = phi i32 [ %16, %13 ], [ %12, %10 ]
  store volatile i32 %18, i32* %7, align 4, !dbg !10525
  ret void, !dbg !10526
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_ClearStatusFlag(%struct.UART_Type* noundef %0, i32 noundef %1) local_unnamed_addr #14 !dbg !10527 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !10531, metadata !DIExpression()), !dbg !10535
  call void @llvm.dbg.value(metadata i32 %1, metadata !10532, metadata !DIExpression()), !dbg !10535
  call void @llvm.dbg.value(metadata i32* null, metadata !10533, metadata !DIExpression()), !dbg !10535
  call void @llvm.dbg.value(metadata i32 0, metadata !10534, metadata !DIExpression()), !dbg !10535
  %3 = ptrtoint %struct.UART_Type* %0 to i32, !dbg !10536
  %4 = lshr i32 %1, 16, !dbg !10537
  %5 = add i32 %4, %3, !dbg !10538
  %6 = inttoptr i32 %5 to i32*, !dbg !10539
  call void @llvm.dbg.value(metadata i32* %6, metadata !10533, metadata !DIExpression()), !dbg !10535
  %7 = and i32 %1, 65535, !dbg !10540
  %8 = shl nuw i32 1, %7, !dbg !10541
  call void @llvm.dbg.value(metadata i32 %8, metadata !10534, metadata !DIExpression()), !dbg !10535
  store volatile i32 %8, i32* %6, align 4, !dbg !10542
  ret void, !dbg !10543
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetDmaCmd(%struct.UART_Type* noundef %0, i32 noundef %1, i1 noundef zeroext %2) local_unnamed_addr #14 !dbg !10544 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !10546, metadata !DIExpression()), !dbg !10551
  call void @llvm.dbg.value(metadata i32 %1, metadata !10547, metadata !DIExpression()), !dbg !10551
  call void @llvm.dbg.value(metadata i1 %2, metadata !10548, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10551
  call void @llvm.dbg.value(metadata i32* null, metadata !10549, metadata !DIExpression()), !dbg !10551
  call void @llvm.dbg.value(metadata i32 0, metadata !10550, metadata !DIExpression()), !dbg !10551
  %4 = ptrtoint %struct.UART_Type* %0 to i32, !dbg !10552
  %5 = lshr i32 %1, 16, !dbg !10553
  %6 = add i32 %5, %4, !dbg !10554
  %7 = inttoptr i32 %6 to i32*, !dbg !10555
  call void @llvm.dbg.value(metadata i32* %7, metadata !10549, metadata !DIExpression()), !dbg !10551
  %8 = and i32 %1, 65535, !dbg !10556
  %9 = shl nuw i32 1, %8, !dbg !10557
  call void @llvm.dbg.value(metadata i32 %9, metadata !10550, metadata !DIExpression()), !dbg !10551
  br i1 %2, label %10, label %13, !dbg !10558

10:                                               ; preds = %3
  %11 = load volatile i32, i32* %7, align 4, !dbg !10559
  %12 = or i32 %11, %9, !dbg !10559
  br label %17, !dbg !10561

13:                                               ; preds = %3
  %14 = xor i32 %9, -1, !dbg !10562
  %15 = load volatile i32, i32* %7, align 4, !dbg !10563
  %16 = and i32 %15, %14, !dbg !10563
  br label %17

17:                                               ; preds = %13, %10
  %18 = phi i32 [ %16, %13 ], [ %12, %10 ]
  store volatile i32 %18, i32* %7, align 4, !dbg !10564
  ret void, !dbg !10565
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetRtsFlowCtrlCmd(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #14 !dbg !10566 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !10568, metadata !DIExpression()), !dbg !10570
  call void @llvm.dbg.value(metadata i1 %1, metadata !10569, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10570
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 5, !dbg !10571
  %4 = load volatile i32, i32* %3, align 4, !dbg !10571
  %5 = and i32 %4, -16385, !dbg !10573
  %6 = select i1 %1, i32 0, i32 16384, !dbg !10573
  %7 = or i32 %5, %6, !dbg !10573
  store volatile i32 %7, i32* %3, align 4, !dbg !10571
  ret void, !dbg !10574
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetCtsFlowCtrlCmd(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #14 !dbg !10575 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !10577, metadata !DIExpression()), !dbg !10579
  call void @llvm.dbg.value(metadata i1 %1, metadata !10578, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10579
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 5, !dbg !10580
  %4 = load volatile i32, i32* %3, align 4, !dbg !10580
  %5 = and i32 %4, -8193, !dbg !10582
  %6 = select i1 %1, i32 8192, i32 0, !dbg !10582
  %7 = or i32 %5, %6, !dbg !10582
  store volatile i32 %7, i32* %3, align 4, !dbg !10580
  ret void, !dbg !10583
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetCtsPinLevel(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #14 !dbg !10584 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !10586, metadata !DIExpression()), !dbg !10588
  call void @llvm.dbg.value(metadata i1 %1, metadata !10587, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10588
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 5, !dbg !10589
  %4 = load volatile i32, i32* %3, align 4, !dbg !10589
  %5 = and i32 %4, -4097, !dbg !10591
  %6 = select i1 %1, i32 4096, i32 0, !dbg !10591
  %7 = or i32 %5, %6, !dbg !10591
  store volatile i32 %7, i32* %3, align 4, !dbg !10589
  ret void, !dbg !10592
}

; Function Attrs: noinline nounwind optsize
define dso_local void @UART_SetModemMode(%struct.UART_Type* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !10593 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !10595, metadata !DIExpression()), !dbg !10597
  call void @llvm.dbg.value(metadata i32 %1, metadata !10596, metadata !DIExpression()), !dbg !10597
  %3 = and i32 %1, -65, !dbg !10598
  %4 = icmp eq i32 %3, 0, !dbg !10598
  br i1 %4, label %6, label %5, !dbg !10598

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.155, i32 0, i32 0), i8* noundef getelementptr inbounds ([57 x i8], [57 x i8]* @.str.4.165, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.157, i32 0, i32 0), i32 noundef 396) #22, !dbg !10601
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.157, i32 0, i32 0), i32 noundef 396) #22, !dbg !10601
  unreachable, !dbg !10601

6:                                                ; preds = %2
  %7 = icmp eq i32 %1, 0, !dbg !10598
  %8 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 8, !dbg !10603
  %9 = load volatile i32, i32* %8, align 4, !dbg !10603
  %10 = and i32 %9, -65, !dbg !10605
  %11 = select i1 %7, i32 0, i32 64, !dbg !10605
  %12 = or i32 %10, %11, !dbg !10605
  store volatile i32 %12, i32* %8, align 4, !dbg !10603
  ret void, !dbg !10606
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetDtrPinLevel(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #14 !dbg !10607 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !10609, metadata !DIExpression()), !dbg !10611
  call void @llvm.dbg.value(metadata i1 %1, metadata !10610, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10611
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 6, !dbg !10612
  %4 = load volatile i32, i32* %3, align 4, !dbg !10612
  %5 = and i32 %4, -1025, !dbg !10614
  %6 = select i1 %1, i32 1024, i32 0, !dbg !10614
  %7 = or i32 %5, %6, !dbg !10614
  store volatile i32 %7, i32* %3, align 4, !dbg !10612
  ret void, !dbg !10615
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetDcdPinLevel(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #14 !dbg !10616 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !10618, metadata !DIExpression()), !dbg !10620
  call void @llvm.dbg.value(metadata i1 %1, metadata !10619, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10620
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 6, !dbg !10621
  %4 = load volatile i32, i32* %3, align 4, !dbg !10621
  %5 = and i32 %4, -513, !dbg !10623
  %6 = select i1 %1, i32 512, i32 0, !dbg !10623
  %7 = or i32 %5, %6, !dbg !10623
  store volatile i32 %7, i32* %3, align 4, !dbg !10621
  ret void, !dbg !10624
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetRiPinLevel(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #14 !dbg !10625 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !10627, metadata !DIExpression()), !dbg !10629
  call void @llvm.dbg.value(metadata i1 %1, metadata !10628, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10629
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 6, !dbg !10630
  %4 = load volatile i32, i32* %3, align 4, !dbg !10630
  %5 = and i32 %4, -257, !dbg !10632
  %6 = select i1 %1, i32 256, i32 0, !dbg !10632
  %7 = or i32 %5, %6, !dbg !10632
  store volatile i32 %7, i32* %3, align 4, !dbg !10630
  ret void, !dbg !10633
}

; Function Attrs: noinline nounwind optsize
define dso_local void @UART_Putchar9(%struct.UART_Type* noundef %0, i16 noundef zeroext %1) local_unnamed_addr #1 !dbg !10634 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !10638, metadata !DIExpression()), !dbg !10640
  call void @llvm.dbg.value(metadata i16 %1, metadata !10639, metadata !DIExpression()), !dbg !10640
  %3 = zext i16 %1 to i32, !dbg !10641
  %4 = icmp ult i16 %1, 512, !dbg !10641
  br i1 %4, label %6, label %5, !dbg !10644

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.155, i32 0, i32 0), i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5.166, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.157, i32 0, i32 0), i32 noundef 462) #22, !dbg !10645
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.157, i32 0, i32 0), i32 noundef 462) #22, !dbg !10645
  unreachable, !dbg !10645

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 18, !dbg !10647
  %8 = load volatile i32, i32* %7, align 4, !dbg !10647
  %9 = and i32 %8, -5, !dbg !10649
  %10 = lshr i32 %3, 6, !dbg !10649
  %11 = and i32 %10, 4, !dbg !10649
  %12 = or i32 %9, %11, !dbg !10649
  store volatile i32 %12, i32* %7, align 4, !dbg !10647
  %13 = and i32 %3, 255, !dbg !10650
  %14 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 2, !dbg !10651
  store volatile i32 %13, i32* %14, align 4, !dbg !10652
  ret void, !dbg !10653
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local zeroext i16 @UART_Getchar9(%struct.UART_Type* noundef %0) local_unnamed_addr #15 !dbg !10654 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !10658, metadata !DIExpression()), !dbg !10660
  %2 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 0, !dbg !10661
  %3 = load volatile i32, i32* %2, align 4, !dbg !10661
  call void @llvm.dbg.value(metadata i32 %3, metadata !10659, metadata !DIExpression()), !dbg !10660
  %4 = trunc i32 %3 to i16, !dbg !10662
  %5 = and i16 %4, 255, !dbg !10662
  %6 = lshr i16 %4, 2, !dbg !10662
  %7 = and i16 %6, 256, !dbg !10662
  %8 = or i16 %7, %5, !dbg !10662
  call void @llvm.dbg.value(metadata i16 %8, metadata !10659, metadata !DIExpression()), !dbg !10660
  ret i16 %8, !dbg !10663
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetMultidropMode(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #14 !dbg !10664 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !10666, metadata !DIExpression()), !dbg !10668
  call void @llvm.dbg.value(metadata i1 %1, metadata !10667, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10668
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 18, !dbg !10669
  %4 = load volatile i32, i32* %3, align 4, !dbg !10669
  %5 = and i32 %4, -2, !dbg !10671
  %6 = zext i1 %1 to i32, !dbg !10671
  %7 = or i32 %5, %6, !dbg !10671
  store volatile i32 %7, i32* %3, align 4, !dbg !10669
  ret void, !dbg !10672
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetSlaveAddressDetectCmd(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #14 !dbg !10673 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !10675, metadata !DIExpression()), !dbg !10677
  call void @llvm.dbg.value(metadata i1 %1, metadata !10676, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10677
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 18, !dbg !10678
  %4 = load volatile i32, i32* %3, align 4, !dbg !10678
  %5 = and i32 %4, -3, !dbg !10680
  %6 = select i1 %1, i32 2, i32 0, !dbg !10680
  %7 = or i32 %5, %6, !dbg !10680
  store volatile i32 %7, i32* %3, align 4, !dbg !10678
  ret void, !dbg !10681
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetIrDACmd(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #14 !dbg !10682 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !10684, metadata !DIExpression()), !dbg !10686
  call void @llvm.dbg.value(metadata i1 %1, metadata !10685, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10686
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 4, !dbg !10687
  %4 = load volatile i32, i32* %3, align 4, !dbg !10687
  %5 = and i32 %4, -129, !dbg !10689
  %6 = select i1 %1, i32 128, i32 0, !dbg !10689
  %7 = or i32 %5, %6, !dbg !10689
  store volatile i32 %7, i32* %3, align 4, !dbg !10687
  ret void, !dbg !10690
}

; Function Attrs: noinline nounwind optsize
define dso_local void @UART_SetIrDAVoteClock(%struct.UART_Type* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !10691 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !10693, metadata !DIExpression()), !dbg !10695
  call void @llvm.dbg.value(metadata i32 %1, metadata !10694, metadata !DIExpression()), !dbg !10695
  %3 = and i32 %1, -33, !dbg !10696
  %4 = icmp eq i32 %3, 0, !dbg !10696
  br i1 %4, label %6, label %5, !dbg !10696

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.155, i32 0, i32 0), i8* noundef getelementptr inbounds ([86 x i8], [86 x i8]* @.str.6.167, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.157, i32 0, i32 0), i32 noundef 553) #22, !dbg !10699
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.157, i32 0, i32 0), i32 noundef 553) #22, !dbg !10699
  unreachable, !dbg !10699

6:                                                ; preds = %2
  %7 = icmp eq i32 %1, 0, !dbg !10696
  %8 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 7, !dbg !10701
  %9 = load volatile i32, i32* %8, align 4, !dbg !10701
  %10 = and i32 %9, -33, !dbg !10703
  %11 = select i1 %7, i32 32, i32 0, !dbg !10703
  %12 = or i32 %10, %11, !dbg !10703
  store volatile i32 %12, i32* %8, align 4, !dbg !10701
  ret void, !dbg !10704
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetAutoBaudRateCmd(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #14 !dbg !10705 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !10707, metadata !DIExpression()), !dbg !10709
  call void @llvm.dbg.value(metadata i1 %1, metadata !10708, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10709
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 4, !dbg !10710
  %4 = load volatile i32, i32* %3, align 4, !dbg !10710
  %5 = and i32 %4, -16385, !dbg !10712
  %6 = select i1 %1, i32 16384, i32 0, !dbg !10712
  %7 = or i32 %5, %6, !dbg !10712
  store volatile i32 %7, i32* %3, align 4, !dbg !10710
  ret void, !dbg !10713
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SendBreakChar(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #14 !dbg !10714 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !10716, metadata !DIExpression()), !dbg !10718
  call void @llvm.dbg.value(metadata i1 %1, metadata !10717, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10718
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 4, !dbg !10719
  %4 = load volatile i32, i32* %3, align 4, !dbg !10719
  %5 = and i32 %4, -17, !dbg !10721
  %6 = select i1 %1, i32 16, i32 0, !dbg !10721
  %7 = or i32 %5, %6, !dbg !10721
  store volatile i32 %7, i32* %3, align 4, !dbg !10719
  ret void, !dbg !10722
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @UART_SetEscapeDecectCmd(%struct.UART_Type* noundef %0, i1 noundef zeroext %1) local_unnamed_addr #14 !dbg !10723 {
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !10725, metadata !DIExpression()), !dbg !10727
  call void @llvm.dbg.value(metadata i1 %1, metadata !10726, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10727
  %3 = getelementptr inbounds %struct.UART_Type, %struct.UART_Type* %0, i32 0, i32 5, !dbg !10728
  %4 = load volatile i32, i32* %3, align 4, !dbg !10728
  %5 = and i32 %4, -2049, !dbg !10730
  %6 = select i1 %1, i32 2048, i32 0, !dbg !10730
  %7 = or i32 %5, %6, !dbg !10730
  store volatile i32 %7, i32* %3, align 4, !dbg !10728
  ret void, !dbg !10731
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @get_gpt_clock_freq(%struct.GPT_Type* noundef %0) local_unnamed_addr #1 !dbg !10732 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.GPT_Type* %0, metadata !10751, metadata !DIExpression()), !dbg !10756
  %4 = bitcast i32* %2 to i8*, !dbg !10757
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #20, !dbg !10757
  %5 = bitcast i32* %3 to i8*, !dbg !10757
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #20, !dbg !10757
  %6 = ptrtoint %struct.GPT_Type* %0 to i32, !dbg !10758
  switch i32 %6, label %21 [
    i32 808386560, label %8
    i32 808452096, label %7
  ], !dbg !10759

7:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %10, metadata !10752, metadata !DIExpression()), !dbg !10756
  call void @llvm.dbg.value(metadata i32* %2, metadata !10754, metadata !DIExpression(DW_OP_deref)), !dbg !10756
  call void @llvm.dbg.value(metadata i32* %3, metadata !10755, metadata !DIExpression(DW_OP_deref)), !dbg !10756
  br label %8, !dbg !10760

8:                                                ; preds = %1, %7
  %9 = phi i32 [ 809024128, %7 ], [ 809024000, %1 ]
  %10 = tail call fastcc i32 @CCM_GetRootMux(i32 noundef %9) #21, !dbg !10762
  call void @CCM_GetRootDivider(%struct.CCM_Type* noundef nonnull inttoptr (i32 808976384 to %struct.CCM_Type*), i32 noundef %9, i32* noundef nonnull %2, i32* noundef nonnull %3) #22, !dbg !10762
  call void @llvm.dbg.value(metadata i32 %10, metadata !10752, metadata !DIExpression()), !dbg !10756
  switch i32 %10, label %21 [
    i32 0, label %13
    i32 2, label %11
  ], !dbg !10763

11:                                               ; preds = %8
  %12 = call i32 @CCM_ANALOG_GetPfdFreq(%struct.CCM_ANALOG_Type* noundef nonnull inttoptr (i32 808845312 to %struct.CCM_ANALOG_Type*), i32 noundef 192) #22, !dbg !10764
  call void @llvm.dbg.value(metadata i32 %12, metadata !10753, metadata !DIExpression()), !dbg !10756
  br label %13, !dbg !10766

13:                                               ; preds = %8, %11
  %14 = phi i32 [ %12, %11 ], [ 24000000, %8 ], !dbg !10767
  call void @llvm.dbg.value(metadata i32 %14, metadata !10753, metadata !DIExpression()), !dbg !10756
  %15 = load i32, i32* %2, align 4, !dbg !10768
  call void @llvm.dbg.value(metadata i32 %15, metadata !10754, metadata !DIExpression()), !dbg !10756
  %16 = add i32 %15, 1, !dbg !10769
  %17 = udiv i32 %14, %16, !dbg !10770
  %18 = load i32, i32* %3, align 4, !dbg !10771
  call void @llvm.dbg.value(metadata i32 %18, metadata !10755, metadata !DIExpression()), !dbg !10756
  %19 = add i32 %18, 1, !dbg !10772
  %20 = udiv i32 %17, %19, !dbg !10773
  br label %21, !dbg !10774

21:                                               ; preds = %8, %1, %13
  %22 = phi i32 [ %20, %13 ], [ 0, %1 ], [ 0, %8 ], !dbg !10756
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #20, !dbg !10775
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #20, !dbg !10775
  ret i32 %22, !dbg !10775
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @CCM_GetRootMux(i32 noundef %0) unnamed_addr #15 !dbg !10776 {
  call void @llvm.dbg.value(metadata %struct.CCM_Type* undef, metadata !10780, metadata !DIExpression()), !dbg !10782
  call void @llvm.dbg.value(metadata i32 %0, metadata !10781, metadata !DIExpression()), !dbg !10782
  %2 = inttoptr i32 %0 to i32*, !dbg !10783
  %3 = load volatile i32, i32* %2, align 4, !dbg !10783
  %4 = lshr i32 %3, 24, !dbg !10784
  %5 = and i32 %4, 7, !dbg !10784
  ret i32 %5, !dbg !10785
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @get_ecspi_clock_freq(%struct.ECSPI_Type* noundef %0) local_unnamed_addr #1 !dbg !10786 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.ECSPI_Type* %0, metadata !10808, metadata !DIExpression()), !dbg !10813
  %4 = bitcast i32* %2 to i8*, !dbg !10814
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #20, !dbg !10814
  %5 = bitcast i32* %3 to i8*, !dbg !10814
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #20, !dbg !10814
  %6 = ptrtoint %struct.ECSPI_Type* %0 to i32, !dbg !10815
  switch i32 %6, label %21 [
    i32 813826048, label %8
    i32 813891584, label %7
  ], !dbg !10816

7:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %10, metadata !10809, metadata !DIExpression()), !dbg !10813
  call void @llvm.dbg.value(metadata i32* %2, metadata !10811, metadata !DIExpression(DW_OP_deref)), !dbg !10813
  call void @llvm.dbg.value(metadata i32* %3, metadata !10812, metadata !DIExpression(DW_OP_deref)), !dbg !10813
  br label %8, !dbg !10817

8:                                                ; preds = %1, %7
  %9 = phi i32 [ 809022336, %7 ], [ 809022208, %1 ]
  %10 = tail call fastcc i32 @CCM_GetRootMux(i32 noundef %9) #21, !dbg !10819
  call void @CCM_GetRootDivider(%struct.CCM_Type* noundef nonnull inttoptr (i32 808976384 to %struct.CCM_Type*), i32 noundef %9, i32* noundef nonnull %2, i32* noundef nonnull %3) #22, !dbg !10819
  call void @llvm.dbg.value(metadata i32 %10, metadata !10809, metadata !DIExpression()), !dbg !10813
  switch i32 %10, label %21 [
    i32 0, label %13
    i32 5, label %11
  ], !dbg !10820

11:                                               ; preds = %8
  %12 = call i32 @CCM_ANALOG_GetPfdFreq(%struct.CCM_ANALOG_Type* noundef nonnull inttoptr (i32 808845312 to %struct.CCM_ANALOG_Type*), i32 noundef 208) #22, !dbg !10821
  call void @llvm.dbg.value(metadata i32 %12, metadata !10810, metadata !DIExpression()), !dbg !10813
  br label %13, !dbg !10823

13:                                               ; preds = %8, %11
  %14 = phi i32 [ %12, %11 ], [ 24000000, %8 ], !dbg !10824
  call void @llvm.dbg.value(metadata i32 %14, metadata !10810, metadata !DIExpression()), !dbg !10813
  %15 = load i32, i32* %2, align 4, !dbg !10825
  call void @llvm.dbg.value(metadata i32 %15, metadata !10811, metadata !DIExpression()), !dbg !10813
  %16 = add i32 %15, 1, !dbg !10826
  %17 = udiv i32 %14, %16, !dbg !10827
  %18 = load i32, i32* %3, align 4, !dbg !10828
  call void @llvm.dbg.value(metadata i32 %18, metadata !10812, metadata !DIExpression()), !dbg !10813
  %19 = add i32 %18, 1, !dbg !10829
  %20 = udiv i32 %17, %19, !dbg !10830
  br label %21, !dbg !10831

21:                                               ; preds = %8, %1, %13
  %22 = phi i32 [ %20, %13 ], [ 0, %1 ], [ 0, %8 ], !dbg !10813
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #20, !dbg !10832
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #20, !dbg !10832
  ret i32 %22, !dbg !10832
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @get_flexcan_clock_freq(%struct.CAN_Type* noundef %0) local_unnamed_addr #1 !dbg !10833 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.CAN_Type* %0, metadata !10879, metadata !DIExpression()), !dbg !10884
  %4 = bitcast i32* %2 to i8*, !dbg !10885
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #20, !dbg !10885
  %5 = bitcast i32* %3 to i8*, !dbg !10885
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #20, !dbg !10885
  %6 = ptrtoint %struct.CAN_Type* %0 to i32, !dbg !10886
  switch i32 %6, label %24 [
    i32 815792128, label %8
    i32 815857664, label %7
  ], !dbg !10887

7:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %10, metadata !10880, metadata !DIExpression()), !dbg !10884
  call void @llvm.dbg.value(metadata i32* %2, metadata !10882, metadata !DIExpression(DW_OP_deref)), !dbg !10884
  call void @llvm.dbg.value(metadata i32* %3, metadata !10883, metadata !DIExpression(DW_OP_deref)), !dbg !10884
  br label %8, !dbg !10888

8:                                                ; preds = %1, %7
  %9 = phi i32 [ 809020672, %7 ], [ 809020544, %1 ]
  %10 = tail call fastcc i32 @CCM_GetRootMux(i32 noundef %9) #21, !dbg !10890
  call void @CCM_GetRootDivider(%struct.CCM_Type* noundef nonnull inttoptr (i32 808976384 to %struct.CCM_Type*), i32 noundef %9, i32* noundef nonnull %2, i32* noundef nonnull %3) #22, !dbg !10890
  call void @llvm.dbg.value(metadata i32 %10, metadata !10880, metadata !DIExpression()), !dbg !10884
  switch i32 %10, label %24 [
    i32 0, label %16
    i32 1, label %11
    i32 3, label %14
  ], !dbg !10891

11:                                               ; preds = %8
  %12 = call i32 @CCM_ANALOG_GetSysPllFreq(%struct.CCM_ANALOG_Type* noundef nonnull inttoptr (i32 808845312 to %struct.CCM_ANALOG_Type*)) #22, !dbg !10892
  %13 = lshr i32 %12, 2, !dbg !10894
  call void @llvm.dbg.value(metadata i32 %13, metadata !10881, metadata !DIExpression()), !dbg !10884
  br label %16, !dbg !10895

14:                                               ; preds = %8
  %15 = call i32 @CCM_ANALOG_GetSysPllFreq(%struct.CCM_ANALOG_Type* noundef nonnull inttoptr (i32 808845312 to %struct.CCM_ANALOG_Type*)) #22, !dbg !10896
  call void @llvm.dbg.value(metadata i32 %15, metadata !10881, metadata !DIExpression()), !dbg !10884
  br label %16, !dbg !10897

16:                                               ; preds = %8, %14, %11
  %17 = phi i32 [ %15, %14 ], [ %13, %11 ], [ 24000000, %8 ], !dbg !10898
  call void @llvm.dbg.value(metadata i32 %17, metadata !10881, metadata !DIExpression()), !dbg !10884
  %18 = load i32, i32* %2, align 4, !dbg !10899
  call void @llvm.dbg.value(metadata i32 %18, metadata !10882, metadata !DIExpression()), !dbg !10884
  %19 = add i32 %18, 1, !dbg !10900
  %20 = udiv i32 %17, %19, !dbg !10901
  %21 = load i32, i32* %3, align 4, !dbg !10902
  call void @llvm.dbg.value(metadata i32 %21, metadata !10883, metadata !DIExpression()), !dbg !10884
  %22 = add i32 %21, 1, !dbg !10903
  %23 = udiv i32 %20, %22, !dbg !10904
  br label %24, !dbg !10905

24:                                               ; preds = %8, %1, %16
  %25 = phi i32 [ %23, %16 ], [ 0, %1 ], [ 0, %8 ], !dbg !10884
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #20, !dbg !10906
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #20, !dbg !10906
  ret i32 %25, !dbg !10906
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @get_i2c_clock_freq(%struct.I2C_Type* noundef %0) local_unnamed_addr #1 !dbg !10907 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.I2C_Type* %0, metadata !10925, metadata !DIExpression()), !dbg !10930
  %4 = bitcast i32* %2 to i8*, !dbg !10931
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #20, !dbg !10931
  %5 = bitcast i32* %3 to i8*, !dbg !10931
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #20, !dbg !10931
  %6 = ptrtoint %struct.I2C_Type* %0 to i32, !dbg !10932
  %7 = add i32 %6, -815923200, !dbg !10933
  %8 = tail call i32 @llvm.fshl.i32(i32 %7, i32 %7, i32 16), !dbg !10933
  %9 = icmp ult i32 %8, 4, !dbg !10933
  br i1 %9, label %10, label %25, !dbg !10933

10:                                               ; preds = %1
  %11 = shl i32 %8, 7, !dbg !10933
  %12 = add i32 %11, 809020800, !dbg !10933
  %13 = tail call fastcc i32 @CCM_GetRootMux(i32 noundef %12) #21, !dbg !10934
  call void @CCM_GetRootDivider(%struct.CCM_Type* noundef nonnull inttoptr (i32 808976384 to %struct.CCM_Type*), i32 noundef %12, i32* noundef nonnull %2, i32* noundef nonnull %3) #22, !dbg !10934
  call void @llvm.dbg.value(metadata i32 %13, metadata !10926, metadata !DIExpression()), !dbg !10930
  switch i32 %13, label %25 [
    i32 0, label %17
    i32 1, label %14
  ], !dbg !10936

14:                                               ; preds = %10
  %15 = call i32 @CCM_ANALOG_GetSysPllFreq(%struct.CCM_ANALOG_Type* noundef nonnull inttoptr (i32 808845312 to %struct.CCM_ANALOG_Type*)) #22, !dbg !10937
  %16 = lshr i32 %15, 2, !dbg !10939
  call void @llvm.dbg.value(metadata i32 %16, metadata !10927, metadata !DIExpression()), !dbg !10930
  br label %17, !dbg !10940

17:                                               ; preds = %10, %14
  %18 = phi i32 [ %16, %14 ], [ 24000000, %10 ], !dbg !10941
  call void @llvm.dbg.value(metadata i32 %18, metadata !10927, metadata !DIExpression()), !dbg !10930
  %19 = load i32, i32* %2, align 4, !dbg !10942
  call void @llvm.dbg.value(metadata i32 %19, metadata !10928, metadata !DIExpression()), !dbg !10930
  %20 = add i32 %19, 1, !dbg !10943
  %21 = udiv i32 %18, %20, !dbg !10944
  %22 = load i32, i32* %3, align 4, !dbg !10945
  call void @llvm.dbg.value(metadata i32 %22, metadata !10929, metadata !DIExpression()), !dbg !10930
  %23 = add i32 %22, 1, !dbg !10946
  %24 = udiv i32 %21, %23, !dbg !10947
  br label %25, !dbg !10948

25:                                               ; preds = %1, %10, %17
  %26 = phi i32 [ %24, %17 ], [ 0, %1 ], [ 0, %10 ], !dbg !10930
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #20, !dbg !10949
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #20, !dbg !10949
  ret i32 %26, !dbg !10949
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #3

; Function Attrs: noinline nounwind optsize
define dso_local i32 @get_uart_clock_freq(%struct.UART_Type* noundef %0) local_unnamed_addr #1 !dbg !10950 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.UART_Type* %0, metadata !10977, metadata !DIExpression()), !dbg !10982
  %4 = bitcast i32* %2 to i8*, !dbg !10983
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #20, !dbg !10983
  %5 = bitcast i32* %3 to i8*, !dbg !10983
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #20, !dbg !10983
  %6 = ptrtoint %struct.UART_Type* %0 to i32, !dbg !10984
  switch i32 %6, label %29 [
    i32 814088192, label %13
    i32 814284800, label %7
    i32 814219264, label %8
    i32 816185344, label %9
    i32 816250880, label %10
    i32 816316416, label %11
    i32 816381952, label %12
  ], !dbg !10985

7:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !10978, metadata !DIExpression()), !dbg !10982
  call void @llvm.dbg.value(metadata i32* %2, metadata !10980, metadata !DIExpression(DW_OP_deref)), !dbg !10982
  call void @llvm.dbg.value(metadata i32* %3, metadata !10981, metadata !DIExpression(DW_OP_deref)), !dbg !10982
  br label %13, !dbg !10986

8:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !10978, metadata !DIExpression()), !dbg !10982
  call void @llvm.dbg.value(metadata i32* %2, metadata !10980, metadata !DIExpression(DW_OP_deref)), !dbg !10982
  call void @llvm.dbg.value(metadata i32* %3, metadata !10981, metadata !DIExpression(DW_OP_deref)), !dbg !10982
  br label %13, !dbg !10988

9:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !10978, metadata !DIExpression()), !dbg !10982
  call void @llvm.dbg.value(metadata i32* %2, metadata !10980, metadata !DIExpression(DW_OP_deref)), !dbg !10982
  call void @llvm.dbg.value(metadata i32* %3, metadata !10981, metadata !DIExpression(DW_OP_deref)), !dbg !10982
  br label %13, !dbg !10989

10:                                               ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !10978, metadata !DIExpression()), !dbg !10982
  call void @llvm.dbg.value(metadata i32* %2, metadata !10980, metadata !DIExpression(DW_OP_deref)), !dbg !10982
  call void @llvm.dbg.value(metadata i32* %3, metadata !10981, metadata !DIExpression(DW_OP_deref)), !dbg !10982
  br label %13, !dbg !10990

11:                                               ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !10978, metadata !DIExpression()), !dbg !10982
  call void @llvm.dbg.value(metadata i32* %2, metadata !10980, metadata !DIExpression(DW_OP_deref)), !dbg !10982
  call void @llvm.dbg.value(metadata i32* %3, metadata !10981, metadata !DIExpression(DW_OP_deref)), !dbg !10982
  br label %13, !dbg !10991

12:                                               ; preds = %1
  call void @llvm.dbg.value(metadata i32 %15, metadata !10978, metadata !DIExpression()), !dbg !10982
  call void @llvm.dbg.value(metadata i32* %2, metadata !10980, metadata !DIExpression(DW_OP_deref)), !dbg !10982
  call void @llvm.dbg.value(metadata i32* %3, metadata !10981, metadata !DIExpression(DW_OP_deref)), !dbg !10982
  br label %13, !dbg !10992

13:                                               ; preds = %1, %12, %11, %10, %9, %8, %7
  %14 = phi i32 [ 809022080, %12 ], [ 809021952, %11 ], [ 809021824, %10 ], [ 809021696, %9 ], [ 809021568, %8 ], [ 809021440, %7 ], [ 809021312, %1 ]
  %15 = tail call fastcc i32 @CCM_GetRootMux(i32 noundef %14) #21, !dbg !10993
  call void @CCM_GetRootDivider(%struct.CCM_Type* noundef nonnull inttoptr (i32 808976384 to %struct.CCM_Type*), i32 noundef %14, i32* noundef nonnull %2, i32* noundef nonnull %3) #22, !dbg !10993
  call void @llvm.dbg.value(metadata i32 %15, metadata !10978, metadata !DIExpression()), !dbg !10982
  switch i32 %15, label %29 [
    i32 0, label %21
    i32 1, label %16
    i32 4, label %19
  ], !dbg !10994

16:                                               ; preds = %13
  %17 = call i32 @CCM_ANALOG_GetSysPllFreq(%struct.CCM_ANALOG_Type* noundef nonnull inttoptr (i32 808845312 to %struct.CCM_ANALOG_Type*)) #22, !dbg !10995
  %18 = lshr i32 %17, 1, !dbg !10997
  call void @llvm.dbg.value(metadata i32 %18, metadata !10979, metadata !DIExpression()), !dbg !10982
  br label %21, !dbg !10998

19:                                               ; preds = %13
  %20 = call i32 @CCM_ANALOG_GetSysPllFreq(%struct.CCM_ANALOG_Type* noundef nonnull inttoptr (i32 808845312 to %struct.CCM_ANALOG_Type*)) #22, !dbg !10999
  call void @llvm.dbg.value(metadata i32 %20, metadata !10979, metadata !DIExpression()), !dbg !10982
  br label %21, !dbg !11000

21:                                               ; preds = %13, %19, %16
  %22 = phi i32 [ %20, %19 ], [ %18, %16 ], [ 24000000, %13 ], !dbg !11001
  call void @llvm.dbg.value(metadata i32 %22, metadata !10979, metadata !DIExpression()), !dbg !10982
  %23 = load i32, i32* %2, align 4, !dbg !11002
  call void @llvm.dbg.value(metadata i32 %23, metadata !10980, metadata !DIExpression()), !dbg !10982
  %24 = add i32 %23, 1, !dbg !11003
  %25 = udiv i32 %22, %24, !dbg !11004
  %26 = load i32, i32* %3, align 4, !dbg !11005
  call void @llvm.dbg.value(metadata i32 %26, metadata !10981, metadata !DIExpression()), !dbg !10982
  %27 = add i32 %26, 1, !dbg !11006
  %28 = udiv i32 %25, %27, !dbg !11007
  br label %29, !dbg !11008

29:                                               ; preds = %13, %1, %21
  %30 = phi i32 [ %28, %21 ], [ 0, %1 ], [ 0, %13 ], !dbg !10982
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #20, !dbg !11009
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #20, !dbg !11009
  ret i32 %30, !dbg !11009
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local void @z_device_state_init() local_unnamed_addr #17 !dbg !11010 {
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !11013, metadata !DIExpression()), !dbg !11029
  call void @llvm.dbg.value(metadata i32 undef, metadata !11013, metadata !DIExpression()), !dbg !11029
  call void @llvm.dbg.value(metadata i32 undef, metadata !11013, metadata !DIExpression(DW_OP_plus_uconst, 24, DW_OP_stack_value)), !dbg !11029
  ret void, !dbg !11030
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.device* @z_impl_device_get_binding(i8* noundef %0) local_unnamed_addr #1 !dbg !11031 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11035, metadata !DIExpression()), !dbg !11037
  %2 = icmp eq i8* %0, null, !dbg !11038
  br i1 %2, label %29, label %3, !dbg !11040

3:                                                ; preds = %1
  %4 = load i8, i8* %0, align 1, !dbg !11041
  %5 = icmp eq i8 %4, 0, !dbg !11042
  %6 = or i1 %5, icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), !dbg !11043
  br i1 %6, label %29, label %8, !dbg !11043

7:                                                ; preds = %15
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !11036, metadata !DIExpression()), !dbg !11037
  br i1 icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), label %29, label %18, !dbg !11044

8:                                                ; preds = %3, %15
  %9 = phi %struct.device* [ %16, %15 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %3 ]
  call void @llvm.dbg.value(metadata %struct.device* %9, metadata !11036, metadata !DIExpression()), !dbg !11037
  %10 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %9) #21, !dbg !11046
  br i1 %10, label %11, label %15, !dbg !11051

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 0, !dbg !11052
  %13 = load i8*, i8** %12, align 4, !dbg !11052
  %14 = icmp eq i8* %13, %0, !dbg !11053
  br i1 %14, label %29, label %15, !dbg !11054

15:                                               ; preds = %8, %11
  %16 = getelementptr inbounds %struct.device, %struct.device* %9, i32 1, !dbg !11055
  call void @llvm.dbg.value(metadata %struct.device* %16, metadata !11036, metadata !DIExpression()), !dbg !11037
  %17 = icmp eq %struct.device* %16, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !11056
  br i1 %17, label %7, label %8, !dbg !11057, !llvm.loop !11058

18:                                               ; preds = %7, %26
  %19 = phi %struct.device* [ %27, %26 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %7 ]
  call void @llvm.dbg.value(metadata %struct.device* %19, metadata !11036, metadata !DIExpression()), !dbg !11037
  %20 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %19) #21, !dbg !11060
  br i1 %20, label %21, label %26, !dbg !11064

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.device, %struct.device* %19, i32 0, i32 0, !dbg !11065
  %23 = load i8*, i8** %22, align 4, !dbg !11065
  %24 = tail call i32 @strcmp(i8* noundef nonnull %0, i8* noundef %23) #22, !dbg !11066
  %25 = icmp eq i32 %24, 0, !dbg !11067
  br i1 %25, label %29, label %26, !dbg !11068

26:                                               ; preds = %18, %21
  %27 = getelementptr inbounds %struct.device, %struct.device* %19, i32 1, !dbg !11069
  call void @llvm.dbg.value(metadata %struct.device* %27, metadata !11036, metadata !DIExpression()), !dbg !11037
  %28 = icmp eq %struct.device* %27, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !11070
  br i1 %28, label %29, label %18, !dbg !11044, !llvm.loop !11071

29:                                               ; preds = %11, %21, %26, %3, %7, %1
  %30 = phi %struct.device* [ null, %3 ], [ null, %1 ], [ null, %7 ], [ %19, %21 ], [ null, %26 ], [ %9, %11 ], !dbg !11037
  ret %struct.device* %30, !dbg !11073
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_device_is_ready(%struct.device* noundef readonly %0) local_unnamed_addr #8 !dbg !11074 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11078, metadata !DIExpression()), !dbg !11079
  %2 = icmp eq %struct.device* %0, null, !dbg !11080
  br i1 %2, label %14, label %3, !dbg !11082

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !11083
  %5 = load %struct.device_state*, %struct.device_state** %4, align 4, !dbg !11083
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !11084
  %7 = load i8, i8* %6, align 1, !dbg !11084
  %8 = and i8 %7, 1, !dbg !11084
  %9 = icmp eq i8 %8, 0, !dbg !11084
  br i1 %9, label %14, label %10, !dbg !11085

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 0, !dbg !11086
  %12 = load i8, i8* %11, align 1, !dbg !11086
  %13 = icmp eq i8 %12, 0, !dbg !11087
  br label %14

14:                                               ; preds = %3, %10, %1
  %15 = phi i1 [ false, %1 ], [ false, %3 ], [ %13, %10 ], !dbg !11079
  ret i1 %15, !dbg !11088
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_device_get_all_static(%struct.device** nocapture noundef writeonly %0) local_unnamed_addr #7 !dbg !11089 {
  call void @llvm.dbg.value(metadata %struct.device** %0, metadata !11094, metadata !DIExpression()), !dbg !11095
  store %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device** %0, align 4, !dbg !11096
  ret i32 sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), !dbg !11097
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_required_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !11098 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11106, metadata !DIExpression()), !dbg !11111
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !11107, metadata !DIExpression()), !dbg !11111
  call void @llvm.dbg.value(metadata i8* %2, metadata !11108, metadata !DIExpression()), !dbg !11111
  %5 = bitcast i32* %4 to i8*, !dbg !11112
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #20, !dbg !11112
  call void @llvm.dbg.value(metadata i32 0, metadata !11109, metadata !DIExpression()), !dbg !11111
  store i32 0, i32* %4, align 4, !dbg !11113
  call void @llvm.dbg.value(metadata i32* %4, metadata !11109, metadata !DIExpression(DW_OP_deref)), !dbg !11111
  %6 = call fastcc i16* @device_required_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #21, !dbg !11114
  call void @llvm.dbg.value(metadata i16* %6, metadata !11110, metadata !DIExpression()), !dbg !11111
  %7 = load i32, i32* %4, align 4, !dbg !11115
  call void @llvm.dbg.value(metadata i32 %7, metadata !11109, metadata !DIExpression()), !dbg !11111
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #21, !dbg !11116
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #20, !dbg !11117
  ret i32 %8, !dbg !11118
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_required_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #13 !dbg !11119 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11123, metadata !DIExpression()), !dbg !11129
  call void @llvm.dbg.value(metadata i32* %1, metadata !11124, metadata !DIExpression()), !dbg !11129
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !11130
  %4 = load i16*, i16** %3, align 4, !dbg !11130
  call void @llvm.dbg.value(metadata i16* %4, metadata !11125, metadata !DIExpression()), !dbg !11129
  %5 = icmp eq i16* %4, null, !dbg !11131
  br i1 %5, label %14, label %6, !dbg !11132

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %12, %6 ], [ 0, %2 ], !dbg !11133
  call void @llvm.dbg.value(metadata i32 %7, metadata !11126, metadata !DIExpression()), !dbg !11133
  %8 = getelementptr inbounds i16, i16* %4, i32 %7, !dbg !11134
  %9 = load i16, i16* %8, align 2, !dbg !11134
  %10 = add i16 %9, -32767, !dbg !11135
  %11 = icmp ult i16 %10, 2, !dbg !11135
  %12 = add i32 %7, 1, !dbg !11136
  call void @llvm.dbg.value(metadata i32 %12, metadata !11126, metadata !DIExpression()), !dbg !11133
  br i1 %11, label %13, label %6, !dbg !11135, !llvm.loop !11138

13:                                               ; preds = %6
  store i32 %7, i32* %1, align 4, !dbg !11141
  br label %14, !dbg !11142

14:                                               ; preds = %13, %2
  ret i16* %4, !dbg !11143
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @device_visitor(i16* nocapture noundef readonly %0, i32 noundef %1, i32 (%struct.device*, i8*)* nocapture noundef readonly %2, i8* noundef %3) unnamed_addr #1 !dbg !11144 {
  call void @llvm.dbg.value(metadata i16* %0, metadata !11148, metadata !DIExpression()), !dbg !11159
  call void @llvm.dbg.value(metadata i32 %1, metadata !11149, metadata !DIExpression()), !dbg !11159
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %2, metadata !11150, metadata !DIExpression()), !dbg !11159
  call void @llvm.dbg.value(metadata i8* %3, metadata !11151, metadata !DIExpression()), !dbg !11159
  call void @llvm.dbg.value(metadata i32 0, metadata !11152, metadata !DIExpression()), !dbg !11160
  %5 = icmp eq i32 %1, 0, !dbg !11161
  br i1 %5, label %16, label %8, !dbg !11162

6:                                                ; preds = %8
  call void @llvm.dbg.value(metadata i32 %15, metadata !11152, metadata !DIExpression()), !dbg !11160
  %7 = icmp eq i32 %15, %1, !dbg !11161
  br i1 %7, label %16, label %8, !dbg !11162, !llvm.loop !11163

8:                                                ; preds = %4, %6
  %9 = phi i32 [ %15, %6 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !11152, metadata !DIExpression()), !dbg !11160
  %10 = getelementptr inbounds i16, i16* %0, i32 %9, !dbg !11165
  %11 = load i16, i16* %10, align 2, !dbg !11165
  call void @llvm.dbg.value(metadata i16 %11, metadata !11154, metadata !DIExpression()), !dbg !11166
  %12 = tail call fastcc %struct.device* @device_from_handle(i16 noundef signext %11) #21, !dbg !11167
  call void @llvm.dbg.value(metadata %struct.device* %12, metadata !11157, metadata !DIExpression()), !dbg !11166
  %13 = tail call i32 %2(%struct.device* noundef %12, i8* noundef %3) #22, !dbg !11168
  call void @llvm.dbg.value(metadata i32 %13, metadata !11158, metadata !DIExpression()), !dbg !11166
  %14 = icmp slt i32 %13, 0, !dbg !11169
  %15 = add nuw i32 %9, 1, !dbg !11171
  call void @llvm.dbg.value(metadata i32 %15, metadata !11152, metadata !DIExpression()), !dbg !11160
  br i1 %14, label %16, label %6

16:                                               ; preds = %8, %6, %4
  %17 = phi i32 [ 0, %4 ], [ %1, %6 ], [ %13, %8 ]
  ret i32 %17, !dbg !11172
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.device* @device_from_handle(i16 noundef signext %0) unnamed_addr #2 !dbg !11173 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !11177, metadata !DIExpression()), !dbg !11180
  call void @llvm.dbg.value(metadata %struct.device* null, metadata !11178, metadata !DIExpression()), !dbg !11180
  call void @llvm.dbg.value(metadata i32 sdiv exact (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), metadata !11179, metadata !DIExpression()), !dbg !11180
  %2 = sext i16 %0 to i32, !dbg !11181
  %3 = icmp slt i16 %0, 1, !dbg !11183
  %4 = icmp ugt i32 %2, sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24)
  %5 = or i1 %3, %4, !dbg !11184
  %6 = add nsw i32 %2, -1, !dbg !11184
  %7 = getelementptr inbounds [0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 %6, !dbg !11184
  %8 = select i1 %5, %struct.device* null, %struct.device* %7, !dbg !11184
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !11178, metadata !DIExpression()), !dbg !11180
  ret %struct.device* %8, !dbg !11185
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_supported_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !11186 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11188, metadata !DIExpression()), !dbg !11193
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !11189, metadata !DIExpression()), !dbg !11193
  call void @llvm.dbg.value(metadata i8* %2, metadata !11190, metadata !DIExpression()), !dbg !11193
  %5 = bitcast i32* %4 to i8*, !dbg !11194
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #20, !dbg !11194
  call void @llvm.dbg.value(metadata i32 0, metadata !11191, metadata !DIExpression()), !dbg !11193
  store i32 0, i32* %4, align 4, !dbg !11195
  call void @llvm.dbg.value(metadata i32* %4, metadata !11191, metadata !DIExpression(DW_OP_deref)), !dbg !11193
  %6 = call fastcc i16* @device_supported_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #21, !dbg !11196
  call void @llvm.dbg.value(metadata i16* %6, metadata !11192, metadata !DIExpression()), !dbg !11193
  %7 = load i32, i32* %4, align 4, !dbg !11197
  call void @llvm.dbg.value(metadata i32 %7, metadata !11191, metadata !DIExpression()), !dbg !11193
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #21, !dbg !11198
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #20, !dbg !11199
  ret i32 %8, !dbg !11200
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_supported_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #13 !dbg !11201 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11203, metadata !DIExpression()), !dbg !11208
  call void @llvm.dbg.value(metadata i32* %1, metadata !11204, metadata !DIExpression()), !dbg !11208
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !11209
  %4 = load i16*, i16** %3, align 4, !dbg !11209
  call void @llvm.dbg.value(metadata i16* %4, metadata !11205, metadata !DIExpression()), !dbg !11208
  call void @llvm.dbg.value(metadata i32 0, metadata !11206, metadata !DIExpression()), !dbg !11208
  call void @llvm.dbg.value(metadata i32 0, metadata !11207, metadata !DIExpression()), !dbg !11208
  %5 = icmp eq i16* %4, null, !dbg !11210
  br i1 %5, label %22, label %6, !dbg !11212

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %13, %6 ], [ 0, %2 ]
  %8 = phi i16* [ %11, %6 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !11206, metadata !DIExpression()), !dbg !11208
  call void @llvm.dbg.value(metadata i16* %8, metadata !11205, metadata !DIExpression()), !dbg !11208
  %9 = load i16, i16* %8, align 2, !dbg !11213
  %10 = icmp eq i16 %9, -32768, !dbg !11217
  call void @llvm.dbg.value(metadata i32 undef, metadata !11206, metadata !DIExpression()), !dbg !11208
  %11 = getelementptr inbounds i16, i16* %8, i32 1, !dbg !11218
  call void @llvm.dbg.value(metadata i16* %11, metadata !11205, metadata !DIExpression()), !dbg !11208
  %12 = zext i1 %10 to i32, !dbg !11219
  %13 = add i32 %7, %12, !dbg !11219
  call void @llvm.dbg.value(metadata i32 %13, metadata !11206, metadata !DIExpression()), !dbg !11208
  %14 = icmp eq i32 %13, 2, !dbg !11220
  br i1 %14, label %15, label %6, !dbg !11221

15:                                               ; preds = %6, %15
  %16 = phi i32 [ %20, %15 ], [ 0, %6 ], !dbg !11208
  call void @llvm.dbg.value(metadata i32 %16, metadata !11207, metadata !DIExpression()), !dbg !11208
  %17 = getelementptr inbounds i16, i16* %11, i32 %16, !dbg !11222
  %18 = load i16, i16* %17, align 2, !dbg !11222
  %19 = icmp eq i16 %18, 32767, !dbg !11223
  %20 = add i32 %16, 1, !dbg !11224
  call void @llvm.dbg.value(metadata i32 %20, metadata !11207, metadata !DIExpression()), !dbg !11208
  br i1 %19, label %21, label %15, !dbg !11226, !llvm.loop !11227

21:                                               ; preds = %15
  store i32 %16, i32* %1, align 4, !dbg !11229
  br label %22, !dbg !11230

22:                                               ; preds = %21, %2
  %23 = phi i16* [ %11, %21 ], [ null, %2 ], !dbg !11231
  call void @llvm.dbg.value(metadata i16* %23, metadata !11205, metadata !DIExpression()), !dbg !11208
  ret i16* %23, !dbg !11232
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local nonnull i32* @z_impl_z_errno() local_unnamed_addr #8 !dbg !11233 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11236
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 5, !dbg !11237
  ret i32* %2, !dbg !11238
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump(i32 %0, %struct.__esf* nocapture %1, %struct.k_thread* nocapture %2) local_unnamed_addr #2 !dbg !11239 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !11384, metadata !DIExpression()), !dbg !11387
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !11385, metadata !DIExpression()), !dbg !11387
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !11386, metadata !DIExpression()), !dbg !11387
  ret void, !dbg !11388
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_memory_dump(i32 noundef %0, i32 noundef %1) local_unnamed_addr #2 !dbg !11389 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11393, metadata !DIExpression()), !dbg !11395
  call void @llvm.dbg.value(metadata i32 %1, metadata !11394, metadata !DIExpression()), !dbg !11395
  ret void, !dbg !11396
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_buffer_output(i8* nocapture noundef %0, i32 noundef %1) local_unnamed_addr #2 !dbg !11397 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11401, metadata !DIExpression()), !dbg !11403
  call void @llvm.dbg.value(metadata i32 %1, metadata !11402, metadata !DIExpression()), !dbg !11403
  ret void, !dbg !11404
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_query(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #2 !dbg !11405 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11409, metadata !DIExpression()), !dbg !11411
  call void @llvm.dbg.value(metadata i8* %1, metadata !11410, metadata !DIExpression()), !dbg !11411
  ret i32 -134, !dbg !11412
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_cmd(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #2 !dbg !11413 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11417, metadata !DIExpression()), !dbg !11419
  call void @llvm.dbg.value(metadata i8* %1, metadata !11418, metadata !DIExpression()), !dbg !11419
  ret i32 -134, !dbg !11420
}

; Function Attrs: noinline noreturn nounwind optsize
define weak dso_local void @arch_system_halt(i32 noundef %0) local_unnamed_addr #10 !dbg !11421 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11424, metadata !DIExpression()), !dbg !11425
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #20, !dbg !11426, !srcloc !11432
  call void @llvm.dbg.value(metadata i32 undef, metadata !11429, metadata !DIExpression()) #20, !dbg !11433
  call void @llvm.dbg.value(metadata i32 undef, metadata !11430, metadata !DIExpression()) #20, !dbg !11433
  br label %3, !dbg !11434

3:                                                ; preds = %3, %1
  br label %3, !dbg !11435, !llvm.loop !11438
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !11441 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11445, metadata !DIExpression()), !dbg !11447
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !11446, metadata !DIExpression()), !dbg !11447
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.174, i32 0, i32 0), i32 noundef 69) #22, !dbg !11448
  tail call void @arch_system_halt(i32 noundef %0) #25, !dbg !11453
  unreachable, !dbg !11453
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_fatal_halt(i32 noundef %0) local_unnamed_addr #10 !dbg !11454 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11456, metadata !DIExpression()), !dbg !11457
  tail call void @arch_system_halt(i32 noundef %0) #25, !dbg !11458
  unreachable, !dbg !11458
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !11459 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11461, metadata !DIExpression()), !dbg !11465
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !11462, metadata !DIExpression()), !dbg !11465
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #20, !dbg !11466, !srcloc !11432
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !11466
  call void @llvm.dbg.value(metadata i32 %4, metadata !11429, metadata !DIExpression()) #20, !dbg !11468
  call void @llvm.dbg.value(metadata i32 undef, metadata !11430, metadata !DIExpression()) #20, !dbg !11468
  call void @llvm.dbg.value(metadata i32 %4, metadata !11463, metadata !DIExpression()), !dbg !11465
  %5 = tail call fastcc %struct.k_thread* @k_current_get.177() #23, !dbg !11469
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !11464, metadata !DIExpression()), !dbg !11465
  %6 = tail call fastcc i8* @reason_to_str(i32 noundef %0) #21, !dbg !11470
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.1.178, i32 0, i32 0), i32 noundef 69, i32 noundef %0, i8* noundef %6, i32 noundef 0) #22, !dbg !11470
  %7 = icmp eq %struct.__esf* %1, null, !dbg !11475
  br i1 %7, label %20, label %8, !dbg !11477

8:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !11478, metadata !DIExpression()), !dbg !11483
  %9 = getelementptr inbounds %struct.__esf, %struct.__esf* %1, i32 0, i32 0, i32 7, !dbg !11485
  %10 = load i32, i32* %9, align 4, !dbg !11485
  %11 = and i32 %10, 511, !dbg !11486
  %12 = icmp eq i32 %11, 0, !dbg !11487
  br i1 %12, label %14, label %13, !dbg !11488

13:                                               ; preds = %8
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.179, i32 0, i32 0), i32 noundef 69) #22, !dbg !11489
  br label %14, !dbg !11495

14:                                               ; preds = %8, %13
  %15 = tail call fastcc i8* @thread_name_get(%struct.k_thread* noundef %5) #21, !dbg !11496
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.180, i32 0, i32 0), i32 noundef 69, %struct.k_thread* noundef %5, i8* noundef %15) #22, !dbg !11496
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef nonnull %1) #21, !dbg !11501
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !11478, metadata !DIExpression()), !dbg !11502
  %16 = load i32, i32* %9, align 4, !dbg !11507
  %17 = and i32 %16, 511, !dbg !11508
  %18 = icmp eq i32 %17, 0, !dbg !11509
  br i1 %18, label %22, label %19, !dbg !11510

19:                                               ; preds = %14
  call void @llvm.dbg.value(metadata i32 %4, metadata !11511, metadata !DIExpression()) #20, !dbg !11514
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #20, !dbg !11517, !srcloc !11518
  br label %25, !dbg !11519

20:                                               ; preds = %2
  %21 = tail call fastcc i8* @thread_name_get(%struct.k_thread* noundef %5) #21, !dbg !11496
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.180, i32 0, i32 0), i32 noundef 69, %struct.k_thread* noundef %5, i8* noundef %21) #22, !dbg !11496
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef null) #21, !dbg !11501
  br label %22, !dbg !11520

22:                                               ; preds = %20, %14
  %23 = icmp eq i32 %0, 1, !dbg !11521
  call void @llvm.dbg.value(metadata i32 %4, metadata !11511, metadata !DIExpression()) #20, !dbg !11524
  call void @llvm.dbg.value(metadata i32 %4, metadata !11511, metadata !DIExpression()) #20, !dbg !11527
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #20, !dbg !11465
  br i1 %23, label %25, label %24, !dbg !11529

24:                                               ; preds = %22
  tail call fastcc void @k_thread_abort.181(%struct.k_thread* noundef %5) #21, !dbg !11530
  br label %25, !dbg !11533

25:                                               ; preds = %22, %24, %19
  ret void, !dbg !11533
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.177() unnamed_addr #11 !dbg !11534 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.189() #23, !dbg !11538
  ret %struct.k_thread* %1, !dbg !11539
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i8* @reason_to_str(i32 noundef %0) unnamed_addr #2 !dbg !11540 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11544, metadata !DIExpression()), !dbg !11545
  %2 = icmp ult i32 %0, 5, !dbg !11546
  br i1 %2, label %3, label %6, !dbg !11546

3:                                                ; preds = %1
  %4 = getelementptr inbounds [5 x i8*], [5 x i8*]* @switch.table.reason_to_str, i32 0, i32 %0, !dbg !11546
  %5 = load i8*, i8** %4, align 4, !dbg !11546
  br label %6, !dbg !11546

6:                                                ; preds = %1, %3
  %7 = phi i8* [ %5, %3 ], [ getelementptr inbounds ([14 x i8], [14 x i8]* @.str.9.183, i32 0, i32 0), %1 ], !dbg !11547
  ret i8* %7, !dbg !11549
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @thread_name_get(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !11550 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11554, metadata !DIExpression()), !dbg !11556
  %2 = icmp eq %struct.k_thread* %0, null, !dbg !11557
  br i1 %2, label %9, label %3, !dbg !11558

3:                                                ; preds = %1
  %4 = tail call i8* @k_thread_name_get(%struct.k_thread* noundef nonnull %0) #22, !dbg !11559
  call void @llvm.dbg.value(metadata i8* %4, metadata !11555, metadata !DIExpression()), !dbg !11556
  %5 = icmp eq i8* %4, null, !dbg !11560
  br i1 %5, label %9, label %6, !dbg !11562

6:                                                ; preds = %3
  %7 = load i8, i8* %4, align 1, !dbg !11563
  %8 = icmp eq i8 %7, 0, !dbg !11564
  br i1 %8, label %9, label %10, !dbg !11565

9:                                                ; preds = %1, %6, %3
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10.182, i32 0, i32 0), metadata !11555, metadata !DIExpression()), !dbg !11556
  br label %10, !dbg !11566

10:                                               ; preds = %9, %6
  %11 = phi i8* [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10.182, i32 0, i32 0), %9 ], [ %4, %6 ], !dbg !11556
  call void @llvm.dbg.value(metadata i8* %11, metadata !11555, metadata !DIExpression()), !dbg !11556
  ret i8* %11, !dbg !11568
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort.181(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !11569 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11573, metadata !DIExpression()), !dbg !11574
  tail call void asm sideeffect "", "~{memory}"() #20, !dbg !11575, !srcloc !11577
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #22, !dbg !11578
  ret void, !dbg !11579
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.189() unnamed_addr #11 !dbg !11580 {
  tail call void asm sideeffect "", "~{memory}"() #20, !dbg !11581, !srcloc !11583
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #22, !dbg !11584
  ret %struct.k_thread* %1, !dbg !11585
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !11586 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11590, metadata !DIExpression()), !dbg !11593
  call void @llvm.dbg.value(metadata i32 %1, metadata !11591, metadata !DIExpression()), !dbg !11593
  call void @llvm.dbg.value(metadata i32 %2, metadata !11592, metadata !DIExpression()), !dbg !11593
  %4 = tail call i8* @memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) #22, !dbg !11594
  ret void, !dbg !11595
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !11596 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11600, metadata !DIExpression()), !dbg !11603
  call void @llvm.dbg.value(metadata i8* %1, metadata !11601, metadata !DIExpression()), !dbg !11603
  call void @llvm.dbg.value(metadata i32 %2, metadata !11602, metadata !DIExpression()), !dbg !11603
  %4 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) #22, !dbg !11604
  ret void, !dbg !11605
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_bss_zero() local_unnamed_addr #1 !dbg !11606 {
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__bss_end to i32), i32 ptrtoint ([0 x i8]* @__bss_start to i32))) #21, !dbg !11607
  ret void, !dbg !11608
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_cpu(i32 noundef %0) local_unnamed_addr #1 !dbg !11609 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11613, metadata !DIExpression()), !dbg !11614
  tail call fastcc void @init_idle_thread(i32 noundef %0) #21, !dbg !11615
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !11616
  %3 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 3, !dbg !11617
  store %struct.k_thread* %2, %struct.k_thread** %3, align 4, !dbg !11618
  %4 = trunc i32 %0 to i8, !dbg !11619
  %5 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 5, !dbg !11620
  store i8 %4, i8* %5, align 4, !dbg !11621
  %6 = getelementptr inbounds [1 x [2048 x %struct.z_thread_stack_element]], [1 x [2048 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 %0, i32 0, !dbg !11622
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef nonnull %6) #21, !dbg !11623
  %8 = getelementptr inbounds i8, i8* %7, i32 2048, !dbg !11624
  %9 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 1, !dbg !11625
  store i8* %8, i8** %9, align 4, !dbg !11626
  ret void, !dbg !11627
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @init_idle_thread(i32 noundef %0) unnamed_addr #1 !dbg !11628 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11630, metadata !DIExpression()), !dbg !11636
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !11637
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !11631, metadata !DIExpression()), !dbg !11636
  %3 = getelementptr inbounds [1 x [320 x %struct.z_thread_stack_element]], [1 x [320 x %struct.z_thread_stack_element]]* @z_idle_stacks, i32 0, i32 %0, i32 0, !dbg !11638
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %3, metadata !11632, metadata !DIExpression()), !dbg !11636
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5.196, i32 0, i32 0), metadata !11635, metadata !DIExpression()), !dbg !11636
  %4 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, !dbg !11639
  %5 = bitcast %struct._cpu* %4 to i8*, !dbg !11640
  %6 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull %2, %struct.z_thread_stack_element* noundef nonnull %3, i32 noundef 320, void (i8*, i8*, i8*)* noundef nonnull @idle, i8* noundef nonnull %5, i8* noundef null, i8* noundef null, i32 noundef 15, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5.196, i32 0, i32 0)) #22, !dbg !11641
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull %2) #21, !dbg !11642
  ret void, !dbg !11643
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #2 !dbg !11644 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !11648, metadata !DIExpression()), !dbg !11649
  %2 = getelementptr %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 0, i32 0, !dbg !11650
  ret i8* %2, !dbg !11651
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !11652 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11657, metadata !DIExpression()), !dbg !11658
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !11659
  %3 = load i8, i8* %2, align 1, !dbg !11660
  %4 = and i8 %3, -5, !dbg !11660
  store i8 %4, i8* %2, align 1, !dbg !11660
  ret void, !dbg !11661
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_cstart() local_unnamed_addr #10 !dbg !11662 {
  %1 = alloca %struct.k_thread, align 8
  tail call fastcc void @z_sys_init_run_level(i32 noundef 0) #21, !dbg !11665
  %2 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef getelementptr inbounds ([1 x [2048 x %struct.z_thread_stack_element]], [1 x [2048 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 0, i32 0)) #22, !dbg !11666
  %3 = ptrtoint i8* %2 to i32, !dbg !11675
  %4 = add i32 %3, 2048, !dbg !11676
  call void @llvm.dbg.value(metadata i32 %4, metadata !11670, metadata !DIExpression()) #20, !dbg !11677
  call void @llvm.dbg.value(metadata i32 %4, metadata !11678, metadata !DIExpression()) #20, !dbg !11681
  tail call void asm sideeffect "MSR msp, $0", "r"(i32 %4) #20, !dbg !11683, !srcloc !11684
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !11685
  %6 = or i32 %5, 512, !dbg !11685
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !11685
  tail call fastcc void @__NVIC_SetPriority.199(i32 noundef -2, i32 noundef 255) #22, !dbg !11686
  tail call fastcc void @__NVIC_SetPriority.199(i32 noundef -5, i32 noundef 0) #22, !dbg !11689
  tail call fastcc void @__NVIC_SetPriority.199(i32 noundef -12, i32 noundef 0) #22, !dbg !11690
  tail call fastcc void @__NVIC_SetPriority.199(i32 noundef -11, i32 noundef 0) #22, !dbg !11691
  tail call fastcc void @__NVIC_SetPriority.199(i32 noundef -10, i32 noundef 0) #22, !dbg !11692
  tail call fastcc void @__NVIC_SetPriority.199(i32 noundef -4, i32 noundef 0) #22, !dbg !11693
  %7 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !11694
  %8 = or i32 %7, 458752, !dbg !11694
  store volatile i32 %8, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !11694
  tail call void @z_arm_fault_init() #22, !dbg !11695
  tail call void @z_arm_cpu_idle_init() #22, !dbg !11696
  store volatile i32 -1, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !11697
  store volatile i32 -1, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !11700
  %9 = bitcast %struct.k_thread* %1 to i8*, !dbg !11701
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %9) #20, !dbg !11701
  call void @llvm.dbg.declare(metadata %struct.k_thread* %1, metadata !11664, metadata !DIExpression()), !dbg !11702
  call fastcc void @z_dummy_thread_init(%struct.k_thread* noundef nonnull %1) #21, !dbg !11703
  call void @z_device_state_init() #22, !dbg !11704
  call fastcc void @z_sys_init_run_level(i32 noundef 1) #21, !dbg !11705
  call fastcc void @z_sys_init_run_level(i32 noundef 2) #21, !dbg !11706
  %10 = call fastcc i8* @prepare_multithreading() #21, !dbg !11707
  call fastcc void @switch_to_main_thread(i8* noundef %10) #25, !dbg !11708
  unreachable, !dbg !11708
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sys_init_run_level(i32 noundef %0) unnamed_addr #1 !dbg !1980 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !1984, metadata !DIExpression()), !dbg !11709
  %2 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %0, !dbg !11710
  %3 = load %struct.init_entry*, %struct.init_entry** %2, align 4, !dbg !11710
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !1985, metadata !DIExpression()), !dbg !11709
  %4 = add i32 %0, 1
  %5 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %4
  %6 = load %struct.init_entry*, %struct.init_entry** %5, align 4
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !1985, metadata !DIExpression()), !dbg !11709
  %7 = icmp ult %struct.init_entry* %3, %6, !dbg !11711
  br i1 %7, label %8, label %35, !dbg !11712

8:                                                ; preds = %1, %32
  %9 = phi %struct.init_entry* [ %33, %32 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata %struct.init_entry* %9, metadata !1985, metadata !DIExpression()), !dbg !11709
  %10 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 1, !dbg !11713
  %11 = load %struct.device*, %struct.device** %10, align 4, !dbg !11713
  call void @llvm.dbg.value(metadata %struct.device* %11, metadata !1995, metadata !DIExpression()), !dbg !11714
  %12 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 0, !dbg !11715
  %13 = load i32 (%struct.device*)*, i32 (%struct.device*)** %12, align 4, !dbg !11715
  %14 = tail call i32 %13(%struct.device* noundef %11) #22, !dbg !11716
  call void @llvm.dbg.value(metadata i32 %14, metadata !1999, metadata !DIExpression()), !dbg !11714
  %15 = icmp eq %struct.device* %11, null, !dbg !11717
  br i1 %15, label %32, label %16, !dbg !11719

16:                                               ; preds = %8
  %17 = icmp eq i32 %14, 0, !dbg !11720
  br i1 %17, label %26, label %18, !dbg !11723

18:                                               ; preds = %16
  %19 = tail call i32 @llvm.abs.i32(i32 %14, i1 true), !dbg !11724
  call void @llvm.dbg.value(metadata i32 %19, metadata !1999, metadata !DIExpression()), !dbg !11714
  %20 = icmp ult i32 %19, 255, !dbg !11726
  %21 = select i1 %20, i32 %19, i32 255, !dbg !11726
  call void @llvm.dbg.value(metadata i32 %21, metadata !1999, metadata !DIExpression()), !dbg !11714
  %22 = trunc i32 %21 to i8, !dbg !11727
  %23 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !11728
  %24 = load %struct.device_state*, %struct.device_state** %23, align 4, !dbg !11728
  %25 = getelementptr inbounds %struct.device_state, %struct.device_state* %24, i32 0, i32 0, !dbg !11729
  store i8 %22, i8* %25, align 1, !dbg !11730
  br label %26, !dbg !11731

26:                                               ; preds = %18, %16
  %27 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !11732
  %28 = load %struct.device_state*, %struct.device_state** %27, align 4, !dbg !11732
  %29 = getelementptr inbounds %struct.device_state, %struct.device_state* %28, i32 0, i32 1, !dbg !11733
  %30 = load i8, i8* %29, align 1, !dbg !11734
  %31 = or i8 %30, 1, !dbg !11734
  store i8 %31, i8* %29, align 1, !dbg !11734
  br label %32, !dbg !11735

32:                                               ; preds = %26, %8
  %33 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 1, !dbg !11736
  call void @llvm.dbg.value(metadata %struct.init_entry* %33, metadata !1985, metadata !DIExpression()), !dbg !11709
  %34 = icmp ult %struct.init_entry* %33, %6, !dbg !11711
  br i1 %34, label %8, label %35, !dbg !11712, !llvm.loop !11737

35:                                               ; preds = %32, %1
  ret void, !dbg !11739
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.199(i32 noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !11740 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11742, metadata !DIExpression()), !dbg !11744
  call void @llvm.dbg.value(metadata i32 %1, metadata !11743, metadata !DIExpression()), !dbg !11744
  %3 = trunc i32 %1 to i8, !dbg !11745
  %4 = shl i8 %3, 4, !dbg !11745
  %5 = and i32 %0, 15, !dbg !11748
  %6 = add nsw i32 %5, -4, !dbg !11749
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !11750
  store volatile i8 %4, i8* %7, align 1, !dbg !11751
  ret void, !dbg !11752
}

; Function Attrs: optsize
declare !dbg !11753 dso_local void @z_arm_cpu_idle_init() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_dummy_thread_init(%struct.k_thread* noundef %0) unnamed_addr #7 !dbg !11754 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11757, metadata !DIExpression()), !dbg !11758
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !11759
  store i8 1, i8* %2, align 1, !dbg !11760
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !11761
  store i8 1, i8* %3, align 4, !dbg !11762
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !11763
  store %struct.k_heap* null, %struct.k_heap** %4, align 4, !dbg !11764
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11765
  ret void, !dbg !11766
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @prepare_multithreading() unnamed_addr #1 !dbg !11767 {
  tail call void @z_sched_init() #22, !dbg !11772
  store %struct.k_thread* @z_main_thread, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !11773
  %1 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull @z_main_thread, %struct.z_thread_stack_element* noundef getelementptr inbounds ([1024 x %struct.z_thread_stack_element], [1024 x %struct.z_thread_stack_element]* @z_main_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main, i8* noundef null, i8* noundef null, i8* noundef null, i32 noundef 0, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.200, i32 0, i32 0)) #22, !dbg !11774
  call void @llvm.dbg.value(metadata i8* %1, metadata !11771, metadata !DIExpression()), !dbg !11775
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull @z_main_thread) #21, !dbg !11776
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull @z_main_thread) #22, !dbg !11777
  tail call void @z_init_cpu(i32 noundef 0) #21, !dbg !11778
  ret i8* %1, !dbg !11779
}

; Function Attrs: noinline noreturn nounwind optsize
define internal fastcc void @switch_to_main_thread(i8* noundef %0) unnamed_addr #10 !dbg !11780 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11784, metadata !DIExpression()), !dbg !11785
  tail call void @arch_switch_to_main_thread(%struct.k_thread* noundef nonnull @z_main_thread, i8* noundef %0, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main) #22, !dbg !11786
  unreachable, !dbg !11787
}

; Function Attrs: noinline nounwind optsize
define internal void @bg_thread_main(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #1 !dbg !11788 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11790, metadata !DIExpression()), !dbg !11793
  call void @llvm.dbg.value(metadata i8* %1, metadata !11791, metadata !DIExpression()), !dbg !11793
  call void @llvm.dbg.value(metadata i8* %2, metadata !11792, metadata !DIExpression()), !dbg !11793
  store i8 1, i8* @z_sys_post_kernel, align 1, !dbg !11794
  tail call fastcc void @z_sys_init_run_level(i32 noundef 3) #21, !dbg !11795
  tail call void @boot_banner() #22, !dbg !11796
  tail call fastcc void @z_sys_init_run_level(i32 noundef 4) #21, !dbg !11797
  tail call void @z_init_static_threads() #22, !dbg !11798
  tail call void @main() #22, !dbg !11799
  %4 = load i8, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !11800
  %5 = and i8 %4, -2, !dbg !11800
  store i8 %5, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !11800
  ret void, !dbg !11801
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #2 !dbg !11802 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !11812, metadata !DIExpression()), !dbg !11814
  call void @llvm.dbg.value(metadata i8* %1, metadata !11813, metadata !DIExpression()), !dbg !11814
  ret void, !dbg !11815
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach_unlocked(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #2 !dbg !11816 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !11818, metadata !DIExpression()), !dbg !11820
  call void @llvm.dbg.value(metadata i8* %1, metadata !11819, metadata !DIExpression()), !dbg !11820
  ret void, !dbg !11821
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_is_in_isr() local_unnamed_addr #1 !dbg !11822 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #20, !dbg !11823, !srcloc !11830
  call void @llvm.dbg.value(metadata i32 %1, metadata !11826, metadata !DIExpression()) #20, !dbg !11831
  %2 = icmp ne i32 %1, 0, !dbg !11832
  ret i1 %2, !dbg !11833
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_set() local_unnamed_addr #9 !dbg !11834 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11835
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !11836
  %3 = load i8, i8* %2, align 4, !dbg !11837
  %4 = or i8 %3, 1, !dbg !11837
  store i8 %4, i8* %2, align 4, !dbg !11837
  ret void, !dbg !11838
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_clear() local_unnamed_addr #9 !dbg !11839 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11840
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !11841
  %3 = load i8, i8* %2, align 4, !dbg !11842
  %4 = and i8 %3, -2, !dbg !11842
  store i8 %4, i8* %2, align 4, !dbg !11842
  ret void, !dbg !11843
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_is_thread_essential() local_unnamed_addr #8 !dbg !11844 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11845
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !11846
  %3 = load i8, i8* %2, align 4, !dbg !11846
  %4 = and i8 %3, 1, !dbg !11847
  %5 = icmp ne i8 %4, 0, !dbg !11848
  ret i1 %5, !dbg !11849
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_name_set(%struct.k_thread* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !11850 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11854, metadata !DIExpression()), !dbg !11856
  call void @llvm.dbg.value(metadata i8* %1, metadata !11855, metadata !DIExpression()), !dbg !11856
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !11857
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %0, !dbg !11859
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !11854, metadata !DIExpression()), !dbg !11856
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 4, i32 0, !dbg !11860
  %7 = tail call i8* @strncpy(i8* noundef nonnull %6, i8* noundef %1, i32 noundef 31) #22, !dbg !11861
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 4, i32 31, !dbg !11862
  store i8 0, i8* %8, align 1, !dbg !11863
  ret i32 0, !dbg !11864
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local nonnull i8* @k_thread_name_get(%struct.k_thread* noundef readnone %0) local_unnamed_addr #2 !dbg !11865 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11869, metadata !DIExpression()), !dbg !11870
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 0, !dbg !11871
  ret i8* %2, !dbg !11872
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_name_copy(%struct.k_thread* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !11873 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11877, metadata !DIExpression()), !dbg !11880
  call void @llvm.dbg.value(metadata i8* %1, metadata !11878, metadata !DIExpression()), !dbg !11880
  call void @llvm.dbg.value(metadata i32 %2, metadata !11879, metadata !DIExpression()), !dbg !11880
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 0, !dbg !11881
  %5 = tail call i8* @strncpy(i8* noundef %1, i8* noundef nonnull %4, i32 noundef %2) #22, !dbg !11882
  ret i32 0, !dbg !11883
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_thread_state_str(%struct.k_thread* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !2008 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !2120, metadata !DIExpression()), !dbg !11884
  call void @llvm.dbg.value(metadata i8* %1, metadata !2121, metadata !DIExpression()), !dbg !11884
  call void @llvm.dbg.value(metadata i32 %2, metadata !2122, metadata !DIExpression()), !dbg !11884
  call void @llvm.dbg.value(metadata i32 0, metadata !2123, metadata !DIExpression()), !dbg !11884
  call void @llvm.dbg.value(metadata i8 undef, metadata !2125, metadata !DIExpression()), !dbg !11884
  %4 = icmp eq i8* %1, null, !dbg !11885
  %5 = icmp eq i32 %2, 0
  %6 = or i1 %4, %5, !dbg !11887
  br i1 %6, label %46, label %7, !dbg !11887

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !11888
  %9 = load i8, i8* %8, align 1, !dbg !11888
  call void @llvm.dbg.value(metadata i8 %9, metadata !2125, metadata !DIExpression()), !dbg !11884
  %10 = add i32 %2, -1, !dbg !11889
  call void @llvm.dbg.value(metadata i32 %10, metadata !2122, metadata !DIExpression()), !dbg !11884
  call void @llvm.dbg.value(metadata i8 0, metadata !2126, metadata !DIExpression()), !dbg !11890
  call void @llvm.dbg.value(metadata i8 %9, metadata !2125, metadata !DIExpression()), !dbg !11884
  call void @llvm.dbg.value(metadata i32 0, metadata !2123, metadata !DIExpression()), !dbg !11884
  %11 = icmp eq i8 %9, 0, !dbg !11891
  br i1 %11, label %12, label %15, !dbg !11893

12:                                               ; preds = %24, %7
  %13 = phi i32 [ 0, %7 ], [ %32, %24 ], !dbg !11894
  %14 = getelementptr inbounds i8, i8* %1, i32 %13, !dbg !11895
  store i8 0, i8* %14, align 1, !dbg !11896
  br label %46, !dbg !11897

15:                                               ; preds = %7, %42
  %16 = phi i8 [ %45, %42 ], [ 0, %7 ]
  %17 = phi i8 [ %44, %42 ], [ %9, %7 ]
  %18 = phi i32 [ %43, %42 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i8 %16, metadata !2126, metadata !DIExpression()), !dbg !11890
  call void @llvm.dbg.value(metadata i8 %17, metadata !2125, metadata !DIExpression()), !dbg !11884
  call void @llvm.dbg.value(metadata i32 %18, metadata !2123, metadata !DIExpression()), !dbg !11884
  %19 = zext i8 %17 to i32, !dbg !11898
  %20 = zext i8 %16 to i32, !dbg !11899
  %21 = shl nuw i32 1, %20, !dbg !11899
  call void @llvm.dbg.value(metadata i32 %21, metadata !2124, metadata !DIExpression()), !dbg !11884
  %22 = and i32 %21, %19, !dbg !11901
  %23 = icmp eq i32 %22, 0, !dbg !11903
  br i1 %23, label %42, label %24, !dbg !11904

24:                                               ; preds = %15
  %25 = getelementptr inbounds i8, i8* %1, i32 %18, !dbg !11905
  %26 = sub i32 %10, %18, !dbg !11906
  %27 = getelementptr inbounds [8 x i8*], [8 x i8*]* @k_thread_state_str.states_str, i32 0, i32 %20, !dbg !11907
  %28 = load i8*, i8** %27, align 4, !dbg !11907
  %29 = getelementptr inbounds [8 x i32], [8 x i32]* @k_thread_state_str.states_sz, i32 0, i32 %20, !dbg !11908
  %30 = load i32, i32* %29, align 4, !dbg !11908
  %31 = tail call fastcc i32 @copy_bytes(i8* noundef %25, i32 noundef %26, i8* noundef %28, i32 noundef %30) #21, !dbg !11909
  %32 = add i32 %31, %18, !dbg !11910
  call void @llvm.dbg.value(metadata i32 %32, metadata !2123, metadata !DIExpression()), !dbg !11884
  %33 = trunc i32 %21 to i8, !dbg !11911
  %34 = xor i8 %33, -1, !dbg !11911
  %35 = and i8 %17, %34, !dbg !11911
  call void @llvm.dbg.value(metadata i8 %35, metadata !2125, metadata !DIExpression()), !dbg !11884
  %36 = icmp eq i8 %35, 0, !dbg !11912
  br i1 %36, label %12, label %37, !dbg !11914

37:                                               ; preds = %24
  %38 = getelementptr inbounds i8, i8* %1, i32 %32, !dbg !11915
  %39 = sub i32 %10, %32, !dbg !11917
  %40 = tail call fastcc i32 @copy_bytes(i8* noundef %38, i32 noundef %39, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8.205, i32 0, i32 0), i32 noundef 1) #21, !dbg !11918
  %41 = add i32 %40, %32, !dbg !11919
  call void @llvm.dbg.value(metadata i32 %41, metadata !2123, metadata !DIExpression()), !dbg !11884
  br label %42, !dbg !11920

42:                                               ; preds = %37, %15
  %43 = phi i32 [ %18, %15 ], [ %41, %37 ], !dbg !11884
  %44 = phi i8 [ %17, %15 ], [ %35, %37 ], !dbg !11884
  call void @llvm.dbg.value(metadata i8 %44, metadata !2125, metadata !DIExpression()), !dbg !11884
  call void @llvm.dbg.value(metadata i32 %43, metadata !2123, metadata !DIExpression()), !dbg !11884
  %45 = add i8 %16, 1, !dbg !11921
  call void @llvm.dbg.value(metadata i8 %45, metadata !2126, metadata !DIExpression()), !dbg !11890
  br label %15, !dbg !11893

46:                                               ; preds = %3, %12
  %47 = phi i8* [ %1, %12 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.206, i32 0, i32 0), %3 ], !dbg !11884
  ret i8* %47, !dbg !11922
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @copy_bytes(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !11923 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11927, metadata !DIExpression()), !dbg !11932
  call void @llvm.dbg.value(metadata i32 %1, metadata !11928, metadata !DIExpression()), !dbg !11932
  call void @llvm.dbg.value(metadata i8* %2, metadata !11929, metadata !DIExpression()), !dbg !11932
  call void @llvm.dbg.value(metadata i32 %3, metadata !11930, metadata !DIExpression()), !dbg !11932
  %5 = icmp ult i32 %1, %3, !dbg !11933
  %6 = select i1 %5, i32 %1, i32 %3, !dbg !11933
  call void @llvm.dbg.value(metadata i32 %6, metadata !11931, metadata !DIExpression()), !dbg !11932
  %7 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %2, i32 noundef %6) #22, !dbg !11934
  ret i32 %6, !dbg !11935
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !11936 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11940, metadata !DIExpression()), !dbg !11941
  tail call void @z_sched_start(%struct.k_thread* noundef %0) #22, !dbg !11942
  ret void, !dbg !11943
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* noundef %9) local_unnamed_addr #1 !dbg !11944 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11953, metadata !DIExpression()), !dbg !11964
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !11954, metadata !DIExpression()), !dbg !11964
  call void @llvm.dbg.value(metadata i32 %2, metadata !11955, metadata !DIExpression()), !dbg !11964
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !11956, metadata !DIExpression()), !dbg !11964
  call void @llvm.dbg.value(metadata i8* %4, metadata !11957, metadata !DIExpression()), !dbg !11964
  call void @llvm.dbg.value(metadata i8* %5, metadata !11958, metadata !DIExpression()), !dbg !11964
  call void @llvm.dbg.value(metadata i8* %6, metadata !11959, metadata !DIExpression()), !dbg !11964
  call void @llvm.dbg.value(metadata i32 %7, metadata !11960, metadata !DIExpression()), !dbg !11964
  call void @llvm.dbg.value(metadata i32 %8, metadata !11961, metadata !DIExpression()), !dbg !11964
  call void @llvm.dbg.value(metadata i8* %9, metadata !11962, metadata !DIExpression()), !dbg !11964
  %11 = icmp eq i32 %7, 15, !dbg !11965
  br i1 %11, label %12, label %15, !dbg !11965

12:                                               ; preds = %10
  %13 = bitcast void (i8*, i8*, i8*)* %3 to i8*, !dbg !11965
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_entry(i8* noundef %13) #21, !dbg !11965
  br i1 %14, label %19, label %18, !dbg !11965

15:                                               ; preds = %10
  %16 = add i32 %7, 16, !dbg !11965
  %17 = icmp ult i32 %16, 31, !dbg !11965
  br i1 %17, label %19, label %18, !dbg !11965

18:                                               ; preds = %12, %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.218, i32 0, i32 0), i8* noundef getelementptr inbounds ([128 x i8], [128 x i8]* @.str.10.219, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.220, i32 0, i32 0), i32 noundef 536) #22, !dbg !11969
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.12.221, i32 0, i32 0), i32 noundef %7, i32 noundef 14, i32 noundef -16) #22, !dbg !11969
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.220, i32 0, i32 0), i32 noundef 536) #22, !dbg !11969
  unreachable, !dbg !11969

19:                                               ; preds = %15, %12
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !11971
  tail call fastcc void @z_waitq_init(%union.anon* noundef nonnull %20) #21, !dbg !11972
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, !dbg !11973
  tail call void @z_init_thread_base(%struct._thread_base* noundef %21, i32 noundef %7, i32 noundef 4, i32 noundef %8) #21, !dbg !11974
  %22 = tail call fastcc i8* @setup_thread_stack(%struct.z_thread_stack_element* noundef %1, i32 noundef %2) #21, !dbg !11975
  call void @llvm.dbg.value(metadata i8* %22, metadata !11963, metadata !DIExpression()), !dbg !11964
  tail call void @arch_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %22, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) #22, !dbg !11976
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 2, !dbg !11977
  store i8* null, i8** %23, align 4, !dbg !11978
  %24 = icmp eq i8* %9, null, !dbg !11979
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 0, !dbg !11981
  br i1 %24, label %29, label %26, !dbg !11982

26:                                               ; preds = %19
  %27 = tail call i8* @strncpy(i8* noundef nonnull %25, i8* noundef nonnull %9, i32 noundef 31) #22, !dbg !11983
  %28 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 31, !dbg !11985
  store i8 0, i8* %28, align 1, !dbg !11986
  br label %30, !dbg !11987

29:                                               ; preds = %19
  store i8 0, i8* %25, align 8, !dbg !11988
  br label %30

30:                                               ; preds = %29, %26
  %31 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11990
  %32 = icmp eq %struct.k_thread* %31, null, !dbg !11990
  br i1 %32, label %36, label %33, !dbg !11992

33:                                               ; preds = %30
  %34 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %31, i32 0, i32 6, !dbg !11993
  %35 = load %struct.k_heap*, %struct.k_heap** %34, align 4, !dbg !11993
  br label %36, !dbg !11994

36:                                               ; preds = %30, %33
  %37 = phi %struct.k_heap* [ %35, %33 ], [ null, %30 ], !dbg !11964
  %38 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !11995
  store %struct.k_heap* %37, %struct.k_heap** %38, align 4, !dbg !11997
  ret i8* %22, !dbg !11998
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_entry(i8* noundef readnone %0) unnamed_addr #2 !dbg !11999 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12003, metadata !DIExpression()), !dbg !12004
  %2 = icmp eq i8* %0, bitcast (void (i8*, i8*, i8*)* @idle to i8*), !dbg !12005
  ret i1 %2, !dbg !12006
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init(%union.anon* noundef %0) unnamed_addr #7 !dbg !12007 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !12012, metadata !DIExpression()), !dbg !12013
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !12014
  tail call fastcc void @sys_dlist_init(%struct._dnode* noundef %2) #21, !dbg !12015
  ret void, !dbg !12016
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @z_init_thread_base(%struct._thread_base* nocapture noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #7 !dbg !12017 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !12022, metadata !DIExpression()), !dbg !12026
  call void @llvm.dbg.value(metadata i32 %1, metadata !12023, metadata !DIExpression()), !dbg !12026
  call void @llvm.dbg.value(metadata i32 %2, metadata !12024, metadata !DIExpression()), !dbg !12026
  call void @llvm.dbg.value(metadata i32 %3, metadata !12025, metadata !DIExpression()), !dbg !12026
  %5 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 1, !dbg !12027
  store %union.anon* null, %union.anon** %5, align 8, !dbg !12028
  %6 = trunc i32 %3 to i8, !dbg !12029
  %7 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 2, !dbg !12030
  store i8 %6, i8* %7, align 4, !dbg !12031
  %8 = trunc i32 %2 to i8, !dbg !12032
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 3, !dbg !12033
  store i8 %8, i8* %9, align 1, !dbg !12034
  %10 = trunc i32 %1 to i8, !dbg !12035
  %11 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 4, !dbg !12036
  %12 = bitcast %union.anon.2* %11 to %struct.device_state*, !dbg !12036
  %13 = bitcast %union.anon.2* %11 to i8*, !dbg !12036
  store i8 %10, i8* %13, align 2, !dbg !12037
  %14 = getelementptr inbounds %struct.device_state, %struct.device_state* %12, i32 0, i32 1, !dbg !12038
  store i8 0, i8* %14, align 1, !dbg !12039
  tail call fastcc void @z_init_thread_timeout(%struct._thread_base* noundef %0) #21, !dbg !12040
  ret void, !dbg !12041
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i8* @setup_thread_stack(%struct.z_thread_stack_element* noundef readnone %0, i32 noundef %1) unnamed_addr #2 !dbg !12042 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !12046, metadata !DIExpression()), !dbg !12054
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !12047, metadata !DIExpression()), !dbg !12054
  call void @llvm.dbg.value(metadata i32 %1, metadata !12048, metadata !DIExpression()), !dbg !12054
  call void @llvm.dbg.value(metadata i32 0, metadata !12053, metadata !DIExpression()), !dbg !12054
  %3 = add i32 %1, 7, !dbg !12055
  %4 = and i32 %3, -8, !dbg !12055
  call void @llvm.dbg.value(metadata i32 %4, metadata !12049, metadata !DIExpression()), !dbg !12054
  call void @llvm.dbg.value(metadata i8* undef, metadata !12052, metadata !DIExpression()), !dbg !12054
  call void @llvm.dbg.value(metadata i32 %4, metadata !12050, metadata !DIExpression()), !dbg !12054
  %5 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 %4, i32 0, !dbg !12057
  call void @llvm.dbg.value(metadata i8* %5, metadata !12051, metadata !DIExpression()), !dbg !12054
  call void @llvm.dbg.value(metadata i32 0, metadata !12053, metadata !DIExpression()), !dbg !12054
  call void @llvm.dbg.value(metadata i8* %5, metadata !12051, metadata !DIExpression()), !dbg !12054
  ret i8* %5, !dbg !12058
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_thread_timeout(%struct._thread_base* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !12059 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !12064, metadata !DIExpression()), !dbg !12065
  %2 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 7, !dbg !12066
  tail call fastcc void @z_init_timeout(%struct._timeout* noundef nonnull %2) #21, !dbg !12067
  ret void, !dbg !12068
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_timeout(%struct._timeout* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !12069 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !12071, metadata !DIExpression()), !dbg !12072
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !12073
  tail call fastcc void @sys_dnode_init(%struct._dnode* noundef %2) #21, !dbg !12074
  ret void, !dbg !12075
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !12076 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12080, metadata !DIExpression()), !dbg !12081
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !12082
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !12083
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !12084
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !12085
  ret void, !dbg !12086
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init(%struct._dnode* noundef %0) unnamed_addr #7 !dbg !12087 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12092, metadata !DIExpression()), !dbg !12093
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !12094
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !12095
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !12096
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !12097
  ret void, !dbg !12098
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef returned %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, [1 x i64] %9) local_unnamed_addr #1 !dbg !12099 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !12116, metadata !DIExpression()), !dbg !12117
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12107, metadata !DIExpression()), !dbg !12117
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !12108, metadata !DIExpression()), !dbg !12117
  call void @llvm.dbg.value(metadata i32 %2, metadata !12109, metadata !DIExpression()), !dbg !12117
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !12110, metadata !DIExpression()), !dbg !12117
  call void @llvm.dbg.value(metadata i8* %4, metadata !12111, metadata !DIExpression()), !dbg !12117
  call void @llvm.dbg.value(metadata i8* %5, metadata !12112, metadata !DIExpression()), !dbg !12117
  call void @llvm.dbg.value(metadata i8* %6, metadata !12113, metadata !DIExpression()), !dbg !12117
  call void @llvm.dbg.value(metadata i32 %7, metadata !12114, metadata !DIExpression()), !dbg !12117
  call void @llvm.dbg.value(metadata i32 %8, metadata !12115, metadata !DIExpression()), !dbg !12117
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #20, !dbg !12118, !srcloc !11830
  call void @llvm.dbg.value(metadata i32 %11, metadata !11826, metadata !DIExpression()) #20, !dbg !12123
  %12 = icmp eq i32 %11, 0, !dbg !12124
  br i1 %12, label %14, label %13, !dbg !12125

13:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.218, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.13.224, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.220, i32 0, i32 0), i32 noundef 647) #22, !dbg !12126
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.14.225, i32 0, i32 0)) #22, !dbg !12126
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.220, i32 0, i32 0), i32 noundef 647) #22, !dbg !12126
  unreachable, !dbg !12126

14:                                               ; preds = %10
  %15 = extractvalue [1 x i64] %9, 0
  call void @llvm.dbg.value(metadata i64 %15, metadata !12116, metadata !DIExpression()), !dbg !12117
  %16 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* noundef null) #21, !dbg !12128
  %17 = icmp eq i64 %15, -1, !dbg !12129
  br i1 %17, label %19, label %18, !dbg !12131

18:                                               ; preds = %14
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %9) #21, !dbg !12132
  br label %19, !dbg !12134

19:                                               ; preds = %18, %14
  ret %struct.k_thread* %0, !dbg !12135
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !12136 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !12141, metadata !DIExpression()), !dbg !12142
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12140, metadata !DIExpression()), !dbg !12142
  %4 = icmp eq i64 %3, 0, !dbg !12143
  br i1 %4, label %5, label %6, !dbg !12145

5:                                                ; preds = %2
  tail call fastcc void @k_thread_start.226(%struct.k_thread* noundef %0) #21, !dbg !12146
  br label %7, !dbg !12148

6:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) #21, !dbg !12149
  br label %7

7:                                                ; preds = %6, %5
  ret void, !dbg !12151
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start.226(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12152 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12156, metadata !DIExpression()), !dbg !12157
  tail call void asm sideeffect "", "~{memory}"() #20, !dbg !12158, !srcloc !12160
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef %0) #21, !dbg !12161
  ret void, !dbg !12162
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !12163 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !12166, metadata !DIExpression()), !dbg !12167
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12165, metadata !DIExpression()), !dbg !12167
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !12168
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #22, !dbg !12169
  ret void, !dbg !12170
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_static_threads() local_unnamed_addr #1 !dbg !12171 {
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !12173, metadata !DIExpression()), !dbg !12193
  br i1 icmp ugt (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %1, label %2, !dbg !12194

1:                                                ; preds = %6, %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.218, i32 0, i32 0), i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.15.229, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.220, i32 0, i32 0), i32 noundef 750) #22, !dbg !12198
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.16.230, i32 0, i32 0)) #22, !dbg !12198
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.220, i32 0, i32 0), i32 noundef 750) #22, !dbg !12198
  unreachable, !dbg !12198

2:                                                ; preds = %0, %6
  %3 = phi %struct._static_thread_data* [ %31, %6 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %0 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %3, metadata !12173, metadata !DIExpression()), !dbg !12193
  %4 = icmp ult %struct._static_thread_data* %3, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !12201
  br i1 %4, label %6, label %5, !dbg !12202

5:                                                ; preds = %2
  tail call void @k_sched_lock() #22, !dbg !12203
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !12191, metadata !DIExpression()), !dbg !12204
  br i1 icmp ugt (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %33, label %34, !dbg !12205

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 0, !dbg !12209
  %8 = load %struct.k_thread*, %struct.k_thread** %7, align 4, !dbg !12209
  %9 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 1, !dbg !12211
  %10 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %9, align 4, !dbg !12211
  %11 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 2, !dbg !12212
  %12 = load i32, i32* %11, align 4, !dbg !12212
  %13 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 3, !dbg !12213
  %14 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %13, align 4, !dbg !12213
  %15 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 4, !dbg !12214
  %16 = load i8*, i8** %15, align 4, !dbg !12214
  %17 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 5, !dbg !12215
  %18 = load i8*, i8** %17, align 4, !dbg !12215
  %19 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 6, !dbg !12216
  %20 = load i8*, i8** %19, align 4, !dbg !12216
  %21 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 7, !dbg !12217
  %22 = load i32, i32* %21, align 4, !dbg !12217
  %23 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 8, !dbg !12218
  %24 = load i32, i32* %23, align 4, !dbg !12218
  %25 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 11, !dbg !12219
  %26 = load i8*, i8** %25, align 4, !dbg !12219
  %27 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %8, %struct.z_thread_stack_element* noundef %10, i32 noundef %12, void (i8*, i8*, i8*)* noundef %14, i8* noundef %16, i8* noundef %18, i8* noundef %20, i32 noundef %22, i32 noundef %24, i8* noundef %26) #21, !dbg !12220
  %28 = load %struct.k_thread*, %struct.k_thread** %7, align 4, !dbg !12221
  %29 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %28, i32 0, i32 2, !dbg !12222
  %30 = bitcast i8** %29 to %struct._static_thread_data**, !dbg !12223
  store %struct._static_thread_data* %3, %struct._static_thread_data** %30, align 4, !dbg !12223
  %31 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 1, !dbg !12224
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %31, metadata !12173, metadata !DIExpression()), !dbg !12193
  %32 = icmp ugt %struct._static_thread_data* %31, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !12225
  br i1 %32, label %1, label %2, !dbg !12194, !llvm.loop !12226

33:                                               ; preds = %50, %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.218, i32 0, i32 0), i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.15.229, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.220, i32 0, i32 0), i32 noundef 781) #22, !dbg !12228
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.16.230, i32 0, i32 0)) #22, !dbg !12228
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.220, i32 0, i32 0), i32 noundef 781) #22, !dbg !12228
  unreachable, !dbg !12228

34:                                               ; preds = %5, %50
  %35 = phi %struct._static_thread_data* [ %51, %50 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %5 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %35, metadata !12191, metadata !DIExpression()), !dbg !12204
  %36 = icmp ult %struct._static_thread_data* %35, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !12231
  br i1 %36, label %38, label %37, !dbg !12232

37:                                               ; preds = %34
  tail call void @k_sched_unlock() #22, !dbg !12233
  ret void, !dbg !12234

38:                                               ; preds = %34
  %39 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %35, i32 0, i32 9, !dbg !12235
  %40 = load i32, i32* %39, align 4, !dbg !12235
  %41 = icmp eq i32 %40, -1, !dbg !12238
  br i1 %41, label %50, label %42, !dbg !12239

42:                                               ; preds = %38
  %43 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %35, i32 0, i32 0, !dbg !12240
  %44 = load %struct.k_thread*, %struct.k_thread** %43, align 4, !dbg !12240
  %45 = icmp sgt i32 %40, 0, !dbg !12242
  %46 = select i1 %45, i32 %40, i32 0, !dbg !12242
  %47 = zext i32 %46 to i64, !dbg !12242
  %48 = tail call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %47) #21, !dbg !12242
  %49 = insertvalue [1 x i64] poison, i64 %48, 0, !dbg !12243
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %44, [1 x i64] %49) #21, !dbg !12243
  br label %50, !dbg !12244

50:                                               ; preds = %38, %42
  %51 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %35, i32 1, !dbg !12245
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %51, metadata !12191, metadata !DIExpression()), !dbg !12204
  %52 = icmp ugt %struct._static_thread_data* %51, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !12246
  br i1 %52, label %33, label %34, !dbg !12205, !llvm.loop !12247
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %0) unnamed_addr #2 !dbg !12249 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !12253, metadata !DIExpression()), !dbg !12254
  call void @llvm.dbg.value(metadata i64 %0, metadata !12255, metadata !DIExpression()), !dbg !12270
  call void @llvm.dbg.value(metadata i32 1000, metadata !12258, metadata !DIExpression()), !dbg !12270
  call void @llvm.dbg.value(metadata i32 10000, metadata !12259, metadata !DIExpression()), !dbg !12270
  call void @llvm.dbg.value(metadata i8 1, metadata !12260, metadata !DIExpression()), !dbg !12270
  call void @llvm.dbg.value(metadata i8 0, metadata !12261, metadata !DIExpression()), !dbg !12270
  call void @llvm.dbg.value(metadata i8 1, metadata !12262, metadata !DIExpression()), !dbg !12270
  call void @llvm.dbg.value(metadata i8 0, metadata !12263, metadata !DIExpression()), !dbg !12270
  call void @llvm.dbg.value(metadata i8 1, metadata !12264, metadata !DIExpression()), !dbg !12270
  call void @llvm.dbg.value(metadata i8 0, metadata !12265, metadata !DIExpression()), !dbg !12270
  call void @llvm.dbg.value(metadata i64 0, metadata !12266, metadata !DIExpression()), !dbg !12270
  call void @llvm.dbg.value(metadata i64 0, metadata !12266, metadata !DIExpression()), !dbg !12270
  %2 = mul i64 %0, 10, !dbg !12272
  ret i64 %2, !dbg !12278
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_thread_user_mode_enter(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #10 !dbg !12279 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !12281, metadata !DIExpression()), !dbg !12285
  call void @llvm.dbg.value(metadata i8* %1, metadata !12282, metadata !DIExpression()), !dbg !12285
  call void @llvm.dbg.value(metadata i8* %2, metadata !12283, metadata !DIExpression()), !dbg !12285
  call void @llvm.dbg.value(metadata i8* %3, metadata !12284, metadata !DIExpression()), !dbg !12285
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12286
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 2, !dbg !12287
  %7 = load i8, i8* %6, align 4, !dbg !12288
  %8 = or i8 %7, 4, !dbg !12288
  store i8 %8, i8* %6, align 4, !dbg !12288
  tail call void @z_thread_essential_clear() #21, !dbg !12289
  tail call void @z_thread_entry(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #24, !dbg !12290
  unreachable, !dbg !12290
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* nocapture noundef readonly %0) local_unnamed_addr #8 !dbg !12291 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !12296, metadata !DIExpression()), !dbg !12298
  %2 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !12299
  %3 = load i32, i32* %2, align 4, !dbg !12299
  call void @llvm.dbg.value(metadata i32 %3, metadata !12297, metadata !DIExpression()), !dbg !12298
  %4 = icmp eq i32 %3, 0, !dbg !12300
  br i1 %4, label %10, label %5, !dbg !12302

5:                                                ; preds = %1
  %6 = and i32 %3, 3, !dbg !12303
  %7 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !12306
  %8 = zext i8 %7 to i32, !dbg !12307
  %9 = icmp eq i32 %6, %8, !dbg !12308
  br i1 %9, label %11, label %10, !dbg !12309

10:                                               ; preds = %5, %1
  br label %11, !dbg !12310

11:                                               ; preds = %5, %10
  %12 = phi i1 [ true, %10 ], [ false, %5 ], !dbg !12298
  ret i1 %12, !dbg !12311
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* nocapture noundef %0) local_unnamed_addr #9 !dbg !12312 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !12314, metadata !DIExpression()), !dbg !12315
  %2 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !12316
  %3 = load i32, i32* %2, align 4, !dbg !12316
  %4 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !12318
  %5 = zext i8 %4 to i32, !dbg !12319
  %6 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12320
  %7 = ptrtoint %struct.k_thread* %6 to i32, !dbg !12321
  %8 = or i32 %7, %5, !dbg !12322
  %9 = icmp eq i32 %3, %8, !dbg !12323
  br i1 %9, label %10, label %11, !dbg !12324

10:                                               ; preds = %1
  store i32 0, i32* %2, align 4, !dbg !12325
  br label %11, !dbg !12326

11:                                               ; preds = %1, %10
  ret i1 %9, !dbg !12327
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_spin_lock_set_owner(%struct.k_spinlock* nocapture noundef writeonly %0) local_unnamed_addr #9 !dbg !12328 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !12332, metadata !DIExpression()), !dbg !12333
  %2 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !12334
  %3 = zext i8 %2 to i32, !dbg !12335
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12336
  %5 = ptrtoint %struct.k_thread* %4 to i32, !dbg !12337
  %6 = or i32 %5, %3, !dbg !12338
  %7 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !12339
  store i32 %6, i32* %7, align 4, !dbg !12340
  ret void, !dbg !12341
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_disable(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #2 !dbg !12342 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12346, metadata !DIExpression()), !dbg !12347
  ret i32 -134, !dbg !12348
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_enable(%struct.k_thread* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #2 !dbg !12349 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12353, metadata !DIExpression()), !dbg !12355
  call void @llvm.dbg.value(metadata i32 %1, metadata !12354, metadata !DIExpression()), !dbg !12355
  ret i32 -134, !dbg !12356
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_get(%struct.k_thread* noundef readnone %0, %struct._cpu_arch* noundef readnone %1) local_unnamed_addr #2 !dbg !12357 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12364, metadata !DIExpression()), !dbg !12366
  call void @llvm.dbg.value(metadata %struct._cpu_arch* %1, metadata !12365, metadata !DIExpression()), !dbg !12366
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !12367
  %4 = icmp eq %struct._cpu_arch* %1, null
  %5 = or i1 %3, %4, !dbg !12369
  %6 = select i1 %5, i32 -22, i32 0, !dbg !12366
  ret i32 %6, !dbg !12370
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_all_get(%struct._cpu_arch* noundef readnone %0) local_unnamed_addr #2 !dbg !12371 {
  call void @llvm.dbg.value(metadata %struct._cpu_arch* %0, metadata !12375, metadata !DIExpression()), !dbg !12376
  %2 = icmp eq %struct._cpu_arch* %0, null, !dbg !12377
  %3 = select i1 %2, i32 -22, i32 0, !dbg !12376
  ret i32 %3, !dbg !12379
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pm_save_idle_exit() local_unnamed_addr #1 !dbg !12380 {
  tail call void @sys_clock_idle_exit() #22, !dbg !12382
  ret void, !dbg !12383
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @idle(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #10 !dbg !12384 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12386, metadata !DIExpression()), !dbg !12389
  call void @llvm.dbg.value(metadata i8* %1, metadata !12387, metadata !DIExpression()), !dbg !12389
  call void @llvm.dbg.value(metadata i8* %2, metadata !12388, metadata !DIExpression()), !dbg !12389
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12390
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %4, i32 0, i32 0, i32 4, !dbg !12390
  %6 = bitcast %union.anon.2* %5 to i8*, !dbg !12390
  %7 = load i8, i8* %6, align 2, !dbg !12390
  %8 = icmp sgt i8 %7, -1, !dbg !12390
  br i1 %8, label %10, label %9, !dbg !12393

9:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.239, i32 0, i32 0), i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.1.240, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.241, i32 0, i32 0), i32 noundef 39) #22, !dbg !12394
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.241, i32 0, i32 0), i32 noundef 39) #22, !dbg !12394
  unreachable, !dbg !12394

10:                                               ; preds = %3, %10
  %11 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #20, !dbg !12396, !srcloc !12403
  call void @llvm.dbg.value(metadata i32 undef, metadata !12399, metadata !DIExpression()) #20, !dbg !12404
  call void @llvm.dbg.value(metadata i32 undef, metadata !12400, metadata !DIExpression()) #20, !dbg !12404
  tail call fastcc void @k_cpu_idle() #21, !dbg !12405
  br label %10, !dbg !12406, !llvm.loop !12407
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_cpu_idle() unnamed_addr #1 !dbg !12409 {
  tail call void @arch_cpu_idle() #22, !dbg !12410
  ret void, !dbg !12411
}

; Function Attrs: optsize
declare !dbg !12412 dso_local void @arch_cpu_idle() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_sched_prio_cmp(%struct.k_thread* nocapture noundef readonly %0, %struct.k_thread* nocapture noundef readonly %1) local_unnamed_addr #8 !dbg !12413 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12417, metadata !DIExpression()), !dbg !12421
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !12418, metadata !DIExpression()), !dbg !12421
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !12422
  %4 = bitcast %union.anon.2* %3 to i8*, !dbg !12422
  %5 = load i8, i8* %4, align 2, !dbg !12422
  call void @llvm.dbg.value(metadata i8 %5, metadata !12419, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !12421
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !12423
  %7 = bitcast %union.anon.2* %6 to i8*, !dbg !12423
  %8 = load i8, i8* %7, align 2, !dbg !12423
  call void @llvm.dbg.value(metadata i8 %8, metadata !12420, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !12421
  %9 = icmp eq i8 %8, %5, !dbg !12424
  %10 = sext i8 %5 to i32, !dbg !12426
  %11 = sext i8 %8 to i32, !dbg !12426
  %12 = sub nsw i32 %11, %10, !dbg !12426
  %13 = select i1 %9, i32 0, i32 %12, !dbg !12426
  ret i32 %13, !dbg !12427
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reset_time_slice(%struct.k_thread* nocapture readnone %0) local_unnamed_addr #1 !dbg !12428 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !12432, metadata !DIExpression()), !dbg !12433
  %2 = tail call fastcc i32 @slice_time() #21, !dbg !12434
  %3 = icmp eq i32 %2, 0, !dbg !12436
  br i1 %3, label %8, label %4, !dbg !12437

4:                                                ; preds = %1
  %5 = tail call i32 @sys_clock_elapsed() #22, !dbg !12438
  %6 = add i32 %5, %2, !dbg !12440
  store i32 %6, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !12441
  %7 = tail call fastcc i32 @slice_time() #21, !dbg !12442
  tail call void @z_set_timeout_expiry(i32 noundef %7, i1 noundef zeroext false) #22, !dbg !12443
  br label %8, !dbg !12444

8:                                                ; preds = %4, %1
  ret void, !dbg !12445
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @slice_time() unnamed_addr #8 !dbg !12446 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !12450, metadata !DIExpression()), !dbg !12452
  %1 = load i32, i32* @slice_ticks, align 4, !dbg !12453
  call void @llvm.dbg.value(metadata i32 %1, metadata !12451, metadata !DIExpression()), !dbg !12452
  ret i32 %1, !dbg !12454
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_time_slice_set(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !12455 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12459, metadata !DIExpression()), !dbg !12468
  call void @llvm.dbg.value(metadata i32 %1, metadata !12460, metadata !DIExpression()), !dbg !12468
  call void @llvm.dbg.value(metadata i32 0, metadata !12461, metadata !DIExpression()), !dbg !12469
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !12470, metadata !DIExpression()) #20, !dbg !12477
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #20, !dbg !12479, !srcloc !12485
  call void @llvm.dbg.value(metadata i32 undef, metadata !12482, metadata !DIExpression()) #20, !dbg !12486
  call void @llvm.dbg.value(metadata i32 undef, metadata !12483, metadata !DIExpression()) #20, !dbg !12486
  call void @llvm.dbg.value(metadata i32 undef, metadata !12476, metadata !DIExpression()) #20, !dbg !12477
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !12487
  br i1 %4, label %6, label %5, !dbg !12490

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.243, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 148) #22, !dbg !12491
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.245, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !12491
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 148) #22, !dbg !12491
  unreachable, !dbg !12491

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !12482, metadata !DIExpression()) #20, !dbg !12486
  call void @llvm.dbg.value(metadata i32 undef, metadata !12476, metadata !DIExpression()) #20, !dbg !12477
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !12493
  call void @llvm.dbg.value(metadata i32 undef, metadata !12467, metadata !DIExpression()), !dbg !12469
  call void @llvm.dbg.value(metadata i32 undef, metadata !12461, metadata !DIExpression()), !dbg !12469
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !12494
  %7 = tail call fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) #21, !dbg !12497
  %8 = icmp sgt i32 %0, 0, !dbg !12498
  %9 = icmp sgt i32 %7, 2, !dbg !12500
  %10 = select i1 %9, i32 %7, i32 2, !dbg !12500
  %11 = select i1 %8, i32 %10, i32 %7, !dbg !12500
  store i32 %11, i32* @slice_ticks, align 4, !dbg !12501
  store i32 %1, i32* @slice_max_prio, align 4, !dbg !12502
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #21, !dbg !12503
  call void @llvm.dbg.value(metadata i32 undef, metadata !12504, metadata !DIExpression()) #20, !dbg !12510
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !12509, metadata !DIExpression()) #20, !dbg !12510
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !12512
  br i1 %12, label %14, label %13, !dbg !12515

13:                                               ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.246, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 194) #22, !dbg !12516
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.247, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !12516
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 194) #22, !dbg !12516
  unreachable, !dbg !12516

14:                                               ; preds = %6
  %15 = extractvalue { i32, i32 } %3, 0, !dbg !12479
  call void @llvm.dbg.value(metadata i32 %15, metadata !12482, metadata !DIExpression()) #20, !dbg !12486
  call void @llvm.dbg.value(metadata i32 %15, metadata !12476, metadata !DIExpression()) #20, !dbg !12477
  call void @llvm.dbg.value(metadata i32 %15, metadata !12467, metadata !DIExpression()), !dbg !12469
  call void @llvm.dbg.value(metadata i32 undef, metadata !12504, metadata !DIExpression()) #20, !dbg !12510
  call void @llvm.dbg.value(metadata i32 undef, metadata !12518, metadata !DIExpression()) #20, !dbg !12521
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %15) #20, !dbg !12523, !srcloc !12524
  call void @llvm.dbg.value(metadata i32 1, metadata !12461, metadata !DIExpression()), !dbg !12469
  call void @llvm.dbg.value(metadata i32 undef, metadata !12461, metadata !DIExpression()), !dbg !12469
  ret void, !dbg !12525
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) unnamed_addr #2 !dbg !12526 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12528, metadata !DIExpression()), !dbg !12529
  call void @llvm.dbg.value(metadata i32 %0, metadata !12530, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12545
  call void @llvm.dbg.value(metadata i32 1000, metadata !12533, metadata !DIExpression()), !dbg !12545
  call void @llvm.dbg.value(metadata i32 10000, metadata !12534, metadata !DIExpression()), !dbg !12545
  call void @llvm.dbg.value(metadata i8 1, metadata !12535, metadata !DIExpression()), !dbg !12545
  call void @llvm.dbg.value(metadata i1 true, metadata !12536, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12545
  call void @llvm.dbg.value(metadata i1 true, metadata !12537, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12545
  call void @llvm.dbg.value(metadata i8 0, metadata !12538, metadata !DIExpression()), !dbg !12545
  call void @llvm.dbg.value(metadata i1 true, metadata !12539, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12545
  call void @llvm.dbg.value(metadata i1 false, metadata !12540, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12545
  call void @llvm.dbg.value(metadata i64 0, metadata !12541, metadata !DIExpression()), !dbg !12545
  call void @llvm.dbg.value(metadata i64 0, metadata !12541, metadata !DIExpression()), !dbg !12545
  %2 = mul i32 %0, 10, !dbg !12547
  ret i32 %2, !dbg !12553
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_time_slice(i32 noundef %0) local_unnamed_addr #1 !dbg !12554 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12556, metadata !DIExpression()), !dbg !12558
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !12470, metadata !DIExpression()) #20, !dbg !12559
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #20, !dbg !12561, !srcloc !12485
  call void @llvm.dbg.value(metadata i32 undef, metadata !12482, metadata !DIExpression()) #20, !dbg !12563
  call void @llvm.dbg.value(metadata i32 undef, metadata !12483, metadata !DIExpression()) #20, !dbg !12563
  call void @llvm.dbg.value(metadata i32 undef, metadata !12476, metadata !DIExpression()) #20, !dbg !12559
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !12564
  br i1 %3, label %5, label %4, !dbg !12565

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.243, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 148) #22, !dbg !12566
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.245, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !12566
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 148) #22, !dbg !12566
  unreachable, !dbg !12566

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !12561
  call void @llvm.dbg.value(metadata i32 %6, metadata !12482, metadata !DIExpression()) #20, !dbg !12563
  call void @llvm.dbg.value(metadata i32 %6, metadata !12476, metadata !DIExpression()) #20, !dbg !12559
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !12567
  call void @llvm.dbg.value(metadata i32 %6, metadata !12557, metadata !DIExpression()), !dbg !12558
  %7 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !12568
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12570
  %9 = icmp eq %struct.k_thread* %7, %8, !dbg !12571
  br i1 %9, label %10, label %14, !dbg !12572

10:                                               ; preds = %5
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #21, !dbg !12573
  call void @llvm.dbg.value(metadata i32 undef, metadata !12504, metadata !DIExpression()) #20, !dbg !12575
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !12509, metadata !DIExpression()) #20, !dbg !12575
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !12577
  br i1 %11, label %13, label %12, !dbg !12578

12:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.246, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 194) #22, !dbg !12579
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.247, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !12579
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 194) #22, !dbg !12579
  unreachable, !dbg !12579

13:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i32 %6, metadata !12504, metadata !DIExpression()) #20, !dbg !12575
  call void @llvm.dbg.value(metadata i32 %6, metadata !12518, metadata !DIExpression()) #20, !dbg !12580
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #20, !dbg !12582, !srcloc !12524
  br label %33, !dbg !12583

14:                                               ; preds = %5
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !12584
  %15 = tail call fastcc i32 @slice_time() #21, !dbg !12585
  %16 = icmp eq i32 %15, 0, !dbg !12585
  br i1 %16, label %27, label %17, !dbg !12587

17:                                               ; preds = %14
  %18 = tail call fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %8) #21, !dbg !12588
  br i1 %18, label %19, label %27, !dbg !12589

19:                                               ; preds = %17
  %20 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !12590
  %21 = icmp sgt i32 %20, %0, !dbg !12593
  br i1 %21, label %25, label %22, !dbg !12594

22:                                               ; preds = %19
  %23 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !12595
  %24 = tail call fastcc i32 @slice_expired_locked([1 x i32] %23) #21, !dbg !12595
  call void @llvm.dbg.value(metadata i32 %24, metadata !12557, metadata !DIExpression()), !dbg !12558
  br label %28, !dbg !12597

25:                                               ; preds = %19
  %26 = sub nsw i32 %20, %0, !dbg !12598
  store i32 %26, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !12598
  br label %28

27:                                               ; preds = %17, %14
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !12600
  br label %28

28:                                               ; preds = %22, %25, %27
  %29 = phi i32 [ %24, %22 ], [ %6, %25 ], [ %6, %27 ], !dbg !12558
  call void @llvm.dbg.value(metadata i32 %29, metadata !12557, metadata !DIExpression()), !dbg !12558
  call void @llvm.dbg.value(metadata i32 undef, metadata !12504, metadata !DIExpression()) #20, !dbg !12602
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !12509, metadata !DIExpression()) #20, !dbg !12602
  %30 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !12604
  br i1 %30, label %32, label %31, !dbg !12605

31:                                               ; preds = %28
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.246, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 194) #22, !dbg !12606
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.247, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !12606
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 194) #22, !dbg !12606
  unreachable, !dbg !12606

32:                                               ; preds = %28
  call void @llvm.dbg.value(metadata i32 %29, metadata !12504, metadata !DIExpression()) #20, !dbg !12602
  call void @llvm.dbg.value(metadata i32 %29, metadata !12518, metadata !DIExpression()) #20, !dbg !12607
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %29) #20, !dbg !12609, !srcloc !12524
  br label %33, !dbg !12610

33:                                               ; preds = %32, %13
  ret void, !dbg !12610
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %0) unnamed_addr #8 !dbg !12611 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12615, metadata !DIExpression()), !dbg !12617
  %2 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %0) #21, !dbg !12618
  %3 = icmp eq i32 %2, 0, !dbg !12618
  br i1 %3, label %16, label %4, !dbg !12619

4:                                                ; preds = %1
  %5 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #21, !dbg !12620
  br i1 %5, label %16, label %6, !dbg !12621

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !12622
  %8 = bitcast %union.anon.2* %7 to i8*, !dbg !12622
  %9 = load i8, i8* %8, align 2, !dbg !12622
  %10 = sext i8 %9 to i32, !dbg !12623
  %11 = load i32, i32* @slice_max_prio, align 4, !dbg !12624
  %12 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %10, i32 noundef %11) #21, !dbg !12625
  br i1 %12, label %16, label %13, !dbg !12626

13:                                               ; preds = %6
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef nonnull %0) #21, !dbg !12627
  %15 = xor i1 %14, true, !dbg !12628
  br label %16

16:                                               ; preds = %13, %6, %4, %1
  %17 = phi i1 [ false, %6 ], [ false, %4 ], [ false, %1 ], [ %15, %13 ], !dbg !12617
  call void @llvm.dbg.value(metadata i1 %17, metadata !12616, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12617
  ret i1 %17, !dbg !12629
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @slice_expired_locked([1 x i32] %0) unnamed_addr #1 !dbg !12630 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !12634, metadata !DIExpression()), !dbg !12636
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12637
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !12635, metadata !DIExpression()), !dbg !12636
  %3 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %2) #21, !dbg !12638
  br i1 %3, label %5, label %4, !dbg !12640

4:                                                ; preds = %1
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %2) #21, !dbg !12641
  br label %5, !dbg !12643

5:                                                ; preds = %4, %1
  %6 = extractvalue [1 x i32] %0, 0
  call void @llvm.dbg.value(metadata i32 %6, metadata !12634, metadata !DIExpression()), !dbg !12636
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #21, !dbg !12644
  ret i32 %6, !dbg !12645
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !12646 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12648, metadata !DIExpression()), !dbg !12650
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12651
  %3 = load i8, i8* %2, align 1, !dbg !12651
  call void @llvm.dbg.value(metadata i8 %3, metadata !12649, metadata !DIExpression()), !dbg !12650
  %4 = and i8 %3, 31, !dbg !12652
  %5 = icmp ne i8 %4, 0, !dbg !12653
  ret i1 %5, !dbg !12654
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12655 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12657, metadata !DIExpression()), !dbg !12658
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #21, !dbg !12659
  br i1 %2, label %3, label %7, !dbg !12661

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12662, metadata !DIExpression()) #20, !dbg !12665
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12668
  %5 = load i8, i8* %4, align 1, !dbg !12669
  %6 = and i8 %5, 127, !dbg !12669
  store i8 %6, i8* %4, align 1, !dbg !12669
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12670, metadata !DIExpression()) #20, !dbg !12673
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #22, !dbg !12677
  br label %7, !dbg !12678

7:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12679, metadata !DIExpression()) #20, !dbg !12682
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12684
  %9 = load i8, i8* %8, align 1, !dbg !12685
  %10 = or i8 %9, -128, !dbg !12685
  store i8 %10, i8* %8, align 1, !dbg !12685
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12686, metadata !DIExpression()) #20, !dbg !12689
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !12693, metadata !DIExpression()) #20, !dbg !12701
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12699, metadata !DIExpression()) #20, !dbg !12701
  %11 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #22, !dbg !12703
  br i1 %11, label %12, label %13, !dbg !12706

12:                                               ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.249, i32 0, i32 0), i32 noundef 186) #22, !dbg !12707
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.249, i32 0, i32 0), i32 noundef 186) #22, !dbg !12707
  unreachable, !dbg !12707

13:                                               ; preds = %7
  %14 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #22, !dbg !12709
  call void @llvm.dbg.value(metadata %struct._dnode* %14, metadata !12700, metadata !DIExpression()) #20, !dbg !12701
  %15 = icmp eq %struct._dnode* %14, null, !dbg !12711
  br i1 %15, label %26, label %16, !dbg !12709

16:                                               ; preds = %13, %23
  %17 = phi %struct._dnode* [ %24, %23 ], [ %14, %13 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %17, metadata !12700, metadata !DIExpression()) #20, !dbg !12701
  %18 = bitcast %struct._dnode* %17 to %struct.k_thread*, !dbg !12713
  call void @llvm.dbg.value(metadata %struct.k_thread* %18, metadata !12700, metadata !DIExpression()) #20, !dbg !12701
  %19 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %18) #22, !dbg !12714
  %20 = icmp sgt i32 %19, 0, !dbg !12717
  br i1 %20, label %21, label %23, !dbg !12718

21:                                               ; preds = %16
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !12719
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %17, %struct._dnode* noundef %22) #22, !dbg !12721
  br label %28, !dbg !12722

23:                                               ; preds = %16
  %24 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %17) #22, !dbg !12711
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !12700, metadata !DIExpression()) #20, !dbg !12701
  %25 = icmp eq %struct._dnode* %24, null, !dbg !12711
  br i1 %25, label %26, label %16, !dbg !12709, !llvm.loop !12723

26:                                               ; preds = %23, %13
  %27 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !12725
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %27) #22, !dbg !12726
  br label %28, !dbg !12727

28:                                               ; preds = %21, %26
  %29 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12728
  %30 = icmp eq %struct.k_thread* %29, %0, !dbg !12729
  %31 = zext i1 %30 to i32, !dbg !12729
  tail call fastcc void @update_cache(i32 noundef %31) #21, !dbg !12730
  ret void, !dbg !12731
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !12732 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12734, metadata !DIExpression()), !dbg !12735
  %2 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %0, i32 noundef 128) #21, !dbg !12736
  ret i1 %2, !dbg !12737
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_dumb_remove(%struct._dnode* nocapture readnone %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !12738 {
  call void @llvm.dbg.value(metadata %struct._dnode* undef, metadata !12740, metadata !DIExpression()), !dbg !12742
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !12741, metadata !DIExpression()), !dbg !12742
  %3 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #21, !dbg !12743
  br i1 %3, label %4, label %5, !dbg !12746

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.249, i32 0, i32 0), i32 noundef 1139) #22, !dbg !12747
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.249, i32 0, i32 0), i32 noundef 1139) #22, !dbg !12747
  unreachable, !dbg !12747

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 0, i32 0, !dbg !12749
  tail call fastcc void @sys_dlist_remove(%struct._dnode* noundef %6) #21, !dbg !12750
  ret void, !dbg !12751
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef readnone %0) unnamed_addr #2 !dbg !12752 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12754, metadata !DIExpression()), !dbg !12755
  %2 = icmp eq %struct.k_thread* %0, getelementptr inbounds ([1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 0), !dbg !12756
  ret i1 %2, !dbg !12757
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) unnamed_addr #8 !dbg !12758 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12762, metadata !DIExpression()), !dbg !12763
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef %0) #21, !dbg !12764
  br i1 %2, label %6, label %3, !dbg !12764

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !12765
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !12765
  br label %6, !dbg !12764

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !12764
  ret %struct._dnode* %7, !dbg !12766
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #9 !dbg !12767 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12771, metadata !DIExpression()), !dbg !12775
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !12772, metadata !DIExpression()), !dbg !12775
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !12776
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !12776
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !12773, metadata !DIExpression()), !dbg !12775
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !12777
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !12778
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !12779
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !12780
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !12781
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !12782
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !12783
  ret void, !dbg !12784
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #8 !dbg !12785 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12789, metadata !DIExpression()), !dbg !12791
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !12790, metadata !DIExpression()), !dbg !12791
  %3 = icmp eq %struct._dnode* %1, null, !dbg !12792
  br i1 %3, label %6, label %4, !dbg !12793

4:                                                ; preds = %2
  %5 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* noundef %0, %struct._dnode* noundef nonnull %1) #21, !dbg !12794
  br label %6, !dbg !12793

6:                                                ; preds = %2, %4
  %7 = phi %struct._dnode* [ %5, %4 ], [ null, %2 ], !dbg !12793
  ret %struct._dnode* %7, !dbg !12795
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #9 !dbg !12796 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12800, metadata !DIExpression()), !dbg !12803
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !12801, metadata !DIExpression()), !dbg !12803
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !12804
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !12804
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !12802, metadata !DIExpression()), !dbg !12803
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !12805
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !12806
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !12807
  store %struct._dnode* %4, %struct._dnode** %6, align 4, !dbg !12808
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !12809
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !12810
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !12811
  ret void, !dbg !12812
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @update_cache(i32 noundef %0) unnamed_addr #1 !dbg !12813 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12815, metadata !DIExpression()), !dbg !12817
  %2 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #22, !dbg !12818
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !12825, metadata !DIExpression()) #20, !dbg !12827
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !12828
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 3), align 4, !dbg !12829
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %2, !dbg !12829
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !12816, metadata !DIExpression()), !dbg !12817
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !12830, metadata !DIExpression()) #20, !dbg !12836
  call void @llvm.dbg.value(metadata i32 %0, metadata !12835, metadata !DIExpression()) #20, !dbg !12836
  %6 = icmp eq i32 %0, 0, !dbg !12839
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12841
  br i1 %6, label %8, label %18, !dbg !12842

8:                                                ; preds = %1
  %9 = icmp eq %struct.k_thread* %7, null, !dbg !12843
  br i1 %9, label %10, label %11, !dbg !12846

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.19.250, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.249, i32 0, i32 0), i32 noundef 137) #22, !dbg !12847
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.251, i32 0, i32 0)) #22, !dbg !12847
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.249, i32 0, i32 0), i32 noundef 137) #22, !dbg !12847
  unreachable, !dbg !12847

11:                                               ; preds = %8
  %12 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef nonnull %7) #22, !dbg !12849
  br i1 %12, label %18, label %13, !dbg !12851

13:                                               ; preds = %11
  %14 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %5) #22, !dbg !12852
  br i1 %14, label %18, label %15, !dbg !12854

15:                                               ; preds = %13
  %16 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef nonnull %7) #22, !dbg !12855
  %17 = icmp eq i32 %16, 0, !dbg !12855
  br i1 %17, label %21, label %18, !dbg !12857

18:                                               ; preds = %1, %13, %11, %15
  %19 = icmp eq %struct.k_thread* %5, %7, !dbg !12858
  br i1 %19, label %21, label %20, !dbg !12861

20:                                               ; preds = %18
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #21, !dbg !12862
  br label %21, !dbg !12864

21:                                               ; preds = %15, %18, %20
  %22 = phi %struct.k_thread* [ %5, %20 ], [ %5, %18 ], [ %7, %15 ], !dbg !12841
  store %struct.k_thread* %22, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !12841
  ret void, !dbg !12865
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef readonly %0) local_unnamed_addr #8 !dbg !12866 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12870, metadata !DIExpression()), !dbg !12873
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !12871, metadata !DIExpression()), !dbg !12873
  %2 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) #21, !dbg !12874
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !12872, metadata !DIExpression()), !dbg !12873
  %3 = bitcast %struct._dnode* %2 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !12871, metadata !DIExpression()), !dbg !12873
  ret %struct.k_thread* %3, !dbg !12875
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !12876 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12878, metadata !DIExpression()), !dbg !12879
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !12880
  %3 = tail call fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* noundef nonnull %2) #21, !dbg !12881
  %4 = xor i1 %3, true, !dbg !12882
  ret i1 %4, !dbg !12883
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @is_preempt(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !12884 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12886, metadata !DIExpression()), !dbg !12887
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, i32 0, !dbg !12888
  %3 = load i16, i16* %2, align 2, !dbg !12888
  %4 = icmp ult i16 %3, 128, !dbg !12889
  %5 = zext i1 %4 to i32, !dbg !12889
  ret i32 %5, !dbg !12890
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #8 !dbg !12891 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !12897, metadata !DIExpression()), !dbg !12898
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !12899
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* noundef %2) #21, !dbg !12900
  %4 = xor i1 %3, true, !dbg !12901
  ret i1 %4, !dbg !12902
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #8 !dbg !12903 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12909, metadata !DIExpression()), !dbg !12910
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !12911
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !12911
  %4 = icmp ne %struct._dnode* %3, null, !dbg !12912
  ret i1 %4, !dbg !12913
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #8 !dbg !12914 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12916, metadata !DIExpression()), !dbg !12918
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !12917, metadata !DIExpression()), !dbg !12918
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !12919
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !12919
  %5 = icmp eq %struct._dnode* %4, %1, !dbg !12920
  br i1 %5, label %9, label %6, !dbg !12921

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !12922
  %8 = load %struct._dnode*, %struct._dnode** %7, align 4, !dbg !12922
  br label %9, !dbg !12921

9:                                                ; preds = %2, %6
  %10 = phi %struct._dnode* [ %8, %6 ], [ null, %2 ], !dbg !12921
  ret %struct._dnode* %10, !dbg !12923
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef readonly %0) unnamed_addr #8 !dbg !12924 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12928, metadata !DIExpression()), !dbg !12929
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !12930
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !12930
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !12931
  ret i1 %4, !dbg !12932
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove(%struct._dnode* nocapture noundef %0) unnamed_addr #9 !dbg !12933 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12937, metadata !DIExpression()), !dbg !12940
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !12941
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !12941
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !12938, metadata !DIExpression()), !dbg !12940
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !12942
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !12942
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !12939, metadata !DIExpression()), !dbg !12940
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !12943
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !12944
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !12945
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !12946
  tail call fastcc void @sys_dnode_init.252(%struct._dnode* noundef %0) #21, !dbg !12947
  ret void, !dbg !12948
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.252(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !12949 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12951, metadata !DIExpression()), !dbg !12952
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !12953
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !12954
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !12955
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !12956
  ret void, !dbg !12957
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #8 !dbg !12958 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12962, metadata !DIExpression()), !dbg !12964
  call void @llvm.dbg.value(metadata i32 %1, metadata !12963, metadata !DIExpression()), !dbg !12964
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12965
  %4 = load i8, i8* %3, align 1, !dbg !12965
  %5 = zext i8 %4 to i32, !dbg !12966
  %6 = and i32 %5, %1, !dbg !12967
  %7 = icmp ne i32 %6, 0, !dbg !12968
  ret i1 %7, !dbg !12969
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) unnamed_addr #2 !dbg !12970 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12974, metadata !DIExpression()), !dbg !12976
  call void @llvm.dbg.value(metadata i32 %1, metadata !12975, metadata !DIExpression()), !dbg !12976
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) #21, !dbg !12977
  ret i1 %3, !dbg !12978
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) unnamed_addr #2 !dbg !12979 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12981, metadata !DIExpression()), !dbg !12983
  call void @llvm.dbg.value(metadata i32 %1, metadata !12982, metadata !DIExpression()), !dbg !12983
  %3 = icmp slt i32 %0, %1, !dbg !12984
  ret i1 %3, !dbg !12985
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_ready_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !12986 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12988, metadata !DIExpression()), !dbg !12992
  call void @llvm.dbg.value(metadata i32 0, metadata !12989, metadata !DIExpression()), !dbg !12993
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !12470, metadata !DIExpression()) #20, !dbg !12994
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #20, !dbg !12996, !srcloc !12485
  call void @llvm.dbg.value(metadata i32 undef, metadata !12482, metadata !DIExpression()) #20, !dbg !12998
  call void @llvm.dbg.value(metadata i32 undef, metadata !12483, metadata !DIExpression()) #20, !dbg !12998
  call void @llvm.dbg.value(metadata i32 undef, metadata !12476, metadata !DIExpression()) #20, !dbg !12994
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !12999
  br i1 %3, label %5, label %4, !dbg !13000

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.243, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 148) #22, !dbg !13001
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.245, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13001
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 148) #22, !dbg !13001
  unreachable, !dbg !13001

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !12482, metadata !DIExpression()) #20, !dbg !12998
  call void @llvm.dbg.value(metadata i32 undef, metadata !12476, metadata !DIExpression()) #20, !dbg !12994
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13002
  call void @llvm.dbg.value(metadata i32 undef, metadata !12991, metadata !DIExpression()), !dbg !12993
  call void @llvm.dbg.value(metadata i32 undef, metadata !12989, metadata !DIExpression()), !dbg !12993
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #21, !dbg !13003
  call void @llvm.dbg.value(metadata i32 undef, metadata !12504, metadata !DIExpression()) #20, !dbg !13008
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !12509, metadata !DIExpression()) #20, !dbg !13008
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13010
  br i1 %6, label %8, label %7, !dbg !13011

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.246, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 194) #22, !dbg !13012
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.247, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13012
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 194) #22, !dbg !13012
  unreachable, !dbg !13012

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !12996
  call void @llvm.dbg.value(metadata i32 %9, metadata !12482, metadata !DIExpression()) #20, !dbg !12998
  call void @llvm.dbg.value(metadata i32 %9, metadata !12476, metadata !DIExpression()) #20, !dbg !12994
  call void @llvm.dbg.value(metadata i32 %9, metadata !12991, metadata !DIExpression()), !dbg !12993
  call void @llvm.dbg.value(metadata i32 undef, metadata !12504, metadata !DIExpression()) #20, !dbg !13008
  call void @llvm.dbg.value(metadata i32 undef, metadata !12518, metadata !DIExpression()) #20, !dbg !13013
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #20, !dbg !13015, !srcloc !12524
  call void @llvm.dbg.value(metadata i32 1, metadata !12989, metadata !DIExpression()), !dbg !12993
  call void @llvm.dbg.value(metadata i32 undef, metadata !12989, metadata !DIExpression()), !dbg !12993
  ret void, !dbg !13016
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13017 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13019, metadata !DIExpression()), !dbg !13020
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #21, !dbg !13021
  br i1 %2, label %27, label %3, !dbg !13023

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #21, !dbg !13024
  br i1 %4, label %5, label %27, !dbg !13025

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12679, metadata !DIExpression()) #20, !dbg !13026
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13029
  %7 = load i8, i8* %6, align 1, !dbg !13030
  %8 = or i8 %7, -128, !dbg !13030
  store i8 %8, i8* %6, align 1, !dbg !13030
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12686, metadata !DIExpression()) #20, !dbg !13031
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !12693, metadata !DIExpression()) #20, !dbg !13033
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12699, metadata !DIExpression()) #20, !dbg !13033
  %9 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #22, !dbg !13035
  br i1 %9, label %10, label %11, !dbg !13036

10:                                               ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.249, i32 0, i32 0), i32 noundef 186) #22, !dbg !13037
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.249, i32 0, i32 0), i32 noundef 186) #22, !dbg !13037
  unreachable, !dbg !13037

11:                                               ; preds = %5
  %12 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #22, !dbg !13038
  call void @llvm.dbg.value(metadata %struct._dnode* %12, metadata !12700, metadata !DIExpression()) #20, !dbg !13033
  %13 = icmp eq %struct._dnode* %12, null, !dbg !13039
  br i1 %13, label %24, label %14, !dbg !13038

14:                                               ; preds = %11, %21
  %15 = phi %struct._dnode* [ %22, %21 ], [ %12, %11 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %15, metadata !12700, metadata !DIExpression()) #20, !dbg !13033
  %16 = bitcast %struct._dnode* %15 to %struct.k_thread*, !dbg !13040
  call void @llvm.dbg.value(metadata %struct.k_thread* %16, metadata !12700, metadata !DIExpression()) #20, !dbg !13033
  %17 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %16) #22, !dbg !13041
  %18 = icmp sgt i32 %17, 0, !dbg !13042
  br i1 %18, label %19, label %21, !dbg !13043

19:                                               ; preds = %14
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !13044
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %15, %struct._dnode* noundef %20) #22, !dbg !13045
  br label %26, !dbg !13046

21:                                               ; preds = %14
  %22 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %15) #22, !dbg !13039
  call void @llvm.dbg.value(metadata %struct._dnode* %22, metadata !12700, metadata !DIExpression()) #20, !dbg !13033
  %23 = icmp eq %struct._dnode* %22, null, !dbg !13039
  br i1 %23, label %24, label %14, !dbg !13038, !llvm.loop !13047

24:                                               ; preds = %21, %11
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !13049
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %25) #22, !dbg !13050
  br label %26, !dbg !13051

26:                                               ; preds = %19, %24
  tail call fastcc void @update_cache(i32 noundef 0) #21, !dbg !13052
  br label %27, !dbg !13053

27:                                               ; preds = %26, %3, %1
  ret void, !dbg !13054
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !13055 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13057, metadata !DIExpression()), !dbg !13058
  %2 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #21, !dbg !13059
  br i1 %2, label %6, label %3, !dbg !13060

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %0) #21, !dbg !13061
  %5 = xor i1 %4, true, !dbg !13060
  br label %6, !dbg !13060

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ]
  ret i1 %7, !dbg !13062
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !13063 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13065, metadata !DIExpression()), !dbg !13069
  call void @llvm.dbg.value(metadata i32 0, metadata !13066, metadata !DIExpression()), !dbg !13070
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !12470, metadata !DIExpression()) #20, !dbg !13071
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #20, !dbg !13073, !srcloc !12485
  call void @llvm.dbg.value(metadata i32 undef, metadata !12482, metadata !DIExpression()) #20, !dbg !13075
  call void @llvm.dbg.value(metadata i32 undef, metadata !12483, metadata !DIExpression()) #20, !dbg !13075
  call void @llvm.dbg.value(metadata i32 undef, metadata !12476, metadata !DIExpression()) #20, !dbg !13071
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13076
  br i1 %3, label %5, label %4, !dbg !13077

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.243, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 148) #22, !dbg !13078
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.245, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13078
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 148) #22, !dbg !13078
  unreachable, !dbg !13078

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !12482, metadata !DIExpression()) #20, !dbg !13075
  call void @llvm.dbg.value(metadata i32 undef, metadata !12476, metadata !DIExpression()) #20, !dbg !13071
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13079
  call void @llvm.dbg.value(metadata i32 undef, metadata !13068, metadata !DIExpression()), !dbg !13070
  call void @llvm.dbg.value(metadata i32 undef, metadata !13066, metadata !DIExpression()), !dbg !13070
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) #21, !dbg !13080
  call void @llvm.dbg.value(metadata i32 undef, metadata !12504, metadata !DIExpression()) #20, !dbg !13083
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !12509, metadata !DIExpression()) #20, !dbg !13083
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13085
  br i1 %6, label %8, label %7, !dbg !13086

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.246, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 194) #22, !dbg !13087
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.247, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13087
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 194) #22, !dbg !13087
  unreachable, !dbg !13087

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !13073
  call void @llvm.dbg.value(metadata i32 %9, metadata !12482, metadata !DIExpression()) #20, !dbg !13075
  call void @llvm.dbg.value(metadata i32 %9, metadata !12476, metadata !DIExpression()) #20, !dbg !13071
  call void @llvm.dbg.value(metadata i32 %9, metadata !13068, metadata !DIExpression()), !dbg !13070
  call void @llvm.dbg.value(metadata i32 undef, metadata !12504, metadata !DIExpression()) #20, !dbg !13083
  call void @llvm.dbg.value(metadata i32 undef, metadata !12518, metadata !DIExpression()) #20, !dbg !13088
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #20, !dbg !13090, !srcloc !12524
  call void @llvm.dbg.value(metadata i32 1, metadata !13066, metadata !DIExpression()), !dbg !13070
  call void @llvm.dbg.value(metadata i32 undef, metadata !13066, metadata !DIExpression()), !dbg !13070
  ret void, !dbg !13091
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !13092 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13094, metadata !DIExpression()), !dbg !13096
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !12470, metadata !DIExpression()) #20, !dbg !13097
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #20, !dbg !13099, !srcloc !12485
  call void @llvm.dbg.value(metadata i32 undef, metadata !12482, metadata !DIExpression()) #20, !dbg !13101
  call void @llvm.dbg.value(metadata i32 undef, metadata !12483, metadata !DIExpression()) #20, !dbg !13101
  call void @llvm.dbg.value(metadata i32 undef, metadata !12476, metadata !DIExpression()) #20, !dbg !13097
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13102
  br i1 %3, label %5, label %4, !dbg !13103

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.243, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 148) #22, !dbg !13104
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.245, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13104
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 148) #22, !dbg !13104
  unreachable, !dbg !13104

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !13099
  call void @llvm.dbg.value(metadata i32 %6, metadata !12482, metadata !DIExpression()) #20, !dbg !13101
  call void @llvm.dbg.value(metadata i32 %6, metadata !12476, metadata !DIExpression()) #20, !dbg !13097
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13105
  call void @llvm.dbg.value(metadata i32 %6, metadata !13095, metadata !DIExpression()), !dbg !13096
  %7 = tail call fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* noundef %0) #21, !dbg !13106
  br i1 %7, label %8, label %12, !dbg !13108

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !12504, metadata !DIExpression()) #20, !dbg !13109
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !12509, metadata !DIExpression()) #20, !dbg !13109
  %9 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13112
  br i1 %9, label %11, label %10, !dbg !13113

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.246, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 194) #22, !dbg !13114
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.247, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13114
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 194) #22, !dbg !13114
  unreachable, !dbg !13114

11:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 %6, metadata !12504, metadata !DIExpression()) #20, !dbg !13109
  call void @llvm.dbg.value(metadata i32 %6, metadata !12518, metadata !DIExpression()) #20, !dbg !13115
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #20, !dbg !13117, !srcloc !12524
  br label %14, !dbg !13118

12:                                               ; preds = %5
  tail call fastcc void @z_mark_thread_as_started.257(%struct.k_thread* noundef %0) #21, !dbg !13119
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #21, !dbg !13120
  %13 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !13121
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @sched_spinlock, [1 x i32] %13) #21, !dbg !13121
  br label %14, !dbg !13122

14:                                               ; preds = %12, %11
  ret void, !dbg !13122
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !13123 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13125, metadata !DIExpression()), !dbg !13126
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13127
  %3 = load i8, i8* %2, align 1, !dbg !13127
  %4 = and i8 %3, 4, !dbg !13128
  %5 = icmp eq i8 %4, 0, !dbg !13129
  ret i1 %5, !dbg !13130
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started.257(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !13131 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13133, metadata !DIExpression()), !dbg !13134
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13135
  %3 = load i8, i8* %2, align 1, !dbg !13136
  %4 = and i8 %3, -5, !dbg !13136
  store i8 %4, i8* %2, align 1, !dbg !13136
  ret void, !dbg !13137
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule(%struct.k_spinlock* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !13138 {
  %3 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %3, metadata !13141, metadata !DIExpression()), !dbg !13142
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !13140, metadata !DIExpression()), !dbg !13142
  %4 = tail call fastcc zeroext i1 @resched(i32 noundef %3) #21, !dbg !13143
  br i1 %4, label %5, label %12, !dbg !13145

5:                                                ; preds = %2
  %6 = tail call fastcc zeroext i1 @need_swap() #21, !dbg !13146
  br i1 %6, label %7, label %12, !dbg !13147

7:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !13148, metadata !DIExpression()) #20, !dbg !13154
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !13153, metadata !DIExpression()) #20, !dbg !13154
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !13157, metadata !DIExpression()) #20, !dbg !13162
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #22, !dbg !13164
  br i1 %8, label %10, label %9, !dbg !13167

9:                                                ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.246, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 225) #22, !dbg !13168
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.247, i32 0, i32 0), %struct.k_spinlock* noundef %0) #22, !dbg !13168
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 225) #22, !dbg !13168
  unreachable, !dbg !13168

10:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i32 %3, metadata !13148, metadata !DIExpression()) #20, !dbg !13154
  %11 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #22, !dbg !13170
  br label %16, !dbg !13171

12:                                               ; preds = %5, %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !12504, metadata !DIExpression()) #20, !dbg !13172
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !12509, metadata !DIExpression()) #20, !dbg !13172
  %13 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #22, !dbg !13175
  br i1 %13, label %15, label %14, !dbg !13176

14:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.246, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 194) #22, !dbg !13177
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.247, i32 0, i32 0), %struct.k_spinlock* noundef %0) #22, !dbg !13177
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 194) #22, !dbg !13177
  unreachable, !dbg !13177

15:                                               ; preds = %12
  call void @llvm.dbg.value(metadata i32 %3, metadata !12504, metadata !DIExpression()) #20, !dbg !13172
  call void @llvm.dbg.value(metadata i32 %3, metadata !12518, metadata !DIExpression()) #20, !dbg !13178
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #20, !dbg !13180, !srcloc !12524
  br label %16

16:                                               ; preds = %15, %10
  ret void, !dbg !13181
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @resched(i32 noundef %0) unnamed_addr #1 !dbg !13182 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13186, metadata !DIExpression()), !dbg !13187
  call void @llvm.dbg.value(metadata i32 %0, metadata !13188, metadata !DIExpression()), !dbg !13193
  %2 = icmp eq i32 %0, 0, !dbg !13195
  br i1 %2, label %3, label %6, !dbg !13196

3:                                                ; preds = %1
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #20, !dbg !13197, !srcloc !13204
  call void @llvm.dbg.value(metadata i32 %4, metadata !13200, metadata !DIExpression()) #20, !dbg !13205
  %5 = icmp eq i32 %4, 0, !dbg !13206
  br label %6

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ], !dbg !13187
  ret i1 %7, !dbg !13207
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @need_swap() unnamed_addr #8 !dbg !13208 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !13211
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !13210, metadata !DIExpression()), !dbg !13212
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13213
  %3 = icmp ne %struct.k_thread* %1, %2, !dbg !13214
  ret i1 %3, !dbg !13215
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_swap_irqlock(i32 noundef %0) unnamed_addr #1 !dbg !13216 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13218, metadata !DIExpression()), !dbg !13220
  %2 = tail call i32 @arch_swap(i32 noundef %0) #22, !dbg !13221
  call void @llvm.dbg.value(metadata i32 %2, metadata !13219, metadata !DIExpression()), !dbg !13220
  ret i32 %2, !dbg !13222
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !13223 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13225, metadata !DIExpression()), !dbg !13229
  %2 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #21, !dbg !13230
  call void @llvm.dbg.value(metadata i32 0, metadata !13226, metadata !DIExpression()), !dbg !13231
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !12470, metadata !DIExpression()) #20, !dbg !13232
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #20, !dbg !13234, !srcloc !12485
  call void @llvm.dbg.value(metadata i32 undef, metadata !12482, metadata !DIExpression()) #20, !dbg !13236
  call void @llvm.dbg.value(metadata i32 undef, metadata !12483, metadata !DIExpression()) #20, !dbg !13236
  call void @llvm.dbg.value(metadata i32 undef, metadata !12476, metadata !DIExpression()) #20, !dbg !13232
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13237
  br i1 %4, label %6, label %5, !dbg !13238

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.243, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 148) #22, !dbg !13239
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.245, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13239
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 148) #22, !dbg !13239
  unreachable, !dbg !13239

6:                                                ; preds = %1
  %7 = extractvalue { i32, i32 } %3, 0, !dbg !13234
  call void @llvm.dbg.value(metadata i32 %7, metadata !12482, metadata !DIExpression()) #20, !dbg !13236
  call void @llvm.dbg.value(metadata i32 %7, metadata !12476, metadata !DIExpression()) #20, !dbg !13232
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13240
  call void @llvm.dbg.value(metadata i32 %7, metadata !13228, metadata !DIExpression()), !dbg !13231
  call void @llvm.dbg.value(metadata i32 undef, metadata !13226, metadata !DIExpression()), !dbg !13231
  %8 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #21, !dbg !13241
  br i1 %8, label %9, label %13, !dbg !13245

9:                                                ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12662, metadata !DIExpression()) #20, !dbg !13246
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13249
  %11 = load i8, i8* %10, align 1, !dbg !13250
  %12 = and i8 %11, 127, !dbg !13250
  store i8 %12, i8* %10, align 1, !dbg !13250
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12670, metadata !DIExpression()) #20, !dbg !13251
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #22, !dbg !13253
  br label %13, !dbg !13254

13:                                               ; preds = %9, %6
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %0) #21, !dbg !13255
  %14 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13256
  %15 = icmp eq %struct.k_thread* %14, %0, !dbg !13257
  %16 = zext i1 %15 to i32, !dbg !13257
  tail call fastcc void @update_cache(i32 noundef %16) #21, !dbg !13258
  call void @llvm.dbg.value(metadata i32 undef, metadata !12504, metadata !DIExpression()) #20, !dbg !13259
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !12509, metadata !DIExpression()) #20, !dbg !13259
  %17 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13261
  br i1 %17, label %19, label %18, !dbg !13262

18:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.246, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 194) #22, !dbg !13263
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.247, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13263
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 194) #22, !dbg !13263
  unreachable, !dbg !13263

19:                                               ; preds = %13
  call void @llvm.dbg.value(metadata i32 %7, metadata !12504, metadata !DIExpression()) #20, !dbg !13259
  call void @llvm.dbg.value(metadata i32 %7, metadata !12518, metadata !DIExpression()) #20, !dbg !13264
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %7) #20, !dbg !13266, !srcloc !12524
  call void @llvm.dbg.value(metadata i32 1, metadata !13226, metadata !DIExpression()), !dbg !13231
  call void @llvm.dbg.value(metadata i32 undef, metadata !13226, metadata !DIExpression()), !dbg !13231
  %20 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13267
  %21 = icmp eq %struct.k_thread* %20, %0, !dbg !13269
  br i1 %21, label %22, label %23, !dbg !13270

22:                                               ; preds = %19
  tail call fastcc void @z_reschedule_unlocked() #21, !dbg !13271
  br label %23, !dbg !13273

23:                                               ; preds = %22, %19
  ret void, !dbg !13274
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13275 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13277, metadata !DIExpression()), !dbg !13278
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !13279
  %3 = tail call i32 @z_abort_timeout(%struct._timeout* noundef nonnull %2) #22, !dbg !13280
  ret i32 %3, !dbg !13281
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !13282 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13284, metadata !DIExpression()), !dbg !13285
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13286
  %3 = load i8, i8* %2, align 1, !dbg !13287
  %4 = or i8 %3, 16, !dbg !13287
  store i8 %4, i8* %2, align 1, !dbg !13287
  ret void, !dbg !13288
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_reschedule_unlocked() unnamed_addr #1 !dbg !13289 {
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #20, !dbg !13290, !srcloc !12485
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !13290
  call void @llvm.dbg.value(metadata i32 %2, metadata !12482, metadata !DIExpression()) #20, !dbg !13292
  call void @llvm.dbg.value(metadata i32 undef, metadata !12483, metadata !DIExpression()) #20, !dbg !13292
  tail call void @z_reschedule_irqlock(i32 noundef %2) #21, !dbg !13293
  ret void, !dbg !13294
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule_irqlock(i32 noundef %0) local_unnamed_addr #1 !dbg !13295 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13297, metadata !DIExpression()), !dbg !13298
  %2 = tail call fastcc zeroext i1 @resched(i32 noundef %0) #21, !dbg !13299
  br i1 %2, label %3, label %5, !dbg !13301

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #21, !dbg !13302
  br label %6, !dbg !13304

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %0, metadata !12518, metadata !DIExpression()) #20, !dbg !13305
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %0) #20, !dbg !13308, !srcloc !12524
  br label %6

6:                                                ; preds = %5, %3
  ret void, !dbg !13309
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_resume(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !13310 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13312, metadata !DIExpression()), !dbg !13314
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !12470, metadata !DIExpression()) #20, !dbg !13315
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #20, !dbg !13317, !srcloc !12485
  call void @llvm.dbg.value(metadata i32 undef, metadata !12482, metadata !DIExpression()) #20, !dbg !13319
  call void @llvm.dbg.value(metadata i32 undef, metadata !12483, metadata !DIExpression()) #20, !dbg !13319
  call void @llvm.dbg.value(metadata i32 undef, metadata !12476, metadata !DIExpression()) #20, !dbg !13315
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13320
  br i1 %3, label %5, label %4, !dbg !13321

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.243, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 148) #22, !dbg !13322
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.245, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13322
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 148) #22, !dbg !13322
  unreachable, !dbg !13322

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !13317
  call void @llvm.dbg.value(metadata i32 %6, metadata !12482, metadata !DIExpression()) #20, !dbg !13319
  call void @llvm.dbg.value(metadata i32 %6, metadata !12476, metadata !DIExpression()) #20, !dbg !13315
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13323
  call void @llvm.dbg.value(metadata i32 %6, metadata !13313, metadata !DIExpression()), !dbg !13314
  %7 = tail call fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* noundef %0) #21, !dbg !13324
  br i1 %7, label %12, label %8, !dbg !13326

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !12504, metadata !DIExpression()) #20, !dbg !13327
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !12509, metadata !DIExpression()) #20, !dbg !13327
  %9 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13330
  br i1 %9, label %11, label %10, !dbg !13331

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.246, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 194) #22, !dbg !13332
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.247, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13332
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 194) #22, !dbg !13332
  unreachable, !dbg !13332

11:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 %6, metadata !12504, metadata !DIExpression()) #20, !dbg !13327
  call void @llvm.dbg.value(metadata i32 %6, metadata !12518, metadata !DIExpression()) #20, !dbg !13333
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #20, !dbg !13335, !srcloc !12524
  br label %14, !dbg !13336

12:                                               ; preds = %5
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #21, !dbg !13337
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #21, !dbg !13338
  %13 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !13339
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @sched_spinlock, [1 x i32] %13) #21, !dbg !13339
  br label %14, !dbg !13340

14:                                               ; preds = %12, %11
  ret void, !dbg !13340
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !13341 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13343, metadata !DIExpression()), !dbg !13344
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13345
  %3 = load i8, i8* %2, align 1, !dbg !13345
  %4 = and i8 %3, 16, !dbg !13346
  %5 = icmp ne i8 %4, 0, !dbg !13347
  ret i1 %5, !dbg !13348
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !13349 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13351, metadata !DIExpression()), !dbg !13352
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13353
  %3 = load i8, i8* %2, align 1, !dbg !13354
  %4 = and i8 %3, -17, !dbg !13354
  store i8 %4, i8* %2, align 1, !dbg !13354
  ret void, !dbg !13355
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pend_thread(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !13356 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !13366, metadata !DIExpression()), !dbg !13370
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13364, metadata !DIExpression()), !dbg !13370
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !13365, metadata !DIExpression()), !dbg !13370
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13371
  %5 = icmp eq %struct.k_thread* %4, %0, !dbg !13371
  br i1 %5, label %9, label %6, !dbg !13371

6:                                                ; preds = %3
  %7 = tail call fastcc zeroext i1 @is_thread_dummy(%struct.k_thread* noundef %0) #21, !dbg !13371
  br i1 %7, label %9, label %8, !dbg !13374

8:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.1.258, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.249, i32 0, i32 0), i32 noundef 773) #22, !dbg !13375
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.249, i32 0, i32 0), i32 noundef 773) #22, !dbg !13375
  unreachable, !dbg !13375

9:                                                ; preds = %3, %6
  call void @llvm.dbg.value(metadata i32 0, metadata !13367, metadata !DIExpression()), !dbg !13377
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !12470, metadata !DIExpression()) #20, !dbg !13378
  %10 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #20, !dbg !13380, !srcloc !12485
  call void @llvm.dbg.value(metadata i32 undef, metadata !12482, metadata !DIExpression()) #20, !dbg !13382
  call void @llvm.dbg.value(metadata i32 undef, metadata !12483, metadata !DIExpression()) #20, !dbg !13382
  call void @llvm.dbg.value(metadata i32 undef, metadata !12476, metadata !DIExpression()) #20, !dbg !13378
  %11 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13383
  br i1 %11, label %13, label %12, !dbg !13384

12:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.243, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 148) #22, !dbg !13385
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.245, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13385
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 148) #22, !dbg !13385
  unreachable, !dbg !13385

13:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !12482, metadata !DIExpression()) #20, !dbg !13382
  call void @llvm.dbg.value(metadata i32 undef, metadata !12476, metadata !DIExpression()) #20, !dbg !13378
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13386
  call void @llvm.dbg.value(metadata i32 undef, metadata !13369, metadata !DIExpression()), !dbg !13377
  call void @llvm.dbg.value(metadata i32 undef, metadata !13367, metadata !DIExpression()), !dbg !13377
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) #21, !dbg !13387
  call void @llvm.dbg.value(metadata i32 undef, metadata !12504, metadata !DIExpression()) #20, !dbg !13390
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !12509, metadata !DIExpression()) #20, !dbg !13390
  %14 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13392
  br i1 %14, label %16, label %15, !dbg !13393

15:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.246, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 194) #22, !dbg !13394
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.247, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13394
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 194) #22, !dbg !13394
  unreachable, !dbg !13394

16:                                               ; preds = %13
  %17 = extractvalue { i32, i32 } %10, 0, !dbg !13380
  call void @llvm.dbg.value(metadata i32 %17, metadata !12482, metadata !DIExpression()) #20, !dbg !13382
  call void @llvm.dbg.value(metadata i32 %17, metadata !12476, metadata !DIExpression()) #20, !dbg !13378
  call void @llvm.dbg.value(metadata i32 %17, metadata !13369, metadata !DIExpression()), !dbg !13377
  call void @llvm.dbg.value(metadata i32 undef, metadata !12504, metadata !DIExpression()) #20, !dbg !13390
  call void @llvm.dbg.value(metadata i32 undef, metadata !12518, metadata !DIExpression()) #20, !dbg !13395
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %17) #20, !dbg !13397, !srcloc !12524
  call void @llvm.dbg.value(metadata i32 1, metadata !13367, metadata !DIExpression()), !dbg !13377
  call void @llvm.dbg.value(metadata i32 undef, metadata !13367, metadata !DIExpression()), !dbg !13377
  ret void, !dbg !13398
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @is_thread_dummy(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !13399 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13401, metadata !DIExpression()), !dbg !13402
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13403
  %3 = load i8, i8* %2, align 1, !dbg !13403
  %4 = and i8 %3, 1, !dbg !13404
  %5 = icmp ne i8 %4, 0, !dbg !13405
  ret i1 %5, !dbg !13406
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !13407 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !13411, metadata !DIExpression()), !dbg !13412
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13409, metadata !DIExpression()), !dbg !13412
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !13410, metadata !DIExpression()), !dbg !13412
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) #21, !dbg !13413
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %2) #21, !dbg !13414
  ret void, !dbg !13415
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) unnamed_addr #1 !dbg !13416 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13420, metadata !DIExpression()), !dbg !13422
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !13421, metadata !DIExpression()), !dbg !13422
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %0) #21, !dbg !13423
  tail call fastcc void @z_mark_thread_as_pending(%struct.k_thread* noundef %0) #21, !dbg !13424
  %3 = icmp eq %union.anon* %1, null, !dbg !13425
  br i1 %3, label %24, label %4, !dbg !13427

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !13428
  store %union.anon* %1, %union.anon** %5, align 8, !dbg !13430
  %6 = getelementptr inbounds %union.anon, %union.anon* %1, i32 0, i32 0, !dbg !13431
  call void @llvm.dbg.value(metadata %struct._dnode* %6, metadata !12693, metadata !DIExpression()) #20, !dbg !13432
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12699, metadata !DIExpression()) #20, !dbg !13432
  %7 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #22, !dbg !13434
  br i1 %7, label %8, label %9, !dbg !13435

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.249, i32 0, i32 0), i32 noundef 186) #22, !dbg !13436
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.249, i32 0, i32 0), i32 noundef 186) #22, !dbg !13436
  unreachable, !dbg !13436

9:                                                ; preds = %4
  %10 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef nonnull %6) #22, !dbg !13437
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !12700, metadata !DIExpression()) #20, !dbg !13432
  %11 = icmp eq %struct._dnode* %10, null, !dbg !13438
  br i1 %11, label %22, label %12, !dbg !13437

12:                                               ; preds = %9, %19
  %13 = phi %struct._dnode* [ %20, %19 ], [ %10, %9 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %13, metadata !12700, metadata !DIExpression()) #20, !dbg !13432
  %14 = bitcast %struct._dnode* %13 to %struct.k_thread*, !dbg !13439
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !12700, metadata !DIExpression()) #20, !dbg !13432
  %15 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %14) #22, !dbg !13440
  %16 = icmp sgt i32 %15, 0, !dbg !13441
  br i1 %16, label %17, label %19, !dbg !13442

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !13443
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %13, %struct._dnode* noundef %18) #22, !dbg !13444
  br label %24, !dbg !13445

19:                                               ; preds = %12
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef nonnull %13) #22, !dbg !13438
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !12700, metadata !DIExpression()) #20, !dbg !13432
  %21 = icmp eq %struct._dnode* %20, null, !dbg !13438
  br i1 %21, label %22, label %12, !dbg !13437, !llvm.loop !13446

22:                                               ; preds = %19, %9
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !13448
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef %23) #22, !dbg !13449
  br label %24, !dbg !13450

24:                                               ; preds = %22, %17, %2
  ret void, !dbg !13451
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !13452 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !13457, metadata !DIExpression()), !dbg !13458
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13456, metadata !DIExpression()), !dbg !13458
  %4 = icmp eq i64 %3, -1, !dbg !13459
  br i1 %4, label %6, label %5, !dbg !13461

5:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout.259(%struct.k_thread* noundef %0, [1 x i64] %1) #21, !dbg !13462
  br label %6, !dbg !13464

6:                                                ; preds = %5, %2
  ret void, !dbg !13465
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout.259(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !13466 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !13469, metadata !DIExpression()), !dbg !13470
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13468, metadata !DIExpression()), !dbg !13470
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !13471
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #22, !dbg !13472
  ret void, !dbg !13473
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_timeout(%struct._timeout* noundef %0) #1 !dbg !13474 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !13476, metadata !DIExpression()), !dbg !13484
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, !dbg !13485
  %3 = bitcast %struct._timeout* %2 to %struct.k_thread*, !dbg !13485
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !13477, metadata !DIExpression()), !dbg !13484
  call void @llvm.dbg.value(metadata i32 0, metadata !13478, metadata !DIExpression()), !dbg !13486
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !12470, metadata !DIExpression()) #20, !dbg !13487
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #20, !dbg !13489, !srcloc !12485
  call void @llvm.dbg.value(metadata i32 undef, metadata !12482, metadata !DIExpression()) #20, !dbg !13491
  call void @llvm.dbg.value(metadata i32 undef, metadata !12483, metadata !DIExpression()) #20, !dbg !13491
  call void @llvm.dbg.value(metadata i32 undef, metadata !12476, metadata !DIExpression()) #20, !dbg !13487
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13492
  br i1 %5, label %7, label %6, !dbg !13493

6:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.243, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 148) #22, !dbg !13494
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.245, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13494
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 148) #22, !dbg !13494
  unreachable, !dbg !13494

7:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !12482, metadata !DIExpression()) #20, !dbg !13491
  call void @llvm.dbg.value(metadata i32 undef, metadata !12476, metadata !DIExpression()) #20, !dbg !13487
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13495
  call void @llvm.dbg.value(metadata i32 undef, metadata !13480, metadata !DIExpression()), !dbg !13486
  call void @llvm.dbg.value(metadata i32 undef, metadata !13478, metadata !DIExpression()), !dbg !13486
  %8 = bitcast %struct._timeout* %2 to %struct._thread_base*, !dbg !13496
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %8, i32 0, i32 3, !dbg !13497
  %10 = load i8, i8* %9, align 1, !dbg !13497
  %11 = and i8 %10, 40, !dbg !13498
  %12 = icmp eq i8 %11, 0, !dbg !13498
  call void @llvm.dbg.value(metadata i1 %12, metadata !13481, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13499
  br i1 %12, label %13, label %20, !dbg !13500

13:                                               ; preds = %7
  %14 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, i32 1, !dbg !13501
  %15 = bitcast void (%struct._timeout*)** %14 to %union.anon**, !dbg !13501
  %16 = load %union.anon*, %union.anon** %15, align 8, !dbg !13501
  %17 = icmp eq %union.anon* %16, null, !dbg !13505
  br i1 %17, label %19, label %18, !dbg !13506

18:                                               ; preds = %13
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %3) #21, !dbg !13507
  br label %19, !dbg !13509

19:                                               ; preds = %18, %13
  tail call fastcc void @z_mark_thread_as_started.257(%struct.k_thread* noundef nonnull %3) #21, !dbg !13510
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef nonnull %3) #21, !dbg !13511
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %3) #21, !dbg !13512
  br label %20, !dbg !13513

20:                                               ; preds = %19, %7
  call void @llvm.dbg.value(metadata i32 undef, metadata !12504, metadata !DIExpression()) #20, !dbg !13514
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !12509, metadata !DIExpression()) #20, !dbg !13514
  %21 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13516
  br i1 %21, label %23, label %22, !dbg !13517

22:                                               ; preds = %20
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.246, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 194) #22, !dbg !13518
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.247, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13518
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 194) #22, !dbg !13518
  unreachable, !dbg !13518

23:                                               ; preds = %20
  %24 = extractvalue { i32, i32 } %4, 0, !dbg !13489
  call void @llvm.dbg.value(metadata i32 %24, metadata !12482, metadata !DIExpression()) #20, !dbg !13491
  call void @llvm.dbg.value(metadata i32 %24, metadata !12476, metadata !DIExpression()) #20, !dbg !13487
  call void @llvm.dbg.value(metadata i32 %24, metadata !13480, metadata !DIExpression()), !dbg !13486
  call void @llvm.dbg.value(metadata i32 undef, metadata !12504, metadata !DIExpression()) #20, !dbg !13514
  call void @llvm.dbg.value(metadata i32 undef, metadata !12518, metadata !DIExpression()) #20, !dbg !13519
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %24) #20, !dbg !13521, !srcloc !12524
  call void @llvm.dbg.value(metadata i32 1, metadata !13478, metadata !DIExpression()), !dbg !13486
  call void @llvm.dbg.value(metadata i32 undef, metadata !13478, metadata !DIExpression()), !dbg !13486
  ret void, !dbg !13522
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13523 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13525, metadata !DIExpression()), !dbg !13526
  %2 = tail call fastcc %union.anon* @pended_on_thread(%struct.k_thread* noundef %0) #21, !dbg !13527
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #21, !dbg !13528
  tail call fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* noundef %0) #21, !dbg !13529
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !13530
  store %union.anon* null, %union.anon** %3, align 8, !dbg !13531
  ret void, !dbg !13532
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %union.anon* @pended_on_thread(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #1 !dbg !13533 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13537, metadata !DIExpression()), !dbg !13538
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !13539
  %3 = load %union.anon*, %union.anon** %2, align 8, !dbg !13539
  %4 = icmp eq %union.anon* %3, null, !dbg !13539
  br i1 %4, label %5, label %6, !dbg !13542

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.20.262, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.249, i32 0, i32 0), i32 noundef 726) #22, !dbg !13543
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.249, i32 0, i32 0), i32 noundef 726) #22, !dbg !13543
  unreachable, !dbg !13543

6:                                                ; preds = %1
  ret %union.anon* %3, !dbg !13545
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !13546 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13548, metadata !DIExpression()), !dbg !13549
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13550
  %3 = load i8, i8* %2, align 1, !dbg !13551
  %4 = and i8 %3, -3, !dbg !13551
  store i8 %4, i8* %2, align 1, !dbg !13551
  ret void, !dbg !13552
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13553 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13555, metadata !DIExpression()), !dbg !13556
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #21, !dbg !13557
  br i1 %2, label %3, label %7, !dbg !13559

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12662, metadata !DIExpression()) #20, !dbg !13560
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13563
  %5 = load i8, i8* %4, align 1, !dbg !13564
  %6 = and i8 %5, 127, !dbg !13564
  store i8 %6, i8* %4, align 1, !dbg !13564
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12670, metadata !DIExpression()) #20, !dbg !13565
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #22, !dbg !13567
  br label %7, !dbg !13568

7:                                                ; preds = %3, %1
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13569
  %9 = icmp eq %struct.k_thread* %8, %0, !dbg !13570
  %10 = zext i1 %9 to i32, !dbg !13570
  tail call fastcc void @update_cache(i32 noundef %10) #21, !dbg !13571
  ret void, !dbg !13572
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !13573 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13575, metadata !DIExpression()), !dbg !13576
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13577
  %3 = load i8, i8* %2, align 1, !dbg !13578
  %4 = or i8 %3, 2, !dbg !13578
  store i8 %4, i8* %2, align 1, !dbg !13578
  ret void, !dbg !13579
}

; Function Attrs: alwaysinline nounwind optsize
define dso_local void @z_unpend_thread_no_timeout(%struct.k_thread* noundef %0) local_unnamed_addr #18 !dbg !13580 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13582, metadata !DIExpression()), !dbg !13586
  call void @llvm.dbg.value(metadata i32 0, metadata !13583, metadata !DIExpression()), !dbg !13587
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !12470, metadata !DIExpression()) #20, !dbg !13588
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #20, !dbg !13590, !srcloc !12485
  call void @llvm.dbg.value(metadata i32 undef, metadata !12482, metadata !DIExpression()) #20, !dbg !13592
  call void @llvm.dbg.value(metadata i32 undef, metadata !12483, metadata !DIExpression()) #20, !dbg !13592
  call void @llvm.dbg.value(metadata i32 undef, metadata !12476, metadata !DIExpression()) #20, !dbg !13588
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13593
  br i1 %3, label %5, label %4, !dbg !13594

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.243, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 148) #22, !dbg !13595
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.245, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13595
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 148) #22, !dbg !13595
  unreachable, !dbg !13595

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !12482, metadata !DIExpression()) #20, !dbg !13592
  call void @llvm.dbg.value(metadata i32 undef, metadata !12476, metadata !DIExpression()) #20, !dbg !13588
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13596
  call void @llvm.dbg.value(metadata i32 undef, metadata !13585, metadata !DIExpression()), !dbg !13587
  call void @llvm.dbg.value(metadata i32 undef, metadata !13583, metadata !DIExpression()), !dbg !13587
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #21, !dbg !13597
  call void @llvm.dbg.value(metadata i32 undef, metadata !12504, metadata !DIExpression()) #20, !dbg !13600
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !12509, metadata !DIExpression()) #20, !dbg !13600
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13602
  br i1 %6, label %8, label %7, !dbg !13603

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.246, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 194) #22, !dbg !13604
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.247, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13604
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 194) #22, !dbg !13604
  unreachable, !dbg !13604

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !13590
  call void @llvm.dbg.value(metadata i32 %9, metadata !12482, metadata !DIExpression()) #20, !dbg !13592
  call void @llvm.dbg.value(metadata i32 %9, metadata !12476, metadata !DIExpression()) #20, !dbg !13588
  call void @llvm.dbg.value(metadata i32 %9, metadata !13585, metadata !DIExpression()), !dbg !13587
  call void @llvm.dbg.value(metadata i32 undef, metadata !12504, metadata !DIExpression()) #20, !dbg !13600
  call void @llvm.dbg.value(metadata i32 undef, metadata !12518, metadata !DIExpression()) #20, !dbg !13605
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #20, !dbg !13607, !srcloc !12524
  call void @llvm.dbg.value(metadata i32 1, metadata !13583, metadata !DIExpression()), !dbg !13587
  call void @llvm.dbg.value(metadata i32 undef, metadata !13583, metadata !DIExpression()), !dbg !13587
  ret void, !dbg !13608
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr_irqlock(i32 noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !13609 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !13615, metadata !DIExpression()), !dbg !13620
  call void @llvm.dbg.value(metadata i32 %0, metadata !13613, metadata !DIExpression()), !dbg !13620
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !13614, metadata !DIExpression()), !dbg !13620
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13621
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %4, %union.anon* noundef %1, [1 x i64] %2) #21, !dbg !13622
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13623
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !13624
  %6 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #21, !dbg !13625
  call void @llvm.dbg.value(metadata i32 %6, metadata !13616, metadata !DIExpression()), !dbg !13620
  call void @llvm.dbg.value(metadata i32 0, metadata !13617, metadata !DIExpression()), !dbg !13626
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !12470, metadata !DIExpression()) #20, !dbg !13627
  %7 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #20, !dbg !13629, !srcloc !12485
  call void @llvm.dbg.value(metadata i32 undef, metadata !12482, metadata !DIExpression()) #20, !dbg !13631
  call void @llvm.dbg.value(metadata i32 undef, metadata !12483, metadata !DIExpression()) #20, !dbg !13631
  call void @llvm.dbg.value(metadata i32 undef, metadata !12476, metadata !DIExpression()) #20, !dbg !13627
  %8 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13632
  br i1 %8, label %10, label %9, !dbg !13633

9:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.243, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 148) #22, !dbg !13634
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.245, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13634
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 148) #22, !dbg !13634
  unreachable, !dbg !13634

10:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !12482, metadata !DIExpression()) #20, !dbg !13631
  call void @llvm.dbg.value(metadata i32 undef, metadata !12476, metadata !DIExpression()) #20, !dbg !13627
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13635
  call void @llvm.dbg.value(metadata i32 undef, metadata !13619, metadata !DIExpression()), !dbg !13626
  call void @llvm.dbg.value(metadata i32 undef, metadata !13617, metadata !DIExpression()), !dbg !13626
  %11 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !13636
  %12 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13640
  %13 = icmp eq %struct.k_thread* %11, %12, !dbg !13641
  br i1 %13, label %14, label %15, !dbg !13642

14:                                               ; preds = %10
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !13643
  br label %15, !dbg !13645

15:                                               ; preds = %10, %14
  call void @llvm.dbg.value(metadata i32 undef, metadata !12504, metadata !DIExpression()) #20, !dbg !13646
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !12509, metadata !DIExpression()) #20, !dbg !13646
  %16 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13648
  br i1 %16, label %18, label %17, !dbg !13649

17:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.246, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 194) #22, !dbg !13650
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.247, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13650
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 194) #22, !dbg !13650
  unreachable, !dbg !13650

18:                                               ; preds = %15
  %19 = extractvalue { i32, i32 } %7, 0, !dbg !13629
  call void @llvm.dbg.value(metadata i32 %19, metadata !12482, metadata !DIExpression()) #20, !dbg !13631
  call void @llvm.dbg.value(metadata i32 %19, metadata !12476, metadata !DIExpression()) #20, !dbg !13627
  call void @llvm.dbg.value(metadata i32 %19, metadata !13619, metadata !DIExpression()), !dbg !13626
  call void @llvm.dbg.value(metadata i32 undef, metadata !12504, metadata !DIExpression()) #20, !dbg !13646
  call void @llvm.dbg.value(metadata i32 undef, metadata !12518, metadata !DIExpression()) #20, !dbg !13651
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %19) #20, !dbg !13653, !srcloc !12524
  call void @llvm.dbg.value(metadata i32 1, metadata !13617, metadata !DIExpression()), !dbg !13626
  call void @llvm.dbg.value(metadata i32 undef, metadata !13617, metadata !DIExpression()), !dbg !13626
  ret i32 %6, !dbg !13654
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr(%struct.k_spinlock* noundef %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !13655 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !13660, metadata !DIExpression()), !dbg !13663
  call void @llvm.dbg.value(metadata i64 undef, metadata !13662, metadata !DIExpression()), !dbg !13663
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !13659, metadata !DIExpression()), !dbg !13663
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !13661, metadata !DIExpression()), !dbg !13663
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13664
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !13665
  %6 = icmp eq %struct.k_spinlock* %0, @sched_spinlock, !dbg !13666
  br i1 %6, label %7, label %8, !dbg !13669

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3.263, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.249, i32 0, i32 0), i32 noundef 846) #22, !dbg !13670
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.249, i32 0, i32 0), i32 noundef 846) #22, !dbg !13670
  unreachable, !dbg !13670

8:                                                ; preds = %4
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !12470, metadata !DIExpression()) #20, !dbg !13672
  %9 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #20, !dbg !13674, !srcloc !12485
  call void @llvm.dbg.value(metadata i32 undef, metadata !12482, metadata !DIExpression()) #20, !dbg !13676
  call void @llvm.dbg.value(metadata i32 undef, metadata !12483, metadata !DIExpression()) #20, !dbg !13676
  call void @llvm.dbg.value(metadata i32 undef, metadata !12476, metadata !DIExpression()) #20, !dbg !13672
  %10 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13677
  br i1 %10, label %12, label %11, !dbg !13678

11:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.243, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 148) #22, !dbg !13679
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.245, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13679
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 148) #22, !dbg !13679
  unreachable, !dbg !13679

12:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 undef, metadata !12482, metadata !DIExpression()) #20, !dbg !13676
  call void @llvm.dbg.value(metadata i32 undef, metadata !12476, metadata !DIExpression()) #20, !dbg !13672
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13680
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13681
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %13, %union.anon* noundef %2, [1 x i64] %3) #21, !dbg !13682
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !13157, metadata !DIExpression()) #20, !dbg !13683
  %14 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #22, !dbg !13685
  br i1 %14, label %16, label %15, !dbg !13686

15:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.246, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 225) #22, !dbg !13687
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.247, i32 0, i32 0), %struct.k_spinlock* noundef %0) #22, !dbg !13687
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 225) #22, !dbg !13687
  unreachable, !dbg !13687

16:                                               ; preds = %12
  call void @llvm.dbg.value(metadata i32 undef, metadata !13148, metadata !DIExpression()) #20, !dbg !13688
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13153, metadata !DIExpression()) #20, !dbg !13688
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13157, metadata !DIExpression()) #20, !dbg !13690
  %17 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13692
  br i1 %17, label %19, label %18, !dbg !13693

18:                                               ; preds = %16
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.246, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 225) #22, !dbg !13694
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.247, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13694
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 225) #22, !dbg !13694
  unreachable, !dbg !13694

19:                                               ; preds = %16
  %20 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %20, metadata !13148, metadata !DIExpression()) #20, !dbg !13688
  %21 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %20) #22, !dbg !13695
  ret i32 %21, !dbg !13696
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend1_no_timeout(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !13697 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !13701, metadata !DIExpression()), !dbg !13706
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !13702, metadata !DIExpression()), !dbg !13706
  call void @llvm.dbg.value(metadata i32 0, metadata !13703, metadata !DIExpression()), !dbg !13707
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !12470, metadata !DIExpression()) #20, !dbg !13708
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #20, !dbg !13710, !srcloc !12485
  call void @llvm.dbg.value(metadata i32 undef, metadata !12482, metadata !DIExpression()) #20, !dbg !13712
  call void @llvm.dbg.value(metadata i32 undef, metadata !12483, metadata !DIExpression()) #20, !dbg !13712
  call void @llvm.dbg.value(metadata i32 undef, metadata !12476, metadata !DIExpression()) #20, !dbg !13708
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13713
  br i1 %3, label %5, label %4, !dbg !13714

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.243, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 148) #22, !dbg !13715
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.245, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13715
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 148) #22, !dbg !13715
  unreachable, !dbg !13715

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !12482, metadata !DIExpression()) #20, !dbg !13712
  call void @llvm.dbg.value(metadata i32 undef, metadata !12476, metadata !DIExpression()) #20, !dbg !13708
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13716
  call void @llvm.dbg.value(metadata i32 undef, metadata !13705, metadata !DIExpression()), !dbg !13707
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !13702, metadata !DIExpression()), !dbg !13706
  call void @llvm.dbg.value(metadata i32 undef, metadata !13703, metadata !DIExpression()), !dbg !13707
  %6 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %7 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %6) #21, !dbg !13717
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !13702, metadata !DIExpression()), !dbg !13706
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !13720
  br i1 %8, label %10, label %9, !dbg !13722

9:                                                ; preds = %5
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %7) #21, !dbg !13723
  br label %10, !dbg !13725

10:                                               ; preds = %5, %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !12504, metadata !DIExpression()) #20, !dbg !13726
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !12509, metadata !DIExpression()) #20, !dbg !13726
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13728
  br i1 %11, label %13, label %12, !dbg !13729

12:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.246, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 194) #22, !dbg !13730
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.247, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13730
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 194) #22, !dbg !13730
  unreachable, !dbg !13730

13:                                               ; preds = %10
  %14 = extractvalue { i32, i32 } %2, 0, !dbg !13710
  call void @llvm.dbg.value(metadata i32 %14, metadata !12482, metadata !DIExpression()) #20, !dbg !13712
  call void @llvm.dbg.value(metadata i32 %14, metadata !12476, metadata !DIExpression()) #20, !dbg !13708
  call void @llvm.dbg.value(metadata i32 %14, metadata !13705, metadata !DIExpression()), !dbg !13707
  call void @llvm.dbg.value(metadata i32 undef, metadata !12504, metadata !DIExpression()) #20, !dbg !13726
  call void @llvm.dbg.value(metadata i32 undef, metadata !12518, metadata !DIExpression()) #20, !dbg !13731
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #20, !dbg !13733, !srcloc !12524
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !13702, metadata !DIExpression()), !dbg !13706
  call void @llvm.dbg.value(metadata i32 undef, metadata !13703, metadata !DIExpression()), !dbg !13707
  ret %struct.k_thread* %7, !dbg !13734
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !13735 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !13737, metadata !DIExpression()), !dbg !13742
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !13738, metadata !DIExpression()), !dbg !13742
  call void @llvm.dbg.value(metadata i32 0, metadata !13739, metadata !DIExpression()), !dbg !13743
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !12470, metadata !DIExpression()) #20, !dbg !13744
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #20, !dbg !13746, !srcloc !12485
  call void @llvm.dbg.value(metadata i32 undef, metadata !12482, metadata !DIExpression()) #20, !dbg !13748
  call void @llvm.dbg.value(metadata i32 undef, metadata !12483, metadata !DIExpression()) #20, !dbg !13748
  call void @llvm.dbg.value(metadata i32 undef, metadata !12476, metadata !DIExpression()) #20, !dbg !13744
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13749
  br i1 %3, label %5, label %4, !dbg !13750

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.243, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 148) #22, !dbg !13751
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.245, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13751
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 148) #22, !dbg !13751
  unreachable, !dbg !13751

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !12482, metadata !DIExpression()) #20, !dbg !13748
  call void @llvm.dbg.value(metadata i32 undef, metadata !12476, metadata !DIExpression()) #20, !dbg !13744
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13752
  call void @llvm.dbg.value(metadata i32 undef, metadata !13741, metadata !DIExpression()), !dbg !13743
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !13738, metadata !DIExpression()), !dbg !13742
  call void @llvm.dbg.value(metadata i32 undef, metadata !13739, metadata !DIExpression()), !dbg !13743
  %6 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %7 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %6) #21, !dbg !13753
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !13738, metadata !DIExpression()), !dbg !13742
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !13756
  br i1 %8, label %11, label %9, !dbg !13758

9:                                                ; preds = %5
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %7) #21, !dbg !13759
  %10 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %7) #21, !dbg !13761
  br label %11, !dbg !13762

11:                                               ; preds = %5, %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !12504, metadata !DIExpression()) #20, !dbg !13763
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !12509, metadata !DIExpression()) #20, !dbg !13763
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13765
  br i1 %12, label %14, label %13, !dbg !13766

13:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.246, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 194) #22, !dbg !13767
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.247, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13767
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 194) #22, !dbg !13767
  unreachable, !dbg !13767

14:                                               ; preds = %11
  %15 = extractvalue { i32, i32 } %2, 0, !dbg !13746
  call void @llvm.dbg.value(metadata i32 %15, metadata !12482, metadata !DIExpression()) #20, !dbg !13748
  call void @llvm.dbg.value(metadata i32 %15, metadata !12476, metadata !DIExpression()) #20, !dbg !13744
  call void @llvm.dbg.value(metadata i32 %15, metadata !13741, metadata !DIExpression()), !dbg !13743
  call void @llvm.dbg.value(metadata i32 undef, metadata !12504, metadata !DIExpression()) #20, !dbg !13763
  call void @llvm.dbg.value(metadata i32 undef, metadata !12518, metadata !DIExpression()) #20, !dbg !13768
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %15) #20, !dbg !13770, !srcloc !12524
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !13738, metadata !DIExpression()), !dbg !13742
  call void @llvm.dbg.value(metadata i32 undef, metadata !13739, metadata !DIExpression()), !dbg !13743
  ret %struct.k_thread* %7, !dbg !13771
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_unpend_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !13772 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13774, metadata !DIExpression()), !dbg !13775
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13582, metadata !DIExpression()) #20, !dbg !13776
  call void @llvm.dbg.value(metadata i32 0, metadata !13583, metadata !DIExpression()) #20, !dbg !13778
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !12470, metadata !DIExpression()) #20, !dbg !13779
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #20, !dbg !13781, !srcloc !12485
  call void @llvm.dbg.value(metadata i32 undef, metadata !12482, metadata !DIExpression()) #20, !dbg !13783
  call void @llvm.dbg.value(metadata i32 undef, metadata !12483, metadata !DIExpression()) #20, !dbg !13783
  call void @llvm.dbg.value(metadata i32 undef, metadata !12476, metadata !DIExpression()) #20, !dbg !13779
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13784
  br i1 %3, label %5, label %4, !dbg !13785

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.243, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 148) #22, !dbg !13786
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.245, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13786
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 148) #22, !dbg !13786
  unreachable, !dbg !13786

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !12482, metadata !DIExpression()) #20, !dbg !13783
  call void @llvm.dbg.value(metadata i32 undef, metadata !12476, metadata !DIExpression()) #20, !dbg !13779
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13787
  call void @llvm.dbg.value(metadata i32 undef, metadata !13585, metadata !DIExpression()) #20, !dbg !13778
  call void @llvm.dbg.value(metadata i32 undef, metadata !13583, metadata !DIExpression()) #20, !dbg !13778
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #22, !dbg !13788
  call void @llvm.dbg.value(metadata i32 undef, metadata !12504, metadata !DIExpression()) #20, !dbg !13789
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !12509, metadata !DIExpression()) #20, !dbg !13789
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13791
  br i1 %6, label %8, label %7, !dbg !13792

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.246, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 194) #22, !dbg !13793
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.247, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13793
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 194) #22, !dbg !13793
  unreachable, !dbg !13793

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !13781
  call void @llvm.dbg.value(metadata i32 %9, metadata !12482, metadata !DIExpression()) #20, !dbg !13783
  call void @llvm.dbg.value(metadata i32 %9, metadata !12476, metadata !DIExpression()) #20, !dbg !13779
  call void @llvm.dbg.value(metadata i32 %9, metadata !13585, metadata !DIExpression()) #20, !dbg !13778
  call void @llvm.dbg.value(metadata i32 undef, metadata !12504, metadata !DIExpression()) #20, !dbg !13789
  call void @llvm.dbg.value(metadata i32 undef, metadata !12518, metadata !DIExpression()) #20, !dbg !13794
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #20, !dbg !13796, !srcloc !12524
  call void @llvm.dbg.value(metadata i32 1, metadata !13583, metadata !DIExpression()) #20, !dbg !13778
  call void @llvm.dbg.value(metadata i32 undef, metadata !13583, metadata !DIExpression()) #20, !dbg !13778
  %10 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #21, !dbg !13797
  ret void, !dbg !13798
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !13799 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13801, metadata !DIExpression()), !dbg !13807
  call void @llvm.dbg.value(metadata i32 %1, metadata !13802, metadata !DIExpression()), !dbg !13807
  call void @llvm.dbg.value(metadata i8 0, metadata !13803, metadata !DIExpression()), !dbg !13807
  call void @llvm.dbg.value(metadata i32 0, metadata !13804, metadata !DIExpression()), !dbg !13808
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !12470, metadata !DIExpression()) #20, !dbg !13809
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #20, !dbg !13811, !srcloc !12485
  call void @llvm.dbg.value(metadata i32 undef, metadata !12482, metadata !DIExpression()) #20, !dbg !13813
  call void @llvm.dbg.value(metadata i32 undef, metadata !12483, metadata !DIExpression()) #20, !dbg !13813
  call void @llvm.dbg.value(metadata i32 undef, metadata !12476, metadata !DIExpression()) #20, !dbg !13809
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13814
  br i1 %4, label %6, label %5, !dbg !13815

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.243, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 148) #22, !dbg !13816
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.245, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13816
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 148) #22, !dbg !13816
  unreachable, !dbg !13816

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !12482, metadata !DIExpression()) #20, !dbg !13813
  call void @llvm.dbg.value(metadata i32 undef, metadata !12476, metadata !DIExpression()) #20, !dbg !13809
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13817
  call void @llvm.dbg.value(metadata i32 undef, metadata !13806, metadata !DIExpression()), !dbg !13808
  call void @llvm.dbg.value(metadata i8 poison, metadata !13803, metadata !DIExpression()), !dbg !13807
  call void @llvm.dbg.value(metadata i32 undef, metadata !13804, metadata !DIExpression()), !dbg !13808
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0
  %9 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #21, !dbg !13818
  call void @llvm.dbg.value(metadata i1 %9, metadata !13803, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13807
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4
  %11 = bitcast %union.anon.2* %10 to i8*
  %12 = trunc i32 %1 to i8
  br i1 %9, label %13, label %34, !dbg !13821

13:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12662, metadata !DIExpression()) #20, !dbg !13822
  %14 = load i8, i8* %7, align 1, !dbg !13828
  %15 = and i8 %14, 127, !dbg !13828
  store i8 %15, i8* %7, align 1, !dbg !13828
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12670, metadata !DIExpression()) #20, !dbg !13829
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #22, !dbg !13831
  store i8 %12, i8* %11, align 2, !dbg !13832
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12679, metadata !DIExpression()) #20, !dbg !13833
  %16 = load i8, i8* %7, align 1, !dbg !13835
  %17 = or i8 %16, -128, !dbg !13835
  store i8 %17, i8* %7, align 1, !dbg !13835
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12686, metadata !DIExpression()) #20, !dbg !13836
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !12693, metadata !DIExpression()) #20, !dbg !13838
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12699, metadata !DIExpression()) #20, !dbg !13838
  %18 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #22, !dbg !13840
  br i1 %18, label %19, label %20, !dbg !13841

19:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.249, i32 0, i32 0), i32 noundef 186) #22, !dbg !13842
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.249, i32 0, i32 0), i32 noundef 186) #22, !dbg !13842
  unreachable, !dbg !13842

20:                                               ; preds = %13
  %21 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #22, !dbg !13843
  call void @llvm.dbg.value(metadata %struct._dnode* %21, metadata !12700, metadata !DIExpression()) #20, !dbg !13838
  %22 = icmp eq %struct._dnode* %21, null, !dbg !13844
  br i1 %22, label %32, label %23, !dbg !13843

23:                                               ; preds = %20, %29
  %24 = phi %struct._dnode* [ %30, %29 ], [ %21, %20 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !12700, metadata !DIExpression()) #20, !dbg !13838
  %25 = bitcast %struct._dnode* %24 to %struct.k_thread*, !dbg !13845
  call void @llvm.dbg.value(metadata %struct.k_thread* %25, metadata !12700, metadata !DIExpression()) #20, !dbg !13838
  %26 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %25) #22, !dbg !13846
  %27 = icmp sgt i32 %26, 0, !dbg !13847
  br i1 %27, label %28, label %29, !dbg !13848

28:                                               ; preds = %23
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %24, %struct._dnode* noundef %8) #22, !dbg !13849
  br label %33, !dbg !13850

29:                                               ; preds = %23
  %30 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %24) #22, !dbg !13844
  call void @llvm.dbg.value(metadata %struct._dnode* %30, metadata !12700, metadata !DIExpression()) #20, !dbg !13838
  %31 = icmp eq %struct._dnode* %30, null, !dbg !13844
  br i1 %31, label %32, label %23, !dbg !13843, !llvm.loop !13851

32:                                               ; preds = %29, %20
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %8) #22, !dbg !13853
  br label %33, !dbg !13854

33:                                               ; preds = %28, %32
  tail call fastcc void @update_cache(i32 noundef 1) #21, !dbg !13855
  br label %35, !dbg !13856

34:                                               ; preds = %6
  store i8 %12, i8* %11, align 2, !dbg !13857
  br label %35

35:                                               ; preds = %33, %34
  call void @llvm.dbg.value(metadata i32 undef, metadata !12504, metadata !DIExpression()) #20, !dbg !13859
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !12509, metadata !DIExpression()) #20, !dbg !13859
  %36 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13861
  br i1 %36, label %38, label %37, !dbg !13862

37:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.246, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 194) #22, !dbg !13863
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.247, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13863
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 194) #22, !dbg !13863
  unreachable, !dbg !13863

38:                                               ; preds = %35
  %39 = extractvalue { i32, i32 } %3, 0, !dbg !13811
  call void @llvm.dbg.value(metadata i32 %39, metadata !12482, metadata !DIExpression()) #20, !dbg !13813
  call void @llvm.dbg.value(metadata i32 %39, metadata !12476, metadata !DIExpression()) #20, !dbg !13809
  call void @llvm.dbg.value(metadata i32 %39, metadata !13806, metadata !DIExpression()), !dbg !13808
  call void @llvm.dbg.value(metadata i32 undef, metadata !12504, metadata !DIExpression()) #20, !dbg !13859
  call void @llvm.dbg.value(metadata i32 undef, metadata !12518, metadata !DIExpression()) #20, !dbg !13864
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %39) #20, !dbg !13866, !srcloc !12524
  call void @llvm.dbg.value(metadata i8 poison, metadata !13803, metadata !DIExpression()), !dbg !13807
  call void @llvm.dbg.value(metadata i32 undef, metadata !13804, metadata !DIExpression()), !dbg !13808
  ret i1 %9, !dbg !13867
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !13868 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13872, metadata !DIExpression()), !dbg !13875
  call void @llvm.dbg.value(metadata i32 %1, metadata !13873, metadata !DIExpression()), !dbg !13875
  %3 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) #21, !dbg !13876
  call void @llvm.dbg.value(metadata i1 %3, metadata !13874, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13875
  br i1 %3, label %4, label %12, !dbg !13877

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13879
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !13880
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !13880
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !13880
  %9 = load i8, i8* %8, align 1, !dbg !13880
  %10 = icmp eq i8 %9, 0, !dbg !13881
  br i1 %10, label %11, label %12, !dbg !13882

11:                                               ; preds = %4
  tail call fastcc void @z_reschedule_unlocked() #21, !dbg !13883
  br label %12, !dbg !13885

12:                                               ; preds = %11, %4, %2
  ret void, !dbg !13886
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_lock() local_unnamed_addr #1 !dbg !13887 {
  call void @llvm.dbg.value(metadata i32 0, metadata !13889, metadata !DIExpression()), !dbg !13892
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !12470, metadata !DIExpression()) #20, !dbg !13893
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #20, !dbg !13895, !srcloc !12485
  call void @llvm.dbg.value(metadata i32 undef, metadata !12482, metadata !DIExpression()) #20, !dbg !13897
  call void @llvm.dbg.value(metadata i32 undef, metadata !12483, metadata !DIExpression()) #20, !dbg !13897
  call void @llvm.dbg.value(metadata i32 undef, metadata !12476, metadata !DIExpression()) #20, !dbg !13893
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13898
  br i1 %2, label %4, label %3, !dbg !13899

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.243, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 148) #22, !dbg !13900
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.245, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13900
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 148) #22, !dbg !13900
  unreachable, !dbg !13900

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !12482, metadata !DIExpression()) #20, !dbg !13897
  call void @llvm.dbg.value(metadata i32 undef, metadata !12476, metadata !DIExpression()) #20, !dbg !13893
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13901
  call void @llvm.dbg.value(metadata i32 undef, metadata !13891, metadata !DIExpression()), !dbg !13892
  call void @llvm.dbg.value(metadata i32 undef, metadata !13889, metadata !DIExpression()), !dbg !13892
  tail call fastcc void @z_sched_lock() #21, !dbg !13902
  call void @llvm.dbg.value(metadata i32 undef, metadata !12504, metadata !DIExpression()) #20, !dbg !13905
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !12509, metadata !DIExpression()) #20, !dbg !13905
  %5 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13907
  br i1 %5, label %7, label %6, !dbg !13908

6:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.246, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 194) #22, !dbg !13909
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.247, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13909
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 194) #22, !dbg !13909
  unreachable, !dbg !13909

7:                                                ; preds = %4
  %8 = extractvalue { i32, i32 } %1, 0, !dbg !13895
  call void @llvm.dbg.value(metadata i32 %8, metadata !12482, metadata !DIExpression()) #20, !dbg !13897
  call void @llvm.dbg.value(metadata i32 %8, metadata !12476, metadata !DIExpression()) #20, !dbg !13893
  call void @llvm.dbg.value(metadata i32 %8, metadata !13891, metadata !DIExpression()), !dbg !13892
  call void @llvm.dbg.value(metadata i32 undef, metadata !12504, metadata !DIExpression()) #20, !dbg !13905
  call void @llvm.dbg.value(metadata i32 undef, metadata !12518, metadata !DIExpression()) #20, !dbg !13910
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #20, !dbg !13912, !srcloc !12524
  call void @llvm.dbg.value(metadata i32 1, metadata !13889, metadata !DIExpression()), !dbg !13892
  call void @llvm.dbg.value(metadata i32 undef, metadata !13889, metadata !DIExpression()), !dbg !13892
  ret void, !dbg !13913
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sched_lock() unnamed_addr #1 !dbg !13914 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #20, !dbg !13915, !srcloc !13204
  call void @llvm.dbg.value(metadata i32 %1, metadata !13200, metadata !DIExpression()) #20, !dbg !13920
  %2 = icmp eq i32 %1, 0, !dbg !13921
  br i1 %2, label %4, label %3, !dbg !13922

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.267, i32 0, i32 0), i32 noundef 253) #22, !dbg !13923
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.251, i32 0, i32 0)) #22, !dbg !13923
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.267, i32 0, i32 0), i32 noundef 253) #22, !dbg !13923
  unreachable, !dbg !13923

4:                                                ; preds = %0
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13925
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !13925
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !13925
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !13925
  %9 = load i8, i8* %8, align 1, !dbg !13925
  %10 = icmp eq i8 %9, 1, !dbg !13925
  br i1 %10, label %11, label %12, !dbg !13928

11:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.22.268, i32 0, i32 0), i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.267, i32 0, i32 0), i32 noundef 254) #22, !dbg !13929
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.251, i32 0, i32 0)) #22, !dbg !13929
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.267, i32 0, i32 0), i32 noundef 254) #22, !dbg !13929
  unreachable, !dbg !13929

12:                                               ; preds = %4
  %13 = add i8 %9, -1, !dbg !13931
  store i8 %13, i8* %8, align 1, !dbg !13931
  tail call void asm sideeffect "", "~{memory}"() #20, !dbg !13932, !srcloc !13934
  ret void, !dbg !13935
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_unlock() local_unnamed_addr #1 !dbg !13936 {
  call void @llvm.dbg.value(metadata i32 0, metadata !13938, metadata !DIExpression()), !dbg !13941
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !12470, metadata !DIExpression()) #20, !dbg !13942
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #20, !dbg !13944, !srcloc !12485
  call void @llvm.dbg.value(metadata i32 undef, metadata !12482, metadata !DIExpression()) #20, !dbg !13946
  call void @llvm.dbg.value(metadata i32 undef, metadata !12483, metadata !DIExpression()) #20, !dbg !13946
  call void @llvm.dbg.value(metadata i32 undef, metadata !12476, metadata !DIExpression()) #20, !dbg !13942
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13947
  br i1 %2, label %4, label %3, !dbg !13948

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.243, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 148) #22, !dbg !13949
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.245, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13949
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 148) #22, !dbg !13949
  unreachable, !dbg !13949

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !12482, metadata !DIExpression()) #20, !dbg !13946
  call void @llvm.dbg.value(metadata i32 undef, metadata !12476, metadata !DIExpression()) #20, !dbg !13942
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13950
  call void @llvm.dbg.value(metadata i32 undef, metadata !13940, metadata !DIExpression()), !dbg !13941
  call void @llvm.dbg.value(metadata i32 undef, metadata !13938, metadata !DIExpression()), !dbg !13941
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13951
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !13951
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !13951
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !13951
  %9 = load i8, i8* %8, align 1, !dbg !13951
  %10 = icmp eq i8 %9, 0, !dbg !13951
  br i1 %10, label %11, label %12, !dbg !13956

11:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.4.271, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.249, i32 0, i32 0), i32 noundef 999) #22, !dbg !13957
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.251, i32 0, i32 0)) #22, !dbg !13957
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.249, i32 0, i32 0), i32 noundef 999) #22, !dbg !13957
  unreachable, !dbg !13957

12:                                               ; preds = %4
  %13 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #20, !dbg !13959, !srcloc !13204
  call void @llvm.dbg.value(metadata i32 %13, metadata !13200, metadata !DIExpression()) #20, !dbg !13964
  %14 = icmp eq i32 %13, 0, !dbg !13965
  br i1 %14, label %16, label %15, !dbg !13966

15:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.249, i32 0, i32 0), i32 noundef 1000) #22, !dbg !13967
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.251, i32 0, i32 0)) #22, !dbg !13967
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.249, i32 0, i32 0), i32 noundef 1000) #22, !dbg !13967
  unreachable, !dbg !13967

16:                                               ; preds = %12
  %17 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13969
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %17, i32 0, i32 0, i32 4, !dbg !13970
  %19 = bitcast %union.anon.2* %18 to %struct.device_state*, !dbg !13970
  %20 = getelementptr inbounds %struct.device_state, %struct.device_state* %19, i32 0, i32 1, !dbg !13970
  %21 = load i8, i8* %20, align 1, !dbg !13971
  %22 = add i8 %21, 1, !dbg !13971
  store i8 %22, i8* %20, align 1, !dbg !13971
  tail call fastcc void @update_cache(i32 noundef 0) #21, !dbg !13972
  call void @llvm.dbg.value(metadata i32 undef, metadata !12504, metadata !DIExpression()) #20, !dbg !13973
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !12509, metadata !DIExpression()) #20, !dbg !13973
  %23 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13975
  br i1 %23, label %25, label %24, !dbg !13976

24:                                               ; preds = %16
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.246, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 194) #22, !dbg !13977
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.247, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !13977
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 194) #22, !dbg !13977
  unreachable, !dbg !13977

25:                                               ; preds = %16
  %26 = extractvalue { i32, i32 } %1, 0, !dbg !13944
  call void @llvm.dbg.value(metadata i32 %26, metadata !12482, metadata !DIExpression()) #20, !dbg !13946
  call void @llvm.dbg.value(metadata i32 %26, metadata !12476, metadata !DIExpression()) #20, !dbg !13942
  call void @llvm.dbg.value(metadata i32 %26, metadata !13940, metadata !DIExpression()), !dbg !13941
  call void @llvm.dbg.value(metadata i32 undef, metadata !12504, metadata !DIExpression()) #20, !dbg !13973
  call void @llvm.dbg.value(metadata i32 undef, metadata !12518, metadata !DIExpression()) #20, !dbg !13978
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %26) #20, !dbg !13980, !srcloc !12524
  call void @llvm.dbg.value(metadata i32 1, metadata !13938, metadata !DIExpression()), !dbg !13941
  call void @llvm.dbg.value(metadata i32 undef, metadata !13938, metadata !DIExpression()), !dbg !13941
  tail call fastcc void @z_reschedule_unlocked() #21, !dbg !13981
  ret void, !dbg !13982
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_swap_next_thread() local_unnamed_addr #8 !dbg !13983 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !13984
  ret %struct.k_thread* %1, !dbg !13985
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_priq_rb_lessthan(%struct.rbnode* nocapture noundef readonly %0, %struct.rbnode* nocapture noundef readonly %1) local_unnamed_addr #8 !dbg !13986 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !13990, metadata !DIExpression()), !dbg !13995
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !13991, metadata !DIExpression()), !dbg !13995
  %3 = bitcast %struct.rbnode* %0 to %struct.k_thread*, !dbg !13996
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !13992, metadata !DIExpression()), !dbg !13995
  %4 = bitcast %struct.rbnode* %1 to %struct.k_thread*, !dbg !13997
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !13993, metadata !DIExpression()), !dbg !13995
  %5 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %3, %struct.k_thread* noundef %4) #21, !dbg !13998
  call void @llvm.dbg.value(metadata i32 %5, metadata !13994, metadata !DIExpression()), !dbg !13995
  %6 = icmp sgt i32 %5, 0, !dbg !13999
  br i1 %6, label %17, label %7, !dbg !14001

7:                                                ; preds = %2
  %8 = icmp slt i32 %5, 0, !dbg !14002
  br i1 %8, label %17, label %9, !dbg !14004

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 2, !dbg !14005
  %11 = bitcast %struct.rbnode* %10 to i32*, !dbg !14005
  %12 = load i32, i32* %11, align 8, !dbg !14005
  %13 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %1, i32 2, !dbg !14007
  %14 = bitcast %struct.rbnode* %13 to i32*, !dbg !14007
  %15 = load i32, i32* %14, align 8, !dbg !14007
  %16 = icmp ult i32 %12, %15, !dbg !14008
  br label %17, !dbg !14009

17:                                               ; preds = %7, %2, %9
  %18 = phi i1 [ %16, %9 ], [ true, %2 ], [ false, %7 ], !dbg !14010
  ret i1 %18, !dbg !14011
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_add(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !14012 {
  %3 = alloca %struct._rb_foreach, align 4
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !14029, metadata !DIExpression()), !dbg !14044
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14030, metadata !DIExpression()), !dbg !14044
  %4 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #21, !dbg !14045
  br i1 %4, label %5, label %6, !dbg !14048

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.249, i32 0, i32 0), i32 noundef 1179) #22, !dbg !14049
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.249, i32 0, i32 0), i32 noundef 1179) #22, !dbg !14049
  unreachable, !dbg !14049

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !14051
  %8 = load i32, i32* %7, align 4, !dbg !14052
  %9 = add nsw i32 %8, 1, !dbg !14052
  store i32 %9, i32* %7, align 4, !dbg !14052
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 5, !dbg !14053
  store i32 %8, i32* %10, align 8, !dbg !14054
  %11 = load i32, i32* %7, align 4, !dbg !14055
  %12 = icmp eq i32 %11, 0, !dbg !14056
  br i1 %12, label %13, label %35, !dbg !14057

13:                                               ; preds = %6
  %14 = bitcast %struct._rb_foreach* %3 to i8*, !dbg !14058
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %14) #20, !dbg !14058
  call void @llvm.dbg.declare(metadata %struct._rb_foreach* %3, metadata !14032, metadata !DIExpression()), !dbg !14058
  %15 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !14058
  %16 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 2, !dbg !14058
  %17 = load i32, i32* %16, align 4, !dbg !14058
  %18 = shl i32 %17, 2, !dbg !14058
  %19 = alloca i8, i32 %18, align 8, !dbg !14058
  %20 = bitcast %struct._rb_foreach* %3 to i8**, !dbg !14058
  store i8* %19, i8** %20, align 4, !dbg !14058
  %21 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 1, !dbg !14058
  %22 = alloca i8, i32 %17, align 8, !dbg !14058
  store i8* %22, i8** %21, align 4, !dbg !14058
  %23 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 2, !dbg !14058
  store i32 -1, i32* %23, align 4, !dbg !14058
  %24 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %15, %struct._rb_foreach* noundef nonnull %3) #22, !dbg !14059
  call void @llvm.dbg.value(metadata %struct.rbnode* %24, metadata !14041, metadata !DIExpression()), !dbg !14060
  call void @llvm.dbg.value(metadata %struct.rbnode* %24, metadata !14031, metadata !DIExpression()), !dbg !14044
  %25 = icmp eq %struct.rbnode* %24, null, !dbg !14061
  br i1 %25, label %26, label %27, !dbg !14058

26:                                               ; preds = %27, %13
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %14) #20, !dbg !14061
  br label %35, !dbg !14062

27:                                               ; preds = %13, %27
  %28 = phi %struct.rbnode* [ %33, %27 ], [ %24, %13 ]
  call void @llvm.dbg.value(metadata %struct.rbnode* %28, metadata !14031, metadata !DIExpression()), !dbg !14044
  %29 = load i32, i32* %7, align 4, !dbg !14063
  %30 = add nsw i32 %29, 1, !dbg !14063
  store i32 %30, i32* %7, align 4, !dbg !14063
  %31 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %28, i32 2, !dbg !14065
  %32 = bitcast %struct.rbnode* %31 to i32*, !dbg !14065
  store i32 %29, i32* %32, align 8, !dbg !14066
  %33 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %15, %struct._rb_foreach* noundef nonnull %3) #22, !dbg !14059
  call void @llvm.dbg.value(metadata %struct.rbnode* %33, metadata !14041, metadata !DIExpression()), !dbg !14060
  call void @llvm.dbg.value(metadata %struct.rbnode* %33, metadata !14031, metadata !DIExpression()), !dbg !14044
  %34 = icmp eq %struct.rbnode* %33, null, !dbg !14061
  br i1 %34, label %26, label %27, !dbg !14058, !llvm.loop !14067

35:                                               ; preds = %26, %6
  %36 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !14069
  %37 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !14070
  call void @rb_insert(%struct.rbtree* noundef %36, %struct.rbnode* noundef %37) #22, !dbg !14071
  ret void, !dbg !14072
}

; Function Attrs: optsize
declare !dbg !14073 dso_local %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef, %struct._rb_foreach* noundef) local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !14078 dso_local void @rb_insert(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_remove(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !14081 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !14083, metadata !DIExpression()), !dbg !14085
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14084, metadata !DIExpression()), !dbg !14085
  %3 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #21, !dbg !14086
  br i1 %3, label %4, label %5, !dbg !14089

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.249, i32 0, i32 0), i32 noundef 1200) #22, !dbg !14090
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.249, i32 0, i32 0), i32 noundef 1200) #22, !dbg !14090
  unreachable, !dbg !14090

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !14092
  %7 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !14093
  tail call void @rb_remove(%struct.rbtree* noundef %6, %struct.rbnode* noundef %7) #22, !dbg !14094
  %8 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 0, !dbg !14095
  %9 = load %struct.rbnode*, %struct.rbnode** %8, align 4, !dbg !14095
  %10 = icmp eq %struct.rbnode* %9, null, !dbg !14097
  br i1 %10, label %11, label %13, !dbg !14098

11:                                               ; preds = %5
  %12 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !14099
  store i32 0, i32* %12, align 4, !dbg !14101
  br label %13, !dbg !14102

13:                                               ; preds = %11, %5
  ret void, !dbg !14103
}

; Function Attrs: optsize
declare !dbg !14104 dso_local void @rb_remove(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_priq_rb_best(%struct._priq_rb* noundef %0) local_unnamed_addr #1 !dbg !14105 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !14109, metadata !DIExpression()), !dbg !14112
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14110, metadata !DIExpression()), !dbg !14112
  %2 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !14113
  %3 = tail call fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %2) #21, !dbg !14114
  call void @llvm.dbg.value(metadata %struct.rbnode* %3, metadata !14111, metadata !DIExpression()), !dbg !14112
  %4 = bitcast %struct.rbnode* %3 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !14110, metadata !DIExpression()), !dbg !14112
  ret %struct.k_thread* %4, !dbg !14115
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %0) unnamed_addr #1 !dbg !14116 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !14120, metadata !DIExpression()), !dbg !14121
  %2 = tail call %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef %0, i8 noundef zeroext 0) #22, !dbg !14122
  ret %struct.rbnode* %2, !dbg !14123
}

; Function Attrs: optsize
declare !dbg !14124 dso_local %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef, i8 noundef zeroext) local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_mq_best(%struct._priq_mq* noundef readonly %0) local_unnamed_addr #19 !dbg !14127 {
  call void @llvm.dbg.value(metadata %struct._priq_mq* %0, metadata !14137, metadata !DIExpression()), !dbg !14141
  %2 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 1, !dbg !14142
  %3 = load i32, i32* %2, align 4, !dbg !14142
  %4 = icmp eq i32 %3, 0, !dbg !14144
  br i1 %4, label %10, label %5, !dbg !14145

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14138, metadata !DIExpression()), !dbg !14141
  %6 = tail call i32 @llvm.cttz.i32(i32 %3, i1 true), !dbg !14146, !range !14147
  %7 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 0, i32 %6, !dbg !14148
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !14139, metadata !DIExpression()), !dbg !14141
  %8 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %7) #21, !dbg !14149
  call void @llvm.dbg.value(metadata %struct._dnode* %8, metadata !14140, metadata !DIExpression()), !dbg !14141
  %9 = bitcast %struct._dnode* %8 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !14138, metadata !DIExpression()), !dbg !14141
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi %struct.k_thread* [ %9, %5 ], [ null, %1 ], !dbg !14141
  ret %struct.k_thread* %11, !dbg !14150
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.cttz.i32(i32, i1 immarg) #3

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_unpend_all(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !14151 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !14155, metadata !DIExpression()), !dbg !14158
  call void @llvm.dbg.value(metadata i32 0, metadata !14156, metadata !DIExpression()), !dbg !14158
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #21, !dbg !14159
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14157, metadata !DIExpression()), !dbg !14158
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !14160
  br i1 %3, label %8, label %4, !dbg !14161

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %6, %4 ], [ %2, %1 ]
  tail call void @z_unpend_thread(%struct.k_thread* noundef nonnull %5) #21, !dbg !14162
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %5) #21, !dbg !14164
  call void @llvm.dbg.value(metadata i32 1, metadata !14156, metadata !DIExpression()), !dbg !14158
  %6 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #21, !dbg !14159
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !14157, metadata !DIExpression()), !dbg !14158
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !14160
  br i1 %7, label %8, label %4, !dbg !14161, !llvm.loop !14165

8:                                                ; preds = %4, %1
  %9 = phi i32 [ 0, %1 ], [ 1, %4 ], !dbg !14158
  ret i32 %9, !dbg !14167
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef readonly %0) unnamed_addr #8 !dbg !14168 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !14170, metadata !DIExpression()), !dbg !14171
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !14172
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %2) #21, !dbg !14173
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !14174
  ret %struct.k_thread* %4, !dbg !14175
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @init_ready_q(%struct._ready_q* noundef %0) local_unnamed_addr #7 !dbg !14176 {
  call void @llvm.dbg.value(metadata %struct._ready_q* %0, metadata !14185, metadata !DIExpression()), !dbg !14186
  %2 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %0, i32 0, i32 1, !dbg !14187
  tail call fastcc void @sys_dlist_init.272(%struct._dnode* noundef nonnull %2) #21, !dbg !14188
  ret void, !dbg !14189
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.272(%struct._dnode* noundef %0) unnamed_addr #7 !dbg !14190 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14194, metadata !DIExpression()), !dbg !14195
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14196
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !14197
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14198
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !14199
  ret void, !dbg !14200
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_init() local_unnamed_addr #1 !dbg !14201 {
  tail call void @init_ready_q(%struct._ready_q* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1)) #21, !dbg !14202
  tail call void @k_sched_time_slice_set(i32 noundef 0, i32 noundef 0) #21, !dbg !14203
  ret void, !dbg !14204
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_impl_k_thread_priority_get(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #8 !dbg !14205 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14210, metadata !DIExpression()), !dbg !14211
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !14212
  %3 = bitcast %union.anon.2* %2 to i8*, !dbg !14212
  %4 = load i8, i8* %3, align 2, !dbg !14212
  %5 = sext i8 %4 to i32, !dbg !14213
  ret i32 %5, !dbg !14214
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !14215 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14219, metadata !DIExpression()), !dbg !14222
  call void @llvm.dbg.value(metadata i32 %1, metadata !14220, metadata !DIExpression()), !dbg !14222
  %3 = add i32 %1, 16, !dbg !14223
  %4 = icmp ult i32 %3, 31, !dbg !14223
  br i1 %4, label %6, label %5, !dbg !14223

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([134 x i8], [134 x i8]* @.str.8.275, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.249, i32 0, i32 0), i32 noundef 1331) #22, !dbg !14227
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.9.276, i32 0, i32 0), i32 noundef %1, i32 noundef 14, i32 noundef -16) #22, !dbg !14227
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.249, i32 0, i32 0), i32 noundef 1331) #22, !dbg !14227
  unreachable, !dbg !14227

6:                                                ; preds = %2
  %7 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #20, !dbg !14229, !srcloc !13204
  call void @llvm.dbg.value(metadata i32 %7, metadata !13200, metadata !DIExpression()) #20, !dbg !14234
  %8 = icmp eq i32 %7, 0, !dbg !14235
  br i1 %8, label %10, label %9, !dbg !14236

9:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.249, i32 0, i32 0), i32 noundef 1332) #22, !dbg !14237
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.251, i32 0, i32 0)) #22, !dbg !14237
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.249, i32 0, i32 0), i32 noundef 1332) #22, !dbg !14237
  unreachable, !dbg !14237

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14221, metadata !DIExpression()), !dbg !14222
  tail call void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) #21, !dbg !14239
  ret void, !dbg !14240
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_can_yield() local_unnamed_addr #1 !dbg !14241 {
  %1 = tail call fastcc zeroext i1 @k_is_pre_kernel() #21, !dbg !14242
  br i1 %1, label %8, label %2, !dbg !14243

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @k_is_in_isr() #22, !dbg !14244
  br i1 %3, label %8, label %4, !dbg !14245

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14246
  %6 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %5) #21, !dbg !14247
  %7 = xor i1 %6, true, !dbg !14245
  br label %8, !dbg !14245

8:                                                ; preds = %4, %2, %0
  %9 = phi i1 [ false, %2 ], [ false, %0 ], [ %7, %4 ]
  ret i1 %9, !dbg !14248
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @k_is_pre_kernel() unnamed_addr #8 !dbg !14249 {
  %1 = load i8, i8* @z_sys_post_kernel, align 1, !dbg !14250, !range !6332
  %2 = icmp eq i8 %1, 0, !dbg !14250
  ret i1 %2, !dbg !14251
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_yield() local_unnamed_addr #1 !dbg !14252 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #20, !dbg !14255, !srcloc !13204
  call void @llvm.dbg.value(metadata i32 %1, metadata !13200, metadata !DIExpression()) #20, !dbg !14260
  %2 = icmp eq i32 %1, 0, !dbg !14261
  br i1 %2, label %4, label %3, !dbg !14262

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.249, i32 0, i32 0), i32 noundef 1392) #22, !dbg !14263
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.251, i32 0, i32 0)) #22, !dbg !14263
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.249, i32 0, i32 0), i32 noundef 1392) #22, !dbg !14263
  unreachable, !dbg !14263

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !12470, metadata !DIExpression()) #20, !dbg !14265
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #20, !dbg !14267, !srcloc !12485
  call void @llvm.dbg.value(metadata i32 undef, metadata !12482, metadata !DIExpression()) #20, !dbg !14269
  call void @llvm.dbg.value(metadata i32 undef, metadata !12483, metadata !DIExpression()) #20, !dbg !14269
  call void @llvm.dbg.value(metadata i32 undef, metadata !12476, metadata !DIExpression()) #20, !dbg !14265
  %6 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !14270
  br i1 %6, label %8, label %7, !dbg !14271

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.243, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 148) #22, !dbg !14272
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.245, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !14272
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 148) #22, !dbg !14272
  unreachable, !dbg !14272

8:                                                ; preds = %4
  call void @llvm.dbg.value(metadata i32 undef, metadata !12482, metadata !DIExpression()) #20, !dbg !14269
  call void @llvm.dbg.value(metadata i32 undef, metadata !12476, metadata !DIExpression()) #20, !dbg !14265
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !14273
  call void @llvm.dbg.value(metadata i32 undef, metadata !14254, metadata !DIExpression()), !dbg !14274
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14275
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !12662, metadata !DIExpression()) #20, !dbg !14278
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 3, !dbg !14280
  %11 = load i8, i8* %10, align 1, !dbg !14281
  %12 = and i8 %11, 127, !dbg !14281
  store i8 %12, i8* %10, align 1, !dbg !14281
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !12670, metadata !DIExpression()) #20, !dbg !14282
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %9) #22, !dbg !14284
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14285
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !12679, metadata !DIExpression()) #20, !dbg !14286
  %14 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 3, !dbg !14288
  %15 = load i8, i8* %14, align 1, !dbg !14289
  %16 = or i8 %15, -128, !dbg !14289
  store i8 %16, i8* %14, align 1, !dbg !14289
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !12686, metadata !DIExpression()) #20, !dbg !14290
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !12693, metadata !DIExpression()) #20, !dbg !14292
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !12699, metadata !DIExpression()) #20, !dbg !14292
  %17 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %13) #22, !dbg !14294
  br i1 %17, label %18, label %19, !dbg !14295

18:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.248, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.249, i32 0, i32 0), i32 noundef 186) #22, !dbg !14296
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.249, i32 0, i32 0), i32 noundef 186) #22, !dbg !14296
  unreachable, !dbg !14296

19:                                               ; preds = %8
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #22, !dbg !14297
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !12700, metadata !DIExpression()) #20, !dbg !14292
  %21 = icmp eq %struct._dnode* %20, null, !dbg !14298
  br i1 %21, label %32, label %22, !dbg !14297

22:                                               ; preds = %19, %29
  %23 = phi %struct._dnode* [ %30, %29 ], [ %20, %19 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %23, metadata !12700, metadata !DIExpression()) #20, !dbg !14292
  %24 = bitcast %struct._dnode* %23 to %struct.k_thread*, !dbg !14299
  call void @llvm.dbg.value(metadata %struct.k_thread* %24, metadata !12700, metadata !DIExpression()) #20, !dbg !14292
  %25 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %13, %struct.k_thread* noundef nonnull %24) #22, !dbg !14300
  %26 = icmp sgt i32 %25, 0, !dbg !14301
  br i1 %26, label %27, label %29, !dbg !14302

27:                                               ; preds = %22
  %28 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 0, i32 0, !dbg !14303
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %23, %struct._dnode* noundef %28) #22, !dbg !14304
  br label %34, !dbg !14305

29:                                               ; preds = %22
  %30 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %23) #22, !dbg !14298
  call void @llvm.dbg.value(metadata %struct._dnode* %30, metadata !12700, metadata !DIExpression()) #20, !dbg !14292
  %31 = icmp eq %struct._dnode* %30, null, !dbg !14298
  br i1 %31, label %32, label %22, !dbg !14297, !llvm.loop !14306

32:                                               ; preds = %29, %19
  %33 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 0, i32 0, !dbg !14308
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %33) #22, !dbg !14309
  br label %34, !dbg !14310

34:                                               ; preds = %27, %32
  tail call fastcc void @update_cache(i32 noundef 1) #21, !dbg !14311
  call void @llvm.dbg.value(metadata i32 undef, metadata !13148, metadata !DIExpression()) #20, !dbg !14312
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13153, metadata !DIExpression()) #20, !dbg !14312
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13157, metadata !DIExpression()) #20, !dbg !14314
  %35 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !14316
  br i1 %35, label %37, label %36, !dbg !14317

36:                                               ; preds = %34
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.246, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 225) #22, !dbg !14318
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.247, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !14318
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 225) #22, !dbg !14318
  unreachable, !dbg !14318

37:                                               ; preds = %34
  %38 = extractvalue { i32, i32 } %5, 0, !dbg !14267
  call void @llvm.dbg.value(metadata i32 %38, metadata !12482, metadata !DIExpression()) #20, !dbg !14269
  call void @llvm.dbg.value(metadata i32 %38, metadata !12476, metadata !DIExpression()) #20, !dbg !14265
  call void @llvm.dbg.value(metadata i32 %38, metadata !14254, metadata !DIExpression()), !dbg !14274
  call void @llvm.dbg.value(metadata i32 undef, metadata !13148, metadata !DIExpression()) #20, !dbg !14312
  %39 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %38) #22, !dbg !14319
  ret void, !dbg !14320
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sleep([1 x i64] %0) local_unnamed_addr #1 !dbg !14321 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !14325, metadata !DIExpression()), !dbg !14328
  %3 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #20, !dbg !14329, !srcloc !13204
  call void @llvm.dbg.value(metadata i32 %3, metadata !13200, metadata !DIExpression()) #20, !dbg !14334
  %4 = icmp eq i32 %3, 0, !dbg !14335
  br i1 %4, label %6, label %5, !dbg !14336

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.249, i32 0, i32 0), i32 noundef 1463) #22, !dbg !14337
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.251, i32 0, i32 0)) #22, !dbg !14337
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.249, i32 0, i32 0), i32 noundef 1463) #22, !dbg !14337
  unreachable, !dbg !14337

6:                                                ; preds = %1
  %7 = icmp eq i64 %2, -1, !dbg !14339
  br i1 %7, label %8, label %10, !dbg !14341

8:                                                ; preds = %6
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14342
  tail call fastcc void @k_thread_suspend(%struct.k_thread* noundef %9) #21, !dbg !14344
  br label %15, !dbg !14345

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata i64 %2, metadata !14326, metadata !DIExpression()), !dbg !14328
  %11 = tail call fastcc i32 @z_tick_sleep(i64 noundef %2) #21, !dbg !14346
  %12 = sext i32 %11 to i64, !dbg !14346
  call void @llvm.dbg.value(metadata i64 %12, metadata !14326, metadata !DIExpression()), !dbg !14328
  %13 = tail call fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %12) #21, !dbg !14347
  %14 = trunc i64 %13 to i32, !dbg !14347
  call void @llvm.dbg.value(metadata i32 %14, metadata !14327, metadata !DIExpression()), !dbg !14328
  br label %15

15:                                               ; preds = %10, %8
  %16 = phi i32 [ -1, %8 ], [ %14, %10 ], !dbg !14328
  ret i32 %16, !dbg !14348
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_suspend(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14349 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14353, metadata !DIExpression()), !dbg !14354
  tail call void asm sideeffect "", "~{memory}"() #20, !dbg !14355, !srcloc !14357
  tail call void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) #21, !dbg !14358
  ret void, !dbg !14359
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_tick_sleep(i64 noundef %0) unnamed_addr #1 !dbg !14360 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !14364, metadata !DIExpression()), !dbg !14368
  %2 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #20, !dbg !14369, !srcloc !13204
  call void @llvm.dbg.value(metadata i32 %2, metadata !13200, metadata !DIExpression()) #20, !dbg !14374
  %3 = icmp eq i32 %2, 0, !dbg !14375
  br i1 %3, label %5, label %4, !dbg !14376

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.249, i32 0, i32 0), i32 noundef 1420) #22, !dbg !14377
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.251, i32 0, i32 0)) #22, !dbg !14377
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.249, i32 0, i32 0), i32 noundef 1420) #22, !dbg !14377
  unreachable, !dbg !14377

5:                                                ; preds = %1
  %6 = icmp eq i64 %0, 0, !dbg !14379
  br i1 %6, label %7, label %8, !dbg !14381

7:                                                ; preds = %5
  tail call fastcc void @k_yield() #21, !dbg !14382
  br label %43, !dbg !14384

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i64 %0, metadata !14366, metadata !DIExpression()), !dbg !14368
  %9 = icmp sgt i64 %0, -3, !dbg !14385
  br i1 %9, label %10, label %14, !dbg !14387

10:                                               ; preds = %8
  %11 = tail call i32 @sys_clock_tick_get_32() #22, !dbg !14388
  %12 = trunc i64 %0 to i32, !dbg !14390
  %13 = add i32 %11, %12, !dbg !14390
  call void @llvm.dbg.value(metadata i32 %13, metadata !14365, metadata !DIExpression()), !dbg !14368
  br label %17, !dbg !14391

14:                                               ; preds = %8
  %15 = trunc i64 %0 to i32, !dbg !14392
  %16 = sub i32 -2, %15, !dbg !14392
  call void @llvm.dbg.value(metadata i32 %16, metadata !14365, metadata !DIExpression()), !dbg !14368
  br label %17

17:                                               ; preds = %14, %10
  %18 = phi i32 [ %13, %10 ], [ %16, %14 ], !dbg !14394
  call void @llvm.dbg.value(metadata i32 %18, metadata !14365, metadata !DIExpression()), !dbg !14368
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !12470, metadata !DIExpression()) #20, !dbg !14395
  %19 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #20, !dbg !14397, !srcloc !12485
  call void @llvm.dbg.value(metadata i32 undef, metadata !12482, metadata !DIExpression()) #20, !dbg !14399
  call void @llvm.dbg.value(metadata i32 undef, metadata !12483, metadata !DIExpression()) #20, !dbg !14399
  call void @llvm.dbg.value(metadata i32 undef, metadata !12476, metadata !DIExpression()) #20, !dbg !14395
  %20 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !14400
  br i1 %20, label %22, label %21, !dbg !14401

21:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.243, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 148) #22, !dbg !14402
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.245, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !14402
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 148) #22, !dbg !14402
  unreachable, !dbg !14402

22:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 undef, metadata !12482, metadata !DIExpression()) #20, !dbg !14399
  call void @llvm.dbg.value(metadata i32 undef, metadata !12476, metadata !DIExpression()) #20, !dbg !14395
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !14403
  call void @llvm.dbg.value(metadata i32 undef, metadata !14367, metadata !DIExpression()), !dbg !14368
  %23 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14404
  store %struct.k_thread* %23, %struct.k_thread** @pending_current, align 4, !dbg !14405
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %23) #21, !dbg !14406
  %24 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14407
  %25 = insertvalue [1 x i64] poison, i64 %0, 0, !dbg !14408
  tail call fastcc void @z_add_thread_timeout.259(%struct.k_thread* noundef %24, [1 x i64] %25) #21, !dbg !14408
  %26 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14409
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %26) #21, !dbg !14410
  call void @llvm.dbg.value(metadata i32 undef, metadata !13148, metadata !DIExpression()) #20, !dbg !14411
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13153, metadata !DIExpression()) #20, !dbg !14411
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13157, metadata !DIExpression()) #20, !dbg !14413
  %27 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !14415
  br i1 %27, label %29, label %28, !dbg !14416

28:                                               ; preds = %22
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.246, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 225) #22, !dbg !14417
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.247, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !14417
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 225) #22, !dbg !14417
  unreachable, !dbg !14417

29:                                               ; preds = %22
  %30 = extractvalue { i32, i32 } %19, 0, !dbg !14397
  call void @llvm.dbg.value(metadata i32 %30, metadata !12482, metadata !DIExpression()) #20, !dbg !14399
  call void @llvm.dbg.value(metadata i32 %30, metadata !12476, metadata !DIExpression()) #20, !dbg !14395
  call void @llvm.dbg.value(metadata i32 %30, metadata !14367, metadata !DIExpression()), !dbg !14368
  call void @llvm.dbg.value(metadata i32 undef, metadata !13148, metadata !DIExpression()) #20, !dbg !14411
  %31 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %30) #22, !dbg !14418
  %32 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14419
  %33 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %32, i32 noundef 16) #21, !dbg !14419
  br i1 %33, label %34, label %35, !dbg !14422

34:                                               ; preds = %29
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @.str.23.277, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.249, i32 0, i32 0), i32 noundef 1448) #22, !dbg !14423
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.251, i32 0, i32 0)) #22, !dbg !14423
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.249, i32 0, i32 0), i32 noundef 1448) #22, !dbg !14423
  unreachable, !dbg !14423

35:                                               ; preds = %29
  %36 = zext i32 %18 to i64, !dbg !14425
  %37 = tail call i32 @sys_clock_tick_get_32() #22, !dbg !14426
  %38 = zext i32 %37 to i64, !dbg !14426
  %39 = sub nsw i64 %36, %38, !dbg !14427
  call void @llvm.dbg.value(metadata i64 %39, metadata !14364, metadata !DIExpression()), !dbg !14368
  %40 = icmp sgt i64 %39, 0, !dbg !14428
  %41 = select i1 %40, i64 %39, i64 0, !dbg !14428
  %42 = trunc i64 %41 to i32, !dbg !14428
  br label %43

43:                                               ; preds = %35, %7
  %44 = phi i32 [ 0, %7 ], [ %42, %35 ], !dbg !14368
  ret i32 %44, !dbg !14429
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %0) unnamed_addr #2 !dbg !14430 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !14432, metadata !DIExpression()), !dbg !14433
  call void @llvm.dbg.value(metadata i64 %0, metadata !12530, metadata !DIExpression()), !dbg !14434
  call void @llvm.dbg.value(metadata i32 10000, metadata !12533, metadata !DIExpression()), !dbg !14434
  call void @llvm.dbg.value(metadata i32 1000, metadata !12534, metadata !DIExpression()), !dbg !14434
  call void @llvm.dbg.value(metadata i8 1, metadata !12535, metadata !DIExpression()), !dbg !14434
  call void @llvm.dbg.value(metadata i1 false, metadata !12536, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14434
  call void @llvm.dbg.value(metadata i1 false, metadata !12537, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14434
  call void @llvm.dbg.value(metadata i8 0, metadata !12538, metadata !DIExpression()), !dbg !14434
  call void @llvm.dbg.value(metadata i1 false, metadata !12539, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14434
  call void @llvm.dbg.value(metadata i1 true, metadata !12540, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14434
  call void @llvm.dbg.value(metadata i64 0, metadata !12541, metadata !DIExpression()), !dbg !14434
  call void @llvm.dbg.value(metadata i64 0, metadata !12541, metadata !DIExpression()), !dbg !14434
  call void @llvm.dbg.value(metadata i64 %0, metadata !12530, metadata !DIExpression()), !dbg !14434
  %2 = udiv i64 %0, 10, !dbg !14436
  ret i64 %2, !dbg !14440
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_yield() unnamed_addr #1 !dbg !14441 {
  tail call void asm sideeffect "", "~{memory}"() #20, !dbg !14442, !srcloc !14444
  tail call void @z_impl_k_yield() #21, !dbg !14445
  ret void, !dbg !14446
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_usleep(i32 noundef %0) local_unnamed_addr #1 !dbg !14447 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14451, metadata !DIExpression()), !dbg !14453
  %2 = sext i32 %0 to i64, !dbg !14454
  %3 = tail call fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %2) #21, !dbg !14455
  call void @llvm.dbg.value(metadata i64 %3, metadata !14452, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14453
  %4 = shl i64 %3, 32, !dbg !14456
  %5 = ashr exact i64 %4, 32, !dbg !14456
  %6 = tail call fastcc i32 @z_tick_sleep(i64 noundef %5) #21, !dbg !14457
  call void @llvm.dbg.value(metadata i32 %6, metadata !14452, metadata !DIExpression()), !dbg !14453
  %7 = sext i32 %6 to i64, !dbg !14458
  %8 = tail call fastcc i64 @k_ticks_to_us_floor64(i64 noundef %7) #21, !dbg !14459
  %9 = trunc i64 %8 to i32, !dbg !14459
  ret i32 %9, !dbg !14460
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %0) unnamed_addr #2 !dbg !14461 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !14463, metadata !DIExpression()), !dbg !14464
  call void @llvm.dbg.value(metadata i64 %0, metadata !12530, metadata !DIExpression()), !dbg !14465
  call void @llvm.dbg.value(metadata i32 1000000, metadata !12533, metadata !DIExpression()), !dbg !14465
  call void @llvm.dbg.value(metadata i32 10000, metadata !12534, metadata !DIExpression()), !dbg !14465
  call void @llvm.dbg.value(metadata i8 1, metadata !12535, metadata !DIExpression()), !dbg !14465
  call void @llvm.dbg.value(metadata i1 false, metadata !12536, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14465
  call void @llvm.dbg.value(metadata i1 true, metadata !12537, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14465
  call void @llvm.dbg.value(metadata i8 0, metadata !12538, metadata !DIExpression()), !dbg !14465
  call void @llvm.dbg.value(metadata i1 false, metadata !12539, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14465
  call void @llvm.dbg.value(metadata i1 true, metadata !12540, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14465
  call void @llvm.dbg.value(metadata i64 0, metadata !12541, metadata !DIExpression()), !dbg !14465
  call void @llvm.dbg.value(metadata i64 0, metadata !12541, metadata !DIExpression()), !dbg !14465
  %2 = add i64 %0, 99, !dbg !14467
  call void @llvm.dbg.value(metadata i64 %2, metadata !12530, metadata !DIExpression()), !dbg !14465
  %3 = udiv i64 %2, 100, !dbg !14468
  ret i64 %3, !dbg !14469
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_us_floor64(i64 noundef %0) unnamed_addr #2 !dbg !14470 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !14472, metadata !DIExpression()), !dbg !14473
  call void @llvm.dbg.value(metadata i64 %0, metadata !12530, metadata !DIExpression()), !dbg !14474
  call void @llvm.dbg.value(metadata i32 10000, metadata !12533, metadata !DIExpression()), !dbg !14474
  call void @llvm.dbg.value(metadata i32 1000000, metadata !12534, metadata !DIExpression()), !dbg !14474
  call void @llvm.dbg.value(metadata i8 1, metadata !12535, metadata !DIExpression()), !dbg !14474
  call void @llvm.dbg.value(metadata i1 false, metadata !12536, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14474
  call void @llvm.dbg.value(metadata i1 false, metadata !12537, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14474
  call void @llvm.dbg.value(metadata i8 0, metadata !12538, metadata !DIExpression()), !dbg !14474
  call void @llvm.dbg.value(metadata i1 true, metadata !12539, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14474
  call void @llvm.dbg.value(metadata i1 false, metadata !12540, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14474
  call void @llvm.dbg.value(metadata i64 0, metadata !12541, metadata !DIExpression()), !dbg !14474
  call void @llvm.dbg.value(metadata i64 0, metadata !12541, metadata !DIExpression()), !dbg !14474
  %2 = mul i64 %0, 100, !dbg !14476
  ret i64 %2, !dbg !14478
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_wakeup(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14479 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14481, metadata !DIExpression()), !dbg !14482
  %2 = tail call fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* noundef %0) #21, !dbg !14483
  br i1 %2, label %14, label %3, !dbg !14485

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #21, !dbg !14486
  %5 = icmp slt i32 %4, 0, !dbg !14488
  br i1 %5, label %6, label %10, !dbg !14489

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14490
  %8 = load i8, i8* %7, align 1, !dbg !14490
  %9 = icmp eq i8 %8, 16, !dbg !14493
  br i1 %9, label %10, label %14, !dbg !14494

10:                                               ; preds = %6, %3
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #21, !dbg !14495
  tail call void @z_ready_thread(%struct.k_thread* noundef %0) #21, !dbg !14496
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #20, !dbg !14497, !srcloc !13204
  call void @llvm.dbg.value(metadata i32 %11, metadata !13200, metadata !DIExpression()) #20, !dbg !14501
  %12 = icmp eq i32 %11, 0, !dbg !14502
  br i1 %12, label %13, label %14, !dbg !14503

13:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #21, !dbg !14504
  br label %14, !dbg !14506

14:                                               ; preds = %6, %1, %13, %10
  ret void, !dbg !14507
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14508 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14510, metadata !DIExpression()), !dbg !14511
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14512
  %3 = load i8, i8* %2, align 1, !dbg !14512
  %4 = and i8 %3, 2, !dbg !14513
  %5 = icmp ne i8 %4, 0, !dbg !14514
  ret i1 %5, !dbg !14515
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_impl_z_current_get() local_unnamed_addr #8 !dbg !14516 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14521
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14520, metadata !DIExpression()), !dbg !14522
  ret %struct.k_thread* %1, !dbg !14523
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_is_preempt_thread() local_unnamed_addr #1 !dbg !14524 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #20, !dbg !14527, !srcloc !13204
  call void @llvm.dbg.value(metadata i32 %1, metadata !13200, metadata !DIExpression()) #20, !dbg !14530
  %2 = icmp eq i32 %1, 0, !dbg !14531
  br i1 %2, label %3, label %8, !dbg !14532

3:                                                ; preds = %0
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14533
  %5 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %4) #21, !dbg !14534
  %6 = icmp ne i32 %5, 0, !dbg !14532
  %7 = zext i1 %6 to i32
  br label %8

8:                                                ; preds = %3, %0
  %9 = phi i32 [ 0, %0 ], [ %7, %3 ]
  ret i32 %9, !dbg !14535
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14536 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14538, metadata !DIExpression()), !dbg !14540
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !12470, metadata !DIExpression()) #20, !dbg !14541
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #20, !dbg !14543, !srcloc !12485
  call void @llvm.dbg.value(metadata i32 undef, metadata !12482, metadata !DIExpression()) #20, !dbg !14545
  call void @llvm.dbg.value(metadata i32 undef, metadata !12483, metadata !DIExpression()) #20, !dbg !14545
  call void @llvm.dbg.value(metadata i32 undef, metadata !12476, metadata !DIExpression()) #20, !dbg !14541
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !14546
  br i1 %3, label %5, label %4, !dbg !14547

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.243, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 148) #22, !dbg !14548
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.245, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !14548
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 148) #22, !dbg !14548
  unreachable, !dbg !14548

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !14543
  call void @llvm.dbg.value(metadata i32 %6, metadata !12482, metadata !DIExpression()) #20, !dbg !14545
  call void @llvm.dbg.value(metadata i32 %6, metadata !12476, metadata !DIExpression()) #20, !dbg !14541
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !14549
  call void @llvm.dbg.value(metadata i32 %6, metadata !14539, metadata !DIExpression()), !dbg !14540
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !14550
  %8 = load i8, i8* %7, align 4, !dbg !14550
  %9 = and i8 %8, 1, !dbg !14552
  %10 = icmp eq i8 %9, 0, !dbg !14553
  br i1 %10, label %15, label %11, !dbg !14554

11:                                               ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !12504, metadata !DIExpression()) #20, !dbg !14555
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !12509, metadata !DIExpression()) #20, !dbg !14555
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !14558
  br i1 %12, label %14, label %13, !dbg !14559

13:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.246, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 194) #22, !dbg !14560
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.247, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !14560
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 194) #22, !dbg !14560
  unreachable, !dbg !14560

14:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %6, metadata !12504, metadata !DIExpression()) #20, !dbg !14555
  call void @llvm.dbg.value(metadata i32 %6, metadata !12518, metadata !DIExpression()) #20, !dbg !14561
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #20, !dbg !14563, !srcloc !12524
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.282, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.249, i32 0, i32 0), i32 noundef 1731) #22, !dbg !14564
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.11.283, i32 0, i32 0), %struct.k_thread* noundef nonnull %0) #22, !dbg !14564
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.249, i32 0, i32 0), i32 noundef 1731) #22, !dbg !14564
  unreachable, !dbg !14564

15:                                               ; preds = %5
  %16 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14568
  %17 = load i8, i8* %16, align 1, !dbg !14568
  %18 = and i8 %17, 8, !dbg !14570
  %19 = icmp eq i8 %18, 0, !dbg !14571
  br i1 %19, label %24, label %20, !dbg !14572

20:                                               ; preds = %15
  call void @llvm.dbg.value(metadata i32 undef, metadata !12504, metadata !DIExpression()) #20, !dbg !14573
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !12509, metadata !DIExpression()) #20, !dbg !14573
  %21 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !14576
  br i1 %21, label %23, label %22, !dbg !14577

22:                                               ; preds = %20
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.246, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 194) #22, !dbg !14578
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.247, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !14578
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 194) #22, !dbg !14578
  unreachable, !dbg !14578

23:                                               ; preds = %20
  call void @llvm.dbg.value(metadata i32 %6, metadata !12504, metadata !DIExpression()) #20, !dbg !14573
  call void @llvm.dbg.value(metadata i32 %6, metadata !12518, metadata !DIExpression()) #20, !dbg !14579
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #20, !dbg !14581, !srcloc !12524
  br label %39, !dbg !14582

24:                                               ; preds = %15
  tail call fastcc void @end_thread(%struct.k_thread* noundef nonnull %0) #21, !dbg !14583
  %25 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14584
  %26 = icmp eq %struct.k_thread* %25, %0, !dbg !14586
  br i1 %26, label %27, label %35, !dbg !14587

27:                                               ; preds = %24
  %28 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #20, !dbg !14588, !srcloc !13204
  call void @llvm.dbg.value(metadata i32 %28, metadata !13200, metadata !DIExpression()) #20, !dbg !14591
  %29 = icmp eq i32 %28, 0, !dbg !14592
  br i1 %29, label %30, label %35, !dbg !14593

30:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 undef, metadata !13148, metadata !DIExpression()) #20, !dbg !14594
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13153, metadata !DIExpression()) #20, !dbg !14594
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13157, metadata !DIExpression()) #20, !dbg !14597
  %31 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !14599
  br i1 %31, label %33, label %32, !dbg !14600

32:                                               ; preds = %30
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.246, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 225) #22, !dbg !14601
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.247, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !14601
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 225) #22, !dbg !14601
  unreachable, !dbg !14601

33:                                               ; preds = %30
  call void @llvm.dbg.value(metadata i32 %6, metadata !13148, metadata !DIExpression()) #20, !dbg !14594
  %34 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %6) #22, !dbg !14602
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.282, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.249, i32 0, i32 0), i32 noundef 1778) #22, !dbg !14603
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.12.284, i32 0, i32 0)) #22, !dbg !14603
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.249, i32 0, i32 0), i32 noundef 1778) #22, !dbg !14603
  unreachable, !dbg !14603

35:                                               ; preds = %27, %24
  call void @llvm.dbg.value(metadata i32 undef, metadata !12504, metadata !DIExpression()) #20, !dbg !14607
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !12509, metadata !DIExpression()) #20, !dbg !14607
  %36 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !14609
  br i1 %36, label %38, label %37, !dbg !14610

37:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.246, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 194) #22, !dbg !14611
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.247, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !14611
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 194) #22, !dbg !14611
  unreachable, !dbg !14611

38:                                               ; preds = %35
  call void @llvm.dbg.value(metadata i32 %6, metadata !12504, metadata !DIExpression()) #20, !dbg !14607
  call void @llvm.dbg.value(metadata i32 %6, metadata !12518, metadata !DIExpression()) #20, !dbg !14612
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #20, !dbg !14614, !srcloc !12524
  br label %39, !dbg !14615

39:                                               ; preds = %38, %23
  ret void, !dbg !14615
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @end_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14616 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14618, metadata !DIExpression()), !dbg !14619
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14620
  %3 = load i8, i8* %2, align 1, !dbg !14620
  %4 = and i8 %3, 8, !dbg !14622
  %5 = icmp eq i8 %4, 0, !dbg !14623
  br i1 %5, label %6, label %20, !dbg !14624

6:                                                ; preds = %1
  %7 = and i8 %3, -41, !dbg !14625
  %8 = or i8 %7, 8, !dbg !14625
  store i8 %8, i8* %2, align 1, !dbg !14625
  %9 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef nonnull %0) #21, !dbg !14627
  br i1 %9, label %10, label %12, !dbg !14629

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12662, metadata !DIExpression()) #20, !dbg !14630
  %11 = and i8 %8, 95, !dbg !14633
  store i8 %11, i8* %2, align 1, !dbg !14633
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12670, metadata !DIExpression()) #20, !dbg !14634
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef nonnull %0) #22, !dbg !14636
  br label %12, !dbg !14637

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !14638
  %14 = load %union.anon*, %union.anon** %13, align 8, !dbg !14638
  %15 = icmp eq %union.anon* %14, null, !dbg !14640
  br i1 %15, label %17, label %16, !dbg !14641

16:                                               ; preds = %12
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %0) #21, !dbg !14642
  br label %17, !dbg !14644

17:                                               ; preds = %16, %12
  %18 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %0) #21, !dbg !14645
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !14646
  tail call fastcc void @unpend_all(%union.anon* noundef nonnull %19) #21, !dbg !14647
  tail call fastcc void @update_cache(i32 noundef 1) #21, !dbg !14648
  br label %20, !dbg !14649

20:                                               ; preds = %17, %1
  ret void, !dbg !14650
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_all(%union.anon* noundef %0) unnamed_addr #1 !dbg !14651 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !14655, metadata !DIExpression()), !dbg !14657
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #21, !dbg !14658
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14656, metadata !DIExpression()), !dbg !14657
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !14659
  br i1 %3, label %10, label %4, !dbg !14660

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %8, %4 ], [ %2, %1 ]
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %5) #21, !dbg !14661
  %6 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %5) #21, !dbg !14663
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !14664, metadata !DIExpression()), !dbg !14670
  call void @llvm.dbg.value(metadata i32 0, metadata !14669, metadata !DIExpression()), !dbg !14670
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 7, i32 1, !dbg !14672
  store i32 0, i32* %7, align 4, !dbg !14673
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %5) #21, !dbg !14674
  %8 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #21, !dbg !14658
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !14656, metadata !DIExpression()), !dbg !14657
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !14659
  br i1 %9, label %10, label %4, !dbg !14660, !llvm.loop !14675

10:                                               ; preds = %4, %1
  ret void, !dbg !14677
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_join(%struct.k_thread* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !14678 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14683, metadata !DIExpression()), !dbg !14686
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14682, metadata !DIExpression()), !dbg !14686
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !12470, metadata !DIExpression()) #20, !dbg !14687
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #20, !dbg !14689, !srcloc !12485
  call void @llvm.dbg.value(metadata i32 undef, metadata !12482, metadata !DIExpression()) #20, !dbg !14691
  call void @llvm.dbg.value(metadata i32 undef, metadata !12483, metadata !DIExpression()) #20, !dbg !14691
  call void @llvm.dbg.value(metadata i32 undef, metadata !12476, metadata !DIExpression()) #20, !dbg !14687
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !14692
  br i1 %4, label %6, label %5, !dbg !14693

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.243, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 148) #22, !dbg !14694
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.245, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !14694
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 148) #22, !dbg !14694
  unreachable, !dbg !14694

6:                                                ; preds = %2
  %7 = extractvalue { i32, i32 } %3, 0, !dbg !14689
  call void @llvm.dbg.value(metadata i32 %7, metadata !12482, metadata !DIExpression()) #20, !dbg !14691
  call void @llvm.dbg.value(metadata i32 %7, metadata !12476, metadata !DIExpression()) #20, !dbg !14687
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !14695
  call void @llvm.dbg.value(metadata i32 %7, metadata !14684, metadata !DIExpression()), !dbg !14686
  call void @llvm.dbg.value(metadata i32 0, metadata !14685, metadata !DIExpression()), !dbg !14686
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14696
  %9 = load i8, i8* %8, align 1, !dbg !14696
  %10 = and i8 %9, 8, !dbg !14698
  %11 = icmp eq i8 %10, 0, !dbg !14699
  br i1 %11, label %12, label %35, !dbg !14700

12:                                               ; preds = %6
  %13 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %13, metadata !14683, metadata !DIExpression()), !dbg !14686
  %14 = icmp eq i64 %13, 0, !dbg !14701
  br i1 %14, label %35, label %15, !dbg !14703

15:                                               ; preds = %12
  %16 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14704
  %17 = icmp eq %struct.k_thread* %16, %0, !dbg !14706
  br i1 %17, label %35, label %18, !dbg !14707

18:                                               ; preds = %15
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !14708
  %20 = load %union.anon*, %union.anon** %19, align 8, !dbg !14708
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %16, i32 0, i32 3, !dbg !14709
  %22 = icmp eq %union.anon* %20, %21, !dbg !14710
  br i1 %22, label %35, label %23, !dbg !14711

23:                                               ; preds = %18
  %24 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #20, !dbg !14712, !srcloc !13204
  call void @llvm.dbg.value(metadata i32 %24, metadata !13200, metadata !DIExpression()) #20, !dbg !14718
  %25 = icmp eq i32 %24, 0, !dbg !14719
  br i1 %25, label %27, label %26, !dbg !14720

26:                                               ; preds = %23
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.249, i32 0, i32 0), i32 noundef 1809) #22, !dbg !14721
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.13.287, i32 0, i32 0)) #22, !dbg !14721
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.249, i32 0, i32 0), i32 noundef 1809) #22, !dbg !14721
  unreachable, !dbg !14721

27:                                               ; preds = %23
  %28 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14723
  %29 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !14724
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %28, %union.anon* noundef nonnull %29) #21, !dbg !14725
  %30 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14726
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %30, [1 x i64] %1) #21, !dbg !14727
  call void @llvm.dbg.value(metadata i32 undef, metadata !13148, metadata !DIExpression()) #20, !dbg !14728
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13153, metadata !DIExpression()) #20, !dbg !14728
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !13157, metadata !DIExpression()) #20, !dbg !14730
  %31 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !14732
  br i1 %31, label %33, label %32, !dbg !14733

32:                                               ; preds = %27
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.246, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 225) #22, !dbg !14734
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.247, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !14734
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 225) #22, !dbg !14734
  unreachable, !dbg !14734

33:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 %7, metadata !13148, metadata !DIExpression()) #20, !dbg !14728
  %34 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %7) #22, !dbg !14735
  call void @llvm.dbg.value(metadata i32 %34, metadata !14685, metadata !DIExpression()), !dbg !14686
  br label %40, !dbg !14736

35:                                               ; preds = %15, %18, %12, %6
  %36 = phi i32 [ 0, %6 ], [ -16, %12 ], [ -45, %18 ], [ -45, %15 ], !dbg !14737
  call void @llvm.dbg.value(metadata i32 %36, metadata !14685, metadata !DIExpression()), !dbg !14686
  call void @llvm.dbg.value(metadata i32 undef, metadata !12504, metadata !DIExpression()) #20, !dbg !14738
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !12509, metadata !DIExpression()) #20, !dbg !14738
  %37 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !14740
  br i1 %37, label %39, label %38, !dbg !14741

38:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.246, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 194) #22, !dbg !14742
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.247, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !14742
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 194) #22, !dbg !14742
  unreachable, !dbg !14742

39:                                               ; preds = %35
  call void @llvm.dbg.value(metadata i32 %7, metadata !12504, metadata !DIExpression()) #20, !dbg !14738
  call void @llvm.dbg.value(metadata i32 %7, metadata !12518, metadata !DIExpression()) #20, !dbg !14743
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %7) #20, !dbg !14745, !srcloc !12524
  br label %40, !dbg !14746

40:                                               ; preds = %39, %33
  %41 = phi i32 [ %36, %39 ], [ %34, %33 ], !dbg !14686
  ret i32 %41, !dbg !14747
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_sched_wake(%union.anon* noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !14748 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !14752, metadata !DIExpression()), !dbg !14760
  call void @llvm.dbg.value(metadata i32 %1, metadata !14753, metadata !DIExpression()), !dbg !14760
  call void @llvm.dbg.value(metadata i8* %2, metadata !14754, metadata !DIExpression()), !dbg !14760
  call void @llvm.dbg.value(metadata i8 0, metadata !14756, metadata !DIExpression()), !dbg !14760
  call void @llvm.dbg.value(metadata i32 0, metadata !14757, metadata !DIExpression()), !dbg !14761
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !12470, metadata !DIExpression()) #20, !dbg !14762
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #20, !dbg !14764, !srcloc !12485
  call void @llvm.dbg.value(metadata i32 undef, metadata !12482, metadata !DIExpression()) #20, !dbg !14766
  call void @llvm.dbg.value(metadata i32 undef, metadata !12483, metadata !DIExpression()) #20, !dbg !14766
  call void @llvm.dbg.value(metadata i32 undef, metadata !12476, metadata !DIExpression()) #20, !dbg !14762
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !14767
  br i1 %5, label %7, label %6, !dbg !14768

6:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.243, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 148) #22, !dbg !14769
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.245, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !14769
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 148) #22, !dbg !14769
  unreachable, !dbg !14769

7:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !12482, metadata !DIExpression()) #20, !dbg !14766
  call void @llvm.dbg.value(metadata i32 undef, metadata !12476, metadata !DIExpression()) #20, !dbg !14762
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !14770
  call void @llvm.dbg.value(metadata i32 undef, metadata !14759, metadata !DIExpression()), !dbg !14761
  call void @llvm.dbg.value(metadata i8 poison, metadata !14756, metadata !DIExpression()), !dbg !14760
  call void @llvm.dbg.value(metadata i32 undef, metadata !14757, metadata !DIExpression()), !dbg !14761
  %8 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %9 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %8) #21, !dbg !14771
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !14755, metadata !DIExpression()), !dbg !14760
  %10 = icmp eq %struct.k_thread* %9, null, !dbg !14774
  br i1 %10, label %15, label %11, !dbg !14776

11:                                               ; preds = %7
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !14777, metadata !DIExpression()), !dbg !14785
  call void @llvm.dbg.value(metadata i32 %1, metadata !14783, metadata !DIExpression()), !dbg !14785
  call void @llvm.dbg.value(metadata i8* %2, metadata !14784, metadata !DIExpression()), !dbg !14785
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !14664, metadata !DIExpression()), !dbg !14788
  call void @llvm.dbg.value(metadata i32 %1, metadata !14669, metadata !DIExpression()), !dbg !14788
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 7, i32 1, !dbg !14790
  store i32 %1, i32* %12, align 4, !dbg !14791
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !14792
  store i8* %2, i8** %13, align 4, !dbg !14793
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %9) #21, !dbg !14794
  %14 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %9) #21, !dbg !14795
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %9) #21, !dbg !14796
  call void @llvm.dbg.value(metadata i8 1, metadata !14756, metadata !DIExpression()), !dbg !14760
  br label %15, !dbg !14797

15:                                               ; preds = %7, %11
  call void @llvm.dbg.value(metadata i8 poison, metadata !14756, metadata !DIExpression()), !dbg !14760
  call void @llvm.dbg.value(metadata i32 undef, metadata !12504, metadata !DIExpression()) #20, !dbg !14798
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !12509, metadata !DIExpression()) #20, !dbg !14798
  %16 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !14800
  br i1 %16, label %18, label %17, !dbg !14801

17:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.246, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 194) #22, !dbg !14802
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.247, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #22, !dbg !14802
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.244, i32 0, i32 0), i32 noundef 194) #22, !dbg !14802
  unreachable, !dbg !14802

18:                                               ; preds = %15
  %19 = xor i1 %10, true, !dbg !14760
  %20 = extractvalue { i32, i32 } %4, 0, !dbg !14764
  call void @llvm.dbg.value(metadata i32 %20, metadata !12482, metadata !DIExpression()) #20, !dbg !14766
  call void @llvm.dbg.value(metadata i32 %20, metadata !12476, metadata !DIExpression()) #20, !dbg !14762
  call void @llvm.dbg.value(metadata i32 %20, metadata !14759, metadata !DIExpression()), !dbg !14761
  call void @llvm.dbg.value(metadata i32 undef, metadata !12504, metadata !DIExpression()) #20, !dbg !14798
  call void @llvm.dbg.value(metadata i32 undef, metadata !12518, metadata !DIExpression()) #20, !dbg !14803
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #20, !dbg !14805, !srcloc !12524
  call void @llvm.dbg.value(metadata i8 poison, metadata !14756, metadata !DIExpression()), !dbg !14760
  call void @llvm.dbg.value(metadata i32 undef, metadata !14757, metadata !DIExpression()), !dbg !14761
  ret i1 %19, !dbg !14806
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_sched_wait(%struct.k_spinlock* noundef %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3, i8** noundef writeonly %4) local_unnamed_addr #1 !dbg !14807 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !14813, metadata !DIExpression()), !dbg !14818
  call void @llvm.dbg.value(metadata i64 undef, metadata !14815, metadata !DIExpression()), !dbg !14818
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14812, metadata !DIExpression()), !dbg !14818
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !14814, metadata !DIExpression()), !dbg !14818
  call void @llvm.dbg.value(metadata i8** %4, metadata !14816, metadata !DIExpression()), !dbg !14818
  %6 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) #21, !dbg !14819
  call void @llvm.dbg.value(metadata i32 %6, metadata !14817, metadata !DIExpression()), !dbg !14818
  %7 = icmp eq i8** %4, null, !dbg !14820
  br i1 %7, label %12, label %8, !dbg !14822

8:                                                ; preds = %5
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14823
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !14825
  %11 = load i8*, i8** %10, align 4, !dbg !14825
  store i8* %11, i8** %4, align 4, !dbg !14826
  br label %12, !dbg !14827

12:                                               ; preds = %8, %5
  ret i32 %6, !dbg !14828
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_data_copy() local_unnamed_addr #1 !dbg !14829 {
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_load_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__data_region_end to i32), i32 ptrtoint ([0 x i8]* @__data_region_start to i32))) #22, !dbg !14831
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_load_start, i32 0, i32 0), i32 noundef ptrtoint ([0 x i8]* @__ramfunc_size to i32)) #22, !dbg !14832
  ret void, !dbg !14833
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_add_timeout(%struct._timeout* noundef %0, void (%struct._timeout*)* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !14834 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !14844, metadata !DIExpression()), !dbg !14861
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14842, metadata !DIExpression()), !dbg !14861
  call void @llvm.dbg.value(metadata void (%struct._timeout*)* %1, metadata !14843, metadata !DIExpression()), !dbg !14861
  %5 = icmp eq i64 %4, -1, !dbg !14862
  br i1 %5, label %63, label %6, !dbg !14864

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !14865
  %8 = tail call fastcc zeroext i1 @sys_dnode_is_linked.292(%struct._dnode* noundef %7) #21, !dbg !14865
  br i1 %8, label %9, label %10, !dbg !14868

9:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.293, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.1.294, i32 0, i32 0), i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.295, i32 0, i32 0), i32 noundef 99) #22, !dbg !14869
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.296, i32 0, i32 0)) #22, !dbg !14869
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.295, i32 0, i32 0), i32 noundef 99) #22, !dbg !14869
  unreachable, !dbg !14869

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 1, !dbg !14871
  store void (%struct._timeout*)* %1, void (%struct._timeout*)** %11, align 8, !dbg !14872
  call void @llvm.dbg.value(metadata i32 0, metadata !14845, metadata !DIExpression()), !dbg !14873
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !14874, metadata !DIExpression()) #20, !dbg !14881
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #20, !dbg !14883, !srcloc !14889
  call void @llvm.dbg.value(metadata i32 undef, metadata !14886, metadata !DIExpression()) #20, !dbg !14890
  call void @llvm.dbg.value(metadata i32 undef, metadata !14887, metadata !DIExpression()) #20, !dbg !14890
  call void @llvm.dbg.value(metadata i32 undef, metadata !14880, metadata !DIExpression()) #20, !dbg !14881
  %13 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #22, !dbg !14891
  br i1 %13, label %15, label %14, !dbg !14894

14:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.293, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.297, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.298, i32 0, i32 0), i32 noundef 148) #22, !dbg !14895
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.299, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #22, !dbg !14895
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.298, i32 0, i32 0), i32 noundef 148) #22, !dbg !14895
  unreachable, !dbg !14895

15:                                               ; preds = %10
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !14883
  call void @llvm.dbg.value(metadata i32 %16, metadata !14886, metadata !DIExpression()) #20, !dbg !14890
  call void @llvm.dbg.value(metadata i32 %16, metadata !14880, metadata !DIExpression()) #20, !dbg !14881
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #22, !dbg !14897
  call void @llvm.dbg.value(metadata i32 %16, metadata !14851, metadata !DIExpression()), !dbg !14873
  call void @llvm.dbg.value(metadata i32 undef, metadata !14845, metadata !DIExpression()), !dbg !14873
  %17 = icmp slt i64 %4, -1, !dbg !14898
  br i1 %17, label %18, label %24, !dbg !14899

18:                                               ; preds = %15
  %19 = load i64, i64* @curr_tick, align 8, !dbg !14900
  %20 = add i64 %4, %19, !dbg !14901
  %21 = sub i64 -2, %20, !dbg !14901
  call void @llvm.dbg.value(metadata i64 %21, metadata !14855, metadata !DIExpression()), !dbg !14902
  %22 = icmp sgt i64 %21, 1, !dbg !14903
  %23 = select i1 %22, i64 %21, i64 1, !dbg !14903
  br label %29, !dbg !14904

24:                                               ; preds = %15
  %25 = add nuw nsw i64 %4, 1, !dbg !14905
  %26 = tail call fastcc i32 @elapsed.300() #21, !dbg !14907
  %27 = sext i32 %26 to i64, !dbg !14907
  %28 = add nsw i64 %25, %27, !dbg !14908
  br label %29

29:                                               ; preds = %24, %18
  %30 = phi i64 [ %23, %18 ], [ %28, %24 ], !dbg !14909
  %31 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !14910
  store i64 %30, i64* %31, align 8, !dbg !14911
  %32 = tail call fastcc %struct._timeout* @first() #21, !dbg !14912
  call void @llvm.dbg.value(metadata %struct._timeout* %32, metadata !14852, metadata !DIExpression()), !dbg !14914
  %33 = icmp eq %struct._timeout* %32, null, !dbg !14915
  br i1 %33, label %48, label %34, !dbg !14915

34:                                               ; preds = %29, %44
  %35 = phi i64 [ %45, %44 ], [ %30, %29 ], !dbg !14916
  %36 = phi %struct._timeout* [ %46, %44 ], [ %32, %29 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %36, metadata !14852, metadata !DIExpression()), !dbg !14914
  %37 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 2, !dbg !14920
  %38 = load i64, i64* %37, align 8, !dbg !14920
  %39 = icmp slt i64 %35, %38, !dbg !14921
  br i1 %39, label %40, label %44, !dbg !14922

40:                                               ; preds = %34
  %41 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 2, !dbg !14920
  %42 = sub nsw i64 %38, %35, !dbg !14923
  store i64 %42, i64* %41, align 8, !dbg !14923
  %43 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 0, !dbg !14925
  tail call fastcc void @sys_dlist_insert.301(%struct._dnode* noundef nonnull %43, %struct._dnode* noundef nonnull %7) #21, !dbg !14926
  br label %49, !dbg !14927

44:                                               ; preds = %34
  %45 = sub nsw i64 %35, %38, !dbg !14928
  store i64 %45, i64* %31, align 8, !dbg !14928
  %46 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %36) #21, !dbg !14929
  call void @llvm.dbg.value(metadata %struct._timeout* %46, metadata !14852, metadata !DIExpression()), !dbg !14914
  %47 = icmp eq %struct._timeout* %46, null, !dbg !14915
  br i1 %47, label %48, label %34, !dbg !14915, !llvm.loop !14930

48:                                               ; preds = %44, %29
  tail call fastcc void @sys_dlist_append.302(%struct._dnode* noundef nonnull %7) #21, !dbg !14932
  br label %49, !dbg !14935

49:                                               ; preds = %40, %48
  %50 = tail call fastcc %struct._timeout* @first() #21, !dbg !14936
  %51 = icmp eq %struct._timeout* %50, %0, !dbg !14937
  br i1 %51, label %52, label %59, !dbg !14938

52:                                               ; preds = %49
  %53 = tail call fastcc i32 @next_timeout() #21, !dbg !14939
  call void @llvm.dbg.value(metadata i32 %53, metadata !14858, metadata !DIExpression()), !dbg !14940
  %54 = icmp ne i32 %53, 0, !dbg !14941
  %55 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4
  %56 = icmp eq i32 %55, %53
  %57 = select i1 %54, i1 %56, i1 false, !dbg !14943
  br i1 %57, label %59, label %58, !dbg !14943

58:                                               ; preds = %52
  tail call void @sys_clock_set_timeout(i32 noundef %53, i1 noundef zeroext false) #22, !dbg !14944
  br label %59, !dbg !14946

59:                                               ; preds = %58, %52, %49
  call void @llvm.dbg.value(metadata i32 undef, metadata !14947, metadata !DIExpression()) #20, !dbg !14953
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !14952, metadata !DIExpression()) #20, !dbg !14953
  %60 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #22, !dbg !14955
  br i1 %60, label %62, label %61, !dbg !14958

61:                                               ; preds = %59
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.293, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.303, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.298, i32 0, i32 0), i32 noundef 194) #22, !dbg !14959
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.304, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #22, !dbg !14959
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.298, i32 0, i32 0), i32 noundef 194) #22, !dbg !14959
  unreachable, !dbg !14959

62:                                               ; preds = %59
  call void @llvm.dbg.value(metadata i32 %16, metadata !14947, metadata !DIExpression()) #20, !dbg !14953
  call void @llvm.dbg.value(metadata i32 %16, metadata !14961, metadata !DIExpression()) #20, !dbg !14964
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #20, !dbg !14966, !srcloc !14967
  call void @llvm.dbg.value(metadata i32 undef, metadata !14845, metadata !DIExpression()), !dbg !14873
  br label %63

63:                                               ; preds = %3, %62
  ret void, !dbg !14968
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked.292(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14969 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14975, metadata !DIExpression()), !dbg !14976
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14977
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14977
  %4 = icmp ne %struct._dnode* %3, null, !dbg !14978
  ret i1 %4, !dbg !14979
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @elapsed.300() unnamed_addr #1 !dbg !14980 {
  %1 = load i32, i32* @announce_remaining, align 4, !dbg !14983
  %2 = icmp eq i32 %1, 0, !dbg !14984
  br i1 %2, label %3, label %5, !dbg !14983

3:                                                ; preds = %0
  %4 = tail call i32 @sys_clock_elapsed() #22, !dbg !14985
  br label %5, !dbg !14983

5:                                                ; preds = %0, %3
  %6 = phi i32 [ %4, %3 ], [ 0, %0 ], !dbg !14983
  ret i32 %6, !dbg !14986
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @first() unnamed_addr #8 !dbg !14987 {
  %1 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.307() #21, !dbg !14993
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14991, metadata !DIExpression()), !dbg !14994
  %2 = bitcast %struct._dnode* %1 to %struct._timeout*, !dbg !14995
  ret %struct._timeout* %2, !dbg !14996
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert.301(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #9 !dbg !14997 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15001, metadata !DIExpression()), !dbg !15005
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !15002, metadata !DIExpression()), !dbg !15005
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15006
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !15006
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !15003, metadata !DIExpression()), !dbg !15005
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !15007
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !15008
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !15009
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !15010
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !15011
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !15012
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !15013
  ret void, !dbg !15014
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @next(%struct._timeout* noundef readonly %0) unnamed_addr #8 !dbg !15015 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15019, metadata !DIExpression()), !dbg !15021
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !15022
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_next.305(%struct._dnode* noundef %2) #21, !dbg !15023
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !15020, metadata !DIExpression()), !dbg !15021
  %4 = bitcast %struct._dnode* %3 to %struct._timeout*, !dbg !15024
  ret %struct._timeout* %4, !dbg !15025
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append.302(%struct._dnode* noundef %0) unnamed_addr #9 !dbg !15026 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !15031, metadata !DIExpression()), !dbg !15034
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15032, metadata !DIExpression()), !dbg !15034
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !15035
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !15033, metadata !DIExpression()), !dbg !15034
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15036
  store %struct._dnode* @timeout_list, %struct._dnode** %3, align 4, !dbg !15037
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15038
  store %struct._dnode* %2, %struct._dnode** %4, align 4, !dbg !15039
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %2, i32 0, i32 0, i32 0, !dbg !15040
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !15041
  store %struct._dnode* %0, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !15042
  ret void, !dbg !15043
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @next_timeout() unnamed_addr #1 !dbg !15044 {
  %1 = tail call fastcc %struct._timeout* @first() #21, !dbg !15049
  call void @llvm.dbg.value(metadata %struct._timeout* %1, metadata !15046, metadata !DIExpression()), !dbg !15050
  %2 = tail call fastcc i32 @elapsed.300() #21, !dbg !15051
  call void @llvm.dbg.value(metadata i32 %2, metadata !15047, metadata !DIExpression()), !dbg !15050
  %3 = icmp eq %struct._timeout* %1, null, !dbg !15052
  br i1 %3, label %14, label %4, !dbg !15054

4:                                                ; preds = %0
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %1, i32 0, i32 2, !dbg !15055
  %6 = load i64, i64* %5, align 8, !dbg !15055
  %7 = sext i32 %2 to i64, !dbg !15056
  %8 = sub nsw i64 %6, %7, !dbg !15057
  %9 = icmp sgt i64 %8, 2147483647, !dbg !15058
  br i1 %9, label %14, label %10, !dbg !15059

10:                                               ; preds = %4
  %11 = icmp sgt i64 %8, 0, !dbg !15060
  %12 = select i1 %11, i64 %8, i64 0, !dbg !15060
  %13 = trunc i64 %12 to i32, !dbg !15060
  call void @llvm.dbg.value(metadata i32 %13, metadata !15048, metadata !DIExpression()), !dbg !15050
  br label %14

14:                                               ; preds = %0, %4, %10
  %15 = phi i32 [ %13, %10 ], [ 2147483647, %4 ], [ 2147483647, %0 ], !dbg !15062
  call void @llvm.dbg.value(metadata i32 %15, metadata !15048, metadata !DIExpression()), !dbg !15050
  %16 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !15063
  %17 = icmp ne i32 %16, 0, !dbg !15065
  %18 = icmp slt i32 %16, %15
  %19 = select i1 %17, i1 %18, i1 false, !dbg !15066
  %20 = select i1 %19, i32 %16, i32 %15, !dbg !15066
  call void @llvm.dbg.value(metadata i32 %20, metadata !15048, metadata !DIExpression()), !dbg !15050
  ret i32 %20, !dbg !15067
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next.305(%struct._dnode* noundef readonly %0) unnamed_addr #8 !dbg !15068 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !15072, metadata !DIExpression()), !dbg !15074
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15073, metadata !DIExpression()), !dbg !15074
  %2 = icmp eq %struct._dnode* %0, null, !dbg !15075
  br i1 %2, label %5, label %3, !dbg !15076

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check.306(%struct._dnode* noundef nonnull %0) #21, !dbg !15077
  br label %5, !dbg !15076

5:                                                ; preds = %1, %3
  %6 = phi %struct._dnode* [ %4, %3 ], [ null, %1 ], !dbg !15076
  ret %struct._dnode* %6, !dbg !15078
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check.306(%struct._dnode* noundef readonly %0) unnamed_addr #8 !dbg !15079 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !15081, metadata !DIExpression()), !dbg !15083
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15082, metadata !DIExpression()), !dbg !15083
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !15084
  %3 = icmp eq %struct._dnode* %2, %0, !dbg !15085
  br i1 %3, label %7, label %4, !dbg !15086

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15087
  %6 = load %struct._dnode*, %struct._dnode** %5, align 4, !dbg !15087
  br label %7, !dbg !15086

7:                                                ; preds = %1, %4
  %8 = phi %struct._dnode* [ %6, %4 ], [ null, %1 ], !dbg !15086
  ret %struct._dnode* %8, !dbg !15088
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.307() unnamed_addr #8 !dbg !15089 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !15093, metadata !DIExpression()), !dbg !15094
  %1 = tail call fastcc zeroext i1 @sys_dlist_is_empty.308() #21, !dbg !15095
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4
  %3 = select i1 %1, %struct._dnode* null, %struct._dnode* %2, !dbg !15095
  ret %struct._dnode* %3, !dbg !15096
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.308() unnamed_addr #8 !dbg !15097 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !15101, metadata !DIExpression()), !dbg !15102
  %1 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4, !dbg !15103
  %2 = icmp eq %struct._dnode* %1, @timeout_list, !dbg !15104
  ret i1 %2, !dbg !15105
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_abort_timeout(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !15106 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15110, metadata !DIExpression()), !dbg !15115
  call void @llvm.dbg.value(metadata i32 -22, metadata !15111, metadata !DIExpression()), !dbg !15115
  call void @llvm.dbg.value(metadata i32 0, metadata !15112, metadata !DIExpression()), !dbg !15116
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !14874, metadata !DIExpression()) #20, !dbg !15117
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #20, !dbg !15119, !srcloc !14889
  call void @llvm.dbg.value(metadata i32 undef, metadata !14886, metadata !DIExpression()) #20, !dbg !15121
  call void @llvm.dbg.value(metadata i32 undef, metadata !14887, metadata !DIExpression()) #20, !dbg !15121
  call void @llvm.dbg.value(metadata i32 undef, metadata !14880, metadata !DIExpression()) #20, !dbg !15117
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #22, !dbg !15122
  br i1 %3, label %5, label %4, !dbg !15123

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.293, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.297, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.298, i32 0, i32 0), i32 noundef 148) #22, !dbg !15124
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.299, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #22, !dbg !15124
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.298, i32 0, i32 0), i32 noundef 148) #22, !dbg !15124
  unreachable, !dbg !15124

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14886, metadata !DIExpression()) #20, !dbg !15121
  call void @llvm.dbg.value(metadata i32 undef, metadata !14880, metadata !DIExpression()) #20, !dbg !15117
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #22, !dbg !15125
  call void @llvm.dbg.value(metadata i32 undef, metadata !15114, metadata !DIExpression()), !dbg !15116
  call void @llvm.dbg.value(metadata i32 -22, metadata !15111, metadata !DIExpression()), !dbg !15115
  call void @llvm.dbg.value(metadata i32 undef, metadata !15112, metadata !DIExpression()), !dbg !15116
  %6 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 -22, metadata !15111, metadata !DIExpression()), !dbg !15115
  %7 = tail call fastcc zeroext i1 @sys_dnode_is_linked.292(%struct._dnode* noundef %6) #21, !dbg !15126
  br i1 %7, label %8, label %9, !dbg !15130

8:                                                ; preds = %5
  tail call fastcc void @remove_timeout(%struct._timeout* noundef %0) #21, !dbg !15131
  call void @llvm.dbg.value(metadata i32 0, metadata !15111, metadata !DIExpression()), !dbg !15115
  br label %9, !dbg !15133

9:                                                ; preds = %5, %8
  %10 = phi i32 [ 0, %8 ], [ -22, %5 ], !dbg !15115
  call void @llvm.dbg.value(metadata i32 %10, metadata !15111, metadata !DIExpression()), !dbg !15115
  call void @llvm.dbg.value(metadata i32 undef, metadata !14947, metadata !DIExpression()) #20, !dbg !15134
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !14952, metadata !DIExpression()) #20, !dbg !15134
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #22, !dbg !15136
  br i1 %11, label %13, label %12, !dbg !15137

12:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.293, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.303, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.298, i32 0, i32 0), i32 noundef 194) #22, !dbg !15138
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.304, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #22, !dbg !15138
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.298, i32 0, i32 0), i32 noundef 194) #22, !dbg !15138
  unreachable, !dbg !15138

13:                                               ; preds = %9
  %14 = extractvalue { i32, i32 } %2, 0, !dbg !15119
  call void @llvm.dbg.value(metadata i32 %14, metadata !14886, metadata !DIExpression()) #20, !dbg !15121
  call void @llvm.dbg.value(metadata i32 %14, metadata !14880, metadata !DIExpression()) #20, !dbg !15117
  call void @llvm.dbg.value(metadata i32 %14, metadata !15114, metadata !DIExpression()), !dbg !15116
  call void @llvm.dbg.value(metadata i32 undef, metadata !14947, metadata !DIExpression()) #20, !dbg !15134
  call void @llvm.dbg.value(metadata i32 undef, metadata !14961, metadata !DIExpression()) #20, !dbg !15139
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #20, !dbg !15141, !srcloc !14967
  call void @llvm.dbg.value(metadata i32 %10, metadata !15111, metadata !DIExpression()), !dbg !15115
  call void @llvm.dbg.value(metadata i32 undef, metadata !15112, metadata !DIExpression()), !dbg !15116
  ret i32 %10, !dbg !15142
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @remove_timeout(%struct._timeout* noundef %0) unnamed_addr #9 !dbg !15143 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15145, metadata !DIExpression()), !dbg !15146
  %2 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef %0) #21, !dbg !15147
  %3 = icmp eq %struct._timeout* %2, null, !dbg !15149
  br i1 %3, label %10, label %4, !dbg !15150

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !15151
  %6 = load i64, i64* %5, align 8, !dbg !15151
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %2, i32 0, i32 2, !dbg !15153
  %8 = load i64, i64* %7, align 8, !dbg !15154
  %9 = add nsw i64 %8, %6, !dbg !15154
  store i64 %9, i64* %7, align 8, !dbg !15154
  br label %10, !dbg !15155

10:                                               ; preds = %4, %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !15156
  tail call fastcc void @sys_dlist_remove.311(%struct._dnode* noundef %11) #21, !dbg !15157
  ret void, !dbg !15158
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove.311(%struct._dnode* nocapture noundef %0) unnamed_addr #9 !dbg !15159 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15163, metadata !DIExpression()), !dbg !15166
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15167
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15167
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !15164, metadata !DIExpression()), !dbg !15166
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15168
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !15168
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !15165, metadata !DIExpression()), !dbg !15166
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !15169
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !15170
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !15171
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !15172
  tail call fastcc void @sys_dnode_init.312(%struct._dnode* noundef %0) #21, !dbg !15173
  ret void, !dbg !15174
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.312(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !15175 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15177, metadata !DIExpression()), !dbg !15178
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15179
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !15180
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15181
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !15182
  ret void, !dbg !15183
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_remaining(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !15184 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15190, metadata !DIExpression()), !dbg !15195
  call void @llvm.dbg.value(metadata i64 0, metadata !15191, metadata !DIExpression()), !dbg !15195
  call void @llvm.dbg.value(metadata i32 0, metadata !15192, metadata !DIExpression()), !dbg !15196
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !14874, metadata !DIExpression()) #20, !dbg !15197
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #20, !dbg !15199, !srcloc !14889
  call void @llvm.dbg.value(metadata i32 undef, metadata !14886, metadata !DIExpression()) #20, !dbg !15201
  call void @llvm.dbg.value(metadata i32 undef, metadata !14887, metadata !DIExpression()) #20, !dbg !15201
  call void @llvm.dbg.value(metadata i32 undef, metadata !14880, metadata !DIExpression()) #20, !dbg !15197
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #22, !dbg !15202
  br i1 %3, label %5, label %4, !dbg !15203

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.293, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.297, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.298, i32 0, i32 0), i32 noundef 148) #22, !dbg !15204
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.299, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #22, !dbg !15204
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.298, i32 0, i32 0), i32 noundef 148) #22, !dbg !15204
  unreachable, !dbg !15204

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14886, metadata !DIExpression()) #20, !dbg !15201
  call void @llvm.dbg.value(metadata i32 undef, metadata !14880, metadata !DIExpression()) #20, !dbg !15197
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #22, !dbg !15205
  call void @llvm.dbg.value(metadata i32 undef, metadata !15194, metadata !DIExpression()), !dbg !15196
  call void @llvm.dbg.value(metadata i64 0, metadata !15191, metadata !DIExpression()), !dbg !15195
  call void @llvm.dbg.value(metadata i32 undef, metadata !15192, metadata !DIExpression()), !dbg !15196
  %6 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #21, !dbg !15206
  call void @llvm.dbg.value(metadata i64 %6, metadata !15191, metadata !DIExpression()), !dbg !15195
  call void @llvm.dbg.value(metadata i32 undef, metadata !14947, metadata !DIExpression()) #20, !dbg !15209
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !14952, metadata !DIExpression()) #20, !dbg !15209
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #22, !dbg !15211
  br i1 %7, label %9, label %8, !dbg !15212

8:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.293, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.303, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.298, i32 0, i32 0), i32 noundef 194) #22, !dbg !15213
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.304, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #22, !dbg !15213
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.298, i32 0, i32 0), i32 noundef 194) #22, !dbg !15213
  unreachable, !dbg !15213

9:                                                ; preds = %5
  %10 = extractvalue { i32, i32 } %2, 0, !dbg !15199
  call void @llvm.dbg.value(metadata i32 %10, metadata !14886, metadata !DIExpression()) #20, !dbg !15201
  call void @llvm.dbg.value(metadata i32 %10, metadata !14880, metadata !DIExpression()) #20, !dbg !15197
  call void @llvm.dbg.value(metadata i32 %10, metadata !15194, metadata !DIExpression()), !dbg !15196
  call void @llvm.dbg.value(metadata i32 undef, metadata !14947, metadata !DIExpression()) #20, !dbg !15209
  call void @llvm.dbg.value(metadata i32 undef, metadata !14961, metadata !DIExpression()) #20, !dbg !15214
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %10) #20, !dbg !15216, !srcloc !14967
  call void @llvm.dbg.value(metadata i64 %6, metadata !15191, metadata !DIExpression()), !dbg !15195
  call void @llvm.dbg.value(metadata i32 undef, metadata !15192, metadata !DIExpression()), !dbg !15196
  ret i64 %6, !dbg !15217
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @timeout_rem(%struct._timeout* noundef readonly %0) unnamed_addr #1 !dbg !15218 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15220, metadata !DIExpression()), !dbg !15224
  call void @llvm.dbg.value(metadata i64 0, metadata !15221, metadata !DIExpression()), !dbg !15224
  %2 = tail call fastcc zeroext i1 @z_is_inactive_timeout.313(%struct._timeout* noundef %0) #21, !dbg !15225
  br i1 %2, label %21, label %3, !dbg !15227

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._timeout* @first() #21, !dbg !15228
  call void @llvm.dbg.value(metadata %struct._timeout* %4, metadata !15222, metadata !DIExpression()), !dbg !15229
  call void @llvm.dbg.value(metadata i64 0, metadata !15221, metadata !DIExpression()), !dbg !15224
  %5 = icmp eq %struct._timeout* %4, null, !dbg !15230
  br i1 %5, label %16, label %6, !dbg !15232

6:                                                ; preds = %3, %13
  %7 = phi %struct._timeout* [ %14, %13 ], [ %4, %3 ]
  %8 = phi i64 [ %11, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %7, metadata !15222, metadata !DIExpression()), !dbg !15229
  call void @llvm.dbg.value(metadata i64 %8, metadata !15221, metadata !DIExpression()), !dbg !15224
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %7, i32 0, i32 2, !dbg !15233
  %10 = load i64, i64* %9, align 8, !dbg !15233
  %11 = add nsw i64 %10, %8, !dbg !15235
  call void @llvm.dbg.value(metadata i64 %11, metadata !15221, metadata !DIExpression()), !dbg !15224
  %12 = icmp eq %struct._timeout* %7, %0, !dbg !15236
  br i1 %12, label %16, label %13, !dbg !15238

13:                                               ; preds = %6
  %14 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %7) #21, !dbg !15239
  call void @llvm.dbg.value(metadata %struct._timeout* %14, metadata !15222, metadata !DIExpression()), !dbg !15229
  call void @llvm.dbg.value(metadata i64 %11, metadata !15221, metadata !DIExpression()), !dbg !15224
  %15 = icmp eq %struct._timeout* %14, null, !dbg !15230
  br i1 %15, label %16, label %6, !dbg !15232, !llvm.loop !15240

16:                                               ; preds = %13, %6, %3
  %17 = phi i64 [ 0, %3 ], [ %11, %6 ], [ %11, %13 ], !dbg !15224
  call void @llvm.dbg.value(metadata i64 %17, metadata !15221, metadata !DIExpression()), !dbg !15224
  %18 = tail call fastcc i32 @elapsed.300() #21, !dbg !15242
  %19 = sext i32 %18 to i64, !dbg !15242
  %20 = sub nsw i64 %17, %19, !dbg !15243
  br label %21, !dbg !15244

21:                                               ; preds = %1, %16
  %22 = phi i64 [ %20, %16 ], [ 0, %1 ], !dbg !15224
  ret i64 %22, !dbg !15245
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout.313(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #8 !dbg !15246 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15250, metadata !DIExpression()), !dbg !15251
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !15252
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked.292(%struct._dnode* noundef %2) #21, !dbg !15253
  %4 = xor i1 %3, true, !dbg !15254
  ret i1 %4, !dbg !15255
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_expires(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !15256 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15258, metadata !DIExpression()), !dbg !15263
  call void @llvm.dbg.value(metadata i64 0, metadata !15259, metadata !DIExpression()), !dbg !15263
  call void @llvm.dbg.value(metadata i32 0, metadata !15260, metadata !DIExpression()), !dbg !15264
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !14874, metadata !DIExpression()) #20, !dbg !15265
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #20, !dbg !15267, !srcloc !14889
  call void @llvm.dbg.value(metadata i32 undef, metadata !14886, metadata !DIExpression()) #20, !dbg !15269
  call void @llvm.dbg.value(metadata i32 undef, metadata !14887, metadata !DIExpression()) #20, !dbg !15269
  call void @llvm.dbg.value(metadata i32 undef, metadata !14880, metadata !DIExpression()) #20, !dbg !15265
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #22, !dbg !15270
  br i1 %3, label %5, label %4, !dbg !15271

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.293, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.297, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.298, i32 0, i32 0), i32 noundef 148) #22, !dbg !15272
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.299, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #22, !dbg !15272
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.298, i32 0, i32 0), i32 noundef 148) #22, !dbg !15272
  unreachable, !dbg !15272

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14886, metadata !DIExpression()) #20, !dbg !15269
  call void @llvm.dbg.value(metadata i32 undef, metadata !14880, metadata !DIExpression()) #20, !dbg !15265
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #22, !dbg !15273
  call void @llvm.dbg.value(metadata i32 undef, metadata !15262, metadata !DIExpression()), !dbg !15264
  call void @llvm.dbg.value(metadata i64 0, metadata !15259, metadata !DIExpression()), !dbg !15263
  call void @llvm.dbg.value(metadata i32 undef, metadata !15260, metadata !DIExpression()), !dbg !15264
  %6 = load i64, i64* @curr_tick, align 8, !dbg !15274
  %7 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #21, !dbg !15277
  call void @llvm.dbg.value(metadata !DIArgList(i64 %6, i64 %7), metadata !15259, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !15263
  call void @llvm.dbg.value(metadata i32 undef, metadata !14947, metadata !DIExpression()) #20, !dbg !15278
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !14952, metadata !DIExpression()) #20, !dbg !15278
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #22, !dbg !15280
  br i1 %8, label %10, label %9, !dbg !15281

9:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.293, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.303, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.298, i32 0, i32 0), i32 noundef 194) #22, !dbg !15282
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.304, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #22, !dbg !15282
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.298, i32 0, i32 0), i32 noundef 194) #22, !dbg !15282
  unreachable, !dbg !15282

10:                                               ; preds = %5
  %11 = extractvalue { i32, i32 } %2, 0, !dbg !15267
  call void @llvm.dbg.value(metadata i32 %11, metadata !14886, metadata !DIExpression()) #20, !dbg !15269
  call void @llvm.dbg.value(metadata i32 %11, metadata !14880, metadata !DIExpression()) #20, !dbg !15265
  call void @llvm.dbg.value(metadata i32 %11, metadata !15262, metadata !DIExpression()), !dbg !15264
  call void @llvm.dbg.value(metadata !DIArgList(i64 %7, i64 %6), metadata !15259, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !15263
  call void @llvm.dbg.value(metadata i32 undef, metadata !14947, metadata !DIExpression()) #20, !dbg !15278
  call void @llvm.dbg.value(metadata i32 undef, metadata !14961, metadata !DIExpression()) #20, !dbg !15283
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %11) #20, !dbg !15285, !srcloc !14967
  call void @llvm.dbg.value(metadata i32 undef, metadata !15260, metadata !DIExpression()), !dbg !15264
  %12 = add i64 %7, %6, !dbg !15286
  ret i64 %12, !dbg !15287
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_get_next_timeout_expiry() local_unnamed_addr #1 !dbg !15288 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !15290, metadata !DIExpression()), !dbg !15294
  call void @llvm.dbg.value(metadata i32 0, metadata !15291, metadata !DIExpression()), !dbg !15295
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !14874, metadata !DIExpression()) #20, !dbg !15296
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #20, !dbg !15298, !srcloc !14889
  call void @llvm.dbg.value(metadata i32 undef, metadata !14886, metadata !DIExpression()) #20, !dbg !15300
  call void @llvm.dbg.value(metadata i32 undef, metadata !14887, metadata !DIExpression()) #20, !dbg !15300
  call void @llvm.dbg.value(metadata i32 undef, metadata !14880, metadata !DIExpression()) #20, !dbg !15296
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #22, !dbg !15301
  br i1 %2, label %4, label %3, !dbg !15302

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.293, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.297, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.298, i32 0, i32 0), i32 noundef 148) #22, !dbg !15303
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.299, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #22, !dbg !15303
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.298, i32 0, i32 0), i32 noundef 148) #22, !dbg !15303
  unreachable, !dbg !15303

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !14886, metadata !DIExpression()) #20, !dbg !15300
  call void @llvm.dbg.value(metadata i32 undef, metadata !14880, metadata !DIExpression()) #20, !dbg !15296
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #22, !dbg !15304
  call void @llvm.dbg.value(metadata i32 undef, metadata !15293, metadata !DIExpression()), !dbg !15295
  call void @llvm.dbg.value(metadata i32 -1, metadata !15290, metadata !DIExpression()), !dbg !15294
  call void @llvm.dbg.value(metadata i32 undef, metadata !15291, metadata !DIExpression()), !dbg !15295
  %5 = tail call fastcc i32 @next_timeout() #21, !dbg !15305
  call void @llvm.dbg.value(metadata i32 %5, metadata !15290, metadata !DIExpression()), !dbg !15294
  call void @llvm.dbg.value(metadata i32 undef, metadata !14947, metadata !DIExpression()) #20, !dbg !15308
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !14952, metadata !DIExpression()) #20, !dbg !15308
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #22, !dbg !15310
  br i1 %6, label %8, label %7, !dbg !15311

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.293, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.303, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.298, i32 0, i32 0), i32 noundef 194) #22, !dbg !15312
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.304, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #22, !dbg !15312
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.298, i32 0, i32 0), i32 noundef 194) #22, !dbg !15312
  unreachable, !dbg !15312

8:                                                ; preds = %4
  %9 = extractvalue { i32, i32 } %1, 0, !dbg !15298
  call void @llvm.dbg.value(metadata i32 %9, metadata !14886, metadata !DIExpression()) #20, !dbg !15300
  call void @llvm.dbg.value(metadata i32 %9, metadata !14880, metadata !DIExpression()) #20, !dbg !15296
  call void @llvm.dbg.value(metadata i32 %9, metadata !15293, metadata !DIExpression()), !dbg !15295
  call void @llvm.dbg.value(metadata i32 undef, metadata !14947, metadata !DIExpression()) #20, !dbg !15308
  call void @llvm.dbg.value(metadata i32 undef, metadata !14961, metadata !DIExpression()) #20, !dbg !15313
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #20, !dbg !15315, !srcloc !14967
  call void @llvm.dbg.value(metadata i32 %5, metadata !15290, metadata !DIExpression()), !dbg !15294
  call void @llvm.dbg.value(metadata i32 undef, metadata !15291, metadata !DIExpression()), !dbg !15295
  ret i32 %5, !dbg !15316
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_set_timeout_expiry(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !15317 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15319, metadata !DIExpression()), !dbg !15329
  call void @llvm.dbg.value(metadata i1 %1, metadata !15320, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15329
  call void @llvm.dbg.value(metadata i32 0, metadata !15321, metadata !DIExpression()), !dbg !15330
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !14874, metadata !DIExpression()) #20, !dbg !15331
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #20, !dbg !15333, !srcloc !14889
  call void @llvm.dbg.value(metadata i32 undef, metadata !14886, metadata !DIExpression()) #20, !dbg !15335
  call void @llvm.dbg.value(metadata i32 undef, metadata !14887, metadata !DIExpression()) #20, !dbg !15335
  call void @llvm.dbg.value(metadata i32 undef, metadata !14880, metadata !DIExpression()) #20, !dbg !15331
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #22, !dbg !15336
  br i1 %4, label %6, label %5, !dbg !15337

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.293, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.297, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.298, i32 0, i32 0), i32 noundef 148) #22, !dbg !15338
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.299, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #22, !dbg !15338
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.298, i32 0, i32 0), i32 noundef 148) #22, !dbg !15338
  unreachable, !dbg !15338

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !14886, metadata !DIExpression()) #20, !dbg !15335
  call void @llvm.dbg.value(metadata i32 undef, metadata !14880, metadata !DIExpression()) #20, !dbg !15331
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #22, !dbg !15339
  call void @llvm.dbg.value(metadata i32 undef, metadata !15323, metadata !DIExpression()), !dbg !15330
  call void @llvm.dbg.value(metadata i32 undef, metadata !15321, metadata !DIExpression()), !dbg !15330
  %7 = tail call fastcc i32 @next_timeout() #21, !dbg !15340
  call void @llvm.dbg.value(metadata i32 %7, metadata !15324, metadata !DIExpression()), !dbg !15341
  call void @llvm.dbg.value(metadata i1 undef, metadata !15327, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15341
  %8 = icmp slt i32 %7, 2, !dbg !15342
  call void @llvm.dbg.value(metadata i1 %8, metadata !15328, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15341
  %9 = icmp slt i32 %7, %0
  %10 = or i1 %8, %9, !dbg !15343
  call void @llvm.dbg.value(metadata i1 %9, metadata !15327, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15341
  br i1 %10, label %14, label %11, !dbg !15343

11:                                               ; preds = %6
  %12 = icmp sgt i32 %7, %0, !dbg !15345
  %13 = select i1 %12, i32 %0, i32 %7, !dbg !15345
  tail call void @sys_clock_set_timeout(i32 noundef %13, i1 noundef zeroext %1) #22, !dbg !15347
  br label %14, !dbg !15348

14:                                               ; preds = %11, %6
  call void @llvm.dbg.value(metadata i32 undef, metadata !14947, metadata !DIExpression()) #20, !dbg !15349
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !14952, metadata !DIExpression()) #20, !dbg !15349
  %15 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #22, !dbg !15351
  br i1 %15, label %17, label %16, !dbg !15352

16:                                               ; preds = %14
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.293, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.303, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.298, i32 0, i32 0), i32 noundef 194) #22, !dbg !15353
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.304, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #22, !dbg !15353
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.298, i32 0, i32 0), i32 noundef 194) #22, !dbg !15353
  unreachable, !dbg !15353

17:                                               ; preds = %14
  %18 = extractvalue { i32, i32 } %3, 0, !dbg !15333
  call void @llvm.dbg.value(metadata i32 %18, metadata !14886, metadata !DIExpression()) #20, !dbg !15335
  call void @llvm.dbg.value(metadata i32 %18, metadata !14880, metadata !DIExpression()) #20, !dbg !15331
  call void @llvm.dbg.value(metadata i32 %18, metadata !15323, metadata !DIExpression()), !dbg !15330
  call void @llvm.dbg.value(metadata i32 undef, metadata !14947, metadata !DIExpression()) #20, !dbg !15349
  call void @llvm.dbg.value(metadata i32 undef, metadata !14961, metadata !DIExpression()) #20, !dbg !15354
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #20, !dbg !15356, !srcloc !14967
  call void @llvm.dbg.value(metadata i32 1, metadata !15321, metadata !DIExpression()), !dbg !15330
  call void @llvm.dbg.value(metadata i32 undef, metadata !15321, metadata !DIExpression()), !dbg !15330
  ret void, !dbg !15357
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_announce(i32 noundef %0) local_unnamed_addr #1 !dbg !15358 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15362, metadata !DIExpression()), !dbg !15367
  tail call void @z_time_slice(i32 noundef %0) #22, !dbg !15368
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !14874, metadata !DIExpression()) #20, !dbg !15369
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #20, !dbg !15371, !srcloc !14889
  call void @llvm.dbg.value(metadata i32 undef, metadata !14886, metadata !DIExpression()) #20, !dbg !15373
  call void @llvm.dbg.value(metadata i32 undef, metadata !14887, metadata !DIExpression()) #20, !dbg !15373
  call void @llvm.dbg.value(metadata i32 undef, metadata !14880, metadata !DIExpression()) #20, !dbg !15369
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #22, !dbg !15374
  br i1 %3, label %5, label %4, !dbg !15375

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.293, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.297, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.298, i32 0, i32 0), i32 noundef 148) #22, !dbg !15376
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.299, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #22, !dbg !15376
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.298, i32 0, i32 0), i32 noundef 148) #22, !dbg !15376
  unreachable, !dbg !15376

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14886, metadata !DIExpression()) #20, !dbg !15373
  call void @llvm.dbg.value(metadata i32 undef, metadata !14880, metadata !DIExpression()) #20, !dbg !15369
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #22, !dbg !15377
  call void @llvm.dbg.value(metadata i32 undef, metadata !15363, metadata !DIExpression()), !dbg !15367
  store i32 %0, i32* @announce_remaining, align 4, !dbg !15367
  call void @llvm.dbg.value(metadata i32 undef, metadata !15363, metadata !DIExpression()), !dbg !15367
  %6 = tail call fastcc %struct._timeout* @first() #21, !dbg !15378
  %7 = icmp eq %struct._timeout* %6, null, !dbg !15379
  br i1 %7, label %37, label %8, !dbg !15380

8:                                                ; preds = %5, %30
  %9 = phi %struct._timeout* [ %33, %30 ], [ %6, %5 ]
  %10 = phi { i32, i32 } [ %27, %30 ], [ %2, %5 ]
  %11 = phi i32 [ %32, %30 ], [ %0, %5 ]
  %12 = extractvalue { i32, i32 } %10, 0, !dbg !15367
  %13 = getelementptr inbounds %struct._timeout, %struct._timeout* %9, i32 0, i32 2, !dbg !15381
  %14 = load i64, i64* %13, align 8, !dbg !15381
  %15 = sext i32 %11 to i64, !dbg !15382
  %16 = icmp sgt i64 %14, %15, !dbg !15383
  br i1 %16, label %35, label %17, !dbg !15384

17:                                               ; preds = %8
  call void @llvm.dbg.value(metadata %struct._timeout* %9, metadata !15364, metadata !DIExpression()), !dbg !15385
  %18 = trunc i64 %14 to i32, !dbg !15386
  call void @llvm.dbg.value(metadata i32 %18, metadata !15366, metadata !DIExpression()), !dbg !15385
  %19 = sext i32 %18 to i64, !dbg !15387
  %20 = load i64, i64* @curr_tick, align 8, !dbg !15388
  %21 = add i64 %20, %19, !dbg !15388
  store i64 %21, i64* @curr_tick, align 8, !dbg !15388
  store i64 0, i64* %13, align 8, !dbg !15389
  tail call fastcc void @remove_timeout(%struct._timeout* noundef nonnull %9) #21, !dbg !15390
  call void @llvm.dbg.value(metadata i32 undef, metadata !14947, metadata !DIExpression()) #20, !dbg !15391
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !14952, metadata !DIExpression()) #20, !dbg !15391
  %22 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #22, !dbg !15393
  br i1 %22, label %24, label %23, !dbg !15394

23:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.293, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.303, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.298, i32 0, i32 0), i32 noundef 194) #22, !dbg !15395
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.304, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #22, !dbg !15395
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.298, i32 0, i32 0), i32 noundef 194) #22, !dbg !15395
  unreachable, !dbg !15395

24:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 %12, metadata !14947, metadata !DIExpression()) #20, !dbg !15391
  call void @llvm.dbg.value(metadata i32 %12, metadata !14961, metadata !DIExpression()) #20, !dbg !15396
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #20, !dbg !15398, !srcloc !14967
  %25 = getelementptr inbounds %struct._timeout, %struct._timeout* %9, i32 0, i32 1, !dbg !15399
  %26 = load void (%struct._timeout*)*, void (%struct._timeout*)** %25, align 8, !dbg !15399
  tail call void %26(%struct._timeout* noundef nonnull %9) #22, !dbg !15400
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !14874, metadata !DIExpression()) #20, !dbg !15401
  %27 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #20, !dbg !15403, !srcloc !14889
  call void @llvm.dbg.value(metadata i32 undef, metadata !14886, metadata !DIExpression()) #20, !dbg !15405
  call void @llvm.dbg.value(metadata i32 undef, metadata !14887, metadata !DIExpression()) #20, !dbg !15405
  call void @llvm.dbg.value(metadata i32 undef, metadata !14880, metadata !DIExpression()) #20, !dbg !15401
  %28 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #22, !dbg !15406
  br i1 %28, label %30, label %29, !dbg !15407

29:                                               ; preds = %24
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.293, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.297, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.298, i32 0, i32 0), i32 noundef 148) #22, !dbg !15408
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.299, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #22, !dbg !15408
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.298, i32 0, i32 0), i32 noundef 148) #22, !dbg !15408
  unreachable, !dbg !15408

30:                                               ; preds = %24
  call void @llvm.dbg.value(metadata i32 undef, metadata !14886, metadata !DIExpression()) #20, !dbg !15405
  call void @llvm.dbg.value(metadata i32 undef, metadata !14880, metadata !DIExpression()) #20, !dbg !15401
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #22, !dbg !15409
  call void @llvm.dbg.value(metadata i32 undef, metadata !15363, metadata !DIExpression()), !dbg !15367
  %31 = load i32, i32* @announce_remaining, align 4, !dbg !15410
  %32 = sub nsw i32 %31, %18, !dbg !15410
  store i32 %32, i32* @announce_remaining, align 4, !dbg !15367
  call void @llvm.dbg.value(metadata i32 undef, metadata !15363, metadata !DIExpression()), !dbg !15367
  %33 = tail call fastcc %struct._timeout* @first() #21, !dbg !15378
  %34 = icmp eq %struct._timeout* %33, null, !dbg !15379
  br i1 %34, label %37, label %8, !dbg !15380, !llvm.loop !15411

35:                                               ; preds = %8
  %36 = sub nsw i64 %14, %15, !dbg !15413
  store i64 %36, i64* %13, align 8, !dbg !15413
  br label %41, !dbg !15416

37:                                               ; preds = %30, %5
  %38 = phi { i32, i32 } [ %2, %5 ], [ %27, %30 ]
  %39 = phi i32 [ %0, %5 ], [ %32, %30 ], !dbg !15367
  %40 = sext i32 %39 to i64, !dbg !15417
  br label %41, !dbg !15417

41:                                               ; preds = %37, %35
  %42 = phi i64 [ %40, %37 ], [ %15, %35 ], !dbg !15417
  %43 = phi { i32, i32 } [ %38, %37 ], [ %10, %35 ]
  %44 = load i64, i64* @curr_tick, align 8, !dbg !15418
  %45 = add i64 %44, %42, !dbg !15418
  store i64 %45, i64* @curr_tick, align 8, !dbg !15418
  store i32 0, i32* @announce_remaining, align 4, !dbg !15419
  %46 = tail call fastcc i32 @next_timeout() #21, !dbg !15420
  tail call void @sys_clock_set_timeout(i32 noundef %46, i1 noundef zeroext false) #22, !dbg !15421
  call void @llvm.dbg.value(metadata i32 undef, metadata !14947, metadata !DIExpression()) #20, !dbg !15422
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !14952, metadata !DIExpression()) #20, !dbg !15422
  %47 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #22, !dbg !15424
  br i1 %47, label %49, label %48, !dbg !15425

48:                                               ; preds = %41
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.293, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.303, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.298, i32 0, i32 0), i32 noundef 194) #22, !dbg !15426
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.304, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #22, !dbg !15426
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.298, i32 0, i32 0), i32 noundef 194) #22, !dbg !15426
  unreachable, !dbg !15426

49:                                               ; preds = %41
  %50 = extractvalue { i32, i32 } %43, 0, !dbg !15367
  call void @llvm.dbg.value(metadata i32 %50, metadata !14947, metadata !DIExpression()) #20, !dbg !15422
  call void @llvm.dbg.value(metadata i32 %50, metadata !14961, metadata !DIExpression()) #20, !dbg !15427
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %50) #20, !dbg !15429, !srcloc !14967
  ret void, !dbg !15430
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_tick_get() local_unnamed_addr #1 !dbg !15431 {
  call void @llvm.dbg.value(metadata i64 0, metadata !15435, metadata !DIExpression()), !dbg !15439
  call void @llvm.dbg.value(metadata i32 0, metadata !15436, metadata !DIExpression()), !dbg !15440
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !14874, metadata !DIExpression()) #20, !dbg !15441
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #20, !dbg !15443, !srcloc !14889
  call void @llvm.dbg.value(metadata i32 undef, metadata !14886, metadata !DIExpression()) #20, !dbg !15445
  call void @llvm.dbg.value(metadata i32 undef, metadata !14887, metadata !DIExpression()) #20, !dbg !15445
  call void @llvm.dbg.value(metadata i32 undef, metadata !14880, metadata !DIExpression()) #20, !dbg !15441
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #22, !dbg !15446
  br i1 %2, label %4, label %3, !dbg !15447

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.293, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.297, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.298, i32 0, i32 0), i32 noundef 148) #22, !dbg !15448
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.299, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #22, !dbg !15448
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.298, i32 0, i32 0), i32 noundef 148) #22, !dbg !15448
  unreachable, !dbg !15448

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !14886, metadata !DIExpression()) #20, !dbg !15445
  call void @llvm.dbg.value(metadata i32 undef, metadata !14880, metadata !DIExpression()) #20, !dbg !15441
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #22, !dbg !15449
  call void @llvm.dbg.value(metadata i32 undef, metadata !15438, metadata !DIExpression()), !dbg !15440
  call void @llvm.dbg.value(metadata i64 0, metadata !15435, metadata !DIExpression()), !dbg !15439
  call void @llvm.dbg.value(metadata i32 undef, metadata !15436, metadata !DIExpression()), !dbg !15440
  %5 = load i64, i64* @curr_tick, align 8, !dbg !15450
  %6 = tail call fastcc i32 @elapsed.300() #21, !dbg !15453
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i32 %6), metadata !15435, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_plus, DW_OP_stack_value)), !dbg !15439
  call void @llvm.dbg.value(metadata i32 undef, metadata !14947, metadata !DIExpression()) #20, !dbg !15454
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !14952, metadata !DIExpression()) #20, !dbg !15454
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #22, !dbg !15456
  br i1 %7, label %9, label %8, !dbg !15457

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.293, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.303, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.298, i32 0, i32 0), i32 noundef 194) #22, !dbg !15458
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.304, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #22, !dbg !15458
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.298, i32 0, i32 0), i32 noundef 194) #22, !dbg !15458
  unreachable, !dbg !15458

9:                                                ; preds = %4
  %10 = extractvalue { i32, i32 } %1, 0, !dbg !15443
  call void @llvm.dbg.value(metadata i32 %10, metadata !14886, metadata !DIExpression()) #20, !dbg !15445
  call void @llvm.dbg.value(metadata i32 %10, metadata !14880, metadata !DIExpression()) #20, !dbg !15441
  call void @llvm.dbg.value(metadata i32 %10, metadata !15438, metadata !DIExpression()), !dbg !15440
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i32 %6), metadata !15435, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_plus, DW_OP_stack_value)), !dbg !15439
  call void @llvm.dbg.value(metadata !DIArgList(i32 %6, i64 %5), metadata !15435, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !15439
  call void @llvm.dbg.value(metadata i32 undef, metadata !14947, metadata !DIExpression()) #20, !dbg !15454
  call void @llvm.dbg.value(metadata i32 undef, metadata !14961, metadata !DIExpression()) #20, !dbg !15459
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %10) #20, !dbg !15461, !srcloc !14967
  call void @llvm.dbg.value(metadata i32 undef, metadata !15436, metadata !DIExpression()), !dbg !15440
  %11 = sext i32 %6 to i64, !dbg !15453
  %12 = add i64 %5, %11, !dbg !15462
  ret i64 %12, !dbg !15463
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_tick_get_32() local_unnamed_addr #1 !dbg !15464 {
  %1 = tail call i64 @sys_clock_tick_get() #21, !dbg !15465
  %2 = trunc i64 %1 to i32, !dbg !15466
  ret i32 %2, !dbg !15467
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_impl_k_uptime_ticks() local_unnamed_addr #1 !dbg !15468 {
  %1 = tail call i64 @sys_clock_tick_get() #21, !dbg !15469
  ret i64 %1, !dbg !15470
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_busy_wait(i32 noundef %0) local_unnamed_addr #1 !dbg !15471 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15473, metadata !DIExpression()), !dbg !15480
  %2 = icmp eq i32 %0, 0, !dbg !15481
  br i1 %2, label %10, label %3, !dbg !15483

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @k_cycle_get_32.320() #21, !dbg !15484
  call void @llvm.dbg.value(metadata i32 %4, metadata !15474, metadata !DIExpression()), !dbg !15480
  %5 = mul i32 %0, 200, !dbg !15485
  call void @llvm.dbg.value(metadata i32 %5, metadata !15475, metadata !DIExpression()), !dbg !15480
  br label %6, !dbg !15486

6:                                                ; preds = %6, %3
  %7 = tail call fastcc i32 @k_cycle_get_32.320() #21, !dbg !15487
  call void @llvm.dbg.value(metadata i32 %7, metadata !15476, metadata !DIExpression()), !dbg !15488
  %8 = sub i32 %7, %4, !dbg !15489
  %9 = icmp ult i32 %8, %5, !dbg !15491
  br i1 %9, label %6, label %10

10:                                               ; preds = %6, %1
  ret void, !dbg !15492
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32.320() unnamed_addr #1 !dbg !15493 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32.321() #21, !dbg !15494
  ret i32 %1, !dbg !15495
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32.321() unnamed_addr #1 !dbg !15496 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #22, !dbg !15497
  ret i32 %1, !dbg !15498
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_timeout_end_calc([1 x i64] %0) local_unnamed_addr #1 !dbg !15499 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !15503, metadata !DIExpression()), !dbg !15505
  switch i64 %2, label %5 [
    i64 -1, label %14
    i64 0, label %3
  ], !dbg !15506

3:                                                ; preds = %1
  %4 = tail call i64 @sys_clock_tick_get() #21, !dbg !15507
  br label %14, !dbg !15511

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !15504, metadata !DIExpression()), !dbg !15505
  %6 = icmp slt i64 %2, -1, !dbg !15512
  br i1 %6, label %7, label %9, !dbg !15515

7:                                                ; preds = %5
  %8 = sub nuw nsw i64 -2, %2, !dbg !15516
  br label %14, !dbg !15517

9:                                                ; preds = %5
  %10 = tail call i64 @sys_clock_tick_get() #21, !dbg !15519
  %11 = icmp ugt i64 %2, 1, !dbg !15520
  %12 = select i1 %11, i64 %2, i64 1, !dbg !15520
  %13 = add nsw i64 %10, %12, !dbg !15521
  br label %14, !dbg !15522

14:                                               ; preds = %1, %9, %7, %3
  %15 = phi i64 [ %4, %3 ], [ %8, %7 ], [ %13, %9 ], [ %2, %1 ], !dbg !15523
  ret i64 %15, !dbg !15524
}

; Function Attrs: noinline nounwind optsize
define dso_local void @boot_banner() local_unnamed_addr #1 !dbg !15525 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.324, i32 0, i32 0)) #22, !dbg !15527
  ret void, !dbg !15528
}

attributes #0 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #1 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #2 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #3 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #4 = { argmemonly nofree nosync nounwind willreturn }
attributes #5 = { nofree nosync nounwind willreturn }
attributes #6 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #7 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #8 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #10 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #11 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { argmemonly nofree nounwind willreturn writeonly }
attributes #13 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #14 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #15 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #17 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #18 = { alwaysinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #19 = { mustprogress nofree noinline nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { nounwind }
attributes #21 = { nobuiltin optsize "no-builtins" }
attributes #22 = { nobuiltin nounwind optsize "no-builtins" }
attributes #23 = { nobuiltin nounwind optsize readnone willreturn "no-builtins" }
attributes #24 = { nobuiltin noreturn nounwind optsize "no-builtins" }
attributes #25 = { nobuiltin noreturn optsize "no-builtins" }

!llvm.dbg.cu = !{!1160, !2, !2282, !27, !177, !209, !2284, !2286, !2320, !2322, !218, !2324, !2327, !2338, !2385, !2387, !2415, !2443, !2486, !2558, !2603, !2631, !647, !657, !834, !869, !974, !1171, !1452, !2636, !1714, !2638, !2641, !2718, !2732, !2744, !2869, !1744, !2872, !1750, !2110, !2890, !2131, !2892, !2243, !2895}
!llvm.ident = !{!2897, !2897, !2897, !2897, !2897, !2897, !2897, !2897, !2897, !2897, !2897, !2897, !2897, !2897, !2897, !2897, !2897, !2897, !2897, !2897, !2897, !2897, !2897, !2897, !2897, !2897, !2897, !2897, !2897, !2897, !2897, !2897, !2897, !2897, !2897, !2897, !2897, !2897, !2897, !2897, !2897, !2897, !2897, !2897, !2897, !2897}
!llvm.module.flags = !{!2898, !2899, !2900, !2901, !2902, !2903, !2904, !2905, !2906}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "_irq_vector_table", scope: !2, file: !7, line: 10, type: !21, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/integration/zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/integration")
!4 = !{!0, !5}
!5 = !DIGlobalVariableExpression(var: !6, expr: !DIExpression())
!6 = distinct !DIGlobalVariable(name: "_sw_isr_table", scope: !2, file: !7, line: 139, type: !8, isLocal: false, isDefinition: true)
!7 = !DIFile(filename: "zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/integration")
!8 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 8128, elements: !19)
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_table_entry", file: !10, line: 36, size: 64, elements: !11)
!10 = !DIFile(filename: "zephyr/include/zephyr/sw_isr_table.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11 = !{!12, !15}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !9, file: !10, line: 37, baseType: !13, size: 32)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 32)
!14 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "isr", scope: !9, file: !10, line: 38, baseType: !16, size: 32, offset: 32)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 32)
!17 = !DISubroutineType(types: !18)
!18 = !{null, !13}
!19 = !{!20}
!20 = !DISubrange(count: 127)
!21 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 4064, elements: !19)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !23, line: 105, baseType: !24)
!23 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdint.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!24 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(name: "z_ztest_suite_node_stats_framework_tests", scope: !27, file: !111, line: 10, type: !149, isLocal: false, isDefinition: true)
!27 = distinct !DICompileUnit(language: DW_LANG_C99, file: !28, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !105, globals: !108, splitDebugInlining: false, nameTableKind: None)
!28 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/subsys/testsuite/integration/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/integration")
!29 = !{!30}
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_objects", file: !31, line: 27, baseType: !32, size: 32, elements: !33)
!31 = !DIFile(filename: "zephyr/include/zephyr/sys/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!32 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!33 = !{!34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104}
!34 = !DIEnumerator(name: "K_OBJ_ANY", value: 0)
!35 = !DIEnumerator(name: "K_OBJ_MEM_SLAB", value: 1)
!36 = !DIEnumerator(name: "K_OBJ_MSGQ", value: 2)
!37 = !DIEnumerator(name: "K_OBJ_MUTEX", value: 3)
!38 = !DIEnumerator(name: "K_OBJ_PIPE", value: 4)
!39 = !DIEnumerator(name: "K_OBJ_QUEUE", value: 5)
!40 = !DIEnumerator(name: "K_OBJ_POLL_SIGNAL", value: 6)
!41 = !DIEnumerator(name: "K_OBJ_SEM", value: 7)
!42 = !DIEnumerator(name: "K_OBJ_STACK", value: 8)
!43 = !DIEnumerator(name: "K_OBJ_THREAD", value: 9)
!44 = !DIEnumerator(name: "K_OBJ_TIMER", value: 10)
!45 = !DIEnumerator(name: "K_OBJ_THREAD_STACK_ELEMENT", value: 11)
!46 = !DIEnumerator(name: "K_OBJ_NET_SOCKET", value: 12)
!47 = !DIEnumerator(name: "K_OBJ_NET_IF", value: 13)
!48 = !DIEnumerator(name: "K_OBJ_SYS_MUTEX", value: 14)
!49 = !DIEnumerator(name: "K_OBJ_FUTEX", value: 15)
!50 = !DIEnumerator(name: "K_OBJ_CONDVAR", value: 16)
!51 = !DIEnumerator(name: "K_OBJ_ZTEST_SUITE_NODE", value: 17)
!52 = !DIEnumerator(name: "K_OBJ_ZTEST_SUITE_STATS", value: 18)
!53 = !DIEnumerator(name: "K_OBJ_ZTEST_UNIT_TEST", value: 19)
!54 = !DIEnumerator(name: "K_OBJ_ZTEST_TEST_RULE", value: 20)
!55 = !DIEnumerator(name: "K_OBJ_DRIVER_CRYPTO", value: 21)
!56 = !DIEnumerator(name: "K_OBJ_DRIVER_ADC", value: 22)
!57 = !DIEnumerator(name: "K_OBJ_DRIVER_BBRAM", value: 23)
!58 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN", value: 24)
!59 = !DIEnumerator(name: "K_OBJ_DRIVER_COREDUMP", value: 25)
!60 = !DIEnumerator(name: "K_OBJ_DRIVER_COUNTER", value: 26)
!61 = !DIEnumerator(name: "K_OBJ_DRIVER_DAC", value: 27)
!62 = !DIEnumerator(name: "K_OBJ_DRIVER_DAI", value: 28)
!63 = !DIEnumerator(name: "K_OBJ_DRIVER_DMA", value: 29)
!64 = !DIEnumerator(name: "K_OBJ_DRIVER_EDAC", value: 30)
!65 = !DIEnumerator(name: "K_OBJ_DRIVER_EEPROM", value: 31)
!66 = !DIEnumerator(name: "K_OBJ_DRIVER_ENTROPY", value: 32)
!67 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI", value: 33)
!68 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI_SAF", value: 34)
!69 = !DIEnumerator(name: "K_OBJ_DRIVER_FLASH", value: 35)
!70 = !DIEnumerator(name: "K_OBJ_DRIVER_FPGA", value: 36)
!71 = !DIEnumerator(name: "K_OBJ_DRIVER_BATTERY", value: 37)
!72 = !DIEnumerator(name: "K_OBJ_DRIVER_GPIO", value: 38)
!73 = !DIEnumerator(name: "K_OBJ_DRIVER_I2C", value: 39)
!74 = !DIEnumerator(name: "K_OBJ_DRIVER_I2S", value: 40)
!75 = !DIEnumerator(name: "K_OBJ_DRIVER_I3C", value: 41)
!76 = !DIEnumerator(name: "K_OBJ_DRIVER_IPM", value: 42)
!77 = !DIEnumerator(name: "K_OBJ_DRIVER_KSCAN", value: 43)
!78 = !DIEnumerator(name: "K_OBJ_DRIVER_LED", value: 44)
!79 = !DIEnumerator(name: "K_OBJ_DRIVER_MBOX", value: 45)
!80 = !DIEnumerator(name: "K_OBJ_DRIVER_MDIO", value: 46)
!81 = !DIEnumerator(name: "K_OBJ_DRIVER_MIPI_DSI", value: 47)
!82 = !DIEnumerator(name: "K_OBJ_DRIVER_PECI", value: 48)
!83 = !DIEnumerator(name: "K_OBJ_DRIVER_PINMUX", value: 49)
!84 = !DIEnumerator(name: "K_OBJ_DRIVER_PS2", value: 50)
!85 = !DIEnumerator(name: "K_OBJ_DRIVER_PTP_CLOCK", value: 51)
!86 = !DIEnumerator(name: "K_OBJ_DRIVER_PWM", value: 52)
!87 = !DIEnumerator(name: "K_OBJ_DRIVER_REGULATOR", value: 53)
!88 = !DIEnumerator(name: "K_OBJ_DRIVER_RESET", value: 54)
!89 = !DIEnumerator(name: "K_OBJ_DRIVER_SDHC", value: 55)
!90 = !DIEnumerator(name: "K_OBJ_DRIVER_SENSOR", value: 56)
!91 = !DIEnumerator(name: "K_OBJ_DRIVER_SPI", value: 57)
!92 = !DIEnumerator(name: "K_OBJ_DRIVER_SYSCON", value: 58)
!93 = !DIEnumerator(name: "K_OBJ_DRIVER_UART", value: 59)
!94 = !DIEnumerator(name: "K_OBJ_DRIVER_W1", value: 60)
!95 = !DIEnumerator(name: "K_OBJ_DRIVER_WDT", value: 61)
!96 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN_TRANSCEIVER", value: 62)
!97 = !DIEnumerator(name: "K_OBJ_DRIVER_UART_MUX", value: 63)
!98 = !DIEnumerator(name: "K_OBJ_DRIVER_EC_HOST_CMD_PERIPH_API", value: 64)
!99 = !DIEnumerator(name: "K_OBJ_DRIVER_ITS", value: 65)
!100 = !DIEnumerator(name: "K_OBJ_DRIVER_PCIE_CTRL", value: 66)
!101 = !DIEnumerator(name: "K_OBJ_DRIVER_TCPC", value: 67)
!102 = !DIEnumerator(name: "K_OBJ_DRIVER_IVSHMEM", value: 68)
!103 = !DIEnumerator(name: "K_OBJ_DRIVER_ETHPHY", value: 69)
!104 = !DIEnumerator(name: "K_OBJ_LAST", value: 70)
!105 = !{!106, !107}
!106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!107 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!108 = !{!109, !155, !25, !173}
!109 = !DIGlobalVariableExpression(var: !110, expr: !DIExpression())
!110 = distinct !DIGlobalVariable(name: "z_ztest_test_node_framework_tests", scope: !27, file: !111, line: 10, type: !112, isLocal: true, isDefinition: true, align: 32)
!111 = !DIFile(filename: "zephyr/samples/subsys/testsuite/integration/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!112 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !113)
!113 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_suite_node", file: !114, line: 177, size: 224, elements: !115)
!114 = !DIFile(filename: "zephyr/subsys/testsuite/ztest/include/zephyr/ztest_test_new.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!115 = !{!116, !121, !127, !133, !136, !139, !146}
!116 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !113, file: !114, line: 179, baseType: !117, size: 32)
!117 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !118)
!118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !119, size: 32)
!119 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !120)
!120 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!121 = !DIDerivedType(tag: DW_TAG_member, name: "setup", scope: !113, file: !114, line: 182, baseType: !122, size: 32, offset: 32)
!122 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !123)
!123 = !DIDerivedType(tag: DW_TAG_typedef, name: "ztest_suite_setup_t", file: !114, line: 141, baseType: !124)
!124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !125, size: 32)
!125 = !DISubroutineType(types: !126)
!126 = !{!106}
!127 = !DIDerivedType(tag: DW_TAG_member, name: "before", scope: !113, file: !114, line: 185, baseType: !128, size: 32, offset: 64)
!128 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !129)
!129 = !DIDerivedType(tag: DW_TAG_typedef, name: "ztest_suite_before_t", file: !114, line: 148, baseType: !130)
!130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !131, size: 32)
!131 = !DISubroutineType(types: !132)
!132 = !{null, !106}
!133 = !DIDerivedType(tag: DW_TAG_member, name: "after", scope: !113, file: !114, line: 188, baseType: !134, size: 32, offset: 96)
!134 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !135)
!135 = !DIDerivedType(tag: DW_TAG_typedef, name: "ztest_suite_after_t", file: !114, line: 155, baseType: !130)
!136 = !DIDerivedType(tag: DW_TAG_member, name: "teardown", scope: !113, file: !114, line: 191, baseType: !137, size: 32, offset: 128)
!137 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !138)
!138 = !DIDerivedType(tag: DW_TAG_typedef, name: "ztest_suite_teardown_t", file: !114, line: 162, baseType: !130)
!139 = !DIDerivedType(tag: DW_TAG_member, name: "predicate", scope: !113, file: !114, line: 194, baseType: !140, size: 32, offset: 160)
!140 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !141)
!141 = !DIDerivedType(tag: DW_TAG_typedef, name: "ztest_suite_predicate_t", file: !114, line: 171, baseType: !142)
!142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !143, size: 32)
!143 = !DISubroutineType(types: !144)
!144 = !{!145, !13}
!145 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!146 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !113, file: !114, line: 197, baseType: !147, size: 32, offset: 192)
!147 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !148)
!148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !149, size: 32)
!149 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_suite_stats", file: !114, line: 114, size: 96, elements: !150)
!150 = !{!151, !153, !154}
!151 = !DIDerivedType(tag: DW_TAG_member, name: "run_count", scope: !149, file: !114, line: 116, baseType: !152, size: 32)
!152 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !23, line: 90, baseType: !32)
!153 = !DIDerivedType(tag: DW_TAG_member, name: "skip_count", scope: !149, file: !114, line: 118, baseType: !152, size: 32, offset: 32)
!154 = !DIDerivedType(tag: DW_TAG_member, name: "fail_count", scope: !149, file: !114, line: 120, baseType: !152, size: 32, offset: 64)
!155 = !DIGlobalVariableExpression(var: !156, expr: !DIExpression())
!156 = distinct !DIGlobalVariable(name: "z_ztest_unit_test__framework_tests__test_assert", scope: !27, file: !111, line: 18, type: !157, isLocal: true, isDefinition: true, align: 32)
!157 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_unit_test", file: !114, line: 97, size: 160, elements: !158)
!158 = !{!159, !160, !161, !162, !163}
!159 = !DIDerivedType(tag: DW_TAG_member, name: "test_suite_name", scope: !157, file: !114, line: 98, baseType: !118, size: 32)
!160 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !157, file: !114, line: 99, baseType: !118, size: 32, offset: 32)
!161 = !DIDerivedType(tag: DW_TAG_member, name: "test", scope: !157, file: !114, line: 100, baseType: !130, size: 32, offset: 64)
!162 = !DIDerivedType(tag: DW_TAG_member, name: "thread_options", scope: !157, file: !114, line: 101, baseType: !152, size: 32, offset: 96)
!163 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !157, file: !114, line: 104, baseType: !164, size: 32, offset: 128)
!164 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !165)
!165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !166, size: 32)
!166 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_unit_test_stats", file: !114, line: 123, size: 160, elements: !167)
!167 = !{!168, !169, !170, !171, !172}
!168 = !DIDerivedType(tag: DW_TAG_member, name: "run_count", scope: !166, file: !114, line: 125, baseType: !152, size: 32)
!169 = !DIDerivedType(tag: DW_TAG_member, name: "skip_count", scope: !166, file: !114, line: 127, baseType: !152, size: 32, offset: 32)
!170 = !DIDerivedType(tag: DW_TAG_member, name: "fail_count", scope: !166, file: !114, line: 129, baseType: !152, size: 32, offset: 64)
!171 = !DIDerivedType(tag: DW_TAG_member, name: "pass_count", scope: !166, file: !114, line: 131, baseType: !152, size: 32, offset: 96)
!172 = !DIDerivedType(tag: DW_TAG_member, name: "duration_worst_ms", scope: !166, file: !114, line: 133, baseType: !152, size: 32, offset: 128)
!173 = !DIGlobalVariableExpression(var: !174, expr: !DIExpression())
!174 = distinct !DIGlobalVariable(name: "z_ztest_unit_test_stats_framework_tests_test_assert", scope: !27, file: !111, line: 18, type: !166, isLocal: false, isDefinition: true)
!175 = !DIGlobalVariableExpression(var: !176, expr: !DIExpression())
!176 = distinct !DIGlobalVariable(name: "log_const_cbprintf_package", scope: !177, file: !200, line: 18, type: !201, isLocal: false, isDefinition: true)
!177 = distinct !DICompileUnit(language: DW_LANG_C99, file: !178, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !179, globals: !199, splitDebugInlining: false, nameTableKind: None)
!178 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_packaged.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/integration")
!179 = !{!22, !106, !24, !180, !182, !184, !185, !107, !187, !188, !190, !192, !193, !194, !197, !118}
!180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !181, size: 32)
!181 = !DIBasicType(name: "long double", size: 64, encoding: DW_ATE_float)
!182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !183, size: 32)
!183 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !118, size: 32)
!185 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !186, line: 214, baseType: !32)
!186 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stddef.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !107, size: 32)
!188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !189, size: 32)
!189 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !191, size: 32)
!191 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !193, size: 32)
!193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !120, size: 32)
!194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !195, size: 32)
!195 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !23, line: 88, baseType: !196)
!196 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!197 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !23, line: 89, baseType: !198)
!198 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!199 = !{!175}
!200 = !DIFile(filename: "zephyr/lib/os/cbprintf_packaged.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!201 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !202)
!202 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !203, line: 16, size: 64, elements: !204)
!203 = !DIFile(filename: "zephyr/include/zephyr/logging/log_instance.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!204 = !{!205, !206}
!205 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !202, file: !203, line: 17, baseType: !118, size: 32)
!206 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !202, file: !203, line: 18, baseType: !195, size: 8, offset: 32)
!207 = !DIGlobalVariableExpression(var: !208, expr: !DIExpression())
!208 = distinct !DIGlobalVariable(name: "_char_out", scope: !209, file: !212, line: 54, type: !213, isLocal: false, isDefinition: true)
!209 = distinct !DICompileUnit(language: DW_LANG_C99, file: !210, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !105, globals: !211, splitDebugInlining: false, nameTableKind: None)
!210 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/integration")
!211 = !{!207}
!212 = !DIFile(filename: "zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !214, size: 32)
!214 = !DISubroutineType(types: !215)
!215 = !{!107, !107}
!216 = !DIGlobalVariableExpression(var: !217, expr: !DIExpression())
!217 = distinct !DIGlobalVariable(name: "__init_nxp_mcimx7_init", scope: !218, file: !632, line: 258, type: !633, isLocal: true, isDefinition: true, align: 32)
!218 = distinct !DICompileUnit(language: DW_LANG_C99, file: !219, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !220, retainedTypes: !503, globals: !631, splitDebugInlining: false, nameTableKind: None)
!219 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/nxp_imx/mcimx7_m4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/integration")
!220 = !{!221, !253, !263, !312, !318, !439, !474}
!221 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_ccm_root_control", file: !222, line: 54, baseType: !32, size: 32, elements: !223)
!222 = !DIFile(filename: "modules/hal/nxp/imx/drivers/./ccm_imx7d.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!223 = !{!224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252}
!224 = !DIEnumerator(name: "ccmRootM4", value: 809009280)
!225 = !DIEnumerator(name: "ccmRootAxi", value: 809011200)
!226 = !DIEnumerator(name: "ccmRootAhb", value: 809013248)
!227 = !DIEnumerator(name: "ccmRootIpg", value: 809013376)
!228 = !DIEnumerator(name: "ccmRootQspi", value: 809020032)
!229 = !DIEnumerator(name: "ccmRootCan1", value: 809020544)
!230 = !DIEnumerator(name: "ccmRootCan2", value: 809020672)
!231 = !DIEnumerator(name: "ccmRootI2c1", value: 809020800)
!232 = !DIEnumerator(name: "ccmRootI2c2", value: 809020928)
!233 = !DIEnumerator(name: "ccmRootI2c3", value: 809021056)
!234 = !DIEnumerator(name: "ccmRootI2c4", value: 809021184)
!235 = !DIEnumerator(name: "ccmRootUart1", value: 809021312)
!236 = !DIEnumerator(name: "ccmRootUart2", value: 809021440)
!237 = !DIEnumerator(name: "ccmRootUart3", value: 809021568)
!238 = !DIEnumerator(name: "ccmRootUart4", value: 809021696)
!239 = !DIEnumerator(name: "ccmRootUart5", value: 809021824)
!240 = !DIEnumerator(name: "ccmRootUart6", value: 809021952)
!241 = !DIEnumerator(name: "ccmRootUart7", value: 809022080)
!242 = !DIEnumerator(name: "ccmRootEcspi1", value: 809022208)
!243 = !DIEnumerator(name: "ccmRootEcspi2", value: 809022336)
!244 = !DIEnumerator(name: "ccmRootEcspi3", value: 809022464)
!245 = !DIEnumerator(name: "ccmRootEcspi4", value: 809022592)
!246 = !DIEnumerator(name: "ccmRootFtm1", value: 809023232)
!247 = !DIEnumerator(name: "ccmRootFtm2", value: 809023360)
!248 = !DIEnumerator(name: "ccmRootGpt1", value: 809023744)
!249 = !DIEnumerator(name: "ccmRootGpt2", value: 809023872)
!250 = !DIEnumerator(name: "ccmRootGpt3", value: 809024000)
!251 = !DIEnumerator(name: "ccmRootGpt4", value: 809024128)
!252 = !DIEnumerator(name: "ccmRootWdog", value: 809024384)
!253 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_ccm_rootmux_wdog", file: !222, line: 224, baseType: !32, size: 32, elements: !254)
!254 = !{!255, !256, !257, !258, !259, !260, !261, !262}
!255 = !DIEnumerator(name: "ccmRootmuxWdogOsc24m", value: 0)
!256 = !DIEnumerator(name: "ccmRootmuxWdogSysPllPfd2Div2", value: 1)
!257 = !DIEnumerator(name: "ccmRootmuxWdogSysPllDiv4", value: 2)
!258 = !DIEnumerator(name: "ccmRootmuxWdogDdrPllDiv2", value: 3)
!259 = !DIEnumerator(name: "ccmRootmuxWdogEnetPll125m", value: 4)
!260 = !DIEnumerator(name: "ccmRootmuxWdogUsbPll", value: 5)
!261 = !DIEnumerator(name: "ccmRootmuxWdogRef1m", value: 6)
!262 = !DIEnumerator(name: "ccmRootmuxWdogSysPllPfd1Div2", value: 7)
!263 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_ccm_ccgr_gate", file: !222, line: 275, baseType: !32, size: 32, elements: !264)
!264 = !{!265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311}
!265 = !DIEnumerator(name: "ccmCcgrGateSimWakeup", value: 808992912)
!266 = !DIEnumerator(name: "ccmCcgrGateIpmux1", value: 808992928)
!267 = !DIEnumerator(name: "ccmCcgrGateIpmux2", value: 808992944)
!268 = !DIEnumerator(name: "ccmCcgrGateIpmux3", value: 808992960)
!269 = !DIEnumerator(name: "ccmCcgrGateOcram", value: 808993040)
!270 = !DIEnumerator(name: "ccmCcgrGateOcramS", value: 808993056)
!271 = !DIEnumerator(name: "ccmCcgrGateQspi", value: 808993104)
!272 = !DIEnumerator(name: "ccmCcgrGateAdc", value: 808993280)
!273 = !DIEnumerator(name: "ccmCcgrGateRdc", value: 808993376)
!274 = !DIEnumerator(name: "ccmCcgrGateMu", value: 808993392)
!275 = !DIEnumerator(name: "ccmCcgrGateSemaHs", value: 808993408)
!276 = !DIEnumerator(name: "ccmCcgrGateSema1", value: 808993792)
!277 = !DIEnumerator(name: "ccmCcgrGateSema2", value: 808993808)
!278 = !DIEnumerator(name: "ccmCcgrGateCan1", value: 808994624)
!279 = !DIEnumerator(name: "ccmCcgrGateCan2", value: 808994640)
!280 = !DIEnumerator(name: "ccmCcgrGateEcspi1", value: 808994688)
!281 = !DIEnumerator(name: "ccmCcgrGateEcspi2", value: 808994704)
!282 = !DIEnumerator(name: "ccmCcgrGateEcspi3", value: 808994720)
!283 = !DIEnumerator(name: "ccmCcgrGateEcspi4", value: 808994736)
!284 = !DIEnumerator(name: "ccmCcgrGateGpt1", value: 808994752)
!285 = !DIEnumerator(name: "ccmCcgrGateGpt2", value: 808994768)
!286 = !DIEnumerator(name: "ccmCcgrGateGpt3", value: 808994784)
!287 = !DIEnumerator(name: "ccmCcgrGateGpt4", value: 808994800)
!288 = !DIEnumerator(name: "ccmCcgrGateI2c1", value: 808994944)
!289 = !DIEnumerator(name: "ccmCcgrGateI2c2", value: 808994960)
!290 = !DIEnumerator(name: "ccmCcgrGateI2c3", value: 808994976)
!291 = !DIEnumerator(name: "ccmCcgrGateI2c4", value: 808994992)
!292 = !DIEnumerator(name: "ccmCcgrGateUart1", value: 808995136)
!293 = !DIEnumerator(name: "ccmCcgrGateUart2", value: 808995152)
!294 = !DIEnumerator(name: "ccmCcgrGateUart3", value: 808995168)
!295 = !DIEnumerator(name: "ccmCcgrGateUart4", value: 808995184)
!296 = !DIEnumerator(name: "ccmCcgrGateUart5", value: 808995200)
!297 = !DIEnumerator(name: "ccmCcgrGateUart6", value: 808995216)
!298 = !DIEnumerator(name: "ccmCcgrGateUart7", value: 808995232)
!299 = !DIEnumerator(name: "ccmCcgrGateWdog1", value: 808995264)
!300 = !DIEnumerator(name: "ccmCcgrGateWdog2", value: 808995280)
!301 = !DIEnumerator(name: "ccmCcgrGateWdog3", value: 808995296)
!302 = !DIEnumerator(name: "ccmCcgrGateWdog4", value: 808995312)
!303 = !DIEnumerator(name: "ccmCcgrGateGpio1", value: 808995328)
!304 = !DIEnumerator(name: "ccmCcgrGateGpio2", value: 808995344)
!305 = !DIEnumerator(name: "ccmCcgrGateGpio3", value: 808995360)
!306 = !DIEnumerator(name: "ccmCcgrGateGpio4", value: 808995376)
!307 = !DIEnumerator(name: "ccmCcgrGateGpio5", value: 808995392)
!308 = !DIEnumerator(name: "ccmCcgrGateGpio6", value: 808995408)
!309 = !DIEnumerator(name: "ccmCcgrGateGpio7", value: 808995424)
!310 = !DIEnumerator(name: "ccmCcgrGateIomux", value: 808995456)
!311 = !DIEnumerator(name: "ccmCcgrGateIomuxLpsr", value: 808995472)
!312 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_ccm_gate_value", file: !222, line: 327, baseType: !32, size: 32, elements: !313)
!313 = !{!314, !315, !316, !317}
!314 = !DIEnumerator(name: "ccmClockNotNeeded", value: 0)
!315 = !DIEnumerator(name: "ccmClockNeededRun", value: 4369)
!316 = !DIEnumerator(name: "ccmClockNeededRunWait", value: 8738)
!317 = !DIEnumerator(name: "ccmClockNeededAll", value: 13107)
!318 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_rdc_pdap", file: !319, line: 76, baseType: !32, size: 32, elements: !320)
!319 = !DIFile(filename: "modules/hal/nxp/imx/drivers/./rdc_defs_imx7d.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!320 = !{!321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438}
!321 = !DIEnumerator(name: "rdcPdapGpio1", value: 0)
!322 = !DIEnumerator(name: "rdcPdapGpio2", value: 1)
!323 = !DIEnumerator(name: "rdcPdapGpio3", value: 2)
!324 = !DIEnumerator(name: "rdcPdapGpio4", value: 3)
!325 = !DIEnumerator(name: "rdcPdapGpio5", value: 4)
!326 = !DIEnumerator(name: "rdcPdapGpio6", value: 5)
!327 = !DIEnumerator(name: "rdcPdapGpio7", value: 6)
!328 = !DIEnumerator(name: "rdcPdapIomuxcLpsrGpr", value: 7)
!329 = !DIEnumerator(name: "rdcPdapWdog1", value: 8)
!330 = !DIEnumerator(name: "rdcPdapWdog2", value: 9)
!331 = !DIEnumerator(name: "rdcPdapWdog3", value: 10)
!332 = !DIEnumerator(name: "rdcPdapWdog4", value: 11)
!333 = !DIEnumerator(name: "rdcPdapIomuxcLpsr", value: 12)
!334 = !DIEnumerator(name: "rdcPdapGpt1", value: 13)
!335 = !DIEnumerator(name: "rdcPdapGpt2", value: 14)
!336 = !DIEnumerator(name: "rdcPdapGpt3", value: 15)
!337 = !DIEnumerator(name: "rdcPdapGpt4", value: 16)
!338 = !DIEnumerator(name: "rdcPdapRomcp", value: 17)
!339 = !DIEnumerator(name: "rdcPdapKpp", value: 18)
!340 = !DIEnumerator(name: "rdcPdapIomuxc", value: 19)
!341 = !DIEnumerator(name: "rdcPdapIomuxcGpr", value: 20)
!342 = !DIEnumerator(name: "rdcPdapOcotpCtrl", value: 21)
!343 = !DIEnumerator(name: "rdcPdapAnatopDig", value: 22)
!344 = !DIEnumerator(name: "rdcPdapSnvs", value: 23)
!345 = !DIEnumerator(name: "rdcPdapCcm", value: 24)
!346 = !DIEnumerator(name: "rdcPdapSrc", value: 25)
!347 = !DIEnumerator(name: "rdcPdapGpc", value: 26)
!348 = !DIEnumerator(name: "rdcPdapSemaphore1", value: 27)
!349 = !DIEnumerator(name: "rdcPdapSemaphore2", value: 28)
!350 = !DIEnumerator(name: "rdcPdapRdc", value: 29)
!351 = !DIEnumerator(name: "rdcPdapCsu", value: 30)
!352 = !DIEnumerator(name: "rdcPdapReserved1", value: 31)
!353 = !DIEnumerator(name: "rdcPdapReserved2", value: 32)
!354 = !DIEnumerator(name: "rdcPdapAdc1", value: 33)
!355 = !DIEnumerator(name: "rdcPdapAdc2", value: 34)
!356 = !DIEnumerator(name: "rdcPdapEcspi4", value: 35)
!357 = !DIEnumerator(name: "rdcPdapFlexTimer1", value: 36)
!358 = !DIEnumerator(name: "rdcPdapFlexTimer2", value: 37)
!359 = !DIEnumerator(name: "rdcPdapPwm1", value: 38)
!360 = !DIEnumerator(name: "rdcPdapPwm2", value: 39)
!361 = !DIEnumerator(name: "rdcPdapPwm3", value: 40)
!362 = !DIEnumerator(name: "rdcPdapPwm4", value: 41)
!363 = !DIEnumerator(name: "rdcPdapSystemCounterRead", value: 42)
!364 = !DIEnumerator(name: "rdcPdapSystemCounterCompare", value: 43)
!365 = !DIEnumerator(name: "rdcPdapSystemCounterControl", value: 44)
!366 = !DIEnumerator(name: "rdcPdapPcie", value: 45)
!367 = !DIEnumerator(name: "rdcPdapReserved3", value: 46)
!368 = !DIEnumerator(name: "rdcPdapEpdc", value: 47)
!369 = !DIEnumerator(name: "rdcPdapPxp", value: 48)
!370 = !DIEnumerator(name: "rdcPdapCsi", value: 49)
!371 = !DIEnumerator(name: "rdcPdapReserved4", value: 50)
!372 = !DIEnumerator(name: "rdcPdapLcdif", value: 51)
!373 = !DIEnumerator(name: "rdcPdapReserved5", value: 52)
!374 = !DIEnumerator(name: "rdcPdapMipiCsi", value: 53)
!375 = !DIEnumerator(name: "rdcPdapMipiDsi", value: 54)
!376 = !DIEnumerator(name: "rdcPdapReserved6", value: 55)
!377 = !DIEnumerator(name: "rdcPdapTzasc", value: 56)
!378 = !DIEnumerator(name: "rdcPdapDdrPhy", value: 57)
!379 = !DIEnumerator(name: "rdcPdapDdrc", value: 58)
!380 = !DIEnumerator(name: "rdcPdapReserved7", value: 59)
!381 = !DIEnumerator(name: "rdcPdapPerfMon1", value: 60)
!382 = !DIEnumerator(name: "rdcPdapPerfMon2", value: 61)
!383 = !DIEnumerator(name: "rdcPdapAxi", value: 62)
!384 = !DIEnumerator(name: "rdcPdapQosc", value: 63)
!385 = !DIEnumerator(name: "rdcPdapFlexCan1", value: 64)
!386 = !DIEnumerator(name: "rdcPdapFlexCan2", value: 65)
!387 = !DIEnumerator(name: "rdcPdapI2c1", value: 66)
!388 = !DIEnumerator(name: "rdcPdapI2c2", value: 67)
!389 = !DIEnumerator(name: "rdcPdapI2c3", value: 68)
!390 = !DIEnumerator(name: "rdcPdapI2c4", value: 69)
!391 = !DIEnumerator(name: "rdcPdapUart4", value: 70)
!392 = !DIEnumerator(name: "rdcPdapUart5", value: 71)
!393 = !DIEnumerator(name: "rdcPdapUart6", value: 72)
!394 = !DIEnumerator(name: "rdcPdapUart7", value: 73)
!395 = !DIEnumerator(name: "rdcPdapMuA", value: 74)
!396 = !DIEnumerator(name: "rdcPdapMuB", value: 75)
!397 = !DIEnumerator(name: "rdcPdapSemaphoreHs", value: 76)
!398 = !DIEnumerator(name: "rdcPdapUsbPl301", value: 77)
!399 = !DIEnumerator(name: "rdcPdapReserved8", value: 78)
!400 = !DIEnumerator(name: "rdcPdapReserved9", value: 79)
!401 = !DIEnumerator(name: "rdcPdapReserved10", value: 80)
!402 = !DIEnumerator(name: "rdcPdapUSB1Otg1", value: 81)
!403 = !DIEnumerator(name: "rdcPdapUSB2Otg2", value: 82)
!404 = !DIEnumerator(name: "rdcPdapUSB3Host", value: 83)
!405 = !DIEnumerator(name: "rdcPdapUsdhc1", value: 84)
!406 = !DIEnumerator(name: "rdcPdapUsdhc2", value: 85)
!407 = !DIEnumerator(name: "rdcPdapUsdhc3", value: 86)
!408 = !DIEnumerator(name: "rdcPdapReserved11", value: 87)
!409 = !DIEnumerator(name: "rdcPdapReserved12", value: 88)
!410 = !DIEnumerator(name: "rdcPdapSim1", value: 89)
!411 = !DIEnumerator(name: "rdcPdapSim2", value: 90)
!412 = !DIEnumerator(name: "rdcPdapQspi", value: 91)
!413 = !DIEnumerator(name: "rdcPdapWeim", value: 92)
!414 = !DIEnumerator(name: "rdcPdapSdma", value: 93)
!415 = !DIEnumerator(name: "rdcPdapEnet1", value: 94)
!416 = !DIEnumerator(name: "rdcPdapEnet2", value: 95)
!417 = !DIEnumerator(name: "rdcPdapReserved13", value: 96)
!418 = !DIEnumerator(name: "rdcPdapReserved14", value: 97)
!419 = !DIEnumerator(name: "rdcPdapEcspi1", value: 98)
!420 = !DIEnumerator(name: "rdcPdapEcspi2", value: 99)
!421 = !DIEnumerator(name: "rdcPdapEcspi3", value: 100)
!422 = !DIEnumerator(name: "rdcPdapReserved15", value: 101)
!423 = !DIEnumerator(name: "rdcPdapUart1", value: 102)
!424 = !DIEnumerator(name: "rdcPdapReserved16", value: 103)
!425 = !DIEnumerator(name: "rdcPdapUart3", value: 104)
!426 = !DIEnumerator(name: "rdcPdapUart2", value: 105)
!427 = !DIEnumerator(name: "rdcPdapSai1", value: 106)
!428 = !DIEnumerator(name: "rdcPdapSai2", value: 107)
!429 = !DIEnumerator(name: "rdcPdapSai3", value: 108)
!430 = !DIEnumerator(name: "rdcPdapReserved17", value: 109)
!431 = !DIEnumerator(name: "rdcPdapReserved18", value: 110)
!432 = !DIEnumerator(name: "rdcPdapSpba", value: 111)
!433 = !DIEnumerator(name: "rdcPdapDap", value: 112)
!434 = !DIEnumerator(name: "rdcPdapReserved19", value: 113)
!435 = !DIEnumerator(name: "rdcPdapReserved20", value: 114)
!436 = !DIEnumerator(name: "rdcPdapReserved21", value: 115)
!437 = !DIEnumerator(name: "rdcPdapCaam", value: 116)
!438 = !DIEnumerator(name: "rdcPdapReserved22", value: 117)
!439 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_ccm_pll_gate", file: !222, line: 237, baseType: !32, size: 32, elements: !440)
!440 = !{!441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473}
!441 = !DIEnumerator(name: "ccmPllGateCkil", value: 808978432)
!442 = !DIEnumerator(name: "ccmPllGateArm", value: 808978448)
!443 = !DIEnumerator(name: "ccmPllGateArmDiv1", value: 808978464)
!444 = !DIEnumerator(name: "ccmPllGateDdr", value: 808978480)
!445 = !DIEnumerator(name: "ccmPllGateDdrDiv1", value: 808978496)
!446 = !DIEnumerator(name: "ccmPllGateDdrDiv2", value: 808978512)
!447 = !DIEnumerator(name: "ccmPllGateSys", value: 808978528)
!448 = !DIEnumerator(name: "ccmPllGateSysDiv1", value: 808978544)
!449 = !DIEnumerator(name: "ccmPllGateSysDiv2", value: 808978560)
!450 = !DIEnumerator(name: "ccmPllGateSysDiv4", value: 808978576)
!451 = !DIEnumerator(name: "ccmPllGatePfd0", value: 808978592)
!452 = !DIEnumerator(name: "ccmPllGatePfd0Div2", value: 808978608)
!453 = !DIEnumerator(name: "ccmPllGatePfd1", value: 808978624)
!454 = !DIEnumerator(name: "ccmPllGatePfd1Div2", value: 808978640)
!455 = !DIEnumerator(name: "ccmPllGatePfd2", value: 808978656)
!456 = !DIEnumerator(name: "ccmPllGatePfd2Div2", value: 808978672)
!457 = !DIEnumerator(name: "ccmPllGatePfd3", value: 808978688)
!458 = !DIEnumerator(name: "ccmPllGatePfd4", value: 808978704)
!459 = !DIEnumerator(name: "ccmPllGatePfd5", value: 808978720)
!460 = !DIEnumerator(name: "ccmPllGatePfd6", value: 808978736)
!461 = !DIEnumerator(name: "ccmPllGatePfd7", value: 808978752)
!462 = !DIEnumerator(name: "ccmPllGateEnet", value: 808978768)
!463 = !DIEnumerator(name: "ccmPllGateEnet500m", value: 808978784)
!464 = !DIEnumerator(name: "ccmPllGateEnet250m", value: 808978800)
!465 = !DIEnumerator(name: "ccmPllGateEnet125m", value: 808978816)
!466 = !DIEnumerator(name: "ccmPllGateEnet100m", value: 808978832)
!467 = !DIEnumerator(name: "ccmPllGateEnet50m", value: 808978848)
!468 = !DIEnumerator(name: "ccmPllGateEnet40m", value: 808978864)
!469 = !DIEnumerator(name: "ccmPllGateEnet25m", value: 808978880)
!470 = !DIEnumerator(name: "ccmPllGateAudio", value: 808978896)
!471 = !DIEnumerator(name: "ccmPllGateAudioDiv1", value: 808978912)
!472 = !DIEnumerator(name: "ccmPllGateVideo", value: 808978928)
!473 = !DIEnumerator(name: "ccmPllGateVideoDiv1", value: 808978944)
!474 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_rdc_mda", file: !319, line: 44, baseType: !32, size: 32, elements: !475)
!475 = !{!476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502}
!476 = !DIEnumerator(name: "rdcMdaA7", value: 0)
!477 = !DIEnumerator(name: "rdcMdaM4", value: 1)
!478 = !DIEnumerator(name: "rdcMdaPcie", value: 2)
!479 = !DIEnumerator(name: "rdcMdaCsi", value: 3)
!480 = !DIEnumerator(name: "rdcMdaEpdc", value: 4)
!481 = !DIEnumerator(name: "rdcMdaLcdif", value: 5)
!482 = !DIEnumerator(name: "rdcMdaDisplayPort", value: 6)
!483 = !DIEnumerator(name: "rdcMdaPxp", value: 7)
!484 = !DIEnumerator(name: "rdcMdaCoresight", value: 8)
!485 = !DIEnumerator(name: "rdcMdaDap", value: 9)
!486 = !DIEnumerator(name: "rdcMdaCaam", value: 10)
!487 = !DIEnumerator(name: "rdcMdaSdmaPeriph", value: 11)
!488 = !DIEnumerator(name: "rdcMdaSdmaBurst", value: 12)
!489 = !DIEnumerator(name: "rdcMdaApbhdma", value: 13)
!490 = !DIEnumerator(name: "rdcMdaRawnand", value: 14)
!491 = !DIEnumerator(name: "rdcMdaUsdhc1", value: 15)
!492 = !DIEnumerator(name: "rdcMdaUsdhc2", value: 16)
!493 = !DIEnumerator(name: "rdcMdaUsdhc3", value: 17)
!494 = !DIEnumerator(name: "rdcMdaNc1", value: 18)
!495 = !DIEnumerator(name: "rdcMdaUsb", value: 19)
!496 = !DIEnumerator(name: "rdcMdaNc2", value: 20)
!497 = !DIEnumerator(name: "rdcMdaTest", value: 21)
!498 = !DIEnumerator(name: "rdcMdaEnet1Tx", value: 22)
!499 = !DIEnumerator(name: "rdcMdaEnet1Rx", value: 23)
!500 = !DIEnumerator(name: "rdcMdaEnet2Tx", value: 24)
!501 = !DIEnumerator(name: "rdcMdaEnet2Rx", value: 25)
!502 = !DIEnumerator(name: "rdcMdaSdmaPort", value: 26)
!503 = !{!504, !576, !619, !630, !152}
!504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !505, size: 32)
!505 = !DIDerivedType(tag: DW_TAG_typedef, name: "CCM_Type", file: !506, line: 4575, baseType: !507)
!506 = !DIFile(filename: "modules/hal/nxp/imx/devices/MCIMX7D/./MCIMX7D_M4.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!507 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !506, line: 4532, size: 390144, elements: !508)
!508 = !{!509, !511, !512, !513, !514, !518, !528, !532, !542, !546}
!509 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0", scope: !507, file: !506, line: 4533, baseType: !510, size: 32)
!510 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !152)
!511 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0_SET", scope: !507, file: !506, line: 4534, baseType: !510, size: 32, offset: 32)
!512 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0_CLR", scope: !507, file: !506, line: 4535, baseType: !510, size: 32, offset: 64)
!513 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0_TOG", scope: !507, file: !506, line: 4536, baseType: !510, size: 32, offset: 96)
!514 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !507, file: !506, line: 4537, baseType: !515, size: 16256, offset: 128)
!515 = !DICompositeType(tag: DW_TAG_array_type, baseType: !195, size: 16256, elements: !516)
!516 = !{!517}
!517 = !DISubrange(count: 2032)
!518 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL", scope: !507, file: !506, line: 4543, baseType: !519, size: 4224, offset: 16384)
!519 = !DICompositeType(tag: DW_TAG_array_type, baseType: !520, size: 4224, elements: !526)
!520 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !507, file: !506, line: 4538, size: 128, elements: !521)
!521 = !{!522, !523, !524, !525}
!522 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL", scope: !520, file: !506, line: 4539, baseType: !510, size: 32)
!523 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL_SET", scope: !520, file: !506, line: 4540, baseType: !510, size: 32, offset: 32)
!524 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL_CLR", scope: !520, file: !506, line: 4541, baseType: !510, size: 32, offset: 64)
!525 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL_TOG", scope: !520, file: !506, line: 4542, baseType: !510, size: 32, offset: 96)
!526 = !{!527}
!527 = !DISubrange(count: 33)
!528 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !507, file: !506, line: 4544, baseType: !529, size: 110464, offset: 20608)
!529 = !DICompositeType(tag: DW_TAG_array_type, baseType: !195, size: 110464, elements: !530)
!530 = !{!531}
!531 = !DISubrange(count: 13808)
!532 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR", scope: !507, file: !506, line: 4550, baseType: !533, size: 24448, offset: 131072)
!533 = !DICompositeType(tag: DW_TAG_array_type, baseType: !534, size: 24448, elements: !540)
!534 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !507, file: !506, line: 4545, size: 128, elements: !535)
!535 = !{!536, !537, !538, !539}
!536 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR", scope: !534, file: !506, line: 4546, baseType: !510, size: 32)
!537 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR_SET", scope: !534, file: !506, line: 4547, baseType: !510, size: 32, offset: 32)
!538 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR_CLR", scope: !534, file: !506, line: 4548, baseType: !510, size: 32, offset: 64)
!539 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR_TOG", scope: !534, file: !506, line: 4549, baseType: !510, size: 32, offset: 96)
!540 = !{!541}
!541 = !DISubrange(count: 191)
!542 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_2", scope: !507, file: !506, line: 4551, baseType: !543, size: 106624, offset: 155520)
!543 = !DICompositeType(tag: DW_TAG_array_type, baseType: !195, size: 106624, elements: !544)
!544 = !{!545}
!545 = !DISubrange(count: 13328)
!546 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_TOG", scope: !507, file: !506, line: 4574, baseType: !547, size: 128000, offset: 262144)
!547 = !DICompositeType(tag: DW_TAG_array_type, baseType: !548, size: 128000, elements: !574)
!548 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !507, file: !506, line: 4552, size: 1024, elements: !549)
!549 = !{!550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !570, !571, !572, !573}
!550 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT", scope: !548, file: !506, line: 4553, baseType: !510, size: 32)
!551 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT_SET", scope: !548, file: !506, line: 4554, baseType: !510, size: 32, offset: 32)
!552 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT_CLR", scope: !548, file: !506, line: 4555, baseType: !510, size: 32, offset: 64)
!553 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT_TOG", scope: !548, file: !506, line: 4556, baseType: !510, size: 32, offset: 96)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "MISC", scope: !548, file: !506, line: 4557, baseType: !510, size: 32, offset: 128)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "MISC_ROOT_SET", scope: !548, file: !506, line: 4558, baseType: !510, size: 32, offset: 160)
!556 = !DIDerivedType(tag: DW_TAG_member, name: "MISC_ROOT_CLR", scope: !548, file: !506, line: 4559, baseType: !510, size: 32, offset: 192)
!557 = !DIDerivedType(tag: DW_TAG_member, name: "MISC_ROOT_TOG", scope: !548, file: !506, line: 4560, baseType: !510, size: 32, offset: 224)
!558 = !DIDerivedType(tag: DW_TAG_member, name: "POST", scope: !548, file: !506, line: 4561, baseType: !510, size: 32, offset: 256)
!559 = !DIDerivedType(tag: DW_TAG_member, name: "POST_ROOT_SET", scope: !548, file: !506, line: 4562, baseType: !510, size: 32, offset: 288)
!560 = !DIDerivedType(tag: DW_TAG_member, name: "POST_ROOT_CLR", scope: !548, file: !506, line: 4563, baseType: !510, size: 32, offset: 320)
!561 = !DIDerivedType(tag: DW_TAG_member, name: "POST_ROOT_TOG", scope: !548, file: !506, line: 4564, baseType: !510, size: 32, offset: 352)
!562 = !DIDerivedType(tag: DW_TAG_member, name: "PRE", scope: !548, file: !506, line: 4565, baseType: !510, size: 32, offset: 384)
!563 = !DIDerivedType(tag: DW_TAG_member, name: "PRE_ROOT_SET", scope: !548, file: !506, line: 4566, baseType: !510, size: 32, offset: 416)
!564 = !DIDerivedType(tag: DW_TAG_member, name: "PRE_ROOT_CLR", scope: !548, file: !506, line: 4567, baseType: !510, size: 32, offset: 448)
!565 = !DIDerivedType(tag: DW_TAG_member, name: "PRE_ROOT_TOG", scope: !548, file: !506, line: 4568, baseType: !510, size: 32, offset: 480)
!566 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !548, file: !506, line: 4569, baseType: !567, size: 384, offset: 512)
!567 = !DICompositeType(tag: DW_TAG_array_type, baseType: !195, size: 384, elements: !568)
!568 = !{!569}
!569 = !DISubrange(count: 48)
!570 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL", scope: !548, file: !506, line: 4570, baseType: !510, size: 32, offset: 896)
!571 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_SET", scope: !548, file: !506, line: 4571, baseType: !510, size: 32, offset: 928)
!572 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_CLR", scope: !548, file: !506, line: 4572, baseType: !510, size: 32, offset: 960)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_TOG", scope: !548, file: !506, line: 4573, baseType: !510, size: 32, offset: 992)
!574 = !{!575}
!575 = !DISubrange(count: 125)
!576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !577, size: 32)
!577 = !DIDerivedType(tag: DW_TAG_typedef, name: "RDC_Type", file: !506, line: 38320, baseType: !578)
!578 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !506, line: 38303, size: 23040, elements: !579)
!579 = !{!580, !582, !586, !587, !588, !589, !593, !597, !601, !605, !609}
!580 = !DIDerivedType(tag: DW_TAG_member, name: "VIR", scope: !578, file: !506, line: 38304, baseType: !581, size: 32)
!581 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !510)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !578, file: !506, line: 38305, baseType: !583, size: 256, offset: 32)
!583 = !DICompositeType(tag: DW_TAG_array_type, baseType: !195, size: 256, elements: !584)
!584 = !{!585}
!585 = !DISubrange(count: 32)
!586 = !DIDerivedType(tag: DW_TAG_member, name: "STAT", scope: !578, file: !506, line: 38306, baseType: !510, size: 32, offset: 288)
!587 = !DIDerivedType(tag: DW_TAG_member, name: "INTCTRL", scope: !578, file: !506, line: 38307, baseType: !510, size: 32, offset: 320)
!588 = !DIDerivedType(tag: DW_TAG_member, name: "INTSTAT", scope: !578, file: !506, line: 38308, baseType: !510, size: 32, offset: 352)
!589 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !578, file: !506, line: 38309, baseType: !590, size: 3712, offset: 384)
!590 = !DICompositeType(tag: DW_TAG_array_type, baseType: !195, size: 3712, elements: !591)
!591 = !{!592}
!592 = !DISubrange(count: 464)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "MDA", scope: !578, file: !506, line: 38310, baseType: !594, size: 864, offset: 4096)
!594 = !DICompositeType(tag: DW_TAG_array_type, baseType: !510, size: 864, elements: !595)
!595 = !{!596}
!596 = !DISubrange(count: 27)
!597 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_2", scope: !578, file: !506, line: 38311, baseType: !598, size: 3232, offset: 4960)
!598 = !DICompositeType(tag: DW_TAG_array_type, baseType: !195, size: 3232, elements: !599)
!599 = !{!600}
!600 = !DISubrange(count: 404)
!601 = !DIDerivedType(tag: DW_TAG_member, name: "PDAP", scope: !578, file: !506, line: 38312, baseType: !602, size: 3776, offset: 8192)
!602 = !DICompositeType(tag: DW_TAG_array_type, baseType: !510, size: 3776, elements: !603)
!603 = !{!604}
!604 = !DISubrange(count: 118)
!605 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_3", scope: !578, file: !506, line: 38313, baseType: !606, size: 4416, offset: 11968)
!606 = !DICompositeType(tag: DW_TAG_array_type, baseType: !195, size: 4416, elements: !607)
!607 = !{!608}
!608 = !DISubrange(count: 552)
!609 = !DIDerivedType(tag: DW_TAG_member, name: "MR", scope: !578, file: !506, line: 38319, baseType: !610, size: 6656, offset: 16384)
!610 = !DICompositeType(tag: DW_TAG_array_type, baseType: !611, size: 6656, elements: !617)
!611 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !578, file: !506, line: 38314, size: 128, elements: !612)
!612 = !{!613, !614, !615, !616}
!613 = !DIDerivedType(tag: DW_TAG_member, name: "MRSA", scope: !611, file: !506, line: 38315, baseType: !510, size: 32)
!614 = !DIDerivedType(tag: DW_TAG_member, name: "MREA", scope: !611, file: !506, line: 38316, baseType: !510, size: 32, offset: 32)
!615 = !DIDerivedType(tag: DW_TAG_member, name: "MRC", scope: !611, file: !506, line: 38317, baseType: !510, size: 32, offset: 64)
!616 = !DIDerivedType(tag: DW_TAG_member, name: "MRVS", scope: !611, file: !506, line: 38318, baseType: !510, size: 32, offset: 96)
!617 = !{!618}
!618 = !DISubrange(count: 52)
!619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !620, size: 32)
!620 = !DIDerivedType(tag: DW_TAG_typedef, name: "WDOG_Type", file: !506, line: 43319, baseType: !621)
!621 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !506, line: 43313, size: 80, elements: !622)
!622 = !{!623, !625, !626, !628, !629}
!623 = !DIDerivedType(tag: DW_TAG_member, name: "WCR", scope: !621, file: !506, line: 43314, baseType: !624, size: 16)
!624 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !197)
!625 = !DIDerivedType(tag: DW_TAG_member, name: "WSR", scope: !621, file: !506, line: 43315, baseType: !624, size: 16, offset: 16)
!626 = !DIDerivedType(tag: DW_TAG_member, name: "WRSR", scope: !621, file: !506, line: 43316, baseType: !627, size: 16, offset: 32)
!627 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !624)
!628 = !DIDerivedType(tag: DW_TAG_member, name: "WICR", scope: !621, file: !506, line: 43317, baseType: !624, size: 16, offset: 48)
!629 = !DIDerivedType(tag: DW_TAG_member, name: "WMCR", scope: !621, file: !506, line: 43318, baseType: !624, size: 16, offset: 64)
!630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !510, size: 32)
!631 = !{!216}
!632 = !DIFile(filename: "zephyr/soc/arm/nxp_imx/mcimx7_m4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!633 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !634)
!634 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !635, line: 51, size: 64, elements: !636)
!635 = !DIFile(filename: "zephyr/include/zephyr/init.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!636 = !{!637, !644}
!637 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !634, file: !635, line: 60, baseType: !638, size: 32)
!638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !639, size: 32)
!639 = !DISubroutineType(types: !640)
!640 = !{!107, !641}
!641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !642, size: 32)
!642 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !643)
!643 = !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !635, line: 48, flags: DIFlagFwdDecl)
!644 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !634, file: !635, line: 65, baseType: !641, size: 32, offset: 32)
!645 = !DIGlobalVariableExpression(var: !646, expr: !DIExpression())
!646 = distinct !DIGlobalVariable(name: "_stdout_hook", scope: !647, file: !654, line: 21, type: !213, isLocal: true, isDefinition: true)
!647 = distinct !DICompileUnit(language: DW_LANG_C99, file: !648, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !649, globals: !653, splitDebugInlining: false, nameTableKind: None)
!648 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/integration")
!649 = !{!650, !107, !106}
!650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !651, size: 32)
!651 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !652, line: 22, baseType: !107)
!652 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!653 = !{!645}
!654 = !DIFile(filename: "zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!655 = !DIGlobalVariableExpression(var: !656, expr: !DIExpression())
!656 = distinct !DIGlobalVariable(name: "phase", scope: !657, file: !661, line: 61, type: !660, isLocal: false, isDefinition: true)
!657 = distinct !DICompileUnit(language: DW_LANG_C99, file: !658, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !659, retainedTypes: !686, globals: !697, splitDebugInlining: false, nameTableKind: None)
!658 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/testsuite/ztest/src/ztest_new.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/integration")
!659 = !{!660, !669, !677, !30, !682}
!660 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ztest_phase", file: !661, line: 40, baseType: !32, size: 32, elements: !662)
!661 = !DIFile(filename: "zephyr/subsys/testsuite/ztest/src/ztest_new.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!662 = !{!663, !664, !665, !666, !667, !668}
!663 = !DIEnumerator(name: "TEST_PHASE_SETUP", value: 0)
!664 = !DIEnumerator(name: "TEST_PHASE_BEFORE", value: 1)
!665 = !DIEnumerator(name: "TEST_PHASE_TEST", value: 2)
!666 = !DIEnumerator(name: "TEST_PHASE_AFTER", value: 3)
!667 = !DIEnumerator(name: "TEST_PHASE_TEARDOWN", value: 4)
!668 = !DIEnumerator(name: "TEST_PHASE_FRAMEWORK", value: 5)
!669 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ztest_result", file: !661, line: 226, baseType: !32, size: 32, elements: !670)
!670 = !{!671, !672, !673, !674, !675, !676}
!671 = !DIEnumerator(name: "ZTEST_RESULT_PENDING", value: 0)
!672 = !DIEnumerator(name: "ZTEST_RESULT_PASS", value: 1)
!673 = !DIEnumerator(name: "ZTEST_RESULT_FAIL", value: 2)
!674 = !DIEnumerator(name: "ZTEST_RESULT_SKIP", value: 3)
!675 = !DIEnumerator(name: "ZTEST_RESULT_SUITE_SKIP", value: 4)
!676 = !DIEnumerator(name: "ZTEST_RESULT_SUITE_FAIL", value: 5)
!677 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ztest_status", file: !661, line: 52, baseType: !32, size: 32, elements: !678)
!678 = !{!679, !680, !681}
!679 = !DIEnumerator(name: "ZTEST_STATUS_OK", value: 0)
!680 = !DIEnumerator(name: "ZTEST_STATUS_HAS_FAILURE", value: 1)
!681 = !DIEnumerator(name: "ZTEST_STATUS_CRITICAL_ERROR", value: 2)
!682 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ztest_expected_result", file: !114, line: 36, baseType: !32, size: 32, elements: !683)
!683 = !{!684, !685}
!684 = !DIEnumerator(name: "ZTEST_EXPECTED_RESULT_FAIL", value: 0)
!685 = !DIEnumerator(name: "ZTEST_EXPECTED_RESULT_SKIP", value: 1)
!686 = !{!106, !107, !185, !687, !692, !152, !695}
!687 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_entry_t", file: !688, line: 46, baseType: !689)
!688 = !DIFile(filename: "zephyr/include/zephyr/sys/arch_interface.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !690, size: 32)
!690 = !DISubroutineType(types: !691)
!691 = !{null, !106, !106, !106}
!692 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_ticks_t", file: !693, line: 46, baseType: !694)
!693 = !DIFile(filename: "zephyr/include/zephyr/sys_clock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!694 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !23, line: 75, baseType: !191)
!695 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !23, line: 91, baseType: !696)
!696 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!697 = !{!655, !698, !700, !702, !711, !713, !826, !829}
!698 = !DIGlobalVariableExpression(var: !699, expr: !DIExpression())
!699 = distinct !DIGlobalVariable(name: "test_result", scope: !657, file: !661, line: 234, type: !669, isLocal: true, isDefinition: true)
!700 = !DIGlobalVariableExpression(var: !701, expr: !DIExpression())
!701 = distinct !DIGlobalVariable(name: "current_test_failed_assumption", scope: !657, file: !661, line: 294, type: !145, isLocal: true, isDefinition: true)
!702 = !DIGlobalVariableExpression(var: !703, expr: !DIExpression())
!703 = distinct !DIGlobalVariable(name: "ztest_thread_stack", scope: !657, file: !661, line: 430, type: !704, isLocal: false, isDefinition: true, align: 64)
!704 = !DICompositeType(tag: DW_TAG_array_type, baseType: !705, size: 8192, elements: !709)
!705 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !706, line: 47, size: 8, elements: !707)
!706 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread_stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!707 = !{!708}
!708 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !705, file: !706, line: 48, baseType: !120, size: 8)
!709 = !{!710}
!710 = !DISubrange(count: 1024)
!711 = !DIGlobalVariableExpression(var: !712, expr: !DIExpression())
!712 = distinct !DIGlobalVariable(name: "test_status", scope: !657, file: !661, line: 63, type: !677, isLocal: true, isDefinition: true)
!713 = !DIGlobalVariableExpression(var: !714, expr: !DIExpression())
!714 = distinct !DIGlobalVariable(name: "ztest_thread", scope: !657, file: !661, line: 17, type: !715, isLocal: true, isDefinition: true)
!715 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !716, line: 245, size: 1152, elements: !717)
!716 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!717 = !{!718, !783, !796, !797, !798, !800, !801, !821}
!718 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !715, file: !716, line: 247, baseType: !719, size: 384)
!719 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !716, line: 57, size: 384, elements: !720)
!720 = !{!721, !749, !757, !758, !759, !770, !771, !772}
!721 = !DIDerivedType(tag: DW_TAG_member, scope: !719, file: !716, line: 60, baseType: !722, size: 64)
!722 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !719, file: !716, line: 60, size: 64, elements: !723)
!723 = !{!724, !740}
!724 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !722, file: !716, line: 61, baseType: !725, size: 64)
!725 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !726, line: 49, baseType: !727)
!726 = !DIFile(filename: "zephyr/include/zephyr/sys/dlist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!727 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !726, line: 37, size: 64, elements: !728)
!728 = !{!729, !735}
!729 = !DIDerivedType(tag: DW_TAG_member, scope: !727, file: !726, line: 38, baseType: !730, size: 32)
!730 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !727, file: !726, line: 38, size: 32, elements: !731)
!731 = !{!732, !734}
!732 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !730, file: !726, line: 39, baseType: !733, size: 32)
!733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !727, size: 32)
!734 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !730, file: !726, line: 40, baseType: !733, size: 32)
!735 = !DIDerivedType(tag: DW_TAG_member, scope: !727, file: !726, line: 42, baseType: !736, size: 32, offset: 32)
!736 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !727, file: !726, line: 42, size: 32, elements: !737)
!737 = !{!738, !739}
!738 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !736, file: !726, line: 43, baseType: !733, size: 32)
!739 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !736, file: !726, line: 44, baseType: !733, size: 32)
!740 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !722, file: !716, line: 62, baseType: !741, size: 64)
!741 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !742, line: 49, size: 64, elements: !743)
!742 = !DIFile(filename: "zephyr/include/zephyr/sys/rb.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!743 = !{!744}
!744 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !741, file: !742, line: 50, baseType: !745, size: 64)
!745 = !DICompositeType(tag: DW_TAG_array_type, baseType: !746, size: 64, elements: !747)
!746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !741, size: 32)
!747 = !{!748}
!748 = !DISubrange(count: 2)
!749 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !719, file: !716, line: 68, baseType: !750, size: 32, offset: 64)
!750 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !751, size: 32)
!751 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !752, line: 233, baseType: !753)
!752 = !DIFile(filename: "zephyr/include/zephyr/kernel_structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!753 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !752, line: 231, size: 64, elements: !754)
!754 = !{!755}
!755 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !753, file: !752, line: 232, baseType: !756, size: 64)
!756 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !726, line: 48, baseType: !727)
!757 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !719, file: !716, line: 71, baseType: !195, size: 8, offset: 96)
!758 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !719, file: !716, line: 74, baseType: !195, size: 8, offset: 104)
!759 = !DIDerivedType(tag: DW_TAG_member, scope: !719, file: !716, line: 90, baseType: !760, size: 16, offset: 112)
!760 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !719, file: !716, line: 90, size: 16, elements: !761)
!761 = !{!762, !769}
!762 = !DIDerivedType(tag: DW_TAG_member, scope: !760, file: !716, line: 91, baseType: !763, size: 16)
!763 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !760, file: !716, line: 91, size: 16, elements: !764)
!764 = !{!765, !768}
!765 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !763, file: !716, line: 96, baseType: !766, size: 8)
!766 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !23, line: 72, baseType: !767)
!767 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!768 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !763, file: !716, line: 97, baseType: !195, size: 8, offset: 8)
!769 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !760, file: !716, line: 100, baseType: !197, size: 16)
!770 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !719, file: !716, line: 107, baseType: !152, size: 32, offset: 128)
!771 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !719, file: !716, line: 127, baseType: !106, size: 32, offset: 160)
!772 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !719, file: !716, line: 131, baseType: !773, size: 192, offset: 192)
!773 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !752, line: 244, size: 192, elements: !774)
!774 = !{!775, !776, !782}
!775 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !773, file: !752, line: 245, baseType: !725, size: 64)
!776 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !773, file: !752, line: 246, baseType: !777, size: 32, offset: 64)
!777 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !752, line: 242, baseType: !778)
!778 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !779, size: 32)
!779 = !DISubroutineType(types: !780)
!780 = !{null, !781}
!781 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !773, size: 32)
!782 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !773, file: !752, line: 249, baseType: !694, size: 64, offset: 128)
!783 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !715, file: !716, line: 250, baseType: !784, size: 288, offset: 384)
!784 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !785, line: 25, size: 288, elements: !786)
!785 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!786 = !{!787, !788, !789, !790, !791, !792, !793, !794, !795}
!787 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !784, file: !785, line: 26, baseType: !152, size: 32)
!788 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !784, file: !785, line: 27, baseType: !152, size: 32, offset: 32)
!789 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !784, file: !785, line: 28, baseType: !152, size: 32, offset: 64)
!790 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !784, file: !785, line: 29, baseType: !152, size: 32, offset: 96)
!791 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !784, file: !785, line: 30, baseType: !152, size: 32, offset: 128)
!792 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !784, file: !785, line: 31, baseType: !152, size: 32, offset: 160)
!793 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !784, file: !785, line: 32, baseType: !152, size: 32, offset: 192)
!794 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !784, file: !785, line: 33, baseType: !152, size: 32, offset: 224)
!795 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !784, file: !785, line: 34, baseType: !152, size: 32, offset: 256)
!796 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !715, file: !716, line: 253, baseType: !106, size: 32, offset: 672)
!797 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !715, file: !716, line: 256, baseType: !751, size: 64, offset: 704)
!798 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !715, file: !716, line: 279, baseType: !799, size: 256, offset: 768)
!799 = !DICompositeType(tag: DW_TAG_array_type, baseType: !120, size: 256, elements: !584)
!800 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !715, file: !716, line: 294, baseType: !107, size: 32, offset: 1024)
!801 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !715, file: !716, line: 325, baseType: !802, size: 32, offset: 1056)
!802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !803, size: 32)
!803 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !804, line: 5073, size: 192, elements: !805)
!804 = !DIFile(filename: "zephyr/include/zephyr/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!805 = !{!806, !815, !816}
!806 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !803, file: !804, line: 5074, baseType: !807, size: 96)
!807 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !808, line: 56, size: 96, elements: !809)
!808 = !DIFile(filename: "zephyr/include/zephyr/sys/sys_heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!809 = !{!810, !813, !814}
!810 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !807, file: !808, line: 57, baseType: !811, size: 32)
!811 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !812, size: 32)
!812 = !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !808, line: 57, flags: DIFlagFwdDecl)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !807, file: !808, line: 58, baseType: !106, size: 32, offset: 32)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !807, file: !808, line: 59, baseType: !185, size: 32, offset: 64)
!815 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !803, file: !804, line: 5075, baseType: !751, size: 64, offset: 96)
!816 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !803, file: !804, line: 5076, baseType: !817, size: 32, offset: 160)
!817 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !818, line: 43, size: 32, elements: !819)
!818 = !DIFile(filename: "zephyr/include/zephyr/spinlock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!819 = !{!820}
!820 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !817, file: !818, line: 52, baseType: !22, size: 32)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !715, file: !716, line: 343, baseType: !822, size: 64, offset: 1088)
!822 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !785, line: 60, size: 64, elements: !823)
!823 = !{!824, !825}
!824 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !822, file: !785, line: 63, baseType: !152, size: 32)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !822, file: !785, line: 66, baseType: !152, size: 32, offset: 32)
!826 = !DIGlobalVariableExpression(var: !827, expr: !DIExpression())
!827 = distinct !DIGlobalVariable(name: "tc_start_time", scope: !657, file: !828, line: 95, type: !152, isLocal: true, isDefinition: true)
!828 = !DIFile(filename: "zephyr/subsys/testsuite/include/zephyr/tc_util.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!829 = !DIGlobalVariableExpression(var: !830, expr: !DIExpression())
!830 = distinct !DIGlobalVariable(name: "tc_spend_time", scope: !657, file: !828, line: 96, type: !152, isLocal: true, isDefinition: true)
!831 = !DIGlobalVariableExpression(var: !701, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!832 = !DIGlobalVariableExpression(var: !833, expr: !DIExpression())
!833 = distinct !DIGlobalVariable(name: "ztest_api", scope: !834, file: !837, line: 70, type: !838, isLocal: false, isDefinition: true)
!834 = distinct !DICompileUnit(language: DW_LANG_C99, file: !835, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !105, globals: !836, splitDebugInlining: false, nameTableKind: None)
!835 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/testsuite/ztest/src/ztest_defaults.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/integration")
!836 = !{!832}
!837 = !DIFile(filename: "zephyr/subsys/testsuite/ztest/src/ztest_defaults.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!838 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !839)
!839 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_arch_api", file: !114, line: 499, size: 96, elements: !840)
!840 = !{!841, !842, !863}
!841 = !DIDerivedType(tag: DW_TAG_member, name: "run_all", scope: !839, file: !114, line: 500, baseType: !16, size: 32)
!842 = !DIDerivedType(tag: DW_TAG_member, name: "should_suite_run", scope: !839, file: !114, line: 501, baseType: !843, size: 32, offset: 32)
!843 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !844, size: 32)
!844 = !DISubroutineType(types: !845)
!845 = !{!145, !13, !846}
!846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !847, size: 32)
!847 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_suite_node", file: !114, line: 177, size: 224, elements: !848)
!848 = !{!849, !850, !851, !852, !853, !854, !855}
!849 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !847, file: !114, line: 179, baseType: !117, size: 32)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "setup", scope: !847, file: !114, line: 182, baseType: !122, size: 32, offset: 32)
!851 = !DIDerivedType(tag: DW_TAG_member, name: "before", scope: !847, file: !114, line: 185, baseType: !128, size: 32, offset: 64)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "after", scope: !847, file: !114, line: 188, baseType: !134, size: 32, offset: 96)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "teardown", scope: !847, file: !114, line: 191, baseType: !137, size: 32, offset: 128)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "predicate", scope: !847, file: !114, line: 194, baseType: !140, size: 32, offset: 160)
!855 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !847, file: !114, line: 197, baseType: !856, size: 32, offset: 192)
!856 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !857)
!857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !858, size: 32)
!858 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_suite_stats", file: !114, line: 114, size: 96, elements: !859)
!859 = !{!860, !861, !862}
!860 = !DIDerivedType(tag: DW_TAG_member, name: "run_count", scope: !858, file: !114, line: 116, baseType: !152, size: 32)
!861 = !DIDerivedType(tag: DW_TAG_member, name: "skip_count", scope: !858, file: !114, line: 118, baseType: !152, size: 32, offset: 32)
!862 = !DIDerivedType(tag: DW_TAG_member, name: "fail_count", scope: !858, file: !114, line: 120, baseType: !152, size: 32, offset: 64)
!863 = !DIDerivedType(tag: DW_TAG_member, name: "should_test_run", scope: !839, file: !114, line: 502, baseType: !864, size: 32, offset: 64)
!864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !865, size: 32)
!865 = !DISubroutineType(types: !866)
!866 = !{!145, !118, !118}
!867 = !DIGlobalVariableExpression(var: !868, expr: !DIExpression())
!868 = distinct !DIGlobalVariable(name: "__init_uart_console_init", scope: !869, file: !965, line: 603, type: !967, isLocal: true, isDefinition: true, align: 32)
!869 = distinct !DICompileUnit(language: DW_LANG_C99, file: !870, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !871, globals: !962, splitDebugInlining: false, nameTableKind: None)
!870 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/integration")
!871 = !{!106, !107, !872}
!872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !873, size: 32)
!873 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !874)
!874 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !875, line: 336, size: 608, elements: !876)
!875 = !DIFile(filename: "zephyr/include/zephyr/drivers/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!876 = !{!877, !903, !907, !911, !924, !929, !935, !940, !944, !945, !946, !947, !948, !949, !950, !951, !952, !953, !954}
!877 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !874, file: !875, line: 365, baseType: !878, size: 32)
!878 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !879, size: 32)
!879 = !DISubroutineType(types: !880)
!880 = !{!107, !881, !902}
!881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !882, size: 32)
!882 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !883)
!883 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !884, line: 378, size: 192, elements: !885)
!884 = !DIFile(filename: "zephyr/include/zephyr/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!885 = !{!886, !887, !888, !889, !895, !896}
!886 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !883, file: !884, line: 380, baseType: !118, size: 32)
!887 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !883, file: !884, line: 382, baseType: !13, size: 32, offset: 32)
!888 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !883, file: !884, line: 384, baseType: !13, size: 32, offset: 64)
!889 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !883, file: !884, line: 386, baseType: !890, size: 32, offset: 96)
!890 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !891, size: 32)
!891 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !884, line: 351, size: 16, elements: !892)
!892 = !{!893, !894}
!893 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !891, file: !884, line: 359, baseType: !195, size: 8)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !891, file: !884, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !883, file: !884, line: 388, baseType: !106, size: 32, offset: 128)
!896 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !883, file: !884, line: 396, baseType: !897, size: 32, offset: 160)
!897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !898, size: 32)
!898 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !899)
!899 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_handle_t", file: !884, line: 43, baseType: !900)
!900 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !23, line: 73, baseType: !901)
!901 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!902 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !196, size: 32)
!903 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !874, file: !875, line: 366, baseType: !904, size: 32, offset: 32)
!904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !905, size: 32)
!905 = !DISubroutineType(types: !906)
!906 = !{null, !881, !196}
!907 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !874, file: !875, line: 374, baseType: !908, size: 32, offset: 64)
!908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !909, size: 32)
!909 = !DISubroutineType(types: !910)
!910 = !{!107, !881}
!911 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !874, file: !875, line: 377, baseType: !912, size: 32, offset: 96)
!912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !913, size: 32)
!913 = !DISubroutineType(types: !914)
!914 = !{!107, !881, !915}
!915 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !916, size: 32)
!916 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !917)
!917 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !875, line: 122, size: 64, elements: !918)
!918 = !{!919, !920, !921, !922, !923}
!919 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !917, file: !875, line: 123, baseType: !152, size: 32)
!920 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !917, file: !875, line: 124, baseType: !195, size: 8, offset: 32)
!921 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !917, file: !875, line: 125, baseType: !195, size: 8, offset: 40)
!922 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !917, file: !875, line: 126, baseType: !195, size: 8, offset: 48)
!923 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !917, file: !875, line: 127, baseType: !195, size: 8, offset: 56)
!924 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !874, file: !875, line: 379, baseType: !925, size: 32, offset: 128)
!925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !926, size: 32)
!926 = !DISubroutineType(types: !927)
!927 = !{!107, !881, !928}
!928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !917, size: 32)
!929 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_fill", scope: !874, file: !875, line: 384, baseType: !930, size: 32, offset: 160)
!930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !931, size: 32)
!931 = !DISubroutineType(types: !932)
!932 = !{!107, !881, !933, !107}
!933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !934, size: 32)
!934 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !195)
!935 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_read", scope: !874, file: !875, line: 393, baseType: !936, size: 32, offset: 192)
!936 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !937, size: 32)
!937 = !DISubroutineType(types: !938)
!938 = !{!107, !881, !194, !939}
!939 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !107)
!940 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_enable", scope: !874, file: !875, line: 402, baseType: !941, size: 32, offset: 224)
!941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !942, size: 32)
!942 = !DISubroutineType(types: !943)
!943 = !{null, !881}
!944 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_disable", scope: !874, file: !875, line: 405, baseType: !941, size: 32, offset: 256)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_ready", scope: !874, file: !875, line: 408, baseType: !908, size: 32, offset: 288)
!946 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_enable", scope: !874, file: !875, line: 411, baseType: !941, size: 32, offset: 320)
!947 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_disable", scope: !874, file: !875, line: 414, baseType: !941, size: 32, offset: 352)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_complete", scope: !874, file: !875, line: 417, baseType: !908, size: 32, offset: 384)
!949 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_ready", scope: !874, file: !875, line: 420, baseType: !908, size: 32, offset: 416)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_enable", scope: !874, file: !875, line: 423, baseType: !941, size: 32, offset: 448)
!951 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_disable", scope: !874, file: !875, line: 426, baseType: !941, size: 32, offset: 480)
!952 = !DIDerivedType(tag: DW_TAG_member, name: "irq_is_pending", scope: !874, file: !875, line: 429, baseType: !908, size: 32, offset: 512)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "irq_update", scope: !874, file: !875, line: 432, baseType: !908, size: 32, offset: 544)
!954 = !DIDerivedType(tag: DW_TAG_member, name: "irq_callback_set", scope: !874, file: !875, line: 435, baseType: !955, size: 32, offset: 576)
!955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !956, size: 32)
!956 = !DISubroutineType(types: !957)
!957 = !{null, !881, !958, !106}
!958 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_irq_callback_user_data_t", file: !875, line: 142, baseType: !959)
!959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !960, size: 32)
!960 = !DISubroutineType(types: !961)
!961 = !{null, !881, !106}
!962 = !{!867, !963}
!963 = !DIGlobalVariableExpression(var: !964, expr: !DIExpression())
!964 = distinct !DIGlobalVariable(name: "uart_console_dev", scope: !869, file: !965, line: 38, type: !966, isLocal: true, isDefinition: true)
!965 = !DIFile(filename: "zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!966 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !881)
!967 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !968)
!968 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !635, line: 51, size: 64, elements: !969)
!969 = !{!970, !971}
!970 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !968, file: !635, line: 60, baseType: !908, size: 32)
!971 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !968, file: !635, line: 65, baseType: !881, size: 32, offset: 32)
!972 = !DIGlobalVariableExpression(var: !973, expr: !DIExpression())
!973 = distinct !DIGlobalVariable(name: "mcux_igpio_pinmux_0", scope: !974, file: !1078, line: 318, type: !1155, isLocal: false, isDefinition: true)
!974 = distinct !DICompileUnit(language: DW_LANG_C99, file: !975, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !976, retainedTypes: !993, globals: !1075, splitDebugInlining: false, nameTableKind: None)
!975 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/gpio/gpio_imx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/integration")
!976 = !{!977, !983, !988}
!977 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_mode", file: !978, line: 506, baseType: !32, size: 32, elements: !979)
!978 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!979 = !{!980, !981, !982}
!980 = !DIEnumerator(name: "GPIO_INT_MODE_DISABLED", value: 2097152)
!981 = !DIEnumerator(name: "GPIO_INT_MODE_LEVEL", value: 4194304)
!982 = !DIEnumerator(name: "GPIO_INT_MODE_EDGE", value: 20971520)
!983 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_trig", file: !978, line: 512, baseType: !32, size: 32, elements: !984)
!984 = !{!985, !986, !987}
!985 = !DIEnumerator(name: "GPIO_INT_TRIG_LOW", value: 33554432)
!986 = !DIEnumerator(name: "GPIO_INT_TRIG_HIGH", value: 67108864)
!987 = !DIEnumerator(name: "GPIO_INT_TRIG_BOTH", value: 100663296)
!988 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_gpio_pin_action", file: !989, line: 66, baseType: !32, size: 32, elements: !990)
!989 = !DIFile(filename: "modules/hal/nxp/imx/drivers/./gpio_imx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!990 = !{!991, !992}
!991 = !DIEnumerator(name: "gpioPinClear", value: 0)
!992 = !DIEnumerator(name: "gpioPinSet", value: 1)
!993 = !{!994, !1064, !1069, !1029, !983, !977, !1074, !106, !630, !1044, !193}
!994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !995, size: 32)
!995 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !996)
!996 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !978, line: 523, size: 288, elements: !997)
!997 = !{!998, !1019, !1025, !1030, !1034, !1035, !1036, !1040, !1060}
!998 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !996, file: !978, line: 524, baseType: !999, size: 32)
!999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1000, size: 32)
!1000 = !DISubroutineType(types: !1001)
!1001 = !{!107, !1002, !1017, !1018}
!1002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1003, size: 32)
!1003 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1004)
!1004 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !884, line: 378, size: 192, elements: !1005)
!1005 = !{!1006, !1007, !1008, !1009, !1015, !1016}
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1004, file: !884, line: 380, baseType: !118, size: 32)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1004, file: !884, line: 382, baseType: !13, size: 32, offset: 32)
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1004, file: !884, line: 384, baseType: !13, size: 32, offset: 64)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1004, file: !884, line: 386, baseType: !1010, size: 32, offset: 96)
!1010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1011, size: 32)
!1011 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !884, line: 351, size: 16, elements: !1012)
!1012 = !{!1013, !1014}
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1011, file: !884, line: 359, baseType: !195, size: 8)
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1011, file: !884, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1004, file: !884, line: 388, baseType: !106, size: 32, offset: 128)
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1004, file: !884, line: 396, baseType: !897, size: 32, offset: 160)
!1017 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_t", file: !978, line: 237, baseType: !195)
!1018 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_flags_t", file: !978, line: 257, baseType: !152)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !996, file: !978, line: 530, baseType: !1020, size: 32, offset: 32)
!1020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1021, size: 32)
!1021 = !DISubroutineType(types: !1022)
!1022 = !{!107, !1002, !1023}
!1023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1024, size: 32)
!1024 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_value_t", file: !978, line: 229, baseType: !152)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !996, file: !978, line: 532, baseType: !1026, size: 32, offset: 64)
!1026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1027, size: 32)
!1027 = !DISubroutineType(types: !1028)
!1028 = !{!107, !1002, !1029, !1024}
!1029 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_pins_t", file: !978, line: 216, baseType: !152)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !996, file: !978, line: 535, baseType: !1031, size: 32, offset: 96)
!1031 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1032, size: 32)
!1032 = !DISubroutineType(types: !1033)
!1033 = !{!107, !1002, !1029}
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !996, file: !978, line: 537, baseType: !1031, size: 32, offset: 128)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !996, file: !978, line: 539, baseType: !1031, size: 32, offset: 160)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !996, file: !978, line: 541, baseType: !1037, size: 32, offset: 192)
!1037 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1038, size: 32)
!1038 = !DISubroutineType(types: !1039)
!1039 = !{!107, !1002, !1017, !977, !983}
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !996, file: !978, line: 544, baseType: !1041, size: 32, offset: 224)
!1041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1042, size: 32)
!1042 = !DISubroutineType(types: !1043)
!1043 = !{!107, !1002, !1044, !145}
!1044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1045, size: 32)
!1045 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !978, line: 478, size: 96, elements: !1046)
!1046 = !{!1047, !1054, !1059}
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1045, file: !978, line: 482, baseType: !1048, size: 32)
!1048 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1049, line: 33, baseType: !1050)
!1049 = !DIFile(filename: "zephyr/include/zephyr/sys/slist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1050 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1049, line: 29, size: 32, elements: !1051)
!1051 = !{!1052}
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1050, file: !1049, line: 30, baseType: !1053, size: 32)
!1053 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1050, size: 32)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1045, file: !978, line: 485, baseType: !1055, size: 32, offset: 32)
!1055 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !978, line: 464, baseType: !1056)
!1056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1057, size: 32)
!1057 = !DISubroutineType(types: !1058)
!1058 = !{null, !1002, !1044, !1029}
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1045, file: !978, line: 493, baseType: !1029, size: 32, offset: 64)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !996, file: !978, line: 547, baseType: !1061, size: 32, offset: 256)
!1061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1062, size: 32)
!1062 = !DISubroutineType(types: !1063)
!1063 = !{!152, !1002}
!1064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1065, size: 32)
!1065 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1066)
!1066 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !978, line: 428, size: 32, elements: !1067)
!1067 = !{!1068}
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1066, file: !978, line: 434, baseType: !1029, size: 32)
!1069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1070, size: 32)
!1070 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1071)
!1071 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !978, line: 441, size: 32, elements: !1072)
!1072 = !{!1073}
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1071, file: !978, line: 447, baseType: !1029, size: 32)
!1074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1071, size: 32)
!1075 = !{!972, !1076, !1082, !1084, !1094, !1106, !1108, !1139, !1141, !1153}
!1076 = !DIGlobalVariableExpression(var: !1077, expr: !DIExpression())
!1077 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_25", scope: !974, file: !1078, line: 318, type: !1079, isLocal: false, isDefinition: true, align: 16)
!1078 = !DIFile(filename: "zephyr/drivers/gpio/gpio_imx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1079 = !DICompositeType(tag: DW_TAG_array_type, baseType: !898, size: 400, elements: !1080)
!1080 = !{!1081}
!1081 = !DISubrange(count: 25)
!1082 = !DIGlobalVariableExpression(var: !1083, expr: !DIExpression())
!1083 = distinct !DIGlobalVariable(name: "__device_dts_ord_25", scope: !974, file: !1078, line: 318, type: !1003, isLocal: false, isDefinition: true, align: 32)
!1084 = !DIGlobalVariableExpression(var: !1085, expr: !DIExpression())
!1085 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_25", scope: !974, file: !1078, line: 318, type: !1086, isLocal: true, isDefinition: true, align: 32)
!1086 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1087)
!1087 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !635, line: 51, size: 64, elements: !1088)
!1088 = !{!1089, !1093}
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1087, file: !635, line: 60, baseType: !1090, size: 32)
!1090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1091, size: 32)
!1091 = !DISubroutineType(types: !1092)
!1092 = !{!107, !1002}
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1087, file: !635, line: 65, baseType: !1002, size: 32, offset: 32)
!1094 = !DIGlobalVariableExpression(var: !1095, expr: !DIExpression())
!1095 = distinct !DIGlobalVariable(name: "imx_gpio_0_data", scope: !974, file: !1078, line: 318, type: !1096, isLocal: true, isDefinition: true)
!1096 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "imx_gpio_data", file: !1078, line: 33, size: 96, elements: !1097)
!1097 = !{!1098, !1099}
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1096, file: !1078, line: 35, baseType: !1071, size: 32)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "callbacks", scope: !1096, file: !1078, line: 37, baseType: !1100, size: 64, offset: 32)
!1100 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !1049, line: 40, baseType: !1101)
!1101 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !1049, line: 35, size: 64, elements: !1102)
!1102 = !{!1103, !1105}
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1101, file: !1049, line: 36, baseType: !1104, size: 32)
!1104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1048, size: 32)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1101, file: !1049, line: 37, baseType: !1104, size: 32, offset: 32)
!1106 = !DIGlobalVariableExpression(var: !1107, expr: !DIExpression())
!1107 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_25", scope: !974, file: !1078, line: 318, type: !1011, isLocal: true, isDefinition: true, align: 8)
!1108 = !DIGlobalVariableExpression(var: !1109, expr: !DIExpression())
!1109 = distinct !DIGlobalVariable(name: "imx_gpio_0_config", scope: !974, file: !1078, line: 318, type: !1110, isLocal: true, isDefinition: true)
!1110 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1111)
!1111 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "imx_gpio_config", file: !1078, line: 23, size: 128, elements: !1112)
!1112 = !{!1113, !1114, !1127, !1138}
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1111, file: !1078, line: 25, baseType: !1066, size: 32)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1111, file: !1078, line: 26, baseType: !1115, size: 32, offset: 32)
!1115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1116, size: 32)
!1116 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_Type", file: !506, line: 19729, baseType: !1117)
!1117 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !506, line: 19720, size: 256, elements: !1118)
!1118 = !{!1119, !1120, !1121, !1122, !1123, !1124, !1125, !1126}
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !1117, file: !506, line: 19721, baseType: !510, size: 32)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "GDIR", scope: !1117, file: !506, line: 19722, baseType: !510, size: 32, offset: 32)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "PSR", scope: !1117, file: !506, line: 19723, baseType: !581, size: 32, offset: 64)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "ICR1", scope: !1117, file: !506, line: 19724, baseType: !510, size: 32, offset: 96)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "ICR2", scope: !1117, file: !506, line: 19725, baseType: !510, size: 32, offset: 128)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !1117, file: !506, line: 19726, baseType: !510, size: 32, offset: 160)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "ISR", scope: !1117, file: !506, line: 19727, baseType: !510, size: 32, offset: 192)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "EDGE_SEL", scope: !1117, file: !506, line: 19728, baseType: !510, size: 32, offset: 224)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "pin_muxes", scope: !1111, file: !1078, line: 28, baseType: !1128, size: 32, offset: 64)
!1128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1129, size: 32)
!1129 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1130)
!1130 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pinmux", file: !1131, line: 51, size: 128, elements: !1132)
!1131 = !DIFile(filename: "zephyr/soc/arm/nxp_imx/mcimx7_m4/pinctrl_soc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1132 = !{!1133, !1134, !1135, !1136, !1137}
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "mux_register", scope: !1130, file: !1131, line: 52, baseType: !152, size: 32)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "config_register", scope: !1130, file: !1131, line: 53, baseType: !152, size: 32, offset: 32)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "input_register", scope: !1130, file: !1131, line: 54, baseType: !152, size: 32, offset: 64)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "mux_mode", scope: !1130, file: !1131, line: 55, baseType: !195, size: 4, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "input_daisy", scope: !1130, file: !1131, line: 56, baseType: !152, size: 4, offset: 100, flags: DIFlagBitField, extraData: i64 96)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "mux_count", scope: !1111, file: !1078, line: 29, baseType: !195, size: 8, offset: 96)
!1139 = !DIGlobalVariableExpression(var: !1140, expr: !DIExpression())
!1140 = distinct !DIGlobalVariable(name: "imx_gpio_driver_api", scope: !974, file: !1078, line: 249, type: !995, isLocal: true, isDefinition: true)
!1141 = !DIGlobalVariableExpression(var: !1142, expr: !DIExpression())
!1142 = distinct !DIGlobalVariable(name: "__isr_imx_gpio_port_isr_irq_0", scope: !1143, file: !1078, line: 318, type: !1146, isLocal: true, isDefinition: true, align: 32)
!1143 = distinct !DISubprogram(name: "imx_gpio_0_init", scope: !1078, file: !1078, line: 318, type: !1091, scopeLine: 318, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !974, retainedNodes: !1144)
!1144 = !{!1145}
!1145 = !DILocalVariable(name: "port", arg: 1, scope: !1143, file: !1078, line: 318, type: !1002)
!1146 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !1147)
!1147 = !{!1148, !1150, !1151, !1152}
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !1146, file: !10, line: 55, baseType: !1149, size: 32)
!1149 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !23, line: 74, baseType: !107)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1146, file: !10, line: 57, baseType: !1149, size: 32, offset: 32)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1146, file: !10, line: 59, baseType: !106, size: 32, offset: 64)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !1146, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!1153 = !DIGlobalVariableExpression(var: !1154, expr: !DIExpression())
!1154 = distinct !DIGlobalVariable(name: "__isr_imx_gpio_port_isr_irq_1", scope: !1143, file: !1078, line: 318, type: !1146, isLocal: true, isDefinition: true, align: 32)
!1155 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1129, size: 2048, elements: !1156)
!1156 = !{!1157}
!1157 = !DISubrange(count: 16)
!1158 = !DIGlobalVariableExpression(var: !1159, expr: !DIExpression())
!1159 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_25", scope: !1160, file: !1165, line: 7, type: !1166, isLocal: false, isDefinition: true, align: 16)
!1160 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1161, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !1162, splitDebugInlining: false, nameTableKind: None)
!1161 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/integration/zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/integration")
!1162 = !{!1158, !1163}
!1163 = !DIGlobalVariableExpression(var: !1164, expr: !DIExpression())
!1164 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_198", scope: !1160, file: !1165, line: 12, type: !1166, isLocal: false, isDefinition: true, align: 16)
!1165 = !DIFile(filename: "zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/integration")
!1166 = !DICompositeType(tag: DW_TAG_array_type, baseType: !898, size: 48, elements: !1167)
!1167 = !{!1168}
!1168 = !DISubrange(count: 3)
!1169 = !DIGlobalVariableExpression(var: !1170, expr: !DIExpression())
!1170 = distinct !DIGlobalVariable(name: "imx_uart_0_config", scope: !1171, file: !1368, line: 339, type: !1366, isLocal: true, isDefinition: true)
!1171 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1172, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1173, retainedTypes: !1259, globals: !1404, splitDebugInlining: false, nameTableKind: None)
!1172 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/serial/uart_imx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/integration")
!1173 = !{!30, !1174, !1212, !1240, !1244, !1248, !1253}
!1174 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_uart_status_flag", file: !1175, line: 122, baseType: !32, size: 32, elements: !1176)
!1175 = !DIFile(filename: "modules/hal/nxp/imx/drivers/./uart_imx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1176 = !{!1177, !1178, !1179, !1180, !1181, !1182, !1183, !1184, !1185, !1186, !1187, !1188, !1189, !1190, !1191, !1192, !1193, !1194, !1195, !1196, !1197, !1198, !1199, !1200, !1201, !1202, !1203, !1204, !1205, !1206, !1207, !1208, !1209, !1210, !1211}
!1177 = !DIEnumerator(name: "uartStatusRxCharReady", value: 15)
!1178 = !DIEnumerator(name: "uartStatusRxError", value: 14)
!1179 = !DIEnumerator(name: "uartStatusRxOverrunError", value: 13)
!1180 = !DIEnumerator(name: "uartStatusRxFrameError", value: 12)
!1181 = !DIEnumerator(name: "uartStatusRxBreakDetect", value: 11)
!1182 = !DIEnumerator(name: "uartStatusRxParityError", value: 10)
!1183 = !DIEnumerator(name: "uartStatusParityError", value: 9699343)
!1184 = !DIEnumerator(name: "uartStatusRtsStatus", value: 9699342)
!1185 = !DIEnumerator(name: "uartStatusTxReady", value: 9699341)
!1186 = !DIEnumerator(name: "uartStatusRtsDelta", value: 9699340)
!1187 = !DIEnumerator(name: "uartStatusEscape", value: 9699339)
!1188 = !DIEnumerator(name: "uartStatusFrameError", value: 9699338)
!1189 = !DIEnumerator(name: "uartStatusRxReady", value: 9699337)
!1190 = !DIEnumerator(name: "uartStatusAgingTimer", value: 9699336)
!1191 = !DIEnumerator(name: "uartStatusDtrDelta", value: 9699335)
!1192 = !DIEnumerator(name: "uartStatusRxDs", value: 9699334)
!1193 = !DIEnumerator(name: "uartStatustAirWake", value: 9699333)
!1194 = !DIEnumerator(name: "uartStatusAwake", value: 9699332)
!1195 = !DIEnumerator(name: "uartStatusRs485SlaveAddrMatch", value: 9699331)
!1196 = !DIEnumerator(name: "uartStatusAutoBaud", value: 9961487)
!1197 = !DIEnumerator(name: "uartStatusTxEmpty", value: 9961486)
!1198 = !DIEnumerator(name: "uartStatusDtr", value: 9961485)
!1199 = !DIEnumerator(name: "uartStatusIdle", value: 9961484)
!1200 = !DIEnumerator(name: "uartStatusAutoBaudCntStop", value: 9961483)
!1201 = !DIEnumerator(name: "uartStatusRiDelta", value: 9961482)
!1202 = !DIEnumerator(name: "uartStatusRi", value: 9961481)
!1203 = !DIEnumerator(name: "uartStatusIr", value: 9961480)
!1204 = !DIEnumerator(name: "uartStatusWake", value: 9961479)
!1205 = !DIEnumerator(name: "uartStatusDcdDelta", value: 9961478)
!1206 = !DIEnumerator(name: "uartStatusDcd", value: 9961477)
!1207 = !DIEnumerator(name: "uartStatusRts", value: 9961476)
!1208 = !DIEnumerator(name: "uartStatusTxComplete", value: 9961475)
!1209 = !DIEnumerator(name: "uartStatusBreakDetect", value: 9961474)
!1210 = !DIEnumerator(name: "uartStatusRxOverrun", value: 9961473)
!1211 = !DIEnumerator(name: "uartStatusRxDataReady", value: 9961472)
!1212 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_uart_interrupt", file: !1175, line: 91, baseType: !32, size: 32, elements: !1213)
!1213 = !{!1214, !1215, !1216, !1217, !1218, !1219, !1220, !1221, !1222, !1223, !1224, !1225, !1226, !1227, !1228, !1229, !1230, !1231, !1232, !1233, !1234, !1235, !1236, !1237, !1238, !1239}
!1214 = !DIEnumerator(name: "uartIntAutoBaud", value: 8388623)
!1215 = !DIEnumerator(name: "uartIntTxReady", value: 8388621)
!1216 = !DIEnumerator(name: "uartIntIdle", value: 8388620)
!1217 = !DIEnumerator(name: "uartIntRxReady", value: 8388617)
!1218 = !DIEnumerator(name: "uartIntTxEmpty", value: 8388614)
!1219 = !DIEnumerator(name: "uartIntRtsDelta", value: 8388613)
!1220 = !DIEnumerator(name: "uartIntEscape", value: 8650767)
!1221 = !DIEnumerator(name: "uartIntRts", value: 8650756)
!1222 = !DIEnumerator(name: "uartIntAgingTimer", value: 8650755)
!1223 = !DIEnumerator(name: "uartIntDtr", value: 8912909)
!1224 = !DIEnumerator(name: "uartIntParityError", value: 8912908)
!1225 = !DIEnumerator(name: "uartIntFrameError", value: 8912907)
!1226 = !DIEnumerator(name: "uartIntDcd", value: 8912905)
!1227 = !DIEnumerator(name: "uartIntRi", value: 8912904)
!1228 = !DIEnumerator(name: "uartIntRxDs", value: 8912902)
!1229 = !DIEnumerator(name: "uartInttAirWake", value: 8912901)
!1230 = !DIEnumerator(name: "uartIntAwake", value: 8912900)
!1231 = !DIEnumerator(name: "uartIntDtrDelta", value: 8912899)
!1232 = !DIEnumerator(name: "uartIntAutoBaudCnt", value: 8912896)
!1233 = !DIEnumerator(name: "uartIntIr", value: 9175048)
!1234 = !DIEnumerator(name: "uartIntWake", value: 9175047)
!1235 = !DIEnumerator(name: "uartIntTxComplete", value: 9175043)
!1236 = !DIEnumerator(name: "uartIntBreakDetect", value: 9175042)
!1237 = !DIEnumerator(name: "uartIntRxOverrun", value: 9175041)
!1238 = !DIEnumerator(name: "uartIntRxDataReady", value: 9175040)
!1239 = !DIEnumerator(name: "uartIntRs485SlaveAddrMatch", value: 12058627)
!1240 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_uart_word_length", file: !1175, line: 60, baseType: !32, size: 32, elements: !1241)
!1241 = !{!1242, !1243}
!1242 = !DIEnumerator(name: "uartWordLength7Bits", value: 0)
!1243 = !DIEnumerator(name: "uartWordLength8Bits", value: 32)
!1244 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_uart_stop_bit_num", file: !1175, line: 67, baseType: !32, size: 32, elements: !1245)
!1245 = !{!1246, !1247}
!1246 = !DIEnumerator(name: "uartStopBitNumOne", value: 0)
!1247 = !DIEnumerator(name: "uartStopBitNumTwo", value: 64)
!1248 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_uart_partity_mode", file: !1175, line: 74, baseType: !32, size: 32, elements: !1249)
!1249 = !{!1250, !1251, !1252}
!1250 = !DIEnumerator(name: "uartParityDisable", value: 0)
!1251 = !DIEnumerator(name: "uartParityEven", value: 256)
!1252 = !DIEnumerator(name: "uartParityOdd", value: 384)
!1253 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_uart_direction_mode", file: !1175, line: 82, baseType: !32, size: 32, elements: !1254)
!1254 = !{!1255, !1256, !1257, !1258}
!1255 = !DIEnumerator(name: "uartDirectionDisable", value: 0)
!1256 = !DIEnumerator(name: "uartDirectionTx", value: 4)
!1257 = !DIEnumerator(name: "uartDirectionRx", value: 2)
!1258 = !DIEnumerator(name: "uartDirectionTxRx", value: 6)
!1259 = !{!106, !107, !1260, !1339, !1365, !1403, !152, !145, !195}
!1260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1261, size: 32)
!1261 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1262)
!1262 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !875, line: 336, size: 608, elements: !1263)
!1263 = !{!1264, !1283, !1287, !1291, !1304, !1309, !1313, !1317, !1321, !1322, !1323, !1324, !1325, !1326, !1327, !1328, !1329, !1330, !1331}
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1262, file: !875, line: 365, baseType: !1265, size: 32)
!1265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1266, size: 32)
!1266 = !DISubroutineType(types: !1267)
!1267 = !{!107, !1268, !902}
!1268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1269, size: 32)
!1269 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1270)
!1270 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !884, line: 378, size: 192, elements: !1271)
!1271 = !{!1272, !1273, !1274, !1275, !1281, !1282}
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1270, file: !884, line: 380, baseType: !118, size: 32)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1270, file: !884, line: 382, baseType: !13, size: 32, offset: 32)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1270, file: !884, line: 384, baseType: !13, size: 32, offset: 64)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1270, file: !884, line: 386, baseType: !1276, size: 32, offset: 96)
!1276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1277, size: 32)
!1277 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !884, line: 351, size: 16, elements: !1278)
!1278 = !{!1279, !1280}
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1277, file: !884, line: 359, baseType: !195, size: 8)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1277, file: !884, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1270, file: !884, line: 388, baseType: !106, size: 32, offset: 128)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1270, file: !884, line: 396, baseType: !897, size: 32, offset: 160)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1262, file: !875, line: 366, baseType: !1284, size: 32, offset: 32)
!1284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1285, size: 32)
!1285 = !DISubroutineType(types: !1286)
!1286 = !{null, !1268, !196}
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1262, file: !875, line: 374, baseType: !1288, size: 32, offset: 64)
!1288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1289, size: 32)
!1289 = !DISubroutineType(types: !1290)
!1290 = !{!107, !1268}
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1262, file: !875, line: 377, baseType: !1292, size: 32, offset: 96)
!1292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1293, size: 32)
!1293 = !DISubroutineType(types: !1294)
!1294 = !{!107, !1268, !1295}
!1295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1296, size: 32)
!1296 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1297)
!1297 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !875, line: 122, size: 64, elements: !1298)
!1298 = !{!1299, !1300, !1301, !1302, !1303}
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1297, file: !875, line: 123, baseType: !152, size: 32)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1297, file: !875, line: 124, baseType: !195, size: 8, offset: 32)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1297, file: !875, line: 125, baseType: !195, size: 8, offset: 40)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1297, file: !875, line: 126, baseType: !195, size: 8, offset: 48)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1297, file: !875, line: 127, baseType: !195, size: 8, offset: 56)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1262, file: !875, line: 379, baseType: !1305, size: 32, offset: 128)
!1305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1306, size: 32)
!1306 = !DISubroutineType(types: !1307)
!1307 = !{!107, !1268, !1308}
!1308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1297, size: 32)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_fill", scope: !1262, file: !875, line: 384, baseType: !1310, size: 32, offset: 160)
!1310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1311, size: 32)
!1311 = !DISubroutineType(types: !1312)
!1312 = !{!107, !1268, !933, !107}
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_read", scope: !1262, file: !875, line: 393, baseType: !1314, size: 32, offset: 192)
!1314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1315, size: 32)
!1315 = !DISubroutineType(types: !1316)
!1316 = !{!107, !1268, !194, !939}
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_enable", scope: !1262, file: !875, line: 402, baseType: !1318, size: 32, offset: 224)
!1318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1319, size: 32)
!1319 = !DISubroutineType(types: !1320)
!1320 = !{null, !1268}
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_disable", scope: !1262, file: !875, line: 405, baseType: !1318, size: 32, offset: 256)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_ready", scope: !1262, file: !875, line: 408, baseType: !1288, size: 32, offset: 288)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_enable", scope: !1262, file: !875, line: 411, baseType: !1318, size: 32, offset: 320)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_disable", scope: !1262, file: !875, line: 414, baseType: !1318, size: 32, offset: 352)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_complete", scope: !1262, file: !875, line: 417, baseType: !1288, size: 32, offset: 384)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_ready", scope: !1262, file: !875, line: 420, baseType: !1288, size: 32, offset: 416)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_enable", scope: !1262, file: !875, line: 423, baseType: !1318, size: 32, offset: 448)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_disable", scope: !1262, file: !875, line: 426, baseType: !1318, size: 32, offset: 480)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "irq_is_pending", scope: !1262, file: !875, line: 429, baseType: !1288, size: 32, offset: 512)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "irq_update", scope: !1262, file: !875, line: 432, baseType: !1288, size: 32, offset: 544)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "irq_callback_set", scope: !1262, file: !875, line: 435, baseType: !1332, size: 32, offset: 576)
!1332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1333, size: 32)
!1333 = !DISubroutineType(types: !1334)
!1334 = !{null, !1268, !1335, !106}
!1335 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_irq_callback_user_data_t", file: !875, line: 142, baseType: !1336)
!1336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1337, size: 32)
!1337 = !DISubroutineType(types: !1338)
!1338 = !{null, !1268, !106}
!1339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1340, size: 32)
!1340 = !DIDerivedType(tag: DW_TAG_typedef, name: "UART_Type", file: !506, line: 41342, baseType: !1341)
!1341 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !506, line: 41322, size: 1504, elements: !1342)
!1342 = !{!1343, !1344, !1348, !1349, !1350, !1351, !1352, !1353, !1354, !1355, !1356, !1357, !1358, !1359, !1360, !1361, !1362, !1363, !1364}
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "URXD", scope: !1341, file: !506, line: 41323, baseType: !581, size: 32)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !1341, file: !506, line: 41324, baseType: !1345, size: 480, offset: 32)
!1345 = !DICompositeType(tag: DW_TAG_array_type, baseType: !195, size: 480, elements: !1346)
!1346 = !{!1347}
!1347 = !DISubrange(count: 60)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "UTXD", scope: !1341, file: !506, line: 41325, baseType: !510, size: 32, offset: 512)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !1341, file: !506, line: 41326, baseType: !1345, size: 480, offset: 544)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "UCR1", scope: !1341, file: !506, line: 41327, baseType: !510, size: 32, offset: 1024)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "UCR2", scope: !1341, file: !506, line: 41328, baseType: !510, size: 32, offset: 1056)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "UCR3", scope: !1341, file: !506, line: 41329, baseType: !510, size: 32, offset: 1088)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "UCR4", scope: !1341, file: !506, line: 41330, baseType: !510, size: 32, offset: 1120)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "UFCR", scope: !1341, file: !506, line: 41331, baseType: !510, size: 32, offset: 1152)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "USR1", scope: !1341, file: !506, line: 41332, baseType: !510, size: 32, offset: 1184)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "USR2", scope: !1341, file: !506, line: 41333, baseType: !510, size: 32, offset: 1216)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "UESC", scope: !1341, file: !506, line: 41334, baseType: !510, size: 32, offset: 1248)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "UTIM", scope: !1341, file: !506, line: 41335, baseType: !510, size: 32, offset: 1280)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "UBIR", scope: !1341, file: !506, line: 41336, baseType: !510, size: 32, offset: 1312)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "UBMR", scope: !1341, file: !506, line: 41337, baseType: !510, size: 32, offset: 1344)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "UBRC", scope: !1341, file: !506, line: 41338, baseType: !581, size: 32, offset: 1376)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "ONEMS", scope: !1341, file: !506, line: 41339, baseType: !510, size: 32, offset: 1408)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "UTS", scope: !1341, file: !506, line: 41340, baseType: !510, size: 32, offset: 1440)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "UMCR", scope: !1341, file: !506, line: 41341, baseType: !510, size: 32, offset: 1472)
!1365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1366, size: 32)
!1366 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1367)
!1367 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "imx_uart_config", file: !1368, line: 29, size: 160, elements: !1369)
!1368 = !DIFile(filename: "zephyr/drivers/serial/uart_imx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1369 = !{!1370, !1371, !1372, !1373, !1402}
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1367, file: !1368, line: 30, baseType: !1339, size: 32)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "baud_rate", scope: !1367, file: !1368, line: 31, baseType: !152, size: 32, offset: 32)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "modem_mode", scope: !1367, file: !1368, line: 32, baseType: !195, size: 8, offset: 64)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !1367, file: !1368, line: 33, baseType: !1374, size: 32, offset: 96)
!1374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1375, size: 32)
!1375 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1376)
!1376 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1377, line: 60, size: 64, elements: !1378)
!1377 = !DIFile(filename: "zephyr/include/zephyr/drivers/pinctrl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1378 = !{!1379, !1401}
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !1376, file: !1377, line: 69, baseType: !1380, size: 32)
!1380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1381, size: 32)
!1381 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1382)
!1382 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1377, line: 50, size: 64, elements: !1383)
!1383 = !{!1384, !1399, !1400}
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !1382, file: !1377, line: 52, baseType: !1385, size: 32)
!1385 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1386, size: 32)
!1386 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1387)
!1387 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1131, line: 64, baseType: !1388)
!1388 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1131, line: 59, size: 160, elements: !1389)
!1389 = !{!1390, !1398}
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !1388, file: !1131, line: 60, baseType: !1391, size: 128)
!1391 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pinmux", file: !1131, line: 51, size: 128, elements: !1392)
!1392 = !{!1393, !1394, !1395, !1396, !1397}
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "mux_register", scope: !1391, file: !1131, line: 52, baseType: !152, size: 32)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "config_register", scope: !1391, file: !1131, line: 53, baseType: !152, size: 32, offset: 32)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "input_register", scope: !1391, file: !1131, line: 54, baseType: !152, size: 32, offset: 64)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "mux_mode", scope: !1391, file: !1131, line: 55, baseType: !195, size: 4, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "input_daisy", scope: !1391, file: !1131, line: 56, baseType: !152, size: 4, offset: 100, flags: DIFlagBitField, extraData: i64 96)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "pin_ctrl_flags", scope: !1388, file: !1131, line: 61, baseType: !152, size: 32, offset: 128)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !1382, file: !1377, line: 54, baseType: !195, size: 8, offset: 32)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1382, file: !1377, line: 56, baseType: !195, size: 8, offset: 40)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !1376, file: !1377, line: 71, baseType: !195, size: 8, offset: 32)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "irq_config_func", scope: !1367, file: !1368, line: 35, baseType: !1318, size: 32, offset: 128)
!1403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !152, size: 32)
!1404 = !{!1405, !1410, !1412, !1419, !1425, !1427, !1169, !1429, !1431, !1436, !1439}
!1405 = !DIGlobalVariableExpression(var: !1406, expr: !DIExpression())
!1406 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_198", scope: !1171, file: !1368, line: 339, type: !1407, isLocal: false, isDefinition: true, align: 16)
!1407 = !DICompositeType(tag: DW_TAG_array_type, baseType: !898, size: 96, elements: !1408)
!1408 = !{!1409}
!1409 = !DISubrange(count: 6)
!1410 = !DIGlobalVariableExpression(var: !1411, expr: !DIExpression())
!1411 = distinct !DIGlobalVariable(name: "__device_dts_ord_198", scope: !1171, file: !1368, line: 339, type: !1269, isLocal: false, isDefinition: true, align: 32)
!1412 = !DIGlobalVariableExpression(var: !1413, expr: !DIExpression())
!1413 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_198", scope: !1171, file: !1368, line: 339, type: !1414, isLocal: true, isDefinition: true, align: 32)
!1414 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1415)
!1415 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !635, line: 51, size: 64, elements: !1416)
!1416 = !{!1417, !1418}
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1415, file: !635, line: 60, baseType: !1288, size: 32)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1415, file: !635, line: 65, baseType: !1268, size: 32, offset: 32)
!1419 = !DIGlobalVariableExpression(var: !1420, expr: !DIExpression())
!1420 = distinct !DIGlobalVariable(name: "imx_uart_0_data", scope: !1171, file: !1368, line: 339, type: !1421, isLocal: true, isDefinition: true)
!1421 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "imx_uart_data", file: !1368, line: 39, size: 64, elements: !1422)
!1422 = !{!1423, !1424}
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !1421, file: !1368, line: 41, baseType: !1335, size: 32)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "cb_data", scope: !1421, file: !1368, line: 42, baseType: !106, size: 32, offset: 32)
!1425 = !DIGlobalVariableExpression(var: !1426, expr: !DIExpression())
!1426 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_198", scope: !1171, file: !1368, line: 339, type: !1277, isLocal: true, isDefinition: true, align: 8)
!1427 = !DIGlobalVariableExpression(var: !1428, expr: !DIExpression())
!1428 = distinct !DIGlobalVariable(name: "uart_imx_driver_api", scope: !1171, file: !1368, line: 270, type: !1261, isLocal: true, isDefinition: true)
!1429 = !DIGlobalVariableExpression(var: !1430, expr: !DIExpression())
!1430 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_198", scope: !1171, file: !1368, line: 339, type: !1375, isLocal: true, isDefinition: true)
!1431 = !DIGlobalVariableExpression(var: !1432, expr: !DIExpression())
!1432 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_198", scope: !1171, file: !1368, line: 339, type: !1433, isLocal: true, isDefinition: true)
!1433 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1381, size: 64, elements: !1434)
!1434 = !{!1435}
!1435 = !DISubrange(count: 1)
!1436 = !DIGlobalVariableExpression(var: !1437, expr: !DIExpression())
!1437 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_198", scope: !1171, file: !1368, line: 339, type: !1438, isLocal: true, isDefinition: true)
!1438 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1386, size: 320, elements: !747)
!1439 = !DIGlobalVariableExpression(var: !1440, expr: !DIExpression())
!1440 = distinct !DIGlobalVariable(name: "__isr_uart_imx_isr_irq_0", scope: !1441, file: !1368, line: 339, type: !1444, isLocal: true, isDefinition: true, align: 32)
!1441 = distinct !DISubprogram(name: "irq_config_func_0", scope: !1368, file: !1368, line: 339, type: !1319, scopeLine: 339, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1171, retainedNodes: !1442)
!1442 = !{!1443}
!1443 = !DILocalVariable(name: "dev", arg: 1, scope: !1441, file: !1368, line: 339, type: !1268)
!1444 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !1445)
!1445 = !{!1446, !1447, !1448, !1449}
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !1444, file: !10, line: 55, baseType: !1149, size: 32)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1444, file: !10, line: 57, baseType: !1149, size: 32, offset: 32)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1444, file: !10, line: 59, baseType: !106, size: 32, offset: 64)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !1444, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!1450 = !DIGlobalVariableExpression(var: !1451, expr: !DIExpression())
!1451 = distinct !DIGlobalVariable(name: "overflow_cyc", scope: !1452, file: !1677, line: 65, type: !510, isLocal: true, isDefinition: true)
!1452 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1453, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1454, retainedTypes: !1595, globals: !1674, splitDebugInlining: false, nameTableKind: None)
!1453 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/integration")
!1454 = !{!1455}
!1455 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "IRQn", file: !506, line: 103, baseType: !107, size: 32, elements: !1456)
!1456 = !{!1457, !1458, !1459, !1460, !1461, !1462, !1463, !1464, !1465, !1466, !1467, !1468, !1469, !1470, !1471, !1472, !1473, !1474, !1475, !1476, !1477, !1478, !1479, !1480, !1481, !1482, !1483, !1484, !1485, !1486, !1487, !1488, !1489, !1490, !1491, !1492, !1493, !1494, !1495, !1496, !1497, !1498, !1499, !1500, !1501, !1502, !1503, !1504, !1505, !1506, !1507, !1508, !1509, !1510, !1511, !1512, !1513, !1514, !1515, !1516, !1517, !1518, !1519, !1520, !1521, !1522, !1523, !1524, !1525, !1526, !1527, !1528, !1529, !1530, !1531, !1532, !1533, !1534, !1535, !1536, !1537, !1538, !1539, !1540, !1541, !1542, !1543, !1544, !1545, !1546, !1547, !1548, !1549, !1550, !1551, !1552, !1553, !1554, !1555, !1556, !1557, !1558, !1559, !1560, !1561, !1562, !1563, !1564, !1565, !1566, !1567, !1568, !1569, !1570, !1571, !1572, !1573, !1574, !1575, !1576, !1577, !1578, !1579, !1580, !1581, !1582, !1583, !1584, !1585, !1586, !1587, !1588, !1589, !1590, !1591, !1592, !1593, !1594}
!1457 = !DIEnumerator(name: "NotAvail_IRQn", value: -128)
!1458 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!1459 = !DIEnumerator(name: "HardFault_IRQn", value: -13)
!1460 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!1461 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!1462 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!1463 = !DIEnumerator(name: "SVCall_IRQn", value: -5)
!1464 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!1465 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!1466 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!1467 = !DIEnumerator(name: "GPR_IRQn", value: 0)
!1468 = !DIEnumerator(name: "DAP_IRQn", value: 1)
!1469 = !DIEnumerator(name: "SDMA_IRQn", value: 2)
!1470 = !DIEnumerator(name: "DBGMON_IRQn", value: 3)
!1471 = !DIEnumerator(name: "SNVS_IRQn", value: 4)
!1472 = !DIEnumerator(name: "LCDIF_IRQn", value: 5)
!1473 = !DIEnumerator(name: "SIM2_IRQn", value: 6)
!1474 = !DIEnumerator(name: "CSI_IRQn", value: 7)
!1475 = !DIEnumerator(name: "PXP1_IRQn", value: 8)
!1476 = !DIEnumerator(name: "Reserved_IRQn", value: 9)
!1477 = !DIEnumerator(name: "WDOG3_IRQn", value: 10)
!1478 = !DIEnumerator(name: "SEMA4_HS_M4_IRQn", value: 11)
!1479 = !DIEnumerator(name: "APBHDMA_IRQn", value: 12)
!1480 = !DIEnumerator(name: "EIM_IRQn", value: 13)
!1481 = !DIEnumerator(name: "BCH_IRQn", value: 14)
!1482 = !DIEnumerator(name: "GPMI_IRQn", value: 15)
!1483 = !DIEnumerator(name: "UART6_IRQn", value: 16)
!1484 = !DIEnumerator(name: "FTM1_IRQn", value: 17)
!1485 = !DIEnumerator(name: "FTM2_IRQn", value: 18)
!1486 = !DIEnumerator(name: "SNVS_CONSOLIDATED_IRQn", value: 19)
!1487 = !DIEnumerator(name: "SNVS_SECURITY_IRQn", value: 20)
!1488 = !DIEnumerator(name: "CSU_IRQn", value: 21)
!1489 = !DIEnumerator(name: "uSDHC1_IRQn", value: 22)
!1490 = !DIEnumerator(name: "uSDHC2_IRQn", value: 23)
!1491 = !DIEnumerator(name: "uSDHC3_IRQn", value: 24)
!1492 = !DIEnumerator(name: "MIPI_CSI_IRQn", value: 25)
!1493 = !DIEnumerator(name: "UART1_IRQn", value: 26)
!1494 = !DIEnumerator(name: "UART2_IRQn", value: 27)
!1495 = !DIEnumerator(name: "UART3_IRQn", value: 28)
!1496 = !DIEnumerator(name: "UART4_IRQn", value: 29)
!1497 = !DIEnumerator(name: "UART5_IRQn", value: 30)
!1498 = !DIEnumerator(name: "eCSPI1_IRQn", value: 31)
!1499 = !DIEnumerator(name: "eCSPI2_IRQn", value: 32)
!1500 = !DIEnumerator(name: "eCSPI3_IRQn", value: 33)
!1501 = !DIEnumerator(name: "eCSPI4_IRQn", value: 34)
!1502 = !DIEnumerator(name: "I2C1_IRQn", value: 35)
!1503 = !DIEnumerator(name: "I2C2_IRQn", value: 36)
!1504 = !DIEnumerator(name: "I2C3_IRQn", value: 37)
!1505 = !DIEnumerator(name: "I2C4_IRQn", value: 38)
!1506 = !DIEnumerator(name: "RDC_IRQn", value: 39)
!1507 = !DIEnumerator(name: "USB_OH3_OTG2_1_IRQn", value: 40)
!1508 = !DIEnumerator(name: "MIPI_DSI_IRQn", value: 41)
!1509 = !DIEnumerator(name: "USB_OH3_OTG2_2_IRQn", value: 42)
!1510 = !DIEnumerator(name: "USB_OH2_OTG_IRQn", value: 43)
!1511 = !DIEnumerator(name: "USB_OTG1_IRQn", value: 44)
!1512 = !DIEnumerator(name: "USB_OTG2_IRQn", value: 45)
!1513 = !DIEnumerator(name: "PXP2_IRQn", value: 46)
!1514 = !DIEnumerator(name: "SCTR1_IRQn", value: 47)
!1515 = !DIEnumerator(name: "SCTR2_IRQn", value: 48)
!1516 = !DIEnumerator(name: "Analog_TempSensor_IRQn", value: 49)
!1517 = !DIEnumerator(name: "SAI3_IRQn", value: 50)
!1518 = !DIEnumerator(name: "Analog_brown_out_IRQn", value: 51)
!1519 = !DIEnumerator(name: "GPT4_IRQn", value: 52)
!1520 = !DIEnumerator(name: "GPT3_IRQn", value: 53)
!1521 = !DIEnumerator(name: "GPT2_IRQn", value: 54)
!1522 = !DIEnumerator(name: "GPT1_IRQn", value: 55)
!1523 = !DIEnumerator(name: "GPIO1_INT7_IRQn", value: 56)
!1524 = !DIEnumerator(name: "GPIO1_INT6_IRQn", value: 57)
!1525 = !DIEnumerator(name: "GPIO1_INT5_IRQn", value: 58)
!1526 = !DIEnumerator(name: "GPIO1_INT4_IRQn", value: 59)
!1527 = !DIEnumerator(name: "GPIO1_INT3_IRQn", value: 60)
!1528 = !DIEnumerator(name: "GPIO1_INT2_IRQn", value: 61)
!1529 = !DIEnumerator(name: "GPIO1_INT1_IRQn", value: 62)
!1530 = !DIEnumerator(name: "GPIO1_INT0_IRQn", value: 63)
!1531 = !DIEnumerator(name: "GPIO1_INT15_0_IRQn", value: 64)
!1532 = !DIEnumerator(name: "GPIO1_INT31_16_IRQn", value: 65)
!1533 = !DIEnumerator(name: "GPIO2_INT15_0_IRQn", value: 66)
!1534 = !DIEnumerator(name: "GPIO2_INT31_16_IRQn", value: 67)
!1535 = !DIEnumerator(name: "GPIO3_INT15_0_IRQn", value: 68)
!1536 = !DIEnumerator(name: "GPIO3_INT31_16_IRQn", value: 69)
!1537 = !DIEnumerator(name: "GPIO4_INT15_0_IRQn", value: 70)
!1538 = !DIEnumerator(name: "GPIO4_INT31_16_IRQn", value: 71)
!1539 = !DIEnumerator(name: "GPIO5_INT15_0_IRQn", value: 72)
!1540 = !DIEnumerator(name: "GPIO5_INT31_16_IRQn", value: 73)
!1541 = !DIEnumerator(name: "GPIO6_INT15_0_IRQn", value: 74)
!1542 = !DIEnumerator(name: "GPIO6_INT31_16_IRQn", value: 75)
!1543 = !DIEnumerator(name: "GPIO7_INT15_0_IRQn", value: 76)
!1544 = !DIEnumerator(name: "GPIO7_INT31_16_IRQn", value: 77)
!1545 = !DIEnumerator(name: "WDOG1_IRQn", value: 78)
!1546 = !DIEnumerator(name: "WDOG2_IRQn", value: 79)
!1547 = !DIEnumerator(name: "KPP_IRQn", value: 80)
!1548 = !DIEnumerator(name: "PWM1_IRQn", value: 81)
!1549 = !DIEnumerator(name: "PWM2_IRQn", value: 82)
!1550 = !DIEnumerator(name: "PWM3_IRQn", value: 83)
!1551 = !DIEnumerator(name: "PWM4_IRQn", value: 84)
!1552 = !DIEnumerator(name: "CCM1_IRQn", value: 85)
!1553 = !DIEnumerator(name: "CCM2_IRQn", value: 86)
!1554 = !DIEnumerator(name: "GPC_IRQn", value: 87)
!1555 = !DIEnumerator(name: "MU_A7_IRQn", value: 88)
!1556 = !DIEnumerator(name: "SRC_IRQn", value: 89)
!1557 = !DIEnumerator(name: "SIM1_IRQn", value: 90)
!1558 = !DIEnumerator(name: "RTIC_IRQn", value: 91)
!1559 = !DIEnumerator(name: "CPU_IRQn", value: 92)
!1560 = !DIEnumerator(name: "CPU_CTI_IRQn", value: 93)
!1561 = !DIEnumerator(name: "CCM_SRC_GPC_IRQn", value: 94)
!1562 = !DIEnumerator(name: "SAI1_IRQn", value: 95)
!1563 = !DIEnumerator(name: "SAI2_IRQn", value: 96)
!1564 = !DIEnumerator(name: "MU_M4_IRQn", value: 97)
!1565 = !DIEnumerator(name: "ADC1_IRQn", value: 98)
!1566 = !DIEnumerator(name: "ADC2_IRQn", value: 99)
!1567 = !DIEnumerator(name: "ENET2_MAC0_TRANS1_IRQn", value: 100)
!1568 = !DIEnumerator(name: "ENET2_MAC0_TRANS2_IRQn", value: 101)
!1569 = !DIEnumerator(name: "ENET2_MAC0_IRQ_IRQn", value: 102)
!1570 = !DIEnumerator(name: "ENET2_1588_TIMER_IRQ_IRQn", value: 103)
!1571 = !DIEnumerator(name: "TPR_IRQn", value: 104)
!1572 = !DIEnumerator(name: "CAAM_QUEUE_IRQn", value: 105)
!1573 = !DIEnumerator(name: "CAAM_ERROR_IRQn", value: 106)
!1574 = !DIEnumerator(name: "QSPI_IRQn", value: 107)
!1575 = !DIEnumerator(name: "TZASC1_IRQn", value: 108)
!1576 = !DIEnumerator(name: "WDOG4_IRQn", value: 109)
!1577 = !DIEnumerator(name: "FLEXCAN1_IRQn", value: 110)
!1578 = !DIEnumerator(name: "FLEXCAN2_IRQn", value: 111)
!1579 = !DIEnumerator(name: "PERFMON1_IRQn", value: 112)
!1580 = !DIEnumerator(name: "PERFMON2_IRQn", value: 113)
!1581 = !DIEnumerator(name: "CAAM_WRAPPER1_IRQn", value: 114)
!1582 = !DIEnumerator(name: "CAAM_WRAPPER2_IRQn", value: 115)
!1583 = !DIEnumerator(name: "SEMA4_HS_A7_IRQn", value: 116)
!1584 = !DIEnumerator(name: "EPDC_IRQn", value: 117)
!1585 = !DIEnumerator(name: "ENET1_MAC0_TRANS1_IRQn", value: 118)
!1586 = !DIEnumerator(name: "ENET1_MAC0_TRANS2_IRQn", value: 119)
!1587 = !DIEnumerator(name: "ENET1_MAC0_IRQn", value: 120)
!1588 = !DIEnumerator(name: "ENET1_1588_TIMER_IRQn", value: 121)
!1589 = !DIEnumerator(name: "PCIE_CTRL1_IRQn", value: 122)
!1590 = !DIEnumerator(name: "PCIE_CTRL2_IRQn", value: 123)
!1591 = !DIEnumerator(name: "PCIE_CTRL3_IRQn", value: 124)
!1592 = !DIEnumerator(name: "PCIE_CTRL4_IRQn", value: 125)
!1593 = !DIEnumerator(name: "UART7_IRQn", value: 126)
!1594 = !DIEnumerator(name: "PCIE_CTRL_REQUEST_IRQn", value: 127)
!1595 = !{!692, !1596, !1149, !195, !152, !1605, !1638}
!1596 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1597, size: 32)
!1597 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !1598, line: 770, baseType: !1599)
!1598 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/core_cm4.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1599 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1598, line: 764, size: 128, elements: !1600)
!1600 = !{!1601, !1602, !1603, !1604}
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1599, file: !1598, line: 766, baseType: !510, size: 32)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !1599, file: !1598, line: 767, baseType: !510, size: 32, offset: 32)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !1599, file: !1598, line: 768, baseType: !510, size: 32, offset: 64)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !1599, file: !1598, line: 769, baseType: !581, size: 32, offset: 96)
!1605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1606, size: 32)
!1606 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !1598, line: 426, baseType: !1607)
!1607 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1598, line: 411, size: 28704, elements: !1608)
!1608 = !{!1609, !1613, !1617, !1618, !1619, !1620, !1621, !1622, !1623, !1624, !1628, !1633, !1637}
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1607, file: !1598, line: 413, baseType: !1610, size: 256)
!1610 = !DICompositeType(tag: DW_TAG_array_type, baseType: !510, size: 256, elements: !1611)
!1611 = !{!1612}
!1612 = !DISubrange(count: 8)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1607, file: !1598, line: 414, baseType: !1614, size: 768, offset: 256)
!1614 = !DICompositeType(tag: DW_TAG_array_type, baseType: !152, size: 768, elements: !1615)
!1615 = !{!1616}
!1616 = !DISubrange(count: 24)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1607, file: !1598, line: 415, baseType: !1610, size: 256, offset: 1024)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1607, file: !1598, line: 416, baseType: !1614, size: 768, offset: 1280)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1607, file: !1598, line: 417, baseType: !1610, size: 256, offset: 2048)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1607, file: !1598, line: 418, baseType: !1614, size: 768, offset: 2304)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1607, file: !1598, line: 419, baseType: !1610, size: 256, offset: 3072)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1607, file: !1598, line: 420, baseType: !1614, size: 768, offset: 3328)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1607, file: !1598, line: 421, baseType: !1610, size: 256, offset: 4096)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1607, file: !1598, line: 422, baseType: !1625, size: 1792, offset: 4352)
!1625 = !DICompositeType(tag: DW_TAG_array_type, baseType: !152, size: 1792, elements: !1626)
!1626 = !{!1627}
!1627 = !DISubrange(count: 56)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1607, file: !1598, line: 423, baseType: !1629, size: 1920, offset: 6144)
!1629 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1630, size: 1920, elements: !1631)
!1630 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !195)
!1631 = !{!1632}
!1632 = !DISubrange(count: 240)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1607, file: !1598, line: 424, baseType: !1634, size: 20608, offset: 8064)
!1634 = !DICompositeType(tag: DW_TAG_array_type, baseType: !152, size: 20608, elements: !1635)
!1635 = !{!1636}
!1636 = !DISubrange(count: 644)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1607, file: !1598, line: 425, baseType: !510, size: 32, offset: 28672)
!1638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1639, size: 32)
!1639 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1598, line: 468, baseType: !1640)
!1640 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1598, line: 445, size: 1120, elements: !1641)
!1641 = !{!1642, !1643, !1644, !1645, !1646, !1647, !1648, !1652, !1653, !1654, !1655, !1656, !1657, !1658, !1659, !1661, !1662, !1663, !1667, !1671, !1673}
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1640, file: !1598, line: 447, baseType: !581, size: 32)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1640, file: !1598, line: 448, baseType: !510, size: 32, offset: 32)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1640, file: !1598, line: 449, baseType: !510, size: 32, offset: 64)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1640, file: !1598, line: 450, baseType: !510, size: 32, offset: 96)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1640, file: !1598, line: 451, baseType: !510, size: 32, offset: 128)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1640, file: !1598, line: 452, baseType: !510, size: 32, offset: 160)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1640, file: !1598, line: 453, baseType: !1649, size: 96, offset: 192)
!1649 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1630, size: 96, elements: !1650)
!1650 = !{!1651}
!1651 = !DISubrange(count: 12)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1640, file: !1598, line: 454, baseType: !510, size: 32, offset: 288)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1640, file: !1598, line: 455, baseType: !510, size: 32, offset: 320)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1640, file: !1598, line: 456, baseType: !510, size: 32, offset: 352)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1640, file: !1598, line: 457, baseType: !510, size: 32, offset: 384)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1640, file: !1598, line: 458, baseType: !510, size: 32, offset: 416)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1640, file: !1598, line: 459, baseType: !510, size: 32, offset: 448)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1640, file: !1598, line: 460, baseType: !510, size: 32, offset: 480)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1640, file: !1598, line: 461, baseType: !1660, size: 64, offset: 512)
!1660 = !DICompositeType(tag: DW_TAG_array_type, baseType: !581, size: 64, elements: !747)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1640, file: !1598, line: 462, baseType: !581, size: 32, offset: 576)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1640, file: !1598, line: 463, baseType: !581, size: 32, offset: 608)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1640, file: !1598, line: 464, baseType: !1664, size: 128, offset: 640)
!1664 = !DICompositeType(tag: DW_TAG_array_type, baseType: !581, size: 128, elements: !1665)
!1665 = !{!1666}
!1666 = !DISubrange(count: 4)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1640, file: !1598, line: 465, baseType: !1668, size: 160, offset: 768)
!1668 = !DICompositeType(tag: DW_TAG_array_type, baseType: !581, size: 160, elements: !1669)
!1669 = !{!1670}
!1670 = !DISubrange(count: 5)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1640, file: !1598, line: 466, baseType: !1672, size: 160, offset: 928)
!1672 = !DICompositeType(tag: DW_TAG_array_type, baseType: !152, size: 160, elements: !1669)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1640, file: !1598, line: 467, baseType: !510, size: 32, offset: 1088)
!1674 = !{!1675, !1701, !1706, !1708, !1710, !1450}
!1675 = !DIGlobalVariableExpression(var: !1676, expr: !DIExpression())
!1676 = distinct !DIGlobalVariable(name: "__init_sys_clock_driver_init", scope: !1452, file: !1677, line: 285, type: !1678, isLocal: true, isDefinition: true, align: 32)
!1677 = !DIFile(filename: "zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1678 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1679)
!1679 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !635, line: 51, size: 64, elements: !1680)
!1680 = !{!1681, !1700}
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1679, file: !635, line: 60, baseType: !1682, size: 32)
!1682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1683, size: 32)
!1683 = !DISubroutineType(types: !1684)
!1684 = !{!107, !1685}
!1685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1686, size: 32)
!1686 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1687)
!1687 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !884, line: 378, size: 192, elements: !1688)
!1688 = !{!1689, !1690, !1691, !1692, !1698, !1699}
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1687, file: !884, line: 380, baseType: !118, size: 32)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1687, file: !884, line: 382, baseType: !13, size: 32, offset: 32)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1687, file: !884, line: 384, baseType: !13, size: 32, offset: 64)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1687, file: !884, line: 386, baseType: !1693, size: 32, offset: 96)
!1693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1694, size: 32)
!1694 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !884, line: 351, size: 16, elements: !1695)
!1695 = !{!1696, !1697}
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1694, file: !884, line: 359, baseType: !195, size: 8)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1694, file: !884, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1687, file: !884, line: 388, baseType: !106, size: 32, offset: 128)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1687, file: !884, line: 396, baseType: !897, size: 32, offset: 160)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1679, file: !635, line: 65, baseType: !1685, size: 32, offset: 32)
!1701 = !DIGlobalVariableExpression(var: !1702, expr: !DIExpression())
!1702 = distinct !DIGlobalVariable(name: "lock", scope: !1452, file: !1677, line: 34, type: !1703, isLocal: true, isDefinition: true)
!1703 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !818, line: 43, size: 32, elements: !1704)
!1704 = !{!1705}
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !1703, file: !818, line: 52, baseType: !22, size: 32)
!1706 = !DIGlobalVariableExpression(var: !1707, expr: !DIExpression())
!1707 = distinct !DIGlobalVariable(name: "last_load", scope: !1452, file: !1677, line: 36, type: !152, isLocal: true, isDefinition: true)
!1708 = !DIGlobalVariableExpression(var: !1709, expr: !DIExpression())
!1709 = distinct !DIGlobalVariable(name: "cycle_count", scope: !1452, file: !1677, line: 48, type: !152, isLocal: true, isDefinition: true)
!1710 = !DIGlobalVariableExpression(var: !1711, expr: !DIExpression())
!1711 = distinct !DIGlobalVariable(name: "announced_cycles", scope: !1452, file: !1677, line: 54, type: !152, isLocal: true, isDefinition: true)
!1712 = !DIGlobalVariableExpression(var: !1713, expr: !DIExpression())
!1713 = distinct !DIGlobalVariable(name: "__init_imx_pinctrl_init", scope: !1714, file: !1718, line: 69, type: !1719, isLocal: true, isDefinition: true, align: 32)
!1714 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1715, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1716, globals: !1717, splitDebugInlining: false, nameTableKind: None)
!1715 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/pinctrl_imx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/integration")
!1716 = !{!630, !22}
!1717 = !{!1712}
!1718 = !DIFile(filename: "zephyr/drivers/pinctrl/pinctrl_imx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1719 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1720)
!1720 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !635, line: 51, size: 64, elements: !1721)
!1721 = !{!1722, !1741}
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1720, file: !635, line: 60, baseType: !1723, size: 32)
!1723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1724, size: 32)
!1724 = !DISubroutineType(types: !1725)
!1725 = !{!107, !1726}
!1726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1727, size: 32)
!1727 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1728)
!1728 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !884, line: 378, size: 192, elements: !1729)
!1729 = !{!1730, !1731, !1732, !1733, !1739, !1740}
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1728, file: !884, line: 380, baseType: !118, size: 32)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1728, file: !884, line: 382, baseType: !13, size: 32, offset: 32)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1728, file: !884, line: 384, baseType: !13, size: 32, offset: 64)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1728, file: !884, line: 386, baseType: !1734, size: 32, offset: 96)
!1734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1735, size: 32)
!1735 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !884, line: 351, size: 16, elements: !1736)
!1736 = !{!1737, !1738}
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1735, file: !884, line: 359, baseType: !195, size: 8)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1735, file: !884, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1728, file: !884, line: 388, baseType: !106, size: 32, offset: 128)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1728, file: !884, line: 396, baseType: !897, size: 32, offset: 160)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1720, file: !635, line: 65, baseType: !1726, size: 32, offset: 32)
!1742 = !DIGlobalVariableExpression(var: !1743, expr: !DIExpression())
!1743 = distinct !DIGlobalVariable(name: "_k_neg_eagain", scope: !1744, file: !1747, line: 23, type: !939, isLocal: false, isDefinition: true)
!1744 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1745, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !105, globals: !1746, splitDebugInlining: false, nameTableKind: None)
!1745 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/integration")
!1746 = !{!1742}
!1747 = !DIFile(filename: "zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1748 = !DIGlobalVariableExpression(var: !1749, expr: !DIExpression())
!1749 = distinct !DIGlobalVariable(name: "log_const_os", scope: !1750, file: !1754, line: 37, type: !2001, isLocal: false, isDefinition: true)
!1750 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1751, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1752, retainedTypes: !1761, globals: !1834, splitDebugInlining: false, nameTableKind: None)
!1751 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/integration")
!1752 = !{!1753, !30, !1455}
!1753 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "init_level", file: !1754, line: 63, baseType: !32, size: 32, elements: !1755)
!1754 = !DIFile(filename: "zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1755 = !{!1756, !1757, !1758, !1759, !1760}
!1756 = !DIEnumerator(name: "INIT_LEVEL_EARLY", value: 0)
!1757 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_1", value: 1)
!1758 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_2", value: 2)
!1759 = !DIEnumerator(name: "INIT_LEVEL_POST_KERNEL", value: 3)
!1760 = !DIEnumerator(name: "INIT_LEVEL_APPLICATION", value: 4)
!1761 = !{!185, !106, !107, !1762, !193, !152, !1792, !1149, !195, !1817}
!1762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1763, size: 32)
!1763 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1764)
!1764 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "entropy_driver_api", file: !1765, line: 51, size: 64, elements: !1766)
!1765 = !DIFile(filename: "zephyr/include/zephyr/drivers/entropy.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1766 = !{!1767, !1787}
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy", scope: !1764, file: !1765, line: 52, baseType: !1768, size: 32)
!1768 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_t", file: !1765, line: 38, baseType: !1769)
!1769 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1770, size: 32)
!1770 = !DISubroutineType(types: !1771)
!1771 = !{!107, !1772, !194, !197}
!1772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1773, size: 32)
!1773 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1774)
!1774 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !884, line: 378, size: 192, elements: !1775)
!1775 = !{!1776, !1777, !1778, !1779, !1785, !1786}
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1774, file: !884, line: 380, baseType: !118, size: 32)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1774, file: !884, line: 382, baseType: !13, size: 32, offset: 32)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1774, file: !884, line: 384, baseType: !13, size: 32, offset: 64)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1774, file: !884, line: 386, baseType: !1780, size: 32, offset: 96)
!1780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1781, size: 32)
!1781 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !884, line: 351, size: 16, elements: !1782)
!1782 = !{!1783, !1784}
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1781, file: !884, line: 359, baseType: !195, size: 8)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1781, file: !884, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1774, file: !884, line: 388, baseType: !106, size: 32, offset: 128)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1774, file: !884, line: 396, baseType: !897, size: 32, offset: 160)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy_isr", scope: !1764, file: !1765, line: 53, baseType: !1788, size: 32, offset: 32)
!1788 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_isr_t", file: !1765, line: 47, baseType: !1789)
!1789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1790, size: 32)
!1790 = !DISubroutineType(types: !1791)
!1791 = !{!107, !1772, !194, !197, !152}
!1792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1793, size: 32)
!1793 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1598, line: 468, baseType: !1794)
!1794 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1598, line: 445, size: 1120, elements: !1795)
!1795 = !{!1796, !1797, !1798, !1799, !1800, !1801, !1802, !1803, !1804, !1805, !1806, !1807, !1808, !1809, !1810, !1811, !1812, !1813, !1814, !1815, !1816}
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1794, file: !1598, line: 447, baseType: !581, size: 32)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1794, file: !1598, line: 448, baseType: !510, size: 32, offset: 32)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1794, file: !1598, line: 449, baseType: !510, size: 32, offset: 64)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1794, file: !1598, line: 450, baseType: !510, size: 32, offset: 96)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1794, file: !1598, line: 451, baseType: !510, size: 32, offset: 128)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1794, file: !1598, line: 452, baseType: !510, size: 32, offset: 160)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1794, file: !1598, line: 453, baseType: !1649, size: 96, offset: 192)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1794, file: !1598, line: 454, baseType: !510, size: 32, offset: 288)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1794, file: !1598, line: 455, baseType: !510, size: 32, offset: 320)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1794, file: !1598, line: 456, baseType: !510, size: 32, offset: 352)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1794, file: !1598, line: 457, baseType: !510, size: 32, offset: 384)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1794, file: !1598, line: 458, baseType: !510, size: 32, offset: 416)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1794, file: !1598, line: 459, baseType: !510, size: 32, offset: 448)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1794, file: !1598, line: 460, baseType: !510, size: 32, offset: 480)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1794, file: !1598, line: 461, baseType: !1660, size: 64, offset: 512)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1794, file: !1598, line: 462, baseType: !581, size: 32, offset: 576)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1794, file: !1598, line: 463, baseType: !581, size: 32, offset: 608)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1794, file: !1598, line: 464, baseType: !1664, size: 128, offset: 640)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1794, file: !1598, line: 465, baseType: !1668, size: 160, offset: 768)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1794, file: !1598, line: 466, baseType: !1672, size: 160, offset: 928)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1794, file: !1598, line: 467, baseType: !510, size: 32, offset: 1088)
!1817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1818, size: 32)
!1818 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !1598, line: 426, baseType: !1819)
!1819 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1598, line: 411, size: 28704, elements: !1820)
!1820 = !{!1821, !1822, !1823, !1824, !1825, !1826, !1827, !1828, !1829, !1830, !1831, !1832, !1833}
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1819, file: !1598, line: 413, baseType: !1610, size: 256)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1819, file: !1598, line: 414, baseType: !1614, size: 768, offset: 256)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1819, file: !1598, line: 415, baseType: !1610, size: 256, offset: 1024)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1819, file: !1598, line: 416, baseType: !1614, size: 768, offset: 1280)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1819, file: !1598, line: 417, baseType: !1610, size: 256, offset: 2048)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1819, file: !1598, line: 418, baseType: !1614, size: 768, offset: 2304)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1819, file: !1598, line: 419, baseType: !1610, size: 256, offset: 3072)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1819, file: !1598, line: 420, baseType: !1614, size: 768, offset: 3328)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1819, file: !1598, line: 421, baseType: !1610, size: 256, offset: 4096)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1819, file: !1598, line: 422, baseType: !1625, size: 1792, offset: 4352)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1819, file: !1598, line: 423, baseType: !1629, size: 1920, offset: 6144)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1819, file: !1598, line: 424, baseType: !1634, size: 20608, offset: 8064)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1819, file: !1598, line: 425, baseType: !510, size: 32, offset: 28672)
!1834 = !{!1748, !1835, !1955, !1961, !1963, !1966, !1971, !1973, !1978}
!1835 = !DIGlobalVariableExpression(var: !1836, expr: !DIExpression())
!1836 = distinct !DIGlobalVariable(name: "_kernel", scope: !1750, file: !1754, line: 40, type: !1837, isLocal: false, isDefinition: true)
!1837 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_kernel", file: !752, line: 158, size: 288, elements: !1838)
!1838 = !{!1839, !1950}
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "cpus", scope: !1837, file: !752, line: 159, baseType: !1840, size: 192)
!1840 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1841, size: 192, elements: !1434)
!1841 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu", file: !752, line: 100, size: 192, elements: !1842)
!1842 = !{!1843, !1844, !1845, !1943, !1944, !1945, !1946}
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !1841, file: !752, line: 102, baseType: !152, size: 32)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "irq_stack", scope: !1841, file: !752, line: 105, baseType: !193, size: 32, offset: 32)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !1841, file: !752, line: 108, baseType: !1846, size: 32, offset: 64)
!1846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1847, size: 32)
!1847 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !716, line: 245, size: 1152, elements: !1848)
!1848 = !{!1849, !1907, !1919, !1920, !1921, !1922, !1923, !1938}
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1847, file: !716, line: 247, baseType: !1850, size: 384)
!1850 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !716, line: 57, size: 384, elements: !1851)
!1851 = !{!1852, !1876, !1883, !1884, !1885, !1894, !1895, !1896}
!1852 = !DIDerivedType(tag: DW_TAG_member, scope: !1850, file: !716, line: 60, baseType: !1853, size: 64)
!1853 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1850, file: !716, line: 60, size: 64, elements: !1854)
!1854 = !{!1855, !1870}
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !1853, file: !716, line: 61, baseType: !1856, size: 64)
!1856 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !726, line: 49, baseType: !1857)
!1857 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !726, line: 37, size: 64, elements: !1858)
!1858 = !{!1859, !1865}
!1859 = !DIDerivedType(tag: DW_TAG_member, scope: !1857, file: !726, line: 38, baseType: !1860, size: 32)
!1860 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1857, file: !726, line: 38, size: 32, elements: !1861)
!1861 = !{!1862, !1864}
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1860, file: !726, line: 39, baseType: !1863, size: 32)
!1863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1857, size: 32)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1860, file: !726, line: 40, baseType: !1863, size: 32)
!1865 = !DIDerivedType(tag: DW_TAG_member, scope: !1857, file: !726, line: 42, baseType: !1866, size: 32, offset: 32)
!1866 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1857, file: !726, line: 42, size: 32, elements: !1867)
!1867 = !{!1868, !1869}
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1866, file: !726, line: 43, baseType: !1863, size: 32)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1866, file: !726, line: 44, baseType: !1863, size: 32)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !1853, file: !716, line: 62, baseType: !1871, size: 64)
!1871 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !742, line: 49, size: 64, elements: !1872)
!1872 = !{!1873}
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1871, file: !742, line: 50, baseType: !1874, size: 64)
!1874 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1875, size: 64, elements: !747)
!1875 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1871, size: 32)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !1850, file: !716, line: 68, baseType: !1877, size: 32, offset: 64)
!1877 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1878, size: 32)
!1878 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !752, line: 233, baseType: !1879)
!1879 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !752, line: 231, size: 64, elements: !1880)
!1880 = !{!1881}
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !1879, file: !752, line: 232, baseType: !1882, size: 64)
!1882 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !726, line: 48, baseType: !1857)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !1850, file: !716, line: 71, baseType: !195, size: 8, offset: 96)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !1850, file: !716, line: 74, baseType: !195, size: 8, offset: 104)
!1885 = !DIDerivedType(tag: DW_TAG_member, scope: !1850, file: !716, line: 90, baseType: !1886, size: 16, offset: 112)
!1886 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1850, file: !716, line: 90, size: 16, elements: !1887)
!1887 = !{!1888, !1893}
!1888 = !DIDerivedType(tag: DW_TAG_member, scope: !1886, file: !716, line: 91, baseType: !1889, size: 16)
!1889 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1886, file: !716, line: 91, size: 16, elements: !1890)
!1890 = !{!1891, !1892}
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1889, file: !716, line: 96, baseType: !766, size: 8)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !1889, file: !716, line: 97, baseType: !195, size: 8, offset: 8)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !1886, file: !716, line: 100, baseType: !197, size: 16)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !1850, file: !716, line: 107, baseType: !152, size: 32, offset: 128)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !1850, file: !716, line: 127, baseType: !106, size: 32, offset: 160)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1850, file: !716, line: 131, baseType: !1897, size: 192, offset: 192)
!1897 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !752, line: 244, size: 192, elements: !1898)
!1898 = !{!1899, !1900, !1906}
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1897, file: !752, line: 245, baseType: !1856, size: 64)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1897, file: !752, line: 246, baseType: !1901, size: 32, offset: 64)
!1901 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !752, line: 242, baseType: !1902)
!1902 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1903, size: 32)
!1903 = !DISubroutineType(types: !1904)
!1904 = !{null, !1905}
!1905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1897, size: 32)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !1897, file: !752, line: 249, baseType: !694, size: 64, offset: 128)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !1847, file: !716, line: 250, baseType: !1908, size: 288, offset: 384)
!1908 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !785, line: 25, size: 288, elements: !1909)
!1909 = !{!1910, !1911, !1912, !1913, !1914, !1915, !1916, !1917, !1918}
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !1908, file: !785, line: 26, baseType: !152, size: 32)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !1908, file: !785, line: 27, baseType: !152, size: 32, offset: 32)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !1908, file: !785, line: 28, baseType: !152, size: 32, offset: 64)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !1908, file: !785, line: 29, baseType: !152, size: 32, offset: 96)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !1908, file: !785, line: 30, baseType: !152, size: 32, offset: 128)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !1908, file: !785, line: 31, baseType: !152, size: 32, offset: 160)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !1908, file: !785, line: 32, baseType: !152, size: 32, offset: 192)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !1908, file: !785, line: 33, baseType: !152, size: 32, offset: 224)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !1908, file: !785, line: 34, baseType: !152, size: 32, offset: 256)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !1847, file: !716, line: 253, baseType: !106, size: 32, offset: 672)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !1847, file: !716, line: 256, baseType: !1878, size: 64, offset: 704)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1847, file: !716, line: 279, baseType: !799, size: 256, offset: 768)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !1847, file: !716, line: 294, baseType: !107, size: 32, offset: 1024)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !1847, file: !716, line: 325, baseType: !1924, size: 32, offset: 1056)
!1924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1925, size: 32)
!1925 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !804, line: 5073, size: 192, elements: !1926)
!1926 = !{!1927, !1933, !1934}
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !1925, file: !804, line: 5074, baseType: !1928, size: 96)
!1928 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !808, line: 56, size: 96, elements: !1929)
!1929 = !{!1930, !1931, !1932}
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !1928, file: !808, line: 57, baseType: !811, size: 32)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !1928, file: !808, line: 58, baseType: !106, size: 32, offset: 32)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !1928, file: !808, line: 59, baseType: !185, size: 32, offset: 64)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !1925, file: !804, line: 5075, baseType: !1878, size: 64, offset: 96)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1925, file: !804, line: 5076, baseType: !1935, size: 32, offset: 160)
!1935 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !818, line: 43, size: 32, elements: !1936)
!1936 = !{!1937}
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !1935, file: !818, line: 52, baseType: !22, size: 32)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1847, file: !716, line: 343, baseType: !1939, size: 64, offset: 1088)
!1939 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !785, line: 60, size: 64, elements: !1940)
!1940 = !{!1941, !1942}
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !1939, file: !785, line: 63, baseType: !152, size: 32)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !1939, file: !785, line: 66, baseType: !152, size: 32, offset: 32)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "idle_thread", scope: !1841, file: !752, line: 111, baseType: !1846, size: 32, offset: 96)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "slice_ticks", scope: !1841, file: !752, line: 124, baseType: !107, size: 32, offset: 128)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1841, file: !752, line: 127, baseType: !195, size: 8, offset: 160)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1841, file: !752, line: 153, baseType: !1947, offset: 168)
!1947 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu_arch", file: !1948, line: 33, elements: !1949)
!1948 = !DIFile(filename: "zephyr/include/zephyr/arch/structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1949 = !{}
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "ready_q", scope: !1837, file: !752, line: 170, baseType: !1951, size: 96, offset: 192)
!1951 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !752, line: 83, size: 96, elements: !1952)
!1952 = !{!1953, !1954}
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !1951, file: !752, line: 86, baseType: !1846, size: 32)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !1951, file: !752, line: 90, baseType: !1882, size: 64, offset: 32)
!1955 = !DIGlobalVariableExpression(var: !1956, expr: !DIExpression())
!1956 = distinct !DIGlobalVariable(name: "z_main_stack", scope: !1750, file: !1754, line: 43, type: !1957, isLocal: false, isDefinition: true, align: 64)
!1957 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1958, size: 8192, elements: !709)
!1958 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !706, line: 47, size: 8, elements: !1959)
!1959 = !{!1960}
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1958, file: !706, line: 48, baseType: !120, size: 8)
!1961 = !DIGlobalVariableExpression(var: !1962, expr: !DIExpression())
!1962 = distinct !DIGlobalVariable(name: "z_main_thread", scope: !1750, file: !1754, line: 44, type: !1847, isLocal: false, isDefinition: true)
!1963 = !DIGlobalVariableExpression(var: !1964, expr: !DIExpression())
!1964 = distinct !DIGlobalVariable(name: "z_idle_threads", scope: !1750, file: !1754, line: 48, type: !1965, isLocal: false, isDefinition: true)
!1965 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1847, size: 1152, elements: !1434)
!1966 = !DIGlobalVariableExpression(var: !1967, expr: !DIExpression())
!1967 = distinct !DIGlobalVariable(name: "z_interrupt_stacks", scope: !1750, file: !1754, line: 86, type: !1968, isLocal: false, isDefinition: true, align: 64)
!1968 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1958, size: 16384, elements: !1969)
!1969 = !{!1435, !1970}
!1970 = !DISubrange(count: 2048)
!1971 = !DIGlobalVariableExpression(var: !1972, expr: !DIExpression())
!1972 = distinct !DIGlobalVariable(name: "z_sys_post_kernel", scope: !1750, file: !1754, line: 217, type: !145, isLocal: false, isDefinition: true)
!1973 = !DIGlobalVariableExpression(var: !1974, expr: !DIExpression())
!1974 = distinct !DIGlobalVariable(name: "z_idle_stacks", scope: !1750, file: !1754, line: 50, type: !1975, isLocal: true, isDefinition: true, align: 64)
!1975 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1958, size: 2560, elements: !1976)
!1976 = !{!1435, !1977}
!1977 = !DISubrange(count: 320)
!1978 = !DIGlobalVariableExpression(var: !1979, expr: !DIExpression())
!1979 = distinct !DIGlobalVariable(name: "levels", scope: !1980, file: !1754, line: 232, type: !2000, isLocal: true, isDefinition: true)
!1980 = distinct !DISubprogram(name: "z_sys_init_run_level", scope: !1754, file: !1754, line: 230, type: !1981, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1750, retainedNodes: !1983)
!1981 = !DISubroutineType(types: !1982)
!1982 = !{null, !1753}
!1983 = !{!1984, !1985, !1995, !1999}
!1984 = !DILocalVariable(name: "level", arg: 1, scope: !1980, file: !1754, line: 230, type: !1753)
!1985 = !DILocalVariable(name: "entry", scope: !1980, file: !1754, line: 244, type: !1986)
!1986 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1987, size: 32)
!1987 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1988)
!1988 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !635, line: 51, size: 64, elements: !1989)
!1989 = !{!1990, !1994}
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1988, file: !635, line: 60, baseType: !1991, size: 32)
!1991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1992, size: 32)
!1992 = !DISubroutineType(types: !1993)
!1993 = !{!107, !1772}
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1988, file: !635, line: 65, baseType: !1772, size: 32, offset: 32)
!1995 = !DILocalVariable(name: "dev", scope: !1996, file: !1754, line: 247, type: !1772)
!1996 = distinct !DILexicalBlock(scope: !1997, file: !1754, line: 246, column: 64)
!1997 = distinct !DILexicalBlock(scope: !1998, file: !1754, line: 246, column: 2)
!1998 = distinct !DILexicalBlock(scope: !1980, file: !1754, line: 246, column: 2)
!1999 = !DILocalVariable(name: "rc", scope: !1996, file: !1754, line: 248, type: !107)
!2000 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1986, size: 192, elements: !1408)
!2001 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2002)
!2002 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !203, line: 16, size: 64, elements: !2003)
!2003 = !{!2004, !2005}
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2002, file: !203, line: 17, baseType: !118, size: 32)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !2002, file: !203, line: 18, baseType: !195, size: 8, offset: 32)
!2006 = !DIGlobalVariableExpression(var: !2007, expr: !DIExpression())
!2007 = distinct !DIGlobalVariable(name: "states_str", scope: !2008, file: !2009, line: 276, type: !2128, isLocal: true, isDefinition: true)
!2008 = distinct !DISubprogram(name: "k_thread_state_str", scope: !2009, file: !2009, line: 271, type: !2010, scopeLine: 272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2110, retainedNodes: !2119)
!2009 = !DIFile(filename: "zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2010 = !DISubroutineType(types: !2011)
!2011 = !{!118, !2012, !193, !185}
!2012 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !716, line: 347, baseType: !2013)
!2013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2014, size: 32)
!2014 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !716, line: 245, size: 1152, elements: !2015)
!2015 = !{!2016, !2074, !2086, !2087, !2088, !2089, !2090, !2105}
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2014, file: !716, line: 247, baseType: !2017, size: 384)
!2017 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !716, line: 57, size: 384, elements: !2018)
!2018 = !{!2019, !2043, !2050, !2051, !2052, !2061, !2062, !2063}
!2019 = !DIDerivedType(tag: DW_TAG_member, scope: !2017, file: !716, line: 60, baseType: !2020, size: 64)
!2020 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2017, file: !716, line: 60, size: 64, elements: !2021)
!2021 = !{!2022, !2037}
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2020, file: !716, line: 61, baseType: !2023, size: 64)
!2023 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !726, line: 49, baseType: !2024)
!2024 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !726, line: 37, size: 64, elements: !2025)
!2025 = !{!2026, !2032}
!2026 = !DIDerivedType(tag: DW_TAG_member, scope: !2024, file: !726, line: 38, baseType: !2027, size: 32)
!2027 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2024, file: !726, line: 38, size: 32, elements: !2028)
!2028 = !{!2029, !2031}
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2027, file: !726, line: 39, baseType: !2030, size: 32)
!2030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2024, size: 32)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2027, file: !726, line: 40, baseType: !2030, size: 32)
!2032 = !DIDerivedType(tag: DW_TAG_member, scope: !2024, file: !726, line: 42, baseType: !2033, size: 32, offset: 32)
!2033 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2024, file: !726, line: 42, size: 32, elements: !2034)
!2034 = !{!2035, !2036}
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2033, file: !726, line: 43, baseType: !2030, size: 32)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2033, file: !726, line: 44, baseType: !2030, size: 32)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2020, file: !716, line: 62, baseType: !2038, size: 64)
!2038 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !742, line: 49, size: 64, elements: !2039)
!2039 = !{!2040}
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2038, file: !742, line: 50, baseType: !2041, size: 64)
!2041 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2042, size: 64, elements: !747)
!2042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2038, size: 32)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2017, file: !716, line: 68, baseType: !2044, size: 32, offset: 64)
!2044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2045, size: 32)
!2045 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !752, line: 233, baseType: !2046)
!2046 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !752, line: 231, size: 64, elements: !2047)
!2047 = !{!2048}
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2046, file: !752, line: 232, baseType: !2049, size: 64)
!2049 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !726, line: 48, baseType: !2024)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2017, file: !716, line: 71, baseType: !195, size: 8, offset: 96)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2017, file: !716, line: 74, baseType: !195, size: 8, offset: 104)
!2052 = !DIDerivedType(tag: DW_TAG_member, scope: !2017, file: !716, line: 90, baseType: !2053, size: 16, offset: 112)
!2053 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2017, file: !716, line: 90, size: 16, elements: !2054)
!2054 = !{!2055, !2060}
!2055 = !DIDerivedType(tag: DW_TAG_member, scope: !2053, file: !716, line: 91, baseType: !2056, size: 16)
!2056 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2053, file: !716, line: 91, size: 16, elements: !2057)
!2057 = !{!2058, !2059}
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2056, file: !716, line: 96, baseType: !766, size: 8)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2056, file: !716, line: 97, baseType: !195, size: 8, offset: 8)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2053, file: !716, line: 100, baseType: !197, size: 16)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2017, file: !716, line: 107, baseType: !152, size: 32, offset: 128)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2017, file: !716, line: 127, baseType: !106, size: 32, offset: 160)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2017, file: !716, line: 131, baseType: !2064, size: 192, offset: 192)
!2064 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !752, line: 244, size: 192, elements: !2065)
!2065 = !{!2066, !2067, !2073}
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2064, file: !752, line: 245, baseType: !2023, size: 64)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2064, file: !752, line: 246, baseType: !2068, size: 32, offset: 64)
!2068 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !752, line: 242, baseType: !2069)
!2069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2070, size: 32)
!2070 = !DISubroutineType(types: !2071)
!2071 = !{null, !2072}
!2072 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2064, size: 32)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2064, file: !752, line: 249, baseType: !694, size: 64, offset: 128)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2014, file: !716, line: 250, baseType: !2075, size: 288, offset: 384)
!2075 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !785, line: 25, size: 288, elements: !2076)
!2076 = !{!2077, !2078, !2079, !2080, !2081, !2082, !2083, !2084, !2085}
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2075, file: !785, line: 26, baseType: !152, size: 32)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2075, file: !785, line: 27, baseType: !152, size: 32, offset: 32)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2075, file: !785, line: 28, baseType: !152, size: 32, offset: 64)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2075, file: !785, line: 29, baseType: !152, size: 32, offset: 96)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2075, file: !785, line: 30, baseType: !152, size: 32, offset: 128)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2075, file: !785, line: 31, baseType: !152, size: 32, offset: 160)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2075, file: !785, line: 32, baseType: !152, size: 32, offset: 192)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2075, file: !785, line: 33, baseType: !152, size: 32, offset: 224)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2075, file: !785, line: 34, baseType: !152, size: 32, offset: 256)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2014, file: !716, line: 253, baseType: !106, size: 32, offset: 672)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2014, file: !716, line: 256, baseType: !2045, size: 64, offset: 704)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2014, file: !716, line: 279, baseType: !799, size: 256, offset: 768)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2014, file: !716, line: 294, baseType: !107, size: 32, offset: 1024)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2014, file: !716, line: 325, baseType: !2091, size: 32, offset: 1056)
!2091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2092, size: 32)
!2092 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !804, line: 5073, size: 192, elements: !2093)
!2093 = !{!2094, !2100, !2101}
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2092, file: !804, line: 5074, baseType: !2095, size: 96)
!2095 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !808, line: 56, size: 96, elements: !2096)
!2096 = !{!2097, !2098, !2099}
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2095, file: !808, line: 57, baseType: !811, size: 32)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2095, file: !808, line: 58, baseType: !106, size: 32, offset: 32)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2095, file: !808, line: 59, baseType: !185, size: 32, offset: 64)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2092, file: !804, line: 5075, baseType: !2045, size: 64, offset: 96)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2092, file: !804, line: 5076, baseType: !2102, size: 32, offset: 160)
!2102 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !818, line: 43, size: 32, elements: !2103)
!2103 = !{!2104}
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2102, file: !818, line: 52, baseType: !22, size: 32)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2014, file: !716, line: 343, baseType: !2106, size: 64, offset: 1088)
!2106 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !785, line: 60, size: 64, elements: !2107)
!2107 = !{!2108, !2109}
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2106, file: !785, line: 63, baseType: !152, size: 32)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2106, file: !785, line: 66, baseType: !152, size: 32, offset: 32)
!2110 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2111, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2112, globals: !2114, splitDebugInlining: false, nameTableKind: None)
!2111 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/integration")
!2112 = !{!106, !118, !692, !195, !22, !107, !2113, !24, !185, !193, !152, !695}
!2113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2023, size: 32)
!2114 = !{!2006, !2115}
!2115 = !DIGlobalVariableExpression(var: !2116, expr: !DIExpression())
!2116 = distinct !DIGlobalVariable(name: "states_sz", scope: !2008, file: !2009, line: 279, type: !2117, isLocal: true, isDefinition: true)
!2117 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2118, size: 256, elements: !1611)
!2118 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !185)
!2119 = !{!2120, !2121, !2122, !2123, !2124, !2125, !2126}
!2120 = !DILocalVariable(name: "thread_id", arg: 1, scope: !2008, file: !2009, line: 271, type: !2012)
!2121 = !DILocalVariable(name: "buf", arg: 2, scope: !2008, file: !2009, line: 271, type: !193)
!2122 = !DILocalVariable(name: "buf_size", arg: 3, scope: !2008, file: !2009, line: 271, type: !185)
!2123 = !DILocalVariable(name: "off", scope: !2008, file: !2009, line: 273, type: !185)
!2124 = !DILocalVariable(name: "bit", scope: !2008, file: !2009, line: 274, type: !195)
!2125 = !DILocalVariable(name: "thread_state", scope: !2008, file: !2009, line: 275, type: !195)
!2126 = !DILocalVariable(name: "index", scope: !2127, file: !2009, line: 293, type: !195)
!2127 = distinct !DILexicalBlock(scope: !2008, file: !2009, line: 293, column: 2)
!2128 = !DICompositeType(tag: DW_TAG_array_type, baseType: !118, size: 256, elements: !1611)
!2129 = !DIGlobalVariableExpression(var: !2130, expr: !DIExpression())
!2130 = distinct !DIGlobalVariable(name: "sched_spinlock", scope: !2131, file: !2236, line: 56, type: !2223, isLocal: false, isDefinition: true)
!2131 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2132, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2133, globals: !2233, splitDebugInlining: false, nameTableKind: None)
!2132 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/integration")
!2133 = !{!2134, !193, !106, !2231, !194, !692, !1149, !107, !152, !695, !2232}
!2134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2135, size: 32)
!2135 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !716, line: 245, size: 1152, elements: !2136)
!2136 = !{!2137, !2195, !2207, !2208, !2209, !2210, !2211, !2226}
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2135, file: !716, line: 247, baseType: !2138, size: 384)
!2138 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !716, line: 57, size: 384, elements: !2139)
!2139 = !{!2140, !2164, !2171, !2172, !2173, !2182, !2183, !2184}
!2140 = !DIDerivedType(tag: DW_TAG_member, scope: !2138, file: !716, line: 60, baseType: !2141, size: 64)
!2141 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2138, file: !716, line: 60, size: 64, elements: !2142)
!2142 = !{!2143, !2158}
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2141, file: !716, line: 61, baseType: !2144, size: 64)
!2144 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !726, line: 49, baseType: !2145)
!2145 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !726, line: 37, size: 64, elements: !2146)
!2146 = !{!2147, !2153}
!2147 = !DIDerivedType(tag: DW_TAG_member, scope: !2145, file: !726, line: 38, baseType: !2148, size: 32)
!2148 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2145, file: !726, line: 38, size: 32, elements: !2149)
!2149 = !{!2150, !2152}
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2148, file: !726, line: 39, baseType: !2151, size: 32)
!2151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2145, size: 32)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2148, file: !726, line: 40, baseType: !2151, size: 32)
!2153 = !DIDerivedType(tag: DW_TAG_member, scope: !2145, file: !726, line: 42, baseType: !2154, size: 32, offset: 32)
!2154 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2145, file: !726, line: 42, size: 32, elements: !2155)
!2155 = !{!2156, !2157}
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2154, file: !726, line: 43, baseType: !2151, size: 32)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2154, file: !726, line: 44, baseType: !2151, size: 32)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2141, file: !716, line: 62, baseType: !2159, size: 64)
!2159 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !742, line: 49, size: 64, elements: !2160)
!2160 = !{!2161}
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2159, file: !742, line: 50, baseType: !2162, size: 64)
!2162 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2163, size: 64, elements: !747)
!2163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2159, size: 32)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2138, file: !716, line: 68, baseType: !2165, size: 32, offset: 64)
!2165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2166, size: 32)
!2166 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !752, line: 233, baseType: !2167)
!2167 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !752, line: 231, size: 64, elements: !2168)
!2168 = !{!2169}
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2167, file: !752, line: 232, baseType: !2170, size: 64)
!2170 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !726, line: 48, baseType: !2145)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2138, file: !716, line: 71, baseType: !195, size: 8, offset: 96)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2138, file: !716, line: 74, baseType: !195, size: 8, offset: 104)
!2173 = !DIDerivedType(tag: DW_TAG_member, scope: !2138, file: !716, line: 90, baseType: !2174, size: 16, offset: 112)
!2174 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2138, file: !716, line: 90, size: 16, elements: !2175)
!2175 = !{!2176, !2181}
!2176 = !DIDerivedType(tag: DW_TAG_member, scope: !2174, file: !716, line: 91, baseType: !2177, size: 16)
!2177 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2174, file: !716, line: 91, size: 16, elements: !2178)
!2178 = !{!2179, !2180}
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2177, file: !716, line: 96, baseType: !766, size: 8)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2177, file: !716, line: 97, baseType: !195, size: 8, offset: 8)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2174, file: !716, line: 100, baseType: !197, size: 16)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2138, file: !716, line: 107, baseType: !152, size: 32, offset: 128)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2138, file: !716, line: 127, baseType: !106, size: 32, offset: 160)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2138, file: !716, line: 131, baseType: !2185, size: 192, offset: 192)
!2185 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !752, line: 244, size: 192, elements: !2186)
!2186 = !{!2187, !2188, !2194}
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2185, file: !752, line: 245, baseType: !2144, size: 64)
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2185, file: !752, line: 246, baseType: !2189, size: 32, offset: 64)
!2189 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !752, line: 242, baseType: !2190)
!2190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2191, size: 32)
!2191 = !DISubroutineType(types: !2192)
!2192 = !{null, !2193}
!2193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2185, size: 32)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2185, file: !752, line: 249, baseType: !694, size: 64, offset: 128)
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2135, file: !716, line: 250, baseType: !2196, size: 288, offset: 384)
!2196 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !785, line: 25, size: 288, elements: !2197)
!2197 = !{!2198, !2199, !2200, !2201, !2202, !2203, !2204, !2205, !2206}
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2196, file: !785, line: 26, baseType: !152, size: 32)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2196, file: !785, line: 27, baseType: !152, size: 32, offset: 32)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2196, file: !785, line: 28, baseType: !152, size: 32, offset: 64)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2196, file: !785, line: 29, baseType: !152, size: 32, offset: 96)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2196, file: !785, line: 30, baseType: !152, size: 32, offset: 128)
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2196, file: !785, line: 31, baseType: !152, size: 32, offset: 160)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2196, file: !785, line: 32, baseType: !152, size: 32, offset: 192)
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2196, file: !785, line: 33, baseType: !152, size: 32, offset: 224)
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2196, file: !785, line: 34, baseType: !152, size: 32, offset: 256)
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2135, file: !716, line: 253, baseType: !106, size: 32, offset: 672)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2135, file: !716, line: 256, baseType: !2166, size: 64, offset: 704)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2135, file: !716, line: 279, baseType: !799, size: 256, offset: 768)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2135, file: !716, line: 294, baseType: !107, size: 32, offset: 1024)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2135, file: !716, line: 325, baseType: !2212, size: 32, offset: 1056)
!2212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2213, size: 32)
!2213 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !804, line: 5073, size: 192, elements: !2214)
!2214 = !{!2215, !2221, !2222}
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2213, file: !804, line: 5074, baseType: !2216, size: 96)
!2216 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !808, line: 56, size: 96, elements: !2217)
!2217 = !{!2218, !2219, !2220}
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2216, file: !808, line: 57, baseType: !811, size: 32)
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2216, file: !808, line: 58, baseType: !106, size: 32, offset: 32)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2216, file: !808, line: 59, baseType: !185, size: 32, offset: 64)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2213, file: !804, line: 5075, baseType: !2166, size: 64, offset: 96)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2213, file: !804, line: 5076, baseType: !2223, size: 32, offset: 160)
!2223 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !818, line: 43, size: 32, elements: !2224)
!2224 = !{!2225}
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2223, file: !818, line: 52, baseType: !22, size: 32)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2135, file: !716, line: 343, baseType: !2227, size: 64, offset: 1088)
!2227 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !785, line: 60, size: 64, elements: !2228)
!2228 = !{!2229, !2230}
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2227, file: !785, line: 63, baseType: !152, size: 32)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2227, file: !785, line: 66, baseType: !152, size: 32, offset: 32)
!2231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2163, size: 32)
!2232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2144, size: 32)
!2233 = !{!2129, !2234, !2237, !2239}
!2234 = !DIGlobalVariableExpression(var: !2235, expr: !DIExpression())
!2235 = distinct !DIGlobalVariable(name: "slice_ticks", scope: !2131, file: !2236, line: 404, type: !107, isLocal: true, isDefinition: true)
!2236 = !DIFile(filename: "zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2237 = !DIGlobalVariableExpression(var: !2238, expr: !DIExpression())
!2238 = distinct !DIGlobalVariable(name: "slice_max_prio", scope: !2131, file: !2236, line: 405, type: !107, isLocal: true, isDefinition: true)
!2239 = !DIGlobalVariableExpression(var: !2240, expr: !DIExpression())
!2240 = distinct !DIGlobalVariable(name: "pending_current", scope: !2131, file: !2236, line: 425, type: !2134, isLocal: true, isDefinition: true)
!2241 = !DIGlobalVariableExpression(var: !2242, expr: !DIExpression())
!2242 = distinct !DIGlobalVariable(name: "timeout_lock", scope: !2243, file: !2273, line: 19, type: !2279, isLocal: true, isDefinition: true)
!2243 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2244, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2245, globals: !2270, splitDebugInlining: false, nameTableKind: None)
!2244 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/integration")
!2245 = !{!692, !106, !1149, !152, !695, !107, !2246, !193, !694}
!2246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2247, size: 32)
!2247 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !752, line: 244, size: 192, elements: !2248)
!2248 = !{!2249, !2264, !2269}
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2247, file: !752, line: 245, baseType: !2250, size: 64)
!2250 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !726, line: 49, baseType: !2251)
!2251 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !726, line: 37, size: 64, elements: !2252)
!2252 = !{!2253, !2259}
!2253 = !DIDerivedType(tag: DW_TAG_member, scope: !2251, file: !726, line: 38, baseType: !2254, size: 32)
!2254 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2251, file: !726, line: 38, size: 32, elements: !2255)
!2255 = !{!2256, !2258}
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2254, file: !726, line: 39, baseType: !2257, size: 32)
!2257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2251, size: 32)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2254, file: !726, line: 40, baseType: !2257, size: 32)
!2259 = !DIDerivedType(tag: DW_TAG_member, scope: !2251, file: !726, line: 42, baseType: !2260, size: 32, offset: 32)
!2260 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2251, file: !726, line: 42, size: 32, elements: !2261)
!2261 = !{!2262, !2263}
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2260, file: !726, line: 43, baseType: !2257, size: 32)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2260, file: !726, line: 44, baseType: !2257, size: 32)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2247, file: !752, line: 246, baseType: !2265, size: 32, offset: 64)
!2265 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !752, line: 242, baseType: !2266)
!2266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2267, size: 32)
!2267 = !DISubroutineType(types: !2268)
!2268 = !{null, !2246}
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2247, file: !752, line: 249, baseType: !694, size: 64, offset: 128)
!2270 = !{!2271, !2241, !2274, !2276}
!2271 = !DIGlobalVariableExpression(var: !2272, expr: !DIExpression())
!2272 = distinct !DIGlobalVariable(name: "curr_tick", scope: !2243, file: !2273, line: 15, type: !695, isLocal: true, isDefinition: true)
!2273 = !DIFile(filename: "zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2274 = !DIGlobalVariableExpression(var: !2275, expr: !DIExpression())
!2275 = distinct !DIGlobalVariable(name: "announce_remaining", scope: !2243, file: !2273, line: 25, type: !107, isLocal: true, isDefinition: true)
!2276 = !DIGlobalVariableExpression(var: !2277, expr: !DIExpression())
!2277 = distinct !DIGlobalVariable(name: "timeout_list", scope: !2243, file: !2273, line: 17, type: !2278, isLocal: true, isDefinition: true)
!2278 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !726, line: 48, baseType: !2251)
!2279 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !818, line: 43, size: 32, elements: !2280)
!2280 = !{!2281}
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2279, file: !818, line: 52, baseType: !22, size: 32)
!2282 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2283, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !105, splitDebugInlining: false, nameTableKind: None)
!2283 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/integration")
!2284 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2285, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !105, splitDebugInlining: false, nameTableKind: None)
!2285 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/integration")
!2286 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2287, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2288, retainedTypes: !2308, splitDebugInlining: false, nameTableKind: None)
!2287 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/integration")
!2288 = !{!2289, !2297}
!2289 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "specifier_cat_enum", file: !2290, line: 69, baseType: !32, size: 32, elements: !2291)
!2290 = !DIFile(filename: "zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2291 = !{!2292, !2293, !2294, !2295, !2296}
!2292 = !DIEnumerator(name: "SPECIFIER_INVALID", value: 0)
!2293 = !DIEnumerator(name: "SPECIFIER_SINT", value: 1)
!2294 = !DIEnumerator(name: "SPECIFIER_UINT", value: 2)
!2295 = !DIEnumerator(name: "SPECIFIER_PTR", value: 3)
!2296 = !DIEnumerator(name: "SPECIFIER_FP", value: 4)
!2297 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "length_mod_enum", file: !2290, line: 56, baseType: !32, size: 32, elements: !2298)
!2298 = !{!2299, !2300, !2301, !2302, !2303, !2304, !2305, !2306, !2307}
!2299 = !DIEnumerator(name: "LENGTH_NONE", value: 0)
!2300 = !DIEnumerator(name: "LENGTH_HH", value: 1)
!2301 = !DIEnumerator(name: "LENGTH_H", value: 2)
!2302 = !DIEnumerator(name: "LENGTH_L", value: 3)
!2303 = !DIEnumerator(name: "LENGTH_LL", value: 4)
!2304 = !DIEnumerator(name: "LENGTH_J", value: 5)
!2305 = !DIEnumerator(name: "LENGTH_Z", value: 6)
!2306 = !DIEnumerator(name: "LENGTH_T", value: 7)
!2307 = !DIEnumerator(name: "LENGTH_UPPER_L", value: 8)
!2308 = !{!107, !2289, !2297, !2309, !767, !901, !2311, !2312, !196, !198, !118, !185, !106, !22, !32, !187, !2314, !2315, !189, !188, !191, !190, !2310, !2316, !2317, !2318, !2319}
!2309 = !DIDerivedType(tag: DW_TAG_typedef, name: "sint_value_type", file: !2290, line: 31, baseType: !2310)
!2310 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !23, line: 76, baseType: !191)
!2311 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !186, line: 329, baseType: !32)
!2312 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_value_type", file: !2290, line: 32, baseType: !2313)
!2313 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !23, line: 92, baseType: !696)
!2314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !767, size: 32)
!2315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !901, size: 32)
!2316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2310, size: 32)
!2317 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !185, size: 32)
!2318 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !186, line: 145, baseType: !107)
!2319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2318, size: 32)
!2320 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2321, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !105, splitDebugInlining: false, nameTableKind: None)
!2321 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/assert.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/integration")
!2322 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2323, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2323 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/integration/zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/integration")
!2324 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2325, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2326, splitDebugInlining: false, nameTableKind: None)
!2325 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/logging/log_minimal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/integration")
!2326 = !{!118, !196, !107, !32}
!2327 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2328, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2329, retainedTypes: !105, splitDebugInlining: false, nameTableKind: None)
!2328 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/integration")
!2329 = !{!2330, !30}
!2330 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_fatal_error_reason", file: !2331, line: 27, baseType: !32, size: 32, elements: !2332)
!2331 = !DIFile(filename: "zephyr/include/zephyr/fatal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2332 = !{!2333, !2334, !2335, !2336, !2337}
!2333 = !DIEnumerator(name: "K_ERR_CPU_EXCEPTION", value: 0)
!2334 = !DIEnumerator(name: "K_ERR_SPURIOUS_IRQ", value: 1)
!2335 = !DIEnumerator(name: "K_ERR_STACK_CHK_FAIL", value: 2)
!2336 = !DIEnumerator(name: "K_ERR_KERNEL_OOPS", value: 3)
!2337 = !DIEnumerator(name: "K_ERR_KERNEL_PANIC", value: 4)
!2338 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2339, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2340, retainedTypes: !2341, splitDebugInlining: false, nameTableKind: None)
!2339 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/integration")
!2340 = !{!1455, !2330, !30}
!2341 = !{!2342, !2343, !106, !107, !1149, !152, !195, !2360}
!2342 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !506, line: 249, baseType: !1455)
!2343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2344, size: 32)
!2344 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !1598, line: 426, baseType: !2345)
!2345 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1598, line: 411, size: 28704, elements: !2346)
!2346 = !{!2347, !2348, !2349, !2350, !2351, !2352, !2353, !2354, !2355, !2356, !2357, !2358, !2359}
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2345, file: !1598, line: 413, baseType: !1610, size: 256)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2345, file: !1598, line: 414, baseType: !1614, size: 768, offset: 256)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2345, file: !1598, line: 415, baseType: !1610, size: 256, offset: 1024)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2345, file: !1598, line: 416, baseType: !1614, size: 768, offset: 1280)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2345, file: !1598, line: 417, baseType: !1610, size: 256, offset: 2048)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2345, file: !1598, line: 418, baseType: !1614, size: 768, offset: 2304)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2345, file: !1598, line: 419, baseType: !1610, size: 256, offset: 3072)
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2345, file: !1598, line: 420, baseType: !1614, size: 768, offset: 3328)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2345, file: !1598, line: 421, baseType: !1610, size: 256, offset: 4096)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2345, file: !1598, line: 422, baseType: !1625, size: 1792, offset: 4352)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2345, file: !1598, line: 423, baseType: !1629, size: 1920, offset: 6144)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2345, file: !1598, line: 424, baseType: !1634, size: 20608, offset: 8064)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2345, file: !1598, line: 425, baseType: !510, size: 32, offset: 28672)
!2360 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2361, size: 32)
!2361 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1598, line: 468, baseType: !2362)
!2362 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1598, line: 445, size: 1120, elements: !2363)
!2363 = !{!2364, !2365, !2366, !2367, !2368, !2369, !2370, !2371, !2372, !2373, !2374, !2375, !2376, !2377, !2378, !2379, !2380, !2381, !2382, !2383, !2384}
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2362, file: !1598, line: 447, baseType: !581, size: 32)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2362, file: !1598, line: 448, baseType: !510, size: 32, offset: 32)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2362, file: !1598, line: 449, baseType: !510, size: 32, offset: 64)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2362, file: !1598, line: 450, baseType: !510, size: 32, offset: 96)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2362, file: !1598, line: 451, baseType: !510, size: 32, offset: 128)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2362, file: !1598, line: 452, baseType: !510, size: 32, offset: 160)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2362, file: !1598, line: 453, baseType: !1649, size: 96, offset: 192)
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2362, file: !1598, line: 454, baseType: !510, size: 32, offset: 288)
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2362, file: !1598, line: 455, baseType: !510, size: 32, offset: 320)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2362, file: !1598, line: 456, baseType: !510, size: 32, offset: 352)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2362, file: !1598, line: 457, baseType: !510, size: 32, offset: 384)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2362, file: !1598, line: 458, baseType: !510, size: 32, offset: 416)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2362, file: !1598, line: 459, baseType: !510, size: 32, offset: 448)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2362, file: !1598, line: 460, baseType: !510, size: 32, offset: 480)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2362, file: !1598, line: 461, baseType: !1660, size: 64, offset: 512)
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2362, file: !1598, line: 462, baseType: !581, size: 32, offset: 576)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2362, file: !1598, line: 463, baseType: !581, size: 32, offset: 608)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2362, file: !1598, line: 464, baseType: !1664, size: 128, offset: 640)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2362, file: !1598, line: 465, baseType: !1668, size: 160, offset: 768)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2362, file: !1598, line: 466, baseType: !1672, size: 160, offset: 928)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2362, file: !1598, line: 467, baseType: !510, size: 32, offset: 1088)
!2385 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2386, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !105, splitDebugInlining: false, nameTableKind: None)
!2386 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/integration")
!2387 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2388, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2389, splitDebugInlining: false, nameTableKind: None)
!2388 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/integration")
!2389 = !{!106, !107, !22, !2390}
!2390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2391, size: 32)
!2391 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1598, line: 468, baseType: !2392)
!2392 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1598, line: 445, size: 1120, elements: !2393)
!2393 = !{!2394, !2395, !2396, !2397, !2398, !2399, !2400, !2401, !2402, !2403, !2404, !2405, !2406, !2407, !2408, !2409, !2410, !2411, !2412, !2413, !2414}
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2392, file: !1598, line: 447, baseType: !581, size: 32)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2392, file: !1598, line: 448, baseType: !510, size: 32, offset: 32)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2392, file: !1598, line: 449, baseType: !510, size: 32, offset: 64)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2392, file: !1598, line: 450, baseType: !510, size: 32, offset: 96)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2392, file: !1598, line: 451, baseType: !510, size: 32, offset: 128)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2392, file: !1598, line: 452, baseType: !510, size: 32, offset: 160)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2392, file: !1598, line: 453, baseType: !1649, size: 96, offset: 192)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2392, file: !1598, line: 454, baseType: !510, size: 32, offset: 288)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2392, file: !1598, line: 455, baseType: !510, size: 32, offset: 320)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2392, file: !1598, line: 456, baseType: !510, size: 32, offset: 352)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2392, file: !1598, line: 457, baseType: !510, size: 32, offset: 384)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2392, file: !1598, line: 458, baseType: !510, size: 32, offset: 416)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2392, file: !1598, line: 459, baseType: !510, size: 32, offset: 448)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2392, file: !1598, line: 460, baseType: !510, size: 32, offset: 480)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2392, file: !1598, line: 461, baseType: !1660, size: 64, offset: 512)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2392, file: !1598, line: 462, baseType: !581, size: 32, offset: 576)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2392, file: !1598, line: 463, baseType: !581, size: 32, offset: 608)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2392, file: !1598, line: 464, baseType: !1664, size: 128, offset: 640)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2392, file: !1598, line: 465, baseType: !1668, size: 160, offset: 768)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2392, file: !1598, line: 466, baseType: !1672, size: 160, offset: 928)
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2392, file: !1598, line: 467, baseType: !510, size: 32, offset: 1088)
!2415 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2416, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2417, splitDebugInlining: false, nameTableKind: None)
!2416 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/integration")
!2417 = !{!2418, !106, !107}
!2418 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2419, size: 32)
!2419 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1598, line: 468, baseType: !2420)
!2420 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1598, line: 445, size: 1120, elements: !2421)
!2421 = !{!2422, !2423, !2424, !2425, !2426, !2427, !2428, !2429, !2430, !2431, !2432, !2433, !2434, !2435, !2436, !2437, !2438, !2439, !2440, !2441, !2442}
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2420, file: !1598, line: 447, baseType: !581, size: 32)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2420, file: !1598, line: 448, baseType: !510, size: 32, offset: 32)
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2420, file: !1598, line: 449, baseType: !510, size: 32, offset: 64)
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2420, file: !1598, line: 450, baseType: !510, size: 32, offset: 96)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2420, file: !1598, line: 451, baseType: !510, size: 32, offset: 128)
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2420, file: !1598, line: 452, baseType: !510, size: 32, offset: 160)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2420, file: !1598, line: 453, baseType: !1649, size: 96, offset: 192)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2420, file: !1598, line: 454, baseType: !510, size: 32, offset: 288)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2420, file: !1598, line: 455, baseType: !510, size: 32, offset: 320)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2420, file: !1598, line: 456, baseType: !510, size: 32, offset: 352)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2420, file: !1598, line: 457, baseType: !510, size: 32, offset: 384)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2420, file: !1598, line: 458, baseType: !510, size: 32, offset: 416)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2420, file: !1598, line: 459, baseType: !510, size: 32, offset: 448)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2420, file: !1598, line: 460, baseType: !510, size: 32, offset: 480)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2420, file: !1598, line: 461, baseType: !1660, size: 64, offset: 512)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2420, file: !1598, line: 462, baseType: !581, size: 32, offset: 576)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2420, file: !1598, line: 463, baseType: !581, size: 32, offset: 608)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2420, file: !1598, line: 464, baseType: !1664, size: 128, offset: 640)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2420, file: !1598, line: 465, baseType: !1668, size: 160, offset: 768)
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2420, file: !1598, line: 466, baseType: !1672, size: 160, offset: 928)
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2420, file: !1598, line: 467, baseType: !510, size: 32, offset: 1088)
!2443 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2444, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2445, splitDebugInlining: false, nameTableKind: None)
!2444 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/integration")
!2445 = !{!2446, !152, !106, !107}
!2446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2447, size: 32)
!2447 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2448, line: 98, size: 256, elements: !2449)
!2448 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2449 = !{!2450, !2455, !2460, !2465, !2470, !2475, !2480, !2485}
!2450 = !DIDerivedType(tag: DW_TAG_member, scope: !2447, file: !2448, line: 99, baseType: !2451, size: 32)
!2451 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2447, file: !2448, line: 99, size: 32, elements: !2452)
!2452 = !{!2453, !2454}
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2451, file: !2448, line: 99, baseType: !152, size: 32)
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2451, file: !2448, line: 99, baseType: !152, size: 32)
!2455 = !DIDerivedType(tag: DW_TAG_member, scope: !2447, file: !2448, line: 100, baseType: !2456, size: 32, offset: 32)
!2456 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2447, file: !2448, line: 100, size: 32, elements: !2457)
!2457 = !{!2458, !2459}
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2456, file: !2448, line: 100, baseType: !152, size: 32)
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2456, file: !2448, line: 100, baseType: !152, size: 32)
!2460 = !DIDerivedType(tag: DW_TAG_member, scope: !2447, file: !2448, line: 101, baseType: !2461, size: 32, offset: 64)
!2461 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2447, file: !2448, line: 101, size: 32, elements: !2462)
!2462 = !{!2463, !2464}
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2461, file: !2448, line: 101, baseType: !152, size: 32)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2461, file: !2448, line: 101, baseType: !152, size: 32)
!2465 = !DIDerivedType(tag: DW_TAG_member, scope: !2447, file: !2448, line: 102, baseType: !2466, size: 32, offset: 96)
!2466 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2447, file: !2448, line: 102, size: 32, elements: !2467)
!2467 = !{!2468, !2469}
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2466, file: !2448, line: 102, baseType: !152, size: 32)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2466, file: !2448, line: 102, baseType: !152, size: 32)
!2470 = !DIDerivedType(tag: DW_TAG_member, scope: !2447, file: !2448, line: 103, baseType: !2471, size: 32, offset: 128)
!2471 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2447, file: !2448, line: 103, size: 32, elements: !2472)
!2472 = !{!2473, !2474}
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2471, file: !2448, line: 103, baseType: !152, size: 32)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2471, file: !2448, line: 103, baseType: !152, size: 32)
!2475 = !DIDerivedType(tag: DW_TAG_member, scope: !2447, file: !2448, line: 104, baseType: !2476, size: 32, offset: 160)
!2476 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2447, file: !2448, line: 104, size: 32, elements: !2477)
!2477 = !{!2478, !2479}
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2476, file: !2448, line: 104, baseType: !152, size: 32)
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2476, file: !2448, line: 104, baseType: !152, size: 32)
!2480 = !DIDerivedType(tag: DW_TAG_member, scope: !2447, file: !2448, line: 105, baseType: !2481, size: 32, offset: 192)
!2481 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2447, file: !2448, line: 105, size: 32, elements: !2482)
!2482 = !{!2483, !2484}
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2481, file: !2448, line: 105, baseType: !152, size: 32)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2481, file: !2448, line: 105, baseType: !152, size: 32)
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2447, file: !2448, line: 106, baseType: !152, size: 32, offset: 224)
!2486 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2487, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2329, retainedTypes: !2488, splitDebugInlining: false, nameTableKind: None)
!2487 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/integration")
!2488 = !{!2489, !106, !107, !2514, !2557, !152}
!2489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2490, size: 32)
!2490 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1598, line: 468, baseType: !2491)
!2491 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1598, line: 445, size: 1120, elements: !2492)
!2492 = !{!2493, !2494, !2495, !2496, !2497, !2498, !2499, !2500, !2501, !2502, !2503, !2504, !2505, !2506, !2507, !2508, !2509, !2510, !2511, !2512, !2513}
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2491, file: !1598, line: 447, baseType: !581, size: 32)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2491, file: !1598, line: 448, baseType: !510, size: 32, offset: 32)
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2491, file: !1598, line: 449, baseType: !510, size: 32, offset: 64)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2491, file: !1598, line: 450, baseType: !510, size: 32, offset: 96)
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2491, file: !1598, line: 451, baseType: !510, size: 32, offset: 128)
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2491, file: !1598, line: 452, baseType: !510, size: 32, offset: 160)
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2491, file: !1598, line: 453, baseType: !1649, size: 96, offset: 192)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2491, file: !1598, line: 454, baseType: !510, size: 32, offset: 288)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2491, file: !1598, line: 455, baseType: !510, size: 32, offset: 320)
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2491, file: !1598, line: 456, baseType: !510, size: 32, offset: 352)
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2491, file: !1598, line: 457, baseType: !510, size: 32, offset: 384)
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2491, file: !1598, line: 458, baseType: !510, size: 32, offset: 416)
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2491, file: !1598, line: 459, baseType: !510, size: 32, offset: 448)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2491, file: !1598, line: 460, baseType: !510, size: 32, offset: 480)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2491, file: !1598, line: 461, baseType: !1660, size: 64, offset: 512)
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2491, file: !1598, line: 462, baseType: !581, size: 32, offset: 576)
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2491, file: !1598, line: 463, baseType: !581, size: 32, offset: 608)
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2491, file: !1598, line: 464, baseType: !1664, size: 128, offset: 640)
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2491, file: !1598, line: 465, baseType: !1668, size: 160, offset: 768)
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2491, file: !1598, line: 466, baseType: !1672, size: 160, offset: 928)
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2491, file: !1598, line: 467, baseType: !510, size: 32, offset: 1088)
!2514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2515, size: 32)
!2515 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2448, line: 141, baseType: !2516)
!2516 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2448, line: 97, size: 256, elements: !2517)
!2517 = !{!2518}
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !2516, file: !2448, line: 107, baseType: !2519, size: 256)
!2519 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2448, line: 98, size: 256, elements: !2520)
!2520 = !{!2521, !2526, !2531, !2536, !2541, !2546, !2551, !2556}
!2521 = !DIDerivedType(tag: DW_TAG_member, scope: !2519, file: !2448, line: 99, baseType: !2522, size: 32)
!2522 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2519, file: !2448, line: 99, size: 32, elements: !2523)
!2523 = !{!2524, !2525}
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2522, file: !2448, line: 99, baseType: !152, size: 32)
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2522, file: !2448, line: 99, baseType: !152, size: 32)
!2526 = !DIDerivedType(tag: DW_TAG_member, scope: !2519, file: !2448, line: 100, baseType: !2527, size: 32, offset: 32)
!2527 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2519, file: !2448, line: 100, size: 32, elements: !2528)
!2528 = !{!2529, !2530}
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2527, file: !2448, line: 100, baseType: !152, size: 32)
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2527, file: !2448, line: 100, baseType: !152, size: 32)
!2531 = !DIDerivedType(tag: DW_TAG_member, scope: !2519, file: !2448, line: 101, baseType: !2532, size: 32, offset: 64)
!2532 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2519, file: !2448, line: 101, size: 32, elements: !2533)
!2533 = !{!2534, !2535}
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2532, file: !2448, line: 101, baseType: !152, size: 32)
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2532, file: !2448, line: 101, baseType: !152, size: 32)
!2536 = !DIDerivedType(tag: DW_TAG_member, scope: !2519, file: !2448, line: 102, baseType: !2537, size: 32, offset: 96)
!2537 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2519, file: !2448, line: 102, size: 32, elements: !2538)
!2538 = !{!2539, !2540}
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2537, file: !2448, line: 102, baseType: !152, size: 32)
!2540 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2537, file: !2448, line: 102, baseType: !152, size: 32)
!2541 = !DIDerivedType(tag: DW_TAG_member, scope: !2519, file: !2448, line: 103, baseType: !2542, size: 32, offset: 128)
!2542 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2519, file: !2448, line: 103, size: 32, elements: !2543)
!2543 = !{!2544, !2545}
!2544 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2542, file: !2448, line: 103, baseType: !152, size: 32)
!2545 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2542, file: !2448, line: 103, baseType: !152, size: 32)
!2546 = !DIDerivedType(tag: DW_TAG_member, scope: !2519, file: !2448, line: 104, baseType: !2547, size: 32, offset: 160)
!2547 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2519, file: !2448, line: 104, size: 32, elements: !2548)
!2548 = !{!2549, !2550}
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2547, file: !2448, line: 104, baseType: !152, size: 32)
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2547, file: !2448, line: 104, baseType: !152, size: 32)
!2551 = !DIDerivedType(tag: DW_TAG_member, scope: !2519, file: !2448, line: 105, baseType: !2552, size: 32, offset: 192)
!2552 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2519, file: !2448, line: 105, size: 32, elements: !2553)
!2553 = !{!2554, !2555}
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2552, file: !2448, line: 105, baseType: !152, size: 32)
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2552, file: !2448, line: 105, baseType: !152, size: 32)
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2519, file: !2448, line: 106, baseType: !152, size: 32, offset: 224)
!2557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !197, size: 32)
!2558 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2559, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1454, retainedTypes: !2560, splitDebugInlining: false, nameTableKind: None)
!2559 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/integration")
!2560 = !{!2342, !1149, !195, !152, !2561, !2578}
!2561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2562, size: 32)
!2562 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !1598, line: 426, baseType: !2563)
!2563 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1598, line: 411, size: 28704, elements: !2564)
!2564 = !{!2565, !2566, !2567, !2568, !2569, !2570, !2571, !2572, !2573, !2574, !2575, !2576, !2577}
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2563, file: !1598, line: 413, baseType: !1610, size: 256)
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2563, file: !1598, line: 414, baseType: !1614, size: 768, offset: 256)
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2563, file: !1598, line: 415, baseType: !1610, size: 256, offset: 1024)
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2563, file: !1598, line: 416, baseType: !1614, size: 768, offset: 1280)
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2563, file: !1598, line: 417, baseType: !1610, size: 256, offset: 2048)
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2563, file: !1598, line: 418, baseType: !1614, size: 768, offset: 2304)
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2563, file: !1598, line: 419, baseType: !1610, size: 256, offset: 3072)
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2563, file: !1598, line: 420, baseType: !1614, size: 768, offset: 3328)
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2563, file: !1598, line: 421, baseType: !1610, size: 256, offset: 4096)
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2563, file: !1598, line: 422, baseType: !1625, size: 1792, offset: 4352)
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2563, file: !1598, line: 423, baseType: !1629, size: 1920, offset: 6144)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2563, file: !1598, line: 424, baseType: !1634, size: 20608, offset: 8064)
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2563, file: !1598, line: 425, baseType: !510, size: 32, offset: 28672)
!2578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2579, size: 32)
!2579 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1598, line: 468, baseType: !2580)
!2580 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1598, line: 445, size: 1120, elements: !2581)
!2581 = !{!2582, !2583, !2584, !2585, !2586, !2587, !2588, !2589, !2590, !2591, !2592, !2593, !2594, !2595, !2596, !2597, !2598, !2599, !2600, !2601, !2602}
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2580, file: !1598, line: 447, baseType: !581, size: 32)
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2580, file: !1598, line: 448, baseType: !510, size: 32, offset: 32)
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2580, file: !1598, line: 449, baseType: !510, size: 32, offset: 64)
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2580, file: !1598, line: 450, baseType: !510, size: 32, offset: 96)
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2580, file: !1598, line: 451, baseType: !510, size: 32, offset: 128)
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2580, file: !1598, line: 452, baseType: !510, size: 32, offset: 160)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2580, file: !1598, line: 453, baseType: !1649, size: 96, offset: 192)
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2580, file: !1598, line: 454, baseType: !510, size: 32, offset: 288)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2580, file: !1598, line: 455, baseType: !510, size: 32, offset: 320)
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2580, file: !1598, line: 456, baseType: !510, size: 32, offset: 352)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2580, file: !1598, line: 457, baseType: !510, size: 32, offset: 384)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2580, file: !1598, line: 458, baseType: !510, size: 32, offset: 416)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2580, file: !1598, line: 459, baseType: !510, size: 32, offset: 448)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2580, file: !1598, line: 460, baseType: !510, size: 32, offset: 480)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2580, file: !1598, line: 461, baseType: !1660, size: 64, offset: 512)
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2580, file: !1598, line: 462, baseType: !581, size: 32, offset: 576)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2580, file: !1598, line: 463, baseType: !581, size: 32, offset: 608)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2580, file: !1598, line: 464, baseType: !1664, size: 128, offset: 640)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2580, file: !1598, line: 465, baseType: !1668, size: 160, offset: 768)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2580, file: !1598, line: 466, baseType: !1672, size: 160, offset: 928)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2580, file: !1598, line: 467, baseType: !510, size: 32, offset: 1088)
!2603 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2604, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2605, splitDebugInlining: false, nameTableKind: None)
!2604 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/integration")
!2605 = !{!2606, !106, !107}
!2606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2607, size: 32)
!2607 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1598, line: 468, baseType: !2608)
!2608 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1598, line: 445, size: 1120, elements: !2609)
!2609 = !{!2610, !2611, !2612, !2613, !2614, !2615, !2616, !2617, !2618, !2619, !2620, !2621, !2622, !2623, !2624, !2625, !2626, !2627, !2628, !2629, !2630}
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2608, file: !1598, line: 447, baseType: !581, size: 32)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2608, file: !1598, line: 448, baseType: !510, size: 32, offset: 32)
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2608, file: !1598, line: 449, baseType: !510, size: 32, offset: 64)
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2608, file: !1598, line: 450, baseType: !510, size: 32, offset: 96)
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2608, file: !1598, line: 451, baseType: !510, size: 32, offset: 128)
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2608, file: !1598, line: 452, baseType: !510, size: 32, offset: 160)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2608, file: !1598, line: 453, baseType: !1649, size: 96, offset: 192)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2608, file: !1598, line: 454, baseType: !510, size: 32, offset: 288)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2608, file: !1598, line: 455, baseType: !510, size: 32, offset: 320)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2608, file: !1598, line: 456, baseType: !510, size: 32, offset: 352)
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2608, file: !1598, line: 457, baseType: !510, size: 32, offset: 384)
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2608, file: !1598, line: 458, baseType: !510, size: 32, offset: 416)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2608, file: !1598, line: 459, baseType: !510, size: 32, offset: 448)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2608, file: !1598, line: 460, baseType: !510, size: 32, offset: 480)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2608, file: !1598, line: 461, baseType: !1660, size: 64, offset: 512)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2608, file: !1598, line: 462, baseType: !581, size: 32, offset: 576)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2608, file: !1598, line: 463, baseType: !581, size: 32, offset: 608)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2608, file: !1598, line: 464, baseType: !1664, size: 128, offset: 640)
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2608, file: !1598, line: 465, baseType: !1668, size: 160, offset: 768)
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2608, file: !1598, line: 466, baseType: !1672, size: 160, offset: 928)
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2608, file: !1598, line: 467, baseType: !510, size: 32, offset: 1088)
!2631 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2632, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2633, splitDebugInlining: false, nameTableKind: None)
!2632 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/integration")
!2633 = !{!120, !193, !185, !902, !2634, !196, !106}
!2634 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2635, size: 32)
!2635 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !196)
!2636 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2637, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2637 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/integration")
!2638 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2639, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2640, splitDebugInlining: false, nameTableKind: None)
!2639 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/nxp/imx/drivers/./ccm_imx7d.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/integration")
!2640 = !{!630, !152}
!2641 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2642, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2643, retainedTypes: !2653, splitDebugInlining: false, nameTableKind: None)
!2642 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/nxp/imx/drivers/./ccm_analog_imx7d.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/integration")
!2643 = !{!2644}
!2644 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_ccm_analog_pll_control", file: !2645, line: 62, baseType: !32, size: 32, elements: !2646)
!2645 = !DIFile(filename: "modules/hal/nxp/imx/drivers/./ccm_analog_imx7d.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2646 = !{!2647, !2648, !2649, !2650, !2651, !2652}
!2647 = !DIEnumerator(name: "ccmAnalogPllArmControl", value: 786528)
!2648 = !DIEnumerator(name: "ccmAnalogPllDdrControl", value: 1310832)
!2649 = !DIEnumerator(name: "ccmAnalogPll480Control", value: 786608)
!2650 = !DIEnumerator(name: "ccmAnalogPllEnetControl", value: 327904)
!2651 = !DIEnumerator(name: "ccmAnalogPllAudioControl", value: 786672)
!2652 = !DIEnumerator(name: "ccmAnalogPllVideoControl", value: 786736)
!2653 = !{!2654, !2717, !152, !145, !630}
!2654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2655, size: 32)
!2655 = !DIDerivedType(tag: DW_TAG_typedef, name: "CCM_ANALOG_Type", file: !506, line: 8619, baseType: !2656)
!2656 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !506, line: 8563, size: 3072, elements: !2657)
!2657 = !{!2658, !2662, !2663, !2664, !2665, !2666, !2667, !2668, !2669, !2670, !2671, !2673, !2674, !2675, !2676, !2677, !2678, !2679, !2680, !2681, !2682, !2683, !2684, !2685, !2686, !2687, !2688, !2689, !2690, !2691, !2692, !2693, !2694, !2695, !2696, !2697, !2698, !2699, !2700, !2701, !2702, !2703, !2704, !2705, !2706, !2707, !2708, !2709, !2710, !2711, !2712, !2713, !2714, !2715, !2716}
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !2656, file: !506, line: 8564, baseType: !2659, size: 768)
!2659 = !DICompositeType(tag: DW_TAG_array_type, baseType: !195, size: 768, elements: !2660)
!2660 = !{!2661}
!2661 = !DISubrange(count: 96)
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ARM", scope: !2656, file: !506, line: 8565, baseType: !510, size: 32, offset: 768)
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ARM_SET", scope: !2656, file: !506, line: 8566, baseType: !510, size: 32, offset: 800)
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ARM_CLR", scope: !2656, file: !506, line: 8567, baseType: !510, size: 32, offset: 832)
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ARM_TOG", scope: !2656, file: !506, line: 8568, baseType: !510, size: 32, offset: 864)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR", scope: !2656, file: !506, line: 8569, baseType: !510, size: 32, offset: 896)
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_SET", scope: !2656, file: !506, line: 8570, baseType: !510, size: 32, offset: 928)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_CLR", scope: !2656, file: !506, line: 8571, baseType: !510, size: 32, offset: 960)
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_TOG", scope: !2656, file: !506, line: 8572, baseType: !510, size: 32, offset: 992)
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_SS", scope: !2656, file: !506, line: 8573, baseType: !510, size: 32, offset: 1024)
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !2656, file: !506, line: 8574, baseType: !2672, size: 96, offset: 1056)
!2672 = !DICompositeType(tag: DW_TAG_array_type, baseType: !195, size: 96, elements: !1650)
!2673 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_NUM", scope: !2656, file: !506, line: 8575, baseType: !510, size: 32, offset: 1152)
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_2", scope: !2656, file: !506, line: 8576, baseType: !2672, size: 96, offset: 1184)
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_DENOM", scope: !2656, file: !506, line: 8577, baseType: !510, size: 32, offset: 1280)
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_3", scope: !2656, file: !506, line: 8578, baseType: !2672, size: 96, offset: 1312)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_480", scope: !2656, file: !506, line: 8579, baseType: !510, size: 32, offset: 1408)
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_480_SET", scope: !2656, file: !506, line: 8580, baseType: !510, size: 32, offset: 1440)
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_480_CLR", scope: !2656, file: !506, line: 8581, baseType: !510, size: 32, offset: 1472)
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_480_TOG", scope: !2656, file: !506, line: 8582, baseType: !510, size: 32, offset: 1504)
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480A", scope: !2656, file: !506, line: 8583, baseType: !510, size: 32, offset: 1536)
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480A_SET", scope: !2656, file: !506, line: 8584, baseType: !510, size: 32, offset: 1568)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480A_CLR", scope: !2656, file: !506, line: 8585, baseType: !510, size: 32, offset: 1600)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480A_TOG", scope: !2656, file: !506, line: 8586, baseType: !510, size: 32, offset: 1632)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480B", scope: !2656, file: !506, line: 8587, baseType: !510, size: 32, offset: 1664)
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480B_SET", scope: !2656, file: !506, line: 8588, baseType: !510, size: 32, offset: 1696)
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480B_CLR", scope: !2656, file: !506, line: 8589, baseType: !510, size: 32, offset: 1728)
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480B_TOG", scope: !2656, file: !506, line: 8590, baseType: !510, size: 32, offset: 1760)
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ENET", scope: !2656, file: !506, line: 8591, baseType: !510, size: 32, offset: 1792)
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ENET_SET", scope: !2656, file: !506, line: 8592, baseType: !510, size: 32, offset: 1824)
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ENET_CLR", scope: !2656, file: !506, line: 8593, baseType: !510, size: 32, offset: 1856)
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ENET_TOG", scope: !2656, file: !506, line: 8594, baseType: !510, size: 32, offset: 1888)
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO", scope: !2656, file: !506, line: 8595, baseType: !510, size: 32, offset: 1920)
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_SET", scope: !2656, file: !506, line: 8596, baseType: !510, size: 32, offset: 1952)
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_CLR", scope: !2656, file: !506, line: 8597, baseType: !510, size: 32, offset: 1984)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_TOG", scope: !2656, file: !506, line: 8598, baseType: !510, size: 32, offset: 2016)
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_SS", scope: !2656, file: !506, line: 8599, baseType: !510, size: 32, offset: 2048)
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_4", scope: !2656, file: !506, line: 8600, baseType: !2672, size: 96, offset: 2080)
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_NUM", scope: !2656, file: !506, line: 8601, baseType: !510, size: 32, offset: 2176)
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_5", scope: !2656, file: !506, line: 8602, baseType: !2672, size: 96, offset: 2208)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_DENOM", scope: !2656, file: !506, line: 8603, baseType: !510, size: 32, offset: 2304)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_6", scope: !2656, file: !506, line: 8604, baseType: !2672, size: 96, offset: 2336)
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO", scope: !2656, file: !506, line: 8605, baseType: !510, size: 32, offset: 2432)
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_SET", scope: !2656, file: !506, line: 8606, baseType: !510, size: 32, offset: 2464)
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_CLR", scope: !2656, file: !506, line: 8607, baseType: !510, size: 32, offset: 2496)
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_TOG", scope: !2656, file: !506, line: 8608, baseType: !510, size: 32, offset: 2528)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_SS", scope: !2656, file: !506, line: 8609, baseType: !510, size: 32, offset: 2560)
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_7", scope: !2656, file: !506, line: 8610, baseType: !2672, size: 96, offset: 2592)
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_NUM", scope: !2656, file: !506, line: 8611, baseType: !510, size: 32, offset: 2688)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_8", scope: !2656, file: !506, line: 8612, baseType: !2672, size: 96, offset: 2720)
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_DENOM", scope: !2656, file: !506, line: 8613, baseType: !510, size: 32, offset: 2816)
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_9", scope: !2656, file: !506, line: 8614, baseType: !2672, size: 96, offset: 2848)
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_MISC0", scope: !2656, file: !506, line: 8615, baseType: !510, size: 32, offset: 2944)
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_MISC0_SET", scope: !2656, file: !506, line: 8616, baseType: !510, size: 32, offset: 2976)
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_MISC0_CLR", scope: !2656, file: !506, line: 8617, baseType: !510, size: 32, offset: 3008)
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_MISC0_TOG", scope: !2656, file: !506, line: 8618, baseType: !510, size: 32, offset: 3040)
!2717 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!2718 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2719, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2720, splitDebugInlining: false, nameTableKind: None)
!2719 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/nxp/imx/drivers/./gpio_imx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/integration")
!2720 = !{!2721, !2725, !988}
!2721 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_gpio_pin_direction", file: !989, line: 49, baseType: !32, size: 32, elements: !2722)
!2722 = !{!2723, !2724}
!2723 = !DIEnumerator(name: "gpioDigitalInput", value: 0)
!2724 = !DIEnumerator(name: "gpioDigitalOutput", value: 1)
!2725 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_gpio_interrupt_mode", file: !989, line: 56, baseType: !32, size: 32, elements: !2726)
!2726 = !{!2727, !2728, !2729, !2730, !2731}
!2727 = !DIEnumerator(name: "gpioIntLowLevel", value: 0)
!2728 = !DIEnumerator(name: "gpioIntHighLevel", value: 1)
!2729 = !DIEnumerator(name: "gpioIntRisingEdge", value: 2)
!2730 = !DIEnumerator(name: "gpioIntFallingEdge", value: 3)
!2731 = !DIEnumerator(name: "gpioNoIntmode", value: 4)
!2732 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2733, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2734, retainedTypes: !2743, splitDebugInlining: false, nameTableKind: None)
!2733 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/nxp/imx/drivers/./uart_imx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/integration")
!2734 = !{!1253, !2735, !2739}
!2735 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_uart_modem_mode", file: !1175, line: 179, baseType: !32, size: 32, elements: !2736)
!2736 = !{!2737, !2738}
!2737 = !DIEnumerator(name: "uartModemModeDce", value: 0)
!2738 = !DIEnumerator(name: "uartModemModeDte", value: 64)
!2739 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_uart_irda_vote_clock", file: !1175, line: 194, baseType: !32, size: 32, elements: !2740)
!2740 = !{!2741, !2742}
!2741 = !DIEnumerator(name: "uartIrdaVoteClockSampling", value: 0)
!2742 = !DIEnumerator(name: "uartIrdaVoteClockReference", value: 32)
!2743 = !{!152, !1403}
!2744 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2745, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2746, retainedTypes: !2757, splitDebugInlining: false, nameTableKind: None)
!2745 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/nxp/imx/devices/MCIMX7D/./clock_freq.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/integration")
!2746 = !{!221, !2747}
!2747 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "_ccm_analog_pfd_frac", file: !2645, line: 128, baseType: !32, size: 32, elements: !2748)
!2748 = !{!2749, !2750, !2751, !2752, !2753, !2754, !2755, !2756}
!2749 = !DIEnumerator(name: "ccmAnalogPfd0Frac", value: 192)
!2750 = !DIEnumerator(name: "ccmAnalogPfd1Frac", value: 524480)
!2751 = !DIEnumerator(name: "ccmAnalogPfd2Frac", value: 1048768)
!2752 = !DIEnumerator(name: "ccmAnalogPfd3Frac", value: 1573056)
!2753 = !DIEnumerator(name: "ccmAnalogPfd4Frac", value: 208)
!2754 = !DIEnumerator(name: "ccmAnalogPfd5Frac", value: 524496)
!2755 = !DIEnumerator(name: "ccmAnalogPfd6Frac", value: 1048784)
!2756 = !DIEnumerator(name: "ccmAnalogPfd7Frac", value: 1573072)
!2757 = !{!152, !2758, !2810, !630}
!2758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2759, size: 32)
!2759 = !DIDerivedType(tag: DW_TAG_typedef, name: "CCM_Type", file: !506, line: 4575, baseType: !2760)
!2760 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !506, line: 4532, size: 390144, elements: !2761)
!2761 = !{!2762, !2763, !2764, !2765, !2766, !2767, !2775, !2776, !2784, !2785}
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0", scope: !2760, file: !506, line: 4533, baseType: !510, size: 32)
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0_SET", scope: !2760, file: !506, line: 4534, baseType: !510, size: 32, offset: 32)
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0_CLR", scope: !2760, file: !506, line: 4535, baseType: !510, size: 32, offset: 64)
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0_TOG", scope: !2760, file: !506, line: 4536, baseType: !510, size: 32, offset: 96)
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !2760, file: !506, line: 4537, baseType: !515, size: 16256, offset: 128)
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL", scope: !2760, file: !506, line: 4543, baseType: !2768, size: 4224, offset: 16384)
!2768 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2769, size: 4224, elements: !526)
!2769 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2760, file: !506, line: 4538, size: 128, elements: !2770)
!2770 = !{!2771, !2772, !2773, !2774}
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL", scope: !2769, file: !506, line: 4539, baseType: !510, size: 32)
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL_SET", scope: !2769, file: !506, line: 4540, baseType: !510, size: 32, offset: 32)
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL_CLR", scope: !2769, file: !506, line: 4541, baseType: !510, size: 32, offset: 64)
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL_TOG", scope: !2769, file: !506, line: 4542, baseType: !510, size: 32, offset: 96)
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !2760, file: !506, line: 4544, baseType: !529, size: 110464, offset: 20608)
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR", scope: !2760, file: !506, line: 4550, baseType: !2777, size: 24448, offset: 131072)
!2777 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2778, size: 24448, elements: !540)
!2778 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2760, file: !506, line: 4545, size: 128, elements: !2779)
!2779 = !{!2780, !2781, !2782, !2783}
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR", scope: !2778, file: !506, line: 4546, baseType: !510, size: 32)
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR_SET", scope: !2778, file: !506, line: 4547, baseType: !510, size: 32, offset: 32)
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR_CLR", scope: !2778, file: !506, line: 4548, baseType: !510, size: 32, offset: 64)
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR_TOG", scope: !2778, file: !506, line: 4549, baseType: !510, size: 32, offset: 96)
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_2", scope: !2760, file: !506, line: 4551, baseType: !543, size: 106624, offset: 155520)
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_TOG", scope: !2760, file: !506, line: 4574, baseType: !2786, size: 128000, offset: 262144)
!2786 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2787, size: 128000, elements: !574)
!2787 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2760, file: !506, line: 4552, size: 1024, elements: !2788)
!2788 = !{!2789, !2790, !2791, !2792, !2793, !2794, !2795, !2796, !2797, !2798, !2799, !2800, !2801, !2802, !2803, !2804, !2805, !2806, !2807, !2808, !2809}
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT", scope: !2787, file: !506, line: 4553, baseType: !510, size: 32)
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT_SET", scope: !2787, file: !506, line: 4554, baseType: !510, size: 32, offset: 32)
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT_CLR", scope: !2787, file: !506, line: 4555, baseType: !510, size: 32, offset: 64)
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT_TOG", scope: !2787, file: !506, line: 4556, baseType: !510, size: 32, offset: 96)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "MISC", scope: !2787, file: !506, line: 4557, baseType: !510, size: 32, offset: 128)
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "MISC_ROOT_SET", scope: !2787, file: !506, line: 4558, baseType: !510, size: 32, offset: 160)
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "MISC_ROOT_CLR", scope: !2787, file: !506, line: 4559, baseType: !510, size: 32, offset: 192)
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "MISC_ROOT_TOG", scope: !2787, file: !506, line: 4560, baseType: !510, size: 32, offset: 224)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "POST", scope: !2787, file: !506, line: 4561, baseType: !510, size: 32, offset: 256)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "POST_ROOT_SET", scope: !2787, file: !506, line: 4562, baseType: !510, size: 32, offset: 288)
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "POST_ROOT_CLR", scope: !2787, file: !506, line: 4563, baseType: !510, size: 32, offset: 320)
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "POST_ROOT_TOG", scope: !2787, file: !506, line: 4564, baseType: !510, size: 32, offset: 352)
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "PRE", scope: !2787, file: !506, line: 4565, baseType: !510, size: 32, offset: 384)
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "PRE_ROOT_SET", scope: !2787, file: !506, line: 4566, baseType: !510, size: 32, offset: 416)
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "PRE_ROOT_CLR", scope: !2787, file: !506, line: 4567, baseType: !510, size: 32, offset: 448)
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "PRE_ROOT_TOG", scope: !2787, file: !506, line: 4568, baseType: !510, size: 32, offset: 480)
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !2787, file: !506, line: 4569, baseType: !567, size: 384, offset: 512)
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL", scope: !2787, file: !506, line: 4570, baseType: !510, size: 32, offset: 896)
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_SET", scope: !2787, file: !506, line: 4571, baseType: !510, size: 32, offset: 928)
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_CLR", scope: !2787, file: !506, line: 4572, baseType: !510, size: 32, offset: 960)
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_TOG", scope: !2787, file: !506, line: 4573, baseType: !510, size: 32, offset: 992)
!2810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2811, size: 32)
!2811 = !DIDerivedType(tag: DW_TAG_typedef, name: "CCM_ANALOG_Type", file: !506, line: 8619, baseType: !2812)
!2812 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !506, line: 8563, size: 3072, elements: !2813)
!2813 = !{!2814, !2815, !2816, !2817, !2818, !2819, !2820, !2821, !2822, !2823, !2824, !2825, !2826, !2827, !2828, !2829, !2830, !2831, !2832, !2833, !2834, !2835, !2836, !2837, !2838, !2839, !2840, !2841, !2842, !2843, !2844, !2845, !2846, !2847, !2848, !2849, !2850, !2851, !2852, !2853, !2854, !2855, !2856, !2857, !2858, !2859, !2860, !2861, !2862, !2863, !2864, !2865, !2866, !2867, !2868}
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !2812, file: !506, line: 8564, baseType: !2659, size: 768)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ARM", scope: !2812, file: !506, line: 8565, baseType: !510, size: 32, offset: 768)
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ARM_SET", scope: !2812, file: !506, line: 8566, baseType: !510, size: 32, offset: 800)
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ARM_CLR", scope: !2812, file: !506, line: 8567, baseType: !510, size: 32, offset: 832)
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ARM_TOG", scope: !2812, file: !506, line: 8568, baseType: !510, size: 32, offset: 864)
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR", scope: !2812, file: !506, line: 8569, baseType: !510, size: 32, offset: 896)
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_SET", scope: !2812, file: !506, line: 8570, baseType: !510, size: 32, offset: 928)
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_CLR", scope: !2812, file: !506, line: 8571, baseType: !510, size: 32, offset: 960)
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_TOG", scope: !2812, file: !506, line: 8572, baseType: !510, size: 32, offset: 992)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_SS", scope: !2812, file: !506, line: 8573, baseType: !510, size: 32, offset: 1024)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !2812, file: !506, line: 8574, baseType: !2672, size: 96, offset: 1056)
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_NUM", scope: !2812, file: !506, line: 8575, baseType: !510, size: 32, offset: 1152)
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_2", scope: !2812, file: !506, line: 8576, baseType: !2672, size: 96, offset: 1184)
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_DDR_DENOM", scope: !2812, file: !506, line: 8577, baseType: !510, size: 32, offset: 1280)
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_3", scope: !2812, file: !506, line: 8578, baseType: !2672, size: 96, offset: 1312)
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_480", scope: !2812, file: !506, line: 8579, baseType: !510, size: 32, offset: 1408)
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_480_SET", scope: !2812, file: !506, line: 8580, baseType: !510, size: 32, offset: 1440)
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_480_CLR", scope: !2812, file: !506, line: 8581, baseType: !510, size: 32, offset: 1472)
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_480_TOG", scope: !2812, file: !506, line: 8582, baseType: !510, size: 32, offset: 1504)
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480A", scope: !2812, file: !506, line: 8583, baseType: !510, size: 32, offset: 1536)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480A_SET", scope: !2812, file: !506, line: 8584, baseType: !510, size: 32, offset: 1568)
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480A_CLR", scope: !2812, file: !506, line: 8585, baseType: !510, size: 32, offset: 1600)
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480A_TOG", scope: !2812, file: !506, line: 8586, baseType: !510, size: 32, offset: 1632)
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480B", scope: !2812, file: !506, line: 8587, baseType: !510, size: 32, offset: 1664)
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480B_SET", scope: !2812, file: !506, line: 8588, baseType: !510, size: 32, offset: 1696)
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480B_CLR", scope: !2812, file: !506, line: 8589, baseType: !510, size: 32, offset: 1728)
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "PFD_480B_TOG", scope: !2812, file: !506, line: 8590, baseType: !510, size: 32, offset: 1760)
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ENET", scope: !2812, file: !506, line: 8591, baseType: !510, size: 32, offset: 1792)
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ENET_SET", scope: !2812, file: !506, line: 8592, baseType: !510, size: 32, offset: 1824)
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ENET_CLR", scope: !2812, file: !506, line: 8593, baseType: !510, size: 32, offset: 1856)
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_ENET_TOG", scope: !2812, file: !506, line: 8594, baseType: !510, size: 32, offset: 1888)
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO", scope: !2812, file: !506, line: 8595, baseType: !510, size: 32, offset: 1920)
!2846 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_SET", scope: !2812, file: !506, line: 8596, baseType: !510, size: 32, offset: 1952)
!2847 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_CLR", scope: !2812, file: !506, line: 8597, baseType: !510, size: 32, offset: 1984)
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_TOG", scope: !2812, file: !506, line: 8598, baseType: !510, size: 32, offset: 2016)
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_SS", scope: !2812, file: !506, line: 8599, baseType: !510, size: 32, offset: 2048)
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_4", scope: !2812, file: !506, line: 8600, baseType: !2672, size: 96, offset: 2080)
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_NUM", scope: !2812, file: !506, line: 8601, baseType: !510, size: 32, offset: 2176)
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_5", scope: !2812, file: !506, line: 8602, baseType: !2672, size: 96, offset: 2208)
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_AUDIO_DENOM", scope: !2812, file: !506, line: 8603, baseType: !510, size: 32, offset: 2304)
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_6", scope: !2812, file: !506, line: 8604, baseType: !2672, size: 96, offset: 2336)
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO", scope: !2812, file: !506, line: 8605, baseType: !510, size: 32, offset: 2432)
!2856 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_SET", scope: !2812, file: !506, line: 8606, baseType: !510, size: 32, offset: 2464)
!2857 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_CLR", scope: !2812, file: !506, line: 8607, baseType: !510, size: 32, offset: 2496)
!2858 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_TOG", scope: !2812, file: !506, line: 8608, baseType: !510, size: 32, offset: 2528)
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_SS", scope: !2812, file: !506, line: 8609, baseType: !510, size: 32, offset: 2560)
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_7", scope: !2812, file: !506, line: 8610, baseType: !2672, size: 96, offset: 2592)
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_NUM", scope: !2812, file: !506, line: 8611, baseType: !510, size: 32, offset: 2688)
!2862 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_8", scope: !2812, file: !506, line: 8612, baseType: !2672, size: 96, offset: 2720)
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_VIDEO_DENOM", scope: !2812, file: !506, line: 8613, baseType: !510, size: 32, offset: 2816)
!2864 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_9", scope: !2812, file: !506, line: 8614, baseType: !2672, size: 96, offset: 2848)
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_MISC0", scope: !2812, file: !506, line: 8615, baseType: !510, size: 32, offset: 2944)
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_MISC0_SET", scope: !2812, file: !506, line: 8616, baseType: !510, size: 32, offset: 2976)
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_MISC0_CLR", scope: !2812, file: !506, line: 8617, baseType: !510, size: 32, offset: 3008)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_MISC0_TOG", scope: !2812, file: !506, line: 8618, baseType: !510, size: 32, offset: 3040)
!2869 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2870, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2871, splitDebugInlining: false, nameTableKind: None)
!2870 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/integration")
!2871 = !{!106, !185}
!2872 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2873, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2874, retainedTypes: !105, splitDebugInlining: false, nameTableKind: None)
!2873 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/integration")
!2874 = !{!2875, !2882, !2330, !30}
!2875 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_query_id", file: !2876, line: 14, baseType: !32, size: 32, elements: !2877)
!2876 = !DIFile(filename: "zephyr/include/zephyr/debug/coredump.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2877 = !{!2878, !2879, !2880, !2881}
!2878 = !DIEnumerator(name: "COREDUMP_QUERY_GET_ERROR", value: 0)
!2879 = !DIEnumerator(name: "COREDUMP_QUERY_HAS_STORED_DUMP", value: 1)
!2880 = !DIEnumerator(name: "COREDUMP_QUERY_GET_STORED_DUMP_SIZE", value: 2)
!2881 = !DIEnumerator(name: "COREDUMP_QUERY_MAX", value: 3)
!2882 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_cmd_id", file: !2876, line: 42, baseType: !32, size: 32, elements: !2883)
!2883 = !{!2884, !2885, !2886, !2887, !2888, !2889}
!2884 = !DIEnumerator(name: "COREDUMP_CMD_CLEAR_ERROR", value: 0)
!2885 = !DIEnumerator(name: "COREDUMP_CMD_VERIFY_STORED_DUMP", value: 1)
!2886 = !DIEnumerator(name: "COREDUMP_CMD_ERASE_STORED_DUMP", value: 2)
!2887 = !DIEnumerator(name: "COREDUMP_CMD_COPY_STORED_DUMP", value: 3)
!2888 = !DIEnumerator(name: "COREDUMP_CMD_INVALIDATE_STORED_DUMP", value: 4)
!2889 = !DIEnumerator(name: "COREDUMP_CMD_MAX", value: 5)
!2890 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2891, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !105, splitDebugInlining: false, nameTableKind: None)
!2891 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/integration")
!2892 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2893, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2894, splitDebugInlining: false, nameTableKind: None)
!2893 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/integration")
!2894 = !{!22, !106, !107}
!2895 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2896, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !105, splitDebugInlining: false, nameTableKind: None)
!2896 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/integration")
!2897 = !{!"Ubuntu clang version 14.0.6"}
!2898 = !{i32 7, !"Dwarf Version", i32 4}
!2899 = !{i32 2, !"Debug Info Version", i32 3}
!2900 = !{i32 1, !"wchar_size", i32 4}
!2901 = !{i32 1, !"min_enum_size", i32 4}
!2902 = !{i32 1, !"branch-target-enforcement", i32 0}
!2903 = !{i32 1, !"sign-return-address", i32 0}
!2904 = !{i32 1, !"sign-return-address-all", i32 0}
!2905 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!2906 = !{i32 7, !"frame-pointer", i32 2}
!2907 = distinct !DISubprogram(name: "_OffsetAbsSyms", scope: !2908, file: !2908, line: 26, type: !2909, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2282, retainedNodes: !1949)
!2908 = !DIFile(filename: "zephyr/kernel/include/kernel_offsets.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2909 = !DISubroutineType(types: !2910)
!2910 = !{null}
!2911 = !DILocation(line: 28, column: 1, scope: !2907)
!2912 = !{i64 2155084380, i64 2155084400, i64 2155084463}
!2913 = !DILocation(line: 29, column: 1, scope: !2907)
!2914 = !{i64 2155084795, i64 2155084815, i64 2155084878}
!2915 = !DILocation(line: 30, column: 1, scope: !2907)
!2916 = !{i64 2155085214, i64 2155085234, i64 2155085297}
!2917 = !DILocation(line: 31, column: 1, scope: !2907)
!2918 = !{i64 2155089694, i64 2155089714, i64 2155089777}
!2919 = !DILocation(line: 33, column: 1, scope: !2907)
!2920 = !{i64 2155089986, i64 2155090006, i64 2155090069}
!2921 = !DILocation(line: 35, column: 1, scope: !2907)
!2922 = !{i64 2155090311, i64 2155090331, i64 2155090394}
!2923 = !DILocation(line: 50, column: 1, scope: !2907)
!2924 = !{i64 2155090738, i64 2155090758, i64 2155090821}
!2925 = !DILocation(line: 54, column: 1, scope: !2907)
!2926 = !{i64 2155091177, i64 2155091197, i64 2155091260}
!2927 = !DILocation(line: 61, column: 1, scope: !2907)
!2928 = !{i64 2155091494, i64 2155091514, i64 2155091577}
!2929 = !DILocation(line: 63, column: 1, scope: !2907)
!2930 = !{i64 2155091874, i64 2155091894, i64 2155091957}
!2931 = !DILocation(line: 64, column: 1, scope: !2907)
!2932 = !{i64 2155092396, i64 2155092416, i64 2155092479}
!2933 = !DILocation(line: 65, column: 1, scope: !2907)
!2934 = !{i64 2155092894, i64 2155092914, i64 2155092977}
!2935 = !DILocation(line: 66, column: 1, scope: !2907)
!2936 = !{i64 2155093376, i64 2155093396, i64 2155093459}
!2937 = !DILocation(line: 67, column: 1, scope: !2907)
!2938 = !{i64 2155093883, i64 2155093903, i64 2155093966}
!2939 = !DILocation(line: 68, column: 1, scope: !2907)
!2940 = !{i64 2155094371, i64 2155094391, i64 2155094454}
!2941 = !DILocation(line: 70, column: 1, scope: !2907)
!2942 = !{i64 2155094839, i64 2155094859, i64 2155094922}
!2943 = !DILocation(line: 71, column: 1, scope: !2907)
!2944 = !{i64 2155095281, i64 2155095301, i64 2155095364}
!2945 = !DILocation(line: 72, column: 1, scope: !2907)
!2946 = !{i64 2155095739, i64 2155095759, i64 2155095822}
!2947 = !DILocation(line: 97, column: 1, scope: !2907)
!2948 = !{i64 2155096046, i64 2155096066, i64 2155096129}
!2949 = !DILocation(line: 99, column: 1, scope: !2907)
!2950 = !{i64 2155096264, i64 2155096284, i64 2155096347}
!2951 = !DILocation(line: 102, column: 1, scope: !2907)
!2952 = !{i64 2155096521, i64 2155096541, i64 2155096604}
!2953 = !DILocation(line: 105, column: 1, scope: !2907)
!2954 = !{i64 2155096761, i64 2155096781, i64 2155096844}
!2955 = !DILocation(line: 115, column: 1, scope: !2907)
!2956 = !{i64 2155097100, i64 2155097120, i64 2155097183}
!2957 = !DILocation(line: 118, column: 1, scope: !2907)
!2958 = !{i64 2155097444, i64 2155097464, i64 2155097527}
!2959 = !DILocation(line: 32, column: 1, scope: !2960)
!2960 = !DILexicalBlockFile(scope: !2907, file: !2961, discriminator: 0)
!2961 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets_aarch32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2962 = !{i64 2155097800, i64 2155097820, i64 2155097883}
!2963 = !DILocation(line: 33, column: 1, scope: !2960)
!2964 = !{i64 2155098312, i64 2155098332, i64 2155098395}
!2965 = !DILocation(line: 53, column: 1, scope: !2960)
!2966 = !{i64 2155098820, i64 2155098840, i64 2155098903}
!2967 = !DILocation(line: 54, column: 1, scope: !2960)
!2968 = !{i64 2155103299, i64 2155103319, i64 2155103382}
!2969 = !DILocation(line: 55, column: 1, scope: !2960)
!2970 = !{i64 2155103717, i64 2155103737, i64 2155103800}
!2971 = !DILocation(line: 56, column: 1, scope: !2960)
!2972 = !{i64 2155104135, i64 2155104155, i64 2155104218}
!2973 = !DILocation(line: 57, column: 1, scope: !2960)
!2974 = !{i64 2155104553, i64 2155104573, i64 2155104636}
!2975 = !DILocation(line: 58, column: 1, scope: !2960)
!2976 = !{i64 2155104971, i64 2155104991, i64 2155105054}
!2977 = !DILocation(line: 59, column: 1, scope: !2960)
!2978 = !{i64 2155105389, i64 2155105409, i64 2155105472}
!2979 = !DILocation(line: 60, column: 1, scope: !2960)
!2980 = !{i64 2155105813, i64 2155105833, i64 2155105896}
!2981 = !DILocation(line: 61, column: 1, scope: !2960)
!2982 = !{i64 2155106130, i64 2155106150, i64 2155106213}
!2983 = !DILocation(line: 70, column: 1, scope: !2960)
!2984 = !{i64 2155106359, i64 2155106379, i64 2155106442}
!2985 = !DILocation(line: 72, column: 1, scope: !2960)
!2986 = !{i64 2155106691, i64 2155106711, i64 2155106774}
!2987 = !DILocation(line: 73, column: 1, scope: !2960)
!2988 = !{i64 2155107141, i64 2155107161, i64 2155107224}
!2989 = !DILocation(line: 74, column: 1, scope: !2960)
!2990 = !{i64 2155107591, i64 2155107611, i64 2155107674}
!2991 = !DILocation(line: 75, column: 1, scope: !2960)
!2992 = !{i64 2155108041, i64 2155108061, i64 2155108124}
!2993 = !DILocation(line: 76, column: 1, scope: !2960)
!2994 = !{i64 2155108491, i64 2155108511, i64 2155108574}
!2995 = !DILocation(line: 77, column: 1, scope: !2960)
!2996 = !{i64 2155108941, i64 2155108961, i64 2155109024}
!2997 = !DILocation(line: 78, column: 1, scope: !2960)
!2998 = !{i64 2155109391, i64 2155109411, i64 2155109474}
!2999 = !DILocation(line: 79, column: 1, scope: !2960)
!3000 = !{i64 2155109841, i64 2155109861, i64 2155109924}
!3001 = !DILocation(line: 80, column: 1, scope: !2960)
!3002 = !{i64 2155110294, i64 2155110314, i64 2155110377}
!3003 = !DILocation(line: 84, column: 1, scope: !2960)
!3004 = !{i64 2155110626, i64 2155110646, i64 2155110709}
!3005 = !DILocation(line: 106, column: 1, scope: !2960)
!3006 = !{i64 2155110876, i64 2155110896, i64 2155110959}
!3007 = !DILocation(line: 11, column: 1, scope: !3008)
!3008 = !DILexicalBlockFile(scope: !2907, file: !3009, discriminator: 0)
!3009 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3010 = distinct !DISubprogram(name: "_framework_tests_test_assert_wrapper", scope: !111, file: !111, line: 18, type: !131, scopeLine: 18, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3011)
!3011 = !{!3012}
!3012 = !DILocalVariable(name: "data", arg: 1, scope: !3010, file: !111, line: 18, type: !106)
!3013 = !DILocation(line: 0, scope: !3010)
!3014 = !DILocation(line: 18, column: 1, scope: !3010)
!3015 = distinct !DISubprogram(name: "cbvprintf_package", scope: !200, file: !200, line: 233, type: !3016, scopeLine: 235, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !3025)
!3016 = !DISubroutineType(types: !3017)
!3017 = !{!107, !106, !185, !152, !118, !3018}
!3018 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3019, line: 99, baseType: !3020)
!3019 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stdarg.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3020 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3019, line: 40, baseType: !3021)
!3021 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !200, baseType: !3022)
!3022 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !3023)
!3023 = !{!3024}
!3024 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !3022, file: !200, line: 18, baseType: !106, size: 32)
!3025 = !{!3026, !3027, !3028, !3029, !3030, !3031, !3032, !3033, !3034, !3035, !3037, !3038, !3039, !3040, !3041, !3042, !3043, !3044, !3045, !3046, !3047, !3048, !3061, !3070, !3073, !3074, !3077, !3080, !3083, !3086, !3092}
!3026 = !DILocalVariable(name: "packaged", arg: 1, scope: !3015, file: !200, line: 233, type: !106)
!3027 = !DILocalVariable(name: "len", arg: 2, scope: !3015, file: !200, line: 233, type: !185)
!3028 = !DILocalVariable(name: "flags", arg: 3, scope: !3015, file: !200, line: 233, type: !152)
!3029 = !DILocalVariable(name: "fmt", arg: 4, scope: !3015, file: !200, line: 234, type: !118)
!3030 = !DILocalVariable(name: "ap", arg: 5, scope: !3015, file: !200, line: 234, type: !3018)
!3031 = !DILocalVariable(name: "buf0", scope: !3015, file: !200, line: 247, type: !194)
!3032 = !DILocalVariable(name: "buf", scope: !3015, file: !200, line: 248, type: !194)
!3033 = !DILocalVariable(name: "size", scope: !3015, file: !200, line: 249, type: !32)
!3034 = !DILocalVariable(name: "align", scope: !3015, file: !200, line: 250, type: !32)
!3035 = !DILocalVariable(name: "str_ptr_pos", scope: !3015, file: !200, line: 251, type: !3036)
!3036 = !DICompositeType(tag: DW_TAG_array_type, baseType: !195, size: 128, elements: !1156)
!3037 = !DILocalVariable(name: "str_ptr_arg", scope: !3015, file: !200, line: 252, type: !3036)
!3038 = !DILocalVariable(name: "s_idx", scope: !3015, file: !200, line: 253, type: !32)
!3039 = !DILocalVariable(name: "s_rw_cnt", scope: !3015, file: !200, line: 254, type: !32)
!3040 = !DILocalVariable(name: "s_ro_cnt", scope: !3015, file: !200, line: 255, type: !32)
!3041 = !DILocalVariable(name: "arg_idx", scope: !3015, file: !200, line: 256, type: !107)
!3042 = !DILocalVariable(name: "i", scope: !3015, file: !200, line: 257, type: !32)
!3043 = !DILocalVariable(name: "s", scope: !3015, file: !200, line: 258, type: !118)
!3044 = !DILocalVariable(name: "parsing", scope: !3015, file: !200, line: 259, type: !145)
!3045 = !DILocalVariable(name: "rws_pos_en", scope: !3015, file: !200, line: 263, type: !145)
!3046 = !DILocalVariable(name: "fros_cnt", scope: !3015, file: !200, line: 268, type: !107)
!3047 = !DILocalVariable(name: "is_str_arg", scope: !3015, file: !200, line: 269, type: !145)
!3048 = !DILocalVariable(name: "pkg_hdr", scope: !3015, file: !200, line: 270, type: !3049)
!3049 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3050, size: 32)
!3050 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "cbprintf_package_hdr", file: !3051, line: 78, size: 32, elements: !3052)
!3051 = !DIFile(filename: "zephyr/include/zephyr/sys/cbprintf.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3052 = !{!3053, !3060}
!3053 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !3050, file: !3051, line: 80, baseType: !3054, size: 32)
!3054 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cbprintf_package_desc", file: !3051, line: 45, size: 32, elements: !3055)
!3055 = !{!3056, !3057, !3058, !3059}
!3056 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !3054, file: !3051, line: 47, baseType: !195, size: 8)
!3057 = !DIDerivedType(tag: DW_TAG_member, name: "str_cnt", scope: !3054, file: !3051, line: 50, baseType: !195, size: 8, offset: 8)
!3058 = !DIDerivedType(tag: DW_TAG_member, name: "ro_str_cnt", scope: !3054, file: !3051, line: 53, baseType: !195, size: 8, offset: 16)
!3059 = !DIDerivedType(tag: DW_TAG_member, name: "rw_str_cnt", scope: !3054, file: !3051, line: 56, baseType: !195, size: 8, offset: 24)
!3060 = !DIDerivedType(tag: DW_TAG_member, name: "raw", scope: !3050, file: !3051, line: 82, baseType: !106, size: 32)
!3061 = !DILocalVariable(name: "v", scope: !3062, file: !200, line: 567, type: !3066)
!3062 = distinct !DILexicalBlock(scope: !3063, file: !200, line: 562, column: 14)
!3063 = distinct !DILexicalBlock(scope: !3064, file: !200, line: 481, column: 18)
!3064 = distinct !DILexicalBlock(scope: !3065, file: !200, line: 466, column: 3)
!3065 = distinct !DILexicalBlock(scope: !3015, file: !200, line: 343, column: 15)
!3066 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3015, file: !200, line: 567, size: 64, elements: !3067)
!3067 = !{!3068, !3069}
!3068 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !3066, file: !200, line: 567, baseType: !183, size: 64)
!3069 = !DIDerivedType(tag: DW_TAG_member, name: "ld", scope: !3066, file: !200, line: 567, baseType: !181, size: 64)
!3070 = !DILocalVariable(name: "is_ro", scope: !3071, file: !200, line: 620, type: !145)
!3071 = distinct !DILexicalBlock(scope: !3072, file: !200, line: 613, column: 19)
!3072 = distinct !DILexicalBlock(scope: !3065, file: !200, line: 613, column: 7)
!3073 = !DILocalVariable(name: "do_ro", scope: !3071, file: !200, line: 621, type: !145)
!3074 = !DILocalVariable(name: "s_ptr_idx", scope: !3075, file: !200, line: 626, type: !152)
!3075 = distinct !DILexicalBlock(scope: !3076, file: !200, line: 625, column: 11)
!3076 = distinct !DILexicalBlock(scope: !3071, file: !200, line: 623, column: 8)
!3077 = !DILocalVariable(name: "v", scope: !3078, file: !200, line: 684, type: !107)
!3078 = distinct !DILexicalBlock(scope: !3079, file: !200, line: 683, column: 35)
!3079 = distinct !DILexicalBlock(scope: !3072, file: !200, line: 683, column: 14)
!3080 = !DILocalVariable(name: "v", scope: !3081, file: !200, line: 691, type: !189)
!3081 = distinct !DILexicalBlock(scope: !3082, file: !200, line: 690, column: 36)
!3082 = distinct !DILexicalBlock(scope: !3079, file: !200, line: 690, column: 14)
!3083 = !DILocalVariable(name: "v", scope: !3084, file: !200, line: 698, type: !191)
!3084 = distinct !DILexicalBlock(scope: !3085, file: !200, line: 697, column: 41)
!3085 = distinct !DILexicalBlock(scope: !3082, file: !200, line: 697, column: 14)
!3086 = !DILocalVariable(name: "pos", scope: !3087, file: !200, line: 762, type: !195)
!3087 = distinct !DILexicalBlock(scope: !3088, file: !200, line: 757, column: 31)
!3088 = distinct !DILexicalBlock(scope: !3089, file: !200, line: 757, column: 3)
!3089 = distinct !DILexicalBlock(scope: !3090, file: !200, line: 757, column: 3)
!3090 = distinct !DILexicalBlock(scope: !3091, file: !200, line: 756, column: 16)
!3091 = distinct !DILexicalBlock(scope: !3015, file: !200, line: 756, column: 6)
!3092 = !DILabel(scope: !3071, name: "process_string", file: !200, line: 615)
!3093 = !DILocation(line: 0, scope: !3015)
!3094 = !DILocation(line: 251, column: 2, scope: !3015)
!3095 = !DILocation(line: 251, column: 10, scope: !3015)
!3096 = !DILocation(line: 252, column: 2, scope: !3015)
!3097 = !DILocation(line: 252, column: 10, scope: !3015)
!3098 = !DILocation(line: 263, column: 29, scope: !3015)
!3099 = !DILocation(line: 263, column: 21, scope: !3015)
!3100 = !DILocation(line: 268, column: 21, scope: !3015)
!3101 = !DILocation(line: 268, column: 19, scope: !3015)
!3102 = !DILocation(line: 273, column: 6, scope: !3103)
!3103 = distinct !DILexicalBlock(scope: !3015, file: !200, line: 273, column: 6)
!3104 = !DILocation(line: 273, column: 26, scope: !3103)
!3105 = !DILocation(line: 273, column: 6, scope: !3015)
!3106 = !DILocation(line: 297, column: 6, scope: !3015)
!3107 = !DILocation(line: 305, column: 11, scope: !3108)
!3108 = distinct !DILexicalBlock(scope: !3015, file: !200, line: 305, column: 6)
!3109 = !DILocation(line: 305, column: 6, scope: !3015)
!3110 = !DILocation(line: 327, column: 19, scope: !3111)
!3111 = distinct !DILexicalBlock(scope: !3015, file: !200, line: 327, column: 6)
!3112 = !DILocation(line: 327, column: 22, scope: !3111)
!3113 = !DILocation(line: 327, column: 33, scope: !3111)
!3114 = !DILocation(line: 327, column: 50, scope: !3111)
!3115 = !DILocation(line: 327, column: 6, scope: !3015)
!3116 = !DILocation(line: 338, column: 9, scope: !3015)
!3117 = !DILocation(line: 341, column: 2, scope: !3015)
!3118 = !DILocation(line: 472, column: 8, scope: !3064)
!3119 = !DILocation(line: 473, column: 14, scope: !3120)
!3120 = distinct !DILexicalBlock(scope: !3121, file: !200, line: 473, column: 9)
!3121 = distinct !DILexicalBlock(scope: !3122, file: !200, line: 472, column: 18)
!3122 = distinct !DILexicalBlock(scope: !3064, file: !200, line: 472, column: 8)
!3123 = !DILocation(line: 473, column: 9, scope: !3121)
!3124 = !DILocation(line: 479, column: 5, scope: !3121)
!3125 = !DILocation(line: 468, column: 9, scope: !3126)
!3126 = distinct !DILexicalBlock(scope: !3064, file: !200, line: 468, column: 8)
!3127 = !DILocation(line: 468, column: 8, scope: !3126)
!3128 = !DILocation(line: 468, column: 15, scope: !3126)
!3129 = !DILocation(line: 468, column: 8, scope: !3064)
!3130 = distinct !{!3130, !3131, !3132}
!3131 = !DILocation(line: 343, column: 2, scope: !3015)
!3132 = !DILocation(line: 712, column: 2, scope: !3015)
!3133 = !DILocation(line: 481, column: 4, scope: !3064)
!3134 = !DILocation(line: 484, column: 12, scope: !3063)
!3135 = !DILocation(line: 485, column: 5, scope: !3063)
!3136 = !DILocation(line: 505, column: 5, scope: !3063)
!3137 = !DILocation(line: 518, column: 5, scope: !3063)
!3138 = !DILocation(line: 523, column: 5, scope: !3063)
!3139 = !DILocation(line: 532, column: 9, scope: !3140)
!3140 = distinct !DILexicalBlock(scope: !3063, file: !200, line: 532, column: 9)
!3141 = !DILocation(line: 532, column: 17, scope: !3140)
!3142 = !DILocation(line: 532, column: 9, scope: !3063)
!3143 = !DILocation(line: 533, column: 10, scope: !3144)
!3144 = distinct !DILexicalBlock(scope: !3145, file: !200, line: 533, column: 10)
!3145 = distinct !DILexicalBlock(scope: !3140, file: !200, line: 532, column: 25)
!3146 = !DILocation(line: 533, column: 18, scope: !3144)
!3147 = !DILocation(line: 0, scope: !3148)
!3148 = distinct !DILexicalBlock(scope: !3062, file: !200, line: 569, column: 9)
!3149 = !DILocation(line: 0, scope: !3062)
!3150 = !DILocation(line: 579, column: 20, scope: !3062)
!3151 = !DILocation(line: 579, column: 11, scope: !3062)
!3152 = !DILocation(line: 580, column: 9, scope: !3062)
!3153 = !DILocation(line: 582, column: 21, scope: !3154)
!3154 = distinct !DILexicalBlock(scope: !3155, file: !200, line: 582, column: 10)
!3155 = distinct !DILexicalBlock(scope: !3156, file: !200, line: 580, column: 23)
!3156 = distinct !DILexicalBlock(scope: !3062, file: !200, line: 580, column: 9)
!3157 = !DILocation(line: 582, column: 28, scope: !3154)
!3158 = !DILocation(line: 582, column: 10, scope: !3155)
!3159 = !DILocation(line: 0, scope: !3160)
!3160 = distinct !DILexicalBlock(scope: !3161, file: !200, line: 587, column: 17)
!3161 = distinct !DILexicalBlock(scope: !3155, file: !200, line: 585, column: 10)
!3162 = !DILocation(line: 593, column: 9, scope: !3062)
!3163 = !DILocation(line: 600, column: 5, scope: !3063)
!3164 = !DILocation(line: 605, column: 18, scope: !3065)
!3165 = !DILocation(line: 605, column: 9, scope: !3065)
!3166 = !DILocation(line: 608, column: 20, scope: !3167)
!3167 = distinct !DILexicalBlock(scope: !3065, file: !200, line: 608, column: 7)
!3168 = !DILocation(line: 608, column: 23, scope: !3167)
!3169 = !DILocation(line: 608, column: 34, scope: !3167)
!3170 = !DILocation(line: 608, column: 41, scope: !3167)
!3171 = !DILocation(line: 608, column: 7, scope: !3065)
!3172 = !DILocation(line: 613, column: 7, scope: !3065)
!3173 = !DILocation(line: 614, column: 8, scope: !3071)
!3174 = !DILocation(line: 614, column: 4, scope: !3071)
!3175 = !DILocation(line: 256, column: 6, scope: !3015)
!3176 = !DILocation(line: 254, column: 15, scope: !3015)
!3177 = !DILocation(line: 320, column: 7, scope: !3178)
!3178 = distinct !DILexicalBlock(scope: !3108, file: !200, line: 305, column: 20)
!3179 = !DILocation(line: 615, column: 1, scope: !3071)
!3180 = !DILocation(line: 616, column: 8, scope: !3071)
!3181 = !DILocation(line: 617, column: 5, scope: !3182)
!3182 = distinct !DILexicalBlock(scope: !3183, file: !200, line: 616, column: 22)
!3183 = distinct !DILexicalBlock(scope: !3071, file: !200, line: 616, column: 8)
!3184 = !DILocation(line: 617, column: 25, scope: !3182)
!3185 = !DILocation(line: 618, column: 4, scope: !3182)
!3186 = !DILocation(line: 620, column: 26, scope: !3071)
!3187 = !DILocation(line: 620, column: 29, scope: !3071)
!3188 = !DILocation(line: 620, column: 17, scope: !3071)
!3189 = !DILocation(line: 620, column: 43, scope: !3071)
!3190 = !DILocation(line: 0, scope: !3071)
!3191 = !DILocation(line: 623, column: 14, scope: !3076)
!3192 = !DILocation(line: 626, column: 26, scope: !3075)
!3193 = !DILocation(line: 626, column: 37, scope: !3075)
!3194 = !DILocation(line: 0, scope: !3075)
!3195 = !DILocation(line: 634, column: 15, scope: !3196)
!3196 = distinct !DILexicalBlock(scope: !3075, file: !200, line: 634, column: 9)
!3197 = !DILocation(line: 635, column: 6, scope: !3198)
!3198 = distinct !DILexicalBlock(scope: !3199, file: !200, line: 635, column: 6)
!3199 = distinct !DILexicalBlock(scope: !3200, file: !200, line: 635, column: 6)
!3200 = distinct !DILexicalBlock(scope: !3201, file: !200, line: 635, column: 6)
!3201 = distinct !DILexicalBlock(scope: !3196, file: !200, line: 634, column: 44)
!3202 = !DILocation(line: 639, column: 15, scope: !3203)
!3203 = distinct !DILexicalBlock(scope: !3075, file: !200, line: 639, column: 9)
!3204 = !DILocation(line: 639, column: 9, scope: !3075)
!3205 = !DILocation(line: 640, column: 6, scope: !3206)
!3206 = distinct !DILexicalBlock(scope: !3207, file: !200, line: 640, column: 6)
!3207 = distinct !DILexicalBlock(scope: !3208, file: !200, line: 640, column: 6)
!3208 = distinct !DILexicalBlock(scope: !3209, file: !200, line: 640, column: 6)
!3209 = distinct !DILexicalBlock(scope: !3203, file: !200, line: 639, column: 43)
!3210 = !DILocation(line: 644, column: 9, scope: !3075)
!3211 = !DILocation(line: 649, column: 27, scope: !3212)
!3212 = distinct !DILexicalBlock(scope: !3213, file: !200, line: 644, column: 23)
!3213 = distinct !DILexicalBlock(scope: !3075, file: !200, line: 644, column: 9)
!3214 = !DILocation(line: 649, column: 6, scope: !3212)
!3215 = !DILocation(line: 649, column: 25, scope: !3212)
!3216 = !DILocation(line: 650, column: 27, scope: !3212)
!3217 = !DILocation(line: 650, column: 6, scope: !3212)
!3218 = !DILocation(line: 650, column: 25, scope: !3212)
!3219 = !DILocation(line: 651, column: 10, scope: !3212)
!3220 = !DILocation(line: 653, column: 26, scope: !3221)
!3221 = distinct !DILexicalBlock(scope: !3222, file: !200, line: 651, column: 17)
!3222 = distinct !DILexicalBlock(scope: !3212, file: !200, line: 651, column: 10)
!3223 = !DILocation(line: 654, column: 15, scope: !3221)
!3224 = !DILocation(line: 655, column: 6, scope: !3221)
!3225 = !DILocation(line: 656, column: 15, scope: !3226)
!3226 = distinct !DILexicalBlock(scope: !3222, file: !200, line: 655, column: 13)
!3227 = !DILocation(line: 658, column: 16, scope: !3213)
!3228 = !DILocation(line: 663, column: 10, scope: !3229)
!3229 = distinct !DILexicalBlock(scope: !3230, file: !200, line: 658, column: 23)
!3230 = distinct !DILexicalBlock(scope: !3213, file: !200, line: 658, column: 16)
!3231 = !DILocation(line: 664, column: 5, scope: !3229)
!3232 = !DILocation(line: 664, column: 16, scope: !3230)
!3233 = !DILocation(line: 669, column: 10, scope: !3234)
!3234 = distinct !DILexicalBlock(scope: !3235, file: !200, line: 664, column: 28)
!3235 = distinct !DILexicalBlock(scope: !3230, file: !200, line: 664, column: 16)
!3236 = !DILocation(line: 670, column: 5, scope: !3234)
!3237 = !DILocation(line: 675, column: 13, scope: !3238)
!3238 = distinct !DILexicalBlock(scope: !3235, file: !200, line: 670, column: 12)
!3239 = !DILocation(line: 675, column: 27, scope: !3238)
!3240 = !DILocation(line: 675, column: 10, scope: !3238)
!3241 = !DILocation(line: 678, column: 10, scope: !3075)
!3242 = !DILocation(line: 680, column: 8, scope: !3071)
!3243 = !DILocation(line: 683, column: 14, scope: !3072)
!3244 = !DILocation(line: 684, column: 12, scope: !3078)
!3245 = !DILocation(line: 0, scope: !3078)
!3246 = !DILocation(line: 686, column: 8, scope: !3078)
!3247 = !DILocation(line: 687, column: 5, scope: !3248)
!3248 = distinct !DILexicalBlock(scope: !3249, file: !200, line: 686, column: 22)
!3249 = distinct !DILexicalBlock(scope: !3078, file: !200, line: 686, column: 8)
!3250 = !DILocation(line: 687, column: 17, scope: !3248)
!3251 = !DILocation(line: 688, column: 4, scope: !3248)
!3252 = !DILocation(line: 698, column: 18, scope: !3084)
!3253 = !DILocation(line: 0, scope: !3084)
!3254 = !DILocation(line: 700, column: 8, scope: !3084)
!3255 = !DILocation(line: 704, column: 6, scope: !3256)
!3256 = distinct !DILexicalBlock(scope: !3257, file: !200, line: 703, column: 12)
!3257 = distinct !DILexicalBlock(scope: !3258, file: !200, line: 701, column: 9)
!3258 = distinct !DILexicalBlock(scope: !3259, file: !200, line: 700, column: 22)
!3259 = distinct !DILexicalBlock(scope: !3084, file: !200, line: 700, column: 8)
!3260 = !DILocation(line: 704, column: 24, scope: !3256)
!3261 = !DILocation(line: 706, column: 4, scope: !3258)
!3262 = !DILocation(line: 709, column: 4, scope: !3263)
!3263 = distinct !DILexicalBlock(scope: !3264, file: !200, line: 709, column: 4)
!3264 = distinct !DILexicalBlock(scope: !3265, file: !200, line: 709, column: 4)
!3265 = distinct !DILexicalBlock(scope: !3266, file: !200, line: 709, column: 4)
!3266 = distinct !DILexicalBlock(scope: !3085, file: !200, line: 708, column: 10)
!3267 = !DILocation(line: 0, scope: !3079)
!3268 = !DILocation(line: 0, scope: !3065)
!3269 = !DILocation(line: 720, column: 6, scope: !3270)
!3270 = distinct !DILexicalBlock(scope: !3015, file: !200, line: 720, column: 6)
!3271 = !DILocation(line: 720, column: 17, scope: !3270)
!3272 = !DILocation(line: 720, column: 31, scope: !3270)
!3273 = !DILocation(line: 720, column: 6, scope: !3015)
!3274 = !DILocation(line: 721, column: 3, scope: !3275)
!3275 = distinct !DILexicalBlock(scope: !3276, file: !200, line: 721, column: 3)
!3276 = distinct !DILexicalBlock(scope: !3277, file: !200, line: 721, column: 3)
!3277 = distinct !DILexicalBlock(scope: !3278, file: !200, line: 721, column: 3)
!3278 = distinct !DILexicalBlock(scope: !3270, file: !200, line: 720, column: 38)
!3279 = !DILocation(line: 729, column: 6, scope: !3015)
!3280 = !DILocation(line: 730, column: 21, scope: !3281)
!3281 = distinct !DILexicalBlock(scope: !3282, file: !200, line: 729, column: 20)
!3282 = distinct !DILexicalBlock(scope: !3015, file: !200, line: 729, column: 6)
!3283 = !DILocation(line: 730, column: 27, scope: !3281)
!3284 = !DILocation(line: 730, column: 3, scope: !3281)
!3285 = !DILocation(line: 737, column: 22, scope: !3015)
!3286 = !DILocation(line: 737, column: 20, scope: !3015)
!3287 = !DILocation(line: 0, scope: !3288)
!3288 = distinct !DILexicalBlock(scope: !3015, file: !200, line: 739, column: 6)
!3289 = !DILocation(line: 745, column: 17, scope: !3290)
!3290 = distinct !DILexicalBlock(scope: !3288, file: !200, line: 743, column: 9)
!3291 = !DILocation(line: 745, column: 25, scope: !3290)
!3292 = !DILocation(line: 746, column: 17, scope: !3290)
!3293 = !DILocation(line: 746, column: 28, scope: !3290)
!3294 = !DILocation(line: 749, column: 29, scope: !3015)
!3295 = !DILocation(line: 749, column: 16, scope: !3015)
!3296 = !DILocation(line: 749, column: 27, scope: !3015)
!3297 = !DILocation(line: 756, column: 6, scope: !3091)
!3298 = !DILocation(line: 756, column: 6, scope: !3015)
!3299 = !DILocation(line: 757, column: 3, scope: !3089)
!3300 = !DILocation(line: 758, column: 10, scope: !3301)
!3301 = distinct !DILexicalBlock(scope: !3087, file: !200, line: 758, column: 8)
!3302 = !DILocation(line: 758, column: 25, scope: !3301)
!3303 = !DILocation(line: 758, column: 8, scope: !3087)
!3304 = !DILocation(line: 0, scope: !3087)
!3305 = !DILocation(line: 765, column: 8, scope: !3306)
!3306 = distinct !DILexicalBlock(scope: !3087, file: !200, line: 765, column: 8)
!3307 = !DILocation(line: 765, column: 19, scope: !3306)
!3308 = !DILocation(line: 765, column: 23, scope: !3306)
!3309 = !DILocation(line: 765, column: 8, scope: !3087)
!3310 = !DILocation(line: 762, column: 33, scope: !3087)
!3311 = !DILocation(line: 769, column: 8, scope: !3087)
!3312 = !DILocation(line: 769, column: 11, scope: !3087)
!3313 = !DILocation(line: 757, column: 27, scope: !3088)
!3314 = !DILocation(line: 757, column: 17, scope: !3088)
!3315 = distinct !{!3315, !3299, !3316}
!3316 = !DILocation(line: 770, column: 3, scope: !3089)
!3317 = !DILocation(line: 774, column: 16, scope: !3318)
!3318 = distinct !DILexicalBlock(scope: !3319, file: !200, line: 774, column: 2)
!3319 = distinct !DILexicalBlock(scope: !3015, file: !200, line: 774, column: 2)
!3320 = !DILocation(line: 774, column: 2, scope: !3319)
!3321 = !DILocation(line: 776, column: 16, scope: !3322)
!3322 = distinct !DILexicalBlock(scope: !3323, file: !200, line: 776, column: 7)
!3323 = distinct !DILexicalBlock(scope: !3318, file: !200, line: 774, column: 30)
!3324 = !DILocation(line: 776, column: 19, scope: !3322)
!3325 = !DILocation(line: 776, column: 34, scope: !3322)
!3326 = !DILocation(line: 776, column: 7, scope: !3323)
!3327 = !DILocation(line: 780, column: 7, scope: !3323)
!3328 = !DILocation(line: 782, column: 13, scope: !3329)
!3329 = distinct !DILexicalBlock(scope: !3330, file: !200, line: 780, column: 19)
!3330 = distinct !DILexicalBlock(scope: !3323, file: !200, line: 780, column: 7)
!3331 = !DILocation(line: 782, column: 8, scope: !3329)
!3332 = !DILocation(line: 782, column: 11, scope: !3329)
!3333 = !DILocation(line: 783, column: 3, scope: !3329)
!3334 = !DILocation(line: 785, column: 26, scope: !3335)
!3335 = distinct !DILexicalBlock(scope: !3330, file: !200, line: 783, column: 10)
!3336 = !DILocation(line: 785, column: 41, scope: !3335)
!3337 = !DILocation(line: 785, column: 24, scope: !3335)
!3338 = !DILocation(line: 785, column: 8, scope: !3335)
!3339 = !DILocation(line: 787, column: 52, scope: !3335)
!3340 = !DILocation(line: 789, column: 11, scope: !3335)
!3341 = !DILocation(line: 789, column: 21, scope: !3335)
!3342 = !DILocation(line: 0, scope: !3330)
!3343 = !DILocation(line: 793, column: 7, scope: !3344)
!3344 = distinct !DILexicalBlock(scope: !3323, file: !200, line: 793, column: 7)
!3345 = !DILocation(line: 793, column: 18, scope: !3344)
!3346 = !DILocation(line: 793, column: 22, scope: !3344)
!3347 = !DILocation(line: 793, column: 29, scope: !3344)
!3348 = !DILocation(line: 793, column: 7, scope: !3323)
!3349 = !DILocation(line: 797, column: 12, scope: !3323)
!3350 = !DILocation(line: 797, column: 7, scope: !3323)
!3351 = !DILocation(line: 797, column: 10, scope: !3323)
!3352 = !DILocation(line: 799, column: 3, scope: !3323)
!3353 = !DILocation(line: 800, column: 7, scope: !3323)
!3354 = !DILocation(line: 801, column: 2, scope: !3323)
!3355 = !DILocation(line: 338, column: 4, scope: !3015)
!3356 = !DILocation(line: 774, column: 26, scope: !3318)
!3357 = distinct !{!3357, !3320, !3358}
!3358 = !DILocation(line: 801, column: 2, scope: !3319)
!3359 = !DILocation(line: 808, column: 9, scope: !3015)
!3360 = !DILocation(line: 808, column: 2, scope: !3015)
!3361 = !DILocation(line: 813, column: 1, scope: !3015)
!3362 = distinct !DISubprogram(name: "ptr_in_rodata", scope: !200, file: !200, line: 33, type: !3363, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !3365)
!3363 = !DISubroutineType(types: !3364)
!3364 = !{!145, !118}
!3365 = !{!3366}
!3366 = !DILocalVariable(name: "addr", arg: 1, scope: !3362, file: !200, line: 33, type: !118)
!3367 = !DILocation(line: 0, scope: !3362)
!3368 = !DILocation(line: 41, column: 9, scope: !3362)
!3369 = !DILocation(line: 41, column: 2, scope: !3362)
!3370 = distinct !DISubprogram(name: "linker_is_in_rodata", scope: !3371, file: !3371, line: 24, type: !143, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !3372)
!3371 = !DIFile(filename: "zephyr/include/zephyr/linker/utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3372 = !{!3373}
!3373 = !DILocalVariable(name: "addr", arg: 1, scope: !3370, file: !3371, line: 24, type: !13)
!3374 = !DILocation(line: 0, scope: !3370)
!3375 = !DILocation(line: 49, column: 30, scope: !3370)
!3376 = !DILocation(line: 49, column: 57, scope: !3370)
!3377 = !DILocation(line: 49, column: 2, scope: !3370)
!3378 = distinct !DISubprogram(name: "cbprintf_package", scope: !200, file: !200, line: 815, type: !3379, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !3381)
!3379 = !DISubroutineType(types: !3380)
!3380 = !{!107, !106, !185, !152, !118, null}
!3381 = !{!3382, !3383, !3384, !3385, !3386, !3387}
!3382 = !DILocalVariable(name: "packaged", arg: 1, scope: !3378, file: !200, line: 815, type: !106)
!3383 = !DILocalVariable(name: "len", arg: 2, scope: !3378, file: !200, line: 815, type: !185)
!3384 = !DILocalVariable(name: "flags", arg: 3, scope: !3378, file: !200, line: 815, type: !152)
!3385 = !DILocalVariable(name: "format", arg: 4, scope: !3378, file: !200, line: 816, type: !118)
!3386 = !DILocalVariable(name: "ap", scope: !3378, file: !200, line: 818, type: !3018)
!3387 = !DILocalVariable(name: "ret", scope: !3378, file: !200, line: 819, type: !107)
!3388 = !DILocation(line: 0, scope: !3378)
!3389 = !DILocation(line: 818, column: 2, scope: !3378)
!3390 = !DILocation(line: 818, column: 10, scope: !3378)
!3391 = !DILocation(line: 821, column: 2, scope: !3378)
!3392 = !DILocation(line: 822, column: 8, scope: !3378)
!3393 = !DILocation(line: 823, column: 2, scope: !3378)
!3394 = !DILocation(line: 825, column: 1, scope: !3378)
!3395 = !DILocation(line: 824, column: 2, scope: !3378)
!3396 = distinct !DISubprogram(name: "cbpprintf_external", scope: !200, file: !200, line: 827, type: !3397, scopeLine: 830, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !3407)
!3397 = !DISubroutineType(types: !3398)
!3398 = !{!107, !3399, !3403, !106, !106}
!3399 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_cb", file: !3051, line: 297, baseType: !3400)
!3400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3401, size: 32)
!3401 = !DISubroutineType(types: !3402)
!3402 = !{!107, null}
!3403 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbvprintf_external_formatter_func", file: !3051, line: 328, baseType: !3404)
!3404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3405, size: 32)
!3405 = !DISubroutineType(types: !3406)
!3406 = !{!107, !3399, !106, !118, !3018}
!3407 = !{!3408, !3409, !3410, !3411, !3412, !3413, !3419, !3420, !3421, !3422, !3423, !3424, !3425, !3426}
!3408 = !DILocalVariable(name: "out", arg: 1, scope: !3396, file: !200, line: 827, type: !3399)
!3409 = !DILocalVariable(name: "formatter", arg: 2, scope: !3396, file: !200, line: 828, type: !3403)
!3410 = !DILocalVariable(name: "ctx", arg: 3, scope: !3396, file: !200, line: 829, type: !106)
!3411 = !DILocalVariable(name: "packaged", arg: 4, scope: !3396, file: !200, line: 829, type: !106)
!3412 = !DILocalVariable(name: "buf", scope: !3396, file: !200, line: 831, type: !194)
!3413 = !DILocalVariable(name: "hdr", scope: !3396, file: !200, line: 832, type: !3414)
!3414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3415, size: 32)
!3415 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cbprintf_package_hdr_ext", file: !3051, line: 96, size: 64, elements: !3416)
!3416 = !{!3417, !3418}
!3417 = !DIDerivedType(tag: DW_TAG_member, name: "hdr", scope: !3415, file: !3051, line: 98, baseType: !3050, size: 32)
!3418 = !DIDerivedType(tag: DW_TAG_member, name: "fmt", scope: !3415, file: !3051, line: 101, baseType: !193, size: 32, offset: 32)
!3419 = !DILocalVariable(name: "s", scope: !3396, file: !200, line: 833, type: !193)
!3420 = !DILocalVariable(name: "ps", scope: !3396, file: !200, line: 833, type: !192)
!3421 = !DILocalVariable(name: "i", scope: !3396, file: !200, line: 834, type: !32)
!3422 = !DILocalVariable(name: "args_size", scope: !3396, file: !200, line: 834, type: !32)
!3423 = !DILocalVariable(name: "s_nbr", scope: !3396, file: !200, line: 834, type: !32)
!3424 = !DILocalVariable(name: "ros_nbr", scope: !3396, file: !200, line: 834, type: !32)
!3425 = !DILocalVariable(name: "rws_nbr", scope: !3396, file: !200, line: 834, type: !32)
!3426 = !DILocalVariable(name: "s_idx", scope: !3396, file: !200, line: 834, type: !32)
!3427 = !DILocation(line: 0, scope: !3396)
!3428 = !DILocation(line: 836, column: 10, scope: !3429)
!3429 = distinct !DILexicalBlock(scope: !3396, file: !200, line: 836, column: 6)
!3430 = !DILocation(line: 836, column: 6, scope: !3396)
!3431 = !DILocation(line: 842, column: 28, scope: !3396)
!3432 = !DILocation(line: 842, column: 14, scope: !3396)
!3433 = !DILocation(line: 852, column: 16, scope: !3434)
!3434 = distinct !DILexicalBlock(scope: !3435, file: !200, line: 852, column: 2)
!3435 = distinct !DILexicalBlock(scope: !3396, file: !200, line: 852, column: 2)
!3436 = !DILocation(line: 852, column: 2, scope: !3435)
!3437 = !DILocation(line: 841, column: 28, scope: !3396)
!3438 = !DILocation(line: 841, column: 14, scope: !3396)
!3439 = !DILocation(line: 841, column: 32, scope: !3396)
!3440 = !DILocation(line: 847, column: 19, scope: !3396)
!3441 = !DILocation(line: 843, column: 28, scope: !3396)
!3442 = !DILocation(line: 843, column: 14, scope: !3396)
!3443 = !DILocation(line: 847, column: 31, scope: !3396)
!3444 = !DILocation(line: 844, column: 28, scope: !3396)
!3445 = !DILocation(line: 844, column: 14, scope: !3396)
!3446 = !DILocation(line: 847, column: 45, scope: !3396)
!3447 = !DILocation(line: 847, column: 41, scope: !3396)
!3448 = !DILocation(line: 854, column: 24, scope: !3449)
!3449 = distinct !DILexicalBlock(scope: !3434, file: !200, line: 852, column: 30)
!3450 = !DILocation(line: 854, column: 11, scope: !3449)
!3451 = !DILocation(line: 855, column: 30, scope: !3449)
!3452 = !DILocation(line: 855, column: 22, scope: !3449)
!3453 = !DILocation(line: 855, column: 8, scope: !3449)
!3454 = !DILocation(line: 857, column: 7, scope: !3449)
!3455 = !DILocation(line: 859, column: 8, scope: !3449)
!3456 = !DILocation(line: 859, column: 18, scope: !3449)
!3457 = !DILocation(line: 859, column: 5, scope: !3449)
!3458 = !DILocation(line: 852, column: 26, scope: !3434)
!3459 = distinct !{!3459, !3436, !3460}
!3460 = !DILocation(line: 860, column: 2, scope: !3435)
!3461 = !DILocation(line: 863, column: 6, scope: !3396)
!3462 = !DILocation(line: 866, column: 56, scope: !3396)
!3463 = !DILocation(line: 866, column: 9, scope: !3396)
!3464 = !DILocation(line: 866, column: 2, scope: !3396)
!3465 = !DILocation(line: 867, column: 1, scope: !3396)
!3466 = distinct !DISubprogram(name: "cbprintf_via_va_list", scope: !200, file: !200, line: 179, type: !3467, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !3469)
!3467 = !DISubroutineType(types: !3468)
!3468 = !{!107, !3399, !3403, !106, !118, !106}
!3469 = !{!3470, !3471, !3472, !3473, !3474, !3475}
!3470 = !DILocalVariable(name: "out", arg: 1, scope: !3466, file: !200, line: 179, type: !3399)
!3471 = !DILocalVariable(name: "formatter", arg: 2, scope: !3466, file: !200, line: 180, type: !3403)
!3472 = !DILocalVariable(name: "ctx", arg: 3, scope: !3466, file: !200, line: 181, type: !106)
!3473 = !DILocalVariable(name: "fmt", arg: 4, scope: !3466, file: !200, line: 182, type: !118)
!3474 = !DILocalVariable(name: "buf", arg: 5, scope: !3466, file: !200, line: 182, type: !106)
!3475 = !DILocalVariable(name: "u", scope: !3466, file: !200, line: 187, type: !3476)
!3476 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3466, file: !200, line: 184, size: 32, elements: !3477)
!3477 = !{!3478, !3479}
!3478 = !DIDerivedType(tag: DW_TAG_member, name: "ap", scope: !3476, file: !200, line: 185, baseType: !3018, size: 32)
!3479 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !3476, file: !200, line: 186, baseType: !106, size: 32)
!3480 = !DILocation(line: 0, scope: !3466)
!3481 = !DILocation(line: 191, column: 9, scope: !3466)
!3482 = !DILocation(line: 191, column: 2, scope: !3466)
!3483 = distinct !DISubprogram(name: "is_ptr", scope: !200, file: !200, line: 881, type: !3484, scopeLine: 882, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !3486)
!3484 = !DISubroutineType(types: !3485)
!3485 = !{!145, !118, !107}
!3486 = !{!3487, !3488, !3489, !3490, !3491}
!3487 = !DILocalVariable(name: "fmt", arg: 1, scope: !3483, file: !200, line: 881, type: !118)
!3488 = !DILocalVariable(name: "n", arg: 2, scope: !3483, file: !200, line: 881, type: !107)
!3489 = !DILocalVariable(name: "c", scope: !3483, file: !200, line: 883, type: !120)
!3490 = !DILocalVariable(name: "mod", scope: !3483, file: !200, line: 884, type: !145)
!3491 = !DILocalVariable(name: "cnt", scope: !3483, file: !200, line: 885, type: !107)
!3492 = !DILocation(line: 0, scope: !3483)
!3493 = !DILocation(line: 887, column: 14, scope: !3483)
!3494 = !DILocation(line: 887, column: 22, scope: !3483)
!3495 = !DILocation(line: 887, column: 2, scope: !3483)
!3496 = !DILocation(line: 887, column: 18, scope: !3483)
!3497 = !DILocation(line: 888, column: 7, scope: !3498)
!3498 = distinct !DILexicalBlock(scope: !3483, file: !200, line: 887, column: 31)
!3499 = !DILocation(line: 889, column: 12, scope: !3500)
!3500 = distinct !DILexicalBlock(scope: !3501, file: !200, line: 889, column: 8)
!3501 = distinct !DILexicalBlock(scope: !3502, file: !200, line: 888, column: 12)
!3502 = distinct !DILexicalBlock(scope: !3498, file: !200, line: 888, column: 7)
!3503 = !DILocation(line: 889, column: 8, scope: !3501)
!3504 = !DILocation(line: 890, column: 11, scope: !3505)
!3505 = distinct !DILexicalBlock(scope: !3506, file: !200, line: 890, column: 9)
!3506 = distinct !DILexicalBlock(scope: !3500, file: !200, line: 889, column: 18)
!3507 = !DILocation(line: 890, column: 9, scope: !3506)
!3508 = !DILocation(line: 892, column: 16, scope: !3509)
!3509 = distinct !DILexicalBlock(scope: !3505, file: !200, line: 892, column: 16)
!3510 = !DILocation(line: 892, column: 16, scope: !3505)
!3511 = !DILocation(line: 895, column: 15, scope: !3512)
!3512 = distinct !DILexicalBlock(scope: !3500, file: !200, line: 895, column: 15)
!3513 = !DILocation(line: 895, column: 15, scope: !3500)
!3514 = !DILocation(line: 900, column: 9, scope: !3515)
!3515 = distinct !DILexicalBlock(scope: !3498, file: !200, line: 900, column: 7)
!3516 = !DILocation(line: 900, column: 7, scope: !3498)
!3517 = distinct !{!3517, !3495, !3518}
!3518 = !DILocation(line: 903, column: 2, scope: !3483)
!3519 = !DILocation(line: 906, column: 1, scope: !3483)
!3520 = distinct !DISubprogram(name: "is_fmt_spec", scope: !200, file: !200, line: 873, type: !3521, scopeLine: 874, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !3523)
!3521 = !DISubroutineType(types: !3522)
!3522 = !{!145, !120}
!3523 = !{!3524}
!3524 = !DILocalVariable(name: "c", arg: 1, scope: !3520, file: !200, line: 873, type: !120)
!3525 = !DILocation(line: 0, scope: !3520)
!3526 = !DILocation(line: 875, column: 19, scope: !3520)
!3527 = !DILocation(line: 875, column: 2, scope: !3520)
!3528 = distinct !DISubprogram(name: "cbprintf_package_convert", scope: !200, file: !200, line: 908, type: !3529, scopeLine: 915, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !3535)
!3529 = !DISubroutineType(types: !3530)
!3530 = !{!107, !106, !185, !3531, !106, !152, !2557, !185}
!3531 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_convert_cb", file: !3051, line: 308, baseType: !3532)
!3532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3533, size: 32)
!3533 = !DISubroutineType(types: !3534)
!3534 = !{!107, !13, !185, !106}
!3535 = !{!3536, !3537, !3538, !3539, !3540, !3541, !3542, !3543, !3544, !3545, !3546, !3547, !3548, !3549, !3550, !3551, !3553, !3554, !3555, !3556, !3557, !3563, !3566, !3567, !3568, !3570, !3573, !3574, !3575, !3576, !3577, !3578, !3579, !3580, !3581, !3582, !3583, !3584, !3586, !3589, !3590, !3591, !3592, !3593, !3594, !3596, !3599, !3600, !3601}
!3536 = !DILocalVariable(name: "in_packaged", arg: 1, scope: !3528, file: !200, line: 908, type: !106)
!3537 = !DILocalVariable(name: "in_len", arg: 2, scope: !3528, file: !200, line: 909, type: !185)
!3538 = !DILocalVariable(name: "cb", arg: 3, scope: !3528, file: !200, line: 910, type: !3531)
!3539 = !DILocalVariable(name: "ctx", arg: 4, scope: !3528, file: !200, line: 911, type: !106)
!3540 = !DILocalVariable(name: "flags", arg: 5, scope: !3528, file: !200, line: 912, type: !152)
!3541 = !DILocalVariable(name: "strl", arg: 6, scope: !3528, file: !200, line: 913, type: !2557)
!3542 = !DILocalVariable(name: "strl_len", arg: 7, scope: !3528, file: !200, line: 914, type: !185)
!3543 = !DILocalVariable(name: "buf", scope: !3528, file: !200, line: 918, type: !194)
!3544 = !DILocalVariable(name: "buf32", scope: !3528, file: !200, line: 919, type: !1403)
!3545 = !DILocalVariable(name: "args_size", scope: !3528, file: !200, line: 920, type: !32)
!3546 = !DILocalVariable(name: "ros_nbr", scope: !3528, file: !200, line: 920, type: !32)
!3547 = !DILocalVariable(name: "rws_nbr", scope: !3528, file: !200, line: 920, type: !32)
!3548 = !DILocalVariable(name: "fmt_present", scope: !3528, file: !200, line: 921, type: !145)
!3549 = !DILocalVariable(name: "rw_cpy", scope: !3528, file: !200, line: 922, type: !145)
!3550 = !DILocalVariable(name: "ro_cpy", scope: !3528, file: !200, line: 923, type: !145)
!3551 = !DILocalVariable(name: "in_desc", scope: !3528, file: !200, line: 924, type: !3552)
!3552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3054, size: 32)
!3553 = !DILocalVariable(name: "out_len", scope: !3528, file: !200, line: 960, type: !107)
!3554 = !DILocalVariable(name: "fmt", scope: !3528, file: !200, line: 965, type: !118)
!3555 = !DILocalVariable(name: "str_pos", scope: !3528, file: !200, line: 966, type: !194)
!3556 = !DILocalVariable(name: "strl_cnt", scope: !3528, file: !200, line: 967, type: !185)
!3557 = !DILocalVariable(name: "i", scope: !3558, file: !200, line: 973, type: !107)
!3558 = distinct !DILexicalBlock(scope: !3559, file: !200, line: 973, column: 4)
!3559 = distinct !DILexicalBlock(scope: !3560, file: !200, line: 972, column: 15)
!3560 = distinct !DILexicalBlock(scope: !3561, file: !200, line: 972, column: 7)
!3561 = distinct !DILexicalBlock(scope: !3562, file: !200, line: 970, column: 18)
!3562 = distinct !DILexicalBlock(scope: !3528, file: !200, line: 970, column: 6)
!3563 = !DILocalVariable(name: "str", scope: !3564, file: !200, line: 974, type: !118)
!3564 = distinct !DILexicalBlock(scope: !3565, file: !200, line: 973, column: 38)
!3565 = distinct !DILexicalBlock(scope: !3558, file: !200, line: 973, column: 4)
!3566 = !DILocalVariable(name: "len", scope: !3564, file: !200, line: 975, type: !107)
!3567 = !DILocalVariable(name: "drop_ro_str_pos", scope: !3561, file: !200, line: 990, type: !145)
!3568 = !DILocalVariable(name: "i", scope: !3569, file: !200, line: 995, type: !107)
!3569 = distinct !DILexicalBlock(scope: !3561, file: !200, line: 995, column: 3)
!3570 = !DILocalVariable(name: "arg_idx", scope: !3571, file: !200, line: 996, type: !195)
!3571 = distinct !DILexicalBlock(scope: !3572, file: !200, line: 995, column: 37)
!3572 = distinct !DILexicalBlock(scope: !3569, file: !200, line: 995, column: 3)
!3573 = !DILocalVariable(name: "arg_pos", scope: !3571, file: !200, line: 997, type: !195)
!3574 = !DILocalVariable(name: "str", scope: !3571, file: !200, line: 998, type: !118)
!3575 = !DILocalVariable(name: "is_ro", scope: !3571, file: !200, line: 999, type: !145)
!3576 = !DILocalVariable(name: "len", scope: !3571, file: !200, line: 1000, type: !107)
!3577 = !DILocalVariable(name: "out_desc", scope: !3528, file: !200, line: 1038, type: !3054)
!3578 = !DILocalVariable(name: "cpy_str_pos", scope: !3528, file: !200, line: 1040, type: !3036)
!3579 = !DILocalVariable(name: "keep_str_pos", scope: !3528, file: !200, line: 1042, type: !3036)
!3580 = !DILocalVariable(name: "scpy_cnt", scope: !3528, file: !200, line: 1043, type: !195)
!3581 = !DILocalVariable(name: "keep_cnt", scope: !3528, file: !200, line: 1044, type: !195)
!3582 = !DILocalVariable(name: "dst", scope: !3528, file: !200, line: 1045, type: !194)
!3583 = !DILocalVariable(name: "rv", scope: !3528, file: !200, line: 1046, type: !107)
!3584 = !DILocalVariable(name: "i", scope: !3585, file: !200, line: 1074, type: !107)
!3585 = distinct !DILexicalBlock(scope: !3528, file: !200, line: 1074, column: 2)
!3586 = !DILocalVariable(name: "arg_idx", scope: !3587, file: !200, line: 1075, type: !195)
!3587 = distinct !DILexicalBlock(scope: !3588, file: !200, line: 1074, column: 36)
!3588 = distinct !DILexicalBlock(scope: !3585, file: !200, line: 1074, column: 2)
!3589 = !DILocalVariable(name: "arg_pos", scope: !3587, file: !200, line: 1076, type: !195)
!3590 = !DILocalVariable(name: "str", scope: !3587, file: !200, line: 1077, type: !118)
!3591 = !DILocalVariable(name: "is_ro", scope: !3587, file: !200, line: 1078, type: !145)
!3592 = !DILocalVariable(name: "in_desc_backup", scope: !3528, file: !200, line: 1114, type: !3054)
!3593 = !DILocalVariable(name: "strs_len", scope: !3528, file: !200, line: 1134, type: !185)
!3594 = !DILocalVariable(name: "i", scope: !3595, file: !200, line: 1143, type: !107)
!3595 = distinct !DILexicalBlock(scope: !3528, file: !200, line: 1143, column: 2)
!3596 = !DILocalVariable(name: "loc", scope: !3597, file: !200, line: 1144, type: !195)
!3597 = distinct !DILexicalBlock(scope: !3598, file: !200, line: 1143, column: 37)
!3598 = distinct !DILexicalBlock(scope: !3595, file: !200, line: 1143, column: 2)
!3599 = !DILocalVariable(name: "str", scope: !3597, file: !200, line: 1145, type: !118)
!3600 = !DILocalVariable(name: "str_len", scope: !3597, file: !200, line: 1146, type: !197)
!3601 = !DILabel(scope: !3602, name: "calculate_string_length", file: !200, line: 1021)
!3602 = distinct !DILexicalBlock(scope: !3603, file: !200, line: 1020, column: 56)
!3603 = distinct !DILexicalBlock(scope: !3604, file: !200, line: 1020, column: 15)
!3604 = distinct !DILexicalBlock(scope: !3571, file: !200, line: 1014, column: 8)
!3605 = !DILocation(line: 0, scope: !3528)
!3606 = !DILocation(line: 916, column: 2, scope: !3607)
!3607 = distinct !DILexicalBlock(scope: !3608, file: !200, line: 916, column: 2)
!3608 = distinct !DILexicalBlock(scope: !3528, file: !200, line: 916, column: 2)
!3609 = !DILocation(line: 916, column: 2, scope: !3608)
!3610 = !DILocation(line: 916, column: 2, scope: !3611)
!3611 = distinct !DILexicalBlock(scope: !3607, file: !200, line: 916, column: 2)
!3612 = !DILocation(line: 919, column: 20, scope: !3528)
!3613 = !DILocation(line: 921, column: 27, scope: !3528)
!3614 = !DILocation(line: 921, column: 21, scope: !3528)
!3615 = !DILocation(line: 926, column: 18, scope: !3528)
!3616 = !DILocation(line: 926, column: 11, scope: !3528)
!3617 = !DILocation(line: 926, column: 34, scope: !3528)
!3618 = !DILocation(line: 931, column: 21, scope: !3528)
!3619 = !DILocation(line: 931, column: 12, scope: !3528)
!3620 = !DILocation(line: 932, column: 11, scope: !3528)
!3621 = !DILocation(line: 932, column: 19, scope: !3528)
!3622 = !DILocation(line: 938, column: 21, scope: !3528)
!3623 = !DILocation(line: 938, column: 12, scope: !3528)
!3624 = !DILocation(line: 939, column: 19, scope: !3528)
!3625 = !DILocation(line: 939, column: 23, scope: !3528)
!3626 = !DILocation(line: 946, column: 14, scope: !3627)
!3627 = distinct !DILexicalBlock(scope: !3528, file: !200, line: 946, column: 6)
!3628 = !DILocation(line: 947, column: 7, scope: !3629)
!3629 = distinct !DILexicalBlock(scope: !3630, file: !200, line: 947, column: 7)
!3630 = distinct !DILexicalBlock(scope: !3627, file: !200, line: 946, column: 26)
!3631 = !DILocation(line: 947, column: 7, scope: !3630)
!3632 = !DILocation(line: 948, column: 4, scope: !3633)
!3633 = distinct !DILexicalBlock(scope: !3629, file: !200, line: 947, column: 11)
!3634 = !DILocation(line: 949, column: 3, scope: !3633)
!3635 = !DILocation(line: 958, column: 23, scope: !3528)
!3636 = !DILocation(line: 958, column: 14, scope: !3528)
!3637 = !DILocation(line: 958, column: 27, scope: !3528)
!3638 = !DILocation(line: 965, column: 41, scope: !3528)
!3639 = !DILocation(line: 965, column: 20, scope: !3528)
!3640 = !DILocation(line: 966, column: 22, scope: !3528)
!3641 = !DILocation(line: 970, column: 9, scope: !3562)
!3642 = !DILocation(line: 970, column: 6, scope: !3528)
!3643 = !DILocation(line: 972, column: 7, scope: !3561)
!3644 = !DILocation(line: 0, scope: !3558)
!3645 = !DILocation(line: 973, column: 4, scope: !3558)
!3646 = !DILocation(line: 974, column: 46, scope: !3564)
!3647 = !DILocation(line: 974, column: 40, scope: !3564)
!3648 = !DILocation(line: 974, column: 23, scope: !3564)
!3649 = !DILocation(line: 0, scope: !3564)
!3650 = !DILocation(line: 975, column: 15, scope: !3564)
!3651 = !DILocation(line: 978, column: 14, scope: !3652)
!3652 = distinct !DILexicalBlock(scope: !3564, file: !200, line: 978, column: 9)
!3653 = !DILocation(line: 979, column: 25, scope: !3654)
!3654 = distinct !DILexicalBlock(scope: !3652, file: !200, line: 978, column: 38)
!3655 = !DILocation(line: 979, column: 19, scope: !3654)
!3656 = !DILocation(line: 979, column: 6, scope: !3654)
!3657 = !DILocation(line: 979, column: 23, scope: !3654)
!3658 = !DILocation(line: 980, column: 5, scope: !3654)
!3659 = !DILocation(line: 981, column: 13, scope: !3564)
!3660 = !DILocation(line: 982, column: 12, scope: !3564)
!3661 = !DILocation(line: 973, column: 34, scope: !3565)
!3662 = !DILocation(line: 973, column: 22, scope: !3565)
!3663 = distinct !{!3663, !3645, !3664}
!3664 = !DILocation(line: 983, column: 4, scope: !3558)
!3665 = !DILocation(line: 985, column: 16, scope: !3666)
!3666 = distinct !DILexicalBlock(scope: !3667, file: !200, line: 985, column: 8)
!3667 = distinct !DILexicalBlock(scope: !3560, file: !200, line: 984, column: 10)
!3668 = !DILocation(line: 967, column: 9, scope: !3528)
!3669 = !DILocation(line: 971, column: 11, scope: !3561)
!3670 = !DILocation(line: 0, scope: !3561)
!3671 = !DILocation(line: 0, scope: !3569)
!3672 = !DILocation(line: 995, column: 21, scope: !3572)
!3673 = !DILocation(line: 995, column: 3, scope: !3569)
!3674 = !DILocation(line: 990, column: 34, scope: !3561)
!3675 = !DILocation(line: 990, column: 26, scope: !3561)
!3676 = !DILocation(line: 996, column: 30, scope: !3571)
!3677 = !DILocation(line: 0, scope: !3571)
!3678 = !DILocation(line: 997, column: 30, scope: !3571)
!3679 = !DILocation(line: 997, column: 22, scope: !3571)
!3680 = !DILocation(line: 998, column: 39, scope: !3571)
!3681 = !DILocation(line: 998, column: 22, scope: !3571)
!3682 = !DILocation(line: 999, column: 17, scope: !3571)
!3683 = !DILocation(line: 1002, column: 20, scope: !3684)
!3684 = distinct !DILexicalBlock(scope: !3571, file: !200, line: 1002, column: 8)
!3685 = !DILocation(line: 996, column: 22, scope: !3571)
!3686 = !DILocation(line: 1002, column: 35, scope: !3684)
!3687 = !DILocation(line: 1002, column: 23, scope: !3684)
!3688 = !DILocation(line: 1002, column: 8, scope: !3571)
!3689 = !DILocation(line: 1003, column: 5, scope: !3690)
!3690 = distinct !DILexicalBlock(scope: !3691, file: !200, line: 1003, column: 5)
!3691 = distinct !DILexicalBlock(scope: !3692, file: !200, line: 1003, column: 5)
!3692 = distinct !DILexicalBlock(scope: !3693, file: !200, line: 1003, column: 5)
!3693 = distinct !DILexicalBlock(scope: !3694, file: !200, line: 1003, column: 5)
!3694 = distinct !DILexicalBlock(scope: !3684, file: !200, line: 1002, column: 45)
!3695 = !DILocation(line: 1010, column: 13, scope: !3694)
!3696 = !DILocation(line: 1011, column: 5, scope: !3694)
!3697 = !DILocation(line: 1014, column: 8, scope: !3571)
!3698 = !DILocation(line: 1015, column: 9, scope: !3699)
!3699 = distinct !DILexicalBlock(scope: !3604, file: !200, line: 1014, column: 15)
!3700 = !DILocation(line: 1018, column: 14, scope: !3701)
!3701 = distinct !DILexicalBlock(scope: !3702, file: !200, line: 1017, column: 12)
!3702 = distinct !DILexicalBlock(scope: !3699, file: !200, line: 1015, column: 9)
!3703 = !DILocation(line: 1020, column: 4, scope: !3699)
!3704 = !DILocation(line: 1020, column: 15, scope: !3604)
!3705 = !DILocation(line: 1021, column: 1, scope: !3602)
!3706 = !DILocation(line: 1022, column: 11, scope: !3602)
!3707 = !DILocation(line: 1025, column: 14, scope: !3708)
!3708 = distinct !DILexicalBlock(scope: !3602, file: !200, line: 1025, column: 9)
!3709 = !DILocation(line: 1026, column: 25, scope: !3710)
!3710 = distinct !DILexicalBlock(scope: !3708, file: !200, line: 1025, column: 38)
!3711 = !DILocation(line: 1026, column: 19, scope: !3710)
!3712 = !DILocation(line: 1026, column: 6, scope: !3710)
!3713 = !DILocation(line: 1026, column: 23, scope: !3710)
!3714 = !DILocation(line: 1027, column: 5, scope: !3710)
!3715 = !DILocation(line: 1031, column: 21, scope: !3602)
!3716 = !DILocation(line: 1031, column: 13, scope: !3602)
!3717 = !DILocation(line: 1032, column: 4, scope: !3602)
!3718 = !DILocation(line: 995, column: 33, scope: !3572)
!3719 = distinct !{!3719, !3673, !3720}
!3720 = !DILocation(line: 1033, column: 3, scope: !3569)
!3721 = !DILocation(line: 1040, column: 10, scope: !3528)
!3722 = !DILocation(line: 1042, column: 10, scope: !3528)
!3723 = !DILocation(line: 1052, column: 6, scope: !3528)
!3724 = !DILocation(line: 1055, column: 9, scope: !3725)
!3725 = distinct !DILexicalBlock(scope: !3726, file: !200, line: 1052, column: 14)
!3726 = distinct !DILexicalBlock(scope: !3528, file: !200, line: 1052, column: 6)
!3727 = !DILocation(line: 1056, column: 2, scope: !3725)
!3728 = !DILocation(line: 1056, column: 21, scope: !3729)
!3729 = distinct !DILexicalBlock(scope: !3726, file: !200, line: 1056, column: 13)
!3730 = !DILocation(line: 1066, column: 3, scope: !3731)
!3731 = distinct !DILexicalBlock(scope: !3732, file: !200, line: 1065, column: 11)
!3732 = distinct !DILexicalBlock(scope: !3528, file: !200, line: 1065, column: 6)
!3733 = !DILocation(line: 1067, column: 2, scope: !3731)
!3734 = !DILocation(line: 1068, column: 10, scope: !3528)
!3735 = !DILocation(line: 0, scope: !3585)
!3736 = !DILocation(line: 1074, column: 20, scope: !3588)
!3737 = !DILocation(line: 1074, column: 2, scope: !3585)
!3738 = !DILocation(line: 1110, column: 24, scope: !3528)
!3739 = !DILocation(line: 1053, column: 12, scope: !3725)
!3740 = !DILocation(line: 1054, column: 12, scope: !3725)
!3741 = !DILocation(line: 1108, column: 30, scope: !3528)
!3742 = !DILocation(line: 1108, column: 40, scope: !3528)
!3743 = !DILocation(line: 1108, column: 38, scope: !3528)
!3744 = !DILocation(line: 1109, column: 31, scope: !3528)
!3745 = !DILocation(line: 1109, column: 24, scope: !3528)
!3746 = !DILocation(line: 1110, column: 31, scope: !3528)
!3747 = !DILocation(line: 1114, column: 31, scope: !3528)
!3748 = !DILocation(line: 1114, column: 48, scope: !3528)
!3749 = !DILocation(line: 1115, column: 13, scope: !3528)
!3750 = !DILocation(line: 1118, column: 7, scope: !3528)
!3751 = !DILocation(line: 1119, column: 9, scope: !3752)
!3752 = distinct !DILexicalBlock(scope: !3528, file: !200, line: 1119, column: 6)
!3753 = !DILocation(line: 1119, column: 6, scope: !3528)
!3754 = !DILocation(line: 1075, column: 29, scope: !3587)
!3755 = !DILocation(line: 1075, column: 21, scope: !3587)
!3756 = !DILocation(line: 0, scope: !3587)
!3757 = !DILocation(line: 1076, column: 29, scope: !3587)
!3758 = !DILocation(line: 1076, column: 21, scope: !3587)
!3759 = !DILocation(line: 1077, column: 38, scope: !3587)
!3760 = !DILocation(line: 1077, column: 21, scope: !3587)
!3761 = !DILocation(line: 1078, column: 16, scope: !3587)
!3762 = !DILocation(line: 1080, column: 19, scope: !3763)
!3763 = distinct !DILexicalBlock(scope: !3587, file: !200, line: 1080, column: 7)
!3764 = !DILocation(line: 1080, column: 34, scope: !3763)
!3765 = !DILocation(line: 1080, column: 22, scope: !3763)
!3766 = !DILocation(line: 1080, column: 7, scope: !3587)
!3767 = !DILocation(line: 1084, column: 7, scope: !3587)
!3768 = !DILocation(line: 1085, column: 8, scope: !3769)
!3769 = distinct !DILexicalBlock(scope: !3770, file: !200, line: 1084, column: 14)
!3770 = distinct !DILexicalBlock(scope: !3587, file: !200, line: 1084, column: 7)
!3771 = !DILocation(line: 1086, column: 5, scope: !3772)
!3772 = distinct !DILexicalBlock(scope: !3773, file: !200, line: 1086, column: 5)
!3773 = distinct !DILexicalBlock(scope: !3774, file: !200, line: 1086, column: 5)
!3774 = distinct !DILexicalBlock(scope: !3775, file: !200, line: 1085, column: 49)
!3775 = distinct !DILexicalBlock(scope: !3769, file: !200, line: 1085, column: 8)
!3776 = !DILocation(line: 1086, column: 5, scope: !3773)
!3777 = !DILocation(line: 1086, column: 5, scope: !3778)
!3778 = distinct !DILexicalBlock(scope: !3772, file: !200, line: 1086, column: 5)
!3779 = !DILocation(line: 1087, column: 25, scope: !3774)
!3780 = !DILocation(line: 1087, column: 5, scope: !3774)
!3781 = !DILocation(line: 1088, column: 4, scope: !3774)
!3782 = !DILocation(line: 1088, column: 15, scope: !3775)
!3783 = !DILocation(line: 1089, column: 5, scope: !3784)
!3784 = distinct !DILexicalBlock(scope: !3785, file: !200, line: 1089, column: 5)
!3785 = distinct !DILexicalBlock(scope: !3786, file: !200, line: 1089, column: 5)
!3786 = distinct !DILexicalBlock(scope: !3787, file: !200, line: 1088, column: 61)
!3787 = distinct !DILexicalBlock(scope: !3775, file: !200, line: 1088, column: 15)
!3788 = !DILocation(line: 1089, column: 5, scope: !3785)
!3789 = !DILocation(line: 1089, column: 5, scope: !3790)
!3790 = distinct !DILexicalBlock(scope: !3784, file: !200, line: 1089, column: 5)
!3791 = !DILocation(line: 1090, column: 26, scope: !3786)
!3792 = !DILocation(line: 1090, column: 5, scope: !3786)
!3793 = !DILocation(line: 1091, column: 4, scope: !3786)
!3794 = !DILocation(line: 1095, column: 8, scope: !3795)
!3795 = distinct !DILexicalBlock(scope: !3770, file: !200, line: 1094, column: 10)
!3796 = !DILocation(line: 1096, column: 5, scope: !3797)
!3797 = distinct !DILexicalBlock(scope: !3798, file: !200, line: 1096, column: 5)
!3798 = distinct !DILexicalBlock(scope: !3799, file: !200, line: 1096, column: 5)
!3799 = distinct !DILexicalBlock(scope: !3800, file: !200, line: 1095, column: 49)
!3800 = distinct !DILexicalBlock(scope: !3795, file: !200, line: 1095, column: 8)
!3801 = !DILocation(line: 1096, column: 5, scope: !3798)
!3802 = !DILocation(line: 1096, column: 5, scope: !3803)
!3803 = distinct !DILexicalBlock(scope: !3797, file: !200, line: 1096, column: 5)
!3804 = !DILocation(line: 1097, column: 25, scope: !3799)
!3805 = !DILocation(line: 1097, column: 5, scope: !3799)
!3806 = !DILocation(line: 1098, column: 4, scope: !3799)
!3807 = !DILocation(line: 1099, column: 5, scope: !3808)
!3808 = distinct !DILexicalBlock(scope: !3809, file: !200, line: 1099, column: 5)
!3809 = distinct !DILexicalBlock(scope: !3810, file: !200, line: 1099, column: 5)
!3810 = distinct !DILexicalBlock(scope: !3800, file: !200, line: 1098, column: 11)
!3811 = !DILocation(line: 1099, column: 5, scope: !3809)
!3812 = !DILocation(line: 1099, column: 5, scope: !3813)
!3813 = distinct !DILexicalBlock(scope: !3808, file: !200, line: 1099, column: 5)
!3814 = !DILocation(line: 1100, column: 26, scope: !3810)
!3815 = !DILocation(line: 1100, column: 5, scope: !3810)
!3816 = !DILocation(line: 1100, column: 30, scope: !3810)
!3817 = !DILocation(line: 1101, column: 26, scope: !3810)
!3818 = !DILocation(line: 1101, column: 5, scope: !3810)
!3819 = !DILocation(line: 0, scope: !3770)
!3820 = !DILocation(line: 1074, column: 32, scope: !3588)
!3821 = distinct !{!3821, !3737, !3822}
!3822 = !DILocation(line: 1104, column: 2, scope: !3585)
!3823 = !DILocation(line: 1124, column: 13, scope: !3528)
!3824 = !DILocation(line: 1127, column: 10, scope: !3528)
!3825 = !DILocation(line: 1127, column: 7, scope: !3528)
!3826 = !DILocation(line: 1128, column: 9, scope: !3827)
!3827 = distinct !DILexicalBlock(scope: !3528, file: !200, line: 1128, column: 6)
!3828 = !DILocation(line: 1128, column: 6, scope: !3528)
!3829 = !DILocation(line: 1134, column: 27, scope: !3528)
!3830 = !DILocation(line: 1136, column: 7, scope: !3528)
!3831 = !DILocation(line: 1137, column: 9, scope: !3832)
!3832 = distinct !DILexicalBlock(scope: !3528, file: !200, line: 1137, column: 6)
!3833 = !DILocation(line: 1137, column: 6, scope: !3528)
!3834 = !DILocation(line: 1131, column: 10, scope: !3528)
!3835 = !DILocation(line: 1140, column: 10, scope: !3528)
!3836 = !DILocation(line: 0, scope: !3595)
!3837 = !DILocation(line: 1143, column: 20, scope: !3598)
!3838 = !DILocation(line: 1143, column: 2, scope: !3595)
!3839 = !DILocation(line: 1144, column: 3, scope: !3597)
!3840 = !DILocation(line: 1144, column: 17, scope: !3597)
!3841 = !DILocation(line: 0, scope: !3597)
!3842 = !DILocation(line: 1144, column: 11, scope: !3597)
!3843 = !DILocation(line: 1145, column: 38, scope: !3597)
!3844 = !DILocation(line: 1145, column: 21, scope: !3597)
!3845 = !DILocation(line: 1146, column: 22, scope: !3597)
!3846 = !DILocation(line: 1146, column: 29, scope: !3597)
!3847 = !DILocation(line: 1148, column: 8, scope: !3597)
!3848 = !DILocation(line: 1149, column: 10, scope: !3849)
!3849 = distinct !DILexicalBlock(scope: !3597, file: !200, line: 1149, column: 7)
!3850 = !DILocation(line: 1149, column: 7, scope: !3597)
!3851 = !DILocation(line: 1154, column: 8, scope: !3597)
!3852 = !DILocation(line: 1155, column: 10, scope: !3853)
!3853 = distinct !DILexicalBlock(scope: !3597, file: !200, line: 1155, column: 7)
!3854 = !DILocation(line: 1155, column: 7, scope: !3597)
!3855 = !DILocation(line: 1159, column: 2, scope: !3598)
!3856 = !DILocation(line: 1152, column: 11, scope: !3597)
!3857 = !DILocation(line: 1158, column: 11, scope: !3597)
!3858 = !DILocation(line: 1143, column: 33, scope: !3598)
!3859 = distinct !{!3859, !3838, !3860}
!3860 = !DILocation(line: 1159, column: 2, scope: !3595)
!3861 = !DILocation(line: 1162, column: 8, scope: !3528)
!3862 = !DILocation(line: 1164, column: 2, scope: !3528)
!3863 = !DILocation(line: 1165, column: 1, scope: !3528)
!3864 = distinct !DISubprogram(name: "get_package_len", scope: !200, file: !200, line: 196, type: !3865, scopeLine: 197, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !3867)
!3865 = !DISubroutineType(types: !3866)
!3866 = !{!185, !106}
!3867 = !{!3868, !3869, !3870, !3871, !3872, !3873, !3874}
!3868 = !DILocalVariable(name: "packaged", arg: 1, scope: !3864, file: !200, line: 196, type: !106)
!3869 = !DILocalVariable(name: "buf", scope: !3864, file: !200, line: 200, type: !194)
!3870 = !DILocalVariable(name: "start", scope: !3864, file: !200, line: 201, type: !194)
!3871 = !DILocalVariable(name: "args_size", scope: !3864, file: !200, line: 202, type: !32)
!3872 = !DILocalVariable(name: "s_nbr", scope: !3864, file: !200, line: 202, type: !32)
!3873 = !DILocalVariable(name: "ros_nbr", scope: !3864, file: !200, line: 202, type: !32)
!3874 = !DILocalVariable(name: "i", scope: !3875, file: !200, line: 215, type: !107)
!3875 = distinct !DILexicalBlock(scope: !3864, file: !200, line: 215, column: 2)
!3876 = !DILocation(line: 0, scope: !3864)
!3877 = !DILocation(line: 198, column: 2, scope: !3878)
!3878 = distinct !DILexicalBlock(scope: !3879, file: !200, line: 198, column: 2)
!3879 = distinct !DILexicalBlock(scope: !3864, file: !200, line: 198, column: 2)
!3880 = !DILocation(line: 198, column: 2, scope: !3879)
!3881 = !DILocation(line: 198, column: 2, scope: !3882)
!3882 = distinct !DILexicalBlock(scope: !3878, file: !200, line: 198, column: 2)
!3883 = !DILocation(line: 204, column: 14, scope: !3864)
!3884 = !DILocation(line: 204, column: 21, scope: !3864)
!3885 = !DILocation(line: 205, column: 14, scope: !3864)
!3886 = !DILocation(line: 206, column: 14, scope: !3864)
!3887 = !DILocation(line: 209, column: 6, scope: !3864)
!3888 = !DILocation(line: 212, column: 6, scope: !3864)
!3889 = !DILocation(line: 0, scope: !3875)
!3890 = !DILocation(line: 215, column: 20, scope: !3891)
!3891 = distinct !DILexicalBlock(scope: !3875, file: !200, line: 215, column: 2)
!3892 = !DILocation(line: 215, column: 2, scope: !3875)
!3893 = !DILocation(line: 220, column: 33, scope: !3864)
!3894 = !DILocation(line: 220, column: 2, scope: !3864)
!3895 = !DILocation(line: 216, column: 6, scope: !3896)
!3896 = distinct !DILexicalBlock(scope: !3891, file: !200, line: 215, column: 34)
!3897 = !DILocation(line: 217, column: 10, scope: !3896)
!3898 = !DILocation(line: 217, column: 36, scope: !3896)
!3899 = !DILocation(line: 217, column: 7, scope: !3896)
!3900 = !DILocation(line: 215, column: 30, scope: !3891)
!3901 = distinct !{!3901, !3892, !3902}
!3902 = !DILocation(line: 218, column: 2, scope: !3875)
!3903 = distinct !DISubprogram(name: "append_string", scope: !200, file: !200, line: 223, type: !3904, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !3906)
!3904 = !DISubroutineType(types: !3905)
!3905 = !{!107, !3531, !106, !118, !197}
!3906 = !{!3907, !3908, !3909, !3910}
!3907 = !DILocalVariable(name: "cb", arg: 1, scope: !3903, file: !200, line: 223, type: !3531)
!3908 = !DILocalVariable(name: "ctx", arg: 2, scope: !3903, file: !200, line: 223, type: !106)
!3909 = !DILocalVariable(name: "str", arg: 3, scope: !3903, file: !200, line: 223, type: !118)
!3910 = !DILocalVariable(name: "strl", arg: 4, scope: !3903, file: !200, line: 223, type: !197)
!3911 = !DILocation(line: 0, scope: !3903)
!3912 = !DILocation(line: 225, column: 9, scope: !3913)
!3913 = distinct !DILexicalBlock(scope: !3903, file: !200, line: 225, column: 6)
!3914 = !DILocation(line: 225, column: 6, scope: !3903)
!3915 = !DILocation(line: 226, column: 14, scope: !3916)
!3916 = distinct !DILexicalBlock(scope: !3913, file: !200, line: 225, column: 18)
!3917 = !DILocation(line: 226, column: 12, scope: !3916)
!3918 = !DILocation(line: 226, column: 3, scope: !3916)
!3919 = !DILocation(line: 229, column: 14, scope: !3903)
!3920 = !DILocation(line: 229, column: 9, scope: !3903)
!3921 = !DILocation(line: 229, column: 27, scope: !3903)
!3922 = !DILocation(line: 229, column: 39, scope: !3903)
!3923 = !DILocation(line: 230, column: 17, scope: !3903)
!3924 = !DILocation(line: 230, column: 9, scope: !3903)
!3925 = !DILocation(line: 230, column: 2, scope: !3903)
!3926 = !DILocation(line: 231, column: 1, scope: !3903)
!3927 = distinct !DISubprogram(name: "arch_printk_char_out", scope: !212, file: !212, line: 45, type: !214, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !3928)
!3928 = !{!3929}
!3929 = !DILocalVariable(name: "c", arg: 1, scope: !3927, file: !212, line: 45, type: !107)
!3930 = !DILocation(line: 0, scope: !3927)
!3931 = !DILocation(line: 50, column: 2, scope: !3927)
!3932 = distinct !DISubprogram(name: "__printk_hook_install", scope: !212, file: !212, line: 63, type: !3933, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !3935)
!3933 = !DISubroutineType(types: !3934)
!3934 = !{null, !213}
!3935 = !{!3936}
!3936 = !DILocalVariable(name: "fn", arg: 1, scope: !3932, file: !212, line: 63, type: !213)
!3937 = !DILocation(line: 0, scope: !3932)
!3938 = !DILocation(line: 65, column: 12, scope: !3932)
!3939 = !DILocation(line: 66, column: 1, scope: !3932)
!3940 = distinct !DISubprogram(name: "__printk_get_hook", scope: !212, file: !212, line: 76, type: !125, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !1949)
!3941 = !DILocation(line: 78, column: 9, scope: !3940)
!3942 = !DILocation(line: 78, column: 2, scope: !3940)
!3943 = distinct !DISubprogram(name: "vprintk", scope: !212, file: !212, line: 113, type: !3944, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !3952)
!3944 = !DISubroutineType(types: !3945)
!3945 = !{null, !118, !3946}
!3946 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3019, line: 99, baseType: !3947)
!3947 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3019, line: 40, baseType: !3948)
!3948 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !212, baseType: !3949)
!3949 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !3950)
!3950 = !{!3951}
!3951 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !3949, file: !212, line: 79, baseType: !106, size: 32)
!3952 = !{!3953, !3954, !3955}
!3953 = !DILocalVariable(name: "fmt", arg: 1, scope: !3943, file: !212, line: 113, type: !118)
!3954 = !DILocalVariable(name: "ap", arg: 2, scope: !3943, file: !212, line: 113, type: !3946)
!3955 = !DILocalVariable(name: "ctx", scope: !3956, file: !212, line: 121, type: !3958)
!3956 = distinct !DILexicalBlock(scope: !3957, file: !212, line: 120, column: 27)
!3957 = distinct !DILexicalBlock(scope: !3943, file: !212, line: 120, column: 6)
!3958 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "buf_out_context", file: !212, line: 81, size: 32, elements: !3959)
!3959 = !{!3960, !3961}
!3960 = !DIDerivedType(tag: DW_TAG_member, name: "buf_count", scope: !3958, file: !212, line: 85, baseType: !32, size: 32)
!3961 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !3958, file: !212, line: 86, baseType: !3962, offset: 32)
!3962 = !DICompositeType(tag: DW_TAG_array_type, baseType: !120, elements: !3963)
!3963 = !{!3964}
!3964 = !DISubrange(count: 0)
!3965 = !DILocation(line: 0, scope: !3943)
!3966 = !DILocation(line: 148, column: 3, scope: !3967)
!3967 = distinct !DILexicalBlock(scope: !3957, file: !212, line: 138, column: 9)
!3968 = !DILocation(line: 155, column: 1, scope: !3943)
!3969 = distinct !DISubprogram(name: "char_out", scope: !212, file: !212, line: 107, type: !3970, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !3972)
!3970 = !DISubroutineType(types: !3971)
!3971 = !{!107, !107, !106}
!3972 = !{!3973, !3974}
!3973 = !DILocalVariable(name: "c", arg: 1, scope: !3969, file: !212, line: 107, type: !107)
!3974 = !DILocalVariable(name: "ctx_p", arg: 2, scope: !3969, file: !212, line: 107, type: !106)
!3975 = !DILocation(line: 0, scope: !3969)
!3976 = !DILocation(line: 110, column: 9, scope: !3969)
!3977 = !DILocation(line: 110, column: 2, scope: !3969)
!3978 = distinct !DISubprogram(name: "cbvprintf", scope: !3051, file: !3051, line: 739, type: !3979, scopeLine: 740, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !3981)
!3979 = !DISubroutineType(types: !3980)
!3980 = !{!107, !3399, !106, !118, !3946}
!3981 = !{!3982, !3983, !3984, !3985}
!3982 = !DILocalVariable(name: "out", arg: 1, scope: !3978, file: !3051, line: 739, type: !3399)
!3983 = !DILocalVariable(name: "ctx", arg: 2, scope: !3978, file: !3051, line: 739, type: !106)
!3984 = !DILocalVariable(name: "format", arg: 3, scope: !3978, file: !3051, line: 739, type: !118)
!3985 = !DILocalVariable(name: "ap", arg: 4, scope: !3978, file: !3051, line: 739, type: !3946)
!3986 = !DILocation(line: 0, scope: !3978)
!3987 = !DILocation(line: 741, column: 9, scope: !3978)
!3988 = !DILocation(line: 741, column: 2, scope: !3978)
!3989 = distinct !DISubprogram(name: "z_impl_k_str_out", scope: !212, file: !212, line: 157, type: !3990, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !3992)
!3990 = !DISubroutineType(types: !3991)
!3991 = !{null, !193, !185}
!3992 = !{!3993, !3994, !3995}
!3993 = !DILocalVariable(name: "c", arg: 1, scope: !3989, file: !212, line: 157, type: !193)
!3994 = !DILocalVariable(name: "n", arg: 2, scope: !3989, file: !212, line: 157, type: !185)
!3995 = !DILocalVariable(name: "i", scope: !3989, file: !212, line: 159, type: !185)
!3996 = !DILocation(line: 0, scope: !3989)
!3997 = !DILocation(line: 164, column: 16, scope: !3998)
!3998 = distinct !DILexicalBlock(scope: !3999, file: !212, line: 164, column: 2)
!3999 = distinct !DILexicalBlock(scope: !3989, file: !212, line: 164, column: 2)
!4000 = !DILocation(line: 164, column: 2, scope: !3999)
!4001 = !DILocation(line: 165, column: 3, scope: !4002)
!4002 = distinct !DILexicalBlock(scope: !3998, file: !212, line: 164, column: 26)
!4003 = !DILocation(line: 165, column: 13, scope: !4002)
!4004 = !DILocation(line: 164, column: 22, scope: !3998)
!4005 = distinct !{!4005, !4000, !4006}
!4006 = !DILocation(line: 166, column: 2, scope: !3999)
!4007 = !DILocation(line: 171, column: 1, scope: !3989)
!4008 = distinct !DISubprogram(name: "printk", scope: !212, file: !212, line: 203, type: !4009, scopeLine: 204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !4011)
!4009 = !DISubroutineType(types: !4010)
!4010 = !{null, !118, null}
!4011 = !{!4012, !4013}
!4012 = !DILocalVariable(name: "fmt", arg: 1, scope: !4008, file: !212, line: 203, type: !118)
!4013 = !DILocalVariable(name: "ap", scope: !4008, file: !212, line: 205, type: !3946)
!4014 = !DILocation(line: 0, scope: !4008)
!4015 = !DILocation(line: 205, column: 2, scope: !4008)
!4016 = !DILocation(line: 205, column: 10, scope: !4008)
!4017 = !DILocation(line: 207, column: 2, scope: !4008)
!4018 = !DILocation(line: 209, column: 2, scope: !4008)
!4019 = !DILocation(line: 211, column: 2, scope: !4008)
!4020 = !DILocation(line: 212, column: 1, scope: !4008)
!4021 = distinct !DISubprogram(name: "snprintk", scope: !212, file: !212, line: 239, type: !4022, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !4024)
!4022 = !DISubroutineType(types: !4023)
!4023 = !{!107, !193, !185, !118, null}
!4024 = !{!4025, !4026, !4027, !4028, !4029}
!4025 = !DILocalVariable(name: "str", arg: 1, scope: !4021, file: !212, line: 239, type: !193)
!4026 = !DILocalVariable(name: "size", arg: 2, scope: !4021, file: !212, line: 239, type: !185)
!4027 = !DILocalVariable(name: "fmt", arg: 3, scope: !4021, file: !212, line: 239, type: !118)
!4028 = !DILocalVariable(name: "ap", scope: !4021, file: !212, line: 241, type: !3946)
!4029 = !DILocalVariable(name: "ret", scope: !4021, file: !212, line: 242, type: !107)
!4030 = !DILocation(line: 0, scope: !4021)
!4031 = !DILocation(line: 241, column: 2, scope: !4021)
!4032 = !DILocation(line: 241, column: 10, scope: !4021)
!4033 = !DILocation(line: 244, column: 2, scope: !4021)
!4034 = !DILocation(line: 245, column: 8, scope: !4021)
!4035 = !DILocation(line: 246, column: 2, scope: !4021)
!4036 = !DILocation(line: 249, column: 1, scope: !4021)
!4037 = !DILocation(line: 248, column: 2, scope: !4021)
!4038 = distinct !DISubprogram(name: "vsnprintk", scope: !212, file: !212, line: 251, type: !4039, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !4041)
!4039 = !DISubroutineType(types: !4040)
!4040 = !{!107, !193, !185, !118, !3946}
!4041 = !{!4042, !4043, !4044, !4045, !4046}
!4042 = !DILocalVariable(name: "str", arg: 1, scope: !4038, file: !212, line: 251, type: !193)
!4043 = !DILocalVariable(name: "size", arg: 2, scope: !4038, file: !212, line: 251, type: !185)
!4044 = !DILocalVariable(name: "fmt", arg: 3, scope: !4038, file: !212, line: 251, type: !118)
!4045 = !DILocalVariable(name: "ap", arg: 4, scope: !4038, file: !212, line: 251, type: !3946)
!4046 = !DILocalVariable(name: "ctx", scope: !4038, file: !212, line: 253, type: !4047)
!4047 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "str_context", file: !212, line: 217, size: 96, elements: !4048)
!4048 = !{!4049, !4050, !4051}
!4049 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !4047, file: !212, line: 218, baseType: !193, size: 32)
!4050 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !4047, file: !212, line: 219, baseType: !107, size: 32, offset: 32)
!4051 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4047, file: !212, line: 220, baseType: !107, size: 32, offset: 64)
!4052 = !DILocation(line: 0, scope: !4038)
!4053 = !DILocation(line: 253, column: 2, scope: !4038)
!4054 = !DILocation(line: 253, column: 21, scope: !4038)
!4055 = !DILocation(line: 253, column: 27, scope: !4038)
!4056 = !DILocation(line: 255, column: 2, scope: !4038)
!4057 = !DILocation(line: 257, column: 10, scope: !4058)
!4058 = distinct !DILexicalBlock(scope: !4038, file: !212, line: 257, column: 6)
!4059 = !DILocation(line: 257, column: 22, scope: !4058)
!4060 = !DILocation(line: 257, column: 16, scope: !4058)
!4061 = !DILocation(line: 257, column: 6, scope: !4038)
!4062 = !DILocation(line: 258, column: 3, scope: !4063)
!4063 = distinct !DILexicalBlock(scope: !4058, file: !212, line: 257, column: 27)
!4064 = !DILocation(line: 258, column: 18, scope: !4063)
!4065 = !DILocation(line: 259, column: 2, scope: !4063)
!4066 = !DILocation(line: 262, column: 1, scope: !4038)
!4067 = !DILocation(line: 261, column: 2, scope: !4038)
!4068 = distinct !DISubprogram(name: "str_out", scope: !212, file: !212, line: 223, type: !4069, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !4072)
!4069 = !DISubroutineType(types: !4070)
!4070 = !{!107, !107, !4071}
!4071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4047, size: 32)
!4072 = !{!4073, !4074}
!4073 = !DILocalVariable(name: "c", arg: 1, scope: !4068, file: !212, line: 223, type: !107)
!4074 = !DILocalVariable(name: "ctx", arg: 2, scope: !4068, file: !212, line: 223, type: !4071)
!4075 = !DILocation(line: 0, scope: !4068)
!4076 = !DILocation(line: 225, column: 11, scope: !4077)
!4077 = distinct !DILexicalBlock(scope: !4068, file: !212, line: 225, column: 6)
!4078 = !DILocation(line: 225, column: 15, scope: !4077)
!4079 = !DILocation(line: 0, scope: !4077)
!4080 = !DILocation(line: 225, column: 23, scope: !4077)
!4081 = !DILocation(line: 225, column: 45, scope: !4077)
!4082 = !DILocation(line: 225, column: 37, scope: !4077)
!4083 = !DILocation(line: 225, column: 6, scope: !4068)
!4084 = !DILocation(line: 226, column: 8, scope: !4085)
!4085 = distinct !DILexicalBlock(scope: !4077, file: !212, line: 225, column: 50)
!4086 = !DILocation(line: 226, column: 13, scope: !4085)
!4087 = !DILocation(line: 227, column: 3, scope: !4085)
!4088 = !DILocation(line: 230, column: 29, scope: !4089)
!4089 = distinct !DILexicalBlock(scope: !4068, file: !212, line: 230, column: 6)
!4090 = !DILocation(line: 230, column: 17, scope: !4089)
!4091 = !DILocation(line: 230, column: 6, scope: !4068)
!4092 = !DILocation(line: 231, column: 22, scope: !4093)
!4093 = distinct !DILexicalBlock(scope: !4089, file: !212, line: 230, column: 34)
!4094 = !DILocation(line: 231, column: 3, scope: !4093)
!4095 = !DILocation(line: 231, column: 26, scope: !4093)
!4096 = !DILocation(line: 232, column: 2, scope: !4093)
!4097 = !DILocation(line: 233, column: 28, scope: !4098)
!4098 = distinct !DILexicalBlock(scope: !4089, file: !212, line: 232, column: 9)
!4099 = !DILocation(line: 233, column: 22, scope: !4098)
!4100 = !DILocation(line: 233, column: 3, scope: !4098)
!4101 = !DILocation(line: 233, column: 26, scope: !4098)
!4102 = !DILocation(line: 237, column: 1, scope: !4068)
!4103 = distinct !DISubprogram(name: "z_thread_entry", scope: !4104, file: !4104, line: 30, type: !4105, scopeLine: 32, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2284, retainedNodes: !4107)
!4104 = !DIFile(filename: "zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4105 = !DISubroutineType(types: !4106)
!4106 = !{null, !687, !106, !106, !106}
!4107 = !{!4108, !4109, !4110, !4111}
!4108 = !DILocalVariable(name: "entry", arg: 1, scope: !4103, file: !4104, line: 30, type: !687)
!4109 = !DILocalVariable(name: "p1", arg: 2, scope: !4103, file: !4104, line: 31, type: !106)
!4110 = !DILocalVariable(name: "p2", arg: 3, scope: !4103, file: !4104, line: 31, type: !106)
!4111 = !DILocalVariable(name: "p3", arg: 4, scope: !4103, file: !4104, line: 31, type: !106)
!4112 = !DILocation(line: 0, scope: !4103)
!4113 = !DILocation(line: 36, column: 2, scope: !4103)
!4114 = !DILocation(line: 38, column: 17, scope: !4103)
!4115 = !DILocation(line: 38, column: 2, scope: !4103)
!4116 = !DILocation(line: 45, column: 2, scope: !4103)
!4117 = distinct !DISubprogram(name: "k_current_get", scope: !804, file: !804, line: 530, type: !4118, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2284, retainedNodes: !1949)
!4118 = !DISubroutineType(types: !4119)
!4119 = !{!4120}
!4120 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !716, line: 347, baseType: !4121)
!4121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4122, size: 32)
!4122 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !716, line: 245, size: 1152, elements: !4123)
!4123 = !{!4124, !4182, !4194, !4195, !4196, !4197, !4198, !4213}
!4124 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !4122, file: !716, line: 247, baseType: !4125, size: 384)
!4125 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !716, line: 57, size: 384, elements: !4126)
!4126 = !{!4127, !4151, !4158, !4159, !4160, !4169, !4170, !4171}
!4127 = !DIDerivedType(tag: DW_TAG_member, scope: !4125, file: !716, line: 60, baseType: !4128, size: 64)
!4128 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4125, file: !716, line: 60, size: 64, elements: !4129)
!4129 = !{!4130, !4145}
!4130 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !4128, file: !716, line: 61, baseType: !4131, size: 64)
!4131 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !726, line: 49, baseType: !4132)
!4132 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !726, line: 37, size: 64, elements: !4133)
!4133 = !{!4134, !4140}
!4134 = !DIDerivedType(tag: DW_TAG_member, scope: !4132, file: !726, line: 38, baseType: !4135, size: 32)
!4135 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4132, file: !726, line: 38, size: 32, elements: !4136)
!4136 = !{!4137, !4139}
!4137 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !4135, file: !726, line: 39, baseType: !4138, size: 32)
!4138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4132, size: 32)
!4139 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4135, file: !726, line: 40, baseType: !4138, size: 32)
!4140 = !DIDerivedType(tag: DW_TAG_member, scope: !4132, file: !726, line: 42, baseType: !4141, size: 32, offset: 32)
!4141 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4132, file: !726, line: 42, size: 32, elements: !4142)
!4142 = !{!4143, !4144}
!4143 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !4141, file: !726, line: 43, baseType: !4138, size: 32)
!4144 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !4141, file: !726, line: 44, baseType: !4138, size: 32)
!4145 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !4128, file: !716, line: 62, baseType: !4146, size: 64)
!4146 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !742, line: 49, size: 64, elements: !4147)
!4147 = !{!4148}
!4148 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !4146, file: !742, line: 50, baseType: !4149, size: 64)
!4149 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4150, size: 64, elements: !747)
!4150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4146, size: 32)
!4151 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !4125, file: !716, line: 68, baseType: !4152, size: 32, offset: 64)
!4152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4153, size: 32)
!4153 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !752, line: 233, baseType: !4154)
!4154 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !752, line: 231, size: 64, elements: !4155)
!4155 = !{!4156}
!4156 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !4154, file: !752, line: 232, baseType: !4157, size: 64)
!4157 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !726, line: 48, baseType: !4132)
!4158 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !4125, file: !716, line: 71, baseType: !195, size: 8, offset: 96)
!4159 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !4125, file: !716, line: 74, baseType: !195, size: 8, offset: 104)
!4160 = !DIDerivedType(tag: DW_TAG_member, scope: !4125, file: !716, line: 90, baseType: !4161, size: 16, offset: 112)
!4161 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4125, file: !716, line: 90, size: 16, elements: !4162)
!4162 = !{!4163, !4168}
!4163 = !DIDerivedType(tag: DW_TAG_member, scope: !4161, file: !716, line: 91, baseType: !4164, size: 16)
!4164 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4161, file: !716, line: 91, size: 16, elements: !4165)
!4165 = !{!4166, !4167}
!4166 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !4164, file: !716, line: 96, baseType: !766, size: 8)
!4167 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !4164, file: !716, line: 97, baseType: !195, size: 8, offset: 8)
!4168 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !4161, file: !716, line: 100, baseType: !197, size: 16)
!4169 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !4125, file: !716, line: 107, baseType: !152, size: 32, offset: 128)
!4170 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !4125, file: !716, line: 127, baseType: !106, size: 32, offset: 160)
!4171 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !4125, file: !716, line: 131, baseType: !4172, size: 192, offset: 192)
!4172 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !752, line: 244, size: 192, elements: !4173)
!4173 = !{!4174, !4175, !4181}
!4174 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !4172, file: !752, line: 245, baseType: !4131, size: 64)
!4175 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !4172, file: !752, line: 246, baseType: !4176, size: 32, offset: 64)
!4176 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !752, line: 242, baseType: !4177)
!4177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4178, size: 32)
!4178 = !DISubroutineType(types: !4179)
!4179 = !{null, !4180}
!4180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4172, size: 32)
!4181 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !4172, file: !752, line: 249, baseType: !694, size: 64, offset: 128)
!4182 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !4122, file: !716, line: 250, baseType: !4183, size: 288, offset: 384)
!4183 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !785, line: 25, size: 288, elements: !4184)
!4184 = !{!4185, !4186, !4187, !4188, !4189, !4190, !4191, !4192, !4193}
!4185 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !4183, file: !785, line: 26, baseType: !152, size: 32)
!4186 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !4183, file: !785, line: 27, baseType: !152, size: 32, offset: 32)
!4187 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !4183, file: !785, line: 28, baseType: !152, size: 32, offset: 64)
!4188 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !4183, file: !785, line: 29, baseType: !152, size: 32, offset: 96)
!4189 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !4183, file: !785, line: 30, baseType: !152, size: 32, offset: 128)
!4190 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !4183, file: !785, line: 31, baseType: !152, size: 32, offset: 160)
!4191 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !4183, file: !785, line: 32, baseType: !152, size: 32, offset: 192)
!4192 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !4183, file: !785, line: 33, baseType: !152, size: 32, offset: 224)
!4193 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !4183, file: !785, line: 34, baseType: !152, size: 32, offset: 256)
!4194 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !4122, file: !716, line: 253, baseType: !106, size: 32, offset: 672)
!4195 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !4122, file: !716, line: 256, baseType: !4153, size: 64, offset: 704)
!4196 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4122, file: !716, line: 279, baseType: !799, size: 256, offset: 768)
!4197 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !4122, file: !716, line: 294, baseType: !107, size: 32, offset: 1024)
!4198 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !4122, file: !716, line: 325, baseType: !4199, size: 32, offset: 1056)
!4199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4200, size: 32)
!4200 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !804, line: 5073, size: 192, elements: !4201)
!4201 = !{!4202, !4208, !4209}
!4202 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !4200, file: !804, line: 5074, baseType: !4203, size: 96)
!4203 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !808, line: 56, size: 96, elements: !4204)
!4204 = !{!4205, !4206, !4207}
!4205 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !4203, file: !808, line: 57, baseType: !811, size: 32)
!4206 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !4203, file: !808, line: 58, baseType: !106, size: 32, offset: 32)
!4207 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !4203, file: !808, line: 59, baseType: !185, size: 32, offset: 64)
!4208 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !4200, file: !804, line: 5075, baseType: !4153, size: 64, offset: 96)
!4209 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4200, file: !804, line: 5076, baseType: !4210, size: 32, offset: 160)
!4210 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !818, line: 43, size: 32, elements: !4211)
!4211 = !{!4212}
!4212 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !4210, file: !818, line: 52, baseType: !22, size: 32)
!4213 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !4122, file: !716, line: 343, baseType: !4214, size: 64, offset: 1088)
!4214 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !785, line: 60, size: 64, elements: !4215)
!4215 = !{!4216, !4217}
!4216 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !4214, file: !785, line: 63, baseType: !152, size: 32)
!4217 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !4214, file: !785, line: 66, baseType: !152, size: 32, offset: 32)
!4218 = !DILocation(line: 535, column: 9, scope: !4117)
!4219 = !DILocation(line: 535, column: 2, scope: !4117)
!4220 = distinct !DISubprogram(name: "k_thread_abort", scope: !4221, file: !4221, line: 188, type: !4222, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2284, retainedNodes: !4224)
!4221 = !DIFile(filename: "zephyr/include/generated/syscalls/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/integration")
!4222 = !DISubroutineType(types: !4223)
!4223 = !{null, !4120}
!4224 = !{!4225}
!4225 = !DILocalVariable(name: "thread", arg: 1, scope: !4220, file: !4221, line: 188, type: !4120)
!4226 = !DILocation(line: 0, scope: !4220)
!4227 = !DILocation(line: 197, column: 2, scope: !4228)
!4228 = distinct !DILexicalBlock(scope: !4220, file: !4221, line: 197, column: 2)
!4229 = !{i64 2151042602}
!4230 = !DILocation(line: 198, column: 2, scope: !4220)
!4231 = !DILocation(line: 199, column: 1, scope: !4220)
!4232 = distinct !DISubprogram(name: "z_current_get", scope: !4221, file: !4221, line: 173, type: !4118, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2284, retainedNodes: !1949)
!4233 = !DILocation(line: 180, column: 2, scope: !4234)
!4234 = distinct !DILexicalBlock(scope: !4232, file: !4221, line: 180, column: 2)
!4235 = !{i64 2151042534}
!4236 = !DILocation(line: 181, column: 9, scope: !4232)
!4237 = !DILocation(line: 181, column: 2, scope: !4232)
!4238 = distinct !DISubprogram(name: "z_cbvprintf_impl", scope: !2290, file: !2290, line: 1338, type: !4239, scopeLine: 1340, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2286, retainedNodes: !4247)
!4239 = !DISubroutineType(types: !4240)
!4240 = !{!107, !3399, !106, !118, !4241, !152}
!4241 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3019, line: 99, baseType: !4242)
!4242 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3019, line: 40, baseType: !4243)
!4243 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2290, baseType: !4244)
!4244 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4245)
!4245 = !{!4246}
!4246 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4244, file: !2290, baseType: !106, size: 32)
!4247 = !{!4248, !4249, !4250, !4251, !4252, !4253, !4257, !4258, !4259, !4261, !4266, !4309, !4312, !4315, !4316, !4317, !4318, !4319, !4320, !4321, !4324, !4325, !4326, !4330, !4333, !4335, !4338, !4339, !4340, !4345, !4351, !4354, !4358, !4364, !4368, !4371, !4373, !4376}
!4248 = !DILocalVariable(name: "out", arg: 1, scope: !4238, file: !2290, line: 1338, type: !3399)
!4249 = !DILocalVariable(name: "ctx", arg: 2, scope: !4238, file: !2290, line: 1338, type: !106)
!4250 = !DILocalVariable(name: "fp", arg: 3, scope: !4238, file: !2290, line: 1338, type: !118)
!4251 = !DILocalVariable(name: "ap", arg: 4, scope: !4238, file: !2290, line: 1339, type: !4241)
!4252 = !DILocalVariable(name: "flags", arg: 5, scope: !4238, file: !2290, line: 1339, type: !152)
!4253 = !DILocalVariable(name: "buf", scope: !4238, file: !2290, line: 1341, type: !4254)
!4254 = !DICompositeType(tag: DW_TAG_array_type, baseType: !120, size: 176, elements: !4255)
!4255 = !{!4256}
!4256 = !DISubrange(count: 22)
!4257 = !DILocalVariable(name: "count", scope: !4238, file: !2290, line: 1342, type: !185)
!4258 = !DILocalVariable(name: "sint", scope: !4238, file: !2290, line: 1343, type: !2309)
!4259 = !DILocalVariable(name: "tagged_ap", scope: !4238, file: !2290, line: 1345, type: !4260)
!4260 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !145)
!4261 = !DILocalVariable(name: "rc", scope: !4262, file: !2290, line: 1377, type: !107)
!4262 = distinct !DILexicalBlock(scope: !4263, file: !2290, line: 1377, column: 4)
!4263 = distinct !DILexicalBlock(scope: !4264, file: !2290, line: 1376, column: 19)
!4264 = distinct !DILexicalBlock(scope: !4265, file: !2290, line: 1376, column: 7)
!4265 = distinct !DILexicalBlock(scope: !4238, file: !2290, line: 1375, column: 19)
!4266 = !DILocalVariable(name: "state", scope: !4265, file: !2290, line: 1395, type: !4267)
!4267 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4238, file: !2290, line: 1392, size: 192, elements: !4268)
!4268 = !{!4269, !4277}
!4269 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !4267, file: !2290, line: 1393, baseType: !4270, size: 64)
!4270 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "argument_value", file: !2290, line: 166, size: 64, elements: !4271)
!4271 = !{!4272, !4273, !4274, !4275, !4276}
!4272 = !DIDerivedType(tag: DW_TAG_member, name: "sint", scope: !4270, file: !2290, line: 168, baseType: !2309, size: 64)
!4273 = !DIDerivedType(tag: DW_TAG_member, name: "uint", scope: !4270, file: !2290, line: 171, baseType: !2312, size: 64)
!4274 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !4270, file: !2290, line: 174, baseType: !183, size: 64)
!4275 = !DIDerivedType(tag: DW_TAG_member, name: "ldbl", scope: !4270, file: !2290, line: 177, baseType: !181, size: 64)
!4276 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4270, file: !2290, line: 180, baseType: !106, size: 32)
!4277 = !DIDerivedType(tag: DW_TAG_member, name: "conv", scope: !4267, file: !2290, line: 1394, baseType: !4278, size: 96, offset: 64)
!4278 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conversion", file: !2290, line: 189, size: 96, elements: !4279)
!4279 = !{!4280, !4281, !4282, !4283, !4284, !4285, !4286, !4287, !4288, !4289, !4290, !4291, !4292, !4293, !4294, !4295, !4296, !4297, !4298, !4299, !4304}
!4280 = !DIDerivedType(tag: DW_TAG_member, name: "invalid", scope: !4278, file: !2290, line: 191, baseType: !145, size: 1, flags: DIFlagBitField, extraData: i64 0)
!4281 = !DIDerivedType(tag: DW_TAG_member, name: "unsupported", scope: !4278, file: !2290, line: 194, baseType: !145, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!4282 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dash", scope: !4278, file: !2290, line: 197, baseType: !145, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!4283 = !DIDerivedType(tag: DW_TAG_member, name: "flag_plus", scope: !4278, file: !2290, line: 200, baseType: !145, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!4284 = !DIDerivedType(tag: DW_TAG_member, name: "flag_space", scope: !4278, file: !2290, line: 203, baseType: !145, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!4285 = !DIDerivedType(tag: DW_TAG_member, name: "flag_hash", scope: !4278, file: !2290, line: 206, baseType: !145, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!4286 = !DIDerivedType(tag: DW_TAG_member, name: "flag_zero", scope: !4278, file: !2290, line: 209, baseType: !145, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!4287 = !DIDerivedType(tag: DW_TAG_member, name: "width_present", scope: !4278, file: !2290, line: 212, baseType: !145, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!4288 = !DIDerivedType(tag: DW_TAG_member, name: "width_star", scope: !4278, file: !2290, line: 219, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!4289 = !DIDerivedType(tag: DW_TAG_member, name: "prec_present", scope: !4278, file: !2290, line: 222, baseType: !145, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!4290 = !DIDerivedType(tag: DW_TAG_member, name: "prec_star", scope: !4278, file: !2290, line: 229, baseType: !145, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!4291 = !DIDerivedType(tag: DW_TAG_member, name: "length_mod", scope: !4278, file: !2290, line: 232, baseType: !32, size: 4, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!4292 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_a", scope: !4278, file: !2290, line: 238, baseType: !145, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!4293 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_cat", scope: !4278, file: !2290, line: 241, baseType: !32, size: 3, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!4294 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0", scope: !4278, file: !2290, line: 244, baseType: !145, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!4295 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0c", scope: !4278, file: !2290, line: 247, baseType: !145, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!4296 = !DIDerivedType(tag: DW_TAG_member, name: "pad_postdp", scope: !4278, file: !2290, line: 252, baseType: !145, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!4297 = !DIDerivedType(tag: DW_TAG_member, name: "pad_fp", scope: !4278, file: !2290, line: 257, baseType: !145, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!4298 = !DIDerivedType(tag: DW_TAG_member, name: "specifier", scope: !4278, file: !2290, line: 260, baseType: !196, size: 8, offset: 24)
!4299 = !DIDerivedType(tag: DW_TAG_member, scope: !4278, file: !2290, line: 262, baseType: !4300, size: 32, offset: 32)
!4300 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4278, file: !2290, line: 262, size: 32, elements: !4301)
!4301 = !{!4302, !4303}
!4302 = !DIDerivedType(tag: DW_TAG_member, name: "width_value", scope: !4300, file: !2290, line: 267, baseType: !107, size: 32)
!4303 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_value", scope: !4300, file: !2290, line: 289, baseType: !107, size: 32)
!4304 = !DIDerivedType(tag: DW_TAG_member, scope: !4278, file: !2290, line: 292, baseType: !4305, size: 32, offset: 64)
!4305 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4278, file: !2290, line: 292, size: 32, elements: !4306)
!4306 = !{!4307, !4308}
!4307 = !DIDerivedType(tag: DW_TAG_member, name: "prec_value", scope: !4305, file: !2290, line: 297, baseType: !107, size: 32)
!4308 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_pre_exp", scope: !4305, file: !2290, line: 306, baseType: !107, size: 32)
!4309 = !DILocalVariable(name: "conv", scope: !4265, file: !2290, line: 1400, type: !4310)
!4310 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4311)
!4311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4278, size: 32)
!4312 = !DILocalVariable(name: "value", scope: !4265, file: !2290, line: 1401, type: !4313)
!4313 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4314)
!4314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4270, size: 32)
!4315 = !DILocalVariable(name: "sp", scope: !4265, file: !2290, line: 1402, type: !118)
!4316 = !DILocalVariable(name: "width", scope: !4265, file: !2290, line: 1403, type: !107)
!4317 = !DILocalVariable(name: "precision", scope: !4265, file: !2290, line: 1404, type: !107)
!4318 = !DILocalVariable(name: "bps", scope: !4265, file: !2290, line: 1405, type: !118)
!4319 = !DILocalVariable(name: "bpe", scope: !4265, file: !2290, line: 1406, type: !118)
!4320 = !DILocalVariable(name: "sign", scope: !4265, file: !2290, line: 1407, type: !120)
!4321 = !DILocalVariable(name: "arg", scope: !4322, file: !2290, line: 1432, type: !107)
!4322 = distinct !DILexicalBlock(scope: !4323, file: !2290, line: 1431, column: 24)
!4323 = distinct !DILexicalBlock(scope: !4265, file: !2290, line: 1431, column: 7)
!4324 = !DILocalVariable(name: "specifier_cat", scope: !4265, file: !2290, line: 1468, type: !2289)
!4325 = !DILocalVariable(name: "length_mod", scope: !4265, file: !2290, line: 1470, type: !2297)
!4326 = !DILocalVariable(name: "rc", scope: !4327, file: !2290, line: 1575, type: !107)
!4327 = distinct !DILexicalBlock(scope: !4328, file: !2290, line: 1575, column: 4)
!4328 = distinct !DILexicalBlock(scope: !4329, file: !2290, line: 1574, column: 43)
!4329 = distinct !DILexicalBlock(scope: !4265, file: !2290, line: 1574, column: 7)
!4330 = !DILocalVariable(name: "rc", scope: !4331, file: !2290, line: 1584, type: !107)
!4331 = distinct !DILexicalBlock(scope: !4332, file: !2290, line: 1584, column: 4)
!4332 = distinct !DILexicalBlock(scope: !4265, file: !2290, line: 1582, column: 28)
!4333 = !DILocalVariable(name: "len", scope: !4334, file: !2290, line: 1589, type: !185)
!4334 = distinct !DILexicalBlock(scope: !4332, file: !2290, line: 1586, column: 13)
!4335 = !DILocalVariable(name: "len", scope: !4336, file: !2290, line: 1641, type: !185)
!4336 = distinct !DILexicalBlock(scope: !4337, file: !2290, line: 1640, column: 24)
!4337 = distinct !DILexicalBlock(scope: !4332, file: !2290, line: 1640, column: 8)
!4338 = !DILocalVariable(name: "nj_len", scope: !4265, file: !2290, line: 1722, type: !185)
!4339 = !DILocalVariable(name: "pad_len", scope: !4265, file: !2290, line: 1723, type: !107)
!4340 = !DILocalVariable(name: "pad", scope: !4341, file: !2290, line: 1751, type: !120)
!4341 = distinct !DILexicalBlock(scope: !4342, file: !2290, line: 1750, column: 26)
!4342 = distinct !DILexicalBlock(scope: !4343, file: !2290, line: 1750, column: 8)
!4343 = distinct !DILexicalBlock(scope: !4344, file: !2290, line: 1747, column: 18)
!4344 = distinct !DILexicalBlock(scope: !4265, file: !2290, line: 1747, column: 7)
!4345 = !DILocalVariable(name: "rc", scope: !4346, file: !2290, line: 1758, type: !107)
!4346 = distinct !DILexicalBlock(scope: !4347, file: !2290, line: 1758, column: 7)
!4347 = distinct !DILexicalBlock(scope: !4348, file: !2290, line: 1757, column: 21)
!4348 = distinct !DILexicalBlock(scope: !4349, file: !2290, line: 1757, column: 10)
!4349 = distinct !DILexicalBlock(scope: !4350, file: !2290, line: 1756, column: 26)
!4350 = distinct !DILexicalBlock(scope: !4341, file: !2290, line: 1756, column: 9)
!4351 = !DILocalVariable(name: "rc", scope: !4352, file: !2290, line: 1765, type: !107)
!4352 = distinct !DILexicalBlock(scope: !4353, file: !2290, line: 1765, column: 6)
!4353 = distinct !DILexicalBlock(scope: !4341, file: !2290, line: 1764, column: 25)
!4354 = !DILocalVariable(name: "rc", scope: !4355, file: !2290, line: 1774, type: !107)
!4355 = distinct !DILexicalBlock(scope: !4356, file: !2290, line: 1774, column: 4)
!4356 = distinct !DILexicalBlock(scope: !4357, file: !2290, line: 1773, column: 18)
!4357 = distinct !DILexicalBlock(scope: !4265, file: !2290, line: 1773, column: 7)
!4358 = !DILocalVariable(name: "rc", scope: !4359, file: !2290, line: 1819, type: !107)
!4359 = distinct !DILexicalBlock(scope: !4360, file: !2290, line: 1819, column: 5)
!4360 = distinct !DILexicalBlock(scope: !4361, file: !2290, line: 1818, column: 44)
!4361 = distinct !DILexicalBlock(scope: !4362, file: !2290, line: 1818, column: 8)
!4362 = distinct !DILexicalBlock(scope: !4363, file: !2290, line: 1817, column: 10)
!4363 = distinct !DILexicalBlock(scope: !4265, file: !2290, line: 1777, column: 7)
!4364 = !DILocalVariable(name: "rc", scope: !4365, file: !2290, line: 1823, type: !107)
!4365 = distinct !DILexicalBlock(scope: !4366, file: !2290, line: 1823, column: 5)
!4366 = distinct !DILexicalBlock(scope: !4367, file: !2290, line: 1822, column: 26)
!4367 = distinct !DILexicalBlock(scope: !4362, file: !2290, line: 1822, column: 8)
!4368 = !DILocalVariable(name: "rc", scope: !4369, file: !2290, line: 1828, type: !107)
!4369 = distinct !DILexicalBlock(scope: !4370, file: !2290, line: 1828, column: 5)
!4370 = distinct !DILexicalBlock(scope: !4362, file: !2290, line: 1827, column: 26)
!4371 = !DILocalVariable(name: "rc", scope: !4372, file: !2290, line: 1831, type: !107)
!4372 = distinct !DILexicalBlock(scope: !4362, file: !2290, line: 1831, column: 4)
!4373 = !DILocalVariable(name: "rc", scope: !4374, file: !2290, line: 1836, type: !107)
!4374 = distinct !DILexicalBlock(scope: !4375, file: !2290, line: 1836, column: 4)
!4375 = distinct !DILexicalBlock(scope: !4265, file: !2290, line: 1835, column: 21)
!4376 = !DILabel(scope: !4332, name: "prec_int_pad0", file: !2290, line: 1634)
!4377 = !DILocation(line: 0, scope: !4238)
!4378 = !DILocation(line: 1341, column: 2, scope: !4238)
!4379 = !DILocation(line: 1341, column: 7, scope: !4238)
!4380 = !DILocation(line: 1375, column: 2, scope: !4238)
!4381 = !DILocation(line: 1342, column: 9, scope: !4238)
!4382 = !DILocation(line: 1375, column: 9, scope: !4238)
!4383 = !DILocation(line: 1377, column: 4, scope: !4262)
!4384 = !DILocation(line: 0, scope: !4262)
!4385 = !DILocation(line: 1377, column: 4, scope: !4386)
!4386 = distinct !DILexicalBlock(scope: !4262, file: !2290, line: 1377, column: 4)
!4387 = distinct !{!4387, !4380, !4388}
!4388 = !DILocation(line: 1839, column: 2, scope: !4238)
!4389 = !DILocation(line: 1392, column: 3, scope: !4265)
!4390 = !DILocation(line: 1395, column: 5, scope: !4265)
!4391 = !DILocation(line: 0, scope: !4265)
!4392 = !DILocation(line: 1409, column: 8, scope: !4265)
!4393 = !DILocation(line: 1414, column: 13, scope: !4394)
!4394 = distinct !DILexicalBlock(scope: !4265, file: !2290, line: 1414, column: 7)
!4395 = !DILocation(line: 1414, column: 7, scope: !4265)
!4396 = !DILocation(line: 1415, column: 12, scope: !4397)
!4397 = distinct !DILexicalBlock(scope: !4394, file: !2290, line: 1414, column: 25)
!4398 = !DILocation(line: 1417, column: 14, scope: !4399)
!4399 = distinct !DILexicalBlock(scope: !4397, file: !2290, line: 1417, column: 8)
!4400 = !DILocation(line: 1417, column: 8, scope: !4397)
!4401 = !DILocation(line: 1418, column: 21, scope: !4402)
!4402 = distinct !DILexicalBlock(scope: !4399, file: !2290, line: 1417, column: 19)
!4403 = !DILocation(line: 1419, column: 13, scope: !4402)
!4404 = !DILocation(line: 1420, column: 4, scope: !4402)
!4405 = !DILocation(line: 1421, column: 20, scope: !4406)
!4406 = distinct !DILexicalBlock(scope: !4394, file: !2290, line: 1421, column: 14)
!4407 = !DILocation(line: 1421, column: 14, scope: !4394)
!4408 = !DILocation(line: 1431, column: 13, scope: !4323)
!4409 = !DILocation(line: 1431, column: 7, scope: !4265)
!4410 = !DILocation(line: 1432, column: 14, scope: !4322)
!4411 = !DILocation(line: 0, scope: !4322)
!4412 = !DILocation(line: 1434, column: 12, scope: !4413)
!4413 = distinct !DILexicalBlock(scope: !4322, file: !2290, line: 1434, column: 8)
!4414 = !DILocation(line: 1434, column: 8, scope: !4322)
!4415 = !DILocation(line: 1435, column: 24, scope: !4416)
!4416 = distinct !DILexicalBlock(scope: !4413, file: !2290, line: 1434, column: 17)
!4417 = !DILocation(line: 1436, column: 4, scope: !4416)
!4418 = !DILocation(line: 1439, column: 20, scope: !4419)
!4419 = distinct !DILexicalBlock(scope: !4323, file: !2290, line: 1439, column: 14)
!4420 = !DILocation(line: 1439, column: 14, scope: !4323)
!4421 = !DILocation(line: 1469, column: 37, scope: !4265)
!4422 = !DILocation(line: 1448, column: 20, scope: !4265)
!4423 = !DILocation(line: 1449, column: 22, scope: !4265)
!4424 = !DILocation(line: 1471, column: 34, scope: !4265)
!4425 = !DILocation(line: 1478, column: 7, scope: !4265)
!4426 = !DILocation(line: 1479, column: 4, scope: !4427)
!4427 = distinct !DILexicalBlock(scope: !4428, file: !2290, line: 1478, column: 40)
!4428 = distinct !DILexicalBlock(scope: !4265, file: !2290, line: 1478, column: 7)
!4429 = !DILocation(line: 1484, column: 19, scope: !4430)
!4430 = distinct !DILexicalBlock(scope: !4427, file: !2290, line: 1479, column: 24)
!4431 = !DILocation(line: 1484, column: 17, scope: !4430)
!4432 = !DILocation(line: 1485, column: 5, scope: !4430)
!4433 = !DILocation(line: 1492, column: 20, scope: !4434)
!4434 = distinct !DILexicalBlock(scope: !4435, file: !2290, line: 1491, column: 12)
!4435 = distinct !DILexicalBlock(scope: !4430, file: !2290, line: 1487, column: 9)
!4436 = !DILocation(line: 1492, column: 18, scope: !4434)
!4437 = !DILocation(line: 1494, column: 5, scope: !4430)
!4438 = !DILocation(line: 1497, column: 23, scope: !4430)
!4439 = !DILocation(line: 1496, column: 17, scope: !4430)
!4440 = !DILocation(line: 1498, column: 5, scope: !4430)
!4441 = !DILocation(line: 1501, column: 23, scope: !4430)
!4442 = !DILocation(line: 1500, column: 17, scope: !4430)
!4443 = !DILocation(line: 1502, column: 5, scope: !4430)
!4444 = !DILocation(line: 1513, column: 23, scope: !4430)
!4445 = !DILocation(line: 1513, column: 6, scope: !4430)
!4446 = !DILocation(line: 1512, column: 17, scope: !4430)
!4447 = !DILocation(line: 1514, column: 5, scope: !4430)
!4448 = !DILocation(line: 0, scope: !4430)
!4449 = !DILocation(line: 1516, column: 8, scope: !4427)
!4450 = !DILocation(line: 1517, column: 19, scope: !4451)
!4451 = distinct !DILexicalBlock(scope: !4452, file: !2290, line: 1516, column: 33)
!4452 = distinct !DILexicalBlock(scope: !4427, file: !2290, line: 1516, column: 8)
!4453 = !DILocation(line: 1517, column: 17, scope: !4451)
!4454 = !DILocation(line: 1518, column: 4, scope: !4451)
!4455 = !DILocation(line: 1519, column: 19, scope: !4456)
!4456 = distinct !DILexicalBlock(scope: !4457, file: !2290, line: 1518, column: 39)
!4457 = distinct !DILexicalBlock(scope: !4452, file: !2290, line: 1518, column: 15)
!4458 = !DILocation(line: 1519, column: 17, scope: !4456)
!4459 = !DILocation(line: 1520, column: 4, scope: !4456)
!4460 = !DILocation(line: 1522, column: 4, scope: !4461)
!4461 = distinct !DILexicalBlock(scope: !4462, file: !2290, line: 1521, column: 47)
!4462 = distinct !DILexicalBlock(scope: !4428, file: !2290, line: 1521, column: 14)
!4463 = !DILocation(line: 1527, column: 19, scope: !4464)
!4464 = distinct !DILexicalBlock(scope: !4461, file: !2290, line: 1522, column: 24)
!4465 = !DILocation(line: 1527, column: 17, scope: !4464)
!4466 = !DILocation(line: 1528, column: 5, scope: !4464)
!4467 = !DILocation(line: 0, scope: !4468)
!4468 = distinct !DILexicalBlock(scope: !4464, file: !2290, line: 1530, column: 9)
!4469 = !DILocation(line: 1540, column: 23, scope: !4464)
!4470 = !DILocation(line: 1539, column: 17, scope: !4464)
!4471 = !DILocation(line: 1542, column: 5, scope: !4464)
!4472 = !DILocation(line: 1545, column: 23, scope: !4464)
!4473 = !DILocation(line: 1544, column: 17, scope: !4464)
!4474 = !DILocation(line: 1547, column: 5, scope: !4464)
!4475 = !DILocation(line: 1551, column: 23, scope: !4464)
!4476 = !DILocation(line: 1551, column: 6, scope: !4464)
!4477 = !DILocation(line: 1550, column: 17, scope: !4464)
!4478 = !DILocation(line: 1552, column: 5, scope: !4464)
!4479 = !DILocation(line: 0, scope: !4464)
!4480 = !DILocation(line: 1554, column: 8, scope: !4461)
!4481 = !DILocation(line: 1555, column: 19, scope: !4482)
!4482 = distinct !DILexicalBlock(scope: !4483, file: !2290, line: 1554, column: 33)
!4483 = distinct !DILexicalBlock(scope: !4461, file: !2290, line: 1554, column: 8)
!4484 = !DILocation(line: 1555, column: 17, scope: !4482)
!4485 = !DILocation(line: 1556, column: 4, scope: !4482)
!4486 = !DILocation(line: 1557, column: 19, scope: !4487)
!4487 = distinct !DILexicalBlock(scope: !4488, file: !2290, line: 1556, column: 39)
!4488 = distinct !DILexicalBlock(scope: !4483, file: !2290, line: 1556, column: 15)
!4489 = !DILocation(line: 1557, column: 17, scope: !4487)
!4490 = !DILocation(line: 1558, column: 4, scope: !4487)
!4491 = !DILocation(line: 0, scope: !4492)
!4492 = distinct !DILexicalBlock(scope: !4493, file: !2290, line: 1560, column: 8)
!4493 = distinct !DILexicalBlock(scope: !4494, file: !2290, line: 1559, column: 45)
!4494 = distinct !DILexicalBlock(scope: !4462, file: !2290, line: 1559, column: 14)
!4495 = !DILocation(line: 1566, column: 17, scope: !4496)
!4496 = distinct !DILexicalBlock(scope: !4497, file: !2290, line: 1565, column: 46)
!4497 = distinct !DILexicalBlock(scope: !4494, file: !2290, line: 1565, column: 14)
!4498 = !DILocation(line: 1566, column: 15, scope: !4496)
!4499 = !DILocation(line: 1567, column: 3, scope: !4496)
!4500 = !DILocation(line: 1574, column: 21, scope: !4329)
!4501 = !DILocation(line: 1575, column: 4, scope: !4327)
!4502 = !DILocation(line: 0, scope: !4327)
!4503 = !DILocation(line: 1575, column: 4, scope: !4504)
!4504 = distinct !DILexicalBlock(scope: !4327, file: !2290, line: 1575, column: 4)
!4505 = !DILocation(line: 1582, column: 17, scope: !4265)
!4506 = !DILocation(line: 1582, column: 3, scope: !4265)
!4507 = !DILocation(line: 1584, column: 4, scope: !4331)
!4508 = !DILocation(line: 0, scope: !4331)
!4509 = !DILocation(line: 1584, column: 4, scope: !4510)
!4510 = distinct !DILexicalBlock(scope: !4331, file: !2290, line: 1584, column: 4)
!4511 = !DILocation(line: 1587, column: 31, scope: !4334)
!4512 = !DILocation(line: 1591, column: 18, scope: !4513)
!4513 = distinct !DILexicalBlock(scope: !4334, file: !2290, line: 1591, column: 8)
!4514 = !DILocation(line: 1591, column: 8, scope: !4334)
!4515 = !DILocation(line: 1592, column: 11, scope: !4516)
!4516 = distinct !DILexicalBlock(scope: !4513, file: !2290, line: 1591, column: 24)
!4517 = !DILocation(line: 0, scope: !4334)
!4518 = !DILocation(line: 1593, column: 4, scope: !4516)
!4519 = !DILocation(line: 1594, column: 11, scope: !4520)
!4520 = distinct !DILexicalBlock(scope: !4513, file: !2290, line: 1593, column: 11)
!4521 = !DILocation(line: 1604, column: 51, scope: !4332)
!4522 = !DILocation(line: 1604, column: 13, scope: !4332)
!4523 = !DILocation(line: 1604, column: 11, scope: !4332)
!4524 = !DILocation(line: 1606, column: 4, scope: !4332)
!4525 = !DILocation(line: 1609, column: 14, scope: !4526)
!4526 = distinct !DILexicalBlock(scope: !4332, file: !2290, line: 1609, column: 8)
!4527 = !DILocation(line: 1609, column: 8, scope: !4332)
!4528 = !DILocation(line: 1619, column: 18, scope: !4332)
!4529 = !DILocation(line: 1620, column: 13, scope: !4530)
!4530 = distinct !DILexicalBlock(scope: !4332, file: !2290, line: 1620, column: 8)
!4531 = !DILocation(line: 1620, column: 8, scope: !4332)
!4532 = !DILocation(line: 1622, column: 36, scope: !4533)
!4533 = distinct !DILexicalBlock(scope: !4530, file: !2290, line: 1620, column: 18)
!4534 = !DILocation(line: 1622, column: 17, scope: !4533)
!4535 = !DILocation(line: 1623, column: 4, scope: !4533)
!4536 = !DILocation(line: 1632, column: 29, scope: !4332)
!4537 = !DILocation(line: 1632, column: 10, scope: !4332)
!4538 = !DILocation(line: 1632, column: 4, scope: !4332)
!4539 = !DILocation(line: 1407, column: 8, scope: !4265)
!4540 = !DILocation(line: 0, scope: !4332)
!4541 = !DILocation(line: 1634, column: 3, scope: !4332)
!4542 = !DILocation(line: 1640, column: 18, scope: !4337)
!4543 = !DILocation(line: 1640, column: 8, scope: !4332)
!4544 = !DILocation(line: 1729, column: 13, scope: !4545)
!4545 = distinct !DILexicalBlock(scope: !4265, file: !2290, line: 1729, column: 7)
!4546 = !DILocation(line: 1641, column: 22, scope: !4336)
!4547 = !DILocation(line: 0, scope: !4336)
!4548 = !DILocation(line: 1646, column: 21, scope: !4336)
!4549 = !DILocation(line: 1649, column: 13, scope: !4550)
!4550 = distinct !DILexicalBlock(scope: !4336, file: !2290, line: 1649, column: 9)
!4551 = !DILocation(line: 1649, column: 9, scope: !4336)
!4552 = !DILocation(line: 1650, column: 35, scope: !4553)
!4553 = distinct !DILexicalBlock(scope: !4550, file: !2290, line: 1649, column: 34)
!4554 = !DILocation(line: 1650, column: 23, scope: !4553)
!4555 = !DILocation(line: 1651, column: 5, scope: !4553)
!4556 = !DILocation(line: 1660, column: 15, scope: !4557)
!4557 = distinct !DILexicalBlock(scope: !4332, file: !2290, line: 1660, column: 8)
!4558 = !DILocation(line: 1660, column: 19, scope: !4557)
!4559 = !DILocation(line: 1660, column: 8, scope: !4332)
!4560 = !DILocation(line: 1661, column: 23, scope: !4561)
!4561 = distinct !DILexicalBlock(scope: !4557, file: !2290, line: 1660, column: 28)
!4562 = !DILocation(line: 1661, column: 11, scope: !4561)
!4563 = !DILocation(line: 1665, column: 22, scope: !4561)
!4564 = !DILocation(line: 1666, column: 21, scope: !4561)
!4565 = !DILocation(line: 1668, column: 5, scope: !4561)
!4566 = !DILocation(line: 1677, column: 30, scope: !4567)
!4567 = distinct !DILexicalBlock(scope: !4568, file: !2290, line: 1676, column: 49)
!4568 = distinct !DILexicalBlock(scope: !4332, file: !2290, line: 1676, column: 8)
!4569 = !DILocation(line: 1677, column: 5, scope: !4567)
!4570 = !DILocation(line: 1680, column: 4, scope: !4332)
!4571 = !DILocation(line: 0, scope: !4513)
!4572 = !DILocation(line: 1597, column: 14, scope: !4334)
!4573 = !DILocation(line: 1699, column: 11, scope: !4574)
!4574 = distinct !DILexicalBlock(scope: !4265, file: !2290, line: 1699, column: 7)
!4575 = !DILocation(line: 1699, column: 7, scope: !4265)
!4576 = !DILocation(line: 1725, column: 7, scope: !4577)
!4577 = distinct !DILexicalBlock(scope: !4265, file: !2290, line: 1725, column: 7)
!4578 = !DILocation(line: 1725, column: 12, scope: !4577)
!4579 = !DILocation(line: 1747, column: 13, scope: !4344)
!4580 = !DILocation(line: 1747, column: 7, scope: !4265)
!4581 = !DILocation(line: 1722, column: 24, scope: !4265)
!4582 = !DILocation(line: 1725, column: 7, scope: !4265)
!4583 = !DILocation(line: 1729, column: 7, scope: !4265)
!4584 = !DILocation(line: 1736, column: 13, scope: !4585)
!4585 = distinct !DILexicalBlock(scope: !4265, file: !2290, line: 1736, column: 7)
!4586 = !DILocation(line: 1735, column: 19, scope: !4265)
!4587 = !DILocation(line: 1736, column: 7, scope: !4265)
!4588 = !DILocation(line: 1748, column: 10, scope: !4343)
!4589 = !DILocation(line: 1750, column: 15, scope: !4342)
!4590 = !DILocation(line: 1750, column: 8, scope: !4343)
!4591 = !DILocation(line: 0, scope: !4341)
!4592 = !DILocation(line: 1756, column: 15, scope: !4350)
!4593 = !DILocation(line: 1756, column: 9, scope: !4341)
!4594 = !DILocation(line: 1758, column: 7, scope: !4346)
!4595 = !DILocation(line: 0, scope: !4346)
!4596 = !DILocation(line: 1758, column: 7, scope: !4597)
!4597 = distinct !DILexicalBlock(scope: !4346, file: !2290, line: 1758, column: 7)
!4598 = !DILocation(line: 1764, column: 5, scope: !4341)
!4599 = !DILocation(line: 0, scope: !4343)
!4600 = !DILocation(line: 1764, column: 20, scope: !4341)
!4601 = !DILocation(line: 1764, column: 17, scope: !4341)
!4602 = !DILocation(line: 1765, column: 6, scope: !4352)
!4603 = !DILocation(line: 0, scope: !4352)
!4604 = !DILocation(line: 1765, column: 6, scope: !4605)
!4605 = distinct !DILexicalBlock(scope: !4352, file: !2290, line: 1765, column: 6)
!4606 = distinct !{!4606, !4598, !4607}
!4607 = !DILocation(line: 1766, column: 5, scope: !4341)
!4608 = !DILocation(line: 1773, column: 12, scope: !4357)
!4609 = !DILocation(line: 1773, column: 7, scope: !4265)
!4610 = !DILocation(line: 1773, column: 7, scope: !4357)
!4611 = !DILocation(line: 1774, column: 4, scope: !4355)
!4612 = !DILocation(line: 0, scope: !4355)
!4613 = !DILocation(line: 1774, column: 4, scope: !4614)
!4614 = distinct !DILexicalBlock(scope: !4355, file: !2290, line: 1774, column: 4)
!4615 = !DILocation(line: 1818, column: 8, scope: !4361)
!4616 = !DILocation(line: 1818, column: 27, scope: !4361)
!4617 = !DILocation(line: 1818, column: 25, scope: !4361)
!4618 = !DILocation(line: 1818, column: 8, scope: !4362)
!4619 = !DILocation(line: 1819, column: 5, scope: !4359)
!4620 = !DILocation(line: 0, scope: !4359)
!4621 = !DILocation(line: 1819, column: 5, scope: !4622)
!4622 = distinct !DILexicalBlock(scope: !4359, file: !2290, line: 1819, column: 5)
!4623 = !DILocation(line: 1822, column: 14, scope: !4367)
!4624 = !DILocation(line: 1822, column: 8, scope: !4362)
!4625 = !DILocation(line: 1823, column: 5, scope: !4365)
!4626 = !DILocation(line: 0, scope: !4365)
!4627 = !DILocation(line: 1823, column: 5, scope: !4628)
!4628 = distinct !DILexicalBlock(scope: !4365, file: !2290, line: 1823, column: 5)
!4629 = !DILocation(line: 1826, column: 20, scope: !4362)
!4630 = !DILocation(line: 1827, column: 4, scope: !4362)
!4631 = !DILocation(line: 0, scope: !4362)
!4632 = !DILocation(line: 1827, column: 21, scope: !4362)
!4633 = !DILocation(line: 1827, column: 18, scope: !4362)
!4634 = !DILocation(line: 1828, column: 5, scope: !4369)
!4635 = !DILocation(line: 0, scope: !4369)
!4636 = !DILocation(line: 1828, column: 5, scope: !4637)
!4637 = distinct !DILexicalBlock(scope: !4369, file: !2290, line: 1828, column: 5)
!4638 = distinct !{!4638, !4630, !4639}
!4639 = !DILocation(line: 1829, column: 4, scope: !4362)
!4640 = !DILocation(line: 1831, column: 4, scope: !4372)
!4641 = !DILocation(line: 0, scope: !4372)
!4642 = !DILocation(line: 1831, column: 4, scope: !4643)
!4643 = distinct !DILexicalBlock(scope: !4372, file: !2290, line: 1831, column: 4)
!4644 = !DILocation(line: 1835, column: 16, scope: !4265)
!4645 = !DILocation(line: 1835, column: 3, scope: !4265)
!4646 = !DILocation(line: 1836, column: 4, scope: !4374)
!4647 = !DILocation(line: 0, scope: !4374)
!4648 = !DILocation(line: 1836, column: 4, scope: !4649)
!4649 = distinct !DILexicalBlock(scope: !4374, file: !2290, line: 1836, column: 4)
!4650 = !DILocation(line: 1837, column: 4, scope: !4375)
!4651 = distinct !{!4651, !4645, !4652}
!4652 = !DILocation(line: 1838, column: 3, scope: !4265)
!4653 = !DILocation(line: 1844, column: 1, scope: !4238)
!4654 = distinct !DISubprogram(name: "extract_conversion", scope: !2290, file: !2290, line: 642, type: !4655, scopeLine: 644, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2286, retainedNodes: !4657)
!4655 = !DISubroutineType(types: !4656)
!4656 = !{!118, !4311, !118}
!4657 = !{!4658, !4659}
!4658 = !DILocalVariable(name: "conv", arg: 1, scope: !4654, file: !2290, line: 642, type: !4311)
!4659 = !DILocalVariable(name: "sp", arg: 2, scope: !4654, file: !2290, line: 643, type: !118)
!4660 = !DILocation(line: 0, scope: !4654)
!4661 = !DILocation(line: 645, column: 10, scope: !4654)
!4662 = !DILocation(line: 653, column: 2, scope: !4654)
!4663 = !DILocation(line: 654, column: 6, scope: !4664)
!4664 = distinct !DILexicalBlock(scope: !4654, file: !2290, line: 654, column: 6)
!4665 = !DILocation(line: 654, column: 10, scope: !4664)
!4666 = !DILocation(line: 654, column: 6, scope: !4654)
!4667 = !DILocation(line: 655, column: 24, scope: !4668)
!4668 = distinct !DILexicalBlock(scope: !4664, file: !2290, line: 654, column: 18)
!4669 = !DILocation(line: 655, column: 19, scope: !4668)
!4670 = !DILocation(line: 656, column: 3, scope: !4668)
!4671 = !DILocation(line: 659, column: 7, scope: !4654)
!4672 = !DILocation(line: 660, column: 7, scope: !4654)
!4673 = !DILocation(line: 661, column: 7, scope: !4654)
!4674 = !DILocation(line: 662, column: 7, scope: !4654)
!4675 = !DILocation(line: 663, column: 7, scope: !4654)
!4676 = !DILocation(line: 665, column: 2, scope: !4654)
!4677 = !DILocation(line: 666, column: 1, scope: !4654)
!4678 = distinct !DISubprogram(name: "outs", scope: !2290, file: !2290, line: 1319, type: !4679, scopeLine: 1323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2286, retainedNodes: !4681)
!4679 = !DISubroutineType(types: !4680)
!4680 = !{!107, !3399, !106, !118, !118}
!4681 = !{!4682, !4683, !4684, !4685, !4686, !4687}
!4682 = !DILocalVariable(name: "out", arg: 1, scope: !4678, file: !2290, line: 1319, type: !3399)
!4683 = !DILocalVariable(name: "ctx", arg: 2, scope: !4678, file: !2290, line: 1320, type: !106)
!4684 = !DILocalVariable(name: "sp", arg: 3, scope: !4678, file: !2290, line: 1321, type: !118)
!4685 = !DILocalVariable(name: "ep", arg: 4, scope: !4678, file: !2290, line: 1322, type: !118)
!4686 = !DILocalVariable(name: "count", scope: !4678, file: !2290, line: 1324, type: !185)
!4687 = !DILocalVariable(name: "rc", scope: !4688, file: !2290, line: 1327, type: !107)
!4688 = distinct !DILexicalBlock(scope: !4678, file: !2290, line: 1326, column: 45)
!4689 = !DILocation(line: 0, scope: !4678)
!4690 = !DILocation(line: 1326, column: 2, scope: !4678)
!4691 = !DILocation(line: 1324, column: 9, scope: !4678)
!4692 = !DILocation(line: 1326, column: 13, scope: !4678)
!4693 = !DILocation(line: 1326, column: 19, scope: !4678)
!4694 = !DILocation(line: 1327, column: 21, scope: !4688)
!4695 = !DILocation(line: 1326, column: 36, scope: !4678)
!4696 = !DILocation(line: 1326, column: 39, scope: !4678)
!4697 = !DILocation(line: 1327, column: 24, scope: !4688)
!4698 = !DILocation(line: 1327, column: 16, scope: !4688)
!4699 = !DILocation(line: 1327, column: 12, scope: !4688)
!4700 = !DILocation(line: 0, scope: !4688)
!4701 = !DILocation(line: 1329, column: 10, scope: !4702)
!4702 = distinct !DILexicalBlock(scope: !4688, file: !2290, line: 1329, column: 7)
!4703 = !DILocation(line: 1329, column: 7, scope: !4688)
!4704 = distinct !{!4704, !4690, !4705}
!4705 = !DILocation(line: 1333, column: 2, scope: !4678)
!4706 = !DILocation(line: 1336, column: 1, scope: !4678)
!4707 = distinct !DISubprogram(name: "encode_uint", scope: !2290, file: !2290, line: 788, type: !4708, scopeLine: 792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2286, retainedNodes: !4710)
!4708 = !DISubroutineType(types: !4709)
!4709 = !{!193, !2312, !4311, !193, !118}
!4710 = !{!4711, !4712, !4713, !4714, !4715, !4716, !4718, !4719}
!4711 = !DILocalVariable(name: "value", arg: 1, scope: !4707, file: !2290, line: 788, type: !2312)
!4712 = !DILocalVariable(name: "conv", arg: 2, scope: !4707, file: !2290, line: 789, type: !4311)
!4713 = !DILocalVariable(name: "bps", arg: 3, scope: !4707, file: !2290, line: 790, type: !193)
!4714 = !DILocalVariable(name: "bpe", arg: 4, scope: !4707, file: !2290, line: 791, type: !118)
!4715 = !DILocalVariable(name: "upcase", scope: !4707, file: !2290, line: 793, type: !145)
!4716 = !DILocalVariable(name: "radix", scope: !4707, file: !2290, line: 794, type: !4717)
!4717 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !32)
!4718 = !DILocalVariable(name: "bp", scope: !4707, file: !2290, line: 795, type: !193)
!4719 = !DILocalVariable(name: "lsv", scope: !4720, file: !2290, line: 798, type: !32)
!4720 = distinct !DILexicalBlock(scope: !4707, file: !2290, line: 797, column: 5)
!4721 = !DILocation(line: 0, scope: !4707)
!4722 = !DILocation(line: 793, column: 35, scope: !4707)
!4723 = !DILocation(line: 793, column: 24, scope: !4707)
!4724 = !DILocation(line: 793, column: 16, scope: !4707)
!4725 = !DILocation(line: 794, column: 29, scope: !4707)
!4726 = !DILocation(line: 795, column: 24, scope: !4707)
!4727 = !DILocation(line: 795, column: 17, scope: !4707)
!4728 = !DILocation(line: 797, column: 2, scope: !4707)
!4729 = !DILocation(line: 802, column: 9, scope: !4720)
!4730 = !DILocation(line: 798, column: 22, scope: !4720)
!4731 = !DILocation(line: 0, scope: !4720)
!4732 = !DILocation(line: 800, column: 16, scope: !4720)
!4733 = !DILocation(line: 800, column: 11, scope: !4720)
!4734 = !DILocation(line: 800, column: 4, scope: !4720)
!4735 = !DILocation(line: 800, column: 9, scope: !4720)
!4736 = !DILocation(line: 803, column: 18, scope: !4707)
!4737 = !DILocation(line: 803, column: 24, scope: !4707)
!4738 = !DILocation(line: 803, column: 2, scope: !4720)
!4739 = distinct !{!4739, !4728, !4740}
!4740 = !DILocation(line: 803, column: 37, scope: !4707)
!4741 = !DILocation(line: 808, column: 12, scope: !4742)
!4742 = distinct !DILexicalBlock(scope: !4707, file: !2290, line: 808, column: 6)
!4743 = !DILocation(line: 808, column: 6, scope: !4707)
!4744 = !DILocation(line: 809, column: 7, scope: !4745)
!4745 = distinct !DILexicalBlock(scope: !4742, file: !2290, line: 808, column: 23)
!4746 = !DILocation(line: 813, column: 3, scope: !4747)
!4747 = distinct !DILexicalBlock(scope: !4748, file: !2290, line: 811, column: 27)
!4748 = distinct !DILexicalBlock(scope: !4749, file: !2290, line: 811, column: 14)
!4749 = distinct !DILexicalBlock(scope: !4745, file: !2290, line: 809, column: 7)
!4750 = !DILocation(line: 0, scope: !4749)
!4751 = !DILocation(line: 818, column: 2, scope: !4707)
!4752 = distinct !DISubprogram(name: "store_count", scope: !2290, file: !2290, line: 1280, type: !4753, scopeLine: 1283, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2286, retainedNodes: !4757)
!4753 = !DISubroutineType(types: !4754)
!4754 = !{null, !4755, !106, !107}
!4755 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4756, size: 32)
!4756 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4278)
!4757 = !{!4758, !4759, !4760}
!4758 = !DILocalVariable(name: "conv", arg: 1, scope: !4752, file: !2290, line: 1280, type: !4755)
!4759 = !DILocalVariable(name: "dp", arg: 2, scope: !4752, file: !2290, line: 1281, type: !106)
!4760 = !DILocalVariable(name: "count", arg: 3, scope: !4752, file: !2290, line: 1282, type: !107)
!4761 = !DILocation(line: 0, scope: !4752)
!4762 = !DILocation(line: 1284, column: 38, scope: !4752)
!4763 = !DILocation(line: 1284, column: 2, scope: !4752)
!4764 = !DILocation(line: 1286, column: 4, scope: !4765)
!4765 = distinct !DILexicalBlock(scope: !4752, file: !2290, line: 1284, column: 50)
!4766 = !DILocation(line: 1286, column: 14, scope: !4765)
!4767 = !DILocation(line: 1287, column: 3, scope: !4765)
!4768 = !DILocation(line: 1289, column: 24, scope: !4765)
!4769 = !DILocation(line: 1289, column: 22, scope: !4765)
!4770 = !DILocation(line: 1290, column: 3, scope: !4765)
!4771 = !DILocation(line: 1292, column: 18, scope: !4765)
!4772 = !DILocation(line: 1292, column: 4, scope: !4765)
!4773 = !DILocation(line: 1292, column: 16, scope: !4765)
!4774 = !DILocation(line: 1293, column: 3, scope: !4765)
!4775 = !DILocation(line: 1295, column: 4, scope: !4765)
!4776 = !DILocation(line: 1295, column: 15, scope: !4765)
!4777 = !DILocation(line: 1296, column: 3, scope: !4765)
!4778 = !DILocation(line: 1298, column: 22, scope: !4765)
!4779 = !DILocation(line: 1298, column: 4, scope: !4765)
!4780 = !DILocation(line: 1298, column: 20, scope: !4765)
!4781 = !DILocation(line: 1299, column: 3, scope: !4765)
!4782 = !DILocation(line: 1301, column: 21, scope: !4765)
!4783 = !DILocation(line: 1301, column: 4, scope: !4765)
!4784 = !DILocation(line: 1301, column: 19, scope: !4765)
!4785 = !DILocation(line: 1302, column: 3, scope: !4765)
!4786 = !DILocation(line: 1304, column: 4, scope: !4765)
!4787 = !DILocation(line: 1304, column: 17, scope: !4765)
!4788 = !DILocation(line: 1305, column: 3, scope: !4765)
!4789 = !DILocation(line: 1307, column: 4, scope: !4765)
!4790 = !DILocation(line: 1307, column: 20, scope: !4765)
!4791 = !DILocation(line: 1308, column: 3, scope: !4765)
!4792 = !DILocation(line: 1316, column: 1, scope: !4752)
!4793 = distinct !DISubprogram(name: "isupper", scope: !4794, file: !4794, line: 16, type: !214, scopeLine: 17, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2286, retainedNodes: !4795)
!4794 = !DIFile(filename: "zephyr/lib/libc/minimal/include/ctype.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4795 = !{!4796}
!4796 = !DILocalVariable(name: "a", arg: 1, scope: !4793, file: !4794, line: 16, type: !107)
!4797 = !DILocation(line: 0, scope: !4793)
!4798 = !DILocation(line: 18, column: 29, scope: !4793)
!4799 = !DILocation(line: 18, column: 45, scope: !4793)
!4800 = !DILocation(line: 18, column: 2, scope: !4793)
!4801 = distinct !DISubprogram(name: "conversion_radix", scope: !2290, file: !2290, line: 761, type: !4802, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2286, retainedNodes: !4804)
!4802 = !DISubroutineType(types: !4803)
!4803 = !{!185, !120}
!4804 = !{!4805}
!4805 = !DILocalVariable(name: "specifier", arg: 1, scope: !4801, file: !2290, line: 761, type: !120)
!4806 = !DILocation(line: 0, scope: !4801)
!4807 = !DILocation(line: 763, column: 2, scope: !4801)
!4808 = !DILocation(line: 770, column: 3, scope: !4809)
!4809 = distinct !DILexicalBlock(scope: !4801, file: !2290, line: 763, column: 21)
!4810 = !DILocation(line: 774, column: 3, scope: !4809)
!4811 = !DILocation(line: 0, scope: !4809)
!4812 = !DILocation(line: 776, column: 1, scope: !4801)
!4813 = distinct !DISubprogram(name: "extract_flags", scope: !2290, file: !2290, line: 339, type: !4655, scopeLine: 341, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2286, retainedNodes: !4814)
!4814 = !{!4815, !4816, !4817}
!4815 = !DILocalVariable(name: "conv", arg: 1, scope: !4813, file: !2290, line: 339, type: !4311)
!4816 = !DILocalVariable(name: "sp", arg: 2, scope: !4813, file: !2290, line: 340, type: !118)
!4817 = !DILocalVariable(name: "loop", scope: !4813, file: !2290, line: 342, type: !145)
!4818 = !DILocation(line: 0, scope: !4813)
!4819 = !DILocation(line: 344, column: 2, scope: !4813)
!4820 = !DILocation(line: 345, column: 11, scope: !4821)
!4821 = distinct !DILexicalBlock(scope: !4813, file: !2290, line: 344, column: 5)
!4822 = !DILocation(line: 345, column: 3, scope: !4821)
!4823 = !DILocation(line: 351, column: 4, scope: !4824)
!4824 = distinct !DILexicalBlock(scope: !4821, file: !2290, line: 345, column: 16)
!4825 = !DILocation(line: 354, column: 4, scope: !4824)
!4826 = !DILocation(line: 357, column: 4, scope: !4824)
!4827 = !DILocation(line: 360, column: 4, scope: !4824)
!4828 = !DILocation(line: 0, scope: !4824)
!4829 = !DILocation(line: 370, column: 12, scope: !4830)
!4830 = distinct !DILexicalBlock(scope: !4813, file: !2290, line: 370, column: 6)
!4831 = !DILocation(line: 370, column: 22, scope: !4830)
!4832 = !DILocation(line: 371, column: 19, scope: !4833)
!4833 = distinct !DILexicalBlock(scope: !4830, file: !2290, line: 370, column: 42)
!4834 = !DILocation(line: 372, column: 2, scope: !4833)
!4835 = !DILocation(line: 376, column: 2, scope: !4813)
!4836 = distinct !DISubprogram(name: "extract_width", scope: !2290, file: !2290, line: 388, type: !4655, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2286, retainedNodes: !4837)
!4837 = !{!4838, !4839, !4840, !4841}
!4838 = !DILocalVariable(name: "conv", arg: 1, scope: !4836, file: !2290, line: 388, type: !4311)
!4839 = !DILocalVariable(name: "sp", arg: 2, scope: !4836, file: !2290, line: 389, type: !118)
!4840 = !DILocalVariable(name: "wp", scope: !4836, file: !2290, line: 398, type: !118)
!4841 = !DILocalVariable(name: "width", scope: !4836, file: !2290, line: 399, type: !185)
!4842 = !DILocation(line: 0, scope: !4836)
!4843 = !DILocation(line: 391, column: 8, scope: !4836)
!4844 = !DILocation(line: 391, column: 22, scope: !4836)
!4845 = !DILocation(line: 393, column: 6, scope: !4846)
!4846 = distinct !DILexicalBlock(scope: !4836, file: !2290, line: 393, column: 6)
!4847 = !DILocation(line: 393, column: 10, scope: !4846)
!4848 = !DILocation(line: 393, column: 6, scope: !4836)
!4849 = !DILocation(line: 394, column: 20, scope: !4850)
!4850 = distinct !DILexicalBlock(scope: !4846, file: !2290, line: 393, column: 18)
!4851 = !DILocation(line: 395, column: 10, scope: !4850)
!4852 = !DILocation(line: 395, column: 3, scope: !4850)
!4853 = !DILocation(line: 399, column: 17, scope: !4836)
!4854 = !DILocation(line: 401, column: 6, scope: !4855)
!4855 = distinct !DILexicalBlock(scope: !4836, file: !2290, line: 401, column: 6)
!4856 = !DILocation(line: 401, column: 9, scope: !4855)
!4857 = !DILocation(line: 401, column: 6, scope: !4836)
!4858 = !DILocation(line: 402, column: 23, scope: !4859)
!4859 = distinct !DILexicalBlock(scope: !4855, file: !2290, line: 401, column: 16)
!4860 = !DILocation(line: 403, column: 9, scope: !4859)
!4861 = !DILocation(line: 403, column: 21, scope: !4859)
!4862 = !DILocation(line: 405, column: 11, scope: !4859)
!4863 = !DILocation(line: 404, column: 21, scope: !4859)
!4864 = !DILocation(line: 406, column: 2, scope: !4859)
!4865 = !DILocation(line: 409, column: 1, scope: !4836)
!4866 = distinct !DISubprogram(name: "extract_prec", scope: !2290, file: !2290, line: 420, type: !4655, scopeLine: 422, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2286, retainedNodes: !4867)
!4867 = !{!4868, !4869, !4870}
!4868 = !DILocalVariable(name: "conv", arg: 1, scope: !4866, file: !2290, line: 420, type: !4311)
!4869 = !DILocalVariable(name: "sp", arg: 2, scope: !4866, file: !2290, line: 421, type: !118)
!4870 = !DILocalVariable(name: "prec", scope: !4866, file: !2290, line: 435, type: !185)
!4871 = !DILocation(line: 0, scope: !4866)
!4872 = !DILocation(line: 423, column: 24, scope: !4866)
!4873 = !DILocation(line: 423, column: 28, scope: !4866)
!4874 = !DILocation(line: 423, column: 8, scope: !4866)
!4875 = !DILocation(line: 423, column: 21, scope: !4866)
!4876 = !DILocation(line: 425, column: 6, scope: !4866)
!4877 = !DILocation(line: 428, column: 2, scope: !4866)
!4878 = !DILocation(line: 430, column: 6, scope: !4879)
!4879 = distinct !DILexicalBlock(scope: !4866, file: !2290, line: 430, column: 6)
!4880 = !DILocation(line: 430, column: 10, scope: !4879)
!4881 = !DILocation(line: 430, column: 6, scope: !4866)
!4882 = !DILocation(line: 431, column: 19, scope: !4883)
!4883 = distinct !DILexicalBlock(scope: !4879, file: !2290, line: 430, column: 18)
!4884 = !DILocation(line: 432, column: 10, scope: !4883)
!4885 = !DILocation(line: 432, column: 3, scope: !4883)
!4886 = !DILocation(line: 435, column: 16, scope: !4866)
!4887 = !DILocation(line: 437, column: 8, scope: !4866)
!4888 = !DILocation(line: 437, column: 19, scope: !4866)
!4889 = !DILocation(line: 439, column: 10, scope: !4866)
!4890 = !DILocation(line: 438, column: 20, scope: !4866)
!4891 = !DILocation(line: 441, column: 9, scope: !4866)
!4892 = !DILocation(line: 442, column: 1, scope: !4866)
!4893 = distinct !DISubprogram(name: "extract_length", scope: !2290, file: !2290, line: 453, type: !4655, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2286, retainedNodes: !4894)
!4894 = !{!4895, !4896}
!4895 = !DILocalVariable(name: "conv", arg: 1, scope: !4893, file: !2290, line: 453, type: !4311)
!4896 = !DILocalVariable(name: "sp", arg: 2, scope: !4893, file: !2290, line: 454, type: !118)
!4897 = !DILocation(line: 0, scope: !4893)
!4898 = !DILocation(line: 456, column: 10, scope: !4893)
!4899 = !DILocation(line: 456, column: 2, scope: !4893)
!4900 = !DILocation(line: 458, column: 8, scope: !4901)
!4901 = distinct !DILexicalBlock(scope: !4902, file: !2290, line: 458, column: 7)
!4902 = distinct !DILexicalBlock(scope: !4893, file: !2290, line: 456, column: 15)
!4903 = !DILocation(line: 458, column: 7, scope: !4901)
!4904 = !DILocation(line: 458, column: 13, scope: !4901)
!4905 = !DILocation(line: 0, scope: !4901)
!4906 = !DILocation(line: 458, column: 7, scope: !4902)
!4907 = !DILocation(line: 459, column: 21, scope: !4908)
!4908 = distinct !DILexicalBlock(scope: !4901, file: !2290, line: 458, column: 21)
!4909 = !DILocation(line: 460, column: 4, scope: !4908)
!4910 = !DILocation(line: 461, column: 3, scope: !4908)
!4911 = !DILocation(line: 462, column: 21, scope: !4912)
!4912 = distinct !DILexicalBlock(scope: !4901, file: !2290, line: 461, column: 10)
!4913 = !DILocation(line: 466, column: 8, scope: !4914)
!4914 = distinct !DILexicalBlock(scope: !4902, file: !2290, line: 466, column: 7)
!4915 = !DILocation(line: 466, column: 7, scope: !4914)
!4916 = !DILocation(line: 466, column: 13, scope: !4914)
!4917 = !DILocation(line: 0, scope: !4914)
!4918 = !DILocation(line: 466, column: 7, scope: !4902)
!4919 = !DILocation(line: 467, column: 21, scope: !4920)
!4920 = distinct !DILexicalBlock(scope: !4914, file: !2290, line: 466, column: 21)
!4921 = !DILocation(line: 468, column: 4, scope: !4920)
!4922 = !DILocation(line: 469, column: 3, scope: !4920)
!4923 = !DILocation(line: 470, column: 21, scope: !4924)
!4924 = distinct !DILexicalBlock(scope: !4914, file: !2290, line: 469, column: 10)
!4925 = !DILocation(line: 474, column: 9, scope: !4902)
!4926 = !DILocation(line: 474, column: 20, scope: !4902)
!4927 = !DILocation(line: 475, column: 3, scope: !4902)
!4928 = !DILocation(line: 476, column: 3, scope: !4902)
!4929 = !DILocation(line: 478, column: 9, scope: !4902)
!4930 = !DILocation(line: 478, column: 20, scope: !4902)
!4931 = !DILocation(line: 479, column: 3, scope: !4902)
!4932 = !DILocation(line: 480, column: 3, scope: !4902)
!4933 = !DILocation(line: 482, column: 9, scope: !4902)
!4934 = !DILocation(line: 482, column: 20, scope: !4902)
!4935 = !DILocation(line: 483, column: 3, scope: !4902)
!4936 = !DILocation(line: 484, column: 3, scope: !4902)
!4937 = !DILocation(line: 486, column: 9, scope: !4902)
!4938 = !DILocation(line: 486, column: 20, scope: !4902)
!4939 = !DILocation(line: 487, column: 3, scope: !4902)
!4940 = !DILocation(line: 492, column: 21, scope: !4902)
!4941 = !DILocation(line: 493, column: 3, scope: !4902)
!4942 = !DILocation(line: 495, column: 9, scope: !4902)
!4943 = !DILocation(line: 495, column: 20, scope: !4902)
!4944 = !DILocation(line: 496, column: 3, scope: !4902)
!4945 = !DILocation(line: 498, column: 2, scope: !4893)
!4946 = distinct !DISubprogram(name: "extract_specifier", scope: !2290, file: !2290, line: 513, type: !4655, scopeLine: 515, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2286, retainedNodes: !4947)
!4947 = !{!4948, !4949, !4950, !4951}
!4948 = !DILocalVariable(name: "conv", arg: 1, scope: !4946, file: !2290, line: 513, type: !4311)
!4949 = !DILocalVariable(name: "sp", arg: 2, scope: !4946, file: !2290, line: 514, type: !118)
!4950 = !DILocalVariable(name: "unsupported", scope: !4946, file: !2290, line: 516, type: !145)
!4951 = !DILabel(scope: !4952, name: "int_conv", file: !2290, line: 526)
!4952 = distinct !DILexicalBlock(scope: !4946, file: !2290, line: 520, column: 27)
!4953 = !DILocation(line: 0, scope: !4946)
!4954 = !DILocation(line: 518, column: 20, scope: !4946)
!4955 = !DILocation(line: 518, column: 8, scope: !4946)
!4956 = !DILocation(line: 518, column: 18, scope: !4946)
!4957 = !DILocation(line: 520, column: 2, scope: !4946)
!4958 = !DILocation(line: 525, column: 3, scope: !4952)
!4959 = !DILocation(line: 0, scope: !4952)
!4960 = !DILocation(line: 526, column: 1, scope: !4952)
!4961 = !DILocation(line: 528, column: 24, scope: !4962)
!4962 = distinct !DILexicalBlock(scope: !4952, file: !2290, line: 528, column: 7)
!4963 = !DILocation(line: 528, column: 7, scope: !4952)
!4964 = !DILocation(line: 535, column: 23, scope: !4965)
!4965 = distinct !DILexicalBlock(scope: !4952, file: !2290, line: 535, column: 7)
!4966 = !DILocation(line: 535, column: 7, scope: !4952)
!4967 = !DILocation(line: 536, column: 36, scope: !4968)
!4968 = distinct !DILexicalBlock(scope: !4965, file: !2290, line: 535, column: 31)
!4969 = !DILocation(line: 537, column: 3, scope: !4968)
!4970 = !DILocation(line: 570, column: 9, scope: !4952)
!4971 = !DILocation(line: 570, column: 23, scope: !4952)
!4972 = !DILocation(line: 575, column: 4, scope: !4973)
!4973 = distinct !DILexicalBlock(scope: !4974, file: !2290, line: 573, column: 48)
!4974 = distinct !DILexicalBlock(scope: !4952, file: !2290, line: 573, column: 7)
!4975 = !DILocation(line: 603, column: 9, scope: !4952)
!4976 = !DILocation(line: 603, column: 23, scope: !4952)
!4977 = !DILocation(line: 605, column: 24, scope: !4978)
!4978 = distinct !DILexicalBlock(scope: !4952, file: !2290, line: 605, column: 7)
!4979 = !DILocation(line: 605, column: 7, scope: !4952)
!4980 = !DILocation(line: 612, column: 9, scope: !4952)
!4981 = !DILocation(line: 612, column: 23, scope: !4952)
!4982 = !DILocation(line: 619, column: 24, scope: !4983)
!4983 = distinct !DILexicalBlock(scope: !4952, file: !2290, line: 619, column: 7)
!4984 = !DILocation(line: 619, column: 7, scope: !4952)
!4985 = !DILocation(line: 625, column: 9, scope: !4952)
!4986 = !DILocation(line: 625, column: 17, scope: !4952)
!4987 = !DILocation(line: 626, column: 3, scope: !4952)
!4988 = !DILocation(line: 629, column: 20, scope: !4946)
!4989 = !DILocation(line: 629, column: 8, scope: !4946)
!4990 = !DILocation(line: 518, column: 23, scope: !4946)
!4991 = !DILocation(line: 631, column: 2, scope: !4946)
!4992 = distinct !DISubprogram(name: "extract_decimal", scope: !2290, file: !2290, line: 318, type: !4993, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2286, retainedNodes: !4995)
!4993 = !DISubroutineType(types: !4994)
!4994 = !{!185, !184}
!4995 = !{!4996, !4997, !4998}
!4996 = !DILocalVariable(name: "str", arg: 1, scope: !4992, file: !2290, line: 318, type: !184)
!4997 = !DILocalVariable(name: "sp", scope: !4992, file: !2290, line: 320, type: !118)
!4998 = !DILocalVariable(name: "val", scope: !4992, file: !2290, line: 321, type: !185)
!4999 = !DILocation(line: 0, scope: !4992)
!5000 = !DILocation(line: 320, column: 19, scope: !4992)
!5001 = !DILocation(line: 323, column: 37, scope: !4992)
!5002 = !DILocation(line: 323, column: 17, scope: !4992)
!5003 = !DILocation(line: 323, column: 9, scope: !4992)
!5004 = !DILocation(line: 323, column: 2, scope: !4992)
!5005 = !DILocation(line: 324, column: 13, scope: !5006)
!5006 = distinct !DILexicalBlock(scope: !4992, file: !2290, line: 323, column: 43)
!5007 = !DILocation(line: 324, column: 24, scope: !5006)
!5008 = !DILocation(line: 324, column: 19, scope: !5006)
!5009 = !DILocation(line: 324, column: 27, scope: !5006)
!5010 = distinct !{!5010, !5004, !5011}
!5011 = !DILocation(line: 325, column: 2, scope: !4992)
!5012 = !DILocation(line: 326, column: 7, scope: !4992)
!5013 = !DILocation(line: 327, column: 2, scope: !4992)
!5014 = distinct !DISubprogram(name: "isdigit", scope: !4794, file: !4794, line: 43, type: !214, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2286, retainedNodes: !5015)
!5015 = !{!5016}
!5016 = !DILocalVariable(name: "a", arg: 1, scope: !5014, file: !4794, line: 43, type: !107)
!5017 = !DILocation(line: 0, scope: !5014)
!5018 = !DILocation(line: 45, column: 29, scope: !5014)
!5019 = !DILocation(line: 45, column: 45, scope: !5014)
!5020 = !DILocation(line: 45, column: 2, scope: !5014)
!5021 = distinct !DISubprogram(name: "assert_post_action", scope: !5022, file: !5022, line: 26, type: !5023, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2320, retainedNodes: !5025)
!5022 = !DIFile(filename: "zephyr/lib/os/assert.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5023 = !DISubroutineType(types: !5024)
!5024 = !{null, !118, !32}
!5025 = !{!5026, !5027}
!5026 = !DILocalVariable(name: "file", arg: 1, scope: !5021, file: !5022, line: 26, type: !118)
!5027 = !DILocalVariable(name: "line", arg: 2, scope: !5021, file: !5022, line: 26, type: !32)
!5028 = !DILocation(line: 0, scope: !5021)
!5029 = !DILocation(line: 43, column: 2, scope: !5030)
!5030 = distinct !DILexicalBlock(scope: !5021, file: !5022, line: 43, column: 2)
!5031 = !{i64 2151047946, i64 2151047962, i64 2151047988, i64 2151048016, i64 2151048036}
!5032 = !DILocation(line: 44, column: 1, scope: !5021)
!5033 = distinct !DISubprogram(name: "assert_print", scope: !5022, file: !5022, line: 46, type: !4009, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2320, retainedNodes: !5034)
!5034 = !{!5035, !5036}
!5035 = !DILocalVariable(name: "fmt", arg: 1, scope: !5033, file: !5022, line: 46, type: !118)
!5036 = !DILocalVariable(name: "ap", scope: !5033, file: !5022, line: 48, type: !5037)
!5037 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3019, line: 99, baseType: !5038)
!5038 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3019, line: 40, baseType: !5039)
!5039 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !5022, baseType: !5040)
!5040 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !5041)
!5041 = !{!5042}
!5042 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !5040, file: !5022, line: 48, baseType: !106, size: 32)
!5043 = !DILocation(line: 0, scope: !5033)
!5044 = !DILocation(line: 48, column: 2, scope: !5033)
!5045 = !DILocation(line: 48, column: 10, scope: !5033)
!5046 = !DILocation(line: 50, column: 2, scope: !5033)
!5047 = !DILocation(line: 52, column: 2, scope: !5033)
!5048 = !DILocation(line: 54, column: 2, scope: !5033)
!5049 = !DILocation(line: 55, column: 1, scope: !5033)
!5050 = distinct !DISubprogram(name: "_ConfigAbsSyms", scope: !5051, file: !5051, line: 9, type: !2909, scopeLine: 9, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2322, retainedNodes: !1949)
!5051 = !DIFile(filename: "zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/integration")
!5052 = !DILocation(line: 11, column: 1, scope: !5050)
!5053 = !{i64 2147561026, i64 2147561069, i64 2147561109}
!5054 = !DILocation(line: 12, column: 1, scope: !5050)
!5055 = !{i64 2147565253, i64 2147565296, i64 2147565336}
!5056 = !DILocation(line: 13, column: 1, scope: !5050)
!5057 = !{i64 2147565462, i64 2147565505, i64 2147565545}
!5058 = !DILocation(line: 14, column: 1, scope: !5050)
!5059 = !{i64 2147565679, i64 2147565722, i64 2147565762}
!5060 = !DILocation(line: 15, column: 1, scope: !5050)
!5061 = !{i64 2147565848, i64 2147565891, i64 2147565931}
!5062 = !DILocation(line: 16, column: 1, scope: !5050)
!5063 = !{i64 2147566033, i64 2147566076, i64 2147566116}
!5064 = !DILocation(line: 17, column: 1, scope: !5050)
!5065 = !{i64 2147566250, i64 2147566293, i64 2147566333}
!5066 = !DILocation(line: 18, column: 1, scope: !5050)
!5067 = !{i64 2147566413, i64 2147566456, i64 2147566496}
!5068 = !DILocation(line: 19, column: 1, scope: !5050)
!5069 = !{i64 2147566597, i64 2147566640, i64 2147566680}
!5070 = !DILocation(line: 20, column: 1, scope: !5050)
!5071 = !{i64 2147566777, i64 2147566820, i64 2147566860}
!5072 = !DILocation(line: 21, column: 1, scope: !5050)
!5073 = !{i64 2147567020, i64 2147567063, i64 2147567103}
!5074 = !DILocation(line: 22, column: 1, scope: !5050)
!5075 = !{i64 2147567256, i64 2147567299, i64 2147567339}
!5076 = !DILocation(line: 23, column: 1, scope: !5050)
!5077 = !{i64 2147567459, i64 2147567502, i64 2147567542}
!5078 = !DILocation(line: 24, column: 1, scope: !5050)
!5079 = !{i64 2147567662, i64 2147567705, i64 2147567745}
!5080 = !DILocation(line: 25, column: 1, scope: !5050)
!5081 = !{i64 2147567861, i64 2147567904, i64 2147567944}
!5082 = !DILocation(line: 26, column: 1, scope: !5050)
!5083 = !{i64 2147568036, i64 2147568079, i64 2147568119}
!5084 = !DILocation(line: 27, column: 1, scope: !5050)
!5085 = !{i64 2147568244, i64 2147568287, i64 2147568327}
!5086 = !DILocation(line: 28, column: 1, scope: !5050)
!5087 = !{i64 2147568448, i64 2147568491, i64 2147568531}
!5088 = !DILocation(line: 29, column: 1, scope: !5050)
!5089 = !{i64 2147568641, i64 2147568684, i64 2147568724}
!5090 = !DILocation(line: 30, column: 1, scope: !5050)
!5091 = !{i64 2147568843, i64 2147568886, i64 2147568926}
!5092 = !DILocation(line: 31, column: 1, scope: !5050)
!5093 = !{i64 2147569042, i64 2147569085, i64 2147569125}
!5094 = !DILocation(line: 32, column: 1, scope: !5050)
!5095 = !{i64 2147569269, i64 2147569312, i64 2147569352}
!5096 = !DILocation(line: 33, column: 1, scope: !5050)
!5097 = !{i64 2147569484, i64 2147569527, i64 2147569567}
!5098 = !DILocation(line: 34, column: 1, scope: !5050)
!5099 = !{i64 2147569671, i64 2147569714, i64 2147569754}
!5100 = !DILocation(line: 35, column: 1, scope: !5050)
!5101 = !{i64 2147569888, i64 2147569931, i64 2147569971}
!5102 = !DILocation(line: 36, column: 1, scope: !5050)
!5103 = !{i64 2147570060, i64 2147570103, i64 2147570143}
!5104 = !DILocation(line: 37, column: 1, scope: !5050)
!5105 = !{i64 2147570262, i64 2147570305, i64 2147570345}
!5106 = !DILocation(line: 38, column: 1, scope: !5050)
!5107 = !{i64 2147570461, i64 2147570504, i64 2147570544}
!5108 = !DILocation(line: 39, column: 1, scope: !5050)
!5109 = !{i64 2147570636, i64 2147570679, i64 2147570719}
!5110 = !DILocation(line: 40, column: 1, scope: !5050)
!5111 = !{i64 2147570889, i64 2147570932, i64 2147570972}
!5112 = !DILocation(line: 41, column: 1, scope: !5050)
!5113 = !{i64 2147571127, i64 2147571170, i64 2147571210}
!5114 = !DILocation(line: 42, column: 1, scope: !5050)
!5115 = !{i64 2147571362, i64 2147571405, i64 2147571445}
!5116 = !DILocation(line: 43, column: 1, scope: !5050)
!5117 = !{i64 2147571588, i64 2147571631, i64 2147571671}
!5118 = !DILocation(line: 44, column: 1, scope: !5050)
!5119 = !{i64 2147571823, i64 2147571866, i64 2147571906}
!5120 = !DILocation(line: 45, column: 1, scope: !5050)
!5121 = !{i64 2147572058, i64 2147572101, i64 2147572141}
!5122 = !DILocation(line: 46, column: 1, scope: !5050)
!5123 = !{i64 2147572299, i64 2147572342, i64 2147572382}
!5124 = !DILocation(line: 47, column: 1, scope: !5050)
!5125 = !{i64 2147572534, i64 2147572577, i64 2147572617}
!5126 = !DILocation(line: 48, column: 1, scope: !5050)
!5127 = !{i64 2147572763, i64 2147572806, i64 2147572846}
!5128 = !DILocation(line: 49, column: 1, scope: !5050)
!5129 = !{i64 2147572998, i64 2147573041, i64 2147573081}
!5130 = !DILocation(line: 50, column: 1, scope: !5050)
!5131 = !{i64 2147573248, i64 2147573291, i64 2147573331}
!5132 = !DILocation(line: 51, column: 1, scope: !5050)
!5133 = !{i64 2147573477, i64 2147573520, i64 2147573560}
!5134 = !DILocation(line: 52, column: 1, scope: !5050)
!5135 = !{i64 2147573685, i64 2147573728, i64 2147573768}
!5136 = !DILocation(line: 53, column: 1, scope: !5050)
!5137 = !{i64 2147573896, i64 2147573939, i64 2147573979}
!5138 = !DILocation(line: 54, column: 1, scope: !5050)
!5139 = !{i64 2147574131, i64 2147574174, i64 2147574214}
!5140 = !DILocation(line: 55, column: 1, scope: !5050)
!5141 = !{i64 2147578421, i64 2147578464, i64 2147578504}
!5142 = !DILocation(line: 56, column: 1, scope: !5050)
!5143 = !{i64 2147578638, i64 2147578681, i64 2147578721}
!5144 = !DILocation(line: 57, column: 1, scope: !5050)
!5145 = !{i64 2147578867, i64 2147578910, i64 2147578950}
!5146 = !DILocation(line: 58, column: 1, scope: !5050)
!5147 = !{i64 2147579105, i64 2147579148, i64 2147579188}
!5148 = !DILocation(line: 59, column: 1, scope: !5050)
!5149 = !{i64 2147579337, i64 2147579380, i64 2147579420}
!5150 = !DILocation(line: 60, column: 1, scope: !5050)
!5151 = !{i64 2147579563, i64 2147579606, i64 2147579646}
!5152 = !DILocation(line: 61, column: 1, scope: !5050)
!5153 = !{i64 2147579780, i64 2147579823, i64 2147579863}
!5154 = !DILocation(line: 62, column: 1, scope: !5050)
!5155 = !{i64 2147580012, i64 2147580055, i64 2147580095}
!5156 = !DILocation(line: 63, column: 1, scope: !5050)
!5157 = !{i64 2147580238, i64 2147580281, i64 2147580321}
!5158 = !DILocation(line: 64, column: 1, scope: !5050)
!5159 = !{i64 2147580452, i64 2147580495, i64 2147580535}
!5160 = !DILocation(line: 65, column: 1, scope: !5050)
!5161 = !{i64 2147580672, i64 2147580715, i64 2147580755}
!5162 = !DILocation(line: 66, column: 1, scope: !5050)
!5163 = !{i64 2147580904, i64 2147580947, i64 2147580987}
!5164 = !DILocation(line: 67, column: 1, scope: !5050)
!5165 = !{i64 2147581112, i64 2147581155, i64 2147581195}
!5166 = !DILocation(line: 68, column: 1, scope: !5050)
!5167 = !{i64 2147581317, i64 2147581360, i64 2147581400}
!5168 = !DILocation(line: 69, column: 1, scope: !5050)
!5169 = !{i64 2147581534, i64 2147581577, i64 2147581617}
!5170 = !DILocation(line: 70, column: 1, scope: !5050)
!5171 = !{i64 2147581748, i64 2147581791, i64 2147581831}
!5172 = !DILocation(line: 71, column: 1, scope: !5050)
!5173 = !{i64 2147581974, i64 2147582017, i64 2147582057}
!5174 = !DILocation(line: 72, column: 1, scope: !5050)
!5175 = !{i64 2147582194, i64 2147582237, i64 2147582277}
!5176 = !DILocation(line: 73, column: 1, scope: !5050)
!5177 = !{i64 2147582399, i64 2147582442, i64 2147582482}
!5178 = !DILocation(line: 74, column: 1, scope: !5050)
!5179 = !{i64 2147582631, i64 2147582674, i64 2147582714}
!5180 = !DILocation(line: 75, column: 1, scope: !5050)
!5181 = !{i64 2147582866, i64 2147582909, i64 2147582949}
!5182 = !DILocation(line: 76, column: 1, scope: !5050)
!5183 = !{i64 2147583116, i64 2147583159, i64 2147583199}
!5184 = !DILocation(line: 77, column: 1, scope: !5050)
!5185 = !{i64 2147583366, i64 2147583409, i64 2147583449}
!5186 = !DILocation(line: 78, column: 1, scope: !5050)
!5187 = !{i64 2147583604, i64 2147583647, i64 2147583687}
!5188 = !DILocation(line: 79, column: 1, scope: !5050)
!5189 = !{i64 2147583815, i64 2147583858, i64 2147583898}
!5190 = !DILocation(line: 80, column: 1, scope: !5050)
!5191 = !{i64 2147584032, i64 2147584075, i64 2147584115}
!5192 = !DILocation(line: 81, column: 1, scope: !5050)
!5193 = !{i64 2147584228, i64 2147584271, i64 2147584311}
!5194 = !DILocation(line: 82, column: 1, scope: !5050)
!5195 = !{i64 2147584430, i64 2147584473, i64 2147584513}
!5196 = !DILocation(line: 83, column: 1, scope: !5050)
!5197 = !{i64 2147584617, i64 2147584660, i64 2147584700}
!5198 = !DILocation(line: 84, column: 1, scope: !5050)
!5199 = !{i64 2147584807, i64 2147584850, i64 2147584890}
!5200 = !DILocation(line: 85, column: 1, scope: !5050)
!5201 = !{i64 2147584994, i64 2147585037, i64 2147585077}
!5202 = !DILocation(line: 86, column: 1, scope: !5050)
!5203 = !{i64 2147585190, i64 2147585233, i64 2147585273}
!5204 = !DILocation(line: 87, column: 1, scope: !5050)
!5205 = !{i64 2147585386, i64 2147585429, i64 2147585469}
!5206 = !DILocation(line: 88, column: 1, scope: !5050)
!5207 = !{i64 2147585597, i64 2147585640, i64 2147585680}
!5208 = !DILocation(line: 89, column: 1, scope: !5050)
!5209 = !{i64 2147585805, i64 2147585848, i64 2147585888}
!5210 = !DILocation(line: 90, column: 1, scope: !5050)
!5211 = !{i64 2147585989, i64 2147586032, i64 2147586072}
!5212 = !DILocation(line: 91, column: 1, scope: !5050)
!5213 = !{i64 2147586185, i64 2147586228, i64 2147586268}
!5214 = !DILocation(line: 92, column: 1, scope: !5050)
!5215 = !{i64 2147586378, i64 2147586421, i64 2147586461}
!5216 = !DILocation(line: 93, column: 1, scope: !5050)
!5217 = !{i64 2147586625, i64 2147586668, i64 2147586708}
!5218 = !DILocation(line: 94, column: 1, scope: !5050)
!5219 = !{i64 2147586848, i64 2147586891, i64 2147586931}
!5220 = !DILocation(line: 95, column: 1, scope: !5050)
!5221 = !{i64 2147591114, i64 2147591157, i64 2147591197}
!5222 = !DILocation(line: 96, column: 1, scope: !5050)
!5223 = !{i64 2147591307, i64 2147591350, i64 2147591390}
!5224 = !DILocation(line: 97, column: 1, scope: !5050)
!5225 = !{i64 2147591473, i64 2147591516, i64 2147591556}
!5226 = !DILocation(line: 98, column: 1, scope: !5050)
!5227 = !{i64 2147591657, i64 2147591700, i64 2147591740}
!5228 = !DILocation(line: 99, column: 1, scope: !5050)
!5229 = !{i64 2147591847, i64 2147591890, i64 2147591930}
!5230 = !DILocation(line: 100, column: 1, scope: !5050)
!5231 = !{i64 2147592031, i64 2147592074, i64 2147592114}
!5232 = !DILocation(line: 101, column: 1, scope: !5050)
!5233 = !{i64 2147592245, i64 2147592288, i64 2147592328}
!5234 = !DILocation(line: 102, column: 1, scope: !5050)
!5235 = !{i64 2147592456, i64 2147592499, i64 2147592539}
!5236 = !DILocation(line: 103, column: 1, scope: !5050)
!5237 = !{i64 2147592679, i64 2147592722, i64 2147592762}
!5238 = !DILocation(line: 104, column: 1, scope: !5050)
!5239 = !{i64 2147592863, i64 2147592906, i64 2147592946}
!5240 = !DILocation(line: 105, column: 1, scope: !5050)
!5241 = !{i64 2147593029, i64 2147593072, i64 2147593112}
!5242 = !DILocation(line: 106, column: 1, scope: !5050)
!5243 = !{i64 2147593210, i64 2147593253, i64 2147593293}
!5244 = !DILocation(line: 107, column: 1, scope: !5050)
!5245 = !{i64 2147593403, i64 2147593446, i64 2147593486}
!5246 = !DILocation(line: 108, column: 1, scope: !5050)
!5247 = !{i64 2147593629, i64 2147593672, i64 2147593712}
!5248 = !DILocation(line: 109, column: 1, scope: !5050)
!5249 = !{i64 2147593843, i64 2147593886, i64 2147593926}
!5250 = !DILocation(line: 110, column: 1, scope: !5050)
!5251 = !{i64 2147594069, i64 2147594112, i64 2147594152}
!5252 = !DILocation(line: 111, column: 1, scope: !5050)
!5253 = !{i64 2147594286, i64 2147594329, i64 2147594369}
!5254 = !DILocation(line: 112, column: 1, scope: !5050)
!5255 = !{i64 2147594563, i64 2147594606, i64 2147594646}
!5256 = !DILocation(line: 113, column: 1, scope: !5050)
!5257 = !{i64 2147594789, i64 2147594832, i64 2147594872}
!5258 = !DILocation(line: 114, column: 1, scope: !5050)
!5259 = !{i64 2147594997, i64 2147595040, i64 2147595080}
!5260 = !DILocation(line: 115, column: 1, scope: !5050)
!5261 = !{i64 2147595193, i64 2147595236, i64 2147595276}
!5262 = !DILocation(line: 116, column: 1, scope: !5050)
!5263 = !{i64 2147595458, i64 2147595501, i64 2147595541}
!5264 = !DILocation(line: 117, column: 1, scope: !5050)
!5265 = !{i64 2147595672, i64 2147595715, i64 2147595755}
!5266 = !DILocation(line: 118, column: 1, scope: !5050)
!5267 = !{i64 2147595835, i64 2147595878, i64 2147595918}
!5268 = !DILocation(line: 119, column: 1, scope: !5050)
!5269 = !{i64 2147596022, i64 2147596065, i64 2147596105}
!5270 = !DILocation(line: 120, column: 1, scope: !5050)
!5271 = !{i64 2147596230, i64 2147596273, i64 2147596313}
!5272 = !DILocation(line: 121, column: 1, scope: !5050)
!5273 = !{i64 2147596426, i64 2147596469, i64 2147596509}
!5274 = !DILocation(line: 122, column: 1, scope: !5050)
!5275 = !{i64 2147596619, i64 2147596662, i64 2147596702}
!5276 = !DILocation(line: 123, column: 1, scope: !5050)
!5277 = !{i64 2147596801, i64 2147596844, i64 2147596884}
!5278 = !DILocation(line: 124, column: 1, scope: !5050)
!5279 = !{i64 2147597015, i64 2147597058, i64 2147597098}
!5280 = !DILocation(line: 125, column: 1, scope: !5050)
!5281 = !{i64 2147597214, i64 2147597257, i64 2147597297}
!5282 = !DILocation(line: 126, column: 1, scope: !5050)
!5283 = !{i64 2147597449, i64 2147597492, i64 2147597532}
!5284 = !DILocation(line: 127, column: 1, scope: !5050)
!5285 = !{i64 2147597699, i64 2147597742, i64 2147597782}
!5286 = !DILocation(line: 128, column: 1, scope: !5050)
!5287 = !{i64 2147597901, i64 2147597944, i64 2147597984}
!5288 = !DILocation(line: 129, column: 1, scope: !5050)
!5289 = !{i64 2147598124, i64 2147598167, i64 2147598207}
!5290 = !DILocation(line: 130, column: 1, scope: !5050)
!5291 = !{i64 2147598338, i64 2147598381, i64 2147598421}
!5292 = !DILocation(line: 131, column: 1, scope: !5050)
!5293 = !{i64 2147598582, i64 2147598625, i64 2147598665}
!5294 = !DILocation(line: 132, column: 1, scope: !5050)
!5295 = !{i64 2147598811, i64 2147598854, i64 2147598894}
!5296 = !DILocation(line: 133, column: 1, scope: !5050)
!5297 = !{i64 2147599037, i64 2147599080, i64 2147599120}
!5298 = !DILocation(line: 134, column: 1, scope: !5050)
!5299 = !{i64 2147599296, i64 2147599339, i64 2147599379}
!5300 = !DILocation(line: 135, column: 1, scope: !5050)
!5301 = !{i64 2147599516, i64 2147599559, i64 2147599599}
!5302 = !DILocation(line: 136, column: 1, scope: !5050)
!5303 = !{i64 2147599748, i64 2147599791, i64 2147599831}
!5304 = !DILocation(line: 137, column: 1, scope: !5050)
!5305 = !{i64 2147604050, i64 2147604093, i64 2147604133}
!5306 = !DILocation(line: 138, column: 1, scope: !5050)
!5307 = !{i64 2147604291, i64 2147604334, i64 2147604374}
!5308 = !DILocation(line: 139, column: 1, scope: !5050)
!5309 = !{i64 2147604514, i64 2147604557, i64 2147604597}
!5310 = !DILocation(line: 140, column: 1, scope: !5050)
!5311 = !{i64 2147604731, i64 2147604774, i64 2147604814}
!5312 = !DILocation(line: 141, column: 1, scope: !5050)
!5313 = !{i64 2147604972, i64 2147605015, i64 2147605055}
!5314 = !DILocation(line: 142, column: 1, scope: !5050)
!5315 = !{i64 2147605159, i64 2147605202, i64 2147605242}
!5316 = !DILocation(line: 143, column: 1, scope: !5050)
!5317 = !{i64 2147605388, i64 2147605431, i64 2147605471}
!5318 = !DILocation(line: 144, column: 1, scope: !5050)
!5319 = !{i64 2147605602, i64 2147605645, i64 2147605685}
!5320 = !DILocation(line: 145, column: 1, scope: !5050)
!5321 = !{i64 2147605804, i64 2147605847, i64 2147605887}
!5322 = !DILocation(line: 146, column: 1, scope: !5050)
!5323 = !{i64 2147606000, i64 2147606043, i64 2147606083}
!5324 = !DILocation(line: 147, column: 1, scope: !5050)
!5325 = !{i64 2147606212, i64 2147606255, i64 2147606295}
!5326 = !DILocation(line: 148, column: 1, scope: !5050)
!5327 = !{i64 2147606433, i64 2147606476, i64 2147606516}
!5328 = !DILocation(line: 149, column: 1, scope: !5050)
!5329 = !{i64 2147606647, i64 2147606690, i64 2147606730}
!5330 = !DILocation(line: 150, column: 1, scope: !5050)
!5331 = !{i64 2147606837, i64 2147606880, i64 2147606920}
!5332 = !DILocation(line: 151, column: 1, scope: !5050)
!5333 = !{i64 2147607036, i64 2147607079, i64 2147607119}
!5334 = !DILocation(line: 152, column: 1, scope: !5050)
!5335 = !{i64 2147607241, i64 2147607284, i64 2147607324}
!5336 = !DILocation(line: 153, column: 1, scope: !5050)
!5337 = !{i64 2147607461, i64 2147607504, i64 2147607544}
!5338 = !DILocation(line: 154, column: 1, scope: !5050)
!5339 = !{i64 2147607662, i64 2147607705, i64 2147607745}
!5340 = !DILocation(line: 155, column: 1, scope: !5050)
!5341 = !{i64 2147607861, i64 2147607904, i64 2147607944}
!5342 = !DILocation(line: 156, column: 1, scope: !5050)
!5343 = !{i64 2147608030, i64 2147608073, i64 2147608113}
!5344 = !DILocation(line: 157, column: 1, scope: !5050)
!5345 = !{i64 2147608214, i64 2147608257, i64 2147608297}
!5346 = !DILocation(line: 158, column: 1, scope: !5050)
!5347 = !{i64 2147608398, i64 2147608441, i64 2147608481}
!5348 = !DILocation(line: 159, column: 1, scope: !5050)
!5349 = !{i64 2147608585, i64 2147608628, i64 2147608668}
!5350 = !DILocation(line: 160, column: 1, scope: !5050)
!5351 = !{i64 2147608769, i64 2147608812, i64 2147608852}
!5352 = !DILocation(line: 161, column: 1, scope: !5050)
!5353 = !{i64 2147608956, i64 2147608999, i64 2147609039}
!5354 = !DILocation(line: 162, column: 1, scope: !5050)
!5355 = !{i64 2147609168, i64 2147609211, i64 2147609251}
!5356 = !DILocation(line: 163, column: 1, scope: !5050)
!5357 = !{i64 2147609406, i64 2147609449, i64 2147609489}
!5358 = !DILocation(line: 164, column: 1, scope: !5050)
!5359 = !{i64 2147609636, i64 2147609679, i64 2147609719}
!5360 = !DILocation(line: 165, column: 1, scope: !5050)
!5361 = !{i64 2147609865, i64 2147609908, i64 2147609948}
!5362 = !DILocation(line: 166, column: 1, scope: !5050)
!5363 = !{i64 2147610052, i64 2147610095, i64 2147610135}
!5364 = !DILocation(line: 167, column: 1, scope: !5050)
!5365 = !{i64 2147610248, i64 2147610291, i64 2147610331}
!5366 = !DILocation(line: 168, column: 1, scope: !5050)
!5367 = !{i64 2147610456, i64 2147610499, i64 2147610539}
!5368 = !DILocation(line: 169, column: 1, scope: !5050)
!5369 = !{i64 2147610668, i64 2147610711, i64 2147610751}
!5370 = !DILocation(line: 170, column: 1, scope: !5050)
!5371 = !{i64 2147610867, i64 2147610910, i64 2147610950}
!5372 = !DILocation(line: 171, column: 1, scope: !5050)
!5373 = !{i64 2147611105, i64 2147611148, i64 2147611188}
!5374 = !DILocation(line: 172, column: 1, scope: !5050)
!5375 = !{i64 2147611301, i64 2147611344, i64 2147611384}
!5376 = !DILocation(line: 173, column: 1, scope: !5050)
!5377 = !{i64 2147611503, i64 2147611546, i64 2147611586}
!5378 = !DILocation(line: 174, column: 1, scope: !5050)
!5379 = !{i64 2147611696, i64 2147611739, i64 2147611779}
!5380 = !DILocation(line: 175, column: 1, scope: !5050)
!5381 = !{i64 2147611930, i64 2147611973, i64 2147612013}
!5382 = !DILocation(line: 176, column: 1, scope: !5050)
!5383 = !{i64 2147612093, i64 2147612136, i64 2147612176}
!5384 = !DILocation(line: 177, column: 1, scope: !5050)
!5385 = !{i64 2147612332, i64 2147612375, i64 2147612415}
!5386 = !DILocation(line: 178, column: 1, scope: !5050)
!5387 = !{i64 2147612571, i64 2147612614, i64 2147612654}
!5388 = !DILocation(line: 179, column: 1, scope: !5050)
!5389 = !{i64 2147612807, i64 2147612850, i64 2147612890}
!5390 = !DILocation(line: 180, column: 1, scope: !5050)
!5391 = !{i64 2147613037, i64 2147613080, i64 2147613120}
!5392 = !DILocation(line: 181, column: 1, scope: !5050)
!5393 = !{i64 2147617285, i64 2147617328, i64 2147617368}
!5394 = !DILocation(line: 182, column: 1, scope: !5050)
!5395 = !{i64 2147617484, i64 2147617527, i64 2147617567}
!5396 = !DILocation(line: 183, column: 1, scope: !5050)
!5397 = !{i64 2147617755, i64 2147617798, i64 2147617838}
!5398 = !DILocation(line: 184, column: 1, scope: !5050)
!5399 = !{i64 2147617930, i64 2147617973, i64 2147618013}
!5400 = !DILocation(line: 185, column: 1, scope: !5050)
!5401 = !{i64 2147618164, i64 2147618207, i64 2147618247}
!5402 = !DILocation(line: 186, column: 1, scope: !5050)
!5403 = !{i64 2147618372, i64 2147618415, i64 2147618455}
!5404 = !DILocation(line: 187, column: 1, scope: !5050)
!5405 = !{i64 2147618590, i64 2147618633, i64 2147618673}
!5406 = !DILocation(line: 188, column: 1, scope: !5050)
!5407 = !{i64 2147618780, i64 2147618823, i64 2147618863}
!5408 = !DILocation(line: 189, column: 1, scope: !5050)
!5409 = !{i64 2147619012, i64 2147619055, i64 2147619095}
!5410 = !DILocation(line: 190, column: 1, scope: !5050)
!5411 = !{i64 2147619232, i64 2147619275, i64 2147619315}
!5412 = !DILocation(line: 191, column: 1, scope: !5050)
!5413 = !{i64 2147619428, i64 2147619471, i64 2147619511}
!5414 = !DILocation(line: 192, column: 1, scope: !5050)
!5415 = !{i64 2147619634, i64 2147619677, i64 2147619717}
!5416 = !DILocation(line: 193, column: 1, scope: !5050)
!5417 = !{i64 2147619839, i64 2147619882, i64 2147619922}
!5418 = !DILocation(line: 194, column: 1, scope: !5050)
!5419 = !{i64 2147620065, i64 2147620108, i64 2147620148}
!5420 = !DILocation(line: 195, column: 1, scope: !5050)
!5421 = !{i64 2147620273, i64 2147620316, i64 2147620356}
!5422 = !DILocation(line: 196, column: 1, scope: !5050)
!5423 = !{i64 2147620469, i64 2147620512, i64 2147620552}
!5424 = !DILocation(line: 197, column: 1, scope: !5050)
!5425 = !{i64 2147620701, i64 2147620744, i64 2147620784}
!5426 = !DILocation(line: 198, column: 1, scope: !5050)
!5427 = !{i64 2147620879, i64 2147620922, i64 2147620962}
!5428 = !DILocation(line: 199, column: 1, scope: !5050)
!5429 = !{i64 2147621088, i64 2147621131, i64 2147621171}
!5430 = !DILocation(line: 200, column: 1, scope: !5050)
!5431 = !{i64 2147621296, i64 2147621339, i64 2147621379}
!5432 = !DILocation(line: 201, column: 1, scope: !5050)
!5433 = !{i64 2147621492, i64 2147621535, i64 2147621575}
!5434 = !DILocation(line: 202, column: 1, scope: !5050)
!5435 = !{i64 2147621724, i64 2147621767, i64 2147621807}
!5436 = !DILocation(line: 203, column: 1, scope: !5050)
!5437 = !{i64 2147621926, i64 2147621969, i64 2147622009}
!5438 = !DILocation(line: 204, column: 1, scope: !5050)
!5439 = !{i64 2147622176, i64 2147622219, i64 2147622259}
!5440 = !DILocation(line: 205, column: 1, scope: !5050)
!5441 = !{i64 2147622414, i64 2147622457, i64 2147622497}
!5442 = !DILocation(line: 206, column: 1, scope: !5050)
!5443 = !{i64 2147622622, i64 2147622665, i64 2147622705}
!5444 = !DILocation(line: 207, column: 1, scope: !5050)
!5445 = !{i64 2147622818, i64 2147622861, i64 2147622901}
!5446 = !DILocation(line: 208, column: 1, scope: !5050)
!5447 = !{i64 2147622996, i64 2147623039, i64 2147623079}
!5448 = !DILocation(line: 209, column: 1, scope: !5050)
!5449 = !{i64 2147623213, i64 2147623256, i64 2147623296}
!5450 = !DILocation(line: 210, column: 1, scope: !5050)
!5451 = !{i64 2147623418, i64 2147623461, i64 2147623501}
!5452 = !DILocation(line: 211, column: 1, scope: !5050)
!5453 = !{i64 2147623653, i64 2147623696, i64 2147623736}
!5454 = !DILocation(line: 212, column: 1, scope: !5050)
!5455 = !{i64 2147623876, i64 2147623919, i64 2147623959}
!5456 = !DILocation(line: 213, column: 1, scope: !5050)
!5457 = !{i64 2147624093, i64 2147624136, i64 2147624176}
!5458 = !DILocation(line: 214, column: 1, scope: !5050)
!5459 = !{i64 2147624298, i64 2147624341, i64 2147624381}
!5460 = !DILocation(line: 215, column: 1, scope: !5050)
!5461 = !{i64 2147624506, i64 2147624549, i64 2147624589}
!5462 = !DILocation(line: 216, column: 1, scope: !5050)
!5463 = !{i64 2147624702, i64 2147624745, i64 2147624785}
!5464 = !DILocation(line: 217, column: 1, scope: !5050)
!5465 = !{i64 2147624916, i64 2147624959, i64 2147624999}
!5466 = !DILocation(line: 218, column: 1, scope: !5050)
!5467 = !{i64 2147625124, i64 2147625167, i64 2147625207}
!5468 = !DILocation(line: 219, column: 1, scope: !5050)
!5469 = !{i64 2147625314, i64 2147625357, i64 2147625397}
!5470 = !DILocation(line: 220, column: 1, scope: !5050)
!5471 = !{i64 2147625528, i64 2147625571, i64 2147625611}
!5472 = !DILocation(line: 221, column: 1, scope: !5050)
!5473 = !{i64 2147625790, i64 2147625833, i64 2147625873}
!5474 = !DILocation(line: 222, column: 1, scope: !5050)
!5475 = !{i64 2147626001, i64 2147626044, i64 2147626084}
!5476 = !DILocation(line: 223, column: 1, scope: !5050)
!5477 = !{i64 2147630306, i64 2147630349, i64 2147630389}
!5478 = !DILocation(line: 224, column: 1, scope: !5050)
!5479 = !{i64 2147630517, i64 2147630560, i64 2147630600}
!5480 = !DILocation(line: 225, column: 1, scope: !5050)
!5481 = !{i64 2147630746, i64 2147630789, i64 2147630829}
!5482 = !DILocation(line: 226, column: 1, scope: !5050)
!5483 = !{i64 2147631011, i64 2147631054, i64 2147631094}
!5484 = !DILocation(line: 227, column: 1, scope: !5050)
!5485 = !{i64 2147631216, i64 2147631259, i64 2147631299}
!5486 = !DILocation(line: 228, column: 1, scope: !5050)
!5487 = !{i64 2147631412, i64 2147631455, i64 2147631495}
!5488 = !DILocation(line: 229, column: 1, scope: !5050)
!5489 = !{i64 2147631635, i64 2147631678, i64 2147631718}
!5490 = !DILocation(line: 230, column: 1, scope: !5050)
!5491 = !{i64 2147631798, i64 2147631841, i64 2147631881}
!5492 = !DILocation(line: 231, column: 1, scope: !5050)
!5493 = !{i64 2147632003, i64 2147632046, i64 2147632086}
!5494 = !DILocation(line: 232, column: 1, scope: !5050)
!5495 = !{i64 2147632223, i64 2147632266, i64 2147632306}
!5496 = !DILocation(line: 233, column: 1, scope: !5050)
!5497 = !{i64 2147632437, i64 2147632480, i64 2147632520}
!5498 = !DILocation(line: 234, column: 1, scope: !5050)
!5499 = !{i64 2147632681, i64 2147632724, i64 2147632764}
!5500 = !DILocation(line: 235, column: 1, scope: !5050)
!5501 = !{i64 2147632913, i64 2147632956, i64 2147632996}
!5502 = !DILocation(line: 236, column: 1, scope: !5050)
!5503 = !{i64 2147633127, i64 2147633170, i64 2147633210}
!5504 = !DILocation(line: 237, column: 1, scope: !5050)
!5505 = !{i64 2147633338, i64 2147633381, i64 2147633421}
!5506 = !DILocation(line: 238, column: 1, scope: !5050)
!5507 = !{i64 2147633531, i64 2147633574, i64 2147633614}
!5508 = !DILocation(line: 239, column: 1, scope: !5050)
!5509 = !{i64 2147633730, i64 2147633773, i64 2147633813}
!5510 = !DILocation(line: 240, column: 1, scope: !5050)
!5511 = !{i64 2147633902, i64 2147633945, i64 2147633985}
!5512 = !DILocation(line: 241, column: 1, scope: !5050)
!5513 = !{i64 2147634095, i64 2147634138, i64 2147634178}
!5514 = !DILocation(line: 242, column: 1, scope: !5050)
!5515 = !{i64 2147634267, i64 2147634310, i64 2147634350}
!5516 = !DILocation(line: 243, column: 1, scope: !5050)
!5517 = !{i64 2147634457, i64 2147634500, i64 2147634540}
!5518 = !DILocation(line: 244, column: 1, scope: !5050)
!5519 = !{i64 2147634650, i64 2147634693, i64 2147634733}
!5520 = !DILocation(line: 245, column: 1, scope: !5050)
!5521 = !{i64 2147634846, i64 2147634889, i64 2147634929}
!5522 = !DILocation(line: 246, column: 1, scope: !5050)
!5523 = !{i64 2147635009, i64 2147635052, i64 2147635092}
!5524 = !DILocation(line: 247, column: 1, scope: !5050)
!5525 = !{i64 2147635211, i64 2147635254, i64 2147635294}
!5526 = !DILocation(line: 248, column: 1, scope: !5050)
!5527 = !{i64 2147635422, i64 2147635465, i64 2147635505}
!5528 = !DILocation(line: 249, column: 1, scope: !5050)
!5529 = !{i64 2147635627, i64 2147635670, i64 2147635710}
!5530 = !DILocation(line: 250, column: 1, scope: !5050)
!5531 = !{i64 2147635835, i64 2147635878, i64 2147635918}
!5532 = !DILocation(line: 251, column: 1, scope: !5050)
!5533 = !{i64 2147636028, i64 2147636071, i64 2147636111}
!5534 = !DILocation(line: 252, column: 1, scope: !5050)
!5535 = !{i64 2147636266, i64 2147636309, i64 2147636349}
!5536 = !DILocation(line: 253, column: 1, scope: !5050)
!5537 = !{i64 2147636453, i64 2147636496, i64 2147636536}
!5538 = !DILocation(line: 254, column: 1, scope: !5050)
!5539 = !{i64 2147636622, i64 2147636665, i64 2147636705}
!5540 = !DILocation(line: 255, column: 1, scope: !5050)
!5541 = !{i64 2147636815, i64 2147636858, i64 2147636898}
!5542 = !DILocation(line: 256, column: 1, scope: !5050)
!5543 = !{i64 2147637020, i64 2147637063, i64 2147637103}
!5544 = !DILocation(line: 257, column: 1, scope: !5050)
!5545 = !{i64 2147637231, i64 2147637274, i64 2147637314}
!5546 = !DILocation(line: 258, column: 1, scope: !5050)
!5547 = !{i64 2147637454, i64 2147637497, i64 2147637537}
!5548 = !DILocation(line: 259, column: 1, scope: !5050)
!5549 = !{i64 2147637668, i64 2147637711, i64 2147637751}
!5550 = !DILocation(line: 260, column: 1, scope: !5050)
!5551 = !{i64 2147637886, i64 2147637929, i64 2147637969}
!5552 = !DILocation(line: 261, column: 1, scope: !5050)
!5553 = !{i64 2147638100, i64 2147638143, i64 2147638183}
!5554 = !DILocation(line: 262, column: 1, scope: !5050)
!5555 = !{i64 2147638314, i64 2147638357, i64 2147638397}
!5556 = !DILocation(line: 263, column: 1, scope: !5050)
!5557 = !{i64 2147638531, i64 2147638574, i64 2147638614}
!5558 = !DILocation(line: 264, column: 1, scope: !5050)
!5559 = !{i64 2147638745, i64 2147638788, i64 2147638828}
!5560 = !DILocation(line: 265, column: 1, scope: !5050)
!5561 = !{i64 2147638986, i64 2147639029, i64 2147639069}
!5562 = !DILocation(line: 266, column: 1, scope: !5050)
!5563 = !{i64 2147639152, i64 2147639195, i64 2147639235}
!5564 = !DILocation(line: 267, column: 1, scope: !5050)
!5565 = !{i64 2147643440, i64 2147643483, i64 2147643523}
!5566 = !DILocation(line: 268, column: 1, scope: !5050)
!5567 = !{i64 2147643657, i64 2147643700, i64 2147643740}
!5568 = !DILocation(line: 269, column: 1, scope: !5050)
!5569 = !{i64 2147643862, i64 2147643905, i64 2147643945}
!5570 = !DILocation(line: 270, column: 1, scope: !5050)
!5571 = !{i64 2147644079, i64 2147644122, i64 2147644162}
!5572 = !DILocation(line: 271, column: 1, scope: !5050)
!5573 = !{i64 2147644371, i64 2147644414, i64 2147644454}
!5574 = !DILocation(line: 272, column: 1, scope: !5050)
!5575 = !{i64 2147644603, i64 2147644646, i64 2147644686}
!5576 = !DILocation(line: 273, column: 1, scope: !5050)
!5577 = !{i64 2147644820, i64 2147644863, i64 2147644903}
!5578 = !DILocation(line: 274, column: 1, scope: !5050)
!5579 = !{i64 2147645027, i64 2147645070, i64 2147645110}
!5580 = !DILocation(line: 275, column: 1, scope: !5050)
!5581 = !{i64 2147645228, i64 2147645271, i64 2147645311}
!5582 = !DILocation(line: 276, column: 1, scope: !5050)
!5583 = !{i64 2147645460, i64 2147645503, i64 2147645543}
!5584 = !DILocation(line: 277, column: 1, scope: !5050)
!5585 = !{i64 2147645668, i64 2147645711, i64 2147645751}
!5586 = !DILocation(line: 278, column: 1, scope: !5050)
!5587 = !{i64 2147645858, i64 2147645901, i64 2147645941}
!5588 = !DILocation(line: 279, column: 1, scope: !5050)
!5589 = !{i64 2147646084, i64 2147646127, i64 2147646167}
!5590 = !DILocation(line: 280, column: 1, scope: !5050)
!5591 = !{i64 2147646273, i64 2147646316, i64 2147646356}
!5592 = !DILocation(line: 281, column: 1, scope: !5050)
!5593 = !{i64 2147646544, i64 2147646587, i64 2147646627}
!5594 = !DILocation(line: 282, column: 1, scope: !5050)
!5595 = !{i64 2147646764, i64 2147646807, i64 2147646847}
!5596 = !DILocation(line: 283, column: 1, scope: !5050)
!5597 = !{i64 2147647017, i64 2147647060, i64 2147647100}
!5598 = !DILocation(line: 284, column: 1, scope: !5050)
!5599 = !{i64 2147647225, i64 2147647268, i64 2147647308}
!5600 = !DILocation(line: 285, column: 1, scope: !5050)
!5601 = !{i64 2147647457, i64 2147647500, i64 2147647540}
!5602 = !DILocation(line: 286, column: 1, scope: !5050)
!5603 = !{i64 2147647668, i64 2147647711, i64 2147647751}
!5604 = !DILocation(line: 287, column: 1, scope: !5050)
!5605 = !{i64 2147647858, i64 2147647901, i64 2147647941}
!5606 = !DILocation(line: 288, column: 1, scope: !5050)
!5607 = !{i64 2147648072, i64 2147648115, i64 2147648155}
!5608 = !DILocation(line: 289, column: 1, scope: !5050)
!5609 = !{i64 2147648271, i64 2147648314, i64 2147648354}
!5610 = !DILocation(line: 290, column: 1, scope: !5050)
!5611 = !{i64 2147648458, i64 2147648501, i64 2147648541}
!5612 = !DILocation(line: 291, column: 1, scope: !5050)
!5613 = !{i64 2147648654, i64 2147648697, i64 2147648737}
!5614 = !DILocation(line: 292, column: 1, scope: !5050)
!5615 = !{i64 2147648862, i64 2147648905, i64 2147648945}
!5616 = !DILocation(line: 293, column: 1, scope: !5050)
!5617 = !{i64 2147649091, i64 2147649134, i64 2147649174}
!5618 = !DILocation(line: 294, column: 1, scope: !5050)
!5619 = !{i64 2147649293, i64 2147649336, i64 2147649376}
!5620 = !DILocation(line: 295, column: 1, scope: !5050)
!5621 = !{i64 2147649492, i64 2147649535, i64 2147649575}
!5622 = !DILocation(line: 296, column: 1, scope: !5050)
!5623 = !{i64 2147649709, i64 2147649752, i64 2147649792}
!5624 = !DILocation(line: 298, column: 1, scope: !5050)
!5625 = distinct !DISubprogram(name: "nxp_mcimx7_init", scope: !632, file: !632, line: 225, type: !639, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !218, retainedNodes: !5626)
!5626 = !{!5627}
!5627 = !DILocalVariable(name: "arg", arg: 1, scope: !5625, file: !632, line: 225, type: !641)
!5628 = !DILocation(line: 0, scope: !5625)
!5629 = !DILocation(line: 230, column: 2, scope: !5625)
!5630 = !DILocation(line: 233, column: 2, scope: !5625)
!5631 = !DILocation(line: 236, column: 2, scope: !5625)
!5632 = !DILocation(line: 255, column: 2, scope: !5625)
!5633 = distinct !DISubprogram(name: "SOC_RdcInit", scope: !632, file: !632, line: 50, type: !2909, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !218, retainedNodes: !1949)
!5634 = !DILocation(line: 53, column: 2, scope: !5633)
!5635 = !DILocation(line: 54, column: 1, scope: !5633)
!5636 = distinct !DISubprogram(name: "SOC_ClockInit", scope: !632, file: !632, line: 14, type: !2909, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !218, retainedNodes: !1949)
!5637 = !DILocation(line: 23, column: 2, scope: !5636)
!5638 = !DILocation(line: 24, column: 2, scope: !5636)
!5639 = !DILocation(line: 25, column: 2, scope: !5636)
!5640 = !DILocation(line: 27, column: 2, scope: !5636)
!5641 = !DILocation(line: 31, column: 2, scope: !5636)
!5642 = !DILocation(line: 33, column: 2, scope: !5636)
!5643 = !DILocation(line: 36, column: 2, scope: !5636)
!5644 = !DILocation(line: 37, column: 2, scope: !5636)
!5645 = !DILocation(line: 40, column: 2, scope: !5636)
!5646 = !DILocation(line: 41, column: 2, scope: !5636)
!5647 = !DILocation(line: 42, column: 2, scope: !5636)
!5648 = !DILocation(line: 43, column: 2, scope: !5636)
!5649 = !DILocation(line: 44, column: 2, scope: !5636)
!5650 = !DILocation(line: 47, column: 2, scope: !5636)
!5651 = !DILocation(line: 48, column: 1, scope: !5636)
!5652 = distinct !DISubprogram(name: "nxp_mcimx7_gpio_config", scope: !632, file: !632, line: 57, type: !2909, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !218, retainedNodes: !1949)
!5653 = !DILocation(line: 61, column: 2, scope: !5652)
!5654 = !DILocation(line: 63, column: 2, scope: !5652)
!5655 = !DILocation(line: 80, column: 1, scope: !5652)
!5656 = distinct !DISubprogram(name: "RDC_SetPdapAccess", scope: !5657, file: !5657, line: 164, type: !5658, scopeLine: 165, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !218, retainedNodes: !5660)
!5657 = !DIFile(filename: "modules/hal/nxp/imx/drivers/./rdc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5658 = !DISubroutineType(types: !5659)
!5659 = !{null, !576, !152, !195, !145, !145}
!5660 = !{!5661, !5662, !5663, !5664, !5665}
!5661 = !DILocalVariable(name: "base", arg: 1, scope: !5656, file: !5657, line: 164, type: !576)
!5662 = !DILocalVariable(name: "pdap", arg: 2, scope: !5656, file: !5657, line: 164, type: !152)
!5663 = !DILocalVariable(name: "perm", arg: 3, scope: !5656, file: !5657, line: 164, type: !195)
!5664 = !DILocalVariable(name: "sreq", arg: 4, scope: !5656, file: !5657, line: 164, type: !145)
!5665 = !DILocalVariable(name: "lock", arg: 5, scope: !5656, file: !5657, line: 164, type: !145)
!5666 = !DILocation(line: 0, scope: !5656)
!5667 = !DILocation(line: 166, column: 24, scope: !5656)
!5668 = !DILocation(line: 166, column: 5, scope: !5656)
!5669 = !DILocation(line: 166, column: 22, scope: !5656)
!5670 = !DILocation(line: 167, column: 1, scope: !5656)
!5671 = distinct !DISubprogram(name: "CCM_ControlGate", scope: !222, file: !222, line: 454, type: !5672, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !218, retainedNodes: !5674)
!5672 = !DISubroutineType(types: !5673)
!5673 = !{null, !504, !152, !152}
!5674 = !{!5675, !5676, !5677}
!5675 = !DILocalVariable(name: "base", arg: 1, scope: !5671, file: !222, line: 454, type: !504)
!5676 = !DILocalVariable(name: "ccmGate", arg: 2, scope: !5671, file: !222, line: 454, type: !152)
!5677 = !DILocalVariable(name: "control", arg: 3, scope: !5671, file: !222, line: 454, type: !152)
!5678 = !DILocation(line: 0, scope: !5671)
!5679 = !DILocation(line: 456, column: 5, scope: !5671)
!5680 = !DILocation(line: 456, column: 22, scope: !5671)
!5681 = !DILocation(line: 457, column: 1, scope: !5671)
!5682 = distinct !DISubprogram(name: "CCM_EnableRoot", scope: !222, file: !222, line: 379, type: !5683, scopeLine: 380, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !218, retainedNodes: !5685)
!5683 = !DISubroutineType(types: !5684)
!5684 = !{null, !504, !152}
!5685 = !{!5686, !5687}
!5686 = !DILocalVariable(name: "base", arg: 1, scope: !5682, file: !222, line: 379, type: !504)
!5687 = !DILocalVariable(name: "ccmRoot", arg: 2, scope: !5682, file: !222, line: 379, type: !152)
!5688 = !DILocation(line: 0, scope: !5682)
!5689 = !DILocation(line: 381, column: 26, scope: !5682)
!5690 = !DILocation(line: 382, column: 1, scope: !5682)
!5691 = distinct !DISubprogram(name: "WDOG_DisablePowerdown", scope: !5692, file: !5692, line: 136, type: !5693, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !218, retainedNodes: !5695)
!5692 = !DIFile(filename: "modules/hal/nxp/imx/drivers/./wdog_imx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5693 = !DISubroutineType(types: !5694)
!5694 = !{null, !619}
!5695 = !{!5696}
!5696 = !DILocalVariable(name: "base", arg: 1, scope: !5691, file: !5692, line: 136, type: !619)
!5697 = !DILocation(line: 0, scope: !5691)
!5698 = !DILocation(line: 138, column: 16, scope: !5691)
!5699 = !DILocation(line: 139, column: 1, scope: !5691)
!5700 = distinct !DISubprogram(name: "RDC_SetDomainID", scope: !5657, file: !5657, line: 136, type: !5701, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !218, retainedNodes: !5703)
!5701 = !DISubroutineType(types: !5702)
!5702 = !{null, !576, !152, !152, !145}
!5703 = !{!5704, !5705, !5706, !5707}
!5704 = !DILocalVariable(name: "base", arg: 1, scope: !5700, file: !5657, line: 136, type: !576)
!5705 = !DILocalVariable(name: "mda", arg: 2, scope: !5700, file: !5657, line: 136, type: !152)
!5706 = !DILocalVariable(name: "domainId", arg: 3, scope: !5700, file: !5657, line: 136, type: !152)
!5707 = !DILocalVariable(name: "lock", arg: 4, scope: !5700, file: !5657, line: 136, type: !145)
!5708 = !DILocation(line: 0, scope: !5700)
!5709 = !DILocation(line: 140, column: 20, scope: !5700)
!5710 = !DILocation(line: 141, column: 1, scope: !5700)
!5711 = distinct !DISubprogram(name: "z_log_minimal_printk", scope: !5712, file: !5712, line: 14, type: !4009, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2324, retainedNodes: !5713)
!5712 = !DIFile(filename: "zephyr/subsys/logging/log_minimal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5713 = !{!5714, !5715}
!5714 = !DILocalVariable(name: "fmt", arg: 1, scope: !5711, file: !5712, line: 14, type: !118)
!5715 = !DILocalVariable(name: "ap", scope: !5711, file: !5712, line: 16, type: !5716)
!5716 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3019, line: 99, baseType: !5717)
!5717 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3019, line: 40, baseType: !5718)
!5718 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !5712, baseType: !5719)
!5719 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !5720)
!5720 = !{!5721}
!5721 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !5719, file: !5712, line: 16, baseType: !106, size: 32)
!5722 = !DILocation(line: 0, scope: !5711)
!5723 = !DILocation(line: 16, column: 2, scope: !5711)
!5724 = !DILocation(line: 16, column: 10, scope: !5711)
!5725 = !DILocation(line: 18, column: 2, scope: !5711)
!5726 = !DILocation(line: 19, column: 2, scope: !5711)
!5727 = !DILocation(line: 20, column: 2, scope: !5711)
!5728 = !DILocation(line: 21, column: 1, scope: !5711)
!5729 = distinct !DISubprogram(name: "z_log_minimal_vprintk", scope: !5712, file: !5712, line: 23, type: !5730, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2324, retainedNodes: !5732)
!5730 = !DISubroutineType(types: !5731)
!5731 = !{null, !118, !5716}
!5732 = !{!5733, !5734}
!5733 = !DILocalVariable(name: "fmt", arg: 1, scope: !5729, file: !5712, line: 23, type: !118)
!5734 = !DILocalVariable(name: "ap", arg: 2, scope: !5729, file: !5712, line: 23, type: !5716)
!5735 = !DILocation(line: 0, scope: !5729)
!5736 = !DILocation(line: 25, column: 2, scope: !5729)
!5737 = !DILocation(line: 26, column: 1, scope: !5729)
!5738 = distinct !DISubprogram(name: "z_log_minimal_hexdump_print", scope: !5712, file: !5712, line: 52, type: !5739, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2324, retainedNodes: !5741)
!5739 = !DISubroutineType(types: !5740)
!5740 = !{null, !107, !13, !185}
!5741 = !{!5742, !5743, !5744, !5745}
!5742 = !DILocalVariable(name: "level", arg: 1, scope: !5738, file: !5712, line: 52, type: !107)
!5743 = !DILocalVariable(name: "data", arg: 2, scope: !5738, file: !5712, line: 52, type: !13)
!5744 = !DILocalVariable(name: "size", arg: 3, scope: !5738, file: !5712, line: 52, type: !185)
!5745 = !DILocalVariable(name: "data_buffer", scope: !5738, file: !5712, line: 54, type: !118)
!5746 = !DILocation(line: 0, scope: !5738)
!5747 = !DILocation(line: 55, column: 14, scope: !5738)
!5748 = !DILocation(line: 55, column: 2, scope: !5738)
!5749 = !DILocation(line: 56, column: 3, scope: !5750)
!5750 = distinct !DILexicalBlock(scope: !5738, file: !5712, line: 55, column: 20)
!5751 = !DILocation(line: 57, column: 3, scope: !5750)
!5752 = !DILocation(line: 59, column: 7, scope: !5750)
!5753 = distinct !{!5753, !5748, !5754}
!5754 = !DILocation(line: 65, column: 2, scope: !5738)
!5755 = !DILocation(line: 66, column: 1, scope: !5738)
!5756 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !5757, file: !5757, line: 175, type: !5758, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2324, retainedNodes: !5760)
!5757 = !DIFile(filename: "zephyr/include/zephyr/logging/log_core.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5758 = !DISubroutineType(types: !5759)
!5759 = !{!120, !107}
!5760 = !{!5761}
!5761 = !DILocalVariable(name: "level", arg: 1, scope: !5756, file: !5757, line: 175, type: !107)
!5762 = !DILocation(line: 0, scope: !5756)
!5763 = !DILocation(line: 177, column: 2, scope: !5756)
!5764 = !DILocation(line: 189, column: 1, scope: !5756)
!5765 = distinct !DISubprogram(name: "minimal_hexdump_line_print", scope: !5712, file: !5712, line: 28, type: !5766, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2324, retainedNodes: !5768)
!5766 = !DISubroutineType(types: !5767)
!5767 = !{null, !118, !185}
!5768 = !{!5769, !5770, !5771, !5773, !5775}
!5769 = !DILocalVariable(name: "data", arg: 1, scope: !5765, file: !5712, line: 28, type: !118)
!5770 = !DILocalVariable(name: "length", arg: 2, scope: !5765, file: !5712, line: 28, type: !185)
!5771 = !DILocalVariable(name: "i", scope: !5772, file: !5712, line: 30, type: !185)
!5772 = distinct !DILexicalBlock(scope: !5765, file: !5712, line: 30, column: 2)
!5773 = !DILocalVariable(name: "i", scope: !5774, file: !5712, line: 40, type: !185)
!5774 = distinct !DILexicalBlock(scope: !5765, file: !5712, line: 40, column: 2)
!5775 = !DILocalVariable(name: "c", scope: !5776, file: !5712, line: 42, type: !196)
!5776 = distinct !DILexicalBlock(scope: !5777, file: !5712, line: 41, column: 19)
!5777 = distinct !DILexicalBlock(scope: !5778, file: !5712, line: 41, column: 7)
!5778 = distinct !DILexicalBlock(scope: !5779, file: !5712, line: 40, column: 54)
!5779 = distinct !DILexicalBlock(scope: !5774, file: !5712, line: 40, column: 2)
!5780 = !DILocation(line: 0, scope: !5765)
!5781 = !DILocation(line: 0, scope: !5772)
!5782 = !DILocation(line: 30, column: 2, scope: !5772)
!5783 = !DILocation(line: 38, column: 2, scope: !5765)
!5784 = !DILocation(line: 0, scope: !5774)
!5785 = !DILocation(line: 40, column: 2, scope: !5774)
!5786 = !DILocation(line: 31, column: 9, scope: !5787)
!5787 = distinct !DILexicalBlock(scope: !5788, file: !5712, line: 31, column: 7)
!5788 = distinct !DILexicalBlock(scope: !5789, file: !5712, line: 30, column: 54)
!5789 = distinct !DILexicalBlock(scope: !5772, file: !5712, line: 30, column: 2)
!5790 = !DILocation(line: 31, column: 7, scope: !5788)
!5791 = !DILocation(line: 32, column: 35, scope: !5792)
!5792 = distinct !DILexicalBlock(scope: !5787, file: !5712, line: 31, column: 19)
!5793 = !DILocation(line: 32, column: 20, scope: !5792)
!5794 = !DILocation(line: 32, column: 4, scope: !5792)
!5795 = !DILocation(line: 33, column: 3, scope: !5792)
!5796 = !DILocation(line: 34, column: 4, scope: !5797)
!5797 = distinct !DILexicalBlock(scope: !5787, file: !5712, line: 33, column: 10)
!5798 = !DILocation(line: 30, column: 50, scope: !5789)
!5799 = !DILocation(line: 30, column: 24, scope: !5789)
!5800 = distinct !{!5800, !5782, !5801}
!5801 = !DILocation(line: 36, column: 2, scope: !5772)
!5802 = !DILocation(line: 49, column: 2, scope: !5765)
!5803 = !DILocation(line: 50, column: 1, scope: !5765)
!5804 = !DILocation(line: 41, column: 9, scope: !5777)
!5805 = !DILocation(line: 41, column: 7, scope: !5778)
!5806 = !DILocation(line: 42, column: 22, scope: !5776)
!5807 = !DILocation(line: 0, scope: !5776)
!5808 = !DILocation(line: 44, column: 25, scope: !5776)
!5809 = !DILocation(line: 44, column: 17, scope: !5776)
!5810 = !DILocation(line: 44, column: 33, scope: !5776)
!5811 = !DILocation(line: 44, column: 4, scope: !5776)
!5812 = !DILocation(line: 45, column: 3, scope: !5776)
!5813 = !DILocation(line: 46, column: 4, scope: !5814)
!5814 = distinct !DILexicalBlock(scope: !5777, file: !5712, line: 45, column: 10)
!5815 = !DILocation(line: 40, column: 50, scope: !5779)
!5816 = !DILocation(line: 40, column: 24, scope: !5779)
!5817 = distinct !{!5817, !5785, !5818}
!5818 = !DILocation(line: 48, column: 2, scope: !5774)
!5819 = distinct !DISubprogram(name: "isprint", scope: !4794, file: !4794, line: 37, type: !214, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2324, retainedNodes: !5820)
!5820 = !{!5821}
!5821 = !DILocalVariable(name: "c", arg: 1, scope: !5819, file: !4794, line: 37, type: !107)
!5822 = !DILocation(line: 0, scope: !5819)
!5823 = !DILocation(line: 39, column: 38, scope: !5819)
!5824 = !DILocation(line: 39, column: 2, scope: !5819)
!5825 = distinct !DISubprogram(name: "z_arm_fatal_error", scope: !5826, file: !5826, line: 57, type: !5827, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2327, retainedNodes: !5873)
!5826 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5827 = !DISubroutineType(types: !5828)
!5828 = !{null, !32, !5829}
!5829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5830, size: 32)
!5830 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5831)
!5831 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2448, line: 141, baseType: !5832)
!5832 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2448, line: 97, size: 256, elements: !5833)
!5833 = !{!5834}
!5834 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !5832, file: !2448, line: 107, baseType: !5835, size: 256)
!5835 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2448, line: 98, size: 256, elements: !5836)
!5836 = !{!5837, !5842, !5847, !5852, !5857, !5862, !5867, !5872}
!5837 = !DIDerivedType(tag: DW_TAG_member, scope: !5835, file: !2448, line: 99, baseType: !5838, size: 32)
!5838 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5835, file: !2448, line: 99, size: 32, elements: !5839)
!5839 = !{!5840, !5841}
!5840 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !5838, file: !2448, line: 99, baseType: !152, size: 32)
!5841 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !5838, file: !2448, line: 99, baseType: !152, size: 32)
!5842 = !DIDerivedType(tag: DW_TAG_member, scope: !5835, file: !2448, line: 100, baseType: !5843, size: 32, offset: 32)
!5843 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5835, file: !2448, line: 100, size: 32, elements: !5844)
!5844 = !{!5845, !5846}
!5845 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !5843, file: !2448, line: 100, baseType: !152, size: 32)
!5846 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !5843, file: !2448, line: 100, baseType: !152, size: 32)
!5847 = !DIDerivedType(tag: DW_TAG_member, scope: !5835, file: !2448, line: 101, baseType: !5848, size: 32, offset: 64)
!5848 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5835, file: !2448, line: 101, size: 32, elements: !5849)
!5849 = !{!5850, !5851}
!5850 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !5848, file: !2448, line: 101, baseType: !152, size: 32)
!5851 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !5848, file: !2448, line: 101, baseType: !152, size: 32)
!5852 = !DIDerivedType(tag: DW_TAG_member, scope: !5835, file: !2448, line: 102, baseType: !5853, size: 32, offset: 96)
!5853 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5835, file: !2448, line: 102, size: 32, elements: !5854)
!5854 = !{!5855, !5856}
!5855 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !5853, file: !2448, line: 102, baseType: !152, size: 32)
!5856 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !5853, file: !2448, line: 102, baseType: !152, size: 32)
!5857 = !DIDerivedType(tag: DW_TAG_member, scope: !5835, file: !2448, line: 103, baseType: !5858, size: 32, offset: 128)
!5858 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5835, file: !2448, line: 103, size: 32, elements: !5859)
!5859 = !{!5860, !5861}
!5860 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !5858, file: !2448, line: 103, baseType: !152, size: 32)
!5861 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !5858, file: !2448, line: 103, baseType: !152, size: 32)
!5862 = !DIDerivedType(tag: DW_TAG_member, scope: !5835, file: !2448, line: 104, baseType: !5863, size: 32, offset: 160)
!5863 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5835, file: !2448, line: 104, size: 32, elements: !5864)
!5864 = !{!5865, !5866}
!5865 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !5863, file: !2448, line: 104, baseType: !152, size: 32)
!5866 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !5863, file: !2448, line: 104, baseType: !152, size: 32)
!5867 = !DIDerivedType(tag: DW_TAG_member, scope: !5835, file: !2448, line: 105, baseType: !5868, size: 32, offset: 192)
!5868 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5835, file: !2448, line: 105, size: 32, elements: !5869)
!5869 = !{!5870, !5871}
!5870 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !5868, file: !2448, line: 105, baseType: !152, size: 32)
!5871 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !5868, file: !2448, line: 105, baseType: !152, size: 32)
!5872 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !5835, file: !2448, line: 106, baseType: !152, size: 32, offset: 224)
!5873 = !{!5874, !5875}
!5874 = !DILocalVariable(name: "reason", arg: 1, scope: !5825, file: !5826, line: 57, type: !32)
!5875 = !DILocalVariable(name: "esf", arg: 2, scope: !5825, file: !5826, line: 57, type: !5829)
!5876 = !DILocation(line: 0, scope: !5825)
!5877 = !DILocation(line: 60, column: 10, scope: !5878)
!5878 = distinct !DILexicalBlock(scope: !5825, file: !5826, line: 60, column: 6)
!5879 = !DILocation(line: 60, column: 6, scope: !5825)
!5880 = !DILocation(line: 61, column: 3, scope: !5881)
!5881 = distinct !DILexicalBlock(scope: !5878, file: !5826, line: 60, column: 19)
!5882 = !DILocation(line: 62, column: 2, scope: !5881)
!5883 = !DILocation(line: 63, column: 2, scope: !5825)
!5884 = !DILocation(line: 64, column: 1, scope: !5825)
!5885 = distinct !DISubprogram(name: "esf_dump", scope: !5826, file: !5826, line: 20, type: !5886, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2327, retainedNodes: !5888)
!5886 = !DISubroutineType(types: !5887)
!5887 = !{null, !5829}
!5888 = !{!5889}
!5889 = !DILocalVariable(name: "esf", arg: 1, scope: !5885, file: !5826, line: 20, type: !5829)
!5890 = !DILocation(line: 0, scope: !5885)
!5891 = !DILocation(line: 22, column: 2, scope: !5892)
!5892 = distinct !DILexicalBlock(scope: !5893, file: !5826, line: 22, column: 2)
!5893 = distinct !DILexicalBlock(scope: !5894, file: !5826, line: 22, column: 2)
!5894 = distinct !DILexicalBlock(scope: !5895, file: !5826, line: 22, column: 2)
!5895 = distinct !DILexicalBlock(scope: !5885, file: !5826, line: 22, column: 2)
!5896 = !DILocation(line: 24, column: 2, scope: !5897)
!5897 = distinct !DILexicalBlock(scope: !5898, file: !5826, line: 24, column: 2)
!5898 = distinct !DILexicalBlock(scope: !5899, file: !5826, line: 24, column: 2)
!5899 = distinct !DILexicalBlock(scope: !5900, file: !5826, line: 24, column: 2)
!5900 = distinct !DILexicalBlock(scope: !5885, file: !5826, line: 24, column: 2)
!5901 = !DILocation(line: 26, column: 2, scope: !5902)
!5902 = distinct !DILexicalBlock(scope: !5903, file: !5826, line: 26, column: 2)
!5903 = distinct !DILexicalBlock(scope: !5904, file: !5826, line: 26, column: 2)
!5904 = distinct !DILexicalBlock(scope: !5905, file: !5826, line: 26, column: 2)
!5905 = distinct !DILexicalBlock(scope: !5885, file: !5826, line: 26, column: 2)
!5906 = !DILocation(line: 53, column: 2, scope: !5907)
!5907 = distinct !DILexicalBlock(scope: !5908, file: !5826, line: 53, column: 2)
!5908 = distinct !DILexicalBlock(scope: !5909, file: !5826, line: 53, column: 2)
!5909 = distinct !DILexicalBlock(scope: !5910, file: !5826, line: 53, column: 2)
!5910 = distinct !DILexicalBlock(scope: !5885, file: !5826, line: 53, column: 2)
!5911 = !DILocation(line: 55, column: 1, scope: !5885)
!5912 = distinct !DISubprogram(name: "z_do_kernel_oops", scope: !5826, file: !5826, line: 82, type: !5913, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2327, retainedNodes: !5928)
!5913 = !DISubroutineType(types: !5914)
!5914 = !{null, !5829, !5915}
!5915 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5916, size: 32)
!5916 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !785, line: 37, baseType: !5917)
!5917 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !785, line: 25, size: 288, elements: !5918)
!5918 = !{!5919, !5920, !5921, !5922, !5923, !5924, !5925, !5926, !5927}
!5919 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !5917, file: !785, line: 26, baseType: !152, size: 32)
!5920 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !5917, file: !785, line: 27, baseType: !152, size: 32, offset: 32)
!5921 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !5917, file: !785, line: 28, baseType: !152, size: 32, offset: 64)
!5922 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !5917, file: !785, line: 29, baseType: !152, size: 32, offset: 96)
!5923 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !5917, file: !785, line: 30, baseType: !152, size: 32, offset: 128)
!5924 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !5917, file: !785, line: 31, baseType: !152, size: 32, offset: 160)
!5925 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !5917, file: !785, line: 32, baseType: !152, size: 32, offset: 192)
!5926 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !5917, file: !785, line: 33, baseType: !152, size: 32, offset: 224)
!5927 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !5917, file: !785, line: 34, baseType: !152, size: 32, offset: 256)
!5928 = !{!5929, !5930, !5931}
!5929 = !DILocalVariable(name: "esf", arg: 1, scope: !5912, file: !5826, line: 82, type: !5829)
!5930 = !DILocalVariable(name: "callee_regs", arg: 2, scope: !5912, file: !5826, line: 82, type: !5915)
!5931 = !DILocalVariable(name: "reason", scope: !5912, file: !5826, line: 88, type: !32)
!5932 = !DILocation(line: 0, scope: !5912)
!5933 = !DILocation(line: 88, column: 35, scope: !5912)
!5934 = !DILocation(line: 108, column: 2, scope: !5912)
!5935 = !DILocation(line: 131, column: 1, scope: !5912)
!5936 = distinct !DISubprogram(name: "arch_syscall_oops", scope: !5826, file: !5826, line: 133, type: !131, scopeLine: 134, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2327, retainedNodes: !5937)
!5937 = !{!5938, !5939, !5940}
!5938 = !DILocalVariable(name: "ssf_ptr", arg: 1, scope: !5936, file: !5826, line: 133, type: !106)
!5939 = !DILocalVariable(name: "ssf_contents", scope: !5936, file: !5826, line: 135, type: !1403)
!5940 = !DILocalVariable(name: "oops_esf", scope: !5936, file: !5826, line: 136, type: !5831)
!5941 = !DILocation(line: 0, scope: !5936)
!5942 = !DILocation(line: 136, column: 2, scope: !5936)
!5943 = !DILocation(line: 136, column: 15, scope: !5936)
!5944 = !DILocation(line: 139, column: 22, scope: !5936)
!5945 = !DILocation(line: 139, column: 17, scope: !5936)
!5946 = !DILocation(line: 139, column: 20, scope: !5936)
!5947 = !DILocation(line: 141, column: 2, scope: !5936)
!5948 = !DILocation(line: 142, column: 2, scope: !5936)
!5949 = distinct !DISubprogram(name: "arch_irq_enable", scope: !5950, file: !5950, line: 40, type: !5951, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2338, retainedNodes: !5953)
!5950 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5951 = !DISubroutineType(types: !5952)
!5952 = !{null, !32}
!5953 = !{!5954}
!5954 = !DILocalVariable(name: "irq", arg: 1, scope: !5949, file: !5950, line: 40, type: !32)
!5955 = !DILocation(line: 0, scope: !5949)
!5956 = !DILocation(line: 42, column: 2, scope: !5949)
!5957 = !DILocation(line: 43, column: 1, scope: !5949)
!5958 = distinct !DISubprogram(name: "__NVIC_EnableIRQ", scope: !1598, file: !1598, line: 1684, type: !5959, scopeLine: 1685, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2338, retainedNodes: !5961)
!5959 = !DISubroutineType(types: !5960)
!5960 = !{null, !2342}
!5961 = !{!5962}
!5962 = !DILocalVariable(name: "IRQn", arg: 1, scope: !5958, file: !1598, line: 1684, type: !2342)
!5963 = !DILocation(line: 0, scope: !5958)
!5964 = !DILocation(line: 1686, column: 23, scope: !5965)
!5965 = distinct !DILexicalBlock(scope: !5958, file: !1598, line: 1686, column: 7)
!5966 = !DILocation(line: 1686, column: 7, scope: !5958)
!5967 = !DILocation(line: 1688, column: 5, scope: !5968)
!5968 = distinct !DILexicalBlock(scope: !5965, file: !1598, line: 1687, column: 3)
!5969 = !{i64 2154452937}
!5970 = !DILocation(line: 1689, column: 81, scope: !5968)
!5971 = !DILocation(line: 1689, column: 60, scope: !5968)
!5972 = !DILocation(line: 1689, column: 34, scope: !5968)
!5973 = !DILocation(line: 1689, column: 5, scope: !5968)
!5974 = !DILocation(line: 1689, column: 43, scope: !5968)
!5975 = !DILocation(line: 1690, column: 5, scope: !5968)
!5976 = !{i64 2154453051}
!5977 = !DILocation(line: 1691, column: 3, scope: !5968)
!5978 = !DILocation(line: 1692, column: 1, scope: !5958)
!5979 = distinct !DISubprogram(name: "arch_irq_disable", scope: !5950, file: !5950, line: 45, type: !5951, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2338, retainedNodes: !5980)
!5980 = !{!5981}
!5981 = !DILocalVariable(name: "irq", arg: 1, scope: !5979, file: !5950, line: 45, type: !32)
!5982 = !DILocation(line: 0, scope: !5979)
!5983 = !DILocation(line: 47, column: 2, scope: !5979)
!5984 = !DILocation(line: 48, column: 1, scope: !5979)
!5985 = distinct !DISubprogram(name: "__NVIC_DisableIRQ", scope: !1598, file: !1598, line: 1722, type: !5959, scopeLine: 1723, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2338, retainedNodes: !5986)
!5986 = !{!5987}
!5987 = !DILocalVariable(name: "IRQn", arg: 1, scope: !5985, file: !1598, line: 1722, type: !2342)
!5988 = !DILocation(line: 0, scope: !5985)
!5989 = !DILocation(line: 1724, column: 23, scope: !5990)
!5990 = distinct !DILexicalBlock(scope: !5985, file: !1598, line: 1724, column: 7)
!5991 = !DILocation(line: 1724, column: 7, scope: !5985)
!5992 = !DILocation(line: 1726, column: 81, scope: !5993)
!5993 = distinct !DILexicalBlock(scope: !5990, file: !1598, line: 1725, column: 3)
!5994 = !DILocation(line: 1726, column: 60, scope: !5993)
!5995 = !DILocation(line: 1726, column: 34, scope: !5993)
!5996 = !DILocation(line: 1726, column: 5, scope: !5993)
!5997 = !DILocation(line: 1726, column: 43, scope: !5993)
!5998 = !DILocation(line: 271, column: 3, scope: !5999, inlinedAt: !6001)
!5999 = distinct !DISubprogram(name: "__DSB", scope: !6000, file: !6000, line: 269, type: !2909, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2338, retainedNodes: !1949)
!6000 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/cmsis_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6001 = distinct !DILocation(line: 1727, column: 5, scope: !5993)
!6002 = !{i64 6907324}
!6003 = !DILocation(line: 260, column: 3, scope: !6004, inlinedAt: !6005)
!6004 = distinct !DISubprogram(name: "__ISB", scope: !6000, file: !6000, line: 258, type: !2909, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2338, retainedNodes: !1949)
!6005 = distinct !DILocation(line: 1728, column: 5, scope: !5993)
!6006 = !{i64 6907041}
!6007 = !DILocation(line: 1729, column: 3, scope: !5993)
!6008 = !DILocation(line: 1730, column: 1, scope: !5985)
!6009 = distinct !DISubprogram(name: "arch_irq_is_enabled", scope: !5950, file: !5950, line: 50, type: !6010, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2338, retainedNodes: !6012)
!6010 = !DISubroutineType(types: !6011)
!6011 = !{!107, !32}
!6012 = !{!6013}
!6013 = !DILocalVariable(name: "irq", arg: 1, scope: !6009, file: !5950, line: 50, type: !32)
!6014 = !DILocation(line: 0, scope: !6009)
!6015 = !DILocation(line: 52, column: 20, scope: !6009)
!6016 = !DILocation(line: 52, column: 9, scope: !6009)
!6017 = !DILocation(line: 52, column: 41, scope: !6009)
!6018 = !DILocation(line: 52, column: 39, scope: !6009)
!6019 = !DILocation(line: 52, column: 2, scope: !6009)
!6020 = distinct !DISubprogram(name: "z_arm_irq_priority_set", scope: !5950, file: !5950, line: 64, type: !6021, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2338, retainedNodes: !6023)
!6021 = !DISubroutineType(types: !6022)
!6022 = !{null, !32, !32, !152}
!6023 = !{!6024, !6025, !6026}
!6024 = !DILocalVariable(name: "irq", arg: 1, scope: !6020, file: !5950, line: 64, type: !32)
!6025 = !DILocalVariable(name: "prio", arg: 2, scope: !6020, file: !5950, line: 64, type: !32)
!6026 = !DILocalVariable(name: "flags", arg: 3, scope: !6020, file: !5950, line: 64, type: !152)
!6027 = !DILocation(line: 0, scope: !6020)
!6028 = !DILocation(line: 83, column: 8, scope: !6029)
!6029 = distinct !DILexicalBlock(scope: !6030, file: !5950, line: 82, column: 9)
!6030 = distinct !DILexicalBlock(scope: !6020, file: !5950, line: 76, column: 6)
!6031 = !DILocation(line: 91, column: 2, scope: !6032)
!6032 = distinct !DILexicalBlock(scope: !6033, file: !5950, line: 91, column: 2)
!6033 = distinct !DILexicalBlock(scope: !6020, file: !5950, line: 91, column: 2)
!6034 = !DILocation(line: 91, column: 2, scope: !6033)
!6035 = !DILocation(line: 91, column: 2, scope: !6036)
!6036 = distinct !DILexicalBlock(scope: !6032, file: !5950, line: 91, column: 2)
!6037 = !DILocation(line: 95, column: 2, scope: !6020)
!6038 = !DILocation(line: 96, column: 1, scope: !6020)
!6039 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !1598, file: !1598, line: 1814, type: !6040, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2338, retainedNodes: !6042)
!6040 = !DISubroutineType(types: !6041)
!6041 = !{null, !2342, !152}
!6042 = !{!6043, !6044}
!6043 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6039, file: !1598, line: 1814, type: !2342)
!6044 = !DILocalVariable(name: "priority", arg: 2, scope: !6039, file: !1598, line: 1814, type: !152)
!6045 = !DILocation(line: 0, scope: !6039)
!6046 = !DILocation(line: 0, scope: !6047)
!6047 = distinct !DILexicalBlock(scope: !6039, file: !1598, line: 1816, column: 7)
!6048 = !DILocation(line: 1816, column: 7, scope: !6039)
!6049 = !DILocation(line: 1824, column: 1, scope: !6039)
!6050 = distinct !DISubprogram(name: "z_irq_spurious", scope: !5950, file: !5950, line: 155, type: !17, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2338, retainedNodes: !6051)
!6051 = !{!6052}
!6052 = !DILocalVariable(name: "unused", arg: 1, scope: !6050, file: !5950, line: 155, type: !13)
!6053 = !DILocation(line: 0, scope: !6050)
!6054 = !DILocation(line: 159, column: 2, scope: !6050)
!6055 = !DILocation(line: 160, column: 1, scope: !6050)
!6056 = distinct !DISubprogram(name: "z_arm_nmi", scope: !6057, file: !6057, line: 87, type: !2909, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2385, retainedNodes: !1949)
!6057 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6058 = !DILocation(line: 89, column: 2, scope: !6056)
!6059 = !DILocation(line: 90, column: 2, scope: !6056)
!6060 = !DILocation(line: 91, column: 1, scope: !6056)
!6061 = !DISubprogram(name: "z_SysNmiOnReset", scope: !6057, file: !6057, line: 23, type: !2909, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1949)
!6062 = !DISubprogram(name: "z_arm_int_exit", scope: !6063, file: !6063, line: 153, type: !2909, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1949)
!6063 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/irq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6064 = distinct !DISubprogram(name: "z_arm_prep_c", scope: !6065, file: !6065, line: 256, type: !2909, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2387, retainedNodes: !1949)
!6065 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6066 = !DILocation(line: 258, column: 2, scope: !6064)
!6067 = !DILocation(line: 260, column: 2, scope: !6064)
!6068 = !DILocation(line: 262, column: 2, scope: !6064)
!6069 = !DILocation(line: 263, column: 2, scope: !6064)
!6070 = !DILocation(line: 267, column: 2, scope: !6064)
!6071 = !DILocation(line: 268, column: 2, scope: !6064)
!6072 = distinct !DISubprogram(name: "relocate_vector_table", scope: !6065, file: !6065, line: 53, type: !2909, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2387, retainedNodes: !1949)
!6073 = !DILocation(line: 55, column: 12, scope: !6072)
!6074 = !DILocation(line: 271, column: 3, scope: !6075, inlinedAt: !6076)
!6075 = distinct !DISubprogram(name: "__DSB", scope: !6000, file: !6000, line: 269, type: !2909, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2387, retainedNodes: !1949)
!6076 = distinct !DILocation(line: 56, column: 2, scope: !6072)
!6077 = !{i64 6943098}
!6078 = !DILocation(line: 260, column: 3, scope: !6079, inlinedAt: !6080)
!6079 = distinct !DISubprogram(name: "__ISB", scope: !6000, file: !6000, line: 258, type: !2909, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2387, retainedNodes: !1949)
!6080 = distinct !DILocation(line: 57, column: 2, scope: !6072)
!6081 = !{i64 6942815}
!6082 = !DILocation(line: 58, column: 1, scope: !6072)
!6083 = distinct !DISubprogram(name: "z_arm_floating_point_init", scope: !6065, file: !6065, line: 96, type: !2909, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2387, retainedNodes: !1949)
!6084 = !DILocation(line: 103, column: 13, scope: !6083)
!6085 = !DILocation(line: 975, column: 3, scope: !6086, inlinedAt: !6091)
!6086 = distinct !DISubprogram(name: "__get_CONTROL", scope: !6000, file: !6000, line: 971, type: !6087, scopeLine: 972, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2387, retainedNodes: !6089)
!6087 = !DISubroutineType(types: !6088)
!6088 = !{!152}
!6089 = !{!6090}
!6090 = !DILocalVariable(name: "result", scope: !6086, file: !6000, line: 973, type: !152)
!6091 = distinct !DILocation(line: 189, column: 16, scope: !6083)
!6092 = !{i64 6963928}
!6093 = !DILocation(line: 0, scope: !6086, inlinedAt: !6091)
!6094 = !DILocation(line: 189, column: 32, scope: !6083)
!6095 = !DILocalVariable(name: "control", arg: 1, scope: !6096, file: !6000, line: 1001, type: !152)
!6096 = distinct !DISubprogram(name: "__set_CONTROL", scope: !6000, file: !6000, line: 1001, type: !6097, scopeLine: 1002, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2387, retainedNodes: !6099)
!6097 = !DISubroutineType(types: !6098)
!6098 = !{null, !152}
!6099 = !{!6095}
!6100 = !DILocation(line: 0, scope: !6096, inlinedAt: !6101)
!6101 = distinct !DILocation(line: 189, column: 2, scope: !6083)
!6102 = !DILocation(line: 1003, column: 3, scope: !6096, inlinedAt: !6101)
!6103 = !{i64 6964648}
!6104 = !DILocation(line: 260, column: 3, scope: !6079, inlinedAt: !6105)
!6105 = distinct !DILocation(line: 1004, column: 3, scope: !6096, inlinedAt: !6101)
!6106 = !DILocation(line: 191, column: 1, scope: !6083)
!6107 = distinct !DISubprogram(name: "arch_swap", scope: !6108, file: !6108, line: 33, type: !6010, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2415, retainedNodes: !6109)
!6108 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6109 = !{!6110}
!6110 = !DILocalVariable(name: "key", arg: 1, scope: !6107, file: !6108, line: 33, type: !32)
!6111 = !DILocation(line: 0, scope: !6107)
!6112 = !DILocation(line: 36, column: 2, scope: !6107)
!6113 = !DILocation(line: 36, column: 17, scope: !6107)
!6114 = !DILocation(line: 36, column: 25, scope: !6107)
!6115 = !DILocation(line: 37, column: 37, scope: !6107)
!6116 = !DILocation(line: 37, column: 17, scope: !6107)
!6117 = !DILocation(line: 37, column: 35, scope: !6107)
!6118 = !DILocation(line: 41, column: 12, scope: !6107)
!6119 = !DILocalVariable(name: "key", arg: 1, scope: !6120, file: !6121, line: 84, type: !32)
!6120 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6121, file: !6121, line: 84, type: !5951, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2415, retainedNodes: !6122)
!6121 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/asm_inline_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6122 = !{!6119}
!6123 = !DILocation(line: 0, scope: !6120, inlinedAt: !6124)
!6124 = distinct !DILocation(line: 44, column: 2, scope: !6107)
!6125 = !DILocation(line: 95, column: 2, scope: !6120, inlinedAt: !6124)
!6126 = !{i64 2845003}
!6127 = !DILocation(line: 53, column: 9, scope: !6107)
!6128 = !DILocation(line: 53, column: 24, scope: !6107)
!6129 = !DILocation(line: 53, column: 2, scope: !6107)
!6130 = distinct !DISubprogram(name: "arch_new_thread", scope: !6131, file: !6131, line: 56, type: !6132, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2443, retainedNodes: !6236)
!6131 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6132 = !DISubroutineType(types: !6133)
!6133 = !{null, !6134, !6231, !193, !687, !106, !106, !106}
!6134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6135, size: 32)
!6135 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !716, line: 245, size: 1152, elements: !6136)
!6136 = !{!6137, !6195, !6207, !6208, !6209, !6210, !6211, !6226}
!6137 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !6135, file: !716, line: 247, baseType: !6138, size: 384)
!6138 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !716, line: 57, size: 384, elements: !6139)
!6139 = !{!6140, !6164, !6171, !6172, !6173, !6182, !6183, !6184}
!6140 = !DIDerivedType(tag: DW_TAG_member, scope: !6138, file: !716, line: 60, baseType: !6141, size: 64)
!6141 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6138, file: !716, line: 60, size: 64, elements: !6142)
!6142 = !{!6143, !6158}
!6143 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !6141, file: !716, line: 61, baseType: !6144, size: 64)
!6144 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !726, line: 49, baseType: !6145)
!6145 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !726, line: 37, size: 64, elements: !6146)
!6146 = !{!6147, !6153}
!6147 = !DIDerivedType(tag: DW_TAG_member, scope: !6145, file: !726, line: 38, baseType: !6148, size: 32)
!6148 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6145, file: !726, line: 38, size: 32, elements: !6149)
!6149 = !{!6150, !6152}
!6150 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !6148, file: !726, line: 39, baseType: !6151, size: 32)
!6151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6145, size: 32)
!6152 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6148, file: !726, line: 40, baseType: !6151, size: 32)
!6153 = !DIDerivedType(tag: DW_TAG_member, scope: !6145, file: !726, line: 42, baseType: !6154, size: 32, offset: 32)
!6154 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6145, file: !726, line: 42, size: 32, elements: !6155)
!6155 = !{!6156, !6157}
!6156 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !6154, file: !726, line: 43, baseType: !6151, size: 32)
!6157 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6154, file: !726, line: 44, baseType: !6151, size: 32)
!6158 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !6141, file: !716, line: 62, baseType: !6159, size: 64)
!6159 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !742, line: 49, size: 64, elements: !6160)
!6160 = !{!6161}
!6161 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !6159, file: !742, line: 50, baseType: !6162, size: 64)
!6162 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6163, size: 64, elements: !747)
!6163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6159, size: 32)
!6164 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !6138, file: !716, line: 68, baseType: !6165, size: 32, offset: 64)
!6165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6166, size: 32)
!6166 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !752, line: 233, baseType: !6167)
!6167 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !752, line: 231, size: 64, elements: !6168)
!6168 = !{!6169}
!6169 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !6167, file: !752, line: 232, baseType: !6170, size: 64)
!6170 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !726, line: 48, baseType: !6145)
!6171 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !6138, file: !716, line: 71, baseType: !195, size: 8, offset: 96)
!6172 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !6138, file: !716, line: 74, baseType: !195, size: 8, offset: 104)
!6173 = !DIDerivedType(tag: DW_TAG_member, scope: !6138, file: !716, line: 90, baseType: !6174, size: 16, offset: 112)
!6174 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6138, file: !716, line: 90, size: 16, elements: !6175)
!6175 = !{!6176, !6181}
!6176 = !DIDerivedType(tag: DW_TAG_member, scope: !6174, file: !716, line: 91, baseType: !6177, size: 16)
!6177 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6174, file: !716, line: 91, size: 16, elements: !6178)
!6178 = !{!6179, !6180}
!6179 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !6177, file: !716, line: 96, baseType: !766, size: 8)
!6180 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !6177, file: !716, line: 97, baseType: !195, size: 8, offset: 8)
!6181 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !6174, file: !716, line: 100, baseType: !197, size: 16)
!6182 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !6138, file: !716, line: 107, baseType: !152, size: 32, offset: 128)
!6183 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !6138, file: !716, line: 127, baseType: !106, size: 32, offset: 160)
!6184 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !6138, file: !716, line: 131, baseType: !6185, size: 192, offset: 192)
!6185 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !752, line: 244, size: 192, elements: !6186)
!6186 = !{!6187, !6188, !6194}
!6187 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !6185, file: !752, line: 245, baseType: !6144, size: 64)
!6188 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !6185, file: !752, line: 246, baseType: !6189, size: 32, offset: 64)
!6189 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !752, line: 242, baseType: !6190)
!6190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6191, size: 32)
!6191 = !DISubroutineType(types: !6192)
!6192 = !{null, !6193}
!6193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6185, size: 32)
!6194 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !6185, file: !752, line: 249, baseType: !694, size: 64, offset: 128)
!6195 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !6135, file: !716, line: 250, baseType: !6196, size: 288, offset: 384)
!6196 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !785, line: 25, size: 288, elements: !6197)
!6197 = !{!6198, !6199, !6200, !6201, !6202, !6203, !6204, !6205, !6206}
!6198 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6196, file: !785, line: 26, baseType: !152, size: 32)
!6199 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6196, file: !785, line: 27, baseType: !152, size: 32, offset: 32)
!6200 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6196, file: !785, line: 28, baseType: !152, size: 32, offset: 64)
!6201 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6196, file: !785, line: 29, baseType: !152, size: 32, offset: 96)
!6202 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6196, file: !785, line: 30, baseType: !152, size: 32, offset: 128)
!6203 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6196, file: !785, line: 31, baseType: !152, size: 32, offset: 160)
!6204 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6196, file: !785, line: 32, baseType: !152, size: 32, offset: 192)
!6205 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6196, file: !785, line: 33, baseType: !152, size: 32, offset: 224)
!6206 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6196, file: !785, line: 34, baseType: !152, size: 32, offset: 256)
!6207 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !6135, file: !716, line: 253, baseType: !106, size: 32, offset: 672)
!6208 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !6135, file: !716, line: 256, baseType: !6166, size: 64, offset: 704)
!6209 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6135, file: !716, line: 279, baseType: !799, size: 256, offset: 768)
!6210 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !6135, file: !716, line: 294, baseType: !107, size: 32, offset: 1024)
!6211 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !6135, file: !716, line: 325, baseType: !6212, size: 32, offset: 1056)
!6212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6213, size: 32)
!6213 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !804, line: 5073, size: 192, elements: !6214)
!6214 = !{!6215, !6221, !6222}
!6215 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6213, file: !804, line: 5074, baseType: !6216, size: 96)
!6216 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !808, line: 56, size: 96, elements: !6217)
!6217 = !{!6218, !6219, !6220}
!6218 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6216, file: !808, line: 57, baseType: !811, size: 32)
!6219 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !6216, file: !808, line: 58, baseType: !106, size: 32, offset: 32)
!6220 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !6216, file: !808, line: 59, baseType: !185, size: 32, offset: 64)
!6221 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !6213, file: !804, line: 5075, baseType: !6166, size: 64, offset: 96)
!6222 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6213, file: !804, line: 5076, baseType: !6223, size: 32, offset: 160)
!6223 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !818, line: 43, size: 32, elements: !6224)
!6224 = !{!6225}
!6225 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !6223, file: !818, line: 52, baseType: !22, size: 32)
!6226 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !6135, file: !716, line: 343, baseType: !6227, size: 64, offset: 1088)
!6227 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !785, line: 60, size: 64, elements: !6228)
!6228 = !{!6229, !6230}
!6229 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !6227, file: !785, line: 63, baseType: !152, size: 32)
!6230 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !6227, file: !785, line: 66, baseType: !152, size: 32, offset: 32)
!6231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6232, size: 32)
!6232 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !688, line: 44, baseType: !6233)
!6233 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !706, line: 47, size: 8, elements: !6234)
!6234 = !{!6235}
!6235 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !6233, file: !706, line: 48, baseType: !120, size: 8)
!6236 = !{!6237, !6238, !6239, !6240, !6241, !6242, !6243, !6244}
!6237 = !DILocalVariable(name: "thread", arg: 1, scope: !6130, file: !6131, line: 56, type: !6134)
!6238 = !DILocalVariable(name: "stack", arg: 2, scope: !6130, file: !6131, line: 56, type: !6231)
!6239 = !DILocalVariable(name: "stack_ptr", arg: 3, scope: !6130, file: !6131, line: 57, type: !193)
!6240 = !DILocalVariable(name: "entry", arg: 4, scope: !6130, file: !6131, line: 57, type: !687)
!6241 = !DILocalVariable(name: "p1", arg: 5, scope: !6130, file: !6131, line: 58, type: !106)
!6242 = !DILocalVariable(name: "p2", arg: 6, scope: !6130, file: !6131, line: 58, type: !106)
!6243 = !DILocalVariable(name: "p3", arg: 7, scope: !6130, file: !6131, line: 58, type: !106)
!6244 = !DILocalVariable(name: "iframe", scope: !6130, file: !6131, line: 60, type: !2446)
!6245 = !DILocation(line: 0, scope: !6130)
!6246 = !DILocation(line: 85, column: 11, scope: !6130)
!6247 = !DILocation(line: 93, column: 10, scope: !6130)
!6248 = !DILocation(line: 98, column: 13, scope: !6130)
!6249 = !DILocation(line: 100, column: 15, scope: !6130)
!6250 = !DILocation(line: 100, column: 10, scope: !6130)
!6251 = !DILocation(line: 100, column: 13, scope: !6130)
!6252 = !DILocation(line: 101, column: 15, scope: !6130)
!6253 = !DILocation(line: 101, column: 10, scope: !6130)
!6254 = !DILocation(line: 101, column: 13, scope: !6130)
!6255 = !DILocation(line: 102, column: 15, scope: !6130)
!6256 = !DILocation(line: 102, column: 10, scope: !6130)
!6257 = !DILocation(line: 102, column: 13, scope: !6130)
!6258 = !DILocation(line: 103, column: 15, scope: !6130)
!6259 = !DILocation(line: 103, column: 10, scope: !6130)
!6260 = !DILocation(line: 103, column: 13, scope: !6130)
!6261 = !DILocation(line: 106, column: 10, scope: !6130)
!6262 = !DILocation(line: 106, column: 15, scope: !6130)
!6263 = !DILocation(line: 122, column: 29, scope: !6130)
!6264 = !DILocation(line: 122, column: 23, scope: !6130)
!6265 = !DILocation(line: 122, column: 27, scope: !6130)
!6266 = !DILocation(line: 123, column: 15, scope: !6130)
!6267 = !DILocation(line: 123, column: 23, scope: !6130)
!6268 = !DILocation(line: 143, column: 1, scope: !6130)
!6269 = distinct !DISubprogram(name: "arch_switch_to_main_thread", scope: !6131, file: !6131, line: 530, type: !6270, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2443, retainedNodes: !6272)
!6270 = !DISubroutineType(types: !6271)
!6271 = !{null, !6134, !193, !687}
!6272 = !{!6273, !6274, !6275}
!6273 = !DILocalVariable(name: "main_thread", arg: 1, scope: !6269, file: !6131, line: 530, type: !6134)
!6274 = !DILocalVariable(name: "stack_ptr", arg: 2, scope: !6269, file: !6131, line: 530, type: !193)
!6275 = !DILocalVariable(name: "_main", arg: 3, scope: !6269, file: !6131, line: 531, type: !687)
!6276 = !DILocation(line: 0, scope: !6269)
!6277 = !DILocation(line: 535, column: 11, scope: !6269)
!6278 = !DILocation(line: 576, column: 2, scope: !6269)
!6279 = !{i64 18049, i64 18065, i64 18143, i64 18197, i64 18440, i64 18509, i64 18626, i64 18645, i64 18664, i64 18689}
!6280 = !DILocation(line: 603, column: 2, scope: !6269)
!6281 = distinct !DISubprogram(name: "z_arm_fault", scope: !6282, file: !6282, line: 1036, type: !6283, scopeLine: 1038, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2486, retainedNodes: !6298)
!6282 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6283 = !DISubroutineType(types: !6284)
!6284 = !{null, !152, !152, !152, !6285}
!6285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6286, size: 32)
!6286 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !785, line: 37, baseType: !6287)
!6287 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !785, line: 25, size: 288, elements: !6288)
!6288 = !{!6289, !6290, !6291, !6292, !6293, !6294, !6295, !6296, !6297}
!6289 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6287, file: !785, line: 26, baseType: !152, size: 32)
!6290 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6287, file: !785, line: 27, baseType: !152, size: 32, offset: 32)
!6291 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6287, file: !785, line: 28, baseType: !152, size: 32, offset: 64)
!6292 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6287, file: !785, line: 29, baseType: !152, size: 32, offset: 96)
!6293 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6287, file: !785, line: 30, baseType: !152, size: 32, offset: 128)
!6294 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6287, file: !785, line: 31, baseType: !152, size: 32, offset: 160)
!6295 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6287, file: !785, line: 32, baseType: !152, size: 32, offset: 192)
!6296 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6287, file: !785, line: 33, baseType: !152, size: 32, offset: 224)
!6297 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6287, file: !785, line: 34, baseType: !152, size: 32, offset: 256)
!6298 = !{!6299, !6300, !6301, !6302, !6303, !6304, !6305, !6306, !6307, !6308}
!6299 = !DILocalVariable(name: "msp", arg: 1, scope: !6281, file: !6282, line: 1036, type: !152)
!6300 = !DILocalVariable(name: "psp", arg: 2, scope: !6281, file: !6282, line: 1036, type: !152)
!6301 = !DILocalVariable(name: "exc_return", arg: 3, scope: !6281, file: !6282, line: 1036, type: !152)
!6302 = !DILocalVariable(name: "callee_regs", arg: 4, scope: !6281, file: !6282, line: 1037, type: !6285)
!6303 = !DILocalVariable(name: "reason", scope: !6281, file: !6282, line: 1039, type: !152)
!6304 = !DILocalVariable(name: "fault", scope: !6281, file: !6282, line: 1040, type: !107)
!6305 = !DILocalVariable(name: "recoverable", scope: !6281, file: !6282, line: 1041, type: !145)
!6306 = !DILocalVariable(name: "nested_exc", scope: !6281, file: !6282, line: 1041, type: !145)
!6307 = !DILocalVariable(name: "esf", scope: !6281, file: !6282, line: 1042, type: !2514)
!6308 = !DILocalVariable(name: "esf_copy", scope: !6281, file: !6282, line: 1047, type: !2515)
!6309 = !DILocation(line: 0, scope: !6281)
!6310 = !DILocation(line: 1040, column: 19, scope: !6281)
!6311 = !DILocation(line: 1041, column: 2, scope: !6281)
!6312 = !DILocation(line: 1047, column: 2, scope: !6281)
!6313 = !DILocation(line: 1047, column: 15, scope: !6281)
!6314 = !DILocalVariable(name: "key", arg: 1, scope: !6315, file: !6121, line: 84, type: !32)
!6315 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6121, file: !6121, line: 84, type: !5951, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2486, retainedNodes: !6316)
!6316 = !{!6314}
!6317 = !DILocation(line: 0, scope: !6315, inlinedAt: !6318)
!6318 = distinct !DILocation(line: 1050, column: 2, scope: !6281)
!6319 = !DILocation(line: 95, column: 2, scope: !6315, inlinedAt: !6318)
!6320 = !{i64 2878247}
!6321 = !DILocation(line: 1055, column: 9, scope: !6281)
!6322 = !DILocation(line: 1056, column: 2, scope: !6323)
!6323 = distinct !DILexicalBlock(scope: !6324, file: !6282, line: 1056, column: 2)
!6324 = distinct !DILexicalBlock(scope: !6281, file: !6282, line: 1056, column: 2)
!6325 = !DILocation(line: 1056, column: 2, scope: !6324)
!6326 = !DILocation(line: 1056, column: 2, scope: !6327)
!6327 = distinct !DILexicalBlock(scope: !6323, file: !6282, line: 1056, column: 2)
!6328 = !DILocation(line: 1040, column: 24, scope: !6281)
!6329 = !DILocation(line: 1063, column: 11, scope: !6281)
!6330 = !DILocation(line: 1064, column: 6, scope: !6331)
!6331 = distinct !DILexicalBlock(scope: !6281, file: !6282, line: 1064, column: 6)
!6332 = !{i8 0, i8 2}
!6333 = !DILocation(line: 1064, column: 6, scope: !6281)
!6334 = !DILocation(line: 1070, column: 20, scope: !6281)
!6335 = !DILocation(line: 1070, column: 2, scope: !6281)
!6336 = !DILocation(line: 1089, column: 6, scope: !6337)
!6337 = distinct !DILexicalBlock(scope: !6281, file: !6282, line: 1089, column: 6)
!6338 = !DILocation(line: 0, scope: !6337)
!6339 = !DILocation(line: 1089, column: 6, scope: !6281)
!6340 = !DILocation(line: 1090, column: 28, scope: !6341)
!6341 = distinct !DILexicalBlock(scope: !6342, file: !6282, line: 1090, column: 7)
!6342 = distinct !DILexicalBlock(scope: !6337, file: !6282, line: 1089, column: 18)
!6343 = !DILocation(line: 1090, column: 44, scope: !6341)
!6344 = !DILocation(line: 1090, column: 7, scope: !6342)
!6345 = !DILocation(line: 1091, column: 24, scope: !6346)
!6346 = distinct !DILexicalBlock(scope: !6341, file: !6282, line: 1090, column: 50)
!6347 = !DILocation(line: 1092, column: 3, scope: !6346)
!6348 = !DILocation(line: 1094, column: 23, scope: !6349)
!6349 = distinct !DILexicalBlock(scope: !6337, file: !6282, line: 1093, column: 9)
!6350 = !DILocation(line: 1097, column: 2, scope: !6281)
!6351 = !DILocation(line: 1098, column: 1, scope: !6281)
!6352 = distinct !DISubprogram(name: "get_esf", scope: !6282, file: !6282, line: 894, type: !6353, scopeLine: 896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2486, retainedNodes: !6356)
!6353 = !DISubroutineType(types: !6354)
!6354 = !{!2514, !152, !152, !152, !6355}
!6355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !145, size: 32)
!6356 = !{!6357, !6358, !6359, !6360, !6361, !6362}
!6357 = !DILocalVariable(name: "msp", arg: 1, scope: !6352, file: !6282, line: 894, type: !152)
!6358 = !DILocalVariable(name: "psp", arg: 2, scope: !6352, file: !6282, line: 894, type: !152)
!6359 = !DILocalVariable(name: "exc_return", arg: 3, scope: !6352, file: !6282, line: 894, type: !152)
!6360 = !DILocalVariable(name: "nested_exc", arg: 4, scope: !6352, file: !6282, line: 895, type: !6355)
!6361 = !DILocalVariable(name: "alternative_state_exc", scope: !6352, file: !6282, line: 897, type: !145)
!6362 = !DILocalVariable(name: "ptr_esf", scope: !6352, file: !6282, line: 898, type: !2514)
!6363 = !DILocation(line: 0, scope: !6352)
!6364 = !DILocation(line: 900, column: 14, scope: !6352)
!6365 = !DILocation(line: 902, column: 49, scope: !6366)
!6366 = distinct !DILexicalBlock(scope: !6352, file: !6282, line: 902, column: 6)
!6367 = !DILocation(line: 902, column: 6, scope: !6352)
!6368 = !DILocation(line: 983, column: 44, scope: !6369)
!6369 = distinct !DILexicalBlock(scope: !6352, file: !6282, line: 983, column: 6)
!6370 = !DILocation(line: 985, column: 3, scope: !6371)
!6371 = distinct !DILexicalBlock(scope: !6372, file: !6282, line: 985, column: 3)
!6372 = distinct !DILexicalBlock(scope: !6373, file: !6282, line: 985, column: 3)
!6373 = distinct !DILexicalBlock(scope: !6374, file: !6282, line: 985, column: 3)
!6374 = distinct !DILexicalBlock(scope: !6375, file: !6282, line: 985, column: 3)
!6375 = distinct !DILexicalBlock(scope: !6369, file: !6282, line: 984, column: 47)
!6376 = !DILocation(line: 986, column: 3, scope: !6375)
!6377 = !DILocation(line: 983, column: 18, scope: !6369)
!6378 = !DILocation(line: 991, column: 7, scope: !6379)
!6379 = distinct !DILexicalBlock(scope: !6380, file: !6282, line: 990, column: 30)
!6380 = distinct !DILexicalBlock(scope: !6352, file: !6282, line: 990, column: 6)
!6381 = !DILocation(line: 998, column: 16, scope: !6382)
!6382 = distinct !DILexicalBlock(scope: !6383, file: !6282, line: 995, column: 10)
!6383 = distinct !DILexicalBlock(scope: !6379, file: !6282, line: 991, column: 7)
!6384 = !DILocation(line: 1002, column: 2, scope: !6352)
!6385 = !DILocation(line: 1003, column: 1, scope: !6352)
!6386 = distinct !DISubprogram(name: "fault_handle", scope: !6282, file: !6282, line: 786, type: !6387, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2486, retainedNodes: !6389)
!6387 = !DISubroutineType(types: !6388)
!6388 = !{!152, !2514, !107, !6355}
!6389 = !{!6390, !6391, !6392, !6393}
!6390 = !DILocalVariable(name: "esf", arg: 1, scope: !6386, file: !6282, line: 786, type: !2514)
!6391 = !DILocalVariable(name: "fault", arg: 2, scope: !6386, file: !6282, line: 786, type: !107)
!6392 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6386, file: !6282, line: 786, type: !6355)
!6393 = !DILocalVariable(name: "reason", scope: !6386, file: !6282, line: 788, type: !152)
!6394 = !DILocation(line: 0, scope: !6386)
!6395 = !DILocation(line: 790, column: 15, scope: !6386)
!6396 = !DILocation(line: 792, column: 2, scope: !6386)
!6397 = !DILocation(line: 794, column: 12, scope: !6398)
!6398 = distinct !DILexicalBlock(scope: !6386, file: !6282, line: 792, column: 17)
!6399 = !DILocation(line: 795, column: 3, scope: !6398)
!6400 = !DILocation(line: 800, column: 12, scope: !6398)
!6401 = !DILocation(line: 801, column: 3, scope: !6398)
!6402 = !DILocation(line: 803, column: 12, scope: !6398)
!6403 = !DILocation(line: 804, column: 3, scope: !6398)
!6404 = !DILocation(line: 806, column: 12, scope: !6398)
!6405 = !DILocation(line: 807, column: 3, scope: !6398)
!6406 = !DILocation(line: 814, column: 3, scope: !6398)
!6407 = !DILocation(line: 815, column: 3, scope: !6398)
!6408 = !DILocation(line: 820, column: 3, scope: !6398)
!6409 = !DILocation(line: 821, column: 3, scope: !6398)
!6410 = !DILocation(line: 829, column: 2, scope: !6386)
!6411 = distinct !DISubprogram(name: "hard_fault", scope: !6282, file: !6282, line: 709, type: !6412, scopeLine: 710, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2486, retainedNodes: !6414)
!6412 = !DISubroutineType(types: !6413)
!6413 = !{!152, !2514, !6355}
!6414 = !{!6415, !6416, !6417}
!6415 = !DILocalVariable(name: "esf", arg: 1, scope: !6411, file: !6282, line: 709, type: !2514)
!6416 = !DILocalVariable(name: "recoverable", arg: 2, scope: !6411, file: !6282, line: 709, type: !6355)
!6417 = !DILocalVariable(name: "reason", scope: !6411, file: !6282, line: 711, type: !152)
!6418 = !DILocation(line: 0, scope: !6411)
!6419 = !DILocation(line: 713, column: 2, scope: !6420)
!6420 = distinct !DILexicalBlock(scope: !6421, file: !6282, line: 713, column: 2)
!6421 = distinct !DILexicalBlock(scope: !6422, file: !6282, line: 713, column: 2)
!6422 = distinct !DILexicalBlock(scope: !6423, file: !6282, line: 713, column: 2)
!6423 = distinct !DILexicalBlock(scope: !6411, file: !6282, line: 713, column: 2)
!6424 = !DILocation(line: 732, column: 15, scope: !6411)
!6425 = !DILocation(line: 734, column: 12, scope: !6426)
!6426 = distinct !DILexicalBlock(scope: !6411, file: !6282, line: 734, column: 6)
!6427 = !DILocation(line: 734, column: 17, scope: !6426)
!6428 = !DILocation(line: 734, column: 41, scope: !6426)
!6429 = !DILocation(line: 734, column: 6, scope: !6411)
!6430 = !DILocation(line: 735, column: 3, scope: !6431)
!6431 = distinct !DILexicalBlock(scope: !6432, file: !6282, line: 735, column: 3)
!6432 = distinct !DILexicalBlock(scope: !6433, file: !6282, line: 735, column: 3)
!6433 = distinct !DILexicalBlock(scope: !6434, file: !6282, line: 735, column: 3)
!6434 = distinct !DILexicalBlock(scope: !6435, file: !6282, line: 735, column: 3)
!6435 = distinct !DILexicalBlock(scope: !6426, file: !6282, line: 734, column: 47)
!6436 = !DILocation(line: 736, column: 2, scope: !6435)
!6437 = !DILocation(line: 736, column: 19, scope: !6438)
!6438 = distinct !DILexicalBlock(scope: !6426, file: !6282, line: 736, column: 13)
!6439 = !DILocation(line: 736, column: 49, scope: !6438)
!6440 = !DILocation(line: 736, column: 13, scope: !6426)
!6441 = !DILocation(line: 737, column: 3, scope: !6442)
!6442 = distinct !DILexicalBlock(scope: !6443, file: !6282, line: 737, column: 3)
!6443 = distinct !DILexicalBlock(scope: !6444, file: !6282, line: 737, column: 3)
!6444 = distinct !DILexicalBlock(scope: !6445, file: !6282, line: 737, column: 3)
!6445 = distinct !DILexicalBlock(scope: !6446, file: !6282, line: 737, column: 3)
!6446 = distinct !DILexicalBlock(scope: !6438, file: !6282, line: 736, column: 55)
!6447 = !DILocation(line: 738, column: 2, scope: !6446)
!6448 = !DILocation(line: 738, column: 19, scope: !6449)
!6449 = distinct !DILexicalBlock(scope: !6438, file: !6282, line: 738, column: 13)
!6450 = !DILocation(line: 738, column: 24, scope: !6449)
!6451 = !DILocation(line: 738, column: 47, scope: !6449)
!6452 = !DILocation(line: 738, column: 13, scope: !6438)
!6453 = !DILocation(line: 739, column: 3, scope: !6454)
!6454 = distinct !DILexicalBlock(scope: !6455, file: !6282, line: 739, column: 3)
!6455 = distinct !DILexicalBlock(scope: !6456, file: !6282, line: 739, column: 3)
!6456 = distinct !DILexicalBlock(scope: !6457, file: !6282, line: 739, column: 3)
!6457 = distinct !DILexicalBlock(scope: !6458, file: !6282, line: 739, column: 3)
!6458 = distinct !DILexicalBlock(scope: !6449, file: !6282, line: 738, column: 53)
!6459 = !DILocation(line: 740, column: 7, scope: !6460)
!6460 = distinct !DILexicalBlock(scope: !6458, file: !6282, line: 740, column: 7)
!6461 = !DILocation(line: 740, column: 7, scope: !6458)
!6462 = !DILocation(line: 741, column: 4, scope: !6463)
!6463 = distinct !DILexicalBlock(scope: !6464, file: !6282, line: 741, column: 4)
!6464 = distinct !DILexicalBlock(scope: !6465, file: !6282, line: 741, column: 4)
!6465 = distinct !DILexicalBlock(scope: !6466, file: !6282, line: 741, column: 4)
!6466 = distinct !DILexicalBlock(scope: !6467, file: !6282, line: 741, column: 4)
!6467 = distinct !DILexicalBlock(scope: !6460, file: !6282, line: 740, column: 38)
!6468 = !DILocation(line: 742, column: 24, scope: !6467)
!6469 = !DILocation(line: 743, column: 3, scope: !6467)
!6470 = !DILocation(line: 743, column: 20, scope: !6471)
!6471 = distinct !DILexicalBlock(scope: !6460, file: !6282, line: 743, column: 14)
!6472 = !DILocation(line: 743, column: 25, scope: !6471)
!6473 = !DILocation(line: 743, column: 52, scope: !6471)
!6474 = !DILocation(line: 743, column: 14, scope: !6460)
!6475 = !DILocation(line: 744, column: 13, scope: !6476)
!6476 = distinct !DILexicalBlock(scope: !6471, file: !6282, line: 743, column: 58)
!6477 = !DILocation(line: 745, column: 3, scope: !6476)
!6478 = !DILocation(line: 745, column: 20, scope: !6479)
!6479 = distinct !DILexicalBlock(scope: !6471, file: !6282, line: 745, column: 14)
!6480 = !DILocation(line: 745, column: 25, scope: !6479)
!6481 = !DILocation(line: 745, column: 52, scope: !6479)
!6482 = !DILocation(line: 745, column: 14, scope: !6471)
!6483 = !DILocation(line: 746, column: 13, scope: !6484)
!6484 = distinct !DILexicalBlock(scope: !6479, file: !6282, line: 745, column: 58)
!6485 = !DILocation(line: 747, column: 3, scope: !6484)
!6486 = !DILocation(line: 747, column: 20, scope: !6487)
!6487 = distinct !DILexicalBlock(scope: !6479, file: !6282, line: 747, column: 14)
!6488 = !DILocation(line: 747, column: 52, scope: !6487)
!6489 = !DILocation(line: 747, column: 14, scope: !6479)
!6490 = !DILocation(line: 748, column: 13, scope: !6491)
!6491 = distinct !DILexicalBlock(scope: !6487, file: !6282, line: 747, column: 58)
!6492 = !DILocation(line: 754, column: 4, scope: !6493)
!6493 = distinct !DILexicalBlock(scope: !6494, file: !6282, line: 754, column: 4)
!6494 = distinct !DILexicalBlock(scope: !6495, file: !6282, line: 754, column: 4)
!6495 = distinct !DILexicalBlock(scope: !6496, file: !6282, line: 754, column: 4)
!6496 = distinct !DILexicalBlock(scope: !6487, file: !6282, line: 753, column: 10)
!6497 = !DILocation(line: 758, column: 3, scope: !6498)
!6498 = distinct !DILexicalBlock(scope: !6499, file: !6282, line: 758, column: 3)
!6499 = distinct !DILexicalBlock(scope: !6500, file: !6282, line: 758, column: 3)
!6500 = distinct !DILexicalBlock(scope: !6501, file: !6282, line: 758, column: 3)
!6501 = distinct !DILexicalBlock(scope: !6449, file: !6282, line: 757, column: 9)
!6502 = !DILocation(line: 766, column: 2, scope: !6411)
!6503 = distinct !DISubprogram(name: "mem_manage_fault", scope: !6282, file: !6282, line: 229, type: !6387, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2486, retainedNodes: !6504)
!6504 = !{!6505, !6506, !6507, !6508, !6509, !6510}
!6505 = !DILocalVariable(name: "esf", arg: 1, scope: !6503, file: !6282, line: 229, type: !2514)
!6506 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !6503, file: !6282, line: 229, type: !107)
!6507 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6503, file: !6282, line: 230, type: !6355)
!6508 = !DILocalVariable(name: "reason", scope: !6503, file: !6282, line: 232, type: !152)
!6509 = !DILocalVariable(name: "mmfar", scope: !6503, file: !6282, line: 233, type: !152)
!6510 = !DILocalVariable(name: "temp", scope: !6511, file: !6282, line: 254, type: !152)
!6511 = distinct !DILexicalBlock(scope: !6512, file: !6282, line: 244, column: 48)
!6512 = distinct !DILexicalBlock(scope: !6503, file: !6282, line: 244, column: 6)
!6513 = !DILocation(line: 0, scope: !6503)
!6514 = !DILocation(line: 235, column: 2, scope: !6515)
!6515 = distinct !DILexicalBlock(scope: !6516, file: !6282, line: 235, column: 2)
!6516 = distinct !DILexicalBlock(scope: !6517, file: !6282, line: 235, column: 2)
!6517 = distinct !DILexicalBlock(scope: !6518, file: !6282, line: 235, column: 2)
!6518 = distinct !DILexicalBlock(scope: !6503, file: !6282, line: 235, column: 2)
!6519 = !DILocation(line: 237, column: 12, scope: !6520)
!6520 = distinct !DILexicalBlock(scope: !6503, file: !6282, line: 237, column: 6)
!6521 = !DILocation(line: 237, column: 17, scope: !6520)
!6522 = !DILocation(line: 237, column: 41, scope: !6520)
!6523 = !DILocation(line: 237, column: 6, scope: !6503)
!6524 = !DILocation(line: 238, column: 3, scope: !6525)
!6525 = distinct !DILexicalBlock(scope: !6526, file: !6282, line: 238, column: 3)
!6526 = distinct !DILexicalBlock(scope: !6527, file: !6282, line: 238, column: 3)
!6527 = distinct !DILexicalBlock(scope: !6528, file: !6282, line: 238, column: 3)
!6528 = distinct !DILexicalBlock(scope: !6529, file: !6282, line: 238, column: 3)
!6529 = distinct !DILexicalBlock(scope: !6520, file: !6282, line: 237, column: 47)
!6530 = !DILocation(line: 240, column: 2, scope: !6529)
!6531 = !DILocation(line: 241, column: 12, scope: !6532)
!6532 = distinct !DILexicalBlock(scope: !6503, file: !6282, line: 241, column: 6)
!6533 = !DILocation(line: 241, column: 17, scope: !6532)
!6534 = !DILocation(line: 241, column: 43, scope: !6532)
!6535 = !DILocation(line: 241, column: 6, scope: !6503)
!6536 = !DILocation(line: 242, column: 3, scope: !6537)
!6537 = distinct !DILexicalBlock(scope: !6538, file: !6282, line: 242, column: 3)
!6538 = distinct !DILexicalBlock(scope: !6539, file: !6282, line: 242, column: 3)
!6539 = distinct !DILexicalBlock(scope: !6540, file: !6282, line: 242, column: 3)
!6540 = distinct !DILexicalBlock(scope: !6541, file: !6282, line: 242, column: 3)
!6541 = distinct !DILexicalBlock(scope: !6532, file: !6282, line: 241, column: 49)
!6542 = !DILocation(line: 243, column: 2, scope: !6541)
!6543 = !DILocation(line: 244, column: 12, scope: !6512)
!6544 = !DILocation(line: 244, column: 17, scope: !6512)
!6545 = !DILocation(line: 244, column: 42, scope: !6512)
!6546 = !DILocation(line: 244, column: 6, scope: !6503)
!6547 = !DILocation(line: 245, column: 3, scope: !6548)
!6548 = distinct !DILexicalBlock(scope: !6549, file: !6282, line: 245, column: 3)
!6549 = distinct !DILexicalBlock(scope: !6550, file: !6282, line: 245, column: 3)
!6550 = distinct !DILexicalBlock(scope: !6551, file: !6282, line: 245, column: 3)
!6551 = distinct !DILexicalBlock(scope: !6511, file: !6282, line: 245, column: 3)
!6552 = !DILocation(line: 254, column: 24, scope: !6511)
!6553 = !DILocation(line: 0, scope: !6511)
!6554 = !DILocation(line: 256, column: 13, scope: !6555)
!6555 = distinct !DILexicalBlock(scope: !6511, file: !6282, line: 256, column: 7)
!6556 = !DILocation(line: 256, column: 18, scope: !6555)
!6557 = !DILocation(line: 256, column: 44, scope: !6555)
!6558 = !DILocation(line: 256, column: 7, scope: !6511)
!6559 = !DILocation(line: 258, column: 4, scope: !6560)
!6560 = distinct !DILexicalBlock(scope: !6561, file: !6282, line: 258, column: 4)
!6561 = distinct !DILexicalBlock(scope: !6562, file: !6282, line: 258, column: 4)
!6562 = distinct !DILexicalBlock(scope: !6563, file: !6282, line: 258, column: 4)
!6563 = distinct !DILexicalBlock(scope: !6564, file: !6282, line: 258, column: 4)
!6564 = distinct !DILexicalBlock(scope: !6555, file: !6282, line: 256, column: 50)
!6565 = !DILocation(line: 259, column: 24, scope: !6566)
!6566 = distinct !DILexicalBlock(scope: !6564, file: !6282, line: 259, column: 8)
!6567 = !DILocation(line: 259, column: 8, scope: !6564)
!6568 = !DILocation(line: 261, column: 15, scope: !6569)
!6569 = distinct !DILexicalBlock(scope: !6566, file: !6282, line: 259, column: 30)
!6570 = !DILocation(line: 262, column: 4, scope: !6569)
!6571 = !DILocation(line: 265, column: 12, scope: !6572)
!6572 = distinct !DILexicalBlock(scope: !6503, file: !6282, line: 265, column: 6)
!6573 = !DILocation(line: 265, column: 17, scope: !6572)
!6574 = !DILocation(line: 265, column: 42, scope: !6572)
!6575 = !DILocation(line: 265, column: 6, scope: !6503)
!6576 = !DILocation(line: 266, column: 3, scope: !6577)
!6577 = distinct !DILexicalBlock(scope: !6578, file: !6282, line: 266, column: 3)
!6578 = distinct !DILexicalBlock(scope: !6579, file: !6282, line: 266, column: 3)
!6579 = distinct !DILexicalBlock(scope: !6580, file: !6282, line: 266, column: 3)
!6580 = distinct !DILexicalBlock(scope: !6581, file: !6282, line: 266, column: 3)
!6581 = distinct !DILexicalBlock(scope: !6572, file: !6282, line: 265, column: 48)
!6582 = !DILocation(line: 267, column: 2, scope: !6581)
!6583 = !DILocation(line: 269, column: 12, scope: !6584)
!6584 = distinct !DILexicalBlock(scope: !6503, file: !6282, line: 269, column: 6)
!6585 = !DILocation(line: 269, column: 17, scope: !6584)
!6586 = !DILocation(line: 269, column: 41, scope: !6584)
!6587 = !DILocation(line: 269, column: 6, scope: !6503)
!6588 = !DILocation(line: 270, column: 3, scope: !6589)
!6589 = distinct !DILexicalBlock(scope: !6590, file: !6282, line: 270, column: 3)
!6590 = distinct !DILexicalBlock(scope: !6591, file: !6282, line: 270, column: 3)
!6591 = distinct !DILexicalBlock(scope: !6592, file: !6282, line: 270, column: 3)
!6592 = distinct !DILexicalBlock(scope: !6593, file: !6282, line: 270, column: 3)
!6593 = distinct !DILexicalBlock(scope: !6584, file: !6282, line: 269, column: 47)
!6594 = !DILocation(line: 272, column: 2, scope: !6593)
!6595 = !DILocation(line: 288, column: 12, scope: !6596)
!6596 = distinct !DILexicalBlock(scope: !6503, file: !6282, line: 288, column: 6)
!6597 = !DILocation(line: 288, column: 17, scope: !6596)
!6598 = !DILocation(line: 288, column: 41, scope: !6596)
!6599 = !DILocation(line: 289, column: 9, scope: !6596)
!6600 = !DILocation(line: 289, column: 14, scope: !6596)
!6601 = !DILocation(line: 288, column: 6, scope: !6503)
!6602 = !DILocation(line: 348, column: 2, scope: !6603)
!6603 = distinct !DILexicalBlock(scope: !6604, file: !6282, line: 348, column: 2)
!6604 = distinct !DILexicalBlock(scope: !6605, file: !6282, line: 348, column: 2)
!6605 = distinct !DILexicalBlock(scope: !6596, file: !6282, line: 289, column: 40)
!6606 = !DILocation(line: 348, column: 2, scope: !6604)
!6607 = !DILocation(line: 348, column: 2, scope: !6608)
!6608 = distinct !DILexicalBlock(scope: !6603, file: !6282, line: 348, column: 2)
!6609 = !DILocation(line: 360, column: 12, scope: !6610)
!6610 = distinct !DILexicalBlock(scope: !6503, file: !6282, line: 360, column: 6)
!6611 = !DILocation(line: 360, column: 17, scope: !6610)
!6612 = !DILocation(line: 360, column: 41, scope: !6610)
!6613 = !DILocation(line: 360, column: 6, scope: !6503)
!6614 = !DILocation(line: 361, column: 14, scope: !6615)
!6615 = distinct !DILexicalBlock(scope: !6610, file: !6282, line: 360, column: 47)
!6616 = !DILocation(line: 362, column: 2, scope: !6615)
!6617 = !DILocation(line: 366, column: 12, scope: !6503)
!6618 = !DILocation(line: 369, column: 15, scope: !6503)
!6619 = !DILocation(line: 371, column: 2, scope: !6503)
!6620 = distinct !DISubprogram(name: "bus_fault", scope: !6282, file: !6282, line: 383, type: !6621, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2486, retainedNodes: !6623)
!6621 = !DISubroutineType(types: !6622)
!6622 = !{!107, !2514, !107, !6355}
!6623 = !{!6624, !6625, !6626, !6627, !6628}
!6624 = !DILocalVariable(name: "esf", arg: 1, scope: !6620, file: !6282, line: 383, type: !2514)
!6625 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !6620, file: !6282, line: 383, type: !107)
!6626 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6620, file: !6282, line: 383, type: !6355)
!6627 = !DILocalVariable(name: "reason", scope: !6620, file: !6282, line: 385, type: !152)
!6628 = !DILocalVariable(name: "bfar", scope: !6629, file: !6282, line: 405, type: !152)
!6629 = distinct !DILexicalBlock(scope: !6630, file: !6282, line: 395, column: 42)
!6630 = distinct !DILexicalBlock(scope: !6620, file: !6282, line: 395, column: 6)
!6631 = !DILocation(line: 0, scope: !6620)
!6632 = !DILocation(line: 387, column: 2, scope: !6633)
!6633 = distinct !DILexicalBlock(scope: !6634, file: !6282, line: 387, column: 2)
!6634 = distinct !DILexicalBlock(scope: !6635, file: !6282, line: 387, column: 2)
!6635 = distinct !DILexicalBlock(scope: !6636, file: !6282, line: 387, column: 2)
!6636 = distinct !DILexicalBlock(scope: !6620, file: !6282, line: 387, column: 2)
!6637 = !DILocation(line: 389, column: 11, scope: !6638)
!6638 = distinct !DILexicalBlock(scope: !6620, file: !6282, line: 389, column: 6)
!6639 = !DILocation(line: 389, column: 16, scope: !6638)
!6640 = !DILocation(line: 389, column: 6, scope: !6620)
!6641 = !DILocation(line: 390, column: 3, scope: !6642)
!6642 = distinct !DILexicalBlock(scope: !6643, file: !6282, line: 390, column: 3)
!6643 = distinct !DILexicalBlock(scope: !6644, file: !6282, line: 390, column: 3)
!6644 = distinct !DILexicalBlock(scope: !6645, file: !6282, line: 390, column: 3)
!6645 = distinct !DILexicalBlock(scope: !6646, file: !6282, line: 390, column: 3)
!6646 = distinct !DILexicalBlock(scope: !6638, file: !6282, line: 389, column: 39)
!6647 = !DILocation(line: 391, column: 2, scope: !6646)
!6648 = !DILocation(line: 392, column: 11, scope: !6649)
!6649 = distinct !DILexicalBlock(scope: !6620, file: !6282, line: 392, column: 6)
!6650 = !DILocation(line: 392, column: 16, scope: !6649)
!6651 = !DILocation(line: 392, column: 6, scope: !6620)
!6652 = !DILocation(line: 393, column: 3, scope: !6653)
!6653 = distinct !DILexicalBlock(scope: !6654, file: !6282, line: 393, column: 3)
!6654 = distinct !DILexicalBlock(scope: !6655, file: !6282, line: 393, column: 3)
!6655 = distinct !DILexicalBlock(scope: !6656, file: !6282, line: 393, column: 3)
!6656 = distinct !DILexicalBlock(scope: !6657, file: !6282, line: 393, column: 3)
!6657 = distinct !DILexicalBlock(scope: !6649, file: !6282, line: 392, column: 41)
!6658 = !DILocation(line: 394, column: 2, scope: !6657)
!6659 = !DILocation(line: 395, column: 11, scope: !6630)
!6660 = !DILocation(line: 395, column: 16, scope: !6630)
!6661 = !DILocation(line: 395, column: 6, scope: !6620)
!6662 = !DILocation(line: 396, column: 3, scope: !6663)
!6663 = distinct !DILexicalBlock(scope: !6664, file: !6282, line: 396, column: 3)
!6664 = distinct !DILexicalBlock(scope: !6665, file: !6282, line: 396, column: 3)
!6665 = distinct !DILexicalBlock(scope: !6666, file: !6282, line: 396, column: 3)
!6666 = distinct !DILexicalBlock(scope: !6629, file: !6282, line: 396, column: 3)
!6667 = !DILocation(line: 405, column: 3, scope: !6629)
!6668 = !DILocation(line: 0, scope: !6629)
!6669 = !DILocation(line: 407, column: 13, scope: !6670)
!6670 = distinct !DILexicalBlock(scope: !6629, file: !6282, line: 407, column: 7)
!6671 = !DILocation(line: 407, column: 18, scope: !6670)
!6672 = !DILocation(line: 407, column: 44, scope: !6670)
!6673 = !DILocation(line: 407, column: 7, scope: !6629)
!6674 = !DILocation(line: 408, column: 4, scope: !6675)
!6675 = distinct !DILexicalBlock(scope: !6676, file: !6282, line: 408, column: 4)
!6676 = distinct !DILexicalBlock(scope: !6677, file: !6282, line: 408, column: 4)
!6677 = distinct !DILexicalBlock(scope: !6678, file: !6282, line: 408, column: 4)
!6678 = distinct !DILexicalBlock(scope: !6679, file: !6282, line: 408, column: 4)
!6679 = distinct !DILexicalBlock(scope: !6670, file: !6282, line: 407, column: 50)
!6680 = !DILocation(line: 409, column: 24, scope: !6681)
!6681 = distinct !DILexicalBlock(scope: !6679, file: !6282, line: 409, column: 8)
!6682 = !DILocation(line: 409, column: 8, scope: !6679)
!6683 = !DILocation(line: 411, column: 15, scope: !6684)
!6684 = distinct !DILexicalBlock(scope: !6681, file: !6282, line: 409, column: 30)
!6685 = !DILocation(line: 412, column: 4, scope: !6684)
!6686 = !DILocation(line: 415, column: 11, scope: !6687)
!6687 = distinct !DILexicalBlock(scope: !6620, file: !6282, line: 415, column: 6)
!6688 = !DILocation(line: 415, column: 16, scope: !6687)
!6689 = !DILocation(line: 415, column: 6, scope: !6620)
!6690 = !DILocation(line: 416, column: 3, scope: !6691)
!6691 = distinct !DILexicalBlock(scope: !6692, file: !6282, line: 416, column: 3)
!6692 = distinct !DILexicalBlock(scope: !6693, file: !6282, line: 416, column: 3)
!6693 = distinct !DILexicalBlock(scope: !6694, file: !6282, line: 416, column: 3)
!6694 = distinct !DILexicalBlock(scope: !6695, file: !6282, line: 416, column: 3)
!6695 = distinct !DILexicalBlock(scope: !6687, file: !6282, line: 415, column: 44)
!6696 = !DILocation(line: 417, column: 2, scope: !6695)
!6697 = !DILocation(line: 418, column: 12, scope: !6698)
!6698 = distinct !DILexicalBlock(scope: !6620, file: !6282, line: 418, column: 6)
!6699 = !DILocation(line: 418, column: 17, scope: !6698)
!6700 = !DILocation(line: 418, column: 41, scope: !6698)
!6701 = !DILocation(line: 418, column: 6, scope: !6620)
!6702 = !DILocation(line: 423, column: 18, scope: !6703)
!6703 = distinct !DILexicalBlock(scope: !6698, file: !6282, line: 423, column: 13)
!6704 = !DILocation(line: 423, column: 23, scope: !6703)
!6705 = !DILocation(line: 423, column: 13, scope: !6698)
!6706 = !DILocation(line: 0, scope: !6698)
!6707 = !DILocation(line: 524, column: 12, scope: !6620)
!6708 = !DILocation(line: 526, column: 15, scope: !6620)
!6709 = !DILocation(line: 528, column: 2, scope: !6620)
!6710 = distinct !DISubprogram(name: "usage_fault", scope: !6282, file: !6282, line: 539, type: !6711, scopeLine: 540, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2486, retainedNodes: !6715)
!6711 = !DISubroutineType(types: !6712)
!6712 = !{!152, !6713}
!6713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6714, size: 32)
!6714 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2515)
!6715 = !{!6716, !6717}
!6716 = !DILocalVariable(name: "esf", arg: 1, scope: !6710, file: !6282, line: 539, type: !6713)
!6717 = !DILocalVariable(name: "reason", scope: !6710, file: !6282, line: 541, type: !152)
!6718 = !DILocation(line: 0, scope: !6710)
!6719 = !DILocation(line: 543, column: 2, scope: !6720)
!6720 = distinct !DILexicalBlock(scope: !6721, file: !6282, line: 543, column: 2)
!6721 = distinct !DILexicalBlock(scope: !6722, file: !6282, line: 543, column: 2)
!6722 = distinct !DILexicalBlock(scope: !6723, file: !6282, line: 543, column: 2)
!6723 = distinct !DILexicalBlock(scope: !6710, file: !6282, line: 543, column: 2)
!6724 = !DILocation(line: 546, column: 12, scope: !6725)
!6725 = distinct !DILexicalBlock(scope: !6710, file: !6282, line: 546, column: 6)
!6726 = !DILocation(line: 546, column: 17, scope: !6725)
!6727 = !DILocation(line: 546, column: 43, scope: !6725)
!6728 = !DILocation(line: 546, column: 6, scope: !6710)
!6729 = !DILocation(line: 547, column: 3, scope: !6730)
!6730 = distinct !DILexicalBlock(scope: !6731, file: !6282, line: 547, column: 3)
!6731 = distinct !DILexicalBlock(scope: !6732, file: !6282, line: 547, column: 3)
!6732 = distinct !DILexicalBlock(scope: !6733, file: !6282, line: 547, column: 3)
!6733 = distinct !DILexicalBlock(scope: !6734, file: !6282, line: 547, column: 3)
!6734 = distinct !DILexicalBlock(scope: !6725, file: !6282, line: 546, column: 49)
!6735 = !DILocation(line: 548, column: 2, scope: !6734)
!6736 = !DILocation(line: 549, column: 12, scope: !6737)
!6737 = distinct !DILexicalBlock(scope: !6710, file: !6282, line: 549, column: 6)
!6738 = !DILocation(line: 549, column: 17, scope: !6737)
!6739 = !DILocation(line: 549, column: 43, scope: !6737)
!6740 = !DILocation(line: 549, column: 6, scope: !6710)
!6741 = !DILocation(line: 550, column: 3, scope: !6742)
!6742 = distinct !DILexicalBlock(scope: !6743, file: !6282, line: 550, column: 3)
!6743 = distinct !DILexicalBlock(scope: !6744, file: !6282, line: 550, column: 3)
!6744 = distinct !DILexicalBlock(scope: !6745, file: !6282, line: 550, column: 3)
!6745 = distinct !DILexicalBlock(scope: !6746, file: !6282, line: 550, column: 3)
!6746 = distinct !DILexicalBlock(scope: !6737, file: !6282, line: 549, column: 49)
!6747 = !DILocation(line: 551, column: 2, scope: !6746)
!6748 = !DILocation(line: 567, column: 12, scope: !6749)
!6749 = distinct !DILexicalBlock(scope: !6710, file: !6282, line: 567, column: 6)
!6750 = !DILocation(line: 567, column: 17, scope: !6749)
!6751 = !DILocation(line: 567, column: 38, scope: !6749)
!6752 = !DILocation(line: 567, column: 6, scope: !6710)
!6753 = !DILocation(line: 568, column: 3, scope: !6754)
!6754 = distinct !DILexicalBlock(scope: !6755, file: !6282, line: 568, column: 3)
!6755 = distinct !DILexicalBlock(scope: !6756, file: !6282, line: 568, column: 3)
!6756 = distinct !DILexicalBlock(scope: !6757, file: !6282, line: 568, column: 3)
!6757 = distinct !DILexicalBlock(scope: !6758, file: !6282, line: 568, column: 3)
!6758 = distinct !DILexicalBlock(scope: !6749, file: !6282, line: 567, column: 44)
!6759 = !DILocation(line: 569, column: 2, scope: !6758)
!6760 = !DILocation(line: 570, column: 12, scope: !6761)
!6761 = distinct !DILexicalBlock(scope: !6710, file: !6282, line: 570, column: 6)
!6762 = !DILocation(line: 570, column: 17, scope: !6761)
!6763 = !DILocation(line: 570, column: 39, scope: !6761)
!6764 = !DILocation(line: 570, column: 6, scope: !6710)
!6765 = !DILocation(line: 571, column: 3, scope: !6766)
!6766 = distinct !DILexicalBlock(scope: !6767, file: !6282, line: 571, column: 3)
!6767 = distinct !DILexicalBlock(scope: !6768, file: !6282, line: 571, column: 3)
!6768 = distinct !DILexicalBlock(scope: !6769, file: !6282, line: 571, column: 3)
!6769 = distinct !DILexicalBlock(scope: !6770, file: !6282, line: 571, column: 3)
!6770 = distinct !DILexicalBlock(scope: !6761, file: !6282, line: 570, column: 45)
!6771 = !DILocation(line: 572, column: 2, scope: !6770)
!6772 = !DILocation(line: 573, column: 12, scope: !6773)
!6773 = distinct !DILexicalBlock(scope: !6710, file: !6282, line: 573, column: 6)
!6774 = !DILocation(line: 573, column: 17, scope: !6773)
!6775 = !DILocation(line: 573, column: 42, scope: !6773)
!6776 = !DILocation(line: 573, column: 6, scope: !6710)
!6777 = !DILocation(line: 574, column: 3, scope: !6778)
!6778 = distinct !DILexicalBlock(scope: !6779, file: !6282, line: 574, column: 3)
!6779 = distinct !DILexicalBlock(scope: !6780, file: !6282, line: 574, column: 3)
!6780 = distinct !DILexicalBlock(scope: !6781, file: !6282, line: 574, column: 3)
!6781 = distinct !DILexicalBlock(scope: !6782, file: !6282, line: 574, column: 3)
!6782 = distinct !DILexicalBlock(scope: !6773, file: !6282, line: 573, column: 48)
!6783 = !DILocation(line: 575, column: 2, scope: !6782)
!6784 = !DILocation(line: 576, column: 12, scope: !6785)
!6785 = distinct !DILexicalBlock(scope: !6710, file: !6282, line: 576, column: 6)
!6786 = !DILocation(line: 576, column: 17, scope: !6785)
!6787 = !DILocation(line: 576, column: 44, scope: !6785)
!6788 = !DILocation(line: 576, column: 6, scope: !6710)
!6789 = !DILocation(line: 577, column: 3, scope: !6790)
!6790 = distinct !DILexicalBlock(scope: !6791, file: !6282, line: 577, column: 3)
!6791 = distinct !DILexicalBlock(scope: !6792, file: !6282, line: 577, column: 3)
!6792 = distinct !DILexicalBlock(scope: !6793, file: !6282, line: 577, column: 3)
!6793 = distinct !DILexicalBlock(scope: !6794, file: !6282, line: 577, column: 3)
!6794 = distinct !DILexicalBlock(scope: !6785, file: !6282, line: 576, column: 50)
!6795 = !DILocation(line: 578, column: 2, scope: !6794)
!6796 = !DILocation(line: 581, column: 12, scope: !6710)
!6797 = !DILocation(line: 583, column: 2, scope: !6710)
!6798 = distinct !DISubprogram(name: "debug_monitor", scope: !6282, file: !6282, line: 632, type: !6799, scopeLine: 633, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2486, retainedNodes: !6801)
!6799 = !DISubroutineType(types: !6800)
!6800 = !{null, !2514, !6355}
!6801 = !{!6802, !6803}
!6802 = !DILocalVariable(name: "esf", arg: 1, scope: !6798, file: !6282, line: 632, type: !2514)
!6803 = !DILocalVariable(name: "recoverable", arg: 2, scope: !6798, file: !6282, line: 632, type: !6355)
!6804 = !DILocation(line: 0, scope: !6798)
!6805 = !DILocation(line: 634, column: 15, scope: !6798)
!6806 = !DILocation(line: 636, column: 2, scope: !6807)
!6807 = distinct !DILexicalBlock(scope: !6808, file: !6282, line: 636, column: 2)
!6808 = distinct !DILexicalBlock(scope: !6809, file: !6282, line: 636, column: 2)
!6809 = distinct !DILexicalBlock(scope: !6810, file: !6282, line: 636, column: 2)
!6810 = distinct !DILexicalBlock(scope: !6798, file: !6282, line: 636, column: 2)
!6811 = !DILocation(line: 652, column: 1, scope: !6798)
!6812 = distinct !DISubprogram(name: "reserved_exception", scope: !6282, file: !6282, line: 776, type: !6813, scopeLine: 777, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2486, retainedNodes: !6815)
!6813 = !DISubroutineType(types: !6814)
!6814 = !{null, !6713, !107}
!6815 = !{!6816, !6817}
!6816 = !DILocalVariable(name: "esf", arg: 1, scope: !6812, file: !6282, line: 776, type: !6713)
!6817 = !DILocalVariable(name: "fault", arg: 2, scope: !6812, file: !6282, line: 776, type: !107)
!6818 = !DILocation(line: 0, scope: !6812)
!6819 = !DILocation(line: 780, column: 2, scope: !6820)
!6820 = distinct !DILexicalBlock(scope: !6821, file: !6282, line: 780, column: 2)
!6821 = distinct !DILexicalBlock(scope: !6822, file: !6282, line: 780, column: 2)
!6822 = distinct !DILexicalBlock(scope: !6823, file: !6282, line: 780, column: 2)
!6823 = distinct !DILexicalBlock(scope: !6812, file: !6282, line: 780, column: 2)
!6824 = !DILocation(line: 783, column: 1, scope: !6812)
!6825 = distinct !DISubprogram(name: "z_arm_is_synchronous_svc", scope: !6282, file: !6282, line: 658, type: !6826, scopeLine: 659, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2486, retainedNodes: !6828)
!6826 = !DISubroutineType(types: !6827)
!6827 = !{!145, !2514}
!6828 = !{!6829, !6830, !6831}
!6829 = !DILocalVariable(name: "esf", arg: 1, scope: !6825, file: !6282, line: 658, type: !2514)
!6830 = !DILocalVariable(name: "ret_addr", scope: !6825, file: !6282, line: 660, type: !2557)
!6831 = !DILocalVariable(name: "fault_insn", scope: !6825, file: !6282, line: 686, type: !197)
!6832 = !DILocation(line: 0, scope: !6825)
!6833 = !DILocation(line: 660, column: 46, scope: !6825)
!6834 = !DILocation(line: 660, column: 23, scope: !6825)
!6835 = !DILocation(line: 682, column: 11, scope: !6825)
!6836 = !DILocation(line: 271, column: 3, scope: !6837, inlinedAt: !6838)
!6837 = distinct !DISubprogram(name: "__DSB", scope: !6000, file: !6000, line: 269, type: !2909, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2486, retainedNodes: !1949)
!6838 = distinct !DILocation(line: 683, column: 2, scope: !6825)
!6839 = !{i64 6970202}
!6840 = !DILocation(line: 260, column: 3, scope: !6841, inlinedAt: !6842)
!6841 = distinct !DISubprogram(name: "__ISB", scope: !6000, file: !6000, line: 258, type: !2909, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2486, retainedNodes: !1949)
!6842 = distinct !DILocation(line: 684, column: 2, scope: !6825)
!6843 = !{i64 6969919}
!6844 = !DILocation(line: 686, column: 35, scope: !6825)
!6845 = !DILocation(line: 686, column: 24, scope: !6825)
!6846 = !DILocation(line: 688, column: 11, scope: !6825)
!6847 = !DILocation(line: 271, column: 3, scope: !6837, inlinedAt: !6848)
!6848 = distinct !DILocation(line: 689, column: 2, scope: !6825)
!6849 = !DILocation(line: 260, column: 3, scope: !6841, inlinedAt: !6850)
!6850 = distinct !DILocation(line: 690, column: 2, scope: !6825)
!6851 = !DILocation(line: 693, column: 45, scope: !6852)
!6852 = distinct !DILexicalBlock(scope: !6825, file: !6282, line: 693, column: 6)
!6853 = !DILocation(line: 699, column: 1, scope: !6825)
!6854 = distinct !DISubprogram(name: "z_arm_fault_init", scope: !6282, file: !6282, line: 1107, type: !2909, scopeLine: 1108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2486, retainedNodes: !1949)
!6855 = !DILocation(line: 1111, column: 11, scope: !6854)
!6856 = !DILocation(line: 1136, column: 1, scope: !6854)
!6857 = distinct !DISubprogram(name: "z_arm_interrupt_init", scope: !6858, file: !6858, line: 26, type: !2909, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2558, retainedNodes: !6859)
!6858 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6859 = !{!6860}
!6860 = !DILocalVariable(name: "irq", scope: !6857, file: !6858, line: 28, type: !107)
!6861 = !DILocation(line: 0, scope: !6857)
!6862 = !DILocation(line: 30, column: 2, scope: !6863)
!6863 = distinct !DILexicalBlock(scope: !6857, file: !6858, line: 30, column: 2)
!6864 = !DILocation(line: 31, column: 3, scope: !6865)
!6865 = distinct !DILexicalBlock(scope: !6866, file: !6858, line: 30, column: 39)
!6866 = distinct !DILexicalBlock(scope: !6863, file: !6858, line: 30, column: 2)
!6867 = !DILocation(line: 30, column: 35, scope: !6866)
!6868 = !DILocation(line: 30, column: 13, scope: !6866)
!6869 = distinct !{!6869, !6862, !6870}
!6870 = !DILocation(line: 32, column: 2, scope: !6863)
!6871 = !DILocation(line: 33, column: 1, scope: !6857)
!6872 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !1598, file: !1598, line: 1814, type: !6040, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2558, retainedNodes: !6873)
!6873 = !{!6874, !6875}
!6874 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6872, file: !1598, line: 1814, type: !2342)
!6875 = !DILocalVariable(name: "priority", arg: 2, scope: !6872, file: !1598, line: 1814, type: !152)
!6876 = !DILocation(line: 0, scope: !6872)
!6877 = !DILocation(line: 1816, column: 7, scope: !6872)
!6878 = !DILocation(line: 0, scope: !6879)
!6879 = distinct !DILexicalBlock(scope: !6872, file: !1598, line: 1816, column: 7)
!6880 = !DILocation(line: 1824, column: 1, scope: !6872)
!6881 = distinct !DISubprogram(name: "z_impl_k_thread_abort", scope: !6882, file: !6882, line: 27, type: !6883, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2603, retainedNodes: !6983)
!6882 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6883 = !DISubroutineType(types: !6884)
!6884 = !{null, !6885}
!6885 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !716, line: 347, baseType: !6886)
!6886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6887, size: 32)
!6887 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !716, line: 245, size: 1152, elements: !6888)
!6888 = !{!6889, !6947, !6959, !6960, !6961, !6962, !6963, !6978}
!6889 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !6887, file: !716, line: 247, baseType: !6890, size: 384)
!6890 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !716, line: 57, size: 384, elements: !6891)
!6891 = !{!6892, !6916, !6923, !6924, !6925, !6934, !6935, !6936}
!6892 = !DIDerivedType(tag: DW_TAG_member, scope: !6890, file: !716, line: 60, baseType: !6893, size: 64)
!6893 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6890, file: !716, line: 60, size: 64, elements: !6894)
!6894 = !{!6895, !6910}
!6895 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !6893, file: !716, line: 61, baseType: !6896, size: 64)
!6896 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !726, line: 49, baseType: !6897)
!6897 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !726, line: 37, size: 64, elements: !6898)
!6898 = !{!6899, !6905}
!6899 = !DIDerivedType(tag: DW_TAG_member, scope: !6897, file: !726, line: 38, baseType: !6900, size: 32)
!6900 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6897, file: !726, line: 38, size: 32, elements: !6901)
!6901 = !{!6902, !6904}
!6902 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !6900, file: !726, line: 39, baseType: !6903, size: 32)
!6903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6897, size: 32)
!6904 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6900, file: !726, line: 40, baseType: !6903, size: 32)
!6905 = !DIDerivedType(tag: DW_TAG_member, scope: !6897, file: !726, line: 42, baseType: !6906, size: 32, offset: 32)
!6906 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6897, file: !726, line: 42, size: 32, elements: !6907)
!6907 = !{!6908, !6909}
!6908 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !6906, file: !726, line: 43, baseType: !6903, size: 32)
!6909 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6906, file: !726, line: 44, baseType: !6903, size: 32)
!6910 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !6893, file: !716, line: 62, baseType: !6911, size: 64)
!6911 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !742, line: 49, size: 64, elements: !6912)
!6912 = !{!6913}
!6913 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !6911, file: !742, line: 50, baseType: !6914, size: 64)
!6914 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6915, size: 64, elements: !747)
!6915 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6911, size: 32)
!6916 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !6890, file: !716, line: 68, baseType: !6917, size: 32, offset: 64)
!6917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6918, size: 32)
!6918 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !752, line: 233, baseType: !6919)
!6919 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !752, line: 231, size: 64, elements: !6920)
!6920 = !{!6921}
!6921 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !6919, file: !752, line: 232, baseType: !6922, size: 64)
!6922 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !726, line: 48, baseType: !6897)
!6923 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !6890, file: !716, line: 71, baseType: !195, size: 8, offset: 96)
!6924 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !6890, file: !716, line: 74, baseType: !195, size: 8, offset: 104)
!6925 = !DIDerivedType(tag: DW_TAG_member, scope: !6890, file: !716, line: 90, baseType: !6926, size: 16, offset: 112)
!6926 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6890, file: !716, line: 90, size: 16, elements: !6927)
!6927 = !{!6928, !6933}
!6928 = !DIDerivedType(tag: DW_TAG_member, scope: !6926, file: !716, line: 91, baseType: !6929, size: 16)
!6929 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6926, file: !716, line: 91, size: 16, elements: !6930)
!6930 = !{!6931, !6932}
!6931 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !6929, file: !716, line: 96, baseType: !766, size: 8)
!6932 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !6929, file: !716, line: 97, baseType: !195, size: 8, offset: 8)
!6933 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !6926, file: !716, line: 100, baseType: !197, size: 16)
!6934 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !6890, file: !716, line: 107, baseType: !152, size: 32, offset: 128)
!6935 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !6890, file: !716, line: 127, baseType: !106, size: 32, offset: 160)
!6936 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !6890, file: !716, line: 131, baseType: !6937, size: 192, offset: 192)
!6937 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !752, line: 244, size: 192, elements: !6938)
!6938 = !{!6939, !6940, !6946}
!6939 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !6937, file: !752, line: 245, baseType: !6896, size: 64)
!6940 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !6937, file: !752, line: 246, baseType: !6941, size: 32, offset: 64)
!6941 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !752, line: 242, baseType: !6942)
!6942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6943, size: 32)
!6943 = !DISubroutineType(types: !6944)
!6944 = !{null, !6945}
!6945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6937, size: 32)
!6946 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !6937, file: !752, line: 249, baseType: !694, size: 64, offset: 128)
!6947 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !6887, file: !716, line: 250, baseType: !6948, size: 288, offset: 384)
!6948 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !785, line: 25, size: 288, elements: !6949)
!6949 = !{!6950, !6951, !6952, !6953, !6954, !6955, !6956, !6957, !6958}
!6950 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6948, file: !785, line: 26, baseType: !152, size: 32)
!6951 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6948, file: !785, line: 27, baseType: !152, size: 32, offset: 32)
!6952 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6948, file: !785, line: 28, baseType: !152, size: 32, offset: 64)
!6953 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6948, file: !785, line: 29, baseType: !152, size: 32, offset: 96)
!6954 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6948, file: !785, line: 30, baseType: !152, size: 32, offset: 128)
!6955 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6948, file: !785, line: 31, baseType: !152, size: 32, offset: 160)
!6956 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6948, file: !785, line: 32, baseType: !152, size: 32, offset: 192)
!6957 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6948, file: !785, line: 33, baseType: !152, size: 32, offset: 224)
!6958 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6948, file: !785, line: 34, baseType: !152, size: 32, offset: 256)
!6959 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !6887, file: !716, line: 253, baseType: !106, size: 32, offset: 672)
!6960 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !6887, file: !716, line: 256, baseType: !6918, size: 64, offset: 704)
!6961 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6887, file: !716, line: 279, baseType: !799, size: 256, offset: 768)
!6962 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !6887, file: !716, line: 294, baseType: !107, size: 32, offset: 1024)
!6963 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !6887, file: !716, line: 325, baseType: !6964, size: 32, offset: 1056)
!6964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6965, size: 32)
!6965 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !804, line: 5073, size: 192, elements: !6966)
!6966 = !{!6967, !6973, !6974}
!6967 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6965, file: !804, line: 5074, baseType: !6968, size: 96)
!6968 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !808, line: 56, size: 96, elements: !6969)
!6969 = !{!6970, !6971, !6972}
!6970 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6968, file: !808, line: 57, baseType: !811, size: 32)
!6971 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !6968, file: !808, line: 58, baseType: !106, size: 32, offset: 32)
!6972 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !6968, file: !808, line: 59, baseType: !185, size: 32, offset: 64)
!6973 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !6965, file: !804, line: 5075, baseType: !6918, size: 64, offset: 96)
!6974 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6965, file: !804, line: 5076, baseType: !6975, size: 32, offset: 160)
!6975 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !818, line: 43, size: 32, elements: !6976)
!6976 = !{!6977}
!6977 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !6975, file: !818, line: 52, baseType: !22, size: 32)
!6978 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !6887, file: !716, line: 343, baseType: !6979, size: 64, offset: 1088)
!6979 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !785, line: 60, size: 64, elements: !6980)
!6980 = !{!6981, !6982}
!6981 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !6979, file: !785, line: 63, baseType: !152, size: 32)
!6982 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !6979, file: !785, line: 66, baseType: !152, size: 32, offset: 32)
!6983 = !{!6984}
!6984 = !DILocalVariable(name: "thread", arg: 1, scope: !6881, file: !6882, line: 27, type: !6885)
!6985 = !DILocation(line: 0, scope: !6881)
!6986 = !DILocation(line: 29, column: 6, scope: !6987)
!6987 = distinct !DILexicalBlock(scope: !6881, file: !6882, line: 29, column: 6)
!6988 = !DILocation(line: 29, column: 15, scope: !6987)
!6989 = !DILocation(line: 29, column: 6, scope: !6881)
!6990 = !DILocation(line: 1031, column: 3, scope: !6991, inlinedAt: !6994)
!6991 = distinct !DISubprogram(name: "__get_IPSR", scope: !6000, file: !6000, line: 1027, type: !6087, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2603, retainedNodes: !6992)
!6992 = !{!6993}
!6993 = !DILocalVariable(name: "result", scope: !6991, file: !6000, line: 1029, type: !152)
!6994 = distinct !DILocation(line: 48, column: 10, scope: !6995, inlinedAt: !6999)
!6995 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !6996, file: !6996, line: 46, type: !6997, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2603, retainedNodes: !1949)
!6996 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6997 = !DISubroutineType(types: !6998)
!6998 = !{!145}
!6999 = distinct !DILocation(line: 30, column: 7, scope: !7000)
!7000 = distinct !DILexicalBlock(scope: !7001, file: !6882, line: 30, column: 7)
!7001 = distinct !DILexicalBlock(scope: !6987, file: !6882, line: 29, column: 26)
!7002 = !{i64 6971426}
!7003 = !DILocation(line: 0, scope: !6991, inlinedAt: !6994)
!7004 = !DILocation(line: 48, column: 9, scope: !6995, inlinedAt: !6999)
!7005 = !DILocation(line: 30, column: 7, scope: !7001)
!7006 = !DILocation(line: 42, column: 14, scope: !7007)
!7007 = distinct !DILexicalBlock(scope: !7000, file: !6882, line: 30, column: 25)
!7008 = !DILocation(line: 48, column: 15, scope: !7007)
!7009 = !DILocation(line: 49, column: 3, scope: !7007)
!7010 = !DILocation(line: 52, column: 2, scope: !6881)
!7011 = !DILocation(line: 53, column: 1, scope: !6881)
!7012 = distinct !DISubprogram(name: "strcpy", scope: !7013, file: !7013, line: 20, type: !7014, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !7018)
!7013 = !DIFile(filename: "zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7014 = !DISubroutineType(types: !7015)
!7015 = !{!193, !7016, !7017}
!7016 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !193)
!7017 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !118)
!7018 = !{!7019, !7020, !7021}
!7019 = !DILocalVariable(name: "d", arg: 1, scope: !7012, file: !7013, line: 20, type: !7016)
!7020 = !DILocalVariable(name: "s", arg: 2, scope: !7012, file: !7013, line: 20, type: !7017)
!7021 = !DILocalVariable(name: "dest", scope: !7012, file: !7013, line: 22, type: !193)
!7022 = !DILocation(line: 0, scope: !7012)
!7023 = !DILocation(line: 24, column: 9, scope: !7012)
!7024 = !DILocation(line: 24, column: 12, scope: !7012)
!7025 = !DILocation(line: 24, column: 2, scope: !7012)
!7026 = !DILocation(line: 25, column: 6, scope: !7027)
!7027 = distinct !DILexicalBlock(scope: !7012, file: !7013, line: 24, column: 21)
!7028 = !DILocation(line: 26, column: 4, scope: !7027)
!7029 = !DILocation(line: 27, column: 4, scope: !7027)
!7030 = distinct !{!7030, !7025, !7031}
!7031 = !DILocation(line: 28, column: 2, scope: !7012)
!7032 = !DILocation(line: 30, column: 5, scope: !7012)
!7033 = !DILocation(line: 32, column: 2, scope: !7012)
!7034 = distinct !DISubprogram(name: "strncpy", scope: !7013, file: !7013, line: 42, type: !7035, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !7037)
!7035 = !DISubroutineType(types: !7036)
!7036 = !{!193, !7016, !7017, !185}
!7037 = !{!7038, !7039, !7040, !7041}
!7038 = !DILocalVariable(name: "d", arg: 1, scope: !7034, file: !7013, line: 42, type: !7016)
!7039 = !DILocalVariable(name: "s", arg: 2, scope: !7034, file: !7013, line: 42, type: !7017)
!7040 = !DILocalVariable(name: "n", arg: 3, scope: !7034, file: !7013, line: 42, type: !185)
!7041 = !DILocalVariable(name: "dest", scope: !7034, file: !7013, line: 44, type: !193)
!7042 = !DILocation(line: 0, scope: !7034)
!7043 = !DILocation(line: 46, column: 12, scope: !7034)
!7044 = !DILocation(line: 46, column: 17, scope: !7034)
!7045 = !DILocation(line: 46, column: 20, scope: !7034)
!7046 = !DILocation(line: 46, column: 23, scope: !7034)
!7047 = !DILocation(line: 46, column: 2, scope: !7034)
!7048 = !DILocation(line: 47, column: 6, scope: !7049)
!7049 = distinct !DILexicalBlock(scope: !7034, file: !7013, line: 46, column: 32)
!7050 = !DILocation(line: 48, column: 4, scope: !7049)
!7051 = !DILocation(line: 49, column: 4, scope: !7049)
!7052 = !DILocation(line: 50, column: 4, scope: !7049)
!7053 = distinct !{!7053, !7047, !7054}
!7054 = !DILocation(line: 51, column: 2, scope: !7034)
!7055 = !DILocation(line: 54, column: 6, scope: !7056)
!7056 = distinct !DILexicalBlock(scope: !7034, file: !7013, line: 53, column: 16)
!7057 = !DILocation(line: 55, column: 4, scope: !7056)
!7058 = !DILocation(line: 56, column: 4, scope: !7056)
!7059 = !DILocation(line: 53, column: 11, scope: !7034)
!7060 = !DILocation(line: 53, column: 2, scope: !7034)
!7061 = distinct !{!7061, !7060, !7062}
!7062 = !DILocation(line: 57, column: 2, scope: !7034)
!7063 = !DILocation(line: 59, column: 2, scope: !7034)
!7064 = distinct !DISubprogram(name: "strchr", scope: !7013, file: !7013, line: 69, type: !7065, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !7067)
!7065 = !DISubroutineType(types: !7066)
!7066 = !{!193, !118, !107}
!7067 = !{!7068, !7069, !7070}
!7068 = !DILocalVariable(name: "s", arg: 1, scope: !7064, file: !7013, line: 69, type: !118)
!7069 = !DILocalVariable(name: "c", arg: 2, scope: !7064, file: !7013, line: 69, type: !107)
!7070 = !DILocalVariable(name: "tmp", scope: !7064, file: !7013, line: 71, type: !120)
!7071 = !DILocation(line: 0, scope: !7064)
!7072 = !DILocation(line: 73, column: 2, scope: !7064)
!7073 = !DILocation(line: 73, column: 10, scope: !7064)
!7074 = !DILocation(line: 73, column: 13, scope: !7064)
!7075 = !DILocation(line: 73, column: 21, scope: !7064)
!7076 = !DILocation(line: 74, column: 4, scope: !7077)
!7077 = distinct !DILexicalBlock(scope: !7064, file: !7013, line: 73, column: 38)
!7078 = distinct !{!7078, !7072, !7079}
!7079 = !DILocation(line: 75, column: 2, scope: !7064)
!7080 = !DILocation(line: 77, column: 9, scope: !7064)
!7081 = !DILocation(line: 77, column: 2, scope: !7064)
!7082 = distinct !DISubprogram(name: "strrchr", scope: !7013, file: !7013, line: 87, type: !7065, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !7083)
!7083 = !{!7084, !7085, !7086}
!7084 = !DILocalVariable(name: "s", arg: 1, scope: !7082, file: !7013, line: 87, type: !118)
!7085 = !DILocalVariable(name: "c", arg: 2, scope: !7082, file: !7013, line: 87, type: !107)
!7086 = !DILocalVariable(name: "match", scope: !7082, file: !7013, line: 89, type: !193)
!7087 = !DILocation(line: 0, scope: !7082)
!7088 = !DILocation(line: 91, column: 2, scope: !7082)
!7089 = !DILocation(line: 92, column: 7, scope: !7090)
!7090 = distinct !DILexicalBlock(scope: !7091, file: !7013, line: 92, column: 7)
!7091 = distinct !DILexicalBlock(scope: !7082, file: !7013, line: 91, column: 5)
!7092 = !DILocation(line: 92, column: 10, scope: !7090)
!7093 = !DILocation(line: 92, column: 7, scope: !7091)
!7094 = !DILocation(line: 95, column: 13, scope: !7082)
!7095 = !DILocation(line: 95, column: 2, scope: !7091)
!7096 = distinct !{!7096, !7088, !7097}
!7097 = !DILocation(line: 95, column: 15, scope: !7082)
!7098 = !DILocation(line: 97, column: 2, scope: !7082)
!7099 = distinct !DISubprogram(name: "strlen", scope: !7013, file: !7013, line: 107, type: !7100, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !7102)
!7100 = !DISubroutineType(types: !7101)
!7101 = !{!185, !118}
!7102 = !{!7103, !7104}
!7103 = !DILocalVariable(name: "s", arg: 1, scope: !7099, file: !7013, line: 107, type: !118)
!7104 = !DILocalVariable(name: "n", scope: !7099, file: !7013, line: 109, type: !185)
!7105 = !DILocation(line: 0, scope: !7099)
!7106 = !DILocation(line: 111, column: 9, scope: !7099)
!7107 = !DILocation(line: 111, column: 12, scope: !7099)
!7108 = !DILocation(line: 111, column: 2, scope: !7099)
!7109 = !DILocation(line: 112, column: 4, scope: !7110)
!7110 = distinct !DILexicalBlock(scope: !7099, file: !7013, line: 111, column: 21)
!7111 = !DILocation(line: 113, column: 4, scope: !7110)
!7112 = distinct !{!7112, !7108, !7113}
!7113 = !DILocation(line: 114, column: 2, scope: !7099)
!7114 = !DILocation(line: 116, column: 2, scope: !7099)
!7115 = distinct !DISubprogram(name: "strnlen", scope: !7013, file: !7013, line: 126, type: !7116, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !7118)
!7116 = !DISubroutineType(types: !7117)
!7117 = !{!185, !118, !185}
!7118 = !{!7119, !7120, !7121}
!7119 = !DILocalVariable(name: "s", arg: 1, scope: !7115, file: !7013, line: 126, type: !118)
!7120 = !DILocalVariable(name: "maxlen", arg: 2, scope: !7115, file: !7013, line: 126, type: !185)
!7121 = !DILocalVariable(name: "n", scope: !7115, file: !7013, line: 128, type: !185)
!7122 = !DILocation(line: 0, scope: !7115)
!7123 = !DILocation(line: 130, column: 9, scope: !7115)
!7124 = !DILocation(line: 130, column: 12, scope: !7115)
!7125 = !DILocation(line: 130, column: 20, scope: !7115)
!7126 = !DILocation(line: 130, column: 2, scope: !7115)
!7127 = !DILocation(line: 131, column: 4, scope: !7128)
!7128 = distinct !DILexicalBlock(scope: !7115, file: !7013, line: 130, column: 35)
!7129 = !DILocation(line: 132, column: 4, scope: !7128)
!7130 = distinct !{!7130, !7126, !7131}
!7131 = !DILocation(line: 133, column: 2, scope: !7115)
!7132 = !DILocation(line: 135, column: 2, scope: !7115)
!7133 = distinct !DISubprogram(name: "strcmp", scope: !7013, file: !7013, line: 145, type: !7134, scopeLine: 146, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !7136)
!7134 = !DISubroutineType(types: !7135)
!7135 = !{!107, !118, !118}
!7136 = !{!7137, !7138}
!7137 = !DILocalVariable(name: "s1", arg: 1, scope: !7133, file: !7013, line: 145, type: !118)
!7138 = !DILocalVariable(name: "s2", arg: 2, scope: !7133, file: !7013, line: 145, type: !118)
!7139 = !DILocation(line: 0, scope: !7133)
!7140 = !DILocation(line: 147, column: 10, scope: !7133)
!7141 = !DILocation(line: 147, column: 17, scope: !7133)
!7142 = !DILocation(line: 147, column: 14, scope: !7133)
!7143 = !DILocation(line: 147, column: 22, scope: !7133)
!7144 = !DILocation(line: 148, column: 5, scope: !7145)
!7145 = distinct !DILexicalBlock(scope: !7133, file: !7013, line: 147, column: 40)
!7146 = !DILocation(line: 149, column: 5, scope: !7145)
!7147 = distinct !{!7147, !7148, !7149}
!7148 = !DILocation(line: 147, column: 2, scope: !7133)
!7149 = !DILocation(line: 150, column: 2, scope: !7133)
!7150 = !DILocation(line: 152, column: 9, scope: !7133)
!7151 = !DILocation(line: 152, column: 15, scope: !7133)
!7152 = !DILocation(line: 152, column: 13, scope: !7133)
!7153 = !DILocation(line: 152, column: 2, scope: !7133)
!7154 = distinct !DISubprogram(name: "strncmp", scope: !7013, file: !7013, line: 162, type: !7155, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !7157)
!7155 = !DISubroutineType(types: !7156)
!7156 = !{!107, !118, !118, !185}
!7157 = !{!7158, !7159, !7160}
!7158 = !DILocalVariable(name: "s1", arg: 1, scope: !7154, file: !7013, line: 162, type: !118)
!7159 = !DILocalVariable(name: "s2", arg: 2, scope: !7154, file: !7013, line: 162, type: !118)
!7160 = !DILocalVariable(name: "n", arg: 3, scope: !7154, file: !7013, line: 162, type: !185)
!7161 = !DILocation(line: 0, scope: !7154)
!7162 = !DILocation(line: 164, column: 17, scope: !7154)
!7163 = !DILocation(line: 164, column: 21, scope: !7154)
!7164 = !DILocation(line: 164, column: 28, scope: !7154)
!7165 = !DILocation(line: 164, column: 25, scope: !7154)
!7166 = !DILocation(line: 164, column: 33, scope: !7154)
!7167 = !DILocation(line: 165, column: 5, scope: !7168)
!7168 = distinct !DILexicalBlock(scope: !7154, file: !7013, line: 164, column: 51)
!7169 = !DILocation(line: 166, column: 5, scope: !7168)
!7170 = !DILocation(line: 167, column: 4, scope: !7168)
!7171 = distinct !{!7171, !7172, !7173}
!7172 = !DILocation(line: 164, column: 2, scope: !7154)
!7173 = !DILocation(line: 168, column: 2, scope: !7154)
!7174 = !DILocation(line: 170, column: 25, scope: !7154)
!7175 = !DILocation(line: 170, column: 31, scope: !7154)
!7176 = !DILocation(line: 170, column: 29, scope: !7154)
!7177 = !DILocation(line: 170, column: 9, scope: !7154)
!7178 = !DILocation(line: 170, column: 2, scope: !7154)
!7179 = distinct !DISubprogram(name: "strtok_r", scope: !7013, file: !7013, line: 180, type: !7180, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !7182)
!7180 = !DISubroutineType(types: !7181)
!7181 = !{!193, !193, !118, !192}
!7182 = !{!7183, !7184, !7185, !7186, !7187}
!7183 = !DILocalVariable(name: "str", arg: 1, scope: !7179, file: !7013, line: 180, type: !193)
!7184 = !DILocalVariable(name: "sep", arg: 2, scope: !7179, file: !7013, line: 180, type: !118)
!7185 = !DILocalVariable(name: "state", arg: 3, scope: !7179, file: !7013, line: 180, type: !192)
!7186 = !DILocalVariable(name: "start", scope: !7179, file: !7013, line: 182, type: !193)
!7187 = !DILocalVariable(name: "end", scope: !7179, file: !7013, line: 182, type: !193)
!7188 = !DILocation(line: 0, scope: !7179)
!7189 = !DILocation(line: 184, column: 10, scope: !7179)
!7190 = !DILocation(line: 184, column: 22, scope: !7179)
!7191 = !DILocation(line: 187, column: 9, scope: !7179)
!7192 = !DILocation(line: 187, column: 16, scope: !7179)
!7193 = !DILocation(line: 187, column: 19, scope: !7179)
!7194 = !DILocation(line: 187, column: 2, scope: !7179)
!7195 = !DILocation(line: 188, column: 8, scope: !7196)
!7196 = distinct !DILexicalBlock(scope: !7179, file: !7013, line: 187, column: 40)
!7197 = distinct !{!7197, !7194, !7198}
!7198 = !DILocation(line: 189, column: 2, scope: !7179)
!7199 = !DILocation(line: 198, column: 9, scope: !7179)
!7200 = !DILocation(line: 198, column: 18, scope: !7179)
!7201 = !DILocation(line: 198, column: 17, scope: !7179)
!7202 = !DILocation(line: 198, column: 2, scope: !7179)
!7203 = !DILocation(line: 199, column: 6, scope: !7204)
!7204 = distinct !DILexicalBlock(scope: !7179, file: !7013, line: 198, column: 37)
!7205 = !DILocation(line: 198, column: 14, scope: !7179)
!7206 = distinct !{!7206, !7202, !7207}
!7207 = !DILocation(line: 200, column: 2, scope: !7179)
!7208 = !DILocation(line: 203, column: 8, scope: !7209)
!7209 = distinct !DILexicalBlock(scope: !7210, file: !7013, line: 202, column: 20)
!7210 = distinct !DILexicalBlock(scope: !7179, file: !7013, line: 202, column: 6)
!7211 = !DILocation(line: 204, column: 16, scope: !7209)
!7212 = !DILocation(line: 205, column: 2, scope: !7209)
!7213 = !DILocation(line: 210, column: 1, scope: !7179)
!7214 = distinct !DISubprogram(name: "strcat", scope: !7013, file: !7013, line: 212, type: !7014, scopeLine: 213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !7215)
!7215 = !{!7216, !7217}
!7216 = !DILocalVariable(name: "dest", arg: 1, scope: !7214, file: !7013, line: 212, type: !7016)
!7217 = !DILocalVariable(name: "src", arg: 2, scope: !7214, file: !7013, line: 212, type: !7017)
!7218 = !DILocation(line: 0, scope: !7214)
!7219 = !DILocation(line: 214, column: 16, scope: !7214)
!7220 = !DILocation(line: 214, column: 14, scope: !7214)
!7221 = !DILocation(line: 214, column: 2, scope: !7214)
!7222 = !DILocation(line: 215, column: 2, scope: !7214)
!7223 = distinct !DISubprogram(name: "strncat", scope: !7013, file: !7013, line: 218, type: !7035, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !7224)
!7224 = !{!7225, !7226, !7227, !7228, !7229}
!7225 = !DILocalVariable(name: "dest", arg: 1, scope: !7223, file: !7013, line: 218, type: !7016)
!7226 = !DILocalVariable(name: "src", arg: 2, scope: !7223, file: !7013, line: 218, type: !7017)
!7227 = !DILocalVariable(name: "n", arg: 3, scope: !7223, file: !7013, line: 219, type: !185)
!7228 = !DILocalVariable(name: "orig_dest", scope: !7223, file: !7013, line: 221, type: !193)
!7229 = !DILocalVariable(name: "len", scope: !7223, file: !7013, line: 222, type: !185)
!7230 = !DILocation(line: 0, scope: !7223)
!7231 = !DILocation(line: 222, column: 15, scope: !7223)
!7232 = !DILocation(line: 224, column: 7, scope: !7223)
!7233 = !DILocation(line: 225, column: 14, scope: !7223)
!7234 = !DILocation(line: 225, column: 19, scope: !7223)
!7235 = !DILocation(line: 225, column: 11, scope: !7223)
!7236 = !DILocation(line: 225, column: 23, scope: !7223)
!7237 = !DILocation(line: 225, column: 28, scope: !7223)
!7238 = !DILocation(line: 225, column: 2, scope: !7223)
!7239 = !DILocation(line: 226, column: 17, scope: !7240)
!7240 = distinct !DILexicalBlock(scope: !7223, file: !7013, line: 225, column: 38)
!7241 = !DILocation(line: 226, column: 8, scope: !7240)
!7242 = !DILocation(line: 226, column: 11, scope: !7240)
!7243 = distinct !{!7243, !7238, !7244}
!7244 = !DILocation(line: 227, column: 2, scope: !7223)
!7245 = !DILocation(line: 228, column: 8, scope: !7223)
!7246 = !DILocation(line: 230, column: 2, scope: !7223)
!7247 = distinct !DISubprogram(name: "memcmp", scope: !7013, file: !7013, line: 239, type: !7248, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !7250)
!7248 = !DISubroutineType(types: !7249)
!7249 = !{!107, !13, !13, !185}
!7250 = !{!7251, !7252, !7253, !7254, !7255}
!7251 = !DILocalVariable(name: "m1", arg: 1, scope: !7247, file: !7013, line: 239, type: !13)
!7252 = !DILocalVariable(name: "m2", arg: 2, scope: !7247, file: !7013, line: 239, type: !13)
!7253 = !DILocalVariable(name: "n", arg: 3, scope: !7247, file: !7013, line: 239, type: !185)
!7254 = !DILocalVariable(name: "c1", scope: !7247, file: !7013, line: 241, type: !118)
!7255 = !DILocalVariable(name: "c2", scope: !7247, file: !7013, line: 242, type: !118)
!7256 = !DILocation(line: 0, scope: !7247)
!7257 = !DILocation(line: 244, column: 7, scope: !7258)
!7258 = distinct !DILexicalBlock(scope: !7247, file: !7013, line: 244, column: 6)
!7259 = !DILocation(line: 244, column: 6, scope: !7247)
!7260 = !DILocation(line: 248, column: 10, scope: !7247)
!7261 = !DILocation(line: 248, column: 14, scope: !7247)
!7262 = !DILocation(line: 248, column: 19, scope: !7247)
!7263 = !DILocation(line: 248, column: 2, scope: !7247)
!7264 = !DILocation(line: 248, column: 23, scope: !7247)
!7265 = !DILocation(line: 248, column: 30, scope: !7247)
!7266 = !DILocation(line: 248, column: 27, scope: !7247)
!7267 = !DILocation(line: 249, column: 5, scope: !7268)
!7268 = distinct !DILexicalBlock(scope: !7247, file: !7013, line: 248, column: 36)
!7269 = !DILocation(line: 250, column: 5, scope: !7268)
!7270 = distinct !{!7270, !7263, !7271}
!7271 = !DILocation(line: 251, column: 2, scope: !7247)
!7272 = !DILocation(line: 253, column: 9, scope: !7247)
!7273 = !DILocation(line: 253, column: 15, scope: !7247)
!7274 = !DILocation(line: 253, column: 13, scope: !7247)
!7275 = !DILocation(line: 253, column: 2, scope: !7247)
!7276 = !DILocation(line: 254, column: 1, scope: !7247)
!7277 = distinct !DISubprogram(name: "memmove", scope: !7013, file: !7013, line: 263, type: !7278, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !7280)
!7278 = !DISubroutineType(types: !7279)
!7279 = !{!106, !106, !13, !185}
!7280 = !{!7281, !7282, !7283, !7284, !7285}
!7281 = !DILocalVariable(name: "d", arg: 1, scope: !7277, file: !7013, line: 263, type: !106)
!7282 = !DILocalVariable(name: "s", arg: 2, scope: !7277, file: !7013, line: 263, type: !13)
!7283 = !DILocalVariable(name: "n", arg: 3, scope: !7277, file: !7013, line: 263, type: !185)
!7284 = !DILocalVariable(name: "dest", scope: !7277, file: !7013, line: 265, type: !193)
!7285 = !DILocalVariable(name: "src", scope: !7277, file: !7013, line: 266, type: !118)
!7286 = !DILocation(line: 0, scope: !7277)
!7287 = !DILocation(line: 268, column: 21, scope: !7288)
!7288 = distinct !DILexicalBlock(scope: !7277, file: !7013, line: 268, column: 6)
!7289 = !DILocation(line: 268, column: 28, scope: !7288)
!7290 = !DILocation(line: 268, column: 6, scope: !7277)
!7291 = !DILocation(line: 280, column: 12, scope: !7292)
!7292 = distinct !DILexicalBlock(scope: !7288, file: !7013, line: 278, column: 9)
!7293 = !DILocation(line: 280, column: 3, scope: !7292)
!7294 = !DILocation(line: 275, column: 5, scope: !7295)
!7295 = distinct !DILexicalBlock(scope: !7296, file: !7013, line: 274, column: 17)
!7296 = distinct !DILexicalBlock(scope: !7288, file: !7013, line: 268, column: 33)
!7297 = !DILocation(line: 276, column: 14, scope: !7295)
!7298 = !DILocation(line: 276, column: 4, scope: !7295)
!7299 = !DILocation(line: 276, column: 12, scope: !7295)
!7300 = !DILocation(line: 274, column: 12, scope: !7296)
!7301 = !DILocation(line: 274, column: 3, scope: !7296)
!7302 = distinct !{!7302, !7301, !7303}
!7303 = !DILocation(line: 277, column: 3, scope: !7296)
!7304 = !DILocation(line: 281, column: 12, scope: !7305)
!7305 = distinct !DILexicalBlock(scope: !7292, file: !7013, line: 280, column: 17)
!7306 = !DILocation(line: 281, column: 10, scope: !7305)
!7307 = !DILocation(line: 282, column: 8, scope: !7305)
!7308 = !DILocation(line: 283, column: 7, scope: !7305)
!7309 = !DILocation(line: 284, column: 5, scope: !7305)
!7310 = distinct !{!7310, !7293, !7311}
!7311 = !DILocation(line: 285, column: 3, scope: !7292)
!7312 = !DILocation(line: 288, column: 2, scope: !7277)
!7313 = distinct !DISubprogram(name: "memcpy", scope: !7013, file: !7013, line: 298, type: !7314, scopeLine: 299, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !7318)
!7314 = !DISubroutineType(types: !7315)
!7315 = !{!106, !7316, !7317, !185}
!7316 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !106)
!7317 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !13)
!7318 = !{!7319, !7320, !7321, !7322, !7323}
!7319 = !DILocalVariable(name: "d", arg: 1, scope: !7313, file: !7013, line: 298, type: !7316)
!7320 = !DILocalVariable(name: "s", arg: 2, scope: !7313, file: !7013, line: 298, type: !7317)
!7321 = !DILocalVariable(name: "n", arg: 3, scope: !7313, file: !7013, line: 298, type: !185)
!7322 = !DILocalVariable(name: "d_byte", scope: !7313, file: !7013, line: 302, type: !902)
!7323 = !DILocalVariable(name: "s_byte", scope: !7313, file: !7013, line: 303, type: !2634)
!7324 = !DILocation(line: 0, scope: !7313)
!7325 = !DILocation(line: 337, column: 11, scope: !7313)
!7326 = !DILocation(line: 337, column: 2, scope: !7313)
!7327 = !DILocation(line: 338, column: 25, scope: !7328)
!7328 = distinct !DILexicalBlock(scope: !7313, file: !7013, line: 337, column: 16)
!7329 = !DILocation(line: 338, column: 17, scope: !7328)
!7330 = !DILocation(line: 338, column: 11, scope: !7328)
!7331 = !DILocation(line: 338, column: 15, scope: !7328)
!7332 = !DILocation(line: 339, column: 4, scope: !7328)
!7333 = distinct !{!7333, !7326, !7334}
!7334 = !DILocation(line: 340, column: 2, scope: !7313)
!7335 = !DILocation(line: 342, column: 2, scope: !7313)
!7336 = distinct !DISubprogram(name: "memset", scope: !7013, file: !7013, line: 352, type: !7337, scopeLine: 353, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !7339)
!7337 = !DISubroutineType(types: !7338)
!7338 = !{!106, !106, !107, !185}
!7339 = !{!7340, !7341, !7342, !7343, !7344}
!7340 = !DILocalVariable(name: "buf", arg: 1, scope: !7336, file: !7013, line: 352, type: !106)
!7341 = !DILocalVariable(name: "c", arg: 2, scope: !7336, file: !7013, line: 352, type: !107)
!7342 = !DILocalVariable(name: "n", arg: 3, scope: !7336, file: !7013, line: 352, type: !185)
!7343 = !DILocalVariable(name: "d_byte", scope: !7336, file: !7013, line: 356, type: !902)
!7344 = !DILocalVariable(name: "c_byte", scope: !7336, file: !7013, line: 357, type: !196)
!7345 = !DILocation(line: 0, scope: !7336)
!7346 = !DILocation(line: 357, column: 25, scope: !7336)
!7347 = !DILocation(line: 389, column: 11, scope: !7336)
!7348 = !DILocation(line: 389, column: 2, scope: !7336)
!7349 = !DILocation(line: 390, column: 11, scope: !7350)
!7350 = distinct !DILexicalBlock(scope: !7336, file: !7013, line: 389, column: 16)
!7351 = !DILocation(line: 390, column: 15, scope: !7350)
!7352 = !DILocation(line: 391, column: 4, scope: !7350)
!7353 = distinct !{!7353, !7348, !7354}
!7354 = !DILocation(line: 392, column: 2, scope: !7336)
!7355 = !DILocation(line: 394, column: 2, scope: !7336)
!7356 = distinct !DISubprogram(name: "memchr", scope: !7013, file: !7013, line: 404, type: !7357, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2631, retainedNodes: !7359)
!7357 = !DISubroutineType(types: !7358)
!7358 = !{!106, !13, !107, !185}
!7359 = !{!7360, !7361, !7362, !7363}
!7360 = !DILocalVariable(name: "s", arg: 1, scope: !7356, file: !7013, line: 404, type: !13)
!7361 = !DILocalVariable(name: "c", arg: 2, scope: !7356, file: !7013, line: 404, type: !107)
!7362 = !DILocalVariable(name: "n", arg: 3, scope: !7356, file: !7013, line: 404, type: !185)
!7363 = !DILocalVariable(name: "p", scope: !7364, file: !7013, line: 407, type: !2634)
!7364 = distinct !DILexicalBlock(scope: !7365, file: !7013, line: 406, column: 14)
!7365 = distinct !DILexicalBlock(scope: !7356, file: !7013, line: 406, column: 6)
!7366 = !DILocation(line: 0, scope: !7356)
!7367 = !DILocation(line: 406, column: 8, scope: !7365)
!7368 = !DILocation(line: 406, column: 6, scope: !7356)
!7369 = !DILocation(line: 409, column: 3, scope: !7364)
!7370 = !DILocation(line: 0, scope: !7364)
!7371 = !DILocation(line: 410, column: 8, scope: !7372)
!7372 = distinct !DILexicalBlock(scope: !7373, file: !7013, line: 410, column: 8)
!7373 = distinct !DILexicalBlock(scope: !7364, file: !7013, line: 409, column: 6)
!7374 = !DILocation(line: 410, column: 13, scope: !7372)
!7375 = !DILocation(line: 410, column: 8, scope: !7373)
!7376 = distinct !{!7376, !7369, !7377}
!7377 = !DILocation(line: 414, column: 20, scope: !7364)
!7378 = !DILocation(line: 417, column: 2, scope: !7356)
!7379 = !DILocation(line: 418, column: 1, scope: !7356)
!7380 = distinct !DISubprogram(name: "__stdout_hook_install", scope: !654, file: !654, line: 23, type: !3933, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !647, retainedNodes: !7381)
!7381 = !{!7382}
!7382 = !DILocalVariable(name: "hook", arg: 1, scope: !7380, file: !654, line: 23, type: !213)
!7383 = !DILocation(line: 0, scope: !7380)
!7384 = !DILocation(line: 25, column: 15, scope: !7380)
!7385 = !DILocation(line: 26, column: 1, scope: !7380)
!7386 = distinct !DISubprogram(name: "_stdout_hook_default", scope: !654, file: !654, line: 14, type: !214, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !647, retainedNodes: !7387)
!7387 = !{!7388}
!7388 = !DILocalVariable(name: "c", arg: 1, scope: !7386, file: !654, line: 14, type: !107)
!7389 = !DILocation(line: 0, scope: !7386)
!7390 = !DILocation(line: 18, column: 2, scope: !7386)
!7391 = distinct !DISubprogram(name: "z_impl_zephyr_fputc", scope: !654, file: !654, line: 28, type: !7392, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !647, retainedNodes: !7394)
!7392 = !DISubroutineType(types: !7393)
!7393 = !{!107, !107, !650}
!7394 = !{!7395, !7396}
!7395 = !DILocalVariable(name: "c", arg: 1, scope: !7391, file: !654, line: 28, type: !107)
!7396 = !DILocalVariable(name: "stream", arg: 2, scope: !7391, file: !654, line: 28, type: !650)
!7397 = !DILocation(line: 0, scope: !7391)
!7398 = !DILocation(line: 30, column: 27, scope: !7391)
!7399 = !DILocation(line: 30, column: 50, scope: !7391)
!7400 = !DILocation(line: 30, column: 9, scope: !7391)
!7401 = !DILocation(line: 30, column: 2, scope: !7391)
!7402 = distinct !DISubprogram(name: "fputc", scope: !654, file: !654, line: 41, type: !7392, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !647, retainedNodes: !7403)
!7403 = !{!7404, !7405}
!7404 = !DILocalVariable(name: "c", arg: 1, scope: !7402, file: !654, line: 41, type: !107)
!7405 = !DILocalVariable(name: "stream", arg: 2, scope: !7402, file: !654, line: 41, type: !650)
!7406 = !DILocation(line: 0, scope: !7402)
!7407 = !DILocation(line: 43, column: 9, scope: !7402)
!7408 = !DILocation(line: 43, column: 2, scope: !7402)
!7409 = distinct !DISubprogram(name: "zephyr_fputc", scope: !7410, file: !7410, line: 72, type: !7392, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !647, retainedNodes: !7411)
!7410 = !DIFile(filename: "zephyr/include/generated/syscalls/libc-hooks.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/integration")
!7411 = !{!7412, !7413}
!7412 = !DILocalVariable(name: "c", arg: 1, scope: !7409, file: !7410, line: 72, type: !107)
!7413 = !DILocalVariable(name: "stream", arg: 2, scope: !7409, file: !7410, line: 72, type: !650)
!7414 = !DILocation(line: 0, scope: !7409)
!7415 = !DILocation(line: 81, column: 2, scope: !7416)
!7416 = distinct !DILexicalBlock(scope: !7409, file: !7410, line: 81, column: 2)
!7417 = !{i64 2151107971}
!7418 = !DILocation(line: 82, column: 9, scope: !7409)
!7419 = !DILocation(line: 82, column: 2, scope: !7409)
!7420 = distinct !DISubprogram(name: "fputs", scope: !654, file: !654, line: 46, type: !7421, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !647, retainedNodes: !7424)
!7421 = !DISubroutineType(types: !7422)
!7422 = !{!107, !7017, !7423}
!7423 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !650)
!7424 = !{!7425, !7426, !7427, !7428}
!7425 = !DILocalVariable(name: "s", arg: 1, scope: !7420, file: !654, line: 46, type: !7017)
!7426 = !DILocalVariable(name: "stream", arg: 2, scope: !7420, file: !654, line: 46, type: !7423)
!7427 = !DILocalVariable(name: "len", scope: !7420, file: !654, line: 48, type: !107)
!7428 = !DILocalVariable(name: "ret", scope: !7420, file: !654, line: 49, type: !107)
!7429 = !DILocation(line: 0, scope: !7420)
!7430 = !DILocation(line: 48, column: 12, scope: !7420)
!7431 = !DILocation(line: 51, column: 8, scope: !7420)
!7432 = !DILocation(line: 53, column: 13, scope: !7420)
!7433 = !DILocation(line: 53, column: 9, scope: !7420)
!7434 = !DILocation(line: 53, column: 2, scope: !7420)
!7435 = distinct !DISubprogram(name: "fwrite", scope: !654, file: !654, line: 99, type: !7436, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !647, retainedNodes: !7438)
!7436 = !DISubroutineType(types: !7437)
!7437 = !{!185, !7317, !185, !185, !7423}
!7438 = !{!7439, !7440, !7441, !7442}
!7439 = !DILocalVariable(name: "ptr", arg: 1, scope: !7435, file: !654, line: 99, type: !7317)
!7440 = !DILocalVariable(name: "size", arg: 2, scope: !7435, file: !654, line: 99, type: !185)
!7441 = !DILocalVariable(name: "nitems", arg: 3, scope: !7435, file: !654, line: 99, type: !185)
!7442 = !DILocalVariable(name: "stream", arg: 4, scope: !7435, file: !654, line: 100, type: !7423)
!7443 = !DILocation(line: 0, scope: !7435)
!7444 = !DILocation(line: 102, column: 9, scope: !7435)
!7445 = !DILocation(line: 102, column: 2, scope: !7435)
!7446 = distinct !DISubprogram(name: "zephyr_fwrite", scope: !7410, file: !7410, line: 96, type: !7436, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !647, retainedNodes: !7447)
!7447 = !{!7448, !7449, !7450, !7451}
!7448 = !DILocalVariable(name: "ptr", arg: 1, scope: !7446, file: !7410, line: 96, type: !7317)
!7449 = !DILocalVariable(name: "size", arg: 2, scope: !7446, file: !7410, line: 96, type: !185)
!7450 = !DILocalVariable(name: "nitems", arg: 3, scope: !7446, file: !7410, line: 96, type: !185)
!7451 = !DILocalVariable(name: "stream", arg: 4, scope: !7446, file: !7410, line: 96, type: !7423)
!7452 = !DILocation(line: 0, scope: !7446)
!7453 = !DILocation(line: 107, column: 2, scope: !7454)
!7454 = distinct !DILexicalBlock(scope: !7446, file: !7410, line: 107, column: 2)
!7455 = !{i64 2151108075}
!7456 = !DILocation(line: 108, column: 9, scope: !7446)
!7457 = !DILocation(line: 108, column: 2, scope: !7446)
!7458 = distinct !DISubprogram(name: "z_impl_zephyr_fwrite", scope: !654, file: !654, line: 56, type: !7436, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !647, retainedNodes: !7459)
!7459 = !{!7460, !7461, !7462, !7463, !7464, !7465, !7466, !7467}
!7460 = !DILocalVariable(name: "ptr", arg: 1, scope: !7458, file: !654, line: 56, type: !7317)
!7461 = !DILocalVariable(name: "size", arg: 2, scope: !7458, file: !654, line: 56, type: !185)
!7462 = !DILocalVariable(name: "nitems", arg: 3, scope: !7458, file: !654, line: 57, type: !185)
!7463 = !DILocalVariable(name: "stream", arg: 4, scope: !7458, file: !654, line: 57, type: !7423)
!7464 = !DILocalVariable(name: "i", scope: !7458, file: !654, line: 59, type: !185)
!7465 = !DILocalVariable(name: "j", scope: !7458, file: !654, line: 60, type: !185)
!7466 = !DILocalVariable(name: "p", scope: !7458, file: !654, line: 61, type: !2634)
!7467 = !DILabel(scope: !7458, name: "done", file: !654, line: 82)
!7468 = !DILocation(line: 0, scope: !7458)
!7469 = !DILocation(line: 63, column: 14, scope: !7470)
!7470 = distinct !DILexicalBlock(scope: !7458, file: !654, line: 63, column: 6)
!7471 = !DILocation(line: 63, column: 24, scope: !7470)
!7472 = !DILocation(line: 72, column: 3, scope: !7473)
!7473 = distinct !DILexicalBlock(scope: !7458, file: !654, line: 70, column: 5)
!7474 = !DILocation(line: 0, scope: !7473)
!7475 = !DILocation(line: 73, column: 8, scope: !7476)
!7476 = distinct !DILexicalBlock(scope: !7477, file: !654, line: 73, column: 8)
!7477 = distinct !DILexicalBlock(scope: !7473, file: !654, line: 72, column: 6)
!7478 = !DILocation(line: 73, column: 29, scope: !7476)
!7479 = !DILocation(line: 73, column: 27, scope: !7476)
!7480 = !DILocation(line: 73, column: 21, scope: !7476)
!7481 = !DILocation(line: 73, column: 33, scope: !7476)
!7482 = !DILocation(line: 73, column: 8, scope: !7477)
!7483 = !DILocation(line: 76, column: 5, scope: !7477)
!7484 = !DILocation(line: 77, column: 14, scope: !7473)
!7485 = !DILocation(line: 77, column: 3, scope: !7477)
!7486 = distinct !{!7486, !7472, !7487}
!7487 = !DILocation(line: 77, column: 17, scope: !7473)
!7488 = !DILocation(line: 79, column: 4, scope: !7473)
!7489 = !DILocation(line: 80, column: 13, scope: !7458)
!7490 = !DILocation(line: 80, column: 2, scope: !7473)
!7491 = distinct !{!7491, !7492, !7493}
!7492 = !DILocation(line: 70, column: 2, scope: !7458)
!7493 = !DILocation(line: 80, column: 16, scope: !7458)
!7494 = !DILocation(line: 82, column: 1, scope: !7458)
!7495 = !DILocation(line: 83, column: 17, scope: !7458)
!7496 = !DILocation(line: 83, column: 2, scope: !7458)
!7497 = !DILocation(line: 84, column: 1, scope: !7458)
!7498 = distinct !DISubprogram(name: "puts", scope: !654, file: !654, line: 106, type: !7499, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !647, retainedNodes: !7501)
!7499 = !DISubroutineType(types: !7500)
!7500 = !{!107, !118}
!7501 = !{!7502}
!7502 = !DILocalVariable(name: "s", arg: 1, scope: !7498, file: !654, line: 106, type: !118)
!7503 = !DILocation(line: 0, scope: !7498)
!7504 = !DILocation(line: 108, column: 6, scope: !7505)
!7505 = distinct !DILexicalBlock(scope: !7498, file: !654, line: 108, column: 6)
!7506 = !DILocation(line: 108, column: 23, scope: !7505)
!7507 = !DILocation(line: 108, column: 6, scope: !7498)
!7508 = !DILocation(line: 112, column: 9, scope: !7498)
!7509 = !DILocation(line: 112, column: 29, scope: !7498)
!7510 = !DILocation(line: 112, column: 2, scope: !7498)
!7511 = !DILocation(line: 113, column: 1, scope: !7498)
!7512 = distinct !DISubprogram(name: "end_report", scope: !661, file: !661, line: 67, type: !2909, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !657, retainedNodes: !1949)
!7513 = !DILocation(line: 69, column: 6, scope: !7514)
!7514 = distinct !DILexicalBlock(scope: !7512, file: !661, line: 69, column: 6)
!7515 = !DILocation(line: 0, scope: !7514)
!7516 = !DILocation(line: 74, column: 1, scope: !7512)
!7517 = distinct !DISubprogram(name: "z_impl_z_test_1cpu_start", scope: !661, file: !661, line: 159, type: !2909, scopeLine: 160, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !657, retainedNodes: !1949)
!7518 = !DILocation(line: 183, column: 1, scope: !7517)
!7519 = distinct !DISubprogram(name: "z_impl_z_test_1cpu_stop", scope: !661, file: !661, line: 185, type: !2909, scopeLine: 186, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !657, retainedNodes: !1949)
!7520 = !DILocation(line: 196, column: 1, scope: !7519)
!7521 = distinct !DISubprogram(name: "ztest_skip_failed_assumption", scope: !661, file: !661, line: 295, type: !2909, scopeLine: 296, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !657, retainedNodes: !1949)
!7522 = !DILocation(line: 298, column: 34, scope: !7523)
!7523 = distinct !DILexicalBlock(scope: !7524, file: !661, line: 297, column: 47)
!7524 = distinct !DILexicalBlock(scope: !7521, file: !661, line: 297, column: 6)
!7525 = !DILocation(line: 300, column: 2, scope: !7521)
!7526 = !DILocation(line: 301, column: 1, scope: !7521)
!7527 = distinct !DISubprogram(name: "ztest_test_skip", scope: !661, file: !661, line: 476, type: !2909, scopeLine: 477, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !657, retainedNodes: !1949)
!7528 = !DILocation(line: 478, column: 10, scope: !7527)
!7529 = !DILocation(line: 478, column: 2, scope: !7527)
!7530 = !DILocation(line: 480, column: 15, scope: !7531)
!7531 = distinct !DILexicalBlock(scope: !7527, file: !661, line: 478, column: 17)
!7532 = !DILocation(line: 481, column: 3, scope: !7531)
!7533 = !DILocation(line: 484, column: 15, scope: !7531)
!7534 = !DILocation(line: 485, column: 3, scope: !7531)
!7535 = !DILocation(line: 486, column: 3, scope: !7531)
!7536 = !DILocation(line: 489, column: 9, scope: !7531)
!7537 = !DILocation(line: 488, column: 3, scope: !7531)
!7538 = !DILocation(line: 490, column: 15, scope: !7531)
!7539 = !DILocation(line: 491, column: 3, scope: !7531)
!7540 = !DILocation(line: 493, column: 1, scope: !7527)
!7541 = distinct !DISubprogram(name: "test_finalize", scope: !661, file: !661, line: 432, type: !2909, scopeLine: 433, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !657, retainedNodes: !1949)
!7542 = !DILocation(line: 435, column: 3, scope: !7543)
!7543 = distinct !DILexicalBlock(scope: !7544, file: !661, line: 434, column: 41)
!7544 = distinct !DILexicalBlock(scope: !7541, file: !661, line: 434, column: 6)
!7545 = !DILocation(line: 436, column: 18, scope: !7543)
!7546 = !DILocation(line: 436, column: 3, scope: !7543)
!7547 = !DILocation(line: 438, column: 1, scope: !7541)
!7548 = distinct !DISubprogram(name: "get_friendly_phase_name", scope: !661, file: !661, line: 274, type: !7549, scopeLine: 275, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !657, retainedNodes: !7551)
!7549 = !DISubroutineType(types: !7550)
!7550 = !{!118, !660}
!7551 = !{!7552}
!7552 = !DILocalVariable(name: "phase", arg: 1, scope: !7548, file: !661, line: 274, type: !660)
!7553 = !DILocation(line: 0, scope: !7548)
!7554 = !DILocation(line: 276, column: 2, scope: !7548)
!7555 = !DILocation(line: 0, scope: !7556)
!7556 = distinct !DILexicalBlock(scope: !7548, file: !661, line: 276, column: 17)
!7557 = !DILocation(line: 292, column: 1, scope: !7548)
!7558 = distinct !DISubprogram(name: "k_thread_abort", scope: !4221, file: !4221, line: 188, type: !7559, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !657, retainedNodes: !7563)
!7559 = !DISubroutineType(types: !7560)
!7560 = !{null, !7561}
!7561 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !716, line: 347, baseType: !7562)
!7562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !715, size: 32)
!7563 = !{!7564}
!7564 = !DILocalVariable(name: "thread", arg: 1, scope: !7558, file: !4221, line: 188, type: !7561)
!7565 = !DILocation(line: 0, scope: !7558)
!7566 = !DILocation(line: 197, column: 2, scope: !7567)
!7567 = distinct !DILexicalBlock(scope: !7558, file: !4221, line: 197, column: 2)
!7568 = !{i64 2151069954}
!7569 = !DILocation(line: 198, column: 2, scope: !7558)
!7570 = !DILocation(line: 199, column: 1, scope: !7558)
!7571 = distinct !DISubprogram(name: "k_current_get", scope: !804, file: !804, line: 530, type: !7572, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !657, retainedNodes: !1949)
!7572 = !DISubroutineType(types: !7573)
!7573 = !{!7561}
!7574 = !DILocation(line: 535, column: 9, scope: !7571)
!7575 = !DILocation(line: 535, column: 2, scope: !7571)
!7576 = distinct !DISubprogram(name: "z_current_get", scope: !4221, file: !4221, line: 173, type: !7572, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !657, retainedNodes: !1949)
!7577 = !DILocation(line: 180, column: 2, scope: !7578)
!7578 = distinct !DILexicalBlock(scope: !7576, file: !4221, line: 180, column: 2)
!7579 = !{i64 2151069886}
!7580 = !DILocation(line: 181, column: 9, scope: !7576)
!7581 = !DILocation(line: 181, column: 2, scope: !7576)
!7582 = distinct !DISubprogram(name: "ztest_test_fail", scope: !661, file: !661, line: 440, type: !2909, scopeLine: 441, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !657, retainedNodes: !1949)
!7583 = !DILocation(line: 442, column: 10, scope: !7582)
!7584 = !DILocation(line: 442, column: 2, scope: !7582)
!7585 = !DILocation(line: 444, column: 15, scope: !7586)
!7586 = distinct !DILexicalBlock(scope: !7582, file: !661, line: 442, column: 17)
!7587 = !DILocation(line: 445, column: 3, scope: !7586)
!7588 = !DILocation(line: 448, column: 15, scope: !7586)
!7589 = !DILocation(line: 449, column: 3, scope: !7586)
!7590 = !DILocation(line: 450, column: 3, scope: !7586)
!7591 = !DILocation(line: 453, column: 9, scope: !7586)
!7592 = !DILocation(line: 452, column: 3, scope: !7586)
!7593 = !DILocation(line: 454, column: 15, scope: !7586)
!7594 = !DILocation(line: 455, column: 3, scope: !7586)
!7595 = !DILocation(line: 457, column: 1, scope: !7582)
!7596 = distinct !DISubprogram(name: "ztest_test_pass", scope: !661, file: !661, line: 459, type: !2909, scopeLine: 460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !657, retainedNodes: !1949)
!7597 = !DILocation(line: 461, column: 10, scope: !7596)
!7598 = !DILocation(line: 461, column: 2, scope: !7596)
!7599 = !DILocation(line: 463, column: 15, scope: !7600)
!7600 = distinct !DILexicalBlock(scope: !7596, file: !661, line: 461, column: 17)
!7601 = !DILocation(line: 465, column: 3, scope: !7600)
!7602 = !DILocation(line: 468, column: 9, scope: !7600)
!7603 = !DILocation(line: 467, column: 3, scope: !7600)
!7604 = !DILocation(line: 469, column: 15, scope: !7600)
!7605 = !DILocation(line: 470, column: 7, scope: !7606)
!7606 = distinct !DILexicalBlock(scope: !7600, file: !661, line: 470, column: 7)
!7607 = !DILocation(line: 470, column: 13, scope: !7606)
!7608 = !DILocation(line: 470, column: 7, scope: !7600)
!7609 = !DILocation(line: 0, scope: !7600)
!7610 = !DILocation(line: 474, column: 1, scope: !7596)
!7611 = distinct !DISubprogram(name: "ztest_simple_1cpu_before", scope: !661, file: !661, line: 495, type: !131, scopeLine: 496, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !657, retainedNodes: !7612)
!7612 = !{!7613}
!7613 = !DILocalVariable(name: "data", arg: 1, scope: !7611, file: !661, line: 495, type: !106)
!7614 = !DILocation(line: 0, scope: !7611)
!7615 = !DILocation(line: 498, column: 2, scope: !7611)
!7616 = !DILocation(line: 499, column: 1, scope: !7611)
!7617 = distinct !DISubprogram(name: "z_test_1cpu_start", scope: !7618, file: !7618, line: 24, type: !2909, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !657, retainedNodes: !1949)
!7618 = !DIFile(filename: "zephyr/include/generated/syscalls/ztest_test.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/integration")
!7619 = !DILocation(line: 32, column: 2, scope: !7620)
!7620 = distinct !DILexicalBlock(scope: !7617, file: !7618, line: 32, column: 2)
!7621 = !{i64 2151192161}
!7622 = !DILocation(line: 34, column: 1, scope: !7617)
!7623 = distinct !DISubprogram(name: "ztest_simple_1cpu_after", scope: !661, file: !661, line: 501, type: !131, scopeLine: 502, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !657, retainedNodes: !7624)
!7624 = !{!7625}
!7625 = !DILocalVariable(name: "data", arg: 1, scope: !7623, file: !661, line: 501, type: !106)
!7626 = !DILocation(line: 0, scope: !7623)
!7627 = !DILocation(line: 504, column: 2, scope: !7623)
!7628 = !DILocation(line: 505, column: 1, scope: !7623)
!7629 = distinct !DISubprogram(name: "z_test_1cpu_stop", scope: !7618, file: !7618, line: 47, type: !2909, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !657, retainedNodes: !1949)
!7630 = !DILocation(line: 55, column: 2, scope: !7631)
!7631 = distinct !DILexicalBlock(scope: !7629, file: !7618, line: 55, column: 2)
!7632 = !{i64 2151192229}
!7633 = !DILocation(line: 57, column: 1, scope: !7629)
!7634 = distinct !DISubprogram(name: "z_ztest_get_next_test", scope: !661, file: !661, line: 617, type: !7635, scopeLine: 618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !657, retainedNodes: !7654)
!7635 = !DISubroutineType(types: !7636)
!7636 = !{!7637, !118, !7637}
!7637 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7638, size: 32)
!7638 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_unit_test", file: !114, line: 97, size: 160, elements: !7639)
!7639 = !{!7640, !7641, !7642, !7643, !7644}
!7640 = !DIDerivedType(tag: DW_TAG_member, name: "test_suite_name", scope: !7638, file: !114, line: 98, baseType: !118, size: 32)
!7641 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !7638, file: !114, line: 99, baseType: !118, size: 32, offset: 32)
!7642 = !DIDerivedType(tag: DW_TAG_member, name: "test", scope: !7638, file: !114, line: 100, baseType: !130, size: 32, offset: 64)
!7643 = !DIDerivedType(tag: DW_TAG_member, name: "thread_options", scope: !7638, file: !114, line: 101, baseType: !152, size: 32, offset: 96)
!7644 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !7638, file: !114, line: 104, baseType: !7645, size: 32, offset: 128)
!7645 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7646)
!7646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7647, size: 32)
!7647 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_unit_test_stats", file: !114, line: 123, size: 160, elements: !7648)
!7648 = !{!7649, !7650, !7651, !7652, !7653}
!7649 = !DIDerivedType(tag: DW_TAG_member, name: "run_count", scope: !7647, file: !114, line: 125, baseType: !152, size: 32)
!7650 = !DIDerivedType(tag: DW_TAG_member, name: "skip_count", scope: !7647, file: !114, line: 127, baseType: !152, size: 32, offset: 32)
!7651 = !DIDerivedType(tag: DW_TAG_member, name: "fail_count", scope: !7647, file: !114, line: 129, baseType: !152, size: 32, offset: 64)
!7652 = !DIDerivedType(tag: DW_TAG_member, name: "pass_count", scope: !7647, file: !114, line: 131, baseType: !152, size: 32, offset: 96)
!7653 = !DIDerivedType(tag: DW_TAG_member, name: "duration_worst_ms", scope: !7647, file: !114, line: 133, baseType: !152, size: 32, offset: 128)
!7654 = !{!7655, !7656, !7657}
!7655 = !DILocalVariable(name: "suite", arg: 1, scope: !7634, file: !661, line: 617, type: !118)
!7656 = !DILocalVariable(name: "prev", arg: 2, scope: !7634, file: !661, line: 617, type: !7637)
!7657 = !DILocalVariable(name: "test", scope: !7634, file: !661, line: 619, type: !7637)
!7658 = !DILocation(line: 0, scope: !7634)
!7659 = !DILocation(line: 619, column: 39, scope: !7634)
!7660 = !DILocation(line: 619, column: 33, scope: !7634)
!7661 = !DILocation(line: 621, column: 14, scope: !7662)
!7662 = distinct !DILexicalBlock(scope: !7663, file: !661, line: 621, column: 2)
!7663 = distinct !DILexicalBlock(scope: !7634, file: !661, line: 621, column: 2)
!7664 = !DILocation(line: 621, column: 2, scope: !7663)
!7665 = !DILocation(line: 622, column: 27, scope: !7666)
!7666 = distinct !DILexicalBlock(scope: !7667, file: !661, line: 622, column: 7)
!7667 = distinct !DILexicalBlock(scope: !7662, file: !661, line: 621, column: 51)
!7668 = !DILocation(line: 622, column: 7, scope: !7666)
!7669 = !DILocation(line: 622, column: 44, scope: !7666)
!7670 = !DILocation(line: 622, column: 7, scope: !7667)
!7671 = !DILocation(line: 621, column: 43, scope: !7662)
!7672 = distinct !{!7672, !7664, !7673}
!7673 = !DILocation(line: 625, column: 2, scope: !7663)
!7674 = !DILocation(line: 627, column: 1, scope: !7634)
!7675 = distinct !DISubprogram(name: "z_ztest_run_test_suite", scope: !661, file: !661, line: 764, type: !7499, scopeLine: 765, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !657, retainedNodes: !7676)
!7676 = !{!7677}
!7677 = !DILocalVariable(name: "name", arg: 1, scope: !7675, file: !661, line: 764, type: !118)
!7678 = !DILocation(line: 0, scope: !7675)
!7679 = !DILocation(line: 766, column: 36, scope: !7675)
!7680 = !DILocation(line: 766, column: 9, scope: !7675)
!7681 = !DILocation(line: 766, column: 2, scope: !7675)
!7682 = distinct !DISubprogram(name: "ztest_find_test_suite", scope: !661, file: !661, line: 604, type: !7683, scopeLine: 605, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !657, retainedNodes: !7702)
!7683 = !DISubroutineType(types: !7684)
!7684 = !{!7685, !118}
!7685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7686, size: 32)
!7686 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_suite_node", file: !114, line: 177, size: 224, elements: !7687)
!7687 = !{!7688, !7689, !7690, !7691, !7692, !7693, !7694}
!7688 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !7686, file: !114, line: 179, baseType: !117, size: 32)
!7689 = !DIDerivedType(tag: DW_TAG_member, name: "setup", scope: !7686, file: !114, line: 182, baseType: !122, size: 32, offset: 32)
!7690 = !DIDerivedType(tag: DW_TAG_member, name: "before", scope: !7686, file: !114, line: 185, baseType: !128, size: 32, offset: 64)
!7691 = !DIDerivedType(tag: DW_TAG_member, name: "after", scope: !7686, file: !114, line: 188, baseType: !134, size: 32, offset: 96)
!7692 = !DIDerivedType(tag: DW_TAG_member, name: "teardown", scope: !7686, file: !114, line: 191, baseType: !137, size: 32, offset: 128)
!7693 = !DIDerivedType(tag: DW_TAG_member, name: "predicate", scope: !7686, file: !114, line: 194, baseType: !140, size: 32, offset: 160)
!7694 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !7686, file: !114, line: 197, baseType: !7695, size: 32, offset: 192)
!7695 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7696)
!7696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7697, size: 32)
!7697 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_suite_stats", file: !114, line: 114, size: 96, elements: !7698)
!7698 = !{!7699, !7700, !7701}
!7699 = !DIDerivedType(tag: DW_TAG_member, name: "run_count", scope: !7697, file: !114, line: 116, baseType: !152, size: 32)
!7700 = !DIDerivedType(tag: DW_TAG_member, name: "skip_count", scope: !7697, file: !114, line: 118, baseType: !152, size: 32, offset: 32)
!7701 = !DIDerivedType(tag: DW_TAG_member, name: "fail_count", scope: !7697, file: !114, line: 120, baseType: !152, size: 32, offset: 64)
!7702 = !{!7703, !7704}
!7703 = !DILocalVariable(name: "name", arg: 1, scope: !7682, file: !661, line: 604, type: !118)
!7704 = !DILocalVariable(name: "node", scope: !7682, file: !661, line: 606, type: !7685)
!7705 = !DILocation(line: 0, scope: !7682)
!7706 = !DILocation(line: 608, column: 2, scope: !7707)
!7707 = distinct !DILexicalBlock(scope: !7682, file: !661, line: 608, column: 2)
!7708 = !DILocation(line: 609, column: 26, scope: !7709)
!7709 = distinct !DILexicalBlock(scope: !7710, file: !661, line: 609, column: 7)
!7710 = distinct !DILexicalBlock(scope: !7711, file: !661, line: 608, column: 87)
!7711 = distinct !DILexicalBlock(scope: !7707, file: !661, line: 608, column: 2)
!7712 = !DILocation(line: 609, column: 7, scope: !7709)
!7713 = !DILocation(line: 609, column: 32, scope: !7709)
!7714 = !DILocation(line: 609, column: 7, scope: !7710)
!7715 = !DILocation(line: 608, column: 79, scope: !7711)
!7716 = !DILocation(line: 608, column: 49, scope: !7711)
!7717 = distinct !{!7717, !7706, !7718}
!7718 = !DILocation(line: 612, column: 2, scope: !7707)
!7719 = !DILocation(line: 615, column: 1, scope: !7682)
!7720 = distinct !DISubprogram(name: "z_ztest_run_test_suite_ptr", scope: !661, file: !661, line: 652, type: !7721, scopeLine: 653, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !657, retainedNodes: !7723)
!7721 = !DISubroutineType(types: !7722)
!7722 = !{!107, !7685}
!7723 = !{!7724, !7725, !7726, !7727, !7728, !7729}
!7724 = !DILocalVariable(name: "suite", arg: 1, scope: !7720, file: !661, line: 652, type: !7685)
!7725 = !DILocalVariable(name: "test", scope: !7720, file: !661, line: 654, type: !7637)
!7726 = !DILocalVariable(name: "data", scope: !7720, file: !661, line: 655, type: !106)
!7727 = !DILocalVariable(name: "fail", scope: !7720, file: !661, line: 656, type: !107)
!7728 = !DILocalVariable(name: "tc_result", scope: !7720, file: !661, line: 657, type: !107)
!7729 = !DILocalVariable(name: "i", scope: !7730, file: !661, line: 692, type: !107)
!7730 = distinct !DILexicalBlock(scope: !7720, file: !661, line: 692, column: 2)
!7731 = !DILocation(line: 0, scope: !7720)
!7732 = !DILocation(line: 663, column: 12, scope: !7733)
!7733 = distinct !DILexicalBlock(scope: !7720, file: !661, line: 663, column: 6)
!7734 = !DILocation(line: 663, column: 6, scope: !7720)
!7735 = !DILocation(line: 664, column: 15, scope: !7736)
!7736 = distinct !DILexicalBlock(scope: !7733, file: !661, line: 663, column: 21)
!7737 = !DILocation(line: 665, column: 3, scope: !7736)
!7738 = !DILocation(line: 679, column: 2, scope: !7739)
!7739 = distinct !DILexicalBlock(scope: !7720, file: !661, line: 679, column: 2)
!7740 = !DILocation(line: 680, column: 33, scope: !7720)
!7741 = !DILocation(line: 681, column: 14, scope: !7720)
!7742 = !DILocation(line: 682, column: 8, scope: !7720)
!7743 = !DILocation(line: 688, column: 55, scope: !7744)
!7744 = distinct !DILexicalBlock(scope: !7720, file: !661, line: 688, column: 6)
!7745 = !DILocation(line: 688, column: 61, scope: !7744)
!7746 = !DILocation(line: 688, column: 6, scope: !7720)
!7747 = !DILocation(line: 689, column: 10, scope: !7748)
!7748 = distinct !DILexicalBlock(scope: !7744, file: !661, line: 688, column: 70)
!7749 = !DILocation(line: 690, column: 2, scope: !7748)
!7750 = !DILocation(line: 0, scope: !7730)
!7751 = !DILocation(line: 727, column: 3, scope: !7752)
!7752 = distinct !DILexicalBlock(scope: !7753, file: !661, line: 692, column: 46)
!7753 = distinct !DILexicalBlock(scope: !7730, file: !661, line: 692, column: 2)
!7754 = !DILocation(line: 0, scope: !7752)
!7755 = !DILocation(line: 727, column: 48, scope: !7752)
!7756 = !DILocation(line: 727, column: 19, scope: !7752)
!7757 = !DILocation(line: 727, column: 61, scope: !7752)
!7758 = !DILocation(line: 728, column: 41, scope: !7759)
!7759 = distinct !DILexicalBlock(scope: !7760, file: !661, line: 728, column: 8)
!7760 = distinct !DILexicalBlock(scope: !7752, file: !661, line: 727, column: 71)
!7761 = !DILocation(line: 728, column: 53, scope: !7759)
!7762 = !DILocation(line: 728, column: 8, scope: !7759)
!7763 = !DILocation(line: 728, column: 8, scope: !7760)
!7764 = !DILocation(line: 729, column: 11, scope: !7765)
!7765 = distinct !DILexicalBlock(scope: !7759, file: !661, line: 728, column: 60)
!7766 = !DILocation(line: 729, column: 18, scope: !7765)
!7767 = !DILocation(line: 729, column: 27, scope: !7765)
!7768 = !DILocation(line: 730, column: 17, scope: !7765)
!7769 = !DILocation(line: 731, column: 9, scope: !7765)
!7770 = !DILocation(line: 732, column: 12, scope: !7771)
!7771 = distinct !DILexicalBlock(scope: !7772, file: !661, line: 731, column: 31)
!7772 = distinct !DILexicalBlock(scope: !7765, file: !661, line: 731, column: 9)
!7773 = !DILocation(line: 732, column: 19, scope: !7771)
!7774 = !DILocation(line: 733, column: 5, scope: !7771)
!7775 = !DILocation(line: 734, column: 12, scope: !7776)
!7776 = distinct !DILexicalBlock(scope: !7777, file: !661, line: 733, column: 38)
!7777 = distinct !DILexicalBlock(scope: !7772, file: !661, line: 733, column: 16)
!7778 = !DILocation(line: 734, column: 19, scope: !7776)
!7779 = !DILocation(line: 735, column: 5, scope: !7776)
!7780 = !DILocation(line: 736, column: 12, scope: !7781)
!7781 = distinct !DILexicalBlock(scope: !7782, file: !661, line: 735, column: 38)
!7782 = distinct !DILexicalBlock(scope: !7777, file: !661, line: 735, column: 16)
!7783 = !DILocation(line: 736, column: 19, scope: !7781)
!7784 = !DILocation(line: 737, column: 5, scope: !7781)
!7785 = !DILocation(line: 0, scope: !7772)
!7786 = !DILocation(line: 739, column: 19, scope: !7787)
!7787 = distinct !DILexicalBlock(scope: !7765, file: !661, line: 739, column: 9)
!7788 = !DILocation(line: 739, column: 9, scope: !7765)
!7789 = !DILocation(line: 744, column: 31, scope: !7790)
!7790 = distinct !DILexicalBlock(scope: !7760, file: !661, line: 744, column: 8)
!7791 = !DILocation(line: 744, column: 43, scope: !7790)
!7792 = !DILocation(line: 744, column: 8, scope: !7760)
!7793 = distinct !{!7793, !7751, !7794}
!7794 = !DILocation(line: 747, column: 3, scope: !7752)
!7795 = !DILocation(line: 750, column: 7, scope: !7796)
!7796 = distinct !DILexicalBlock(scope: !7752, file: !661, line: 750, column: 7)
!7797 = !DILocation(line: 750, column: 38, scope: !7796)
!7798 = !DILocation(line: 751, column: 16, scope: !7799)
!7799 = distinct !DILexicalBlock(scope: !7796, file: !661, line: 750, column: 52)
!7800 = !DILocation(line: 752, column: 3, scope: !7799)
!7801 = !DILocation(line: 755, column: 2, scope: !7802)
!7802 = distinct !DILexicalBlock(scope: !7803, file: !661, line: 755, column: 2)
!7803 = distinct !DILexicalBlock(scope: !7720, file: !661, line: 755, column: 2)
!7804 = !DILocation(line: 0, scope: !7802)
!7805 = !DILocation(line: 756, column: 8, scope: !7720)
!7806 = !DILocation(line: 757, column: 13, scope: !7807)
!7807 = distinct !DILexicalBlock(scope: !7720, file: !661, line: 757, column: 6)
!7808 = !DILocation(line: 757, column: 22, scope: !7807)
!7809 = !DILocation(line: 757, column: 6, scope: !7720)
!7810 = !DILocation(line: 758, column: 3, scope: !7811)
!7811 = distinct !DILexicalBlock(scope: !7807, file: !661, line: 757, column: 31)
!7812 = !DILocation(line: 759, column: 2, scope: !7811)
!7813 = !DILocation(line: 762, column: 1, scope: !7720)
!7814 = distinct !DISubprogram(name: "run_test", scope: !661, file: !661, line: 521, type: !7815, scopeLine: 522, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !657, retainedNodes: !7817)
!7815 = !DISubroutineType(types: !7816)
!7816 = !{!107, !7685, !7637, !106}
!7817 = !{!7818, !7819, !7820, !7821}
!7818 = !DILocalVariable(name: "suite", arg: 1, scope: !7814, file: !661, line: 521, type: !7685)
!7819 = !DILocalVariable(name: "test", arg: 2, scope: !7814, file: !661, line: 521, type: !7637)
!7820 = !DILocalVariable(name: "data", arg: 3, scope: !7814, file: !661, line: 521, type: !106)
!7821 = !DILocalVariable(name: "ret", scope: !7814, file: !661, line: 523, type: !107)
!7822 = !DILocation(line: 0, scope: !7814)
!7823 = !DILocation(line: 528, column: 2, scope: !7824)
!7824 = distinct !DILexicalBlock(scope: !7814, file: !661, line: 528, column: 2)
!7825 = !DILocation(line: 530, column: 8, scope: !7814)
!7826 = !DILocation(line: 536, column: 3, scope: !7827)
!7827 = distinct !DILexicalBlock(scope: !7828, file: !661, line: 535, column: 41)
!7828 = distinct !DILexicalBlock(scope: !7814, file: !661, line: 535, column: 6)
!7829 = !DILocation(line: 539, column: 32, scope: !7827)
!7830 = !DILocation(line: 539, column: 39, scope: !7827)
!7831 = !DILocation(line: 541, column: 11, scope: !7827)
!7832 = !DILocation(line: 541, column: 26, scope: !7827)
!7833 = !DILocation(line: 537, column: 3, scope: !7827)
!7834 = !DILocation(line: 543, column: 3, scope: !7827)
!7835 = !DILocation(line: 544, column: 13, scope: !7836)
!7836 = distinct !DILexicalBlock(scope: !7827, file: !661, line: 544, column: 7)
!7837 = !DILocation(line: 544, column: 18, scope: !7836)
!7838 = !DILocation(line: 544, column: 7, scope: !7827)
!7839 = !DILocation(line: 545, column: 4, scope: !7840)
!7840 = distinct !DILexicalBlock(scope: !7836, file: !661, line: 544, column: 27)
!7841 = !DILocation(line: 546, column: 3, scope: !7840)
!7842 = !DILocation(line: 548, column: 7, scope: !7843)
!7843 = distinct !DILexicalBlock(scope: !7827, file: !661, line: 548, column: 7)
!7844 = !DILocation(line: 548, column: 46, scope: !7843)
!7845 = !DILocation(line: 550, column: 4, scope: !7846)
!7846 = distinct !DILexicalBlock(scope: !7843, file: !661, line: 549, column: 47)
!7847 = !DILocation(line: 551, column: 4, scope: !7846)
!7848 = !DILocation(line: 552, column: 3, scope: !7846)
!7849 = !DILocation(line: 564, column: 8, scope: !7814)
!7850 = !DILocation(line: 565, column: 13, scope: !7851)
!7851 = distinct !DILexicalBlock(scope: !7814, file: !661, line: 565, column: 6)
!7852 = !DILocation(line: 565, column: 19, scope: !7851)
!7853 = !DILocation(line: 565, column: 6, scope: !7814)
!7854 = !DILocation(line: 566, column: 3, scope: !7855)
!7855 = distinct !DILexicalBlock(scope: !7851, file: !661, line: 565, column: 28)
!7856 = !DILocation(line: 567, column: 2, scope: !7855)
!7857 = !DILocation(line: 568, column: 2, scope: !7814)
!7858 = !DILocation(line: 570, column: 2, scope: !7814)
!7859 = !DILocation(line: 571, column: 6, scope: !7860)
!7860 = distinct !DILexicalBlock(scope: !7814, file: !661, line: 571, column: 6)
!7861 = !DILocation(line: 571, column: 28, scope: !7860)
!7862 = !DILocation(line: 571, column: 35, scope: !7860)
!7863 = !DILocation(line: 571, column: 20, scope: !7860)
!7864 = !DILocation(line: 571, column: 6, scope: !7814)
!7865 = !DILocation(line: 572, column: 34, scope: !7866)
!7866 = distinct !DILexicalBlock(scope: !7860, file: !661, line: 571, column: 54)
!7867 = !DILocation(line: 573, column: 2, scope: !7866)
!7868 = !DILocation(line: 575, column: 8, scope: !7814)
!7869 = !DILocation(line: 583, column: 6, scope: !7870)
!7870 = distinct !DILexicalBlock(scope: !7814, file: !661, line: 583, column: 6)
!7871 = !DILocation(line: 583, column: 39, scope: !7870)
!7872 = !DILocation(line: 585, column: 46, scope: !7873)
!7873 = distinct !DILexicalBlock(scope: !7870, file: !661, line: 585, column: 13)
!7874 = !DILocation(line: 590, column: 10, scope: !7875)
!7875 = distinct !DILexicalBlock(scope: !7876, file: !661, line: 589, column: 54)
!7876 = distinct !DILexicalBlock(scope: !7814, file: !661, line: 589, column: 6)
!7877 = !DILocation(line: 593, column: 8, scope: !7814)
!7878 = !DILocation(line: 594, column: 2, scope: !7879)
!7879 = distinct !DILexicalBlock(scope: !7814, file: !661, line: 594, column: 2)
!7880 = !DILocation(line: 595, column: 10, scope: !7881)
!7881 = distinct !DILexicalBlock(scope: !7814, file: !661, line: 595, column: 6)
!7882 = !DILocation(line: 595, column: 21, scope: !7881)
!7883 = !DILocation(line: 595, column: 24, scope: !7881)
!7884 = !DILocation(line: 595, column: 6, scope: !7814)
!7885 = !DILocation(line: 596, column: 15, scope: !7886)
!7886 = distinct !DILexicalBlock(scope: !7881, file: !661, line: 595, column: 56)
!7887 = !DILocation(line: 597, column: 2, scope: !7886)
!7888 = !DILocation(line: 599, column: 2, scope: !7814)
!7889 = distinct !DISubprogram(name: "get_start_time_cyc", scope: !828, file: !828, line: 98, type: !2909, scopeLine: 99, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !657, retainedNodes: !1949)
!7890 = !DILocation(line: 100, column: 18, scope: !7889)
!7891 = !DILocation(line: 100, column: 16, scope: !7889)
!7892 = !DILocation(line: 101, column: 1, scope: !7889)
!7893 = distinct !DISubprogram(name: "k_thread_create", scope: !4221, file: !4221, line: 24, type: !7894, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !657, retainedNodes: !7902)
!7894 = !DISubroutineType(types: !7895)
!7895 = !{!7561, !7562, !7896, !185, !687, !106, !106, !106, !107, !152, !7898}
!7896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7897, size: 32)
!7897 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !688, line: 44, baseType: !705)
!7898 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !693, line: 67, baseType: !7899)
!7899 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !693, line: 65, size: 64, elements: !7900)
!7900 = !{!7901}
!7901 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !7899, file: !693, line: 66, baseType: !692, size: 64)
!7902 = !{!7903, !7904, !7905, !7906, !7907, !7908, !7909, !7910, !7911, !7912}
!7903 = !DILocalVariable(name: "new_thread", arg: 1, scope: !7893, file: !4221, line: 24, type: !7562)
!7904 = !DILocalVariable(name: "stack", arg: 2, scope: !7893, file: !4221, line: 24, type: !7896)
!7905 = !DILocalVariable(name: "stack_size", arg: 3, scope: !7893, file: !4221, line: 24, type: !185)
!7906 = !DILocalVariable(name: "entry", arg: 4, scope: !7893, file: !4221, line: 24, type: !687)
!7907 = !DILocalVariable(name: "p1", arg: 5, scope: !7893, file: !4221, line: 24, type: !106)
!7908 = !DILocalVariable(name: "p2", arg: 6, scope: !7893, file: !4221, line: 24, type: !106)
!7909 = !DILocalVariable(name: "p3", arg: 7, scope: !7893, file: !4221, line: 24, type: !106)
!7910 = !DILocalVariable(name: "prio", arg: 8, scope: !7893, file: !4221, line: 24, type: !107)
!7911 = !DILocalVariable(name: "options", arg: 9, scope: !7893, file: !4221, line: 24, type: !152)
!7912 = !DILocalVariable(name: "delay", arg: 10, scope: !7893, file: !4221, line: 24, type: !7898)
!7913 = !DILocation(line: 0, scope: !7893)
!7914 = !DILocation(line: 49, column: 2, scope: !7915)
!7915 = distinct !DILexicalBlock(scope: !7893, file: !4221, line: 49, column: 2)
!7916 = !{i64 2151069342}
!7917 = !DILocation(line: 50, column: 9, scope: !7893)
!7918 = !DILocation(line: 50, column: 2, scope: !7893)
!7919 = distinct !DISubprogram(name: "k_object_access_grant", scope: !7920, file: !7920, line: 24, type: !7921, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !657, retainedNodes: !7923)
!7920 = !DIFile(filename: "zephyr/include/generated/syscalls/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/integration")
!7921 = !DISubroutineType(types: !7922)
!7922 = !{null, !13, !7562}
!7923 = !{!7924, !7925}
!7924 = !DILocalVariable(name: "object", arg: 1, scope: !7919, file: !7920, line: 24, type: !13)
!7925 = !DILocalVariable(name: "thread", arg: 2, scope: !7919, file: !7920, line: 24, type: !7562)
!7926 = !DILocation(line: 0, scope: !7919)
!7927 = !DILocation(line: 34, column: 2, scope: !7928)
!7928 = distinct !DILexicalBlock(scope: !7919, file: !7920, line: 34, column: 2)
!7929 = !{i64 2150585762}
!7930 = !DILocation(line: 36, column: 1, scope: !7919)
!7931 = distinct !DISubprogram(name: "k_thread_name_set", scope: !4221, file: !4221, line: 391, type: !7932, scopeLine: 392, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !657, retainedNodes: !7934)
!7932 = !DISubroutineType(types: !7933)
!7933 = !{!107, !7561, !118}
!7934 = !{!7935, !7936}
!7935 = !DILocalVariable(name: "thread", arg: 1, scope: !7931, file: !4221, line: 391, type: !7561)
!7936 = !DILocalVariable(name: "str", arg: 2, scope: !7931, file: !4221, line: 391, type: !118)
!7937 = !DILocation(line: 0, scope: !7931)
!7938 = !DILocation(line: 400, column: 2, scope: !7939)
!7939 = distinct !DILexicalBlock(scope: !7931, file: !4221, line: 400, column: 2)
!7940 = !{i64 2151070770}
!7941 = !DILocation(line: 401, column: 9, scope: !7931)
!7942 = !DILocation(line: 401, column: 2, scope: !7931)
!7943 = distinct !DISubprogram(name: "k_thread_start", scope: !4221, file: !4221, line: 205, type: !7559, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !657, retainedNodes: !7944)
!7944 = !{!7945}
!7945 = !DILocalVariable(name: "thread", arg: 1, scope: !7943, file: !4221, line: 205, type: !7561)
!7946 = !DILocation(line: 0, scope: !7943)
!7947 = !DILocation(line: 214, column: 2, scope: !7948)
!7948 = distinct !DILexicalBlock(scope: !7943, file: !4221, line: 214, column: 2)
!7949 = !{i64 2151070022}
!7950 = !DILocation(line: 215, column: 2, scope: !7943)
!7951 = !DILocation(line: 216, column: 1, scope: !7943)
!7952 = distinct !DISubprogram(name: "k_thread_join", scope: !4221, file: !4221, line: 74, type: !7953, scopeLine: 75, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !657, retainedNodes: !7955)
!7953 = !DISubroutineType(types: !7954)
!7954 = !{!107, !7562, !7898}
!7955 = !{!7956, !7957}
!7956 = !DILocalVariable(name: "thread", arg: 1, scope: !7952, file: !4221, line: 74, type: !7562)
!7957 = !DILocalVariable(name: "timeout", arg: 2, scope: !7952, file: !4221, line: 74, type: !7898)
!7958 = !DILocation(line: 0, scope: !7952)
!7959 = !DILocation(line: 83, column: 2, scope: !7960)
!7960 = distinct !DILexicalBlock(scope: !7952, file: !4221, line: 83, column: 2)
!7961 = !{i64 2151069478}
!7962 = !DILocation(line: 84, column: 9, scope: !7952)
!7963 = !DILocation(line: 84, column: 2, scope: !7952)
!7964 = distinct !DISubprogram(name: "run_test_rules", scope: !661, file: !661, line: 207, type: !7965, scopeLine: 208, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !657, retainedNodes: !7967)
!7965 = !DISubroutineType(types: !7966)
!7966 = !{null, !145, !7637, !106}
!7967 = !{!7968, !7969, !7970, !7971}
!7968 = !DILocalVariable(name: "is_before", arg: 1, scope: !7964, file: !661, line: 207, type: !145)
!7969 = !DILocalVariable(name: "test", arg: 2, scope: !7964, file: !661, line: 207, type: !7637)
!7970 = !DILocalVariable(name: "data", arg: 3, scope: !7964, file: !661, line: 207, type: !106)
!7971 = !DILocalVariable(name: "rule", scope: !7972, file: !661, line: 209, type: !7973)
!7972 = distinct !DILexicalBlock(scope: !7964, file: !661, line: 209, column: 2)
!7973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7974, size: 32)
!7974 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_test_rule", file: !114, line: 437, size: 64, elements: !7975)
!7975 = !{!7976, !7983}
!7976 = !DIDerivedType(tag: DW_TAG_member, name: "before_each", scope: !7974, file: !114, line: 438, baseType: !7977, size: 32)
!7977 = !DIDerivedType(tag: DW_TAG_typedef, name: "ztest_rule_cb", file: !114, line: 434, baseType: !7978)
!7978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7979, size: 32)
!7979 = !DISubroutineType(types: !7980)
!7980 = !{null, !7981, !106}
!7981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7982, size: 32)
!7982 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7638)
!7983 = !DIDerivedType(tag: DW_TAG_member, name: "after_each", scope: !7974, file: !114, line: 439, baseType: !7977, size: 32, offset: 32)
!7984 = !DILocation(line: 0, scope: !7964)
!7985 = !DILocation(line: 0, scope: !7972)
!7986 = !DILocation(line: 209, column: 2, scope: !7972)
!7987 = !DILocation(line: 217, column: 1, scope: !7964)
!7988 = !DILocation(line: 211, column: 17, scope: !7989)
!7989 = distinct !DILexicalBlock(scope: !7990, file: !661, line: 211, column: 7)
!7990 = distinct !DILexicalBlock(scope: !7991, file: !661, line: 210, column: 49)
!7991 = distinct !DILexicalBlock(scope: !7972, file: !661, line: 209, column: 2)
!7992 = !DILocation(line: 211, column: 26, scope: !7989)
!7993 = !DILocation(line: 211, column: 20, scope: !7989)
!7994 = !DILocation(line: 211, column: 7, scope: !7990)
!7995 = !DILocation(line: 213, column: 34, scope: !7996)
!7996 = distinct !DILexicalBlock(scope: !7989, file: !661, line: 213, column: 14)
!7997 = !DILocation(line: 213, column: 28, scope: !7996)
!7998 = !DILocation(line: 213, column: 14, scope: !7989)
!7999 = !DILocation(line: 0, scope: !7989)
!8000 = !DILocation(line: 210, column: 41, scope: !7991)
!8001 = !DILocation(line: 210, column: 12, scope: !7991)
!8002 = distinct !{!8002, !7986, !8003}
!8003 = !DILocation(line: 216, column: 2, scope: !7972)
!8004 = distinct !DISubprogram(name: "get_test_duration_ms", scope: !828, file: !828, line: 103, type: !2909, scopeLine: 104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !657, retainedNodes: !8005)
!8005 = !{!8006}
!8006 = !DILocalVariable(name: "spend_cycle", scope: !8004, file: !828, line: 105, type: !152)
!8007 = !DILocation(line: 105, column: 25, scope: !8004)
!8008 = !DILocation(line: 105, column: 44, scope: !8004)
!8009 = !DILocation(line: 105, column: 42, scope: !8004)
!8010 = !DILocation(line: 0, scope: !8004)
!8011 = !DILocation(line: 107, column: 18, scope: !8004)
!8012 = !DILocation(line: 107, column: 16, scope: !8004)
!8013 = !DILocation(line: 108, column: 1, scope: !8004)
!8014 = distinct !DISubprogram(name: "cleanup_test", scope: !661, file: !661, line: 76, type: !8015, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !657, retainedNodes: !8017)
!8015 = !DISubroutineType(types: !8016)
!8016 = !{!107, !7637}
!8017 = !{!8018, !8019, !8020}
!8018 = !DILocalVariable(name: "test", arg: 1, scope: !8014, file: !661, line: 76, type: !7637)
!8019 = !DILocalVariable(name: "ret", scope: !8014, file: !661, line: 78, type: !107)
!8020 = !DILocalVariable(name: "mock_status", scope: !8014, file: !661, line: 79, type: !107)
!8021 = !DILocation(line: 0, scope: !8014)
!8022 = !DILocation(line: 89, column: 3, scope: !8023)
!8023 = distinct !DILexicalBlock(scope: !8024, file: !661, line: 88, column: 41)
!8024 = distinct !DILexicalBlock(scope: !8014, file: !661, line: 88, column: 6)
!8025 = !DILocation(line: 103, column: 2, scope: !8014)
!8026 = distinct !DISubprogram(name: "get_final_test_result", scope: !661, file: !661, line: 236, type: !8027, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !657, retainedNodes: !8029)
!8027 = !DISubroutineType(types: !8028)
!8028 = !{!107, !7981, !107}
!8029 = !{!8030, !8031, !8032, !8033}
!8030 = !DILocalVariable(name: "test", arg: 1, scope: !8026, file: !661, line: 236, type: !7981)
!8031 = !DILocalVariable(name: "ret", arg: 2, scope: !8026, file: !661, line: 236, type: !107)
!8032 = !DILocalVariable(name: "expected_result", scope: !8026, file: !661, line: 238, type: !682)
!8033 = !DILocalVariable(name: "expectation", scope: !8034, file: !661, line: 240, type: !8035)
!8034 = distinct !DILexicalBlock(scope: !8026, file: !661, line: 240, column: 2)
!8035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8036, size: 32)
!8036 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_expected_result_entry", file: !114, line: 47, size: 96, elements: !8037)
!8037 = !{!8038, !8039, !8040}
!8038 = !DIDerivedType(tag: DW_TAG_member, name: "test_suite_name", scope: !8036, file: !114, line: 48, baseType: !118, size: 32)
!8039 = !DIDerivedType(tag: DW_TAG_member, name: "test_name", scope: !8036, file: !114, line: 49, baseType: !118, size: 32, offset: 32)
!8040 = !DIDerivedType(tag: DW_TAG_member, name: "expected_result", scope: !8036, file: !114, line: 50, baseType: !682, size: 32, offset: 64)
!8041 = !DILocation(line: 0, scope: !8026)
!8042 = !DILocation(line: 0, scope: !8034)
!8043 = !DILocation(line: 240, column: 2, scope: !8034)
!8044 = !DILocation(line: 243, column: 27, scope: !8045)
!8045 = distinct !DILexicalBlock(scope: !8046, file: !661, line: 243, column: 7)
!8046 = distinct !DILexicalBlock(scope: !8047, file: !661, line: 242, column: 75)
!8047 = distinct !DILexicalBlock(scope: !8034, file: !661, line: 240, column: 2)
!8048 = !DILocation(line: 243, column: 44, scope: !8045)
!8049 = !DILocation(line: 243, column: 7, scope: !8045)
!8050 = !DILocation(line: 243, column: 50, scope: !8045)
!8051 = !DILocation(line: 243, column: 55, scope: !8045)
!8052 = !DILocation(line: 244, column: 27, scope: !8045)
!8053 = !DILocation(line: 244, column: 50, scope: !8045)
!8054 = !DILocation(line: 244, column: 7, scope: !8045)
!8055 = !DILocation(line: 244, column: 67, scope: !8045)
!8056 = !DILocation(line: 243, column: 7, scope: !8046)
!8057 = !DILocation(line: 242, column: 60, scope: !8047)
!8058 = !DILocation(line: 242, column: 19, scope: !8047)
!8059 = distinct !{!8059, !8043, !8060}
!8060 = !DILocation(line: 248, column: 2, scope: !8034)
!8061 = !DILocation(line: 245, column: 35, scope: !8062)
!8062 = distinct !DILexicalBlock(scope: !8045, file: !661, line: 244, column: 73)
!8063 = !DILocation(line: 250, column: 6, scope: !8026)
!8064 = !DILocation(line: 255, column: 15, scope: !8065)
!8065 = distinct !DILexicalBlock(scope: !8066, file: !661, line: 250, column: 53)
!8066 = distinct !DILexicalBlock(scope: !8026, file: !661, line: 250, column: 6)
!8067 = !DILocation(line: 255, column: 10, scope: !8065)
!8068 = !DILocation(line: 255, column: 3, scope: !8065)
!8069 = !DILocation(line: 262, column: 15, scope: !8070)
!8070 = distinct !DILexicalBlock(scope: !8071, file: !661, line: 257, column: 53)
!8071 = distinct !DILexicalBlock(scope: !8026, file: !661, line: 257, column: 6)
!8072 = !DILocation(line: 262, column: 10, scope: !8070)
!8073 = !DILocation(line: 262, column: 3, scope: !8070)
!8074 = !DILocation(line: 266, column: 1, scope: !8026)
!8075 = distinct !DISubprogram(name: "TC_RESULT_TO_STR", scope: !828, file: !828, line: 81, type: !8076, scopeLine: 82, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !657, retainedNodes: !8078)
!8076 = !DISubroutineType(types: !8077)
!8077 = !{!118, !107}
!8078 = !{!8079}
!8079 = !DILocalVariable(name: "result", arg: 1, scope: !8075, file: !828, line: 81, type: !107)
!8080 = !DILocation(line: 0, scope: !8075)
!8081 = !DILocation(line: 83, column: 2, scope: !8075)
!8082 = !DILocation(line: 0, scope: !8083)
!8083 = distinct !DILexicalBlock(scope: !8075, file: !828, line: 83, column: 18)
!8084 = !DILocation(line: 93, column: 1, scope: !8075)
!8085 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !804, file: !804, line: 1675, type: !6087, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !657, retainedNodes: !1949)
!8086 = !DILocation(line: 1677, column: 9, scope: !8085)
!8087 = !DILocation(line: 1677, column: 2, scope: !8085)
!8088 = distinct !DISubprogram(name: "k_cyc_to_ms_ceil32", scope: !8089, file: !8089, line: 809, type: !8090, scopeLine: 810, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !657, retainedNodes: !8092)
!8089 = !DIFile(filename: "zephyr/include/zephyr/sys/time_units.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8090 = !DISubroutineType(types: !8091)
!8091 = !{!152, !152}
!8092 = !{!8093}
!8093 = !DILocalVariable(name: "t", arg: 1, scope: !8088, file: !8089, line: 809, type: !152)
!8094 = !DILocation(line: 0, scope: !8088)
!8095 = !DILocation(line: 812, column: 17, scope: !8088)
!8096 = !DILocalVariable(name: "t", arg: 1, scope: !8097, file: !8089, line: 102, type: !695)
!8097 = distinct !DISubprogram(name: "z_tmcvt", scope: !8089, file: !8089, line: 102, type: !8098, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !657, retainedNodes: !8100)
!8098 = !DISubroutineType(types: !8099)
!8099 = !{!695, !695, !152, !152, !145, !145, !145, !145}
!8100 = !{!8096, !8101, !8102, !8103, !8104, !8105, !8106, !8107, !8108, !8109, !8110}
!8101 = !DILocalVariable(name: "from_hz", arg: 2, scope: !8097, file: !8089, line: 102, type: !152)
!8102 = !DILocalVariable(name: "to_hz", arg: 3, scope: !8097, file: !8089, line: 103, type: !152)
!8103 = !DILocalVariable(name: "const_hz", arg: 4, scope: !8097, file: !8089, line: 103, type: !145)
!8104 = !DILocalVariable(name: "result32", arg: 5, scope: !8097, file: !8089, line: 104, type: !145)
!8105 = !DILocalVariable(name: "round_up", arg: 6, scope: !8097, file: !8089, line: 104, type: !145)
!8106 = !DILocalVariable(name: "round_off", arg: 7, scope: !8097, file: !8089, line: 105, type: !145)
!8107 = !DILocalVariable(name: "mul_ratio", scope: !8097, file: !8089, line: 107, type: !145)
!8108 = !DILocalVariable(name: "div_ratio", scope: !8097, file: !8089, line: 109, type: !145)
!8109 = !DILocalVariable(name: "off", scope: !8097, file: !8089, line: 116, type: !695)
!8110 = !DILocalVariable(name: "rdivisor", scope: !8111, file: !8089, line: 119, type: !152)
!8111 = distinct !DILexicalBlock(scope: !8112, file: !8089, line: 118, column: 18)
!8112 = distinct !DILexicalBlock(scope: !8097, file: !8089, line: 118, column: 6)
!8113 = !DILocation(line: 0, scope: !8097, inlinedAt: !8114)
!8114 = distinct !DILocation(line: 812, column: 9, scope: !8088)
!8115 = !DILocation(line: 135, column: 5, scope: !8116, inlinedAt: !8114)
!8116 = distinct !DILexicalBlock(scope: !8117, file: !8089, line: 134, column: 17)
!8117 = distinct !DILexicalBlock(scope: !8097, file: !8089, line: 134, column: 6)
!8118 = !DILocation(line: 136, column: 16, scope: !8119, inlinedAt: !8114)
!8119 = distinct !DILexicalBlock(scope: !8116, file: !8089, line: 136, column: 7)
!8120 = !DILocation(line: 812, column: 9, scope: !8088)
!8121 = !DILocation(line: 812, column: 2, scope: !8088)
!8122 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !8123, file: !8123, line: 24, type: !6087, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !657, retainedNodes: !1949)
!8123 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/misc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8124 = !DILocation(line: 26, column: 9, scope: !8122)
!8125 = !DILocation(line: 26, column: 2, scope: !8122)
!8126 = distinct !DISubprogram(name: "test_cb", scope: !661, file: !661, line: 507, type: !690, scopeLine: 508, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !657, retainedNodes: !8127)
!8127 = !{!8128, !8129, !8130, !8131, !8132}
!8128 = !DILocalVariable(name: "a", arg: 1, scope: !8126, file: !661, line: 507, type: !106)
!8129 = !DILocalVariable(name: "b", arg: 2, scope: !8126, file: !661, line: 507, type: !106)
!8130 = !DILocalVariable(name: "c", arg: 3, scope: !8126, file: !661, line: 507, type: !106)
!8131 = !DILocalVariable(name: "suite", scope: !8126, file: !661, line: 509, type: !7685)
!8132 = !DILocalVariable(name: "test", scope: !8126, file: !661, line: 510, type: !7637)
!8133 = !DILocation(line: 0, scope: !8126)
!8134 = !DILocation(line: 510, column: 33, scope: !8126)
!8135 = !DILocation(line: 512, column: 14, scope: !8126)
!8136 = !DILocation(line: 513, column: 2, scope: !8126)
!8137 = !DILocation(line: 514, column: 13, scope: !8138)
!8138 = distinct !DILexicalBlock(scope: !8126, file: !661, line: 514, column: 6)
!8139 = !DILocation(line: 514, column: 6, scope: !8138)
!8140 = !DILocation(line: 514, column: 6, scope: !8126)
!8141 = !DILocation(line: 515, column: 3, scope: !8142)
!8142 = distinct !DILexicalBlock(scope: !8138, file: !661, line: 514, column: 21)
!8143 = !DILocation(line: 516, column: 2, scope: !8142)
!8144 = !DILocation(line: 517, column: 2, scope: !8126)
!8145 = !DILocation(line: 518, column: 14, scope: !8126)
!8146 = !DILocation(line: 519, column: 1, scope: !8126)
!8147 = distinct !DISubprogram(name: "run_test_functions", scope: !661, file: !661, line: 219, type: !8148, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !657, retainedNodes: !8150)
!8148 = !DISubroutineType(types: !8149)
!8149 = !{null, !7685, !7637, !106}
!8150 = !{!8151, !8152, !8153}
!8151 = !DILocalVariable(name: "suite", arg: 1, scope: !8147, file: !661, line: 219, type: !7685)
!8152 = !DILocalVariable(name: "test", arg: 2, scope: !8147, file: !661, line: 219, type: !7637)
!8153 = !DILocalVariable(name: "data", arg: 3, scope: !8147, file: !661, line: 220, type: !106)
!8154 = !DILocation(line: 0, scope: !8147)
!8155 = !DILocation(line: 222, column: 8, scope: !8147)
!8156 = !DILocation(line: 223, column: 8, scope: !8147)
!8157 = !DILocation(line: 223, column: 2, scope: !8147)
!8158 = !DILocation(line: 224, column: 1, scope: !8147)
!8159 = distinct !DISubprogram(name: "z_impl_ztest_run_test_suites", scope: !661, file: !661, line: 929, type: !8160, scopeLine: 930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !657, retainedNodes: !8162)
!8160 = !DISubroutineType(types: !8161)
!8161 = !{!107, !13}
!8162 = !{!8163, !8164, !8165}
!8163 = !DILocalVariable(name: "state", arg: 1, scope: !8159, file: !661, line: 929, type: !13)
!8164 = !DILocalVariable(name: "count", scope: !8159, file: !661, line: 931, type: !107)
!8165 = !DILocalVariable(name: "ptr", scope: !8166, file: !661, line: 954, type: !7685)
!8166 = distinct !DILexicalBlock(scope: !8159, file: !661, line: 954, column: 2)
!8167 = !DILocation(line: 0, scope: !8159)
!8168 = !DILocation(line: 933, column: 6, scope: !8169)
!8169 = distinct !DILexicalBlock(scope: !8159, file: !661, line: 933, column: 6)
!8170 = !DILocation(line: 933, column: 18, scope: !8169)
!8171 = !DILocation(line: 933, column: 6, scope: !8159)
!8172 = !DILocation(line: 0, scope: !8166)
!8173 = !DILocation(line: 954, column: 2, scope: !8166)
!8174 = !DILocation(line: 956, column: 12, scope: !8175)
!8175 = distinct !DILexicalBlock(scope: !8176, file: !661, line: 955, column: 48)
!8176 = distinct !DILexicalBlock(scope: !8166, file: !661, line: 954, column: 2)
!8177 = !DILocation(line: 956, column: 9, scope: !8175)
!8178 = !DILocation(line: 960, column: 7, scope: !8179)
!8179 = distinct !DILexicalBlock(scope: !8175, file: !661, line: 960, column: 7)
!8180 = !DILocation(line: 960, column: 19, scope: !8179)
!8181 = !DILocation(line: 955, column: 41, scope: !8176)
!8182 = !DILocation(line: 960, column: 50, scope: !8179)
!8183 = distinct !{!8183, !8173, !8184}
!8184 = !DILocation(line: 964, column: 2, scope: !8166)
!8185 = !DILocation(line: 967, column: 2, scope: !8159)
!8186 = !DILocation(line: 969, column: 2, scope: !8159)
!8187 = !DILocation(line: 970, column: 1, scope: !8159)
!8188 = distinct !DISubprogram(name: "__ztest_run_test_suite", scope: !661, file: !661, line: 907, type: !8189, scopeLine: 908, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !657, retainedNodes: !8191)
!8189 = !DISubroutineType(types: !8190)
!8190 = !{!107, !7685, !13}
!8191 = !{!8192, !8193, !8194, !8195, !8196, !8198}
!8192 = !DILocalVariable(name: "ptr", arg: 1, scope: !8188, file: !661, line: 907, type: !7685)
!8193 = !DILocalVariable(name: "state", arg: 2, scope: !8188, file: !661, line: 907, type: !13)
!8194 = !DILocalVariable(name: "stats", scope: !8188, file: !661, line: 909, type: !7696)
!8195 = !DILocalVariable(name: "count", scope: !8188, file: !661, line: 910, type: !107)
!8196 = !DILocalVariable(name: "i", scope: !8197, file: !661, line: 914, type: !107)
!8197 = distinct !DILexicalBlock(scope: !8188, file: !661, line: 914, column: 2)
!8198 = !DILocalVariable(name: "fail", scope: !8199, file: !661, line: 916, type: !107)
!8199 = distinct !DILexicalBlock(scope: !8200, file: !661, line: 915, column: 47)
!8200 = distinct !DILexicalBlock(scope: !8201, file: !661, line: 915, column: 7)
!8201 = distinct !DILexicalBlock(scope: !8202, file: !661, line: 914, column: 47)
!8202 = distinct !DILexicalBlock(scope: !8197, file: !661, line: 914, column: 2)
!8203 = !DILocation(line: 0, scope: !8188)
!8204 = !DILocation(line: 909, column: 41, scope: !8188)
!8205 = !DILocation(line: 912, column: 2, scope: !8188)
!8206 = !DILocation(line: 0, scope: !8197)
!8207 = !DILocation(line: 915, column: 7, scope: !8200)
!8208 = !DILocation(line: 915, column: 7, scope: !8201)
!8209 = !DILocation(line: 916, column: 15, scope: !8199)
!8210 = !DILocation(line: 0, scope: !8199)
!8211 = !DILocation(line: 919, column: 20, scope: !8199)
!8212 = !DILocation(line: 920, column: 31, scope: !8199)
!8213 = !DILocation(line: 920, column: 25, scope: !8199)
!8214 = !DILocation(line: 921, column: 3, scope: !8199)
!8215 = !DILocation(line: 0, scope: !8200)
!8216 = !DILocation(line: 926, column: 2, scope: !8188)
!8217 = distinct !DISubprogram(name: "__ztest_show_suite_summary", scope: !661, file: !661, line: 886, type: !2909, scopeLine: 887, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !657, retainedNodes: !8218)
!8218 = !{!8219}
!8219 = !DILocalVariable(name: "ptr", scope: !8220, file: !661, line: 894, type: !7685)
!8220 = distinct !DILexicalBlock(scope: !8217, file: !661, line: 894, column: 2)
!8221 = !DILocation(line: 892, column: 2, scope: !8217)
!8222 = !DILocation(line: 0, scope: !8220)
!8223 = !DILocation(line: 894, column: 2, scope: !8220)
!8224 = !DILocation(line: 903, column: 2, scope: !8217)
!8225 = !DILocation(line: 905, column: 1, scope: !8217)
!8226 = !DILocation(line: 898, column: 3, scope: !8227)
!8227 = distinct !DILexicalBlock(scope: !8228, file: !661, line: 895, column: 48)
!8228 = distinct !DILexicalBlock(scope: !8220, file: !661, line: 894, column: 2)
!8229 = !DILocation(line: 895, column: 41, scope: !8228)
!8230 = !DILocation(line: 895, column: 11, scope: !8228)
!8231 = distinct !{!8231, !8223, !8232}
!8232 = !DILocation(line: 902, column: 2, scope: !8220)
!8233 = distinct !DISubprogram(name: "__ztest_show_suite_summary_verbose", scope: !661, file: !661, line: 852, type: !8234, scopeLine: 853, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !657, retainedNodes: !8236)
!8234 = !DISubroutineType(types: !8235)
!8235 = !{null, !7685}
!8236 = !{!8237, !8238, !8239, !8240}
!8237 = !DILocalVariable(name: "suite", arg: 1, scope: !8233, file: !661, line: 852, type: !7685)
!8238 = !DILocalVariable(name: "test", scope: !8233, file: !661, line: 854, type: !7637)
!8239 = !DILocalVariable(name: "tc_result", scope: !8233, file: !661, line: 855, type: !107)
!8240 = !DILocalVariable(name: "flush_frequency", scope: !8233, file: !661, line: 856, type: !107)
!8241 = !DILocation(line: 0, scope: !8233)
!8242 = !DILocation(line: 858, column: 2, scope: !8233)
!8243 = !DILocation(line: 860, column: 47, scope: !8233)
!8244 = !DILocation(line: 860, column: 18, scope: !8233)
!8245 = !DILocation(line: 860, column: 60, scope: !8233)
!8246 = !DILocation(line: 860, column: 2, scope: !8233)
!8247 = !DILocation(line: 861, column: 13, scope: !8248)
!8248 = distinct !DILexicalBlock(scope: !8249, file: !661, line: 861, column: 7)
!8249 = distinct !DILexicalBlock(scope: !8233, file: !661, line: 860, column: 70)
!8250 = !DILocation(line: 861, column: 20, scope: !8248)
!8251 = !DILocation(line: 861, column: 47, scope: !8248)
!8252 = !DILocation(line: 861, column: 31, scope: !8248)
!8253 = !DILocation(line: 861, column: 7, scope: !8249)
!8254 = !DILocation(line: 863, column: 27, scope: !8255)
!8255 = distinct !DILexicalBlock(scope: !8248, file: !661, line: 863, column: 14)
!8256 = !DILocation(line: 863, column: 38, scope: !8255)
!8257 = !DILocation(line: 0, scope: !8248)
!8258 = !DILocation(line: 869, column: 3, scope: !8249)
!8259 = distinct !{!8259, !8246, !8260}
!8260 = !DILocation(line: 880, column: 2, scope: !8233)
!8261 = !DILocation(line: 881, column: 2, scope: !8233)
!8262 = !DILocation(line: 883, column: 1, scope: !8233)
!8263 = distinct !DISubprogram(name: "__ztest_show_suite_summary_oneline", scope: !661, file: !661, line: 801, type: !8234, scopeLine: 802, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !657, retainedNodes: !8264)
!8264 = !{!8265, !8266, !8267, !8268, !8269, !8270, !8271, !8272, !8273, !8274, !8275, !8276, !8277, !8278}
!8265 = !DILocalVariable(name: "suite", arg: 1, scope: !8263, file: !661, line: 801, type: !7685)
!8266 = !DILocalVariable(name: "distinct_pass", scope: !8263, file: !661, line: 803, type: !107)
!8267 = !DILocalVariable(name: "distinct_fail", scope: !8263, file: !661, line: 803, type: !107)
!8268 = !DILocalVariable(name: "distinct_skip", scope: !8263, file: !661, line: 803, type: !107)
!8269 = !DILocalVariable(name: "distinct_total", scope: !8263, file: !661, line: 803, type: !107)
!8270 = !DILocalVariable(name: "effective_total", scope: !8263, file: !661, line: 804, type: !107)
!8271 = !DILocalVariable(name: "expanded_pass", scope: !8263, file: !661, line: 805, type: !107)
!8272 = !DILocalVariable(name: "expanded_passrate", scope: !8263, file: !661, line: 805, type: !107)
!8273 = !DILocalVariable(name: "passrate_major", scope: !8263, file: !661, line: 806, type: !107)
!8274 = !DILocalVariable(name: "passrate_minor", scope: !8263, file: !661, line: 806, type: !107)
!8275 = !DILocalVariable(name: "passrate_tail", scope: !8263, file: !661, line: 806, type: !107)
!8276 = !DILocalVariable(name: "suite_result", scope: !8263, file: !661, line: 807, type: !107)
!8277 = !DILocalVariable(name: "test", scope: !8263, file: !661, line: 809, type: !7637)
!8278 = !DILocalVariable(name: "suite_duration_worst_ms", scope: !8263, file: !661, line: 810, type: !32)
!8279 = !DILocation(line: 0, scope: !8263)
!8280 = !DILocation(line: 813, column: 47, scope: !8263)
!8281 = !DILocation(line: 813, column: 18, scope: !8263)
!8282 = !DILocation(line: 813, column: 60, scope: !8263)
!8283 = !DILocation(line: 813, column: 2, scope: !8263)
!8284 = !DILocation(line: 814, column: 17, scope: !8285)
!8285 = distinct !DILexicalBlock(scope: !8263, file: !661, line: 813, column: 70)
!8286 = !DILocation(line: 815, column: 36, scope: !8285)
!8287 = !DILocation(line: 815, column: 43, scope: !8285)
!8288 = !DILocation(line: 815, column: 27, scope: !8285)
!8289 = !DILocation(line: 816, column: 20, scope: !8290)
!8290 = distinct !DILexicalBlock(scope: !8285, file: !661, line: 816, column: 7)
!8291 = !DILocation(line: 816, column: 47, scope: !8290)
!8292 = !DILocation(line: 816, column: 31, scope: !8290)
!8293 = !DILocation(line: 816, column: 7, scope: !8285)
!8294 = !DILocation(line: 817, column: 17, scope: !8295)
!8295 = distinct !DILexicalBlock(scope: !8290, file: !661, line: 816, column: 58)
!8296 = !DILocation(line: 818, column: 3, scope: !8295)
!8297 = !DILocation(line: 818, column: 27, scope: !8298)
!8298 = distinct !DILexicalBlock(scope: !8290, file: !661, line: 818, column: 14)
!8299 = !DILocation(line: 818, column: 38, scope: !8298)
!8300 = !DILocation(line: 818, column: 14, scope: !8290)
!8301 = !DILocation(line: 819, column: 17, scope: !8302)
!8302 = distinct !DILexicalBlock(scope: !8298, file: !661, line: 818, column: 65)
!8303 = !DILocation(line: 820, column: 3, scope: !8302)
!8304 = !DILocation(line: 821, column: 17, scope: !8305)
!8305 = distinct !DILexicalBlock(scope: !8298, file: !661, line: 820, column: 10)
!8306 = distinct !{!8306, !8283, !8307}
!8307 = !DILocation(line: 823, column: 2, scope: !8263)
!8308 = !DILocation(line: 825, column: 20, scope: !8309)
!8309 = distinct !DILexicalBlock(scope: !8263, file: !661, line: 825, column: 6)
!8310 = !DILocation(line: 825, column: 6, scope: !8263)
!8311 = !DILocation(line: 829, column: 33, scope: !8312)
!8312 = distinct !DILexicalBlock(scope: !8309, file: !661, line: 828, column: 9)
!8313 = !DILocation(line: 829, column: 18, scope: !8312)
!8314 = !DILocation(line: 830, column: 36, scope: !8312)
!8315 = !DILocation(line: 831, column: 33, scope: !8312)
!8316 = !DILocation(line: 832, column: 37, scope: !8312)
!8317 = !DILocation(line: 833, column: 38, scope: !8312)
!8318 = !DILocation(line: 834, column: 56, scope: !8312)
!8319 = !DILocation(line: 834, column: 39, scope: !8312)
!8320 = !DILocation(line: 834, column: 64, scope: !8312)
!8321 = !DILocation(line: 835, column: 78, scope: !8312)
!8322 = !DILocation(line: 835, column: 61, scope: !8312)
!8323 = !DILocation(line: 836, column: 21, scope: !8324)
!8324 = distinct !DILexicalBlock(scope: !8312, file: !661, line: 836, column: 7)
!8325 = !DILocation(line: 836, column: 7, scope: !8312)
!8326 = !DILocation(line: 0, scope: !8309)
!8327 = !DILocation(line: 841, column: 2, scope: !8263)
!8328 = !DILocation(line: 849, column: 1, scope: !8263)
!8329 = distinct !DISubprogram(name: "__ztest_init_unit_test_result_for_suite", scope: !661, file: !661, line: 773, type: !8234, scopeLine: 774, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !657, retainedNodes: !8330)
!8330 = !{!8331, !8332}
!8331 = !DILocalVariable(name: "suite", arg: 1, scope: !8329, file: !661, line: 773, type: !7685)
!8332 = !DILocalVariable(name: "test", scope: !8329, file: !661, line: 775, type: !7637)
!8333 = !DILocation(line: 0, scope: !8329)
!8334 = !DILocation(line: 777, column: 47, scope: !8329)
!8335 = !DILocation(line: 777, column: 18, scope: !8329)
!8336 = !DILocation(line: 777, column: 60, scope: !8329)
!8337 = !DILocation(line: 777, column: 2, scope: !8329)
!8338 = !DILocation(line: 778, column: 9, scope: !8339)
!8339 = distinct !DILexicalBlock(scope: !8329, file: !661, line: 777, column: 70)
!8340 = !DILocation(line: 778, column: 16, scope: !8339)
!8341 = !DILocation(line: 778, column: 26, scope: !8339)
!8342 = !DILocation(line: 779, column: 9, scope: !8339)
!8343 = !DILocation(line: 779, column: 16, scope: !8339)
!8344 = !DILocation(line: 779, column: 27, scope: !8339)
!8345 = !DILocation(line: 780, column: 9, scope: !8339)
!8346 = !DILocation(line: 780, column: 16, scope: !8339)
!8347 = !DILocation(line: 780, column: 27, scope: !8339)
!8348 = !DILocation(line: 781, column: 9, scope: !8339)
!8349 = !DILocation(line: 781, column: 16, scope: !8339)
!8350 = !DILocation(line: 781, column: 27, scope: !8339)
!8351 = !DILocation(line: 782, column: 9, scope: !8339)
!8352 = !DILocation(line: 782, column: 16, scope: !8339)
!8353 = !DILocation(line: 782, column: 34, scope: !8339)
!8354 = distinct !{!8354, !8337, !8355}
!8355 = !DILocation(line: 783, column: 2, scope: !8329)
!8356 = !DILocation(line: 784, column: 1, scope: !8329)
!8357 = distinct !DISubprogram(name: "ztest_verify_all_test_suites_ran", scope: !661, file: !661, line: 972, type: !2909, scopeLine: 973, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !657, retainedNodes: !8358)
!8358 = !{!8359, !8360, !8361}
!8359 = !DILocalVariable(name: "all_tests_run", scope: !8357, file: !661, line: 974, type: !145)
!8360 = !DILocalVariable(name: "suite", scope: !8357, file: !661, line: 975, type: !7685)
!8361 = !DILocalVariable(name: "test", scope: !8357, file: !661, line: 976, type: !7637)
!8362 = !DILocation(line: 0, scope: !8357)
!8363 = !DILocation(line: 979, column: 3, scope: !8364)
!8364 = distinct !DILexicalBlock(scope: !8365, file: !661, line: 979, column: 3)
!8365 = distinct !DILexicalBlock(scope: !8366, file: !661, line: 978, column: 47)
!8366 = distinct !DILexicalBlock(scope: !8357, file: !661, line: 978, column: 6)
!8367 = !DILocation(line: 987, column: 3, scope: !8368)
!8368 = distinct !DILexicalBlock(scope: !8365, file: !661, line: 987, column: 3)
!8369 = !DILocation(line: 981, column: 15, scope: !8370)
!8370 = distinct !DILexicalBlock(scope: !8371, file: !661, line: 981, column: 8)
!8371 = distinct !DILexicalBlock(scope: !8372, file: !661, line: 980, column: 17)
!8372 = distinct !DILexicalBlock(scope: !8364, file: !661, line: 979, column: 3)
!8373 = !DILocation(line: 981, column: 22, scope: !8370)
!8374 = !DILocation(line: 981, column: 32, scope: !8370)
!8375 = !DILocation(line: 981, column: 8, scope: !8371)
!8376 = !DILocation(line: 982, column: 59, scope: !8377)
!8377 = distinct !DILexicalBlock(scope: !8370, file: !661, line: 981, column: 37)
!8378 = !DILocation(line: 982, column: 5, scope: !8377)
!8379 = !DILocation(line: 984, column: 4, scope: !8377)
!8380 = !DILocation(line: 980, column: 8, scope: !8372)
!8381 = !DILocation(line: 979, column: 52, scope: !8372)
!8382 = distinct !{!8382, !8363, !8383}
!8383 = !DILocation(line: 985, column: 3, scope: !8364)
!8384 = !DILocation(line: 988, column: 40, scope: !8385)
!8385 = distinct !DILexicalBlock(scope: !8386, file: !661, line: 987, column: 86)
!8386 = distinct !DILexicalBlock(scope: !8368, file: !661, line: 987, column: 3)
!8387 = !DILocation(line: 988, column: 12, scope: !8385)
!8388 = !DILocation(line: 989, column: 14, scope: !8389)
!8389 = distinct !DILexicalBlock(scope: !8385, file: !661, line: 989, column: 8)
!8390 = !DILocation(line: 989, column: 8, scope: !8385)
!8391 = !DILocation(line: 992, column: 17, scope: !8392)
!8392 = distinct !DILexicalBlock(scope: !8389, file: !661, line: 989, column: 23)
!8393 = !DILocation(line: 992, column: 29, scope: !8392)
!8394 = !DILocation(line: 990, column: 5, scope: !8392)
!8395 = !DILocation(line: 994, column: 4, scope: !8392)
!8396 = !DILocation(line: 987, column: 78, scope: !8386)
!8397 = !DILocation(line: 987, column: 49, scope: !8386)
!8398 = distinct !{!8398, !8367, !8399}
!8399 = !DILocation(line: 995, column: 3, scope: !8368)
!8400 = !DILocation(line: 997, column: 7, scope: !8365)
!8401 = !DILocation(line: 998, column: 16, scope: !8402)
!8402 = distinct !DILexicalBlock(scope: !8403, file: !661, line: 997, column: 23)
!8403 = distinct !DILexicalBlock(scope: !8365, file: !661, line: 997, column: 7)
!8404 = !DILocation(line: 999, column: 3, scope: !8402)
!8405 = !DILocation(line: 1002, column: 2, scope: !8406)
!8406 = distinct !DILexicalBlock(scope: !8357, file: !661, line: 1002, column: 2)
!8407 = !DILocation(line: 1003, column: 13, scope: !8408)
!8408 = distinct !DILexicalBlock(scope: !8409, file: !661, line: 1003, column: 7)
!8409 = distinct !DILexicalBlock(scope: !8410, file: !661, line: 1002, column: 85)
!8410 = distinct !DILexicalBlock(scope: !8406, file: !661, line: 1002, column: 2)
!8411 = !DILocation(line: 1003, column: 20, scope: !8408)
!8412 = !DILocation(line: 1003, column: 46, scope: !8408)
!8413 = !DILocation(line: 1003, column: 31, scope: !8408)
!8414 = !DILocation(line: 1003, column: 72, scope: !8408)
!8415 = !DILocation(line: 1003, column: 57, scope: !8408)
!8416 = !DILocation(line: 1004, column: 20, scope: !8408)
!8417 = !DILocation(line: 1003, column: 83, scope: !8408)
!8418 = !DILocation(line: 1003, column: 7, scope: !8409)
!8419 = !DILocation(line: 1005, column: 41, scope: !8420)
!8420 = distinct !DILexicalBlock(scope: !8408, file: !661, line: 1004, column: 31)
!8421 = !DILocation(line: 1005, column: 64, scope: !8420)
!8422 = !DILocation(line: 1005, column: 4, scope: !8420)
!8423 = !DILocation(line: 1006, column: 16, scope: !8420)
!8424 = !DILocation(line: 1007, column: 3, scope: !8420)
!8425 = !DILocation(line: 1002, column: 77, scope: !8410)
!8426 = !DILocation(line: 1002, column: 48, scope: !8410)
!8427 = distinct !{!8427, !8405, !8428}
!8428 = !DILocation(line: 1008, column: 2, scope: !8406)
!8429 = !DILocation(line: 1009, column: 1, scope: !8357)
!8430 = distinct !DISubprogram(name: "ztest_run_all", scope: !661, file: !661, line: 1011, type: !17, scopeLine: 1011, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !657, retainedNodes: !8431)
!8431 = !{!8432}
!8432 = !DILocalVariable(name: "state", arg: 1, scope: !8430, file: !661, line: 1011, type: !13)
!8433 = !DILocation(line: 0, scope: !8430)
!8434 = !DILocation(line: 1011, column: 51, scope: !8430)
!8435 = !DILocation(line: 1011, column: 41, scope: !8430)
!8436 = !DILocation(line: 1011, column: 67, scope: !8430)
!8437 = distinct !DISubprogram(name: "test_main", scope: !661, file: !661, line: 1013, type: !2909, scopeLine: 1014, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !657, retainedNodes: !1949)
!8438 = !DILocation(line: 1015, column: 2, scope: !8437)
!8439 = !DILocation(line: 1017, column: 2, scope: !8437)
!8440 = !DILocation(line: 1018, column: 1, scope: !8437)
!8441 = distinct !DISubprogram(name: "main", scope: !661, file: !661, line: 1030, type: !2909, scopeLine: 1031, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !657, retainedNodes: !1949)
!8442 = !DILocation(line: 1046, column: 2, scope: !8441)
!8443 = !DILocation(line: 1047, column: 2, scope: !8441)
!8444 = !DILocation(line: 1071, column: 1, scope: !8441)
!8445 = distinct !DISubprogram(name: "z_ztest_run_all", scope: !837, file: !837, line: 30, type: !17, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !834, retainedNodes: !8446)
!8446 = !{!8447}
!8447 = !DILocalVariable(name: "state", arg: 1, scope: !8445, file: !837, line: 30, type: !13)
!8448 = !DILocation(line: 0, scope: !8445)
!8449 = !DILocation(line: 32, column: 2, scope: !8445)
!8450 = !DILocation(line: 33, column: 1, scope: !8445)
!8451 = distinct !DISubprogram(name: "z_ztest_should_suite_run", scope: !837, file: !837, line: 45, type: !844, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !834, retainedNodes: !8452)
!8452 = !{!8453, !8454, !8455}
!8453 = !DILocalVariable(name: "state", arg: 1, scope: !8451, file: !837, line: 45, type: !13)
!8454 = !DILocalVariable(name: "suite", arg: 2, scope: !8451, file: !837, line: 45, type: !846)
!8455 = !DILocalVariable(name: "run_suite", scope: !8451, file: !837, line: 47, type: !145)
!8456 = !DILocation(line: 0, scope: !8451)
!8457 = !DILocation(line: 49, column: 13, scope: !8458)
!8458 = distinct !DILexicalBlock(scope: !8451, file: !837, line: 49, column: 6)
!8459 = !DILocation(line: 49, column: 23, scope: !8458)
!8460 = !DILocation(line: 49, column: 6, scope: !8451)
!8461 = !DILocation(line: 50, column: 15, scope: !8462)
!8462 = distinct !DILexicalBlock(scope: !8458, file: !837, line: 49, column: 32)
!8463 = !DILocation(line: 51, column: 2, scope: !8462)
!8464 = !DILocation(line: 53, column: 2, scope: !8451)
!8465 = distinct !DISubprogram(name: "z_ztest_should_test_run", scope: !837, file: !837, line: 65, type: !865, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !834, retainedNodes: !8466)
!8466 = !{!8467, !8468}
!8467 = !DILocalVariable(name: "suite", arg: 1, scope: !8465, file: !837, line: 65, type: !118)
!8468 = !DILocalVariable(name: "test", arg: 2, scope: !8465, file: !837, line: 65, type: !118)
!8469 = !DILocation(line: 0, scope: !8465)
!8470 = !DILocation(line: 67, column: 2, scope: !8465)
!8471 = distinct !DISubprogram(name: "ztest_run_test_suites", scope: !8472, file: !8472, line: 24, type: !8160, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !834, retainedNodes: !8473)
!8472 = !DIFile(filename: "zephyr/include/generated/syscalls/ztest_test_new.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/integration")
!8473 = !{!8474}
!8474 = !DILocalVariable(name: "state", arg: 1, scope: !8471, file: !8472, line: 24, type: !13)
!8475 = !DILocation(line: 0, scope: !8471)
!8476 = !DILocation(line: 32, column: 2, scope: !8477)
!8477 = distinct !DILexicalBlock(scope: !8471, file: !8472, line: 32, column: 2)
!8478 = !{i64 2151164913}
!8479 = !DILocation(line: 33, column: 9, scope: !8471)
!8480 = !DILocation(line: 33, column: 2, scope: !8471)
!8481 = distinct !DISubprogram(name: "ztest_relative_filename", scope: !837, file: !837, line: 20, type: !8482, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !834, retainedNodes: !8484)
!8482 = !DISubroutineType(types: !8483)
!8483 = !{!118, !118}
!8484 = !{!8485}
!8485 = !DILocalVariable(name: "file", arg: 1, scope: !8481, file: !837, line: 20, type: !118)
!8486 = !DILocation(line: 0, scope: !8481)
!8487 = !DILocation(line: 22, column: 2, scope: !8481)
!8488 = distinct !DISubprogram(name: "uart_console_init", scope: !965, file: !965, line: 588, type: !909, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !869, retainedNodes: !8489)
!8489 = !{!8490}
!8490 = !DILocalVariable(name: "arg", arg: 1, scope: !8488, file: !965, line: 588, type: !881)
!8491 = !DILocation(line: 0, scope: !8488)
!8492 = !DILocation(line: 593, column: 7, scope: !8493)
!8493 = distinct !DILexicalBlock(scope: !8488, file: !965, line: 593, column: 6)
!8494 = !DILocation(line: 593, column: 6, scope: !8488)
!8495 = !DILocation(line: 597, column: 2, scope: !8488)
!8496 = !DILocation(line: 599, column: 2, scope: !8488)
!8497 = !DILocation(line: 600, column: 1, scope: !8488)
!8498 = distinct !DISubprogram(name: "device_is_ready", scope: !8499, file: !8499, line: 47, type: !8500, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !869, retainedNodes: !8502)
!8499 = !DIFile(filename: "zephyr/include/generated/syscalls/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/integration")
!8500 = !DISubroutineType(types: !8501)
!8501 = !{!145, !881}
!8502 = !{!8503}
!8503 = !DILocalVariable(name: "dev", arg: 1, scope: !8498, file: !8499, line: 47, type: !881)
!8504 = !DILocation(line: 0, scope: !8498)
!8505 = !DILocation(line: 55, column: 2, scope: !8506)
!8506 = distinct !DILexicalBlock(scope: !8498, file: !8499, line: 55, column: 2)
!8507 = !{i64 2151380621}
!8508 = !DILocation(line: 56, column: 9, scope: !8498)
!8509 = !DILocation(line: 56, column: 2, scope: !8498)
!8510 = distinct !DISubprogram(name: "uart_console_hook_install", scope: !965, file: !965, line: 573, type: !2909, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !869, retainedNodes: !1949)
!8511 = !DILocation(line: 576, column: 2, scope: !8510)
!8512 = !DILocation(line: 579, column: 2, scope: !8510)
!8513 = !DILocation(line: 581, column: 1, scope: !8510)
!8514 = distinct !DISubprogram(name: "console_out", scope: !965, file: !965, line: 77, type: !214, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !869, retainedNodes: !8515)
!8515 = !{!8516}
!8516 = !DILocalVariable(name: "c", arg: 1, scope: !8514, file: !965, line: 77, type: !107)
!8517 = !DILocation(line: 0, scope: !8514)
!8518 = !DILocation(line: 89, column: 11, scope: !8519)
!8519 = distinct !DILexicalBlock(scope: !8514, file: !965, line: 89, column: 6)
!8520 = !DILocation(line: 89, column: 6, scope: !8514)
!8521 = !DILocation(line: 90, column: 3, scope: !8522)
!8522 = distinct !DILexicalBlock(scope: !8519, file: !965, line: 89, column: 17)
!8523 = !DILocation(line: 91, column: 2, scope: !8522)
!8524 = !DILocation(line: 92, column: 34, scope: !8514)
!8525 = !DILocation(line: 92, column: 2, scope: !8514)
!8526 = !DILocation(line: 94, column: 2, scope: !8514)
!8527 = distinct !DISubprogram(name: "uart_poll_out", scope: !8528, file: !8528, line: 95, type: !905, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !869, retainedNodes: !8529)
!8528 = !DIFile(filename: "zephyr/include/generated/syscalls/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_meerkat96/integration")
!8529 = !{!8530, !8531}
!8530 = !DILocalVariable(name: "dev", arg: 1, scope: !8527, file: !8528, line: 95, type: !881)
!8531 = !DILocalVariable(name: "out_char", arg: 2, scope: !8527, file: !8528, line: 95, type: !196)
!8532 = !DILocation(line: 0, scope: !8527)
!8533 = !DILocation(line: 105, column: 2, scope: !8534)
!8534 = distinct !DILexicalBlock(scope: !8527, file: !8528, line: 105, column: 2)
!8535 = !{i64 2151463866}
!8536 = !DILocation(line: 106, column: 2, scope: !8527)
!8537 = !DILocation(line: 107, column: 1, scope: !8527)
!8538 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !875, file: !875, line: 574, type: !905, scopeLine: 576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !869, retainedNodes: !8539)
!8539 = !{!8540, !8541, !8542}
!8540 = !DILocalVariable(name: "dev", arg: 1, scope: !8538, file: !875, line: 574, type: !881)
!8541 = !DILocalVariable(name: "out_char", arg: 2, scope: !8538, file: !875, line: 575, type: !196)
!8542 = !DILocalVariable(name: "api", scope: !8538, file: !875, line: 577, type: !872)
!8543 = !DILocation(line: 0, scope: !8538)
!8544 = !DILocation(line: 578, column: 40, scope: !8538)
!8545 = !DILocation(line: 580, column: 7, scope: !8538)
!8546 = !DILocation(line: 580, column: 2, scope: !8538)
!8547 = !DILocation(line: 581, column: 1, scope: !8538)
!8548 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !884, file: !884, line: 730, type: !8500, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !869, retainedNodes: !8549)
!8549 = !{!8550}
!8550 = !DILocalVariable(name: "dev", arg: 1, scope: !8548, file: !884, line: 730, type: !881)
!8551 = !DILocation(line: 0, scope: !8548)
!8552 = !DILocation(line: 732, column: 9, scope: !8548)
!8553 = !DILocation(line: 732, column: 2, scope: !8548)
!8554 = distinct !DISubprogram(name: "uart_register_input", scope: !965, file: !965, line: 560, type: !8555, scopeLine: 562, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !869, retainedNodes: !8602)
!8555 = !DISubroutineType(types: !8556)
!8556 = !{null, !8557, !8557, !8599}
!8557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8558, size: 32)
!8558 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !804, line: 2208, size: 160, elements: !8559)
!8559 = !{!8560}
!8560 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !8558, file: !804, line: 2209, baseType: !8561, size: 160)
!8561 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !804, line: 1709, size: 160, elements: !8562)
!8562 = !{!8563, !8576, !8580}
!8563 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !8561, file: !804, line: 1710, baseType: !8564, size: 64)
!8564 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !8565, line: 46, baseType: !8566)
!8565 = !DIFile(filename: "zephyr/include/zephyr/sys/sflist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8566 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !8565, line: 41, size: 64, elements: !8567)
!8567 = !{!8568, !8575}
!8568 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !8566, file: !8565, line: 42, baseType: !8569, size: 32)
!8569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8570, size: 32)
!8570 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !8565, line: 39, baseType: !8571)
!8571 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !8565, line: 35, size: 32, elements: !8572)
!8572 = !{!8573}
!8573 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !8571, file: !8565, line: 36, baseType: !8574, size: 32)
!8574 = !DIDerivedType(tag: DW_TAG_typedef, name: "unative_t", file: !8565, line: 32, baseType: !152)
!8575 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !8566, file: !8565, line: 43, baseType: !8569, size: 32, offset: 32)
!8576 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !8561, file: !804, line: 1711, baseType: !8577, size: 32, offset: 64)
!8577 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !818, line: 43, size: 32, elements: !8578)
!8578 = !{!8579}
!8579 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !8577, file: !818, line: 52, baseType: !22, size: 32)
!8580 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !8561, file: !804, line: 1712, baseType: !8581, size: 64, offset: 96)
!8581 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !752, line: 233, baseType: !8582)
!8582 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !752, line: 231, size: 64, elements: !8583)
!8583 = !{!8584}
!8584 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !8582, file: !752, line: 232, baseType: !8585, size: 64)
!8585 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !726, line: 48, baseType: !8586)
!8586 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !726, line: 37, size: 64, elements: !8587)
!8587 = !{!8588, !8594}
!8588 = !DIDerivedType(tag: DW_TAG_member, scope: !8586, file: !726, line: 38, baseType: !8589, size: 32)
!8589 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8586, file: !726, line: 38, size: 32, elements: !8590)
!8590 = !{!8591, !8593}
!8591 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !8589, file: !726, line: 39, baseType: !8592, size: 32)
!8592 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8586, size: 32)
!8593 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !8589, file: !726, line: 40, baseType: !8592, size: 32)
!8594 = !DIDerivedType(tag: DW_TAG_member, scope: !8586, file: !726, line: 42, baseType: !8595, size: 32, offset: 32)
!8595 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8586, file: !726, line: 42, size: 32, elements: !8596)
!8596 = !{!8597, !8598}
!8597 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !8595, file: !726, line: 43, baseType: !8592, size: 32)
!8598 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !8595, file: !726, line: 44, baseType: !8592, size: 32)
!8599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8600, size: 32)
!8600 = !DISubroutineType(types: !8601)
!8601 = !{!195, !193, !195}
!8602 = !{!8603, !8604, !8605}
!8603 = !DILocalVariable(name: "avail", arg: 1, scope: !8554, file: !965, line: 560, type: !8557)
!8604 = !DILocalVariable(name: "lines", arg: 2, scope: !8554, file: !965, line: 560, type: !8557)
!8605 = !DILocalVariable(name: "completion", arg: 3, scope: !8554, file: !965, line: 561, type: !8599)
!8606 = !DILocation(line: 0, scope: !8554)
!8607 = !DILocation(line: 566, column: 1, scope: !8554)
!8608 = distinct !DISubprogram(name: "imx_gpio_configure", scope: !1078, file: !1078, line: 40, type: !1000, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !974, retainedNodes: !8609)
!8609 = !{!8610, !8611, !8612, !8613, !8615, !8616, !8621, !8622}
!8610 = !DILocalVariable(name: "port", arg: 1, scope: !8608, file: !1078, line: 40, type: !1002)
!8611 = !DILocalVariable(name: "pin", arg: 2, scope: !8608, file: !1078, line: 40, type: !1017)
!8612 = !DILocalVariable(name: "flags", arg: 3, scope: !8608, file: !1078, line: 41, type: !1018)
!8613 = !DILocalVariable(name: "config", scope: !8608, file: !1078, line: 43, type: !8614)
!8614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1110, size: 32)
!8615 = !DILocalVariable(name: "base", scope: !8608, file: !1078, line: 44, type: !1115)
!8616 = !DILocalVariable(name: "pin_cfg", scope: !8608, file: !1078, line: 52, type: !8617)
!8617 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1131, line: 59, size: 160, elements: !8618)
!8618 = !{!8619, !8620}
!8619 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !8617, file: !1131, line: 60, baseType: !1130, size: 128)
!8620 = !DIDerivedType(tag: DW_TAG_member, name: "pin_ctrl_flags", scope: !8617, file: !1131, line: 61, baseType: !152, size: 32, offset: 128)
!8621 = !DILocalVariable(name: "gpio_cfg_reg", scope: !8608, file: !1078, line: 54, type: !630)
!8622 = !DILocalVariable(name: "reg", scope: !8608, file: !1078, line: 56, type: !152)
!8623 = !DILocation(line: 0, scope: !8608)
!8624 = !DILocation(line: 43, column: 47, scope: !8608)
!8625 = !DILocation(line: 44, column: 28, scope: !8608)
!8626 = !DILocation(line: 46, column: 35, scope: !8627)
!8627 = distinct !DILexicalBlock(scope: !8608, file: !1078, line: 46, column: 6)
!8628 = !DILocation(line: 50, column: 2, scope: !8629)
!8629 = distinct !DILexicalBlock(scope: !8630, file: !1078, line: 50, column: 2)
!8630 = distinct !DILexicalBlock(scope: !8608, file: !1078, line: 50, column: 2)
!8631 = !DILocation(line: 50, column: 2, scope: !8630)
!8632 = !DILocation(line: 50, column: 2, scope: !8633)
!8633 = distinct !DILexicalBlock(scope: !8629, file: !1078, line: 50, column: 2)
!8634 = !DILocation(line: 52, column: 2, scope: !8608)
!8635 = !DILocation(line: 52, column: 25, scope: !8608)
!8636 = !DILocation(line: 55, column: 32, scope: !8608)
!8637 = !DILocation(line: 55, column: 47, scope: !8608)
!8638 = !DILocation(line: 55, column: 3, scope: !8608)
!8639 = !DILocation(line: 56, column: 17, scope: !8608)
!8640 = !DILocation(line: 66, column: 13, scope: !8641)
!8641 = distinct !DILexicalBlock(scope: !8608, file: !1078, line: 66, column: 6)
!8642 = !DILocation(line: 66, column: 34, scope: !8641)
!8643 = !DILocation(line: 66, column: 6, scope: !8608)
!8644 = !DILocation(line: 70, column: 36, scope: !8645)
!8645 = distinct !DILexicalBlock(scope: !8608, file: !1078, line: 70, column: 6)
!8646 = !DILocation(line: 70, column: 14, scope: !8645)
!8647 = !DILocation(line: 70, column: 30, scope: !8645)
!8648 = !DILocation(line: 72, column: 7, scope: !8649)
!8649 = distinct !DILexicalBlock(scope: !8645, file: !1078, line: 70, column: 72)
!8650 = !DILocation(line: 73, column: 8, scope: !8651)
!8651 = distinct !DILexicalBlock(scope: !8652, file: !1078, line: 72, column: 38)
!8652 = distinct !DILexicalBlock(scope: !8649, file: !1078, line: 72, column: 7)
!8653 = !DILocation(line: 74, column: 3, scope: !8651)
!8654 = !DILocation(line: 75, column: 8, scope: !8655)
!8655 = distinct !DILexicalBlock(scope: !8652, file: !1078, line: 74, column: 10)
!8656 = !DILocation(line: 79, column: 7, scope: !8657)
!8657 = distinct !DILexicalBlock(scope: !8645, file: !1078, line: 77, column: 9)
!8658 = !DILocation(line: 0, scope: !8645)
!8659 = !DILocation(line: 84, column: 27, scope: !8608)
!8660 = !DILocation(line: 84, column: 26, scope: !8608)
!8661 = !DILocation(line: 84, column: 2, scope: !8608)
!8662 = !DILocation(line: 86, column: 10, scope: !8608)
!8663 = !DILocation(line: 86, column: 25, scope: !8608)
!8664 = !DILocation(line: 87, column: 2, scope: !8608)
!8665 = !DILocation(line: 98, column: 2, scope: !8608)
!8666 = !DILocation(line: 99, column: 2, scope: !8608)
!8667 = !DILocation(line: 101, column: 6, scope: !8608)
!8668 = !DILocation(line: 103, column: 14, scope: !8669)
!8669 = distinct !DILexicalBlock(scope: !8670, file: !1078, line: 103, column: 7)
!8670 = distinct !DILexicalBlock(scope: !8671, file: !1078, line: 101, column: 35)
!8671 = distinct !DILexicalBlock(scope: !8608, file: !1078, line: 101, column: 6)
!8672 = !DILocation(line: 103, column: 38, scope: !8669)
!8673 = !DILocation(line: 103, column: 7, scope: !8670)
!8674 = !DILocation(line: 105, column: 21, scope: !8675)
!8675 = distinct !DILexicalBlock(scope: !8669, file: !1078, line: 105, column: 14)
!8676 = !DILocation(line: 105, column: 46, scope: !8675)
!8677 = !DILocation(line: 105, column: 14, scope: !8669)
!8678 = !DILocation(line: 0, scope: !8669)
!8679 = !DILocation(line: 110, column: 3, scope: !8670)
!8680 = !DILocation(line: 111, column: 2, scope: !8670)
!8681 = !DILocation(line: 113, column: 3, scope: !8682)
!8682 = distinct !DILexicalBlock(scope: !8671, file: !1078, line: 111, column: 9)
!8683 = !DILocation(line: 117, column: 1, scope: !8608)
!8684 = distinct !DISubprogram(name: "imx_gpio_port_get_raw", scope: !1078, file: !1078, line: 119, type: !8685, scopeLine: 120, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !974, retainedNodes: !8687)
!8685 = !DISubroutineType(types: !8686)
!8686 = !{!107, !1002, !1403}
!8687 = !{!8688, !8689, !8690, !8691}
!8688 = !DILocalVariable(name: "port", arg: 1, scope: !8684, file: !1078, line: 119, type: !1002)
!8689 = !DILocalVariable(name: "value", arg: 2, scope: !8684, file: !1078, line: 119, type: !1403)
!8690 = !DILocalVariable(name: "config", scope: !8684, file: !1078, line: 121, type: !8614)
!8691 = !DILocalVariable(name: "base", scope: !8684, file: !1078, line: 122, type: !1115)
!8692 = !DILocation(line: 0, scope: !8684)
!8693 = !DILocation(line: 121, column: 47, scope: !8684)
!8694 = !DILocation(line: 122, column: 28, scope: !8684)
!8695 = !DILocation(line: 124, column: 11, scope: !8684)
!8696 = !DILocation(line: 124, column: 9, scope: !8684)
!8697 = !DILocation(line: 126, column: 2, scope: !8684)
!8698 = distinct !DISubprogram(name: "imx_gpio_port_set_masked_raw", scope: !1078, file: !1078, line: 129, type: !1027, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !974, retainedNodes: !8699)
!8699 = !{!8700, !8701, !8702, !8703, !8704}
!8700 = !DILocalVariable(name: "port", arg: 1, scope: !8698, file: !1078, line: 129, type: !1002)
!8701 = !DILocalVariable(name: "mask", arg: 2, scope: !8698, file: !1078, line: 130, type: !1029)
!8702 = !DILocalVariable(name: "value", arg: 3, scope: !8698, file: !1078, line: 131, type: !1024)
!8703 = !DILocalVariable(name: "config", scope: !8698, file: !1078, line: 133, type: !8614)
!8704 = !DILocalVariable(name: "base", scope: !8698, file: !1078, line: 134, type: !1115)
!8705 = !DILocation(line: 0, scope: !8698)
!8706 = !DILocation(line: 133, column: 47, scope: !8698)
!8707 = !DILocation(line: 134, column: 28, scope: !8698)
!8708 = !DILocation(line: 137, column: 5, scope: !8698)
!8709 = !DILocation(line: 137, column: 32, scope: !8698)
!8710 = !DILocation(line: 137, column: 30, scope: !8698)
!8711 = !DILocation(line: 137, column: 48, scope: !8698)
!8712 = !DILocation(line: 137, column: 39, scope: !8698)
!8713 = !DILocation(line: 136, column: 2, scope: !8698)
!8714 = !DILocation(line: 139, column: 2, scope: !8698)
!8715 = distinct !DISubprogram(name: "imx_gpio_port_set_bits_raw", scope: !1078, file: !1078, line: 142, type: !1032, scopeLine: 144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !974, retainedNodes: !8716)
!8716 = !{!8717, !8718, !8719, !8720}
!8717 = !DILocalVariable(name: "port", arg: 1, scope: !8715, file: !1078, line: 142, type: !1002)
!8718 = !DILocalVariable(name: "pins", arg: 2, scope: !8715, file: !1078, line: 143, type: !1029)
!8719 = !DILocalVariable(name: "config", scope: !8715, file: !1078, line: 145, type: !8614)
!8720 = !DILocalVariable(name: "base", scope: !8715, file: !1078, line: 146, type: !1115)
!8721 = !DILocation(line: 0, scope: !8715)
!8722 = !DILocation(line: 145, column: 47, scope: !8715)
!8723 = !DILocation(line: 146, column: 28, scope: !8715)
!8724 = !DILocation(line: 148, column: 29, scope: !8715)
!8725 = !DILocation(line: 148, column: 54, scope: !8715)
!8726 = !DILocation(line: 148, column: 2, scope: !8715)
!8727 = !DILocation(line: 150, column: 2, scope: !8715)
!8728 = distinct !DISubprogram(name: "imx_gpio_port_clear_bits_raw", scope: !1078, file: !1078, line: 153, type: !1032, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !974, retainedNodes: !8729)
!8729 = !{!8730, !8731, !8732, !8733}
!8730 = !DILocalVariable(name: "port", arg: 1, scope: !8728, file: !1078, line: 153, type: !1002)
!8731 = !DILocalVariable(name: "pins", arg: 2, scope: !8728, file: !1078, line: 154, type: !1029)
!8732 = !DILocalVariable(name: "config", scope: !8728, file: !1078, line: 156, type: !8614)
!8733 = !DILocalVariable(name: "base", scope: !8728, file: !1078, line: 157, type: !1115)
!8734 = !DILocation(line: 0, scope: !8728)
!8735 = !DILocation(line: 156, column: 47, scope: !8728)
!8736 = !DILocation(line: 157, column: 28, scope: !8728)
!8737 = !DILocation(line: 159, column: 29, scope: !8728)
!8738 = !DILocation(line: 159, column: 56, scope: !8728)
!8739 = !DILocation(line: 159, column: 54, scope: !8728)
!8740 = !DILocation(line: 159, column: 2, scope: !8728)
!8741 = !DILocation(line: 161, column: 2, scope: !8728)
!8742 = distinct !DISubprogram(name: "imx_gpio_port_toggle_bits", scope: !1078, file: !1078, line: 164, type: !1032, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !974, retainedNodes: !8743)
!8743 = !{!8744, !8745, !8746, !8747}
!8744 = !DILocalVariable(name: "port", arg: 1, scope: !8742, file: !1078, line: 164, type: !1002)
!8745 = !DILocalVariable(name: "pins", arg: 2, scope: !8742, file: !1078, line: 165, type: !1029)
!8746 = !DILocalVariable(name: "config", scope: !8742, file: !1078, line: 167, type: !8614)
!8747 = !DILocalVariable(name: "base", scope: !8742, file: !1078, line: 168, type: !1115)
!8748 = !DILocation(line: 0, scope: !8742)
!8749 = !DILocation(line: 167, column: 47, scope: !8742)
!8750 = !DILocation(line: 168, column: 28, scope: !8742)
!8751 = !DILocation(line: 170, column: 29, scope: !8742)
!8752 = !DILocation(line: 170, column: 54, scope: !8742)
!8753 = !DILocation(line: 170, column: 2, scope: !8742)
!8754 = !DILocation(line: 172, column: 2, scope: !8742)
!8755 = distinct !DISubprogram(name: "imx_gpio_pin_interrupt_configure", scope: !1078, file: !1078, line: 175, type: !1038, scopeLine: 179, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !974, retainedNodes: !8756)
!8756 = !{!8757, !8758, !8759, !8760, !8761, !8762, !8763, !8764, !8765, !8766}
!8757 = !DILocalVariable(name: "port", arg: 1, scope: !8755, file: !1078, line: 175, type: !1002)
!8758 = !DILocalVariable(name: "pin", arg: 2, scope: !8755, file: !1078, line: 176, type: !1017)
!8759 = !DILocalVariable(name: "mode", arg: 3, scope: !8755, file: !1078, line: 177, type: !977)
!8760 = !DILocalVariable(name: "trig", arg: 4, scope: !8755, file: !1078, line: 178, type: !983)
!8761 = !DILocalVariable(name: "config", scope: !8755, file: !1078, line: 180, type: !8614)
!8762 = !DILocalVariable(name: "base", scope: !8755, file: !1078, line: 181, type: !1115)
!8763 = !DILocalVariable(name: "icr_reg", scope: !8755, file: !1078, line: 182, type: !630)
!8764 = !DILocalVariable(name: "key", scope: !8755, file: !1078, line: 183, type: !32)
!8765 = !DILocalVariable(name: "icr_val", scope: !8755, file: !1078, line: 184, type: !152)
!8766 = !DILocalVariable(name: "shift", scope: !8755, file: !1078, line: 185, type: !195)
!8767 = !DILocation(line: 0, scope: !8755)
!8768 = !DILocation(line: 180, column: 47, scope: !8755)
!8769 = !DILocation(line: 181, column: 28, scope: !8755)
!8770 = !DILocation(line: 187, column: 14, scope: !8771)
!8771 = distinct !DILexicalBlock(scope: !8755, file: !1078, line: 187, column: 6)
!8772 = !DILocation(line: 187, column: 21, scope: !8771)
!8773 = !DILocation(line: 187, column: 19, scope: !8771)
!8774 = !DILocation(line: 187, column: 31, scope: !8771)
!8775 = !DILocation(line: 188, column: 6, scope: !8771)
!8776 = !DILocation(line: 193, column: 12, scope: !8777)
!8777 = distinct !DILexicalBlock(scope: !8755, file: !1078, line: 193, column: 6)
!8778 = !DILocation(line: 193, column: 35, scope: !8777)
!8779 = !DILocation(line: 195, column: 42, scope: !8780)
!8780 = distinct !DILexicalBlock(scope: !8777, file: !1078, line: 195, column: 13)
!8781 = !DILocation(line: 198, column: 19, scope: !8782)
!8782 = distinct !DILexicalBlock(scope: !8780, file: !1078, line: 198, column: 13)
!8783 = !DILocation(line: 198, column: 43, scope: !8782)
!8784 = !DILocation(line: 0, scope: !8777)
!8785 = !DILocation(line: 205, column: 10, scope: !8786)
!8786 = distinct !DILexicalBlock(scope: !8755, file: !1078, line: 205, column: 6)
!8787 = !DILocation(line: 205, column: 6, scope: !8755)
!8788 = !DILocation(line: 206, column: 14, scope: !8789)
!8789 = distinct !DILexicalBlock(scope: !8786, file: !1078, line: 205, column: 17)
!8790 = !DILocation(line: 207, column: 21, scope: !8789)
!8791 = !DILocation(line: 208, column: 2, scope: !8789)
!8792 = !DILocation(line: 208, column: 17, scope: !8793)
!8793 = distinct !DILexicalBlock(scope: !8786, file: !1078, line: 208, column: 13)
!8794 = !DILocation(line: 208, column: 13, scope: !8786)
!8795 = !DILocation(line: 209, column: 14, scope: !8796)
!8796 = distinct !DILexicalBlock(scope: !8793, file: !1078, line: 208, column: 24)
!8797 = !DILocation(line: 210, column: 21, scope: !8796)
!8798 = !DILocation(line: 0, scope: !8786)
!8799 = !DILocation(line: 55, column: 2, scope: !8800, inlinedAt: !8806)
!8800 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6121, file: !6121, line: 42, type: !8801, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !974, retainedNodes: !8803)
!8801 = !DISubroutineType(types: !8802)
!8802 = !{!32}
!8803 = !{!8804, !8805}
!8804 = !DILocalVariable(name: "key", scope: !8800, file: !6121, line: 44, type: !32)
!8805 = !DILocalVariable(name: "tmp", scope: !8800, file: !6121, line: 53, type: !32)
!8806 = distinct !DILocation(line: 215, column: 8, scope: !8755)
!8807 = !{i64 3056042}
!8808 = !DILocation(line: 0, scope: !8800, inlinedAt: !8806)
!8809 = !DILocation(line: 217, column: 14, scope: !8755)
!8810 = !DILocation(line: 217, column: 33, scope: !8755)
!8811 = !DILocation(line: 217, column: 30, scope: !8755)
!8812 = !DILocation(line: 217, column: 25, scope: !8755)
!8813 = !DILocation(line: 217, column: 23, scope: !8755)
!8814 = !DILocation(line: 217, column: 52, scope: !8755)
!8815 = !DILocation(line: 217, column: 41, scope: !8755)
!8816 = !DILocation(line: 217, column: 11, scope: !8755)
!8817 = !DILocation(line: 219, column: 2, scope: !8755)
!8818 = !DILocation(line: 220, column: 2, scope: !8755)
!8819 = !DILocation(line: 221, column: 2, scope: !8755)
!8820 = !DILocalVariable(name: "key", arg: 1, scope: !8821, file: !6121, line: 84, type: !32)
!8821 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6121, file: !6121, line: 84, type: !5951, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !974, retainedNodes: !8822)
!8822 = !{!8820}
!8823 = !DILocation(line: 0, scope: !8821, inlinedAt: !8824)
!8824 = distinct !DILocation(line: 223, column: 2, scope: !8755)
!8825 = !DILocation(line: 95, column: 2, scope: !8821, inlinedAt: !8824)
!8826 = !{i64 3056859}
!8827 = !DILocation(line: 225, column: 2, scope: !8755)
!8828 = !DILocation(line: 226, column: 1, scope: !8755)
!8829 = distinct !DISubprogram(name: "imx_gpio_manage_callback", scope: !1078, file: !1078, line: 228, type: !1042, scopeLine: 230, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !974, retainedNodes: !8830)
!8830 = !{!8831, !8832, !8833, !8834}
!8831 = !DILocalVariable(name: "port", arg: 1, scope: !8829, file: !1078, line: 228, type: !1002)
!8832 = !DILocalVariable(name: "cb", arg: 2, scope: !8829, file: !1078, line: 229, type: !1044)
!8833 = !DILocalVariable(name: "set", arg: 3, scope: !8829, file: !1078, line: 229, type: !145)
!8834 = !DILocalVariable(name: "data", scope: !8829, file: !1078, line: 231, type: !8835)
!8835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1096, size: 32)
!8836 = !DILocation(line: 0, scope: !8829)
!8837 = !DILocation(line: 231, column: 37, scope: !8829)
!8838 = !DILocation(line: 233, column: 37, scope: !8829)
!8839 = !DILocation(line: 233, column: 9, scope: !8829)
!8840 = !DILocation(line: 233, column: 2, scope: !8829)
!8841 = distinct !DISubprogram(name: "gpio_manage_callback", scope: !8842, file: !8842, line: 38, type: !8843, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !974, retainedNodes: !8846)
!8842 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio/gpio_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8843 = !DISubroutineType(types: !8844)
!8844 = !{!107, !8845, !1044, !145}
!8845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1100, size: 32)
!8846 = !{!8847, !8848, !8849}
!8847 = !DILocalVariable(name: "callbacks", arg: 1, scope: !8841, file: !8842, line: 38, type: !8845)
!8848 = !DILocalVariable(name: "callback", arg: 2, scope: !8841, file: !8842, line: 39, type: !1044)
!8849 = !DILocalVariable(name: "set", arg: 3, scope: !8841, file: !8842, line: 40, type: !145)
!8850 = !DILocation(line: 0, scope: !8841)
!8851 = !DILocation(line: 42, column: 2, scope: !8852)
!8852 = distinct !DILexicalBlock(scope: !8853, file: !8842, line: 42, column: 2)
!8853 = distinct !DILexicalBlock(scope: !8841, file: !8842, line: 42, column: 2)
!8854 = !DILocation(line: 42, column: 2, scope: !8853)
!8855 = !DILocation(line: 42, column: 2, scope: !8856)
!8856 = distinct !DILexicalBlock(scope: !8852, file: !8842, line: 42, column: 2)
!8857 = !DILocation(line: 43, column: 2, scope: !8858)
!8858 = distinct !DILexicalBlock(scope: !8859, file: !8842, line: 43, column: 2)
!8859 = distinct !DILexicalBlock(scope: !8841, file: !8842, line: 43, column: 2)
!8860 = !DILocation(line: 43, column: 2, scope: !8859)
!8861 = !DILocation(line: 43, column: 2, scope: !8862)
!8862 = distinct !DILexicalBlock(scope: !8858, file: !8842, line: 43, column: 2)
!8863 = !DILocation(line: 45, column: 7, scope: !8864)
!8864 = distinct !DILexicalBlock(scope: !8841, file: !8842, line: 45, column: 6)
!8865 = !DILocation(line: 45, column: 6, scope: !8841)
!8866 = !DILocation(line: 46, column: 56, scope: !8867)
!8867 = distinct !DILexicalBlock(scope: !8868, file: !8842, line: 46, column: 7)
!8868 = distinct !DILexicalBlock(scope: !8864, file: !8842, line: 45, column: 38)
!8869 = !DILocation(line: 46, column: 8, scope: !8867)
!8870 = !DILocation(line: 46, column: 7, scope: !8868)
!8871 = !DILocation(line: 51, column: 13, scope: !8864)
!8872 = !DILocation(line: 56, column: 43, scope: !8873)
!8873 = distinct !DILexicalBlock(scope: !8874, file: !8842, line: 55, column: 11)
!8874 = distinct !DILexicalBlock(scope: !8841, file: !8842, line: 55, column: 6)
!8875 = !DILocation(line: 56, column: 3, scope: !8873)
!8876 = !DILocation(line: 57, column: 2, scope: !8873)
!8877 = !DILocation(line: 60, column: 1, scope: !8841)
!8878 = distinct !DISubprogram(name: "sys_slist_is_empty", scope: !1049, file: !1049, line: 261, type: !8879, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !974, retainedNodes: !8881)
!8879 = !DISubroutineType(types: !8880)
!8880 = !{!145, !8845}
!8881 = !{!8882}
!8882 = !DILocalVariable(name: "list", arg: 1, scope: !8878, file: !1049, line: 261, type: !8845)
!8883 = !DILocation(line: 0, scope: !8878)
!8884 = !DILocation(line: 261, column: 1, scope: !8878)
!8885 = distinct !DISubprogram(name: "sys_slist_find_and_remove", scope: !1049, file: !1049, line: 417, type: !8886, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !974, retainedNodes: !8888)
!8886 = !DISubroutineType(types: !8887)
!8887 = !{!145, !8845, !1104}
!8888 = !{!8889, !8890, !8891, !8892}
!8889 = !DILocalVariable(name: "list", arg: 1, scope: !8885, file: !1049, line: 417, type: !8845)
!8890 = !DILocalVariable(name: "node", arg: 2, scope: !8885, file: !1049, line: 417, type: !1104)
!8891 = !DILocalVariable(name: "prev", scope: !8885, file: !1049, line: 417, type: !1104)
!8892 = !DILocalVariable(name: "test", scope: !8885, file: !1049, line: 417, type: !1104)
!8893 = !DILocation(line: 0, scope: !8885)
!8894 = !DILocation(line: 417, column: 1, scope: !8895)
!8895 = distinct !DILexicalBlock(scope: !8885, file: !1049, line: 417, column: 1)
!8896 = !DILocation(line: 417, column: 1, scope: !8897)
!8897 = distinct !DILexicalBlock(scope: !8895, file: !1049, line: 417, column: 1)
!8898 = !DILocation(line: 417, column: 1, scope: !8899)
!8899 = distinct !DILexicalBlock(scope: !8900, file: !1049, line: 417, column: 1)
!8900 = distinct !DILexicalBlock(scope: !8897, file: !1049, line: 417, column: 1)
!8901 = !DILocation(line: 417, column: 1, scope: !8900)
!8902 = distinct !{!8902, !8894, !8894}
!8903 = !DILocation(line: 417, column: 1, scope: !8904)
!8904 = distinct !DILexicalBlock(scope: !8899, file: !1049, line: 417, column: 1)
!8905 = !DILocation(line: 417, column: 1, scope: !8885)
!8906 = distinct !DISubprogram(name: "sys_slist_prepend", scope: !1049, file: !1049, line: 298, type: !8907, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !974, retainedNodes: !8909)
!8907 = !DISubroutineType(types: !8908)
!8908 = !{null, !8845, !1104}
!8909 = !{!8910, !8911}
!8910 = !DILocalVariable(name: "list", arg: 1, scope: !8906, file: !1049, line: 298, type: !8845)
!8911 = !DILocalVariable(name: "node", arg: 2, scope: !8906, file: !1049, line: 298, type: !1104)
!8912 = !DILocation(line: 0, scope: !8906)
!8913 = !DILocation(line: 298, column: 1, scope: !8906)
!8914 = !DILocation(line: 298, column: 1, scope: !8915)
!8915 = distinct !DILexicalBlock(scope: !8906, file: !1049, line: 298, column: 1)
!8916 = !DILocation(line: 298, column: 1, scope: !8917)
!8917 = distinct !DILexicalBlock(scope: !8915, file: !1049, line: 298, column: 1)
!8918 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !1049, file: !1049, line: 231, type: !8919, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !974, retainedNodes: !8921)
!8919 = !DISubroutineType(types: !8920)
!8920 = !{!1104, !8845}
!8921 = !{!8922}
!8922 = !DILocalVariable(name: "list", arg: 1, scope: !8918, file: !1049, line: 231, type: !8845)
!8923 = !DILocation(line: 0, scope: !8918)
!8924 = !DILocation(line: 233, column: 15, scope: !8918)
!8925 = !DILocation(line: 233, column: 2, scope: !8918)
!8926 = distinct !DISubprogram(name: "z_snode_next_set", scope: !1049, file: !1049, line: 209, type: !8927, scopeLine: 210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !974, retainedNodes: !8929)
!8927 = !DISubroutineType(types: !8928)
!8928 = !{null, !1104, !1104}
!8929 = !{!8930, !8931}
!8930 = !DILocalVariable(name: "parent", arg: 1, scope: !8926, file: !1049, line: 209, type: !1104)
!8931 = !DILocalVariable(name: "child", arg: 2, scope: !8926, file: !1049, line: 209, type: !1104)
!8932 = !DILocation(line: 0, scope: !8926)
!8933 = !DILocation(line: 211, column: 10, scope: !8926)
!8934 = !DILocation(line: 211, column: 15, scope: !8926)
!8935 = !DILocation(line: 212, column: 1, scope: !8926)
!8936 = distinct !DISubprogram(name: "z_slist_head_set", scope: !1049, file: !1049, line: 214, type: !8907, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !974, retainedNodes: !8937)
!8937 = !{!8938, !8939}
!8938 = !DILocalVariable(name: "list", arg: 1, scope: !8936, file: !1049, line: 214, type: !8845)
!8939 = !DILocalVariable(name: "node", arg: 2, scope: !8936, file: !1049, line: 214, type: !1104)
!8940 = !DILocation(line: 0, scope: !8936)
!8941 = !DILocation(line: 216, column: 8, scope: !8936)
!8942 = !DILocation(line: 216, column: 13, scope: !8936)
!8943 = !DILocation(line: 217, column: 1, scope: !8936)
!8944 = distinct !DISubprogram(name: "sys_slist_peek_tail", scope: !1049, file: !1049, line: 243, type: !8919, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !974, retainedNodes: !8945)
!8945 = !{!8946}
!8946 = !DILocalVariable(name: "list", arg: 1, scope: !8944, file: !1049, line: 243, type: !8845)
!8947 = !DILocation(line: 0, scope: !8944)
!8948 = !DILocation(line: 245, column: 15, scope: !8944)
!8949 = !DILocation(line: 245, column: 2, scope: !8944)
!8950 = distinct !DISubprogram(name: "z_slist_tail_set", scope: !1049, file: !1049, line: 219, type: !8907, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !974, retainedNodes: !8951)
!8951 = !{!8952, !8953}
!8952 = !DILocalVariable(name: "list", arg: 1, scope: !8950, file: !1049, line: 219, type: !8845)
!8953 = !DILocalVariable(name: "node", arg: 2, scope: !8950, file: !1049, line: 219, type: !1104)
!8954 = !DILocation(line: 0, scope: !8950)
!8955 = !DILocation(line: 221, column: 8, scope: !8950)
!8956 = !DILocation(line: 221, column: 13, scope: !8950)
!8957 = !DILocation(line: 222, column: 1, scope: !8950)
!8958 = distinct !DISubprogram(name: "sys_slist_remove", scope: !1049, file: !1049, line: 401, type: !8959, scopeLine: 401, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !974, retainedNodes: !8961)
!8959 = !DISubroutineType(types: !8960)
!8960 = !{null, !8845, !1104, !1104}
!8961 = !{!8962, !8963, !8964}
!8962 = !DILocalVariable(name: "list", arg: 1, scope: !8958, file: !1049, line: 401, type: !8845)
!8963 = !DILocalVariable(name: "prev_node", arg: 2, scope: !8958, file: !1049, line: 401, type: !1104)
!8964 = !DILocalVariable(name: "node", arg: 3, scope: !8958, file: !1049, line: 401, type: !1104)
!8965 = !DILocation(line: 0, scope: !8958)
!8966 = !DILocation(line: 401, column: 1, scope: !8967)
!8967 = distinct !DILexicalBlock(scope: !8958, file: !1049, line: 401, column: 1)
!8968 = !DILocation(line: 0, scope: !8967)
!8969 = !DILocation(line: 401, column: 1, scope: !8958)
!8970 = !DILocation(line: 401, column: 1, scope: !8971)
!8971 = distinct !DILexicalBlock(scope: !8967, file: !1049, line: 401, column: 1)
!8972 = !DILocation(line: 401, column: 1, scope: !8973)
!8973 = distinct !DILexicalBlock(scope: !8971, file: !1049, line: 401, column: 1)
!8974 = !DILocation(line: 401, column: 1, scope: !8975)
!8975 = distinct !DILexicalBlock(scope: !8973, file: !1049, line: 401, column: 1)
!8976 = !DILocation(line: 401, column: 1, scope: !8977)
!8977 = distinct !DILexicalBlock(scope: !8967, file: !1049, line: 401, column: 1)
!8978 = !DILocation(line: 401, column: 1, scope: !8979)
!8979 = distinct !DILexicalBlock(scope: !8977, file: !1049, line: 401, column: 1)
!8980 = !DILocation(line: 401, column: 1, scope: !8981)
!8981 = distinct !DILexicalBlock(scope: !8979, file: !1049, line: 401, column: 1)
!8982 = distinct !DISubprogram(name: "sys_slist_peek_next", scope: !1049, file: !1049, line: 285, type: !8983, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !974, retainedNodes: !8985)
!8983 = !DISubroutineType(types: !8984)
!8984 = !{!1104, !1104}
!8985 = !{!8986}
!8986 = !DILocalVariable(name: "node", arg: 1, scope: !8982, file: !1049, line: 285, type: !1104)
!8987 = !DILocation(line: 0, scope: !8982)
!8988 = !DILocation(line: 285, column: 1, scope: !8982)
!8989 = distinct !DISubprogram(name: "sys_slist_peek_next_no_check", scope: !1049, file: !1049, line: 274, type: !8983, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !974, retainedNodes: !8990)
!8990 = !{!8991}
!8991 = !DILocalVariable(name: "node", arg: 1, scope: !8989, file: !1049, line: 274, type: !1104)
!8992 = !DILocation(line: 0, scope: !8989)
!8993 = !DILocation(line: 274, column: 1, scope: !8989)
!8994 = distinct !DISubprogram(name: "z_snode_next_peek", scope: !1049, file: !1049, line: 204, type: !8983, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !974, retainedNodes: !8995)
!8995 = !{!8996}
!8996 = !DILocalVariable(name: "node", arg: 1, scope: !8994, file: !1049, line: 204, type: !1104)
!8997 = !DILocation(line: 0, scope: !8994)
!8998 = !DILocation(line: 206, column: 15, scope: !8994)
!8999 = !DILocation(line: 206, column: 2, scope: !8994)
!9000 = distinct !DISubprogram(name: "GPIO_ReadPortInput", scope: !989, file: !989, line: 131, type: !9001, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !974, retainedNodes: !9003)
!9001 = !DISubroutineType(types: !9002)
!9002 = !{!152, !1115}
!9003 = !{!9004}
!9004 = !DILocalVariable(name: "base", arg: 1, scope: !9000, file: !989, line: 131, type: !1115)
!9005 = !DILocation(line: 0, scope: !9000)
!9006 = !DILocation(line: 133, column: 12, scope: !9000)
!9007 = !DILocation(line: 133, column: 5, scope: !9000)
!9008 = distinct !DISubprogram(name: "GPIO_WritePortOutput", scope: !989, file: !989, line: 178, type: !9009, scopeLine: 179, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !974, retainedNodes: !9011)
!9009 = !DISubroutineType(types: !9010)
!9010 = !{null, !1115, !152}
!9011 = !{!9012, !9013}
!9012 = !DILocalVariable(name: "base", arg: 1, scope: !9008, file: !989, line: 178, type: !1115)
!9013 = !DILocalVariable(name: "portVal", arg: 2, scope: !9008, file: !989, line: 178, type: !152)
!9014 = !DILocation(line: 0, scope: !9008)
!9015 = !DILocation(line: 180, column: 5, scope: !9008)
!9016 = !DILocation(line: 180, column: 23, scope: !9008)
!9017 = !DILocation(line: 181, column: 1, scope: !9008)
!9018 = distinct !DISubprogram(name: "imx_gpio_port_isr", scope: !1078, file: !1078, line: 236, type: !9019, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !974, retainedNodes: !9021)
!9019 = !DISubroutineType(types: !9020)
!9020 = !{null, !1002}
!9021 = !{!9022, !9023, !9024, !9025}
!9022 = !DILocalVariable(name: "port", arg: 1, scope: !9018, file: !1078, line: 236, type: !1002)
!9023 = !DILocalVariable(name: "config", scope: !9018, file: !1078, line: 238, type: !8614)
!9024 = !DILocalVariable(name: "data", scope: !9018, file: !1078, line: 239, type: !8835)
!9025 = !DILocalVariable(name: "int_status", scope: !9018, file: !1078, line: 240, type: !152)
!9026 = !DILocation(line: 0, scope: !9018)
!9027 = !DILocation(line: 238, column: 47, scope: !9018)
!9028 = !DILocation(line: 239, column: 37, scope: !9018)
!9029 = !DILocation(line: 242, column: 23, scope: !9018)
!9030 = !DILocation(line: 242, column: 29, scope: !9018)
!9031 = !DILocation(line: 244, column: 20, scope: !9018)
!9032 = !DILocation(line: 246, column: 29, scope: !9018)
!9033 = !DILocation(line: 246, column: 2, scope: !9018)
!9034 = !DILocation(line: 247, column: 1, scope: !9018)
!9035 = distinct !DISubprogram(name: "gpio_fire_callbacks", scope: !8842, file: !8842, line: 69, type: !9036, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !974, retainedNodes: !9038)
!9036 = !DISubroutineType(types: !9037)
!9037 = !{null, !8845, !1002, !152}
!9038 = !{!9039, !9040, !9041, !9042, !9043}
!9039 = !DILocalVariable(name: "list", arg: 1, scope: !9035, file: !8842, line: 69, type: !8845)
!9040 = !DILocalVariable(name: "port", arg: 2, scope: !9035, file: !8842, line: 70, type: !1002)
!9041 = !DILocalVariable(name: "pins", arg: 3, scope: !9035, file: !8842, line: 71, type: !152)
!9042 = !DILocalVariable(name: "cb", scope: !9035, file: !8842, line: 73, type: !1044)
!9043 = !DILocalVariable(name: "tmp", scope: !9035, file: !8842, line: 73, type: !1044)
!9044 = !DILocation(line: 0, scope: !9035)
!9045 = !DILocation(line: 75, column: 2, scope: !9046)
!9046 = distinct !DILexicalBlock(scope: !9035, file: !8842, line: 75, column: 2)
!9047 = !DILocation(line: 0, scope: !9046)
!9048 = !DILocation(line: 76, column: 11, scope: !9049)
!9049 = distinct !DILexicalBlock(scope: !9050, file: !8842, line: 76, column: 7)
!9050 = distinct !DILexicalBlock(scope: !9051, file: !8842, line: 75, column: 57)
!9051 = distinct !DILexicalBlock(scope: !9046, file: !8842, line: 75, column: 2)
!9052 = !DILocation(line: 76, column: 20, scope: !9049)
!9053 = !DILocation(line: 76, column: 7, scope: !9050)
!9054 = !DILocation(line: 77, column: 4, scope: !9055)
!9055 = distinct !DILexicalBlock(scope: !9056, file: !8842, line: 77, column: 4)
!9056 = distinct !DILexicalBlock(scope: !9057, file: !8842, line: 77, column: 4)
!9057 = distinct !DILexicalBlock(scope: !9049, file: !8842, line: 76, column: 28)
!9058 = !DILocation(line: 77, column: 4, scope: !9056)
!9059 = !DILocation(line: 77, column: 4, scope: !9060)
!9060 = distinct !DILexicalBlock(scope: !9055, file: !8842, line: 77, column: 4)
!9061 = !DILocation(line: 78, column: 4, scope: !9057)
!9062 = !DILocation(line: 79, column: 3, scope: !9057)
!9063 = !DILocation(line: 75, column: 2, scope: !9051)
!9064 = !DILocation(line: 81, column: 1, scope: !9035)
!9065 = !DILocation(line: 0, scope: !1143)
!9066 = !DILocation(line: 318, column: 1, scope: !9067)
!9067 = distinct !DILexicalBlock(scope: !1143, file: !1078, line: 318, column: 1)
!9068 = !DILocation(line: 318, column: 1, scope: !1143)
!9069 = !DILocation(line: 318, column: 1, scope: !9070)
!9070 = distinct !DILexicalBlock(scope: !1143, file: !1078, line: 318, column: 1)
!9071 = distinct !DISubprogram(name: "uart_imx_poll_in", scope: !1368, file: !1368, line: 114, type: !1266, scopeLine: 115, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1171, retainedNodes: !9072)
!9072 = !{!9073, !9074, !9075, !9076}
!9073 = !DILocalVariable(name: "dev", arg: 1, scope: !9071, file: !1368, line: 114, type: !1268)
!9074 = !DILocalVariable(name: "c", arg: 2, scope: !9071, file: !1368, line: 114, type: !902)
!9075 = !DILocalVariable(name: "uart", scope: !9071, file: !1368, line: 116, type: !1339)
!9076 = !DILocalVariable(name: "ret", scope: !9071, file: !1368, line: 117, type: !107)
!9077 = !DILocation(line: 0, scope: !9071)
!9078 = !DILocation(line: 116, column: 20, scope: !9071)
!9079 = !DILocation(line: 119, column: 6, scope: !9080)
!9080 = distinct !DILexicalBlock(scope: !9071, file: !1368, line: 119, column: 6)
!9081 = !DILocation(line: 119, column: 6, scope: !9071)
!9082 = !DILocation(line: 120, column: 8, scope: !9083)
!9083 = distinct !DILexicalBlock(scope: !9080, file: !1368, line: 119, column: 55)
!9084 = !DILocation(line: 120, column: 6, scope: !9083)
!9085 = !DILocation(line: 122, column: 7, scope: !9086)
!9086 = distinct !DILexicalBlock(scope: !9083, file: !1368, line: 122, column: 7)
!9087 = !DILocation(line: 122, column: 7, scope: !9083)
!9088 = !DILocation(line: 123, column: 4, scope: !9089)
!9089 = distinct !DILexicalBlock(scope: !9086, file: !1368, line: 122, column: 54)
!9090 = !DILocation(line: 124, column: 3, scope: !9089)
!9091 = !DILocation(line: 128, column: 2, scope: !9071)
!9092 = distinct !DISubprogram(name: "uart_imx_poll_out", scope: !1368, file: !1368, line: 105, type: !1285, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1171, retainedNodes: !9093)
!9093 = !{!9094, !9095, !9096}
!9094 = !DILocalVariable(name: "dev", arg: 1, scope: !9092, file: !1368, line: 105, type: !1268)
!9095 = !DILocalVariable(name: "c", arg: 2, scope: !9092, file: !1368, line: 105, type: !196)
!9096 = !DILocalVariable(name: "uart", scope: !9092, file: !1368, line: 107, type: !1339)
!9097 = !DILocation(line: 0, scope: !9092)
!9098 = !DILocation(line: 107, column: 20, scope: !9092)
!9099 = !DILocation(line: 109, column: 2, scope: !9092)
!9100 = !DILocation(line: 109, column: 10, scope: !9092)
!9101 = distinct !{!9101, !9099, !9102}
!9102 = !DILocation(line: 110, column: 2, scope: !9092)
!9103 = !DILocation(line: 111, column: 2, scope: !9092)
!9104 = !DILocation(line: 112, column: 1, scope: !9092)
!9105 = distinct !DISubprogram(name: "uart_imx_fifo_fill", scope: !1368, file: !1368, line: 133, type: !1311, scopeLine: 136, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1171, retainedNodes: !9106)
!9106 = !{!9107, !9108, !9109, !9110, !9111}
!9107 = !DILocalVariable(name: "dev", arg: 1, scope: !9105, file: !1368, line: 133, type: !1268)
!9108 = !DILocalVariable(name: "tx_data", arg: 2, scope: !9105, file: !1368, line: 134, type: !933)
!9109 = !DILocalVariable(name: "size", arg: 3, scope: !9105, file: !1368, line: 135, type: !107)
!9110 = !DILocalVariable(name: "uart", scope: !9105, file: !1368, line: 137, type: !1339)
!9111 = !DILocalVariable(name: "num_tx", scope: !9105, file: !1368, line: 138, type: !32)
!9112 = !DILocation(line: 0, scope: !9105)
!9113 = !DILocation(line: 137, column: 20, scope: !9105)
!9114 = !DILocation(line: 140, column: 26, scope: !9105)
!9115 = !DILocation(line: 140, column: 31, scope: !9105)
!9116 = !DILocation(line: 141, column: 6, scope: !9105)
!9117 = !DILocation(line: 140, column: 2, scope: !9105)
!9118 = !DILocation(line: 143, column: 22, scope: !9119)
!9119 = distinct !DILexicalBlock(scope: !9105, file: !1368, line: 141, column: 51)
!9120 = !DILocation(line: 143, column: 3, scope: !9119)
!9121 = !DILocation(line: 144, column: 9, scope: !9119)
!9122 = distinct !{!9122, !9117, !9123}
!9123 = !DILocation(line: 145, column: 2, scope: !9105)
!9124 = !DILocation(line: 147, column: 2, scope: !9105)
!9125 = distinct !DISubprogram(name: "uart_imx_fifo_read", scope: !1368, file: !1368, line: 150, type: !1315, scopeLine: 152, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1171, retainedNodes: !9126)
!9126 = !{!9127, !9128, !9129, !9130, !9131}
!9127 = !DILocalVariable(name: "dev", arg: 1, scope: !9125, file: !1368, line: 150, type: !1268)
!9128 = !DILocalVariable(name: "rx_data", arg: 2, scope: !9125, file: !1368, line: 150, type: !194)
!9129 = !DILocalVariable(name: "size", arg: 3, scope: !9125, file: !1368, line: 151, type: !939)
!9130 = !DILocalVariable(name: "uart", scope: !9125, file: !1368, line: 153, type: !1339)
!9131 = !DILocalVariable(name: "num_rx", scope: !9125, file: !1368, line: 154, type: !32)
!9132 = !DILocation(line: 0, scope: !9125)
!9133 = !DILocation(line: 153, column: 20, scope: !9125)
!9134 = !DILocation(line: 156, column: 26, scope: !9125)
!9135 = !DILocation(line: 156, column: 31, scope: !9125)
!9136 = !DILocation(line: 157, column: 6, scope: !9125)
!9137 = !DILocation(line: 156, column: 2, scope: !9125)
!9138 = !DILocation(line: 159, column: 23, scope: !9139)
!9139 = distinct !DILexicalBlock(scope: !9125, file: !1368, line: 157, column: 51)
!9140 = !DILocation(line: 159, column: 17, scope: !9139)
!9141 = !DILocation(line: 159, column: 3, scope: !9139)
!9142 = !DILocation(line: 159, column: 21, scope: !9139)
!9143 = distinct !{!9143, !9137, !9144}
!9144 = !DILocation(line: 160, column: 2, scope: !9125)
!9145 = !DILocation(line: 162, column: 6, scope: !9146)
!9146 = distinct !DILexicalBlock(scope: !9125, file: !1368, line: 162, column: 6)
!9147 = !DILocation(line: 162, column: 6, scope: !9125)
!9148 = !DILocation(line: 163, column: 3, scope: !9149)
!9149 = distinct !DILexicalBlock(scope: !9146, file: !1368, line: 162, column: 53)
!9150 = !DILocation(line: 164, column: 2, scope: !9149)
!9151 = !DILocation(line: 166, column: 2, scope: !9125)
!9152 = distinct !DISubprogram(name: "uart_imx_irq_tx_enable", scope: !1368, file: !1368, line: 169, type: !1319, scopeLine: 170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1171, retainedNodes: !9153)
!9153 = !{!9154, !9155}
!9154 = !DILocalVariable(name: "dev", arg: 1, scope: !9152, file: !1368, line: 169, type: !1268)
!9155 = !DILocalVariable(name: "uart", scope: !9152, file: !1368, line: 171, type: !1339)
!9156 = !DILocation(line: 0, scope: !9152)
!9157 = !DILocation(line: 171, column: 20, scope: !9152)
!9158 = !DILocation(line: 173, column: 2, scope: !9152)
!9159 = !DILocation(line: 174, column: 1, scope: !9152)
!9160 = distinct !DISubprogram(name: "uart_imx_irq_tx_disable", scope: !1368, file: !1368, line: 176, type: !1319, scopeLine: 177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1171, retainedNodes: !9161)
!9161 = !{!9162, !9163}
!9162 = !DILocalVariable(name: "dev", arg: 1, scope: !9160, file: !1368, line: 176, type: !1268)
!9163 = !DILocalVariable(name: "uart", scope: !9160, file: !1368, line: 178, type: !1339)
!9164 = !DILocation(line: 0, scope: !9160)
!9165 = !DILocation(line: 178, column: 20, scope: !9160)
!9166 = !DILocation(line: 180, column: 2, scope: !9160)
!9167 = !DILocation(line: 181, column: 1, scope: !9160)
!9168 = distinct !DISubprogram(name: "uart_imx_irq_tx_ready", scope: !1368, file: !1368, line: 183, type: !1289, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1171, retainedNodes: !9169)
!9169 = !{!9170, !9171}
!9170 = !DILocalVariable(name: "dev", arg: 1, scope: !9168, file: !1368, line: 183, type: !1268)
!9171 = !DILocalVariable(name: "uart", scope: !9168, file: !1368, line: 185, type: !1339)
!9172 = !DILocation(line: 0, scope: !9168)
!9173 = !DILocation(line: 185, column: 20, scope: !9168)
!9174 = !DILocation(line: 187, column: 9, scope: !9168)
!9175 = !DILocation(line: 187, column: 2, scope: !9168)
!9176 = distinct !DISubprogram(name: "uart_imx_irq_rx_enable", scope: !1368, file: !1368, line: 190, type: !1319, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1171, retainedNodes: !9177)
!9177 = !{!9178, !9179}
!9178 = !DILocalVariable(name: "dev", arg: 1, scope: !9176, file: !1368, line: 190, type: !1268)
!9179 = !DILocalVariable(name: "uart", scope: !9176, file: !1368, line: 192, type: !1339)
!9180 = !DILocation(line: 0, scope: !9176)
!9181 = !DILocation(line: 192, column: 20, scope: !9176)
!9182 = !DILocation(line: 194, column: 2, scope: !9176)
!9183 = !DILocation(line: 195, column: 1, scope: !9176)
!9184 = distinct !DISubprogram(name: "uart_imx_irq_rx_disable", scope: !1368, file: !1368, line: 197, type: !1319, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1171, retainedNodes: !9185)
!9185 = !{!9186, !9187}
!9186 = !DILocalVariable(name: "dev", arg: 1, scope: !9184, file: !1368, line: 197, type: !1268)
!9187 = !DILocalVariable(name: "uart", scope: !9184, file: !1368, line: 199, type: !1339)
!9188 = !DILocation(line: 0, scope: !9184)
!9189 = !DILocation(line: 199, column: 20, scope: !9184)
!9190 = !DILocation(line: 201, column: 2, scope: !9184)
!9191 = !DILocation(line: 202, column: 1, scope: !9184)
!9192 = distinct !DISubprogram(name: "uart_imx_irq_rx_ready", scope: !1368, file: !1368, line: 204, type: !1289, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1171, retainedNodes: !9193)
!9193 = !{!9194, !9195}
!9194 = !DILocalVariable(name: "dev", arg: 1, scope: !9192, file: !1368, line: 204, type: !1268)
!9195 = !DILocalVariable(name: "uart", scope: !9192, file: !1368, line: 206, type: !1339)
!9196 = !DILocation(line: 0, scope: !9192)
!9197 = !DILocation(line: 206, column: 20, scope: !9192)
!9198 = !DILocation(line: 208, column: 9, scope: !9192)
!9199 = !DILocation(line: 208, column: 2, scope: !9192)
!9200 = distinct !DISubprogram(name: "uart_imx_irq_err_enable", scope: !1368, file: !1368, line: 211, type: !1319, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1171, retainedNodes: !9201)
!9201 = !{!9202, !9203}
!9202 = !DILocalVariable(name: "dev", arg: 1, scope: !9200, file: !1368, line: 211, type: !1268)
!9203 = !DILocalVariable(name: "uart", scope: !9200, file: !1368, line: 213, type: !1339)
!9204 = !DILocation(line: 0, scope: !9200)
!9205 = !DILocation(line: 213, column: 20, scope: !9200)
!9206 = !DILocation(line: 215, column: 2, scope: !9200)
!9207 = !DILocation(line: 216, column: 2, scope: !9200)
!9208 = !DILocation(line: 217, column: 1, scope: !9200)
!9209 = distinct !DISubprogram(name: "uart_imx_irq_err_disable", scope: !1368, file: !1368, line: 219, type: !1319, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1171, retainedNodes: !9210)
!9210 = !{!9211, !9212}
!9211 = !DILocalVariable(name: "dev", arg: 1, scope: !9209, file: !1368, line: 219, type: !1268)
!9212 = !DILocalVariable(name: "uart", scope: !9209, file: !1368, line: 221, type: !1339)
!9213 = !DILocation(line: 0, scope: !9209)
!9214 = !DILocation(line: 221, column: 20, scope: !9209)
!9215 = !DILocation(line: 223, column: 2, scope: !9209)
!9216 = !DILocation(line: 224, column: 2, scope: !9209)
!9217 = !DILocation(line: 225, column: 1, scope: !9209)
!9218 = distinct !DISubprogram(name: "uart_imx_irq_is_pending", scope: !1368, file: !1368, line: 227, type: !1289, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1171, retainedNodes: !9219)
!9219 = !{!9220, !9221}
!9220 = !DILocalVariable(name: "dev", arg: 1, scope: !9218, file: !1368, line: 227, type: !1268)
!9221 = !DILocalVariable(name: "uart", scope: !9218, file: !1368, line: 229, type: !1339)
!9222 = !DILocation(line: 0, scope: !9218)
!9223 = !DILocation(line: 229, column: 20, scope: !9218)
!9224 = !DILocation(line: 231, column: 9, scope: !9218)
!9225 = !DILocation(line: 231, column: 53, scope: !9218)
!9226 = !DILocation(line: 232, column: 3, scope: !9218)
!9227 = !DILocation(line: 231, column: 2, scope: !9218)
!9228 = distinct !DISubprogram(name: "uart_imx_irq_update", scope: !1368, file: !1368, line: 235, type: !1289, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1171, retainedNodes: !9229)
!9229 = !{!9230}
!9230 = !DILocalVariable(name: "dev", arg: 1, scope: !9228, file: !1368, line: 235, type: !1268)
!9231 = !DILocation(line: 0, scope: !9228)
!9232 = !DILocation(line: 237, column: 2, scope: !9228)
!9233 = distinct !DISubprogram(name: "uart_imx_irq_callback_set", scope: !1368, file: !1368, line: 240, type: !1333, scopeLine: 243, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1171, retainedNodes: !9234)
!9234 = !{!9235, !9236, !9237, !9238}
!9235 = !DILocalVariable(name: "dev", arg: 1, scope: !9233, file: !1368, line: 240, type: !1268)
!9236 = !DILocalVariable(name: "cb", arg: 2, scope: !9233, file: !1368, line: 241, type: !1335)
!9237 = !DILocalVariable(name: "cb_data", arg: 3, scope: !9233, file: !1368, line: 242, type: !106)
!9238 = !DILocalVariable(name: "data", scope: !9233, file: !1368, line: 244, type: !9239)
!9239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1421, size: 32)
!9240 = !DILocation(line: 0, scope: !9233)
!9241 = !DILocation(line: 244, column: 36, scope: !9233)
!9242 = !DILocation(line: 246, column: 8, scope: !9233)
!9243 = !DILocation(line: 246, column: 17, scope: !9233)
!9244 = !DILocation(line: 247, column: 8, scope: !9233)
!9245 = !DILocation(line: 247, column: 16, scope: !9233)
!9246 = !DILocation(line: 248, column: 1, scope: !9233)
!9247 = distinct !DISubprogram(name: "UART_GetStatusFlag", scope: !1175, file: !1175, line: 392, type: !9248, scopeLine: 392, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1171, retainedNodes: !9250)
!9248 = !DISubroutineType(types: !9249)
!9249 = !{!145, !1339, !152}
!9250 = !{!9251, !9252, !9253}
!9251 = !DILocalVariable(name: "base", arg: 1, scope: !9247, file: !1175, line: 392, type: !1339)
!9252 = !DILocalVariable(name: "flag", arg: 2, scope: !9247, file: !1175, line: 392, type: !152)
!9253 = !DILocalVariable(name: "uart_reg", scope: !9247, file: !1175, line: 393, type: !630)
!9254 = !DILocation(line: 0, scope: !9247)
!9255 = !DILocation(line: 395, column: 29, scope: !9247)
!9256 = !DILocation(line: 395, column: 52, scope: !9247)
!9257 = !DILocation(line: 395, column: 44, scope: !9247)
!9258 = !DILocation(line: 395, column: 16, scope: !9247)
!9259 = !DILocation(line: 396, column: 20, scope: !9247)
!9260 = !DILocation(line: 396, column: 39, scope: !9247)
!9261 = !DILocation(line: 396, column: 12, scope: !9247)
!9262 = !DILocation(line: 396, column: 5, scope: !9247)
!9263 = distinct !DISubprogram(name: "UART_Getchar", scope: !1175, file: !1175, line: 358, type: !9264, scopeLine: 359, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1171, retainedNodes: !9266)
!9264 = !DISubroutineType(types: !9265)
!9265 = !{!195, !1339}
!9266 = !{!9267}
!9267 = !DILocalVariable(name: "base", arg: 1, scope: !9263, file: !1175, line: 358, type: !1339)
!9268 = !DILocation(line: 0, scope: !9263)
!9269 = !DILocation(line: 360, column: 22, scope: !9263)
!9270 = !DILocation(line: 360, column: 12, scope: !9263)
!9271 = !DILocation(line: 360, column: 5, scope: !9263)
!9272 = distinct !DISubprogram(name: "UART_Putchar", scope: !1175, file: !1175, line: 346, type: !9273, scopeLine: 347, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1171, retainedNodes: !9275)
!9273 = !DISubroutineType(types: !9274)
!9274 = !{null, !1339, !195}
!9275 = !{!9276, !9277}
!9276 = !DILocalVariable(name: "base", arg: 1, scope: !9272, file: !1175, line: 346, type: !1339)
!9277 = !DILocalVariable(name: "data", arg: 2, scope: !9272, file: !1175, line: 346, type: !195)
!9278 = !DILocation(line: 0, scope: !9272)
!9279 = !DILocation(line: 348, column: 28, scope: !9272)
!9280 = !DILocation(line: 348, column: 5, scope: !9272)
!9281 = !DILocation(line: 348, column: 25, scope: !9272)
!9282 = !DILocation(line: 349, column: 1, scope: !9272)
!9283 = !DILocation(line: 0, scope: !1441)
!9284 = !DILocation(line: 339, column: 1, scope: !9285)
!9285 = distinct !DILexicalBlock(scope: !1441, file: !1368, line: 339, column: 1)
!9286 = !DILocation(line: 339, column: 1, scope: !1441)
!9287 = distinct !DISubprogram(name: "uart_imx_isr", scope: !1368, file: !1368, line: 260, type: !1319, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1171, retainedNodes: !9288)
!9288 = !{!9289, !9290}
!9289 = !DILocalVariable(name: "dev", arg: 1, scope: !9287, file: !1368, line: 260, type: !1268)
!9290 = !DILocalVariable(name: "data", scope: !9287, file: !1368, line: 262, type: !9239)
!9291 = !DILocation(line: 0, scope: !9287)
!9292 = !DILocation(line: 262, column: 36, scope: !9287)
!9293 = !DILocation(line: 264, column: 12, scope: !9294)
!9294 = distinct !DILexicalBlock(scope: !9287, file: !1368, line: 264, column: 6)
!9295 = !DILocation(line: 264, column: 6, scope: !9294)
!9296 = !DILocation(line: 264, column: 6, scope: !9287)
!9297 = !DILocation(line: 265, column: 29, scope: !9298)
!9298 = distinct !DILexicalBlock(scope: !9294, file: !1368, line: 264, column: 22)
!9299 = !DILocation(line: 265, column: 3, scope: !9298)
!9300 = !DILocation(line: 266, column: 2, scope: !9298)
!9301 = !DILocation(line: 267, column: 1, scope: !9287)
!9302 = distinct !DISubprogram(name: "uart_imx_init", scope: !1368, file: !1368, line: 56, type: !1289, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1171, retainedNodes: !9303)
!9303 = !{!9304, !9305, !9306, !9307, !9308, !9309}
!9304 = !DILocalVariable(name: "dev", arg: 1, scope: !9302, file: !1368, line: 56, type: !1268)
!9305 = !DILocalVariable(name: "uart", scope: !9302, file: !1368, line: 58, type: !1339)
!9306 = !DILocalVariable(name: "config", scope: !9302, file: !1368, line: 59, type: !1365)
!9307 = !DILocalVariable(name: "old_level", scope: !9302, file: !1368, line: 60, type: !32)
!9308 = !DILocalVariable(name: "err", scope: !9302, file: !1368, line: 61, type: !107)
!9309 = !DILocalVariable(name: "initConfig", scope: !9302, file: !1368, line: 67, type: !9310)
!9310 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_init_config_t", file: !1175, line: 57, baseType: !9311)
!9311 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_uart_init_config", file: !1175, line: 49, size: 192, elements: !9312)
!9312 = !{!9313, !9314, !9315, !9316, !9317, !9318}
!9313 = !DIDerivedType(tag: DW_TAG_member, name: "clockRate", scope: !9311, file: !1175, line: 51, baseType: !152, size: 32)
!9314 = !DIDerivedType(tag: DW_TAG_member, name: "baudRate", scope: !9311, file: !1175, line: 52, baseType: !152, size: 32, offset: 32)
!9315 = !DIDerivedType(tag: DW_TAG_member, name: "wordLength", scope: !9311, file: !1175, line: 53, baseType: !152, size: 32, offset: 64)
!9316 = !DIDerivedType(tag: DW_TAG_member, name: "stopBitNum", scope: !9311, file: !1175, line: 54, baseType: !152, size: 32, offset: 96)
!9317 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !9311, file: !1175, line: 55, baseType: !152, size: 32, offset: 128)
!9318 = !DIDerivedType(tag: DW_TAG_member, name: "direction", scope: !9311, file: !1175, line: 56, baseType: !152, size: 32, offset: 160)
!9319 = !DILocation(line: 0, scope: !9302)
!9320 = !DILocation(line: 58, column: 20, scope: !9302)
!9321 = !DILocation(line: 55, column: 2, scope: !9322, inlinedAt: !9326)
!9322 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6121, file: !6121, line: 42, type: !8801, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1171, retainedNodes: !9323)
!9323 = !{!9324, !9325}
!9324 = !DILocalVariable(name: "key", scope: !9322, file: !6121, line: 44, type: !32)
!9325 = !DILocalVariable(name: "tmp", scope: !9322, file: !6121, line: 53, type: !32)
!9326 = distinct !DILocation(line: 64, column: 14, scope: !9302)
!9327 = !{i64 2850613}
!9328 = !DILocation(line: 0, scope: !9322, inlinedAt: !9326)
!9329 = !DILocation(line: 67, column: 2, scope: !9302)
!9330 = !DILocation(line: 67, column: 21, scope: !9302)
!9331 = !DILocation(line: 67, column: 34, scope: !9302)
!9332 = !DILocation(line: 68, column: 23, scope: !9302)
!9333 = !DILocation(line: 75, column: 36, scope: !9302)
!9334 = !DILocation(line: 75, column: 8, scope: !9302)
!9335 = !DILocation(line: 76, column: 6, scope: !9336)
!9336 = distinct !DILexicalBlock(scope: !9302, file: !1368, line: 76, column: 6)
!9337 = !DILocation(line: 76, column: 6, scope: !9302)
!9338 = !DILocation(line: 81, column: 26, scope: !9302)
!9339 = !DILocation(line: 81, column: 24, scope: !9302)
!9340 = !DILocation(line: 83, column: 2, scope: !9302)
!9341 = !DILocation(line: 86, column: 2, scope: !9302)
!9342 = !DILocation(line: 87, column: 2, scope: !9302)
!9343 = !DILocalVariable(name: "key", arg: 1, scope: !9344, file: !6121, line: 84, type: !32)
!9344 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6121, file: !6121, line: 84, type: !5951, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1171, retainedNodes: !9345)
!9345 = !{!9343}
!9346 = !DILocation(line: 0, scope: !9344, inlinedAt: !9347)
!9347 = distinct !DILocation(line: 90, column: 2, scope: !9302)
!9348 = !DILocation(line: 95, column: 2, scope: !9344, inlinedAt: !9347)
!9349 = !{i64 2851430}
!9350 = !DILocation(line: 93, column: 10, scope: !9302)
!9351 = !DILocation(line: 93, column: 2, scope: !9302)
!9352 = !DILocation(line: 97, column: 34, scope: !9302)
!9353 = !DILocation(line: 97, column: 26, scope: !9302)
!9354 = !DILocation(line: 97, column: 2, scope: !9302)
!9355 = !DILocation(line: 100, column: 2, scope: !9302)
!9356 = !DILocation(line: 102, column: 2, scope: !9302)
!9357 = !DILocation(line: 103, column: 1, scope: !9302)
!9358 = distinct !DISubprogram(name: "pinctrl_apply_state", scope: !1377, file: !1377, line: 342, type: !9359, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1171, retainedNodes: !9361)
!9359 = !DISubroutineType(types: !9360)
!9360 = !{!107, !1374, !195}
!9361 = !{!9362, !9363, !9364, !9365}
!9362 = !DILocalVariable(name: "config", arg: 1, scope: !9358, file: !1377, line: 342, type: !1374)
!9363 = !DILocalVariable(name: "id", arg: 2, scope: !9358, file: !1377, line: 343, type: !195)
!9364 = !DILocalVariable(name: "ret", scope: !9358, file: !1377, line: 345, type: !107)
!9365 = !DILocalVariable(name: "state", scope: !9358, file: !1377, line: 346, type: !1380)
!9366 = !DILocation(line: 0, scope: !9358)
!9367 = !DILocation(line: 346, column: 2, scope: !9358)
!9368 = !DILocation(line: 348, column: 8, scope: !9358)
!9369 = !DILocation(line: 349, column: 10, scope: !9370)
!9370 = distinct !DILexicalBlock(scope: !9358, file: !1377, line: 349, column: 6)
!9371 = !DILocation(line: 349, column: 6, scope: !9358)
!9372 = !DILocation(line: 353, column: 44, scope: !9358)
!9373 = !DILocation(line: 353, column: 9, scope: !9358)
!9374 = !DILocation(line: 353, column: 2, scope: !9358)
!9375 = !DILocation(line: 354, column: 1, scope: !9358)
!9376 = distinct !DISubprogram(name: "UART_SetTxFifoWatermark", scope: !1175, file: !1175, line: 444, type: !9273, scopeLine: 445, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1171, retainedNodes: !9377)
!9377 = !{!9378, !9379}
!9378 = !DILocalVariable(name: "base", arg: 1, scope: !9376, file: !1175, line: 444, type: !1339)
!9379 = !DILocalVariable(name: "watermark", arg: 2, scope: !9376, file: !1175, line: 444, type: !195)
!9380 = !DILocation(line: 0, scope: !9376)
!9381 = !DILocation(line: 447, column: 28, scope: !9376)
!9382 = !DILocation(line: 447, column: 48, scope: !9376)
!9383 = !DILocation(line: 447, column: 72, scope: !9376)
!9384 = !DILocation(line: 447, column: 25, scope: !9376)
!9385 = !DILocation(line: 448, column: 1, scope: !9376)
!9386 = distinct !DISubprogram(name: "UART_SetRxFifoWatermark", scope: !1175, file: !1175, line: 458, type: !9273, scopeLine: 459, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1171, retainedNodes: !9387)
!9387 = !{!9388, !9389}
!9388 = !DILocalVariable(name: "base", arg: 1, scope: !9386, file: !1175, line: 458, type: !1339)
!9389 = !DILocalVariable(name: "watermark", arg: 2, scope: !9386, file: !1175, line: 458, type: !195)
!9390 = !DILocation(line: 0, scope: !9386)
!9391 = !DILocation(line: 461, column: 28, scope: !9386)
!9392 = !DILocation(line: 461, column: 48, scope: !9386)
!9393 = !DILocation(line: 461, column: 72, scope: !9386)
!9394 = !DILocation(line: 461, column: 25, scope: !9386)
!9395 = !DILocation(line: 462, column: 1, scope: !9386)
!9396 = distinct !DISubprogram(name: "UART_Enable", scope: !1175, file: !1175, line: 242, type: !9397, scopeLine: 243, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1171, retainedNodes: !9399)
!9397 = !DISubroutineType(types: !9398)
!9398 = !{null, !1339}
!9399 = !{!9400}
!9400 = !DILocalVariable(name: "base", arg: 1, scope: !9396, file: !1175, line: 242, type: !1339)
!9401 = !DILocation(line: 0, scope: !9396)
!9402 = !DILocation(line: 244, column: 5, scope: !9396)
!9403 = !DILocation(line: 244, column: 25, scope: !9396)
!9404 = !DILocation(line: 245, column: 1, scope: !9396)
!9405 = distinct !DISubprogram(name: "pinctrl_apply_state_direct", scope: !1377, file: !1377, line: 316, type: !9406, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1171, retainedNodes: !9408)
!9406 = !DISubroutineType(types: !9407)
!9407 = !{!107, !1374, !1380}
!9408 = !{!9409, !9410, !9411}
!9409 = !DILocalVariable(name: "config", arg: 1, scope: !9405, file: !1377, line: 317, type: !1374)
!9410 = !DILocalVariable(name: "state", arg: 2, scope: !9405, file: !1377, line: 318, type: !1380)
!9411 = !DILocalVariable(name: "reg", scope: !9405, file: !1377, line: 320, type: !22)
!9412 = !DILocation(line: 0, scope: !9405)
!9413 = !DILocation(line: 329, column: 39, scope: !9405)
!9414 = !DILocation(line: 329, column: 52, scope: !9405)
!9415 = !DILocation(line: 329, column: 9, scope: !9405)
!9416 = !DILocation(line: 329, column: 2, scope: !9405)
!9417 = distinct !DISubprogram(name: "sys_clock_driver_init", scope: !1677, file: !1677, line: 270, type: !1683, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !9418)
!9418 = !{!9419}
!9419 = !DILocalVariable(name: "dev", arg: 1, scope: !9417, file: !1677, line: 270, type: !1685)
!9420 = !DILocation(line: 0, scope: !9417)
!9421 = !DILocation(line: 274, column: 2, scope: !9417)
!9422 = !DILocation(line: 275, column: 12, scope: !9417)
!9423 = !DILocation(line: 276, column: 15, scope: !9417)
!9424 = !DILocation(line: 277, column: 16, scope: !9417)
!9425 = !DILocation(line: 278, column: 15, scope: !9417)
!9426 = !DILocation(line: 279, column: 16, scope: !9417)
!9427 = !DILocation(line: 282, column: 2, scope: !9417)
!9428 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !1598, file: !1598, line: 1814, type: !6040, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !9429)
!9429 = !{!9430, !9431}
!9430 = !DILocalVariable(name: "IRQn", arg: 1, scope: !9428, file: !1598, line: 1814, type: !2342)
!9431 = !DILocalVariable(name: "priority", arg: 2, scope: !9428, file: !1598, line: 1814, type: !152)
!9432 = !DILocation(line: 0, scope: !9428)
!9433 = !DILocation(line: 1822, column: 46, scope: !9434)
!9434 = distinct !DILexicalBlock(scope: !9435, file: !1598, line: 1821, column: 3)
!9435 = distinct !DILexicalBlock(scope: !9428, file: !1598, line: 1816, column: 7)
!9436 = !DILocation(line: 1824, column: 1, scope: !9428)
!9437 = distinct !DISubprogram(name: "sys_clock_isr", scope: !1677, file: !1677, line: 118, type: !131, scopeLine: 119, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !9438)
!9438 = !{!9439, !9440}
!9439 = !DILocalVariable(name: "arg", arg: 1, scope: !9437, file: !1677, line: 118, type: !106)
!9440 = !DILocalVariable(name: "dticks", scope: !9437, file: !1677, line: 121, type: !152)
!9441 = !DILocation(line: 0, scope: !9437)
!9442 = !DILocation(line: 124, column: 2, scope: !9437)
!9443 = !DILocation(line: 129, column: 17, scope: !9437)
!9444 = !DILocation(line: 129, column: 14, scope: !9437)
!9445 = !DILocation(line: 130, column: 15, scope: !9437)
!9446 = !DILocation(line: 145, column: 27, scope: !9447)
!9447 = distinct !DILexicalBlock(scope: !9448, file: !1677, line: 132, column: 16)
!9448 = distinct !DILexicalBlock(scope: !9437, file: !1677, line: 132, column: 6)
!9449 = !DILocation(line: 145, column: 25, scope: !9447)
!9450 = !DILocation(line: 145, column: 45, scope: !9447)
!9451 = !DILocation(line: 146, column: 30, scope: !9447)
!9452 = !DILocation(line: 146, column: 20, scope: !9447)
!9453 = !DILocation(line: 147, column: 3, scope: !9447)
!9454 = !DILocation(line: 151, column: 2, scope: !9437)
!9455 = !DILocation(line: 152, column: 1, scope: !9437)
!9456 = distinct !DISubprogram(name: "elapsed", scope: !1677, file: !1677, line: 85, type: !6087, scopeLine: 86, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !9457)
!9457 = !{!9458, !9459, !9460}
!9458 = !DILocalVariable(name: "val1", scope: !9456, file: !1677, line: 87, type: !152)
!9459 = !DILocalVariable(name: "ctrl", scope: !9456, file: !1677, line: 88, type: !152)
!9460 = !DILocalVariable(name: "val2", scope: !9456, file: !1677, line: 89, type: !152)
!9461 = !DILocation(line: 87, column: 27, scope: !9456)
!9462 = !DILocation(line: 0, scope: !9456)
!9463 = !DILocation(line: 88, column: 27, scope: !9456)
!9464 = !DILocation(line: 89, column: 27, scope: !9456)
!9465 = !DILocation(line: 105, column: 12, scope: !9466)
!9466 = distinct !DILexicalBlock(scope: !9456, file: !1677, line: 105, column: 6)
!9467 = !DILocation(line: 106, column: 6, scope: !9466)
!9468 = !DILocation(line: 107, column: 16, scope: !9469)
!9469 = distinct !DILexicalBlock(scope: !9466, file: !1677, line: 106, column: 24)
!9470 = !DILocation(line: 111, column: 18, scope: !9469)
!9471 = !DILocation(line: 112, column: 2, scope: !9469)
!9472 = !DILocation(line: 114, column: 20, scope: !9456)
!9473 = !DILocation(line: 114, column: 30, scope: !9456)
!9474 = !DILocation(line: 114, column: 28, scope: !9456)
!9475 = !DILocation(line: 114, column: 2, scope: !9456)
!9476 = distinct !DISubprogram(name: "sys_clock_set_timeout", scope: !1677, file: !1677, line: 154, type: !9477, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !9479)
!9477 = !DISubroutineType(types: !9478)
!9478 = !{null, !1149, !145}
!9479 = !{!9480, !9481, !9482, !9483, !9484, !9485, !9486, !9491, !9492}
!9480 = !DILocalVariable(name: "ticks", arg: 1, scope: !9476, file: !1677, line: 154, type: !1149)
!9481 = !DILocalVariable(name: "idle", arg: 2, scope: !9476, file: !1677, line: 154, type: !145)
!9482 = !DILocalVariable(name: "delay", scope: !9476, file: !1677, line: 169, type: !152)
!9483 = !DILocalVariable(name: "val1", scope: !9476, file: !1677, line: 170, type: !152)
!9484 = !DILocalVariable(name: "val2", scope: !9476, file: !1677, line: 170, type: !152)
!9485 = !DILocalVariable(name: "last_load_", scope: !9476, file: !1677, line: 171, type: !152)
!9486 = !DILocalVariable(name: "key", scope: !9476, file: !1677, line: 176, type: !9487)
!9487 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !818, line: 106, baseType: !9488)
!9488 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !818, line: 32, size: 32, elements: !9489)
!9489 = !{!9490}
!9490 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !9488, file: !818, line: 33, baseType: !107, size: 32)
!9491 = !DILocalVariable(name: "pending", scope: !9476, file: !1677, line: 178, type: !152)
!9492 = !DILocalVariable(name: "unannounced", scope: !9476, file: !1677, line: 185, type: !152)
!9493 = !DILocation(line: 0, scope: !9476)
!9494 = !DILocation(line: 162, column: 49, scope: !9495)
!9495 = distinct !DILexicalBlock(scope: !9476, file: !1677, line: 162, column: 6)
!9496 = !DILocation(line: 163, column: 17, scope: !9497)
!9497 = distinct !DILexicalBlock(scope: !9495, file: !1677, line: 162, column: 78)
!9498 = !DILocation(line: 164, column: 13, scope: !9497)
!9499 = !DILocation(line: 165, column: 3, scope: !9497)
!9500 = !DILocation(line: 171, column: 24, scope: !9476)
!9501 = !DILocation(line: 173, column: 10, scope: !9476)
!9502 = !DILocation(line: 174, column: 10, scope: !9476)
!9503 = !DILocalVariable(name: "l", arg: 1, scope: !9504, file: !818, line: 136, type: !9507)
!9504 = distinct !DISubprogram(name: "k_spin_lock", scope: !818, file: !818, line: 136, type: !9505, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !9508)
!9505 = !DISubroutineType(types: !9506)
!9506 = !{!9487, !9507}
!9507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1703, size: 32)
!9508 = !{!9503, !9509}
!9509 = !DILocalVariable(name: "k", scope: !9504, file: !818, line: 139, type: !9487)
!9510 = !DILocation(line: 0, scope: !9504, inlinedAt: !9511)
!9511 = distinct !DILocation(line: 176, column: 25, scope: !9476)
!9512 = !DILocation(line: 55, column: 2, scope: !9513, inlinedAt: !9517)
!9513 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6121, file: !6121, line: 42, type: !8801, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !9514)
!9514 = !{!9515, !9516}
!9515 = !DILocalVariable(name: "key", scope: !9513, file: !6121, line: 44, type: !32)
!9516 = !DILocalVariable(name: "tmp", scope: !9513, file: !6121, line: 53, type: !32)
!9517 = distinct !DILocation(line: 145, column: 10, scope: !9504, inlinedAt: !9511)
!9518 = !{i64 2953351}
!9519 = !DILocation(line: 0, scope: !9513, inlinedAt: !9517)
!9520 = !DILocation(line: 148, column: 2, scope: !9521, inlinedAt: !9511)
!9521 = distinct !DILexicalBlock(scope: !9522, file: !818, line: 148, column: 2)
!9522 = distinct !DILexicalBlock(scope: !9504, file: !818, line: 148, column: 2)
!9523 = !DILocation(line: 148, column: 2, scope: !9522, inlinedAt: !9511)
!9524 = !DILocation(line: 148, column: 2, scope: !9525, inlinedAt: !9511)
!9525 = distinct !DILexicalBlock(scope: !9521, file: !818, line: 148, column: 2)
!9526 = !DILocation(line: 160, column: 2, scope: !9504, inlinedAt: !9511)
!9527 = !DILocation(line: 178, column: 21, scope: !9476)
!9528 = !DILocation(line: 180, column: 18, scope: !9476)
!9529 = !DILocation(line: 182, column: 14, scope: !9476)
!9530 = !DILocation(line: 183, column: 15, scope: !9476)
!9531 = !DILocation(line: 185, column: 39, scope: !9476)
!9532 = !DILocation(line: 185, column: 37, scope: !9476)
!9533 = !DILocation(line: 187, column: 27, scope: !9534)
!9534 = distinct !DILexicalBlock(scope: !9476, file: !1677, line: 187, column: 6)
!9535 = !DILocation(line: 187, column: 6, scope: !9476)
!9536 = !DILocation(line: 202, column: 27, scope: !9537)
!9537 = distinct !DILexicalBlock(scope: !9534, file: !1677, line: 195, column: 9)
!9538 = !DILocation(line: 202, column: 48, scope: !9537)
!9539 = !DILocation(line: 203, column: 9, scope: !9537)
!9540 = !DILocation(line: 204, column: 11, scope: !9537)
!9541 = !DILocation(line: 205, column: 13, scope: !9542)
!9542 = distinct !DILexicalBlock(scope: !9537, file: !1677, line: 205, column: 7)
!9543 = !DILocation(line: 205, column: 7, scope: !9537)
!9544 = !DILocation(line: 0, scope: !9534)
!9545 = !DILocation(line: 212, column: 18, scope: !9476)
!9546 = !DILocation(line: 214, column: 28, scope: !9476)
!9547 = !DILocation(line: 214, column: 16, scope: !9476)
!9548 = !DILocation(line: 215, column: 15, scope: !9476)
!9549 = !DILocation(line: 227, column: 11, scope: !9550)
!9550 = distinct !DILexicalBlock(scope: !9476, file: !1677, line: 227, column: 6)
!9551 = !DILocation(line: 227, column: 6, scope: !9476)
!9552 = !DILocation(line: 228, column: 15, scope: !9553)
!9553 = distinct !DILexicalBlock(scope: !9550, file: !1677, line: 227, column: 19)
!9554 = !DILocation(line: 228, column: 38, scope: !9553)
!9555 = !DILocation(line: 228, column: 24, scope: !9553)
!9556 = !DILocation(line: 229, column: 2, scope: !9553)
!9557 = !DILocation(line: 230, column: 24, scope: !9558)
!9558 = distinct !DILexicalBlock(scope: !9550, file: !1677, line: 229, column: 9)
!9559 = !DILocation(line: 230, column: 15, scope: !9558)
!9560 = !DILocation(line: 0, scope: !9550)
!9561 = !DILocalVariable(name: "key", arg: 2, scope: !9562, file: !818, line: 190, type: !9487)
!9562 = distinct !DISubprogram(name: "k_spin_unlock", scope: !818, file: !818, line: 189, type: !9563, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !9565)
!9563 = !DISubroutineType(types: !9564)
!9564 = !{null, !9507, !9487}
!9565 = !{!9566, !9561}
!9566 = !DILocalVariable(name: "l", arg: 1, scope: !9562, file: !818, line: 189, type: !9507)
!9567 = !DILocation(line: 0, scope: !9562, inlinedAt: !9568)
!9568 = distinct !DILocation(line: 232, column: 2, scope: !9476)
!9569 = !DILocation(line: 194, column: 2, scope: !9570, inlinedAt: !9568)
!9570 = distinct !DILexicalBlock(scope: !9571, file: !818, line: 194, column: 2)
!9571 = distinct !DILexicalBlock(scope: !9562, file: !818, line: 194, column: 2)
!9572 = !DILocation(line: 194, column: 2, scope: !9571, inlinedAt: !9568)
!9573 = !DILocation(line: 194, column: 2, scope: !9574, inlinedAt: !9568)
!9574 = distinct !DILexicalBlock(scope: !9570, file: !818, line: 194, column: 2)
!9575 = !DILocalVariable(name: "key", arg: 1, scope: !9576, file: !6121, line: 84, type: !32)
!9576 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6121, file: !6121, line: 84, type: !5951, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !9577)
!9577 = !{!9575}
!9578 = !DILocation(line: 0, scope: !9576, inlinedAt: !9579)
!9579 = distinct !DILocation(line: 215, column: 2, scope: !9562, inlinedAt: !9568)
!9580 = !DILocation(line: 95, column: 2, scope: !9576, inlinedAt: !9579)
!9581 = !{i64 2954168}
!9582 = !DILocation(line: 234, column: 1, scope: !9476)
!9583 = distinct !DISubprogram(name: "sys_clock_elapsed", scope: !1677, file: !1677, line: 236, type: !6087, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !9584)
!9584 = !{!9585, !9586}
!9585 = !DILocalVariable(name: "key", scope: !9583, file: !1677, line: 242, type: !9487)
!9586 = !DILocalVariable(name: "cyc", scope: !9583, file: !1677, line: 243, type: !152)
!9587 = !DILocation(line: 0, scope: !9504, inlinedAt: !9588)
!9588 = distinct !DILocation(line: 242, column: 25, scope: !9583)
!9589 = !DILocation(line: 55, column: 2, scope: !9513, inlinedAt: !9590)
!9590 = distinct !DILocation(line: 145, column: 10, scope: !9504, inlinedAt: !9588)
!9591 = !DILocation(line: 0, scope: !9513, inlinedAt: !9590)
!9592 = !DILocation(line: 148, column: 2, scope: !9521, inlinedAt: !9588)
!9593 = !DILocation(line: 148, column: 2, scope: !9522, inlinedAt: !9588)
!9594 = !DILocation(line: 148, column: 2, scope: !9525, inlinedAt: !9588)
!9595 = !DILocation(line: 160, column: 2, scope: !9504, inlinedAt: !9588)
!9596 = !DILocation(line: 0, scope: !9583)
!9597 = !DILocation(line: 243, column: 17, scope: !9583)
!9598 = !DILocation(line: 243, column: 29, scope: !9583)
!9599 = !DILocation(line: 243, column: 43, scope: !9583)
!9600 = !DILocation(line: 0, scope: !9562, inlinedAt: !9601)
!9601 = distinct !DILocation(line: 245, column: 2, scope: !9583)
!9602 = !DILocation(line: 194, column: 2, scope: !9570, inlinedAt: !9601)
!9603 = !DILocation(line: 194, column: 2, scope: !9571, inlinedAt: !9601)
!9604 = !DILocation(line: 194, column: 2, scope: !9574, inlinedAt: !9601)
!9605 = !DILocation(line: 243, column: 27, scope: !9583)
!9606 = !DILocation(line: 243, column: 41, scope: !9583)
!9607 = !DILocation(line: 0, scope: !9576, inlinedAt: !9608)
!9608 = distinct !DILocation(line: 215, column: 2, scope: !9562, inlinedAt: !9601)
!9609 = !DILocation(line: 95, column: 2, scope: !9576, inlinedAt: !9608)
!9610 = !DILocation(line: 246, column: 13, scope: !9583)
!9611 = !DILocation(line: 246, column: 2, scope: !9583)
!9612 = distinct !DISubprogram(name: "sys_clock_cycle_get_32", scope: !1677, file: !1677, line: 249, type: !6087, scopeLine: 250, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !9613)
!9613 = !{!9614, !9615}
!9614 = !DILocalVariable(name: "key", scope: !9612, file: !1677, line: 251, type: !9487)
!9615 = !DILocalVariable(name: "ret", scope: !9612, file: !1677, line: 252, type: !152)
!9616 = !DILocation(line: 0, scope: !9504, inlinedAt: !9617)
!9617 = distinct !DILocation(line: 251, column: 25, scope: !9612)
!9618 = !DILocation(line: 55, column: 2, scope: !9513, inlinedAt: !9619)
!9619 = distinct !DILocation(line: 145, column: 10, scope: !9504, inlinedAt: !9617)
!9620 = !DILocation(line: 0, scope: !9513, inlinedAt: !9619)
!9621 = !DILocation(line: 148, column: 2, scope: !9521, inlinedAt: !9617)
!9622 = !DILocation(line: 148, column: 2, scope: !9522, inlinedAt: !9617)
!9623 = !DILocation(line: 148, column: 2, scope: !9525, inlinedAt: !9617)
!9624 = !DILocation(line: 160, column: 2, scope: !9504, inlinedAt: !9617)
!9625 = !DILocation(line: 0, scope: !9612)
!9626 = !DILocation(line: 252, column: 17, scope: !9612)
!9627 = !DILocation(line: 252, column: 29, scope: !9612)
!9628 = !DILocation(line: 0, scope: !9562, inlinedAt: !9629)
!9629 = distinct !DILocation(line: 254, column: 2, scope: !9612)
!9630 = !DILocation(line: 194, column: 2, scope: !9570, inlinedAt: !9629)
!9631 = !DILocation(line: 194, column: 2, scope: !9571, inlinedAt: !9629)
!9632 = !DILocation(line: 194, column: 2, scope: !9574, inlinedAt: !9629)
!9633 = !DILocation(line: 252, column: 27, scope: !9612)
!9634 = !DILocation(line: 0, scope: !9576, inlinedAt: !9635)
!9635 = distinct !DILocation(line: 215, column: 2, scope: !9562, inlinedAt: !9629)
!9636 = !DILocation(line: 95, column: 2, scope: !9576, inlinedAt: !9635)
!9637 = !DILocation(line: 255, column: 2, scope: !9612)
!9638 = distinct !DISubprogram(name: "sys_clock_idle_exit", scope: !1677, file: !1677, line: 258, type: !2909, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !1949)
!9639 = !DILocation(line: 260, column: 6, scope: !9640)
!9640 = distinct !DILexicalBlock(scope: !9638, file: !1677, line: 260, column: 6)
!9641 = !DILocation(line: 260, column: 16, scope: !9640)
!9642 = !DILocation(line: 260, column: 6, scope: !9638)
!9643 = !DILocation(line: 261, column: 17, scope: !9644)
!9644 = distinct !DILexicalBlock(scope: !9640, file: !1677, line: 260, column: 34)
!9645 = !DILocation(line: 262, column: 2, scope: !9644)
!9646 = !DILocation(line: 263, column: 1, scope: !9638)
!9647 = distinct !DISubprogram(name: "sys_clock_disable", scope: !1677, file: !1677, line: 265, type: !2909, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1452, retainedNodes: !1949)
!9648 = !DILocation(line: 267, column: 16, scope: !9647)
!9649 = !DILocation(line: 268, column: 1, scope: !9647)
!9650 = distinct !DISubprogram(name: "pinctrl_lookup_state", scope: !9651, file: !9651, line: 9, type: !9652, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2636, retainedNodes: !9682)
!9651 = !DIFile(filename: "zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9652 = !DISubroutineType(types: !9653)
!9653 = !{!107, !9654, !195, !9681}
!9654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9655, size: 32)
!9655 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9656)
!9656 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1377, line: 60, size: 64, elements: !9657)
!9657 = !{!9658, !9680}
!9658 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !9656, file: !1377, line: 69, baseType: !9659, size: 32)
!9659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9660, size: 32)
!9660 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9661)
!9661 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1377, line: 50, size: 64, elements: !9662)
!9662 = !{!9663, !9678, !9679}
!9663 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !9661, file: !1377, line: 52, baseType: !9664, size: 32)
!9664 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9665, size: 32)
!9665 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9666)
!9666 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1131, line: 64, baseType: !9667)
!9667 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1131, line: 59, size: 160, elements: !9668)
!9668 = !{!9669, !9677}
!9669 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !9667, file: !1131, line: 60, baseType: !9670, size: 128)
!9670 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pinmux", file: !1131, line: 51, size: 128, elements: !9671)
!9671 = !{!9672, !9673, !9674, !9675, !9676}
!9672 = !DIDerivedType(tag: DW_TAG_member, name: "mux_register", scope: !9670, file: !1131, line: 52, baseType: !152, size: 32)
!9673 = !DIDerivedType(tag: DW_TAG_member, name: "config_register", scope: !9670, file: !1131, line: 53, baseType: !152, size: 32, offset: 32)
!9674 = !DIDerivedType(tag: DW_TAG_member, name: "input_register", scope: !9670, file: !1131, line: 54, baseType: !152, size: 32, offset: 64)
!9675 = !DIDerivedType(tag: DW_TAG_member, name: "mux_mode", scope: !9670, file: !1131, line: 55, baseType: !195, size: 4, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!9676 = !DIDerivedType(tag: DW_TAG_member, name: "input_daisy", scope: !9670, file: !1131, line: 56, baseType: !152, size: 4, offset: 100, flags: DIFlagBitField, extraData: i64 96)
!9677 = !DIDerivedType(tag: DW_TAG_member, name: "pin_ctrl_flags", scope: !9667, file: !1131, line: 61, baseType: !152, size: 32, offset: 128)
!9678 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !9661, file: !1377, line: 54, baseType: !195, size: 8, offset: 32)
!9679 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !9661, file: !1377, line: 56, baseType: !195, size: 8, offset: 40)
!9680 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !9656, file: !1377, line: 71, baseType: !195, size: 8, offset: 32)
!9681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9659, size: 32)
!9682 = !{!9683, !9684, !9685}
!9683 = !DILocalVariable(name: "config", arg: 1, scope: !9650, file: !9651, line: 9, type: !9654)
!9684 = !DILocalVariable(name: "id", arg: 2, scope: !9650, file: !9651, line: 9, type: !195)
!9685 = !DILocalVariable(name: "state", arg: 3, scope: !9650, file: !9651, line: 10, type: !9681)
!9686 = !DILocation(line: 0, scope: !9650)
!9687 = !DILocation(line: 12, column: 20, scope: !9650)
!9688 = !DILocation(line: 13, column: 27, scope: !9650)
!9689 = !DILocation(line: 13, column: 42, scope: !9650)
!9690 = !DILocation(line: 13, column: 19, scope: !9650)
!9691 = !DILocation(line: 13, column: 16, scope: !9650)
!9692 = !DILocation(line: 13, column: 2, scope: !9650)
!9693 = distinct !{!9693, !9692, !9694}
!9694 = !DILocation(line: 19, column: 2, scope: !9650)
!9695 = !DILocation(line: 14, column: 23, scope: !9696)
!9696 = distinct !DILexicalBlock(scope: !9697, file: !9651, line: 14, column: 7)
!9697 = distinct !DILexicalBlock(scope: !9650, file: !9651, line: 13, column: 54)
!9698 = !DILocation(line: 14, column: 10, scope: !9696)
!9699 = !DILocation(line: 18, column: 11, scope: !9697)
!9700 = !DILocation(line: 14, column: 7, scope: !9697)
!9701 = !DILocation(line: 22, column: 1, scope: !9650)
!9702 = distinct !DISubprogram(name: "imx_pinctrl_init", scope: !1718, file: !1718, line: 51, type: !1724, scopeLine: 52, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1714, retainedNodes: !9703)
!9703 = !{!9704}
!9704 = !DILocalVariable(name: "dev", arg: 1, scope: !9702, file: !1718, line: 51, type: !1726)
!9705 = !DILocation(line: 0, scope: !9702)
!9706 = !DILocation(line: 66, column: 2, scope: !9702)
!9707 = distinct !DISubprogram(name: "pinctrl_configure_pins", scope: !1718, file: !1718, line: 10, type: !9708, scopeLine: 12, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1714, retainedNodes: !9724)
!9708 = !DISubroutineType(types: !9709)
!9709 = !{!107, !9710, !195, !22}
!9710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9711, size: 32)
!9711 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9712)
!9712 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1131, line: 64, baseType: !9713)
!9713 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1131, line: 59, size: 160, elements: !9714)
!9714 = !{!9715, !9723}
!9715 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !9713, file: !1131, line: 60, baseType: !9716, size: 128)
!9716 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pinmux", file: !1131, line: 51, size: 128, elements: !9717)
!9717 = !{!9718, !9719, !9720, !9721, !9722}
!9718 = !DIDerivedType(tag: DW_TAG_member, name: "mux_register", scope: !9716, file: !1131, line: 52, baseType: !152, size: 32)
!9719 = !DIDerivedType(tag: DW_TAG_member, name: "config_register", scope: !9716, file: !1131, line: 53, baseType: !152, size: 32, offset: 32)
!9720 = !DIDerivedType(tag: DW_TAG_member, name: "input_register", scope: !9716, file: !1131, line: 54, baseType: !152, size: 32, offset: 64)
!9721 = !DIDerivedType(tag: DW_TAG_member, name: "mux_mode", scope: !9716, file: !1131, line: 55, baseType: !195, size: 4, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!9722 = !DIDerivedType(tag: DW_TAG_member, name: "input_daisy", scope: !9716, file: !1131, line: 56, baseType: !152, size: 4, offset: 100, flags: DIFlagBitField, extraData: i64 96)
!9723 = !DIDerivedType(tag: DW_TAG_member, name: "pin_ctrl_flags", scope: !9713, file: !1131, line: 61, baseType: !152, size: 32, offset: 128)
!9724 = !{!9725, !9726, !9727, !9728, !9730, !9733, !9734, !9735, !9736, !9737}
!9725 = !DILocalVariable(name: "pins", arg: 1, scope: !9707, file: !1718, line: 10, type: !9710)
!9726 = !DILocalVariable(name: "pin_cnt", arg: 2, scope: !9707, file: !1718, line: 10, type: !195)
!9727 = !DILocalVariable(name: "reg", arg: 3, scope: !9707, file: !1718, line: 11, type: !22)
!9728 = !DILocalVariable(name: "i", scope: !9729, file: !1718, line: 14, type: !195)
!9729 = distinct !DILexicalBlock(scope: !9707, file: !1718, line: 14, column: 2)
!9730 = !DILocalVariable(name: "mux_register", scope: !9731, file: !1718, line: 15, type: !152)
!9731 = distinct !DILexicalBlock(scope: !9732, file: !1718, line: 14, column: 41)
!9732 = distinct !DILexicalBlock(scope: !9729, file: !1718, line: 14, column: 2)
!9733 = !DILocalVariable(name: "mux_mode", scope: !9731, file: !1718, line: 16, type: !152)
!9734 = !DILocalVariable(name: "input_register", scope: !9731, file: !1718, line: 17, type: !152)
!9735 = !DILocalVariable(name: "input_daisy", scope: !9731, file: !1718, line: 18, type: !152)
!9736 = !DILocalVariable(name: "config_register", scope: !9731, file: !1718, line: 19, type: !152)
!9737 = !DILocalVariable(name: "pin_ctrl_flags", scope: !9731, file: !1718, line: 20, type: !152)
!9738 = !DILocation(line: 0, scope: !9707)
!9739 = !DILocation(line: 0, scope: !9729)
!9740 = !DILocation(line: 14, column: 25, scope: !9732)
!9741 = !DILocation(line: 14, column: 2, scope: !9729)
!9742 = !DILocation(line: 48, column: 2, scope: !9707)
!9743 = !DILocation(line: 15, column: 42, scope: !9731)
!9744 = !DILocation(line: 0, scope: !9731)
!9745 = !DILocation(line: 16, column: 38, scope: !9731)
!9746 = !DILocation(line: 17, column: 44, scope: !9731)
!9747 = !DILocation(line: 19, column: 45, scope: !9731)
!9748 = !DILocation(line: 20, column: 37, scope: !9731)
!9749 = !DILocation(line: 35, column: 4, scope: !9731)
!9750 = !DILocation(line: 36, column: 4, scope: !9731)
!9751 = !DILocation(line: 35, column: 45, scope: !9731)
!9752 = !DILocation(line: 34, column: 5, scope: !9731)
!9753 = !DILocation(line: 34, column: 53, scope: !9731)
!9754 = !DILocation(line: 37, column: 7, scope: !9755)
!9755 = distinct !DILexicalBlock(scope: !9731, file: !1718, line: 37, column: 7)
!9756 = !DILocation(line: 37, column: 7, scope: !9731)
!9757 = !DILocation(line: 18, column: 41, scope: !9731)
!9758 = !DILocation(line: 39, column: 5, scope: !9759)
!9759 = distinct !DILexicalBlock(scope: !9755, file: !1718, line: 37, column: 23)
!9760 = !DILocation(line: 38, column: 6, scope: !9759)
!9761 = !DILocation(line: 38, column: 56, scope: !9759)
!9762 = !DILocation(line: 40, column: 3, scope: !9759)
!9763 = !DILocation(line: 41, column: 7, scope: !9764)
!9764 = distinct !DILexicalBlock(scope: !9731, file: !1718, line: 41, column: 7)
!9765 = !DILocation(line: 41, column: 7, scope: !9731)
!9766 = !DILocation(line: 43, column: 20, scope: !9767)
!9767 = distinct !DILexicalBlock(scope: !9764, file: !1718, line: 41, column: 24)
!9768 = !DILocation(line: 42, column: 6, scope: !9767)
!9769 = !DILocation(line: 42, column: 57, scope: !9767)
!9770 = !DILocation(line: 44, column: 3, scope: !9767)
!9771 = !DILocation(line: 14, column: 37, scope: !9732)
!9772 = distinct !{!9772, !9741, !9773}
!9773 = !DILocation(line: 47, column: 2, scope: !9729)
!9774 = distinct !DISubprogram(name: "CCM_SetRootDivider", scope: !9775, file: !9775, line: 43, type: !9776, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2638, retainedNodes: !9830)
!9775 = !DIFile(filename: "modules/hal/nxp/imx/drivers/ccm_imx7d.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9776 = !DISubroutineType(types: !9777)
!9777 = !{null, !9778, !152, !152, !152}
!9778 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9779, size: 32)
!9779 = !DIDerivedType(tag: DW_TAG_typedef, name: "CCM_Type", file: !506, line: 4575, baseType: !9780)
!9780 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !506, line: 4532, size: 390144, elements: !9781)
!9781 = !{!9782, !9783, !9784, !9785, !9786, !9787, !9795, !9796, !9804, !9805}
!9782 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0", scope: !9780, file: !506, line: 4533, baseType: !510, size: 32)
!9783 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0_SET", scope: !9780, file: !506, line: 4534, baseType: !510, size: 32, offset: 32)
!9784 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0_CLR", scope: !9780, file: !506, line: 4535, baseType: !510, size: 32, offset: 64)
!9785 = !DIDerivedType(tag: DW_TAG_member, name: "GPR0_TOG", scope: !9780, file: !506, line: 4536, baseType: !510, size: 32, offset: 96)
!9786 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !9780, file: !506, line: 4537, baseType: !515, size: 16256, offset: 128)
!9787 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL", scope: !9780, file: !506, line: 4543, baseType: !9788, size: 4224, offset: 16384)
!9788 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9789, size: 4224, elements: !526)
!9789 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !9780, file: !506, line: 4538, size: 128, elements: !9790)
!9790 = !{!9791, !9792, !9793, !9794}
!9791 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL", scope: !9789, file: !506, line: 4539, baseType: !510, size: 32)
!9792 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL_SET", scope: !9789, file: !506, line: 4540, baseType: !510, size: 32, offset: 32)
!9793 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL_CLR", scope: !9789, file: !506, line: 4541, baseType: !510, size: 32, offset: 64)
!9794 = !DIDerivedType(tag: DW_TAG_member, name: "PLL_CTRL_TOG", scope: !9789, file: !506, line: 4542, baseType: !510, size: 32, offset: 96)
!9795 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !9780, file: !506, line: 4544, baseType: !529, size: 110464, offset: 20608)
!9796 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR", scope: !9780, file: !506, line: 4550, baseType: !9797, size: 24448, offset: 131072)
!9797 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9798, size: 24448, elements: !540)
!9798 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !9780, file: !506, line: 4545, size: 128, elements: !9799)
!9799 = !{!9800, !9801, !9802, !9803}
!9800 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR", scope: !9798, file: !506, line: 4546, baseType: !510, size: 32)
!9801 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR_SET", scope: !9798, file: !506, line: 4547, baseType: !510, size: 32, offset: 32)
!9802 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR_CLR", scope: !9798, file: !506, line: 4548, baseType: !510, size: 32, offset: 64)
!9803 = !DIDerivedType(tag: DW_TAG_member, name: "CCGR_TOG", scope: !9798, file: !506, line: 4549, baseType: !510, size: 32, offset: 96)
!9804 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_2", scope: !9780, file: !506, line: 4551, baseType: !543, size: 106624, offset: 155520)
!9805 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_TOG", scope: !9780, file: !506, line: 4574, baseType: !9806, size: 128000, offset: 262144)
!9806 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9807, size: 128000, elements: !574)
!9807 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !9780, file: !506, line: 4552, size: 1024, elements: !9808)
!9808 = !{!9809, !9810, !9811, !9812, !9813, !9814, !9815, !9816, !9817, !9818, !9819, !9820, !9821, !9822, !9823, !9824, !9825, !9826, !9827, !9828, !9829}
!9809 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT", scope: !9807, file: !506, line: 4553, baseType: !510, size: 32)
!9810 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT_SET", scope: !9807, file: !506, line: 4554, baseType: !510, size: 32, offset: 32)
!9811 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT_CLR", scope: !9807, file: !506, line: 4555, baseType: !510, size: 32, offset: 64)
!9812 = !DIDerivedType(tag: DW_TAG_member, name: "TARGET_ROOT_TOG", scope: !9807, file: !506, line: 4556, baseType: !510, size: 32, offset: 96)
!9813 = !DIDerivedType(tag: DW_TAG_member, name: "MISC", scope: !9807, file: !506, line: 4557, baseType: !510, size: 32, offset: 128)
!9814 = !DIDerivedType(tag: DW_TAG_member, name: "MISC_ROOT_SET", scope: !9807, file: !506, line: 4558, baseType: !510, size: 32, offset: 160)
!9815 = !DIDerivedType(tag: DW_TAG_member, name: "MISC_ROOT_CLR", scope: !9807, file: !506, line: 4559, baseType: !510, size: 32, offset: 192)
!9816 = !DIDerivedType(tag: DW_TAG_member, name: "MISC_ROOT_TOG", scope: !9807, file: !506, line: 4560, baseType: !510, size: 32, offset: 224)
!9817 = !DIDerivedType(tag: DW_TAG_member, name: "POST", scope: !9807, file: !506, line: 4561, baseType: !510, size: 32, offset: 256)
!9818 = !DIDerivedType(tag: DW_TAG_member, name: "POST_ROOT_SET", scope: !9807, file: !506, line: 4562, baseType: !510, size: 32, offset: 288)
!9819 = !DIDerivedType(tag: DW_TAG_member, name: "POST_ROOT_CLR", scope: !9807, file: !506, line: 4563, baseType: !510, size: 32, offset: 320)
!9820 = !DIDerivedType(tag: DW_TAG_member, name: "POST_ROOT_TOG", scope: !9807, file: !506, line: 4564, baseType: !510, size: 32, offset: 352)
!9821 = !DIDerivedType(tag: DW_TAG_member, name: "PRE", scope: !9807, file: !506, line: 4565, baseType: !510, size: 32, offset: 384)
!9822 = !DIDerivedType(tag: DW_TAG_member, name: "PRE_ROOT_SET", scope: !9807, file: !506, line: 4566, baseType: !510, size: 32, offset: 416)
!9823 = !DIDerivedType(tag: DW_TAG_member, name: "PRE_ROOT_CLR", scope: !9807, file: !506, line: 4567, baseType: !510, size: 32, offset: 448)
!9824 = !DIDerivedType(tag: DW_TAG_member, name: "PRE_ROOT_TOG", scope: !9807, file: !506, line: 4568, baseType: !510, size: 32, offset: 480)
!9825 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !9807, file: !506, line: 4569, baseType: !567, size: 384, offset: 512)
!9826 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL", scope: !9807, file: !506, line: 4570, baseType: !510, size: 32, offset: 896)
!9827 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_SET", scope: !9807, file: !506, line: 4571, baseType: !510, size: 32, offset: 928)
!9828 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_CLR", scope: !9807, file: !506, line: 4572, baseType: !510, size: 32, offset: 960)
!9829 = !DIDerivedType(tag: DW_TAG_member, name: "ACCESS_CTRL_ROOT_TOG", scope: !9807, file: !506, line: 4573, baseType: !510, size: 32, offset: 992)
!9830 = !{!9831, !9832, !9833, !9834}
!9831 = !DILocalVariable(name: "base", arg: 1, scope: !9774, file: !9775, line: 43, type: !9778)
!9832 = !DILocalVariable(name: "ccmRoot", arg: 2, scope: !9774, file: !9775, line: 43, type: !152)
!9833 = !DILocalVariable(name: "pre", arg: 3, scope: !9774, file: !9775, line: 43, type: !152)
!9834 = !DILocalVariable(name: "post", arg: 4, scope: !9774, file: !9775, line: 43, type: !152)
!9835 = !DILocation(line: 0, scope: !9774)
!9836 = !DILocation(line: 45, column: 5, scope: !9837)
!9837 = distinct !DILexicalBlock(scope: !9838, file: !9775, line: 45, column: 5)
!9838 = distinct !DILexicalBlock(scope: !9774, file: !9775, line: 45, column: 5)
!9839 = !DILocation(line: 45, column: 5, scope: !9838)
!9840 = !DILocation(line: 45, column: 5, scope: !9841)
!9841 = distinct !DILexicalBlock(scope: !9837, file: !9775, line: 45, column: 5)
!9842 = !DILocation(line: 46, column: 5, scope: !9843)
!9843 = distinct !DILexicalBlock(scope: !9844, file: !9775, line: 46, column: 5)
!9844 = distinct !DILexicalBlock(scope: !9774, file: !9775, line: 46, column: 5)
!9845 = !DILocation(line: 46, column: 5, scope: !9844)
!9846 = !DILocation(line: 46, column: 5, scope: !9847)
!9847 = distinct !DILexicalBlock(scope: !9843, file: !9775, line: 46, column: 5)
!9848 = !DILocation(line: 48, column: 25, scope: !9774)
!9849 = !DILocation(line: 48, column: 42, scope: !9774)
!9850 = !DILocation(line: 50, column: 24, scope: !9774)
!9851 = !DILocation(line: 49, column: 94, scope: !9774)
!9852 = !DILocation(line: 50, column: 54, scope: !9774)
!9853 = !DILocation(line: 48, column: 22, scope: !9774)
!9854 = !DILocation(line: 51, column: 1, scope: !9774)
!9855 = distinct !DISubprogram(name: "CCM_GetRootDivider", scope: !9775, file: !9775, line: 59, type: !9856, scopeLine: 60, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2638, retainedNodes: !9858)
!9856 = !DISubroutineType(types: !9857)
!9857 = !{null, !9778, !152, !1403, !1403}
!9858 = !{!9859, !9860, !9861, !9862}
!9859 = !DILocalVariable(name: "base", arg: 1, scope: !9855, file: !9775, line: 59, type: !9778)
!9860 = !DILocalVariable(name: "ccmRoot", arg: 2, scope: !9855, file: !9775, line: 59, type: !152)
!9861 = !DILocalVariable(name: "pre", arg: 3, scope: !9855, file: !9775, line: 59, type: !1403)
!9862 = !DILocalVariable(name: "post", arg: 4, scope: !9855, file: !9775, line: 59, type: !1403)
!9863 = !DILocation(line: 0, scope: !9855)
!9864 = !DILocation(line: 61, column: 5, scope: !9865)
!9865 = distinct !DILexicalBlock(scope: !9866, file: !9775, line: 61, column: 5)
!9866 = distinct !DILexicalBlock(scope: !9855, file: !9775, line: 61, column: 5)
!9867 = !DILocation(line: 61, column: 5, scope: !9868)
!9868 = distinct !DILexicalBlock(scope: !9865, file: !9775, line: 61, column: 5)
!9869 = !DILocation(line: 63, column: 13, scope: !9855)
!9870 = !DILocation(line: 63, column: 63, scope: !9855)
!9871 = !DILocation(line: 63, column: 10, scope: !9855)
!9872 = !DILocation(line: 64, column: 14, scope: !9855)
!9873 = !DILocation(line: 64, column: 31, scope: !9855)
!9874 = !DILocation(line: 64, column: 11, scope: !9855)
!9875 = !DILocation(line: 65, column: 1, scope: !9855)
!9876 = distinct !DISubprogram(name: "CCM_UpdateRoot", scope: !9775, file: !9775, line: 73, type: !9877, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2638, retainedNodes: !9879)
!9877 = !DISubroutineType(types: !9878)
!9878 = !{null, !9778, !152, !152, !152, !152}
!9879 = !{!9880, !9881, !9882, !9883, !9884}
!9880 = !DILocalVariable(name: "base", arg: 1, scope: !9876, file: !9775, line: 73, type: !9778)
!9881 = !DILocalVariable(name: "ccmRoot", arg: 2, scope: !9876, file: !9775, line: 73, type: !152)
!9882 = !DILocalVariable(name: "mux", arg: 3, scope: !9876, file: !9775, line: 73, type: !152)
!9883 = !DILocalVariable(name: "pre", arg: 4, scope: !9876, file: !9775, line: 73, type: !152)
!9884 = !DILocalVariable(name: "post", arg: 5, scope: !9876, file: !9775, line: 73, type: !152)
!9885 = !DILocation(line: 0, scope: !9876)
!9886 = !DILocation(line: 75, column: 5, scope: !9887)
!9887 = distinct !DILexicalBlock(scope: !9888, file: !9775, line: 75, column: 5)
!9888 = distinct !DILexicalBlock(scope: !9876, file: !9775, line: 75, column: 5)
!9889 = !DILocation(line: 75, column: 5, scope: !9888)
!9890 = !DILocation(line: 75, column: 5, scope: !9891)
!9891 = distinct !DILexicalBlock(scope: !9887, file: !9775, line: 75, column: 5)
!9892 = !DILocation(line: 76, column: 5, scope: !9893)
!9893 = distinct !DILexicalBlock(scope: !9894, file: !9775, line: 76, column: 5)
!9894 = distinct !DILexicalBlock(scope: !9876, file: !9775, line: 76, column: 5)
!9895 = !DILocation(line: 76, column: 5, scope: !9894)
!9896 = !DILocation(line: 76, column: 5, scope: !9897)
!9897 = distinct !DILexicalBlock(scope: !9893, file: !9775, line: 76, column: 5)
!9898 = !DILocation(line: 78, column: 25, scope: !9876)
!9899 = !DILocation(line: 78, column: 42, scope: !9876)
!9900 = !DILocation(line: 80, column: 24, scope: !9876)
!9901 = !DILocation(line: 80, column: 51, scope: !9876)
!9902 = !DILocation(line: 79, column: 121, scope: !9876)
!9903 = !DILocation(line: 80, column: 49, scope: !9876)
!9904 = !DILocation(line: 80, column: 81, scope: !9876)
!9905 = !DILocation(line: 78, column: 22, scope: !9876)
!9906 = !DILocation(line: 81, column: 1, scope: !9876)
!9907 = distinct !DISubprogram(name: "CCM_ANALOG_GetArmPllFreq", scope: !9908, file: !9908, line: 43, type: !9909, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2641, retainedNodes: !9911)
!9908 = !DIFile(filename: "modules/hal/nxp/imx/drivers/ccm_analog_imx7d.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9909 = !DISubroutineType(types: !9910)
!9910 = !{!152, !2654}
!9911 = !{!9912}
!9912 = !DILocalVariable(name: "base", arg: 1, scope: !9907, file: !9908, line: 43, type: !2654)
!9913 = !DILocation(line: 0, scope: !9907)
!9914 = !DILocation(line: 45, column: 9, scope: !9915)
!9915 = distinct !DILexicalBlock(scope: !9907, file: !9908, line: 45, column: 9)
!9916 = !DILocation(line: 45, column: 9, scope: !9907)
!9917 = !DILocation(line: 48, column: 26, scope: !9907)
!9918 = !DILocation(line: 48, column: 45, scope: !9907)
!9919 = !DILocation(line: 48, column: 23, scope: !9907)
!9920 = !DILocation(line: 48, column: 5, scope: !9907)
!9921 = !DILocation(line: 49, column: 1, scope: !9907)
!9922 = distinct !DISubprogram(name: "CCM_ANALOG_IsPllBypassed", scope: !2645, file: !2645, line: 220, type: !9923, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2641, retainedNodes: !9925)
!9923 = !DISubroutineType(types: !9924)
!9924 = !{!145, !2654, !152}
!9925 = !{!9926, !9927}
!9926 = !DILocalVariable(name: "base", arg: 1, scope: !9922, file: !2645, line: 220, type: !2654)
!9927 = !DILocalVariable(name: "pllControl", arg: 2, scope: !9922, file: !2645, line: 220, type: !152)
!9928 = !DILocation(line: 0, scope: !9922)
!9929 = !DILocation(line: 222, column: 19, scope: !9922)
!9930 = !DILocation(line: 222, column: 58, scope: !9922)
!9931 = !DILocation(line: 222, column: 12, scope: !9922)
!9932 = !DILocation(line: 222, column: 5, scope: !9922)
!9933 = distinct !DISubprogram(name: "CCM_ANALOG_GetSysPllFreq", scope: !9908, file: !9908, line: 57, type: !9909, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2641, retainedNodes: !9934)
!9934 = !{!9935}
!9935 = !DILocalVariable(name: "base", arg: 1, scope: !9933, file: !9908, line: 57, type: !2654)
!9936 = !DILocation(line: 0, scope: !9933)
!9937 = !DILocation(line: 59, column: 9, scope: !9938)
!9938 = distinct !DILexicalBlock(scope: !9933, file: !9908, line: 59, column: 9)
!9939 = !DILocation(line: 59, column: 9, scope: !9933)
!9940 = !DILocation(line: 62, column: 9, scope: !9941)
!9941 = distinct !DILexicalBlock(scope: !9933, file: !9908, line: 62, column: 9)
!9942 = !DILocation(line: 62, column: 28, scope: !9941)
!9943 = !DILocation(line: 0, scope: !9941)
!9944 = !DILocation(line: 66, column: 1, scope: !9933)
!9945 = distinct !DISubprogram(name: "CCM_ANALOG_GetDdrPllFreq", scope: !9908, file: !9908, line: 74, type: !9909, scopeLine: 75, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2641, retainedNodes: !9946)
!9946 = !{!9947, !9948, !9949, !9950}
!9947 = !DILocalVariable(name: "base", arg: 1, scope: !9945, file: !9908, line: 74, type: !2654)
!9948 = !DILocalVariable(name: "divSelect", scope: !9945, file: !9908, line: 76, type: !195)
!9949 = !DILocalVariable(name: "divTestSelect", scope: !9945, file: !9908, line: 76, type: !195)
!9950 = !DILocalVariable(name: "factor", scope: !9945, file: !9908, line: 77, type: !2717)
!9951 = !DILocation(line: 0, scope: !9945)
!9952 = !DILocation(line: 79, column: 9, scope: !9953)
!9953 = distinct !DILexicalBlock(scope: !9945, file: !9908, line: 79, column: 9)
!9954 = !DILocation(line: 79, column: 9, scope: !9945)
!9955 = !DILocation(line: 82, column: 17, scope: !9945)
!9956 = !DILocation(line: 83, column: 22, scope: !9945)
!9957 = !DILocation(line: 83, column: 100, scope: !9945)
!9958 = !DILocation(line: 83, column: 21, scope: !9945)
!9959 = !DILocation(line: 86, column: 5, scope: !9945)
!9960 = !DILocation(line: 100, column: 9, scope: !9961)
!9961 = distinct !DILexicalBlock(scope: !9945, file: !9908, line: 100, column: 9)
!9962 = !DILocation(line: 100, column: 41, scope: !9961)
!9963 = !DILocation(line: 100, column: 9, scope: !9945)
!9964 = !DILocation(line: 102, column: 27, scope: !9965)
!9965 = distinct !DILexicalBlock(scope: !9961, file: !9908, line: 101, column: 5)
!9966 = !DILocation(line: 102, column: 59, scope: !9965)
!9967 = !DILocation(line: 102, column: 19, scope: !9965)
!9968 = !DILocation(line: 103, column: 27, scope: !9965)
!9969 = !DILocation(line: 103, column: 62, scope: !9965)
!9970 = !DILocation(line: 103, column: 19, scope: !9965)
!9971 = !DILocation(line: 102, column: 95, scope: !9965)
!9972 = !DILocation(line: 104, column: 27, scope: !9965)
!9973 = !DILocation(line: 104, column: 60, scope: !9965)
!9974 = !DILocation(line: 104, column: 19, scope: !9965)
!9975 = !DILocation(line: 103, column: 98, scope: !9965)
!9976 = !DILocation(line: 105, column: 39, scope: !9965)
!9977 = !DILocation(line: 105, column: 27, scope: !9965)
!9978 = !DILocation(line: 105, column: 60, scope: !9965)
!9979 = !DILocation(line: 105, column: 70, scope: !9965)
!9980 = !DILocation(line: 105, column: 57, scope: !9965)
!9981 = !DILocation(line: 105, column: 16, scope: !9965)
!9982 = !DILocation(line: 105, column: 9, scope: !9965)
!9983 = !DILocation(line: 109, column: 28, scope: !9984)
!9984 = distinct !DILexicalBlock(scope: !9961, file: !9908, line: 108, column: 5)
!9985 = !DILocation(line: 109, column: 48, scope: !9984)
!9986 = !DILocation(line: 109, column: 46, scope: !9984)
!9987 = !DILocation(line: 109, column: 9, scope: !9984)
!9988 = !DILocation(line: 111, column: 1, scope: !9945)
!9989 = distinct !DISubprogram(name: "CCM_ANALOG_GetEnetPllFreq", scope: !9908, file: !9908, line: 119, type: !9909, scopeLine: 120, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2641, retainedNodes: !9990)
!9990 = !{!9991}
!9991 = !DILocalVariable(name: "base", arg: 1, scope: !9989, file: !9908, line: 119, type: !2654)
!9992 = !DILocation(line: 0, scope: !9989)
!9993 = !DILocation(line: 121, column: 9, scope: !9994)
!9994 = distinct !DILexicalBlock(scope: !9989, file: !9908, line: 121, column: 9)
!9995 = !DILocation(line: 125, column: 1, scope: !9989)
!9996 = distinct !DISubprogram(name: "CCM_ANALOG_GetAudioPllFreq", scope: !9908, file: !9908, line: 133, type: !9909, scopeLine: 134, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2641, retainedNodes: !9997)
!9997 = !{!9998, !9999, !10000, !10001, !10002}
!9998 = !DILocalVariable(name: "base", arg: 1, scope: !9996, file: !9908, line: 133, type: !2654)
!9999 = !DILocalVariable(name: "divSelect", scope: !9996, file: !9908, line: 135, type: !195)
!10000 = !DILocalVariable(name: "divPostSelect", scope: !9996, file: !9908, line: 135, type: !195)
!10001 = !DILocalVariable(name: "divTestSelect", scope: !9996, file: !9908, line: 135, type: !195)
!10002 = !DILocalVariable(name: "factor", scope: !9996, file: !9908, line: 136, type: !2717)
!10003 = !DILocation(line: 0, scope: !9996)
!10004 = !DILocation(line: 138, column: 9, scope: !10005)
!10005 = distinct !DILexicalBlock(scope: !9996, file: !9908, line: 138, column: 9)
!10006 = !DILocation(line: 138, column: 9, scope: !9996)
!10007 = !DILocation(line: 141, column: 17, scope: !9996)
!10008 = !DILocation(line: 142, column: 22, scope: !9996)
!10009 = !DILocation(line: 142, column: 101, scope: !9996)
!10010 = !DILocation(line: 142, column: 21, scope: !9996)
!10011 = !DILocation(line: 144, column: 22, scope: !9996)
!10012 = !DILocation(line: 144, column: 104, scope: !9996)
!10013 = !DILocation(line: 144, column: 21, scope: !9996)
!10014 = !DILocation(line: 147, column: 5, scope: !9996)
!10015 = !DILocation(line: 161, column: 5, scope: !9996)
!10016 = !DILocation(line: 175, column: 9, scope: !10017)
!10017 = distinct !DILexicalBlock(scope: !9996, file: !9908, line: 175, column: 9)
!10018 = !DILocation(line: 175, column: 43, scope: !10017)
!10019 = !DILocation(line: 175, column: 9, scope: !9996)
!10020 = !DILocation(line: 177, column: 27, scope: !10021)
!10021 = distinct !DILexicalBlock(scope: !10017, file: !9908, line: 176, column: 5)
!10022 = !DILocation(line: 177, column: 61, scope: !10021)
!10023 = !DILocation(line: 177, column: 19, scope: !10021)
!10024 = !DILocation(line: 178, column: 27, scope: !10021)
!10025 = !DILocation(line: 178, column: 64, scope: !10021)
!10026 = !DILocation(line: 178, column: 19, scope: !10021)
!10027 = !DILocation(line: 177, column: 99, scope: !10021)
!10028 = !DILocation(line: 179, column: 27, scope: !10021)
!10029 = !DILocation(line: 179, column: 62, scope: !10021)
!10030 = !DILocation(line: 179, column: 19, scope: !10021)
!10031 = !DILocation(line: 178, column: 102, scope: !10021)
!10032 = !DILocation(line: 180, column: 40, scope: !10021)
!10033 = !DILocation(line: 180, column: 58, scope: !10021)
!10034 = !DILocation(line: 180, column: 27, scope: !10021)
!10035 = !DILocation(line: 180, column: 79, scope: !10021)
!10036 = !DILocation(line: 180, column: 89, scope: !10021)
!10037 = !DILocation(line: 180, column: 76, scope: !10021)
!10038 = !DILocation(line: 180, column: 16, scope: !10021)
!10039 = !DILocation(line: 180, column: 9, scope: !10021)
!10040 = !DILocation(line: 184, column: 29, scope: !10041)
!10041 = distinct !DILexicalBlock(scope: !10017, file: !9908, line: 183, column: 5)
!10042 = !DILocation(line: 184, column: 47, scope: !10041)
!10043 = !DILocation(line: 184, column: 67, scope: !10041)
!10044 = !DILocation(line: 184, column: 65, scope: !10041)
!10045 = !DILocation(line: 184, column: 9, scope: !10041)
!10046 = !DILocation(line: 186, column: 1, scope: !9996)
!10047 = distinct !DISubprogram(name: "CCM_ANALOG_GetVideoPllFreq", scope: !9908, file: !9908, line: 194, type: !9909, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2641, retainedNodes: !10048)
!10048 = !{!10049, !10050, !10051, !10052, !10053}
!10049 = !DILocalVariable(name: "base", arg: 1, scope: !10047, file: !9908, line: 194, type: !2654)
!10050 = !DILocalVariable(name: "divSelect", scope: !10047, file: !9908, line: 196, type: !195)
!10051 = !DILocalVariable(name: "divPostSelect", scope: !10047, file: !9908, line: 196, type: !195)
!10052 = !DILocalVariable(name: "divTestSelect", scope: !10047, file: !9908, line: 196, type: !195)
!10053 = !DILocalVariable(name: "factor", scope: !10047, file: !9908, line: 197, type: !2717)
!10054 = !DILocation(line: 0, scope: !10047)
!10055 = !DILocation(line: 199, column: 9, scope: !10056)
!10056 = distinct !DILexicalBlock(scope: !10047, file: !9908, line: 199, column: 9)
!10057 = !DILocation(line: 199, column: 9, scope: !10047)
!10058 = !DILocation(line: 202, column: 17, scope: !10047)
!10059 = !DILocation(line: 203, column: 22, scope: !10047)
!10060 = !DILocation(line: 203, column: 101, scope: !10047)
!10061 = !DILocation(line: 203, column: 21, scope: !10047)
!10062 = !DILocation(line: 205, column: 22, scope: !10047)
!10063 = !DILocation(line: 205, column: 104, scope: !10047)
!10064 = !DILocation(line: 205, column: 21, scope: !10047)
!10065 = !DILocation(line: 208, column: 5, scope: !10047)
!10066 = !DILocation(line: 222, column: 5, scope: !10047)
!10067 = !DILocation(line: 236, column: 9, scope: !10068)
!10068 = distinct !DILexicalBlock(scope: !10047, file: !9908, line: 236, column: 9)
!10069 = !DILocation(line: 236, column: 43, scope: !10068)
!10070 = !DILocation(line: 236, column: 9, scope: !10047)
!10071 = !DILocation(line: 238, column: 27, scope: !10072)
!10072 = distinct !DILexicalBlock(scope: !10068, file: !9908, line: 237, column: 5)
!10073 = !DILocation(line: 238, column: 61, scope: !10072)
!10074 = !DILocation(line: 238, column: 19, scope: !10072)
!10075 = !DILocation(line: 239, column: 27, scope: !10072)
!10076 = !DILocation(line: 239, column: 64, scope: !10072)
!10077 = !DILocation(line: 239, column: 19, scope: !10072)
!10078 = !DILocation(line: 238, column: 99, scope: !10072)
!10079 = !DILocation(line: 240, column: 27, scope: !10072)
!10080 = !DILocation(line: 240, column: 62, scope: !10072)
!10081 = !DILocation(line: 240, column: 19, scope: !10072)
!10082 = !DILocation(line: 239, column: 102, scope: !10072)
!10083 = !DILocation(line: 241, column: 40, scope: !10072)
!10084 = !DILocation(line: 241, column: 58, scope: !10072)
!10085 = !DILocation(line: 241, column: 27, scope: !10072)
!10086 = !DILocation(line: 241, column: 79, scope: !10072)
!10087 = !DILocation(line: 241, column: 89, scope: !10072)
!10088 = !DILocation(line: 241, column: 76, scope: !10072)
!10089 = !DILocation(line: 241, column: 16, scope: !10072)
!10090 = !DILocation(line: 241, column: 9, scope: !10072)
!10091 = !DILocation(line: 245, column: 29, scope: !10092)
!10092 = distinct !DILexicalBlock(scope: !10068, file: !9908, line: 244, column: 5)
!10093 = !DILocation(line: 245, column: 47, scope: !10092)
!10094 = !DILocation(line: 245, column: 67, scope: !10092)
!10095 = !DILocation(line: 245, column: 65, scope: !10092)
!10096 = !DILocation(line: 245, column: 9, scope: !10092)
!10097 = !DILocation(line: 247, column: 1, scope: !10047)
!10098 = distinct !DISubprogram(name: "CCM_ANALOG_GetPfdFreq", scope: !9908, file: !9908, line: 255, type: !10099, scopeLine: 256, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2641, retainedNodes: !10101)
!10099 = !DISubroutineType(types: !10100)
!10100 = !{!152, !2654, !152}
!10101 = !{!10102, !10103, !10104, !10105}
!10102 = !DILocalVariable(name: "base", arg: 1, scope: !10098, file: !9908, line: 255, type: !2654)
!10103 = !DILocalVariable(name: "pfdFrac", arg: 2, scope: !10098, file: !9908, line: 255, type: !152)
!10104 = !DILocalVariable(name: "main", scope: !10098, file: !9908, line: 257, type: !152)
!10105 = !DILocalVariable(name: "frac", scope: !10098, file: !9908, line: 257, type: !152)
!10106 = !DILocation(line: 0, scope: !10098)
!10107 = !DILocation(line: 260, column: 5, scope: !10108)
!10108 = distinct !DILexicalBlock(scope: !10109, file: !9908, line: 260, column: 5)
!10109 = distinct !DILexicalBlock(scope: !10098, file: !9908, line: 260, column: 5)
!10110 = !DILocation(line: 260, column: 5, scope: !10109)
!10111 = !DILocation(line: 260, column: 5, scope: !10112)
!10112 = distinct !DILexicalBlock(scope: !10108, file: !9908, line: 260, column: 5)
!10113 = !DILocation(line: 262, column: 12, scope: !10098)
!10114 = !DILocation(line: 263, column: 12, scope: !10098)
!10115 = !DILocation(line: 265, column: 17, scope: !10098)
!10116 = !DILocation(line: 265, column: 24, scope: !10098)
!10117 = !DILocation(line: 265, column: 5, scope: !10098)
!10118 = distinct !DISubprogram(name: "CCM_ANALOG_GetPfdFrac", scope: !2645, file: !2645, line: 373, type: !10099, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2641, retainedNodes: !10119)
!10119 = !{!10120, !10121}
!10120 = !DILocalVariable(name: "base", arg: 1, scope: !10118, file: !2645, line: 373, type: !2654)
!10121 = !DILocalVariable(name: "pfdFrac", arg: 2, scope: !10118, file: !2645, line: 373, type: !152)
!10122 = !DILocation(line: 0, scope: !10118)
!10123 = !DILocation(line: 375, column: 13, scope: !10118)
!10124 = !DILocation(line: 375, column: 52, scope: !10118)
!10125 = !DILocation(line: 375, column: 49, scope: !10118)
!10126 = !DILocation(line: 375, column: 85, scope: !10118)
!10127 = !DILocation(line: 375, column: 5, scope: !10118)
!10128 = distinct !DISubprogram(name: "GPIO_Init", scope: !10129, file: !10129, line: 47, type: !10130, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2718, retainedNodes: !10154)
!10129 = !DIFile(filename: "modules/hal/nxp/imx/drivers/gpio_imx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10130 = !DISubroutineType(types: !10131)
!10131 = !{null, !10132, !10144}
!10132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10133, size: 32)
!10133 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_Type", file: !506, line: 19729, baseType: !10134)
!10134 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !506, line: 19720, size: 256, elements: !10135)
!10135 = !{!10136, !10137, !10138, !10139, !10140, !10141, !10142, !10143}
!10136 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !10134, file: !506, line: 19721, baseType: !510, size: 32)
!10137 = !DIDerivedType(tag: DW_TAG_member, name: "GDIR", scope: !10134, file: !506, line: 19722, baseType: !510, size: 32, offset: 32)
!10138 = !DIDerivedType(tag: DW_TAG_member, name: "PSR", scope: !10134, file: !506, line: 19723, baseType: !581, size: 32, offset: 64)
!10139 = !DIDerivedType(tag: DW_TAG_member, name: "ICR1", scope: !10134, file: !506, line: 19724, baseType: !510, size: 32, offset: 96)
!10140 = !DIDerivedType(tag: DW_TAG_member, name: "ICR2", scope: !10134, file: !506, line: 19725, baseType: !510, size: 32, offset: 128)
!10141 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !10134, file: !506, line: 19726, baseType: !510, size: 32, offset: 160)
!10142 = !DIDerivedType(tag: DW_TAG_member, name: "ISR", scope: !10134, file: !506, line: 19727, baseType: !510, size: 32, offset: 192)
!10143 = !DIDerivedType(tag: DW_TAG_member, name: "EDGE_SEL", scope: !10134, file: !506, line: 19728, baseType: !510, size: 32, offset: 224)
!10144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10145, size: 32)
!10145 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10146)
!10146 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_init_config_t", file: !989, line: 78, baseType: !10147)
!10147 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_gpio_init_config", file: !989, line: 73, size: 96, elements: !10148)
!10148 = !{!10149, !10150, !10152}
!10149 = !DIDerivedType(tag: DW_TAG_member, name: "pin", scope: !10147, file: !989, line: 75, baseType: !152, size: 32)
!10150 = !DIDerivedType(tag: DW_TAG_member, name: "direction", scope: !10147, file: !989, line: 76, baseType: !10151, size: 32, offset: 32)
!10151 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_direction_t", file: !989, line: 53, baseType: !2721)
!10152 = !DIDerivedType(tag: DW_TAG_member, name: "interruptMode", scope: !10147, file: !989, line: 77, baseType: !10153, size: 32, offset: 64)
!10153 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_interrupt_mode_t", file: !989, line: 63, baseType: !2725)
!10154 = !{!10155, !10156, !10157, !10158}
!10155 = !DILocalVariable(name: "base", arg: 1, scope: !10128, file: !10129, line: 47, type: !10132)
!10156 = !DILocalVariable(name: "initConfig", arg: 2, scope: !10128, file: !10129, line: 47, type: !10144)
!10157 = !DILocalVariable(name: "pin", scope: !10128, file: !10129, line: 49, type: !152)
!10158 = !DILocalVariable(name: "icr", scope: !10128, file: !10129, line: 50, type: !630)
!10159 = !DILocation(line: 0, scope: !10128)
!10160 = !DILocation(line: 53, column: 5, scope: !10128)
!10161 = !DILocation(line: 53, column: 24, scope: !10128)
!10162 = !DILocation(line: 54, column: 2, scope: !10128)
!10163 = !DILocation(line: 54, column: 26, scope: !10128)
!10164 = !DILocation(line: 57, column: 23, scope: !10128)
!10165 = !DILocation(line: 60, column: 21, scope: !10166)
!10166 = distinct !DILexicalBlock(scope: !10128, file: !10129, line: 60, column: 9)
!10167 = !DILocation(line: 60, column: 31, scope: !10166)
!10168 = !DILocation(line: 0, scope: !10166)
!10169 = !DILocation(line: 60, column: 9, scope: !10128)
!10170 = !DILocation(line: 61, column: 9, scope: !10166)
!10171 = !DILocation(line: 61, column: 29, scope: !10166)
!10172 = !DILocation(line: 63, column: 32, scope: !10166)
!10173 = !DILocation(line: 63, column: 9, scope: !10166)
!10174 = !DILocation(line: 63, column: 29, scope: !10166)
!10175 = !DILocation(line: 66, column: 12, scope: !10176)
!10176 = distinct !DILexicalBlock(scope: !10128, file: !10129, line: 66, column: 8)
!10177 = !DILocation(line: 66, column: 8, scope: !10128)
!10178 = !DILocation(line: 73, column: 24, scope: !10128)
!10179 = !DILocation(line: 73, column: 5, scope: !10128)
!10180 = !DILocation(line: 77, column: 30, scope: !10181)
!10181 = distinct !DILexicalBlock(scope: !10182, file: !10129, line: 76, column: 9)
!10182 = distinct !DILexicalBlock(scope: !10128, file: !10129, line: 74, column: 5)
!10183 = !DILocation(line: 77, column: 26, scope: !10181)
!10184 = !DILocation(line: 77, column: 21, scope: !10181)
!10185 = !DILocation(line: 77, column: 18, scope: !10181)
!10186 = !DILocation(line: 78, column: 13, scope: !10181)
!10187 = !DILocation(line: 82, column: 21, scope: !10188)
!10188 = distinct !DILexicalBlock(scope: !10182, file: !10129, line: 81, column: 9)
!10189 = !DILocation(line: 82, column: 38, scope: !10188)
!10190 = !DILocation(line: 82, column: 34, scope: !10188)
!10191 = !DILocation(line: 82, column: 29, scope: !10188)
!10192 = !DILocation(line: 82, column: 26, scope: !10188)
!10193 = !DILocation(line: 82, column: 53, scope: !10188)
!10194 = !DILocation(line: 82, column: 47, scope: !10188)
!10195 = !DILocation(line: 83, column: 13, scope: !10188)
!10196 = !DILocation(line: 87, column: 21, scope: !10197)
!10197 = distinct !DILexicalBlock(scope: !10182, file: !10129, line: 86, column: 9)
!10198 = !DILocation(line: 87, column: 38, scope: !10197)
!10199 = !DILocation(line: 87, column: 34, scope: !10197)
!10200 = !DILocation(line: 87, column: 29, scope: !10197)
!10201 = !DILocation(line: 87, column: 26, scope: !10197)
!10202 = !DILocation(line: 87, column: 53, scope: !10197)
!10203 = !DILocation(line: 87, column: 47, scope: !10197)
!10204 = !DILocation(line: 88, column: 13, scope: !10197)
!10205 = !DILocation(line: 92, column: 29, scope: !10206)
!10206 = distinct !DILexicalBlock(scope: !10182, file: !10129, line: 91, column: 9)
!10207 = !DILocation(line: 92, column: 25, scope: !10206)
!10208 = !DILocation(line: 92, column: 18, scope: !10206)
!10209 = !DILocation(line: 93, column: 13, scope: !10206)
!10210 = !DILocation(line: 0, scope: !10182)
!10211 = !DILocation(line: 100, column: 1, scope: !10128)
!10212 = distinct !DISubprogram(name: "GPIO_WritePinOutput", scope: !10129, file: !10129, line: 111, type: !10213, scopeLine: 112, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2718, retainedNodes: !10216)
!10213 = !DISubroutineType(types: !10214)
!10214 = !{null, !10132, !152, !10215}
!10215 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_action_t", file: !989, line: 70, baseType: !988)
!10216 = !{!10217, !10218, !10219}
!10217 = !DILocalVariable(name: "base", arg: 1, scope: !10212, file: !10129, line: 111, type: !10132)
!10218 = !DILocalVariable(name: "pin", arg: 2, scope: !10212, file: !10129, line: 111, type: !152)
!10219 = !DILocalVariable(name: "pinVal", arg: 3, scope: !10212, file: !10129, line: 111, type: !10215)
!10220 = !DILocation(line: 0, scope: !10212)
!10221 = !DILocation(line: 113, column: 5, scope: !10222)
!10222 = distinct !DILexicalBlock(scope: !10223, file: !10129, line: 113, column: 5)
!10223 = distinct !DILexicalBlock(scope: !10212, file: !10129, line: 113, column: 5)
!10224 = !DILocation(line: 113, column: 5, scope: !10223)
!10225 = !DILocation(line: 113, column: 5, scope: !10226)
!10226 = distinct !DILexicalBlock(scope: !10222, file: !10129, line: 113, column: 5)
!10227 = !DILocation(line: 114, column: 16, scope: !10228)
!10228 = distinct !DILexicalBlock(scope: !10212, file: !10129, line: 114, column: 9)
!10229 = !DILocation(line: 0, scope: !10228)
!10230 = !DILocation(line: 114, column: 9, scope: !10212)
!10231 = !DILocation(line: 116, column: 9, scope: !10232)
!10232 = distinct !DILexicalBlock(scope: !10228, file: !10129, line: 115, column: 5)
!10233 = !DILocation(line: 116, column: 27, scope: !10232)
!10234 = !DILocation(line: 117, column: 5, scope: !10232)
!10235 = !DILocation(line: 120, column: 30, scope: !10236)
!10236 = distinct !DILexicalBlock(scope: !10228, file: !10129, line: 119, column: 5)
!10237 = !DILocation(line: 120, column: 9, scope: !10236)
!10238 = !DILocation(line: 120, column: 27, scope: !10236)
!10239 = !DILocation(line: 122, column: 1, scope: !10212)
!10240 = distinct !DISubprogram(name: "GPIO_SetPinIntMode", scope: !10129, file: !10129, line: 133, type: !10241, scopeLine: 134, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2718, retainedNodes: !10243)
!10241 = !DISubroutineType(types: !10242)
!10242 = !{null, !10132, !152, !145}
!10243 = !{!10244, !10245, !10246}
!10244 = !DILocalVariable(name: "base", arg: 1, scope: !10240, file: !10129, line: 133, type: !10132)
!10245 = !DILocalVariable(name: "pin", arg: 2, scope: !10240, file: !10129, line: 133, type: !152)
!10246 = !DILocalVariable(name: "enable", arg: 3, scope: !10240, file: !10129, line: 133, type: !145)
!10247 = !DILocation(line: 0, scope: !10240)
!10248 = !DILocation(line: 135, column: 5, scope: !10249)
!10249 = distinct !DILexicalBlock(scope: !10250, file: !10129, line: 135, column: 5)
!10250 = distinct !DILexicalBlock(scope: !10240, file: !10129, line: 135, column: 5)
!10251 = !DILocation(line: 135, column: 5, scope: !10250)
!10252 = !DILocation(line: 135, column: 5, scope: !10253)
!10253 = distinct !DILexicalBlock(scope: !10249, file: !10129, line: 135, column: 5)
!10254 = !DILocation(line: 0, scope: !10255)
!10255 = distinct !DILexicalBlock(scope: !10240, file: !10129, line: 137, column: 8)
!10256 = !DILocation(line: 137, column: 8, scope: !10240)
!10257 = !DILocation(line: 138, column: 9, scope: !10255)
!10258 = !DILocation(line: 138, column: 28, scope: !10255)
!10259 = !DILocation(line: 140, column: 31, scope: !10255)
!10260 = !DILocation(line: 140, column: 9, scope: !10255)
!10261 = !DILocation(line: 140, column: 28, scope: !10255)
!10262 = !DILocation(line: 141, column: 1, scope: !10240)
!10263 = distinct !DISubprogram(name: "GPIO_SetIntEdgeSelect", scope: !10129, file: !10129, line: 150, type: !10241, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2718, retainedNodes: !10264)
!10264 = !{!10265, !10266, !10267}
!10265 = !DILocalVariable(name: "base", arg: 1, scope: !10263, file: !10129, line: 150, type: !10132)
!10266 = !DILocalVariable(name: "pin", arg: 2, scope: !10263, file: !10129, line: 150, type: !152)
!10267 = !DILocalVariable(name: "enable", arg: 3, scope: !10263, file: !10129, line: 150, type: !145)
!10268 = !DILocation(line: 0, scope: !10263)
!10269 = !DILocation(line: 152, column: 5, scope: !10270)
!10270 = distinct !DILexicalBlock(scope: !10271, file: !10129, line: 152, column: 5)
!10271 = distinct !DILexicalBlock(scope: !10263, file: !10129, line: 152, column: 5)
!10272 = !DILocation(line: 152, column: 5, scope: !10271)
!10273 = !DILocation(line: 152, column: 5, scope: !10274)
!10274 = distinct !DILexicalBlock(scope: !10270, file: !10129, line: 152, column: 5)
!10275 = !DILocation(line: 0, scope: !10276)
!10276 = distinct !DILexicalBlock(scope: !10263, file: !10129, line: 154, column: 8)
!10277 = !DILocation(line: 154, column: 8, scope: !10263)
!10278 = !DILocation(line: 155, column: 9, scope: !10276)
!10279 = !DILocation(line: 155, column: 33, scope: !10276)
!10280 = !DILocation(line: 157, column: 36, scope: !10276)
!10281 = !DILocation(line: 157, column: 9, scope: !10276)
!10282 = !DILocation(line: 157, column: 33, scope: !10276)
!10283 = !DILocation(line: 158, column: 1, scope: !10263)
!10284 = distinct !DISubprogram(name: "UART_Init", scope: !10285, file: !10285, line: 47, type: !10286, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2732, retainedNodes: !10322)
!10285 = !DIFile(filename: "modules/hal/nxp/imx/drivers/uart_imx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10286 = !DISubroutineType(types: !10287)
!10287 = !{null, !10288, !10311}
!10288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10289, size: 32)
!10289 = !DIDerivedType(tag: DW_TAG_typedef, name: "UART_Type", file: !506, line: 41342, baseType: !10290)
!10290 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !506, line: 41322, size: 1504, elements: !10291)
!10291 = !{!10292, !10293, !10294, !10295, !10296, !10297, !10298, !10299, !10300, !10301, !10302, !10303, !10304, !10305, !10306, !10307, !10308, !10309, !10310}
!10292 = !DIDerivedType(tag: DW_TAG_member, name: "URXD", scope: !10290, file: !506, line: 41323, baseType: !581, size: 32)
!10293 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !10290, file: !506, line: 41324, baseType: !1345, size: 480, offset: 32)
!10294 = !DIDerivedType(tag: DW_TAG_member, name: "UTXD", scope: !10290, file: !506, line: 41325, baseType: !510, size: 32, offset: 512)
!10295 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !10290, file: !506, line: 41326, baseType: !1345, size: 480, offset: 544)
!10296 = !DIDerivedType(tag: DW_TAG_member, name: "UCR1", scope: !10290, file: !506, line: 41327, baseType: !510, size: 32, offset: 1024)
!10297 = !DIDerivedType(tag: DW_TAG_member, name: "UCR2", scope: !10290, file: !506, line: 41328, baseType: !510, size: 32, offset: 1056)
!10298 = !DIDerivedType(tag: DW_TAG_member, name: "UCR3", scope: !10290, file: !506, line: 41329, baseType: !510, size: 32, offset: 1088)
!10299 = !DIDerivedType(tag: DW_TAG_member, name: "UCR4", scope: !10290, file: !506, line: 41330, baseType: !510, size: 32, offset: 1120)
!10300 = !DIDerivedType(tag: DW_TAG_member, name: "UFCR", scope: !10290, file: !506, line: 41331, baseType: !510, size: 32, offset: 1152)
!10301 = !DIDerivedType(tag: DW_TAG_member, name: "USR1", scope: !10290, file: !506, line: 41332, baseType: !510, size: 32, offset: 1184)
!10302 = !DIDerivedType(tag: DW_TAG_member, name: "USR2", scope: !10290, file: !506, line: 41333, baseType: !510, size: 32, offset: 1216)
!10303 = !DIDerivedType(tag: DW_TAG_member, name: "UESC", scope: !10290, file: !506, line: 41334, baseType: !510, size: 32, offset: 1248)
!10304 = !DIDerivedType(tag: DW_TAG_member, name: "UTIM", scope: !10290, file: !506, line: 41335, baseType: !510, size: 32, offset: 1280)
!10305 = !DIDerivedType(tag: DW_TAG_member, name: "UBIR", scope: !10290, file: !506, line: 41336, baseType: !510, size: 32, offset: 1312)
!10306 = !DIDerivedType(tag: DW_TAG_member, name: "UBMR", scope: !10290, file: !506, line: 41337, baseType: !510, size: 32, offset: 1344)
!10307 = !DIDerivedType(tag: DW_TAG_member, name: "UBRC", scope: !10290, file: !506, line: 41338, baseType: !581, size: 32, offset: 1376)
!10308 = !DIDerivedType(tag: DW_TAG_member, name: "ONEMS", scope: !10290, file: !506, line: 41339, baseType: !510, size: 32, offset: 1408)
!10309 = !DIDerivedType(tag: DW_TAG_member, name: "UTS", scope: !10290, file: !506, line: 41340, baseType: !510, size: 32, offset: 1440)
!10310 = !DIDerivedType(tag: DW_TAG_member, name: "UMCR", scope: !10290, file: !506, line: 41341, baseType: !510, size: 32, offset: 1472)
!10311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10312, size: 32)
!10312 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10313)
!10313 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_init_config_t", file: !1175, line: 57, baseType: !10314)
!10314 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_uart_init_config", file: !1175, line: 49, size: 192, elements: !10315)
!10315 = !{!10316, !10317, !10318, !10319, !10320, !10321}
!10316 = !DIDerivedType(tag: DW_TAG_member, name: "clockRate", scope: !10314, file: !1175, line: 51, baseType: !152, size: 32)
!10317 = !DIDerivedType(tag: DW_TAG_member, name: "baudRate", scope: !10314, file: !1175, line: 52, baseType: !152, size: 32, offset: 32)
!10318 = !DIDerivedType(tag: DW_TAG_member, name: "wordLength", scope: !10314, file: !1175, line: 53, baseType: !152, size: 32, offset: 64)
!10319 = !DIDerivedType(tag: DW_TAG_member, name: "stopBitNum", scope: !10314, file: !1175, line: 54, baseType: !152, size: 32, offset: 96)
!10320 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !10314, file: !1175, line: 55, baseType: !152, size: 32, offset: 128)
!10321 = !DIDerivedType(tag: DW_TAG_member, name: "direction", scope: !10314, file: !1175, line: 56, baseType: !152, size: 32, offset: 160)
!10322 = !{!10323, !10324}
!10323 = !DILocalVariable(name: "base", arg: 1, scope: !10284, file: !10285, line: 47, type: !10288)
!10324 = !DILocalVariable(name: "initConfig", arg: 2, scope: !10284, file: !10285, line: 47, type: !10311)
!10325 = !DILocation(line: 0, scope: !10284)
!10326 = !DILocation(line: 49, column: 5, scope: !10327)
!10327 = distinct !DILexicalBlock(scope: !10328, file: !10285, line: 49, column: 5)
!10328 = distinct !DILexicalBlock(scope: !10284, file: !10285, line: 49, column: 5)
!10329 = !DILocation(line: 49, column: 5, scope: !10328)
!10330 = !DILocation(line: 49, column: 5, scope: !10331)
!10331 = distinct !DILexicalBlock(scope: !10327, file: !10285, line: 49, column: 5)
!10332 = !DILocation(line: 52, column: 5, scope: !10284)
!10333 = !DILocation(line: 52, column: 25, scope: !10284)
!10334 = !DILocation(line: 55, column: 5, scope: !10284)
!10335 = !DILocation(line: 60, column: 41, scope: !10284)
!10336 = !DILocation(line: 61, column: 41, scope: !10284)
!10337 = !DILocation(line: 62, column: 41, scope: !10284)
!10338 = !DILocation(line: 63, column: 41, scope: !10284)
!10339 = !DILocation(line: 60, column: 5, scope: !10284)
!10340 = !DILocation(line: 60, column: 25, scope: !10284)
!10341 = !DILocation(line: 61, column: 52, scope: !10284)
!10342 = !DILocation(line: 62, column: 52, scope: !10284)
!10343 = !DILocation(line: 63, column: 52, scope: !10284)
!10344 = !DILocation(line: 68, column: 5, scope: !10284)
!10345 = !DILocation(line: 68, column: 25, scope: !10284)
!10346 = !DILocation(line: 72, column: 40, scope: !10284)
!10347 = !DILocation(line: 72, column: 63, scope: !10284)
!10348 = !DILocation(line: 72, column: 5, scope: !10284)
!10349 = !DILocation(line: 73, column: 1, scope: !10284)
!10350 = distinct !DISubprogram(name: "UART_Deinit", scope: !10285, file: !10285, line: 82, type: !10351, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2732, retainedNodes: !10353)
!10351 = !DISubroutineType(types: !10352)
!10352 = !{null, !10288}
!10353 = !{!10354}
!10354 = !DILocalVariable(name: "base", arg: 1, scope: !10350, file: !10285, line: 82, type: !10288)
!10355 = !DILocation(line: 0, scope: !10350)
!10356 = !DILocation(line: 85, column: 5, scope: !10350)
!10357 = !DILocation(line: 85, column: 25, scope: !10350)
!10358 = !DILocation(line: 88, column: 26, scope: !10350)
!10359 = !DILocation(line: 89, column: 5, scope: !10350)
!10360 = !DILocation(line: 89, column: 26, scope: !10350)
!10361 = !DILocation(line: 90, column: 5, scope: !10350)
!10362 = !DILocation(line: 90, column: 26, scope: !10350)
!10363 = !DILocation(line: 93, column: 5, scope: !10350)
!10364 = !DILocation(line: 93, column: 26, scope: !10350)
!10365 = !DILocation(line: 94, column: 5, scope: !10350)
!10366 = !DILocation(line: 94, column: 26, scope: !10350)
!10367 = !DILocation(line: 95, column: 5, scope: !10350)
!10368 = !DILocation(line: 95, column: 26, scope: !10350)
!10369 = !DILocation(line: 96, column: 5, scope: !10350)
!10370 = !DILocation(line: 96, column: 26, scope: !10350)
!10371 = !DILocation(line: 97, column: 5, scope: !10350)
!10372 = !DILocation(line: 97, column: 26, scope: !10350)
!10373 = !DILocation(line: 98, column: 5, scope: !10350)
!10374 = !DILocation(line: 98, column: 26, scope: !10350)
!10375 = !DILocation(line: 99, column: 5, scope: !10350)
!10376 = !DILocation(line: 99, column: 26, scope: !10350)
!10377 = !DILocation(line: 103, column: 25, scope: !10350)
!10378 = !DILocation(line: 104, column: 5, scope: !10350)
!10379 = !DILocation(line: 104, column: 14, scope: !10350)
!10380 = !DILocation(line: 104, column: 34, scope: !10350)
!10381 = !DILocation(line: 104, column: 12, scope: !10350)
!10382 = distinct !{!10382, !10378, !10383}
!10383 = !DILocation(line: 104, column: 57, scope: !10350)
!10384 = !DILocation(line: 105, column: 1, scope: !10350)
!10385 = distinct !DISubprogram(name: "UART_SetBaudRate", scope: !10285, file: !10285, line: 113, type: !10386, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2732, retainedNodes: !10388)
!10386 = !DISubroutineType(types: !10387)
!10387 = !{null, !10288, !152, !152}
!10388 = !{!10389, !10390, !10391, !10392, !10393, !10394, !10395, !10396, !10397, !10400, !10401}
!10389 = !DILocalVariable(name: "base", arg: 1, scope: !10385, file: !10285, line: 113, type: !10288)
!10390 = !DILocalVariable(name: "clockRate", arg: 2, scope: !10385, file: !10285, line: 113, type: !152)
!10391 = !DILocalVariable(name: "baudRate", arg: 3, scope: !10385, file: !10285, line: 113, type: !152)
!10392 = !DILocalVariable(name: "numerator", scope: !10385, file: !10285, line: 115, type: !152)
!10393 = !DILocalVariable(name: "denominator", scope: !10385, file: !10285, line: 116, type: !152)
!10394 = !DILocalVariable(name: "divisor", scope: !10385, file: !10285, line: 117, type: !152)
!10395 = !DILocalVariable(name: "refFreqDiv", scope: !10385, file: !10285, line: 118, type: !152)
!10396 = !DILocalVariable(name: "divider", scope: !10385, file: !10285, line: 119, type: !152)
!10397 = !DILocalVariable(name: "m", scope: !10398, file: !10285, line: 141, type: !152)
!10398 = distinct !DILexicalBlock(scope: !10399, file: !10285, line: 140, column: 5)
!10399 = distinct !DILexicalBlock(scope: !10385, file: !10285, line: 138, column: 9)
!10400 = !DILocalVariable(name: "n", scope: !10398, file: !10285, line: 142, type: !152)
!10401 = !DILocalVariable(name: "max", scope: !10398, file: !10285, line: 143, type: !152)
!10402 = !DILocation(line: 0, scope: !10385)
!10403 = !DILocation(line: 123, column: 28, scope: !10385)
!10404 = !DILocation(line: 126, column: 24, scope: !10385)
!10405 = !DILocation(line: 126, column: 5, scope: !10385)
!10406 = !DILocation(line: 129, column: 33, scope: !10407)
!10407 = distinct !DILexicalBlock(scope: !10385, file: !10285, line: 127, column: 5)
!10408 = distinct !{!10408, !10405, !10409}
!10409 = !DILocation(line: 131, column: 5, scope: !10385)
!10410 = !DILocation(line: 133, column: 27, scope: !10385)
!10411 = !DILocation(line: 134, column: 35, scope: !10385)
!10412 = !DILocation(line: 138, column: 20, scope: !10399)
!10413 = !DILocation(line: 138, column: 48, scope: !10399)
!10414 = !DILocation(line: 141, column: 33, scope: !10398)
!10415 = !DILocation(line: 141, column: 38, scope: !10398)
!10416 = !DILocation(line: 141, column: 65, scope: !10398)
!10417 = !DILocation(line: 0, scope: !10398)
!10418 = !DILocation(line: 142, column: 35, scope: !10398)
!10419 = !DILocation(line: 142, column: 40, scope: !10398)
!10420 = !DILocation(line: 142, column: 61, scope: !10398)
!10421 = !DILocation(line: 143, column: 26, scope: !10398)
!10422 = !DILocation(line: 143, column: 24, scope: !10398)
!10423 = !DILocation(line: 144, column: 19, scope: !10398)
!10424 = !DILocation(line: 145, column: 21, scope: !10398)
!10425 = !DILocation(line: 146, column: 15, scope: !10426)
!10426 = distinct !DILexicalBlock(scope: !10398, file: !10285, line: 146, column: 13)
!10427 = !DILocation(line: 146, column: 13, scope: !10398)
!10428 = !DILocation(line: 148, column: 15, scope: !10429)
!10429 = distinct !DILexicalBlock(scope: !10398, file: !10285, line: 148, column: 13)
!10430 = !DILocation(line: 148, column: 13, scope: !10398)
!10431 = !DILocation(line: 150, column: 5, scope: !10398)
!10432 = !DILocation(line: 151, column: 26, scope: !10385)
!10433 = !DILocation(line: 151, column: 31, scope: !10385)
!10434 = !DILocation(line: 151, column: 52, scope: !10385)
!10435 = !DILocation(line: 153, column: 5, scope: !10385)
!10436 = !DILocation(line: 0, scope: !10437)
!10437 = distinct !DILexicalBlock(scope: !10385, file: !10285, line: 154, column: 5)
!10438 = !DILocation(line: 180, column: 5, scope: !10385)
!10439 = !DILocation(line: 180, column: 25, scope: !10385)
!10440 = !DILocation(line: 181, column: 25, scope: !10385)
!10441 = !DILocation(line: 182, column: 27, scope: !10385)
!10442 = !DILocation(line: 182, column: 5, scope: !10385)
!10443 = !DILocation(line: 182, column: 25, scope: !10385)
!10444 = !DILocation(line: 183, column: 27, scope: !10385)
!10445 = !DILocation(line: 183, column: 5, scope: !10385)
!10446 = !DILocation(line: 183, column: 25, scope: !10385)
!10447 = !DILocation(line: 184, column: 28, scope: !10385)
!10448 = !DILocation(line: 184, column: 5, scope: !10385)
!10449 = !DILocation(line: 184, column: 26, scope: !10385)
!10450 = !DILocation(line: 185, column: 1, scope: !10385)
!10451 = distinct !DISubprogram(name: "UART_SetInvertCmd", scope: !10285, file: !10285, line: 194, type: !10452, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2732, retainedNodes: !10454)
!10452 = !DISubroutineType(types: !10453)
!10453 = !{null, !10288, !152, !145}
!10454 = !{!10455, !10456, !10457}
!10455 = !DILocalVariable(name: "base", arg: 1, scope: !10451, file: !10285, line: 194, type: !10288)
!10456 = !DILocalVariable(name: "direction", arg: 2, scope: !10451, file: !10285, line: 194, type: !152)
!10457 = !DILocalVariable(name: "invert", arg: 3, scope: !10451, file: !10285, line: 194, type: !145)
!10458 = !DILocation(line: 0, scope: !10451)
!10459 = !DILocation(line: 196, column: 5, scope: !10460)
!10460 = distinct !DILexicalBlock(scope: !10461, file: !10285, line: 196, column: 5)
!10461 = distinct !DILexicalBlock(scope: !10451, file: !10285, line: 196, column: 5)
!10462 = !DILocation(line: 196, column: 5, scope: !10463)
!10463 = distinct !DILexicalBlock(scope: !10460, file: !10285, line: 196, column: 5)
!10464 = !DILocation(line: 198, column: 9, scope: !10451)
!10465 = !DILocation(line: 200, column: 13, scope: !10466)
!10466 = distinct !DILexicalBlock(scope: !10467, file: !10285, line: 199, column: 5)
!10467 = distinct !DILexicalBlock(scope: !10451, file: !10285, line: 198, column: 9)
!10468 = !DILocation(line: 201, column: 13, scope: !10469)
!10469 = distinct !DILexicalBlock(scope: !10466, file: !10285, line: 200, column: 13)
!10470 = !DILocation(line: 201, column: 33, scope: !10469)
!10471 = !DILocation(line: 202, column: 13, scope: !10466)
!10472 = !DILocation(line: 203, column: 13, scope: !10473)
!10473 = distinct !DILexicalBlock(scope: !10466, file: !10285, line: 202, column: 13)
!10474 = !DILocation(line: 203, column: 33, scope: !10473)
!10475 = !DILocation(line: 207, column: 13, scope: !10476)
!10476 = distinct !DILexicalBlock(scope: !10467, file: !10285, line: 206, column: 5)
!10477 = !DILocation(line: 208, column: 13, scope: !10478)
!10478 = distinct !DILexicalBlock(scope: !10476, file: !10285, line: 207, column: 13)
!10479 = !DILocation(line: 208, column: 33, scope: !10478)
!10480 = !DILocation(line: 209, column: 13, scope: !10476)
!10481 = !DILocation(line: 210, column: 13, scope: !10482)
!10482 = distinct !DILexicalBlock(scope: !10476, file: !10285, line: 209, column: 13)
!10483 = !DILocation(line: 210, column: 33, scope: !10482)
!10484 = !DILocation(line: 212, column: 1, scope: !10451)
!10485 = distinct !DISubprogram(name: "UART_SetDozeMode", scope: !10285, file: !10285, line: 224, type: !10486, scopeLine: 225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2732, retainedNodes: !10488)
!10486 = !DISubroutineType(types: !10487)
!10487 = !{null, !10288, !145}
!10488 = !{!10489, !10490}
!10489 = !DILocalVariable(name: "base", arg: 1, scope: !10485, file: !10285, line: 224, type: !10288)
!10490 = !DILocalVariable(name: "enable", arg: 2, scope: !10485, file: !10285, line: 224, type: !145)
!10491 = !DILocation(line: 0, scope: !10485)
!10492 = !DILocation(line: 0, scope: !10493)
!10493 = distinct !DILexicalBlock(scope: !10485, file: !10285, line: 226, column: 9)
!10494 = !DILocation(line: 226, column: 9, scope: !10485)
!10495 = !DILocation(line: 230, column: 1, scope: !10485)
!10496 = distinct !DISubprogram(name: "UART_SetLowPowerMode", scope: !10285, file: !10285, line: 239, type: !10486, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2732, retainedNodes: !10497)
!10497 = !{!10498, !10499}
!10498 = !DILocalVariable(name: "base", arg: 1, scope: !10496, file: !10285, line: 239, type: !10288)
!10499 = !DILocalVariable(name: "enable", arg: 2, scope: !10496, file: !10285, line: 239, type: !145)
!10500 = !DILocation(line: 0, scope: !10496)
!10501 = !DILocation(line: 0, scope: !10502)
!10502 = distinct !DILexicalBlock(scope: !10496, file: !10285, line: 241, column: 9)
!10503 = !DILocation(line: 241, column: 9, scope: !10496)
!10504 = !DILocation(line: 245, column: 1, scope: !10496)
!10505 = distinct !DISubprogram(name: "UART_SetIntCmd", scope: !10285, file: !10285, line: 258, type: !10452, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2732, retainedNodes: !10506)
!10506 = !{!10507, !10508, !10509, !10510, !10511}
!10507 = !DILocalVariable(name: "base", arg: 1, scope: !10505, file: !10285, line: 258, type: !10288)
!10508 = !DILocalVariable(name: "intSource", arg: 2, scope: !10505, file: !10285, line: 258, type: !152)
!10509 = !DILocalVariable(name: "enable", arg: 3, scope: !10505, file: !10285, line: 258, type: !145)
!10510 = !DILocalVariable(name: "uart_reg", scope: !10505, file: !10285, line: 260, type: !630)
!10511 = !DILocalVariable(name: "uart_mask", scope: !10505, file: !10285, line: 261, type: !152)
!10512 = !DILocation(line: 0, scope: !10505)
!10513 = !DILocation(line: 263, column: 29, scope: !10505)
!10514 = !DILocation(line: 263, column: 57, scope: !10505)
!10515 = !DILocation(line: 263, column: 44, scope: !10505)
!10516 = !DILocation(line: 263, column: 16, scope: !10505)
!10517 = !DILocation(line: 264, column: 34, scope: !10505)
!10518 = !DILocation(line: 264, column: 20, scope: !10505)
!10519 = !DILocation(line: 266, column: 9, scope: !10505)
!10520 = !DILocation(line: 267, column: 19, scope: !10521)
!10521 = distinct !DILexicalBlock(scope: !10505, file: !10285, line: 266, column: 9)
!10522 = !DILocation(line: 267, column: 9, scope: !10521)
!10523 = !DILocation(line: 269, column: 22, scope: !10521)
!10524 = !DILocation(line: 269, column: 19, scope: !10521)
!10525 = !DILocation(line: 0, scope: !10521)
!10526 = !DILocation(line: 270, column: 1, scope: !10505)
!10527 = distinct !DISubprogram(name: "UART_ClearStatusFlag", scope: !10285, file: !10285, line: 299, type: !10528, scopeLine: 300, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2732, retainedNodes: !10530)
!10528 = !DISubroutineType(types: !10529)
!10529 = !{null, !10288, !152}
!10530 = !{!10531, !10532, !10533, !10534}
!10531 = !DILocalVariable(name: "base", arg: 1, scope: !10527, file: !10285, line: 299, type: !10288)
!10532 = !DILocalVariable(name: "flag", arg: 2, scope: !10527, file: !10285, line: 299, type: !152)
!10533 = !DILocalVariable(name: "uart_reg", scope: !10527, file: !10285, line: 301, type: !630)
!10534 = !DILocalVariable(name: "uart_mask", scope: !10527, file: !10285, line: 302, type: !152)
!10535 = !DILocation(line: 0, scope: !10527)
!10536 = !DILocation(line: 304, column: 29, scope: !10527)
!10537 = !DILocation(line: 304, column: 52, scope: !10527)
!10538 = !DILocation(line: 304, column: 44, scope: !10527)
!10539 = !DILocation(line: 304, column: 16, scope: !10527)
!10540 = !DILocation(line: 305, column: 29, scope: !10527)
!10541 = !DILocation(line: 305, column: 20, scope: !10527)
!10542 = !DILocation(line: 308, column: 15, scope: !10527)
!10543 = !DILocation(line: 309, column: 1, scope: !10527)
!10544 = distinct !DISubprogram(name: "UART_SetDmaCmd", scope: !10285, file: !10285, line: 322, type: !10452, scopeLine: 323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2732, retainedNodes: !10545)
!10545 = !{!10546, !10547, !10548, !10549, !10550}
!10546 = !DILocalVariable(name: "base", arg: 1, scope: !10544, file: !10285, line: 322, type: !10288)
!10547 = !DILocalVariable(name: "dmaSource", arg: 2, scope: !10544, file: !10285, line: 322, type: !152)
!10548 = !DILocalVariable(name: "enable", arg: 3, scope: !10544, file: !10285, line: 322, type: !145)
!10549 = !DILocalVariable(name: "uart_reg", scope: !10544, file: !10285, line: 324, type: !630)
!10550 = !DILocalVariable(name: "uart_mask", scope: !10544, file: !10285, line: 325, type: !152)
!10551 = !DILocation(line: 0, scope: !10544)
!10552 = !DILocation(line: 327, column: 29, scope: !10544)
!10553 = !DILocation(line: 327, column: 57, scope: !10544)
!10554 = !DILocation(line: 327, column: 44, scope: !10544)
!10555 = !DILocation(line: 327, column: 16, scope: !10544)
!10556 = !DILocation(line: 328, column: 34, scope: !10544)
!10557 = !DILocation(line: 328, column: 20, scope: !10544)
!10558 = !DILocation(line: 329, column: 9, scope: !10544)
!10559 = !DILocation(line: 330, column: 19, scope: !10560)
!10560 = distinct !DILexicalBlock(scope: !10544, file: !10285, line: 329, column: 9)
!10561 = !DILocation(line: 330, column: 9, scope: !10560)
!10562 = !DILocation(line: 332, column: 22, scope: !10560)
!10563 = !DILocation(line: 332, column: 19, scope: !10560)
!10564 = !DILocation(line: 0, scope: !10560)
!10565 = !DILocation(line: 333, column: 1, scope: !10544)
!10566 = distinct !DISubprogram(name: "UART_SetRtsFlowCtrlCmd", scope: !10285, file: !10285, line: 345, type: !10486, scopeLine: 346, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2732, retainedNodes: !10567)
!10567 = !{!10568, !10569}
!10568 = !DILocalVariable(name: "base", arg: 1, scope: !10566, file: !10285, line: 345, type: !10288)
!10569 = !DILocalVariable(name: "enable", arg: 2, scope: !10566, file: !10285, line: 345, type: !145)
!10570 = !DILocation(line: 0, scope: !10566)
!10571 = !DILocation(line: 0, scope: !10572)
!10572 = distinct !DILexicalBlock(scope: !10566, file: !10285, line: 347, column: 9)
!10573 = !DILocation(line: 347, column: 9, scope: !10566)
!10574 = !DILocation(line: 351, column: 1, scope: !10566)
!10575 = distinct !DISubprogram(name: "UART_SetCtsFlowCtrlCmd", scope: !10285, file: !10285, line: 362, type: !10486, scopeLine: 363, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2732, retainedNodes: !10576)
!10576 = !{!10577, !10578}
!10577 = !DILocalVariable(name: "base", arg: 1, scope: !10575, file: !10285, line: 362, type: !10288)
!10578 = !DILocalVariable(name: "enable", arg: 2, scope: !10575, file: !10285, line: 362, type: !145)
!10579 = !DILocation(line: 0, scope: !10575)
!10580 = !DILocation(line: 0, scope: !10581)
!10581 = distinct !DILexicalBlock(scope: !10575, file: !10285, line: 364, column: 9)
!10582 = !DILocation(line: 364, column: 9, scope: !10575)
!10583 = !DILocation(line: 368, column: 1, scope: !10575)
!10584 = distinct !DISubprogram(name: "UART_SetCtsPinLevel", scope: !10285, file: !10285, line: 379, type: !10486, scopeLine: 380, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2732, retainedNodes: !10585)
!10585 = !{!10586, !10587}
!10586 = !DILocalVariable(name: "base", arg: 1, scope: !10584, file: !10285, line: 379, type: !10288)
!10587 = !DILocalVariable(name: "active", arg: 2, scope: !10584, file: !10285, line: 379, type: !145)
!10588 = !DILocation(line: 0, scope: !10584)
!10589 = !DILocation(line: 0, scope: !10590)
!10590 = distinct !DILexicalBlock(scope: !10584, file: !10285, line: 381, column: 9)
!10591 = !DILocation(line: 381, column: 9, scope: !10584)
!10592 = !DILocation(line: 385, column: 1, scope: !10584)
!10593 = distinct !DISubprogram(name: "UART_SetModemMode", scope: !10285, file: !10285, line: 394, type: !10528, scopeLine: 395, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2732, retainedNodes: !10594)
!10594 = !{!10595, !10596}
!10595 = !DILocalVariable(name: "base", arg: 1, scope: !10593, file: !10285, line: 394, type: !10288)
!10596 = !DILocalVariable(name: "mode", arg: 2, scope: !10593, file: !10285, line: 394, type: !152)
!10597 = !DILocation(line: 0, scope: !10593)
!10598 = !DILocation(line: 396, column: 5, scope: !10599)
!10599 = distinct !DILexicalBlock(scope: !10600, file: !10285, line: 396, column: 5)
!10600 = distinct !DILexicalBlock(scope: !10593, file: !10285, line: 396, column: 5)
!10601 = !DILocation(line: 396, column: 5, scope: !10602)
!10602 = distinct !DILexicalBlock(scope: !10599, file: !10285, line: 396, column: 5)
!10603 = !DILocation(line: 0, scope: !10604)
!10604 = distinct !DILexicalBlock(scope: !10593, file: !10285, line: 398, column: 9)
!10605 = !DILocation(line: 398, column: 9, scope: !10593)
!10606 = !DILocation(line: 402, column: 1, scope: !10593)
!10607 = distinct !DISubprogram(name: "UART_SetDtrPinLevel", scope: !10285, file: !10285, line: 412, type: !10486, scopeLine: 413, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2732, retainedNodes: !10608)
!10608 = !{!10609, !10610}
!10609 = !DILocalVariable(name: "base", arg: 1, scope: !10607, file: !10285, line: 412, type: !10288)
!10610 = !DILocalVariable(name: "active", arg: 2, scope: !10607, file: !10285, line: 412, type: !145)
!10611 = !DILocation(line: 0, scope: !10607)
!10612 = !DILocation(line: 0, scope: !10613)
!10613 = distinct !DILexicalBlock(scope: !10607, file: !10285, line: 414, column: 9)
!10614 = !DILocation(line: 414, column: 9, scope: !10607)
!10615 = !DILocation(line: 418, column: 1, scope: !10607)
!10616 = distinct !DISubprogram(name: "UART_SetDcdPinLevel", scope: !10285, file: !10285, line: 427, type: !10486, scopeLine: 428, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2732, retainedNodes: !10617)
!10617 = !{!10618, !10619}
!10618 = !DILocalVariable(name: "base", arg: 1, scope: !10616, file: !10285, line: 427, type: !10288)
!10619 = !DILocalVariable(name: "active", arg: 2, scope: !10616, file: !10285, line: 427, type: !145)
!10620 = !DILocation(line: 0, scope: !10616)
!10621 = !DILocation(line: 0, scope: !10622)
!10622 = distinct !DILexicalBlock(scope: !10616, file: !10285, line: 429, column: 9)
!10623 = !DILocation(line: 429, column: 9, scope: !10616)
!10624 = !DILocation(line: 433, column: 1, scope: !10616)
!10625 = distinct !DISubprogram(name: "UART_SetRiPinLevel", scope: !10285, file: !10285, line: 442, type: !10486, scopeLine: 443, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2732, retainedNodes: !10626)
!10626 = !{!10627, !10628}
!10627 = !DILocalVariable(name: "base", arg: 1, scope: !10625, file: !10285, line: 442, type: !10288)
!10628 = !DILocalVariable(name: "active", arg: 2, scope: !10625, file: !10285, line: 442, type: !145)
!10629 = !DILocation(line: 0, scope: !10625)
!10630 = !DILocation(line: 0, scope: !10631)
!10631 = distinct !DILexicalBlock(scope: !10625, file: !10285, line: 444, column: 9)
!10632 = !DILocation(line: 444, column: 9, scope: !10625)
!10633 = !DILocation(line: 448, column: 1, scope: !10625)
!10634 = distinct !DISubprogram(name: "UART_Putchar9", scope: !10285, file: !10285, line: 460, type: !10635, scopeLine: 461, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2732, retainedNodes: !10637)
!10635 = !DISubroutineType(types: !10636)
!10636 = !{null, !10288, !197}
!10637 = !{!10638, !10639}
!10638 = !DILocalVariable(name: "base", arg: 1, scope: !10634, file: !10285, line: 460, type: !10288)
!10639 = !DILocalVariable(name: "data", arg: 2, scope: !10634, file: !10285, line: 460, type: !197)
!10640 = !DILocation(line: 0, scope: !10634)
!10641 = !DILocation(line: 462, column: 5, scope: !10642)
!10642 = distinct !DILexicalBlock(scope: !10643, file: !10285, line: 462, column: 5)
!10643 = distinct !DILexicalBlock(scope: !10634, file: !10285, line: 462, column: 5)
!10644 = !DILocation(line: 462, column: 5, scope: !10643)
!10645 = !DILocation(line: 462, column: 5, scope: !10646)
!10646 = distinct !DILexicalBlock(scope: !10642, file: !10285, line: 462, column: 5)
!10647 = !DILocation(line: 0, scope: !10648)
!10648 = distinct !DILexicalBlock(scope: !10634, file: !10285, line: 464, column: 9)
!10649 = !DILocation(line: 464, column: 9, scope: !10634)
!10650 = !DILocation(line: 468, column: 33, scope: !10634)
!10651 = !DILocation(line: 468, column: 5, scope: !10634)
!10652 = !DILocation(line: 468, column: 25, scope: !10634)
!10653 = !DILocation(line: 469, column: 1, scope: !10634)
!10654 = distinct !DISubprogram(name: "UART_Getchar9", scope: !10285, file: !10285, line: 478, type: !10655, scopeLine: 479, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2732, retainedNodes: !10657)
!10655 = !DISubroutineType(types: !10656)
!10656 = !{!197, !10288}
!10657 = !{!10658, !10659}
!10658 = !DILocalVariable(name: "base", arg: 1, scope: !10654, file: !10285, line: 478, type: !10288)
!10659 = !DILocalVariable(name: "rxData", scope: !10654, file: !10285, line: 480, type: !197)
!10660 = !DILocation(line: 0, scope: !10654)
!10661 = !DILocation(line: 480, column: 23, scope: !10654)
!10662 = !DILocation(line: 482, column: 9, scope: !10654)
!10663 = !DILocation(line: 491, column: 5, scope: !10654)
!10664 = distinct !DISubprogram(name: "UART_SetMultidropMode", scope: !10285, file: !10285, line: 501, type: !10486, scopeLine: 502, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2732, retainedNodes: !10665)
!10665 = !{!10666, !10667}
!10666 = !DILocalVariable(name: "base", arg: 1, scope: !10664, file: !10285, line: 501, type: !10288)
!10667 = !DILocalVariable(name: "enable", arg: 2, scope: !10664, file: !10285, line: 501, type: !145)
!10668 = !DILocation(line: 0, scope: !10664)
!10669 = !DILocation(line: 0, scope: !10670)
!10670 = distinct !DILexicalBlock(scope: !10664, file: !10285, line: 503, column: 9)
!10671 = !DILocation(line: 503, column: 9, scope: !10664)
!10672 = !DILocation(line: 507, column: 1, scope: !10664)
!10673 = distinct !DISubprogram(name: "UART_SetSlaveAddressDetectCmd", scope: !10285, file: !10285, line: 516, type: !10486, scopeLine: 517, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2732, retainedNodes: !10674)
!10674 = !{!10675, !10676}
!10675 = !DILocalVariable(name: "base", arg: 1, scope: !10673, file: !10285, line: 516, type: !10288)
!10676 = !DILocalVariable(name: "enable", arg: 2, scope: !10673, file: !10285, line: 516, type: !145)
!10677 = !DILocation(line: 0, scope: !10673)
!10678 = !DILocation(line: 0, scope: !10679)
!10679 = distinct !DILexicalBlock(scope: !10673, file: !10285, line: 518, column: 9)
!10680 = !DILocation(line: 518, column: 9, scope: !10673)
!10681 = !DILocation(line: 522, column: 1, scope: !10673)
!10682 = distinct !DISubprogram(name: "UART_SetIrDACmd", scope: !10285, file: !10285, line: 534, type: !10486, scopeLine: 535, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2732, retainedNodes: !10683)
!10683 = !{!10684, !10685}
!10684 = !DILocalVariable(name: "base", arg: 1, scope: !10682, file: !10285, line: 534, type: !10288)
!10685 = !DILocalVariable(name: "enable", arg: 2, scope: !10682, file: !10285, line: 534, type: !145)
!10686 = !DILocation(line: 0, scope: !10682)
!10687 = !DILocation(line: 0, scope: !10688)
!10688 = distinct !DILexicalBlock(scope: !10682, file: !10285, line: 536, column: 9)
!10689 = !DILocation(line: 536, column: 9, scope: !10682)
!10690 = !DILocation(line: 540, column: 1, scope: !10682)
!10691 = distinct !DISubprogram(name: "UART_SetIrDAVoteClock", scope: !10285, file: !10285, line: 550, type: !10528, scopeLine: 551, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2732, retainedNodes: !10692)
!10692 = !{!10693, !10694}
!10693 = !DILocalVariable(name: "base", arg: 1, scope: !10691, file: !10285, line: 550, type: !10288)
!10694 = !DILocalVariable(name: "voteClock", arg: 2, scope: !10691, file: !10285, line: 550, type: !152)
!10695 = !DILocation(line: 0, scope: !10691)
!10696 = !DILocation(line: 552, column: 5, scope: !10697)
!10697 = distinct !DILexicalBlock(scope: !10698, file: !10285, line: 552, column: 5)
!10698 = distinct !DILexicalBlock(scope: !10691, file: !10285, line: 552, column: 5)
!10699 = !DILocation(line: 552, column: 5, scope: !10700)
!10700 = distinct !DILexicalBlock(scope: !10697, file: !10285, line: 552, column: 5)
!10701 = !DILocation(line: 0, scope: !10702)
!10702 = distinct !DILexicalBlock(scope: !10691, file: !10285, line: 555, column: 9)
!10703 = !DILocation(line: 555, column: 9, scope: !10691)
!10704 = !DILocation(line: 559, column: 1, scope: !10691)
!10705 = distinct !DISubprogram(name: "UART_SetAutoBaudRateCmd", scope: !10285, file: !10285, line: 571, type: !10486, scopeLine: 572, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2732, retainedNodes: !10706)
!10706 = !{!10707, !10708}
!10707 = !DILocalVariable(name: "base", arg: 1, scope: !10705, file: !10285, line: 571, type: !10288)
!10708 = !DILocalVariable(name: "enable", arg: 2, scope: !10705, file: !10285, line: 571, type: !145)
!10709 = !DILocation(line: 0, scope: !10705)
!10710 = !DILocation(line: 0, scope: !10711)
!10711 = distinct !DILexicalBlock(scope: !10705, file: !10285, line: 573, column: 9)
!10712 = !DILocation(line: 573, column: 9, scope: !10705)
!10713 = !DILocation(line: 577, column: 1, scope: !10705)
!10714 = distinct !DISubprogram(name: "UART_SendBreakChar", scope: !10285, file: !10285, line: 587, type: !10486, scopeLine: 588, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2732, retainedNodes: !10715)
!10715 = !{!10716, !10717}
!10716 = !DILocalVariable(name: "base", arg: 1, scope: !10714, file: !10285, line: 587, type: !10288)
!10717 = !DILocalVariable(name: "active", arg: 2, scope: !10714, file: !10285, line: 587, type: !145)
!10718 = !DILocation(line: 0, scope: !10714)
!10719 = !DILocation(line: 0, scope: !10720)
!10720 = distinct !DILexicalBlock(scope: !10714, file: !10285, line: 589, column: 9)
!10721 = !DILocation(line: 589, column: 9, scope: !10714)
!10722 = !DILocation(line: 593, column: 1, scope: !10714)
!10723 = distinct !DISubprogram(name: "UART_SetEscapeDecectCmd", scope: !10285, file: !10285, line: 602, type: !10486, scopeLine: 603, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2732, retainedNodes: !10724)
!10724 = !{!10725, !10726}
!10725 = !DILocalVariable(name: "base", arg: 1, scope: !10723, file: !10285, line: 602, type: !10288)
!10726 = !DILocalVariable(name: "enable", arg: 2, scope: !10723, file: !10285, line: 602, type: !145)
!10727 = !DILocation(line: 0, scope: !10723)
!10728 = !DILocation(line: 0, scope: !10729)
!10729 = distinct !DILexicalBlock(scope: !10723, file: !10285, line: 604, column: 9)
!10730 = !DILocation(line: 604, column: 9, scope: !10723)
!10731 = !DILocation(line: 608, column: 1, scope: !10723)
!10732 = distinct !DISubprogram(name: "get_gpt_clock_freq", scope: !10733, file: !10733, line: 42, type: !10734, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2744, retainedNodes: !10750)
!10733 = !DIFile(filename: "modules/hal/nxp/imx/devices/MCIMX7D/clock_freq.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10734 = !DISubroutineType(types: !10735)
!10735 = !{!152, !10736}
!10736 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10737, size: 32)
!10737 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPT_Type", file: !506, line: 20831, baseType: !10738)
!10738 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !506, line: 20820, size: 320, elements: !10739)
!10739 = !{!10740, !10741, !10742, !10743, !10744, !10745, !10746, !10747, !10748, !10749}
!10740 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !10738, file: !506, line: 20821, baseType: !510, size: 32)
!10741 = !DIDerivedType(tag: DW_TAG_member, name: "PR", scope: !10738, file: !506, line: 20822, baseType: !510, size: 32, offset: 32)
!10742 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !10738, file: !506, line: 20823, baseType: !510, size: 32, offset: 64)
!10743 = !DIDerivedType(tag: DW_TAG_member, name: "IR", scope: !10738, file: !506, line: 20824, baseType: !510, size: 32, offset: 96)
!10744 = !DIDerivedType(tag: DW_TAG_member, name: "OCR1", scope: !10738, file: !506, line: 20825, baseType: !510, size: 32, offset: 128)
!10745 = !DIDerivedType(tag: DW_TAG_member, name: "OCR2", scope: !10738, file: !506, line: 20826, baseType: !510, size: 32, offset: 160)
!10746 = !DIDerivedType(tag: DW_TAG_member, name: "OCR3", scope: !10738, file: !506, line: 20827, baseType: !510, size: 32, offset: 192)
!10747 = !DIDerivedType(tag: DW_TAG_member, name: "ICR1", scope: !10738, file: !506, line: 20828, baseType: !581, size: 32, offset: 224)
!10748 = !DIDerivedType(tag: DW_TAG_member, name: "ICR2", scope: !10738, file: !506, line: 20829, baseType: !581, size: 32, offset: 256)
!10749 = !DIDerivedType(tag: DW_TAG_member, name: "CNT", scope: !10738, file: !506, line: 20830, baseType: !581, size: 32, offset: 288)
!10750 = !{!10751, !10752, !10753, !10754, !10755}
!10751 = !DILocalVariable(name: "base", arg: 1, scope: !10732, file: !10733, line: 42, type: !10736)
!10752 = !DILocalVariable(name: "root", scope: !10732, file: !10733, line: 44, type: !152)
!10753 = !DILocalVariable(name: "hz", scope: !10732, file: !10733, line: 45, type: !152)
!10754 = !DILocalVariable(name: "pre", scope: !10732, file: !10733, line: 46, type: !152)
!10755 = !DILocalVariable(name: "post", scope: !10732, file: !10733, line: 46, type: !152)
!10756 = !DILocation(line: 0, scope: !10732)
!10757 = !DILocation(line: 46, column: 2, scope: !10732)
!10758 = !DILocation(line: 48, column: 10, scope: !10732)
!10759 = !DILocation(line: 48, column: 2, scope: !10732)
!10760 = !DILocation(line: 56, column: 3, scope: !10761)
!10761 = distinct !DILexicalBlock(scope: !10732, file: !10733, line: 48, column: 26)
!10762 = !DILocation(line: 0, scope: !10761)
!10763 = !DILocation(line: 61, column: 2, scope: !10732)
!10764 = !DILocation(line: 66, column: 8, scope: !10765)
!10765 = distinct !DILexicalBlock(scope: !10732, file: !10733, line: 61, column: 16)
!10766 = !DILocation(line: 67, column: 3, scope: !10765)
!10767 = !DILocation(line: 0, scope: !10765)
!10768 = !DILocation(line: 72, column: 15, scope: !10732)
!10769 = !DILocation(line: 72, column: 19, scope: !10732)
!10770 = !DILocation(line: 72, column: 12, scope: !10732)
!10771 = !DILocation(line: 72, column: 27, scope: !10732)
!10772 = !DILocation(line: 72, column: 32, scope: !10732)
!10773 = !DILocation(line: 72, column: 24, scope: !10732)
!10774 = !DILocation(line: 72, column: 2, scope: !10732)
!10775 = !DILocation(line: 73, column: 1, scope: !10732)
!10776 = distinct !DISubprogram(name: "CCM_GetRootMux", scope: !222, file: !222, line: 368, type: !10777, scopeLine: 369, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2744, retainedNodes: !10779)
!10777 = !DISubroutineType(types: !10778)
!10778 = !{!152, !2758, !152}
!10779 = !{!10780, !10781}
!10780 = !DILocalVariable(name: "base", arg: 1, scope: !10776, file: !222, line: 368, type: !2758)
!10781 = !DILocalVariable(name: "ccmRoot", arg: 2, scope: !10776, file: !222, line: 368, type: !152)
!10782 = !DILocation(line: 0, scope: !10776)
!10783 = !DILocation(line: 370, column: 13, scope: !10776)
!10784 = !DILocation(line: 370, column: 58, scope: !10776)
!10785 = !DILocation(line: 370, column: 5, scope: !10776)
!10786 = distinct !DISubprogram(name: "get_ecspi_clock_freq", scope: !10733, file: !10733, line: 81, type: !10787, scopeLine: 82, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2744, retainedNodes: !10807)
!10787 = !DISubroutineType(types: !10788)
!10788 = !{!152, !10789}
!10789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10790, size: 32)
!10790 = !DIDerivedType(tag: DW_TAG_typedef, name: "ECSPI_Type", file: !506, line: 12462, baseType: !10791)
!10791 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !506, line: 12450, size: 544, elements: !10792)
!10792 = !{!10793, !10794, !10795, !10796, !10797, !10798, !10799, !10800, !10801, !10802, !10806}
!10793 = !DIDerivedType(tag: DW_TAG_member, name: "RXDATA", scope: !10791, file: !506, line: 12451, baseType: !581, size: 32)
!10794 = !DIDerivedType(tag: DW_TAG_member, name: "TXDATA", scope: !10791, file: !506, line: 12452, baseType: !510, size: 32, offset: 32)
!10795 = !DIDerivedType(tag: DW_TAG_member, name: "CONREG", scope: !10791, file: !506, line: 12453, baseType: !510, size: 32, offset: 64)
!10796 = !DIDerivedType(tag: DW_TAG_member, name: "CONFIGREG", scope: !10791, file: !506, line: 12454, baseType: !510, size: 32, offset: 96)
!10797 = !DIDerivedType(tag: DW_TAG_member, name: "INTREG", scope: !10791, file: !506, line: 12455, baseType: !510, size: 32, offset: 128)
!10798 = !DIDerivedType(tag: DW_TAG_member, name: "DMAREG", scope: !10791, file: !506, line: 12456, baseType: !510, size: 32, offset: 160)
!10799 = !DIDerivedType(tag: DW_TAG_member, name: "STATREG", scope: !10791, file: !506, line: 12457, baseType: !510, size: 32, offset: 192)
!10800 = !DIDerivedType(tag: DW_TAG_member, name: "PERIODREG", scope: !10791, file: !506, line: 12458, baseType: !510, size: 32, offset: 224)
!10801 = !DIDerivedType(tag: DW_TAG_member, name: "TESTREG", scope: !10791, file: !506, line: 12459, baseType: !510, size: 32, offset: 256)
!10802 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !10791, file: !506, line: 12460, baseType: !10803, size: 224, offset: 288)
!10803 = !DICompositeType(tag: DW_TAG_array_type, baseType: !195, size: 224, elements: !10804)
!10804 = !{!10805}
!10805 = !DISubrange(count: 28)
!10806 = !DIDerivedType(tag: DW_TAG_member, name: "MSGDATA", scope: !10791, file: !506, line: 12461, baseType: !510, size: 32, offset: 512)
!10807 = !{!10808, !10809, !10810, !10811, !10812}
!10808 = !DILocalVariable(name: "base", arg: 1, scope: !10786, file: !10733, line: 81, type: !10789)
!10809 = !DILocalVariable(name: "root", scope: !10786, file: !10733, line: 83, type: !152)
!10810 = !DILocalVariable(name: "hz", scope: !10786, file: !10733, line: 84, type: !152)
!10811 = !DILocalVariable(name: "pre", scope: !10786, file: !10733, line: 85, type: !152)
!10812 = !DILocalVariable(name: "post", scope: !10786, file: !10733, line: 85, type: !152)
!10813 = !DILocation(line: 0, scope: !10786)
!10814 = !DILocation(line: 85, column: 2, scope: !10786)
!10815 = !DILocation(line: 87, column: 10, scope: !10786)
!10816 = !DILocation(line: 87, column: 2, scope: !10786)
!10817 = !DILocation(line: 95, column: 3, scope: !10818)
!10818 = distinct !DILexicalBlock(scope: !10786, file: !10733, line: 87, column: 26)
!10819 = !DILocation(line: 0, scope: !10818)
!10820 = !DILocation(line: 100, column: 2, scope: !10786)
!10821 = !DILocation(line: 105, column: 8, scope: !10822)
!10822 = distinct !DILexicalBlock(scope: !10786, file: !10733, line: 100, column: 16)
!10823 = !DILocation(line: 106, column: 3, scope: !10822)
!10824 = !DILocation(line: 0, scope: !10822)
!10825 = !DILocation(line: 111, column: 15, scope: !10786)
!10826 = !DILocation(line: 111, column: 19, scope: !10786)
!10827 = !DILocation(line: 111, column: 12, scope: !10786)
!10828 = !DILocation(line: 111, column: 27, scope: !10786)
!10829 = !DILocation(line: 111, column: 32, scope: !10786)
!10830 = !DILocation(line: 111, column: 24, scope: !10786)
!10831 = !DILocation(line: 111, column: 2, scope: !10786)
!10832 = !DILocation(line: 112, column: 1, scope: !10786)
!10833 = distinct !DISubprogram(name: "get_flexcan_clock_freq", scope: !10733, file: !10733, line: 120, type: !10834, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2744, retainedNodes: !10878)
!10834 = !DISubroutineType(types: !10835)
!10835 = !{!152, !10836}
!10836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10837, size: 32)
!10837 = !DIDerivedType(tag: DW_TAG_typedef, name: "CAN_Type", file: !506, line: 3477, baseType: !10838)
!10838 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !506, line: 3446, size: 20256, elements: !10839)
!10839 = !{!10840, !10841, !10842, !10843, !10845, !10846, !10847, !10848, !10849, !10850, !10851, !10852, !10853, !10854, !10855, !10856, !10858, !10859, !10860, !10861, !10862, !10872, !10874, !10876, !10877}
!10840 = !DIDerivedType(tag: DW_TAG_member, name: "MCR", scope: !10838, file: !506, line: 3447, baseType: !510, size: 32)
!10841 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL1", scope: !10838, file: !506, line: 3448, baseType: !510, size: 32, offset: 32)
!10842 = !DIDerivedType(tag: DW_TAG_member, name: "TIMER", scope: !10838, file: !506, line: 3449, baseType: !510, size: 32, offset: 64)
!10843 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !10838, file: !506, line: 3450, baseType: !10844, size: 32, offset: 96)
!10844 = !DICompositeType(tag: DW_TAG_array_type, baseType: !195, size: 32, elements: !1665)
!10845 = !DIDerivedType(tag: DW_TAG_member, name: "RXMGMASK", scope: !10838, file: !506, line: 3451, baseType: !510, size: 32, offset: 128)
!10846 = !DIDerivedType(tag: DW_TAG_member, name: "RX14MASK", scope: !10838, file: !506, line: 3452, baseType: !510, size: 32, offset: 160)
!10847 = !DIDerivedType(tag: DW_TAG_member, name: "RX15MASK", scope: !10838, file: !506, line: 3453, baseType: !510, size: 32, offset: 192)
!10848 = !DIDerivedType(tag: DW_TAG_member, name: "ECR", scope: !10838, file: !506, line: 3454, baseType: !510, size: 32, offset: 224)
!10849 = !DIDerivedType(tag: DW_TAG_member, name: "ESR1", scope: !10838, file: !506, line: 3455, baseType: !510, size: 32, offset: 256)
!10850 = !DIDerivedType(tag: DW_TAG_member, name: "IMASK2", scope: !10838, file: !506, line: 3456, baseType: !510, size: 32, offset: 288)
!10851 = !DIDerivedType(tag: DW_TAG_member, name: "IMASK1", scope: !10838, file: !506, line: 3457, baseType: !510, size: 32, offset: 320)
!10852 = !DIDerivedType(tag: DW_TAG_member, name: "IFLAG2", scope: !10838, file: !506, line: 3458, baseType: !510, size: 32, offset: 352)
!10853 = !DIDerivedType(tag: DW_TAG_member, name: "IFLAG1", scope: !10838, file: !506, line: 3459, baseType: !510, size: 32, offset: 384)
!10854 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL2", scope: !10838, file: !506, line: 3460, baseType: !510, size: 32, offset: 416)
!10855 = !DIDerivedType(tag: DW_TAG_member, name: "ESR2", scope: !10838, file: !506, line: 3461, baseType: !581, size: 32, offset: 448)
!10856 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !10838, file: !506, line: 3462, baseType: !10857, size: 64, offset: 480)
!10857 = !DICompositeType(tag: DW_TAG_array_type, baseType: !195, size: 64, elements: !1611)
!10858 = !DIDerivedType(tag: DW_TAG_member, name: "CRCR", scope: !10838, file: !506, line: 3463, baseType: !581, size: 32, offset: 544)
!10859 = !DIDerivedType(tag: DW_TAG_member, name: "RXFGMASK", scope: !10838, file: !506, line: 3464, baseType: !510, size: 32, offset: 576)
!10860 = !DIDerivedType(tag: DW_TAG_member, name: "RXFIR", scope: !10838, file: !506, line: 3465, baseType: !581, size: 32, offset: 608)
!10861 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_2", scope: !10838, file: !506, line: 3466, baseType: !567, size: 384, offset: 640)
!10862 = !DIDerivedType(tag: DW_TAG_member, name: "MB", scope: !10838, file: !506, line: 3472, baseType: !10863, size: 8192, offset: 1024)
!10863 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10864, size: 8192, elements: !10870)
!10864 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !10838, file: !506, line: 3467, size: 128, elements: !10865)
!10865 = !{!10866, !10867, !10868, !10869}
!10866 = !DIDerivedType(tag: DW_TAG_member, name: "CS", scope: !10864, file: !506, line: 3468, baseType: !510, size: 32)
!10867 = !DIDerivedType(tag: DW_TAG_member, name: "ID", scope: !10864, file: !506, line: 3469, baseType: !510, size: 32, offset: 32)
!10868 = !DIDerivedType(tag: DW_TAG_member, name: "WORD0", scope: !10864, file: !506, line: 3470, baseType: !510, size: 32, offset: 64)
!10869 = !DIDerivedType(tag: DW_TAG_member, name: "WORD1", scope: !10864, file: !506, line: 3471, baseType: !510, size: 32, offset: 96)
!10870 = !{!10871}
!10871 = !DISubrange(count: 64)
!10872 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_3", scope: !10838, file: !506, line: 3473, baseType: !10873, size: 8192, offset: 9216)
!10873 = !DICompositeType(tag: DW_TAG_array_type, baseType: !195, size: 8192, elements: !709)
!10874 = !DIDerivedType(tag: DW_TAG_member, name: "RXIMR", scope: !10838, file: !506, line: 3474, baseType: !10875, size: 2048, offset: 17408)
!10875 = !DICompositeType(tag: DW_TAG_array_type, baseType: !510, size: 2048, elements: !10870)
!10876 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_4", scope: !10838, file: !506, line: 3475, baseType: !2659, size: 768, offset: 19456)
!10877 = !DIDerivedType(tag: DW_TAG_member, name: "GFWR", scope: !10838, file: !506, line: 3476, baseType: !510, size: 32, offset: 20224)
!10878 = !{!10879, !10880, !10881, !10882, !10883}
!10879 = !DILocalVariable(name: "base", arg: 1, scope: !10833, file: !10733, line: 120, type: !10836)
!10880 = !DILocalVariable(name: "root", scope: !10833, file: !10733, line: 122, type: !152)
!10881 = !DILocalVariable(name: "hz", scope: !10833, file: !10733, line: 123, type: !152)
!10882 = !DILocalVariable(name: "pre", scope: !10833, file: !10733, line: 124, type: !152)
!10883 = !DILocalVariable(name: "post", scope: !10833, file: !10733, line: 124, type: !152)
!10884 = !DILocation(line: 0, scope: !10833)
!10885 = !DILocation(line: 124, column: 2, scope: !10833)
!10886 = !DILocation(line: 126, column: 10, scope: !10833)
!10887 = !DILocation(line: 126, column: 2, scope: !10833)
!10888 = !DILocation(line: 134, column: 3, scope: !10889)
!10889 = distinct !DILexicalBlock(scope: !10833, file: !10733, line: 126, column: 26)
!10890 = !DILocation(line: 0, scope: !10889)
!10891 = !DILocation(line: 139, column: 2, scope: !10833)
!10892 = !DILocation(line: 144, column: 8, scope: !10893)
!10893 = distinct !DILexicalBlock(scope: !10833, file: !10733, line: 139, column: 16)
!10894 = !DILocation(line: 144, column: 45, scope: !10893)
!10895 = !DILocation(line: 145, column: 3, scope: !10893)
!10896 = !DILocation(line: 147, column: 8, scope: !10893)
!10897 = !DILocation(line: 148, column: 3, scope: !10893)
!10898 = !DILocation(line: 0, scope: !10893)
!10899 = !DILocation(line: 153, column: 15, scope: !10833)
!10900 = !DILocation(line: 153, column: 19, scope: !10833)
!10901 = !DILocation(line: 153, column: 12, scope: !10833)
!10902 = !DILocation(line: 153, column: 27, scope: !10833)
!10903 = !DILocation(line: 153, column: 32, scope: !10833)
!10904 = !DILocation(line: 153, column: 24, scope: !10833)
!10905 = !DILocation(line: 153, column: 2, scope: !10833)
!10906 = !DILocation(line: 154, column: 1, scope: !10833)
!10907 = distinct !DISubprogram(name: "get_i2c_clock_freq", scope: !10733, file: !10733, line: 162, type: !10908, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2744, retainedNodes: !10924)
!10908 = !DISubroutineType(types: !10909)
!10909 = !{!152, !10910}
!10910 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10911, size: 32)
!10911 = !DIDerivedType(tag: DW_TAG_typedef, name: "I2C_Type", file: !506, line: 21082, baseType: !10912)
!10912 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !506, line: 21072, size: 144, elements: !10913)
!10913 = !{!10914, !10915, !10917, !10918, !10919, !10920, !10921, !10922, !10923}
!10914 = !DIDerivedType(tag: DW_TAG_member, name: "IADR", scope: !10912, file: !506, line: 21073, baseType: !624, size: 16)
!10915 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !10912, file: !506, line: 21074, baseType: !10916, size: 16, offset: 16)
!10916 = !DICompositeType(tag: DW_TAG_array_type, baseType: !195, size: 16, elements: !747)
!10917 = !DIDerivedType(tag: DW_TAG_member, name: "IFDR", scope: !10912, file: !506, line: 21075, baseType: !624, size: 16, offset: 32)
!10918 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !10912, file: !506, line: 21076, baseType: !10916, size: 16, offset: 48)
!10919 = !DIDerivedType(tag: DW_TAG_member, name: "I2CR", scope: !10912, file: !506, line: 21077, baseType: !624, size: 16, offset: 64)
!10920 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_2", scope: !10912, file: !506, line: 21078, baseType: !10916, size: 16, offset: 80)
!10921 = !DIDerivedType(tag: DW_TAG_member, name: "I2SR", scope: !10912, file: !506, line: 21079, baseType: !624, size: 16, offset: 96)
!10922 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_3", scope: !10912, file: !506, line: 21080, baseType: !10916, size: 16, offset: 112)
!10923 = !DIDerivedType(tag: DW_TAG_member, name: "I2DR", scope: !10912, file: !506, line: 21081, baseType: !624, size: 16, offset: 128)
!10924 = !{!10925, !10926, !10927, !10928, !10929}
!10925 = !DILocalVariable(name: "base", arg: 1, scope: !10907, file: !10733, line: 162, type: !10910)
!10926 = !DILocalVariable(name: "root", scope: !10907, file: !10733, line: 164, type: !152)
!10927 = !DILocalVariable(name: "hz", scope: !10907, file: !10733, line: 165, type: !152)
!10928 = !DILocalVariable(name: "pre", scope: !10907, file: !10733, line: 166, type: !152)
!10929 = !DILocalVariable(name: "post", scope: !10907, file: !10733, line: 166, type: !152)
!10930 = !DILocation(line: 0, scope: !10907)
!10931 = !DILocation(line: 166, column: 2, scope: !10907)
!10932 = !DILocation(line: 168, column: 10, scope: !10907)
!10933 = !DILocation(line: 168, column: 2, scope: !10907)
!10934 = !DILocation(line: 0, scope: !10935)
!10935 = distinct !DILexicalBlock(scope: !10907, file: !10733, line: 168, column: 26)
!10936 = !DILocation(line: 189, column: 2, scope: !10907)
!10937 = !DILocation(line: 194, column: 8, scope: !10938)
!10938 = distinct !DILexicalBlock(scope: !10907, file: !10733, line: 189, column: 16)
!10939 = !DILocation(line: 194, column: 45, scope: !10938)
!10940 = !DILocation(line: 195, column: 3, scope: !10938)
!10941 = !DILocation(line: 0, scope: !10938)
!10942 = !DILocation(line: 200, column: 15, scope: !10907)
!10943 = !DILocation(line: 200, column: 19, scope: !10907)
!10944 = !DILocation(line: 200, column: 12, scope: !10907)
!10945 = !DILocation(line: 200, column: 27, scope: !10907)
!10946 = !DILocation(line: 200, column: 32, scope: !10907)
!10947 = !DILocation(line: 200, column: 24, scope: !10907)
!10948 = !DILocation(line: 200, column: 2, scope: !10907)
!10949 = !DILocation(line: 201, column: 1, scope: !10907)
!10950 = distinct !DISubprogram(name: "get_uart_clock_freq", scope: !10733, file: !10733, line: 209, type: !10951, scopeLine: 210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2744, retainedNodes: !10976)
!10951 = !DISubroutineType(types: !10952)
!10952 = !{!152, !10953}
!10953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10954, size: 32)
!10954 = !DIDerivedType(tag: DW_TAG_typedef, name: "UART_Type", file: !506, line: 41342, baseType: !10955)
!10955 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !506, line: 41322, size: 1504, elements: !10956)
!10956 = !{!10957, !10958, !10959, !10960, !10961, !10962, !10963, !10964, !10965, !10966, !10967, !10968, !10969, !10970, !10971, !10972, !10973, !10974, !10975}
!10957 = !DIDerivedType(tag: DW_TAG_member, name: "URXD", scope: !10955, file: !506, line: 41323, baseType: !581, size: 32)
!10958 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_0", scope: !10955, file: !506, line: 41324, baseType: !1345, size: 480, offset: 32)
!10959 = !DIDerivedType(tag: DW_TAG_member, name: "UTXD", scope: !10955, file: !506, line: 41325, baseType: !510, size: 32, offset: 512)
!10960 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED_1", scope: !10955, file: !506, line: 41326, baseType: !1345, size: 480, offset: 544)
!10961 = !DIDerivedType(tag: DW_TAG_member, name: "UCR1", scope: !10955, file: !506, line: 41327, baseType: !510, size: 32, offset: 1024)
!10962 = !DIDerivedType(tag: DW_TAG_member, name: "UCR2", scope: !10955, file: !506, line: 41328, baseType: !510, size: 32, offset: 1056)
!10963 = !DIDerivedType(tag: DW_TAG_member, name: "UCR3", scope: !10955, file: !506, line: 41329, baseType: !510, size: 32, offset: 1088)
!10964 = !DIDerivedType(tag: DW_TAG_member, name: "UCR4", scope: !10955, file: !506, line: 41330, baseType: !510, size: 32, offset: 1120)
!10965 = !DIDerivedType(tag: DW_TAG_member, name: "UFCR", scope: !10955, file: !506, line: 41331, baseType: !510, size: 32, offset: 1152)
!10966 = !DIDerivedType(tag: DW_TAG_member, name: "USR1", scope: !10955, file: !506, line: 41332, baseType: !510, size: 32, offset: 1184)
!10967 = !DIDerivedType(tag: DW_TAG_member, name: "USR2", scope: !10955, file: !506, line: 41333, baseType: !510, size: 32, offset: 1216)
!10968 = !DIDerivedType(tag: DW_TAG_member, name: "UESC", scope: !10955, file: !506, line: 41334, baseType: !510, size: 32, offset: 1248)
!10969 = !DIDerivedType(tag: DW_TAG_member, name: "UTIM", scope: !10955, file: !506, line: 41335, baseType: !510, size: 32, offset: 1280)
!10970 = !DIDerivedType(tag: DW_TAG_member, name: "UBIR", scope: !10955, file: !506, line: 41336, baseType: !510, size: 32, offset: 1312)
!10971 = !DIDerivedType(tag: DW_TAG_member, name: "UBMR", scope: !10955, file: !506, line: 41337, baseType: !510, size: 32, offset: 1344)
!10972 = !DIDerivedType(tag: DW_TAG_member, name: "UBRC", scope: !10955, file: !506, line: 41338, baseType: !581, size: 32, offset: 1376)
!10973 = !DIDerivedType(tag: DW_TAG_member, name: "ONEMS", scope: !10955, file: !506, line: 41339, baseType: !510, size: 32, offset: 1408)
!10974 = !DIDerivedType(tag: DW_TAG_member, name: "UTS", scope: !10955, file: !506, line: 41340, baseType: !510, size: 32, offset: 1440)
!10975 = !DIDerivedType(tag: DW_TAG_member, name: "UMCR", scope: !10955, file: !506, line: 41341, baseType: !510, size: 32, offset: 1472)
!10976 = !{!10977, !10978, !10979, !10980, !10981}
!10977 = !DILocalVariable(name: "base", arg: 1, scope: !10950, file: !10733, line: 209, type: !10953)
!10978 = !DILocalVariable(name: "root", scope: !10950, file: !10733, line: 211, type: !152)
!10979 = !DILocalVariable(name: "hz", scope: !10950, file: !10733, line: 212, type: !152)
!10980 = !DILocalVariable(name: "pre", scope: !10950, file: !10733, line: 213, type: !152)
!10981 = !DILocalVariable(name: "post", scope: !10950, file: !10733, line: 213, type: !152)
!10982 = !DILocation(line: 0, scope: !10950)
!10983 = !DILocation(line: 213, column: 2, scope: !10950)
!10984 = !DILocation(line: 215, column: 10, scope: !10950)
!10985 = !DILocation(line: 215, column: 2, scope: !10950)
!10986 = !DILocation(line: 223, column: 3, scope: !10987)
!10987 = distinct !DILexicalBlock(scope: !10950, file: !10733, line: 215, column: 26)
!10988 = !DILocation(line: 227, column: 3, scope: !10987)
!10989 = !DILocation(line: 231, column: 3, scope: !10987)
!10990 = !DILocation(line: 235, column: 3, scope: !10987)
!10991 = !DILocation(line: 239, column: 3, scope: !10987)
!10992 = !DILocation(line: 243, column: 3, scope: !10987)
!10993 = !DILocation(line: 0, scope: !10987)
!10994 = !DILocation(line: 248, column: 2, scope: !10950)
!10995 = !DILocation(line: 253, column: 8, scope: !10996)
!10996 = distinct !DILexicalBlock(scope: !10950, file: !10733, line: 248, column: 16)
!10997 = !DILocation(line: 253, column: 45, scope: !10996)
!10998 = !DILocation(line: 254, column: 3, scope: !10996)
!10999 = !DILocation(line: 256, column: 8, scope: !10996)
!11000 = !DILocation(line: 257, column: 3, scope: !10996)
!11001 = !DILocation(line: 0, scope: !10996)
!11002 = !DILocation(line: 262, column: 15, scope: !10950)
!11003 = !DILocation(line: 262, column: 19, scope: !10950)
!11004 = !DILocation(line: 262, column: 12, scope: !10950)
!11005 = !DILocation(line: 262, column: 27, scope: !10950)
!11006 = !DILocation(line: 262, column: 32, scope: !10950)
!11007 = !DILocation(line: 262, column: 24, scope: !10950)
!11008 = !DILocation(line: 262, column: 2, scope: !10950)
!11009 = !DILocation(line: 263, column: 1, scope: !10950)
!11010 = distinct !DISubprogram(name: "z_device_state_init", scope: !11011, file: !11011, line: 23, type: !2909, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !11012)
!11011 = !DIFile(filename: "zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11012 = !{!11013}
!11013 = !DILocalVariable(name: "dev", scope: !11010, file: !11011, line: 25, type: !11014)
!11014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11015, size: 32)
!11015 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11016)
!11016 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !884, line: 378, size: 192, elements: !11017)
!11017 = !{!11018, !11019, !11020, !11021, !11027, !11028}
!11018 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !11016, file: !884, line: 380, baseType: !118, size: 32)
!11019 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !11016, file: !884, line: 382, baseType: !13, size: 32, offset: 32)
!11020 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !11016, file: !884, line: 384, baseType: !13, size: 32, offset: 64)
!11021 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !11016, file: !884, line: 386, baseType: !11022, size: 32, offset: 96)
!11022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11023, size: 32)
!11023 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !884, line: 351, size: 16, elements: !11024)
!11024 = !{!11025, !11026}
!11025 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !11023, file: !884, line: 359, baseType: !195, size: 8)
!11026 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !11023, file: !884, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!11027 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !11016, file: !884, line: 388, baseType: !106, size: 32, offset: 128)
!11028 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !11016, file: !884, line: 396, baseType: !897, size: 32, offset: 160)
!11029 = !DILocation(line: 0, scope: !11010)
!11030 = !DILocation(line: 31, column: 1, scope: !11010)
!11031 = distinct !DISubprogram(name: "z_impl_device_get_binding", scope: !11011, file: !11011, line: 33, type: !11032, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !11034)
!11032 = !DISubroutineType(types: !11033)
!11033 = !{!11014, !118}
!11034 = !{!11035, !11036}
!11035 = !DILocalVariable(name: "name", arg: 1, scope: !11031, file: !11011, line: 33, type: !118)
!11036 = !DILocalVariable(name: "dev", scope: !11031, file: !11011, line: 35, type: !11014)
!11037 = !DILocation(line: 0, scope: !11031)
!11038 = !DILocation(line: 40, column: 12, scope: !11039)
!11039 = distinct !DILexicalBlock(scope: !11031, file: !11011, line: 40, column: 6)
!11040 = !DILocation(line: 40, column: 21, scope: !11039)
!11041 = !DILocation(line: 40, column: 25, scope: !11039)
!11042 = !DILocation(line: 40, column: 33, scope: !11039)
!11043 = !DILocation(line: 40, column: 6, scope: !11031)
!11044 = !DILocation(line: 55, column: 2, scope: !11045)
!11045 = distinct !DILexicalBlock(scope: !11031, file: !11011, line: 55, column: 2)
!11046 = !DILocation(line: 50, column: 7, scope: !11047)
!11047 = distinct !DILexicalBlock(scope: !11048, file: !11011, line: 50, column: 7)
!11048 = distinct !DILexicalBlock(scope: !11049, file: !11011, line: 49, column: 57)
!11049 = distinct !DILexicalBlock(scope: !11050, file: !11011, line: 49, column: 2)
!11050 = distinct !DILexicalBlock(scope: !11031, file: !11011, line: 49, column: 2)
!11051 = !DILocation(line: 50, column: 30, scope: !11047)
!11052 = !DILocation(line: 50, column: 39, scope: !11047)
!11053 = !DILocation(line: 50, column: 44, scope: !11047)
!11054 = !DILocation(line: 50, column: 7, scope: !11048)
!11055 = !DILocation(line: 49, column: 53, scope: !11049)
!11056 = !DILocation(line: 49, column: 33, scope: !11049)
!11057 = !DILocation(line: 49, column: 2, scope: !11050)
!11058 = distinct !{!11058, !11057, !11059}
!11059 = !DILocation(line: 53, column: 2, scope: !11050)
!11060 = !DILocation(line: 56, column: 7, scope: !11061)
!11061 = distinct !DILexicalBlock(scope: !11062, file: !11011, line: 56, column: 7)
!11062 = distinct !DILexicalBlock(scope: !11063, file: !11011, line: 55, column: 57)
!11063 = distinct !DILexicalBlock(scope: !11045, file: !11011, line: 55, column: 2)
!11064 = !DILocation(line: 56, column: 30, scope: !11061)
!11065 = !DILocation(line: 56, column: 52, scope: !11061)
!11066 = !DILocation(line: 56, column: 34, scope: !11061)
!11067 = !DILocation(line: 56, column: 58, scope: !11061)
!11068 = !DILocation(line: 56, column: 7, scope: !11062)
!11069 = !DILocation(line: 55, column: 53, scope: !11063)
!11070 = !DILocation(line: 55, column: 33, scope: !11063)
!11071 = distinct !{!11071, !11044, !11072}
!11072 = !DILocation(line: 59, column: 2, scope: !11045)
!11073 = !DILocation(line: 62, column: 1, scope: !11031)
!11074 = distinct !DISubprogram(name: "z_device_is_ready", scope: !11011, file: !11011, line: 93, type: !11075, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !11077)
!11075 = !DISubroutineType(types: !11076)
!11076 = !{!145, !11014}
!11077 = !{!11078}
!11078 = !DILocalVariable(name: "dev", arg: 1, scope: !11074, file: !11011, line: 93, type: !11014)
!11079 = !DILocation(line: 0, scope: !11074)
!11080 = !DILocation(line: 99, column: 10, scope: !11081)
!11081 = distinct !DILexicalBlock(scope: !11074, file: !11011, line: 99, column: 6)
!11082 = !DILocation(line: 99, column: 6, scope: !11074)
!11083 = !DILocation(line: 103, column: 14, scope: !11074)
!11084 = !DILocation(line: 103, column: 21, scope: !11074)
!11085 = !DILocation(line: 103, column: 33, scope: !11074)
!11086 = !DILocation(line: 103, column: 49, scope: !11074)
!11087 = !DILocation(line: 103, column: 58, scope: !11074)
!11088 = !DILocation(line: 104, column: 1, scope: !11074)
!11089 = distinct !DISubprogram(name: "z_device_get_all_static", scope: !11011, file: !11011, line: 87, type: !11090, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !11093)
!11090 = !DISubroutineType(types: !11091)
!11091 = !{!185, !11092}
!11092 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11014, size: 32)
!11093 = !{!11094}
!11094 = !DILocalVariable(name: "devices", arg: 1, scope: !11089, file: !11011, line: 87, type: !11092)
!11095 = !DILocation(line: 0, scope: !11089)
!11096 = !DILocation(line: 89, column: 11, scope: !11089)
!11097 = !DILocation(line: 90, column: 2, scope: !11089)
!11098 = distinct !DISubprogram(name: "device_required_foreach", scope: !11011, file: !11011, line: 125, type: !11099, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !11105)
!11099 = !DISubroutineType(types: !11100)
!11100 = !{!107, !11014, !11101, !106}
!11101 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_visitor_callback_t", file: !884, line: 471, baseType: !11102)
!11102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11103, size: 32)
!11103 = !DISubroutineType(types: !11104)
!11104 = !{!107, !11014, !106}
!11105 = !{!11106, !11107, !11108, !11109, !11110}
!11106 = !DILocalVariable(name: "dev", arg: 1, scope: !11098, file: !11011, line: 125, type: !11014)
!11107 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !11098, file: !11011, line: 126, type: !11101)
!11108 = !DILocalVariable(name: "context", arg: 3, scope: !11098, file: !11011, line: 127, type: !106)
!11109 = !DILocalVariable(name: "handle_count", scope: !11098, file: !11011, line: 129, type: !185)
!11110 = !DILocalVariable(name: "handles", scope: !11098, file: !11011, line: 130, type: !897)
!11111 = !DILocation(line: 0, scope: !11098)
!11112 = !DILocation(line: 129, column: 2, scope: !11098)
!11113 = !DILocation(line: 129, column: 9, scope: !11098)
!11114 = !DILocation(line: 130, column: 35, scope: !11098)
!11115 = !DILocation(line: 132, column: 33, scope: !11098)
!11116 = !DILocation(line: 132, column: 9, scope: !11098)
!11117 = !DILocation(line: 133, column: 1, scope: !11098)
!11118 = !DILocation(line: 132, column: 2, scope: !11098)
!11119 = distinct !DISubprogram(name: "device_required_handles_get", scope: !884, file: !884, line: 493, type: !11120, scopeLine: 494, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !11122)
!11120 = !DISubroutineType(types: !11121)
!11121 = !{!897, !11014, !2317}
!11122 = !{!11123, !11124, !11125, !11126}
!11123 = !DILocalVariable(name: "dev", arg: 1, scope: !11119, file: !884, line: 493, type: !11014)
!11124 = !DILocalVariable(name: "count", arg: 2, scope: !11119, file: !884, line: 493, type: !2317)
!11125 = !DILocalVariable(name: "rv", scope: !11119, file: !884, line: 495, type: !897)
!11126 = !DILocalVariable(name: "i", scope: !11127, file: !884, line: 498, type: !185)
!11127 = distinct !DILexicalBlock(scope: !11128, file: !884, line: 497, column: 18)
!11128 = distinct !DILexicalBlock(scope: !11119, file: !884, line: 497, column: 6)
!11129 = !DILocation(line: 0, scope: !11119)
!11130 = !DILocation(line: 495, column: 35, scope: !11119)
!11131 = !DILocation(line: 497, column: 9, scope: !11128)
!11132 = !DILocation(line: 497, column: 6, scope: !11119)
!11133 = !DILocation(line: 0, scope: !11127)
!11134 = !DILocation(line: 500, column: 11, scope: !11127)
!11135 = !DILocation(line: 500, column: 40, scope: !11127)
!11136 = !DILocation(line: 502, column: 4, scope: !11137)
!11137 = distinct !DILexicalBlock(scope: !11127, file: !884, line: 501, column: 40)
!11138 = distinct !{!11138, !11139, !11140}
!11139 = !DILocation(line: 500, column: 3, scope: !11127)
!11140 = !DILocation(line: 503, column: 3, scope: !11127)
!11141 = !DILocation(line: 504, column: 10, scope: !11127)
!11142 = !DILocation(line: 505, column: 2, scope: !11127)
!11143 = !DILocation(line: 507, column: 2, scope: !11119)
!11144 = distinct !DISubprogram(name: "device_visitor", scope: !11011, file: !11011, line: 106, type: !11145, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !11147)
!11145 = !DISubroutineType(types: !11146)
!11146 = !{!107, !897, !185, !11101, !106}
!11147 = !{!11148, !11149, !11150, !11151, !11152, !11154, !11157, !11158}
!11148 = !DILocalVariable(name: "handles", arg: 1, scope: !11144, file: !11011, line: 106, type: !897)
!11149 = !DILocalVariable(name: "handle_count", arg: 2, scope: !11144, file: !11011, line: 107, type: !185)
!11150 = !DILocalVariable(name: "visitor_cb", arg: 3, scope: !11144, file: !11011, line: 108, type: !11101)
!11151 = !DILocalVariable(name: "context", arg: 4, scope: !11144, file: !11011, line: 109, type: !106)
!11152 = !DILocalVariable(name: "i", scope: !11153, file: !11011, line: 112, type: !185)
!11153 = distinct !DILexicalBlock(scope: !11144, file: !11011, line: 112, column: 2)
!11154 = !DILocalVariable(name: "dh", scope: !11155, file: !11011, line: 113, type: !899)
!11155 = distinct !DILexicalBlock(scope: !11156, file: !11011, line: 112, column: 44)
!11156 = distinct !DILexicalBlock(scope: !11153, file: !11011, line: 112, column: 2)
!11157 = !DILocalVariable(name: "rdev", scope: !11155, file: !11011, line: 114, type: !11014)
!11158 = !DILocalVariable(name: "rc", scope: !11155, file: !11011, line: 115, type: !107)
!11159 = !DILocation(line: 0, scope: !11144)
!11160 = !DILocation(line: 0, scope: !11153)
!11161 = !DILocation(line: 112, column: 23, scope: !11156)
!11162 = !DILocation(line: 112, column: 2, scope: !11153)
!11163 = distinct !{!11163, !11162, !11164}
!11164 = !DILocation(line: 120, column: 2, scope: !11153)
!11165 = !DILocation(line: 113, column: 24, scope: !11155)
!11166 = !DILocation(line: 0, scope: !11155)
!11167 = !DILocation(line: 114, column: 31, scope: !11155)
!11168 = !DILocation(line: 115, column: 12, scope: !11155)
!11169 = !DILocation(line: 117, column: 10, scope: !11170)
!11170 = distinct !DILexicalBlock(scope: !11155, file: !11011, line: 117, column: 7)
!11171 = !DILocation(line: 112, column: 39, scope: !11156)
!11172 = !DILocation(line: 123, column: 1, scope: !11144)
!11173 = distinct !DISubprogram(name: "device_from_handle", scope: !884, file: !884, line: 439, type: !11174, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !11176)
!11174 = !DISubroutineType(types: !11175)
!11175 = !{!11014, !899}
!11176 = !{!11177, !11178, !11179}
!11177 = !DILocalVariable(name: "dev_handle", arg: 1, scope: !11173, file: !884, line: 439, type: !899)
!11178 = !DILocalVariable(name: "dev", scope: !11173, file: !884, line: 443, type: !11014)
!11179 = !DILocalVariable(name: "numdev", scope: !11173, file: !884, line: 444, type: !185)
!11180 = !DILocation(line: 0, scope: !11173)
!11181 = !DILocation(line: 446, column: 7, scope: !11182)
!11182 = distinct !DILexicalBlock(scope: !11173, file: !884, line: 446, column: 6)
!11183 = !DILocation(line: 446, column: 18, scope: !11182)
!11184 = !DILocation(line: 446, column: 23, scope: !11182)
!11185 = !DILocation(line: 450, column: 2, scope: !11173)
!11186 = distinct !DISubprogram(name: "device_supported_foreach", scope: !11011, file: !11011, line: 135, type: !11099, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !11187)
!11187 = !{!11188, !11189, !11190, !11191, !11192}
!11188 = !DILocalVariable(name: "dev", arg: 1, scope: !11186, file: !11011, line: 135, type: !11014)
!11189 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !11186, file: !11011, line: 136, type: !11101)
!11190 = !DILocalVariable(name: "context", arg: 3, scope: !11186, file: !11011, line: 137, type: !106)
!11191 = !DILocalVariable(name: "handle_count", scope: !11186, file: !11011, line: 139, type: !185)
!11192 = !DILocalVariable(name: "handles", scope: !11186, file: !11011, line: 140, type: !897)
!11193 = !DILocation(line: 0, scope: !11186)
!11194 = !DILocation(line: 139, column: 2, scope: !11186)
!11195 = !DILocation(line: 139, column: 9, scope: !11186)
!11196 = !DILocation(line: 140, column: 35, scope: !11186)
!11197 = !DILocation(line: 142, column: 33, scope: !11186)
!11198 = !DILocation(line: 142, column: 9, scope: !11186)
!11199 = !DILocation(line: 143, column: 1, scope: !11186)
!11200 = !DILocation(line: 142, column: 2, scope: !11186)
!11201 = distinct !DISubprogram(name: "device_supported_handles_get", scope: !884, file: !884, line: 573, type: !11120, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2869, retainedNodes: !11202)
!11202 = !{!11203, !11204, !11205, !11206, !11207}
!11203 = !DILocalVariable(name: "dev", arg: 1, scope: !11201, file: !884, line: 573, type: !11014)
!11204 = !DILocalVariable(name: "count", arg: 2, scope: !11201, file: !884, line: 573, type: !2317)
!11205 = !DILocalVariable(name: "rv", scope: !11201, file: !884, line: 575, type: !897)
!11206 = !DILocalVariable(name: "region", scope: !11201, file: !884, line: 576, type: !185)
!11207 = !DILocalVariable(name: "i", scope: !11201, file: !884, line: 577, type: !185)
!11208 = !DILocation(line: 0, scope: !11201)
!11209 = !DILocation(line: 575, column: 35, scope: !11201)
!11210 = !DILocation(line: 579, column: 9, scope: !11211)
!11211 = distinct !DILexicalBlock(scope: !11201, file: !884, line: 579, column: 6)
!11212 = !DILocation(line: 579, column: 6, scope: !11201)
!11213 = !DILocation(line: 582, column: 8, scope: !11214)
!11214 = distinct !DILexicalBlock(scope: !11215, file: !884, line: 582, column: 8)
!11215 = distinct !DILexicalBlock(scope: !11216, file: !884, line: 581, column: 23)
!11216 = distinct !DILexicalBlock(scope: !11211, file: !884, line: 579, column: 18)
!11217 = !DILocation(line: 582, column: 12, scope: !11214)
!11218 = !DILocation(line: 585, column: 6, scope: !11215)
!11219 = !DILocation(line: 0, scope: !11216)
!11220 = !DILocation(line: 581, column: 17, scope: !11216)
!11221 = !DILocation(line: 581, column: 3, scope: !11216)
!11222 = !DILocation(line: 588, column: 10, scope: !11216)
!11223 = !DILocation(line: 588, column: 16, scope: !11216)
!11224 = !DILocation(line: 589, column: 4, scope: !11225)
!11225 = distinct !DILexicalBlock(scope: !11216, file: !884, line: 588, column: 39)
!11226 = !DILocation(line: 588, column: 3, scope: !11216)
!11227 = distinct !{!11227, !11226, !11228}
!11228 = !DILocation(line: 590, column: 3, scope: !11216)
!11229 = !DILocation(line: 591, column: 10, scope: !11216)
!11230 = !DILocation(line: 592, column: 2, scope: !11216)
!11231 = !DILocation(line: 575, column: 25, scope: !11201)
!11232 = !DILocation(line: 594, column: 2, scope: !11201)
!11233 = distinct !DISubprogram(name: "z_impl_z_errno", scope: !1747, file: !1747, line: 49, type: !11234, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1744, retainedNodes: !1949)
!11234 = !DISubroutineType(types: !11235)
!11235 = !{!187}
!11236 = !DILocation(line: 51, column: 10, scope: !11233)
!11237 = !DILocation(line: 51, column: 20, scope: !11233)
!11238 = !DILocation(line: 51, column: 2, scope: !11233)
!11239 = distinct !DISubprogram(name: "coredump", scope: !2876, file: !2876, line: 209, type: !11240, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2872, retainedNodes: !11383)
!11240 = !DISubroutineType(types: !11241)
!11241 = !{null, !32, !11242, !11286}
!11242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11243, size: 32)
!11243 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11244)
!11244 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2448, line: 141, baseType: !11245)
!11245 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2448, line: 97, size: 256, elements: !11246)
!11246 = !{!11247}
!11247 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !11245, file: !2448, line: 107, baseType: !11248, size: 256)
!11248 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2448, line: 98, size: 256, elements: !11249)
!11249 = !{!11250, !11255, !11260, !11265, !11270, !11275, !11280, !11285}
!11250 = !DIDerivedType(tag: DW_TAG_member, scope: !11248, file: !2448, line: 99, baseType: !11251, size: 32)
!11251 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11248, file: !2448, line: 99, size: 32, elements: !11252)
!11252 = !{!11253, !11254}
!11253 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !11251, file: !2448, line: 99, baseType: !152, size: 32)
!11254 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !11251, file: !2448, line: 99, baseType: !152, size: 32)
!11255 = !DIDerivedType(tag: DW_TAG_member, scope: !11248, file: !2448, line: 100, baseType: !11256, size: 32, offset: 32)
!11256 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11248, file: !2448, line: 100, size: 32, elements: !11257)
!11257 = !{!11258, !11259}
!11258 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !11256, file: !2448, line: 100, baseType: !152, size: 32)
!11259 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !11256, file: !2448, line: 100, baseType: !152, size: 32)
!11260 = !DIDerivedType(tag: DW_TAG_member, scope: !11248, file: !2448, line: 101, baseType: !11261, size: 32, offset: 64)
!11261 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11248, file: !2448, line: 101, size: 32, elements: !11262)
!11262 = !{!11263, !11264}
!11263 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !11261, file: !2448, line: 101, baseType: !152, size: 32)
!11264 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !11261, file: !2448, line: 101, baseType: !152, size: 32)
!11265 = !DIDerivedType(tag: DW_TAG_member, scope: !11248, file: !2448, line: 102, baseType: !11266, size: 32, offset: 96)
!11266 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11248, file: !2448, line: 102, size: 32, elements: !11267)
!11267 = !{!11268, !11269}
!11268 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !11266, file: !2448, line: 102, baseType: !152, size: 32)
!11269 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !11266, file: !2448, line: 102, baseType: !152, size: 32)
!11270 = !DIDerivedType(tag: DW_TAG_member, scope: !11248, file: !2448, line: 103, baseType: !11271, size: 32, offset: 128)
!11271 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11248, file: !2448, line: 103, size: 32, elements: !11272)
!11272 = !{!11273, !11274}
!11273 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !11271, file: !2448, line: 103, baseType: !152, size: 32)
!11274 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !11271, file: !2448, line: 103, baseType: !152, size: 32)
!11275 = !DIDerivedType(tag: DW_TAG_member, scope: !11248, file: !2448, line: 104, baseType: !11276, size: 32, offset: 160)
!11276 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11248, file: !2448, line: 104, size: 32, elements: !11277)
!11277 = !{!11278, !11279}
!11278 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !11276, file: !2448, line: 104, baseType: !152, size: 32)
!11279 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !11276, file: !2448, line: 104, baseType: !152, size: 32)
!11280 = !DIDerivedType(tag: DW_TAG_member, scope: !11248, file: !2448, line: 105, baseType: !11281, size: 32, offset: 192)
!11281 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11248, file: !2448, line: 105, size: 32, elements: !11282)
!11282 = !{!11283, !11284}
!11283 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !11281, file: !2448, line: 105, baseType: !152, size: 32)
!11284 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !11281, file: !2448, line: 105, baseType: !152, size: 32)
!11285 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !11248, file: !2448, line: 106, baseType: !152, size: 32, offset: 224)
!11286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11287, size: 32)
!11287 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !716, line: 245, size: 1152, elements: !11288)
!11288 = !{!11289, !11347, !11359, !11360, !11361, !11362, !11363, !11378}
!11289 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !11287, file: !716, line: 247, baseType: !11290, size: 384)
!11290 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !716, line: 57, size: 384, elements: !11291)
!11291 = !{!11292, !11316, !11323, !11324, !11325, !11334, !11335, !11336}
!11292 = !DIDerivedType(tag: DW_TAG_member, scope: !11290, file: !716, line: 60, baseType: !11293, size: 64)
!11293 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11290, file: !716, line: 60, size: 64, elements: !11294)
!11294 = !{!11295, !11310}
!11295 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !11293, file: !716, line: 61, baseType: !11296, size: 64)
!11296 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !726, line: 49, baseType: !11297)
!11297 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !726, line: 37, size: 64, elements: !11298)
!11298 = !{!11299, !11305}
!11299 = !DIDerivedType(tag: DW_TAG_member, scope: !11297, file: !726, line: 38, baseType: !11300, size: 32)
!11300 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11297, file: !726, line: 38, size: 32, elements: !11301)
!11301 = !{!11302, !11304}
!11302 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !11300, file: !726, line: 39, baseType: !11303, size: 32)
!11303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11297, size: 32)
!11304 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !11300, file: !726, line: 40, baseType: !11303, size: 32)
!11305 = !DIDerivedType(tag: DW_TAG_member, scope: !11297, file: !726, line: 42, baseType: !11306, size: 32, offset: 32)
!11306 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11297, file: !726, line: 42, size: 32, elements: !11307)
!11307 = !{!11308, !11309}
!11308 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !11306, file: !726, line: 43, baseType: !11303, size: 32)
!11309 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !11306, file: !726, line: 44, baseType: !11303, size: 32)
!11310 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !11293, file: !716, line: 62, baseType: !11311, size: 64)
!11311 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !742, line: 49, size: 64, elements: !11312)
!11312 = !{!11313}
!11313 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !11311, file: !742, line: 50, baseType: !11314, size: 64)
!11314 = !DICompositeType(tag: DW_TAG_array_type, baseType: !11315, size: 64, elements: !747)
!11315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11311, size: 32)
!11316 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !11290, file: !716, line: 68, baseType: !11317, size: 32, offset: 64)
!11317 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11318, size: 32)
!11318 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !752, line: 233, baseType: !11319)
!11319 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !752, line: 231, size: 64, elements: !11320)
!11320 = !{!11321}
!11321 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !11319, file: !752, line: 232, baseType: !11322, size: 64)
!11322 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !726, line: 48, baseType: !11297)
!11323 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !11290, file: !716, line: 71, baseType: !195, size: 8, offset: 96)
!11324 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !11290, file: !716, line: 74, baseType: !195, size: 8, offset: 104)
!11325 = !DIDerivedType(tag: DW_TAG_member, scope: !11290, file: !716, line: 90, baseType: !11326, size: 16, offset: 112)
!11326 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11290, file: !716, line: 90, size: 16, elements: !11327)
!11327 = !{!11328, !11333}
!11328 = !DIDerivedType(tag: DW_TAG_member, scope: !11326, file: !716, line: 91, baseType: !11329, size: 16)
!11329 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !11326, file: !716, line: 91, size: 16, elements: !11330)
!11330 = !{!11331, !11332}
!11331 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !11329, file: !716, line: 96, baseType: !766, size: 8)
!11332 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !11329, file: !716, line: 97, baseType: !195, size: 8, offset: 8)
!11333 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !11326, file: !716, line: 100, baseType: !197, size: 16)
!11334 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !11290, file: !716, line: 107, baseType: !152, size: 32, offset: 128)
!11335 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !11290, file: !716, line: 127, baseType: !106, size: 32, offset: 160)
!11336 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !11290, file: !716, line: 131, baseType: !11337, size: 192, offset: 192)
!11337 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !752, line: 244, size: 192, elements: !11338)
!11338 = !{!11339, !11340, !11346}
!11339 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !11337, file: !752, line: 245, baseType: !11296, size: 64)
!11340 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !11337, file: !752, line: 246, baseType: !11341, size: 32, offset: 64)
!11341 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !752, line: 242, baseType: !11342)
!11342 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11343, size: 32)
!11343 = !DISubroutineType(types: !11344)
!11344 = !{null, !11345}
!11345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11337, size: 32)
!11346 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !11337, file: !752, line: 249, baseType: !694, size: 64, offset: 128)
!11347 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !11287, file: !716, line: 250, baseType: !11348, size: 288, offset: 384)
!11348 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !785, line: 25, size: 288, elements: !11349)
!11349 = !{!11350, !11351, !11352, !11353, !11354, !11355, !11356, !11357, !11358}
!11350 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !11348, file: !785, line: 26, baseType: !152, size: 32)
!11351 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !11348, file: !785, line: 27, baseType: !152, size: 32, offset: 32)
!11352 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !11348, file: !785, line: 28, baseType: !152, size: 32, offset: 64)
!11353 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !11348, file: !785, line: 29, baseType: !152, size: 32, offset: 96)
!11354 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !11348, file: !785, line: 30, baseType: !152, size: 32, offset: 128)
!11355 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !11348, file: !785, line: 31, baseType: !152, size: 32, offset: 160)
!11356 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !11348, file: !785, line: 32, baseType: !152, size: 32, offset: 192)
!11357 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !11348, file: !785, line: 33, baseType: !152, size: 32, offset: 224)
!11358 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !11348, file: !785, line: 34, baseType: !152, size: 32, offset: 256)
!11359 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !11287, file: !716, line: 253, baseType: !106, size: 32, offset: 672)
!11360 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !11287, file: !716, line: 256, baseType: !11318, size: 64, offset: 704)
!11361 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !11287, file: !716, line: 279, baseType: !799, size: 256, offset: 768)
!11362 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !11287, file: !716, line: 294, baseType: !107, size: 32, offset: 1024)
!11363 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !11287, file: !716, line: 325, baseType: !11364, size: 32, offset: 1056)
!11364 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11365, size: 32)
!11365 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !804, line: 5073, size: 192, elements: !11366)
!11366 = !{!11367, !11373, !11374}
!11367 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !11365, file: !804, line: 5074, baseType: !11368, size: 96)
!11368 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !808, line: 56, size: 96, elements: !11369)
!11369 = !{!11370, !11371, !11372}
!11370 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !11368, file: !808, line: 57, baseType: !811, size: 32)
!11371 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !11368, file: !808, line: 58, baseType: !106, size: 32, offset: 32)
!11372 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !11368, file: !808, line: 59, baseType: !185, size: 32, offset: 64)
!11373 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !11365, file: !804, line: 5075, baseType: !11318, size: 64, offset: 96)
!11374 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !11365, file: !804, line: 5076, baseType: !11375, size: 32, offset: 160)
!11375 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !818, line: 43, size: 32, elements: !11376)
!11376 = !{!11377}
!11377 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !11375, file: !818, line: 52, baseType: !22, size: 32)
!11378 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !11287, file: !716, line: 343, baseType: !11379, size: 64, offset: 1088)
!11379 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !785, line: 60, size: 64, elements: !11380)
!11380 = !{!11381, !11382}
!11381 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !11379, file: !785, line: 63, baseType: !152, size: 32)
!11382 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !11379, file: !785, line: 66, baseType: !152, size: 32, offset: 32)
!11383 = !{!11384, !11385, !11386}
!11384 = !DILocalVariable(name: "reason", arg: 1, scope: !11239, file: !2876, line: 209, type: !32)
!11385 = !DILocalVariable(name: "esf", arg: 2, scope: !11239, file: !2876, line: 209, type: !11242)
!11386 = !DILocalVariable(name: "thread", arg: 3, scope: !11239, file: !2876, line: 210, type: !11286)
!11387 = !DILocation(line: 0, scope: !11239)
!11388 = !DILocation(line: 212, column: 1, scope: !11239)
!11389 = distinct !DISubprogram(name: "coredump_memory_dump", scope: !2876, file: !2876, line: 214, type: !11390, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2872, retainedNodes: !11392)
!11390 = !DISubroutineType(types: !11391)
!11391 = !{null, !22, !22}
!11392 = !{!11393, !11394}
!11393 = !DILocalVariable(name: "start_addr", arg: 1, scope: !11389, file: !2876, line: 214, type: !22)
!11394 = !DILocalVariable(name: "end_addr", arg: 2, scope: !11389, file: !2876, line: 214, type: !22)
!11395 = !DILocation(line: 0, scope: !11389)
!11396 = !DILocation(line: 216, column: 1, scope: !11389)
!11397 = distinct !DISubprogram(name: "coredump_buffer_output", scope: !2876, file: !2876, line: 218, type: !11398, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2872, retainedNodes: !11400)
!11398 = !DISubroutineType(types: !11399)
!11399 = !{null, !194, !185}
!11400 = !{!11401, !11402}
!11401 = !DILocalVariable(name: "buf", arg: 1, scope: !11397, file: !2876, line: 218, type: !194)
!11402 = !DILocalVariable(name: "buflen", arg: 2, scope: !11397, file: !2876, line: 218, type: !185)
!11403 = !DILocation(line: 0, scope: !11397)
!11404 = !DILocation(line: 220, column: 1, scope: !11397)
!11405 = distinct !DISubprogram(name: "coredump_query", scope: !2876, file: !2876, line: 222, type: !11406, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2872, retainedNodes: !11408)
!11406 = !DISubroutineType(types: !11407)
!11407 = !{!107, !2875, !106}
!11408 = !{!11409, !11410}
!11409 = !DILocalVariable(name: "query_id", arg: 1, scope: !11405, file: !2876, line: 222, type: !2875)
!11410 = !DILocalVariable(name: "arg", arg: 2, scope: !11405, file: !2876, line: 222, type: !106)
!11411 = !DILocation(line: 0, scope: !11405)
!11412 = !DILocation(line: 224, column: 2, scope: !11405)
!11413 = distinct !DISubprogram(name: "coredump_cmd", scope: !2876, file: !2876, line: 227, type: !11414, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2872, retainedNodes: !11416)
!11414 = !DISubroutineType(types: !11415)
!11415 = !{!107, !2882, !106}
!11416 = !{!11417, !11418}
!11417 = !DILocalVariable(name: "query_id", arg: 1, scope: !11413, file: !2876, line: 227, type: !2882)
!11418 = !DILocalVariable(name: "arg", arg: 2, scope: !11413, file: !2876, line: 227, type: !106)
!11419 = !DILocation(line: 0, scope: !11413)
!11420 = !DILocation(line: 229, column: 2, scope: !11413)
!11421 = distinct !DISubprogram(name: "arch_system_halt", scope: !11422, file: !11422, line: 23, type: !5951, scopeLine: 24, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2872, retainedNodes: !11423)
!11422 = !DIFile(filename: "zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11423 = !{!11424}
!11424 = !DILocalVariable(name: "reason", arg: 1, scope: !11421, file: !11422, line: 23, type: !32)
!11425 = !DILocation(line: 0, scope: !11421)
!11426 = !DILocation(line: 55, column: 2, scope: !11427, inlinedAt: !11431)
!11427 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6121, file: !6121, line: 42, type: !8801, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2872, retainedNodes: !11428)
!11428 = !{!11429, !11430}
!11429 = !DILocalVariable(name: "key", scope: !11427, file: !6121, line: 44, type: !32)
!11430 = !DILocalVariable(name: "tmp", scope: !11427, file: !6121, line: 53, type: !32)
!11431 = distinct !DILocation(line: 31, column: 8, scope: !11421)
!11432 = !{i64 2847164}
!11433 = !DILocation(line: 0, scope: !11427, inlinedAt: !11431)
!11434 = !DILocation(line: 32, column: 2, scope: !11421)
!11435 = !DILocation(line: 32, column: 2, scope: !11436)
!11436 = distinct !DILexicalBlock(scope: !11437, file: !11422, line: 32, column: 2)
!11437 = distinct !DILexicalBlock(scope: !11421, file: !11422, line: 32, column: 2)
!11438 = distinct !{!11438, !11439, !11440}
!11439 = !DILocation(line: 32, column: 2, scope: !11437)
!11440 = !DILocation(line: 34, column: 2, scope: !11437)
!11441 = distinct !DISubprogram(name: "k_sys_fatal_error_handler", scope: !11422, file: !11422, line: 39, type: !11442, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2872, retainedNodes: !11444)
!11442 = !DISubroutineType(types: !11443)
!11443 = !{null, !32, !11242}
!11444 = !{!11445, !11446}
!11445 = !DILocalVariable(name: "reason", arg: 1, scope: !11441, file: !11422, line: 39, type: !32)
!11446 = !DILocalVariable(name: "esf", arg: 2, scope: !11441, file: !11422, line: 40, type: !11242)
!11447 = !DILocation(line: 0, scope: !11441)
!11448 = !DILocation(line: 45, column: 2, scope: !11449)
!11449 = distinct !DILexicalBlock(scope: !11450, file: !11422, line: 45, column: 2)
!11450 = distinct !DILexicalBlock(scope: !11451, file: !11422, line: 45, column: 2)
!11451 = distinct !DILexicalBlock(scope: !11452, file: !11422, line: 45, column: 2)
!11452 = distinct !DILexicalBlock(scope: !11441, file: !11422, line: 45, column: 2)
!11453 = !DILocation(line: 46, column: 2, scope: !11441)
!11454 = distinct !DISubprogram(name: "k_fatal_halt", scope: !11422, file: !11422, line: 81, type: !5951, scopeLine: 82, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2872, retainedNodes: !11455)
!11455 = !{!11456}
!11456 = !DILocalVariable(name: "reason", arg: 1, scope: !11454, file: !11422, line: 81, type: !32)
!11457 = !DILocation(line: 0, scope: !11454)
!11458 = !DILocation(line: 83, column: 2, scope: !11454)
!11459 = distinct !DISubprogram(name: "z_fatal_error", scope: !11422, file: !11422, line: 96, type: !11442, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2872, retainedNodes: !11460)
!11460 = !{!11461, !11462, !11463, !11464}
!11461 = !DILocalVariable(name: "reason", arg: 1, scope: !11459, file: !11422, line: 96, type: !32)
!11462 = !DILocalVariable(name: "esf", arg: 2, scope: !11459, file: !11422, line: 96, type: !11242)
!11463 = !DILocalVariable(name: "key", scope: !11459, file: !11422, line: 102, type: !32)
!11464 = !DILocalVariable(name: "thread", scope: !11459, file: !11422, line: 103, type: !11286)
!11465 = !DILocation(line: 0, scope: !11459)
!11466 = !DILocation(line: 55, column: 2, scope: !11427, inlinedAt: !11467)
!11467 = distinct !DILocation(line: 102, column: 21, scope: !11459)
!11468 = !DILocation(line: 0, scope: !11427, inlinedAt: !11467)
!11469 = !DILocation(line: 104, column: 4, scope: !11459)
!11470 = !DILocation(line: 109, column: 2, scope: !11471)
!11471 = distinct !DILexicalBlock(scope: !11472, file: !11422, line: 109, column: 2)
!11472 = distinct !DILexicalBlock(scope: !11473, file: !11422, line: 109, column: 2)
!11473 = distinct !DILexicalBlock(scope: !11474, file: !11422, line: 109, column: 2)
!11474 = distinct !DILexicalBlock(scope: !11459, file: !11422, line: 109, column: 2)
!11475 = !DILocation(line: 119, column: 11, scope: !11476)
!11476 = distinct !DILexicalBlock(scope: !11459, file: !11422, line: 119, column: 6)
!11477 = !DILocation(line: 119, column: 20, scope: !11476)
!11478 = !DILocalVariable(name: "esf", arg: 1, scope: !11479, file: !6996, line: 71, type: !11242)
!11479 = distinct !DISubprogram(name: "arch_is_in_nested_exception", scope: !6996, file: !6996, line: 71, type: !11480, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2872, retainedNodes: !11482)
!11480 = !DISubroutineType(types: !11481)
!11481 = !{!145, !11242}
!11482 = !{!11478}
!11483 = !DILocation(line: 0, scope: !11479, inlinedAt: !11484)
!11484 = distinct !DILocation(line: 119, column: 23, scope: !11476)
!11485 = !DILocation(line: 73, column: 21, scope: !11479, inlinedAt: !11484)
!11486 = !DILocation(line: 73, column: 26, scope: !11479, inlinedAt: !11484)
!11487 = !DILocation(line: 73, column: 9, scope: !11479, inlinedAt: !11484)
!11488 = !DILocation(line: 119, column: 6, scope: !11459)
!11489 = !DILocation(line: 120, column: 3, scope: !11490)
!11490 = distinct !DILexicalBlock(scope: !11491, file: !11422, line: 120, column: 3)
!11491 = distinct !DILexicalBlock(scope: !11492, file: !11422, line: 120, column: 3)
!11492 = distinct !DILexicalBlock(scope: !11493, file: !11422, line: 120, column: 3)
!11493 = distinct !DILexicalBlock(scope: !11494, file: !11422, line: 120, column: 3)
!11494 = distinct !DILexicalBlock(scope: !11476, file: !11422, line: 119, column: 57)
!11495 = !DILocation(line: 121, column: 2, scope: !11494)
!11496 = !DILocation(line: 124, column: 2, scope: !11497)
!11497 = distinct !DILexicalBlock(scope: !11498, file: !11422, line: 124, column: 2)
!11498 = distinct !DILexicalBlock(scope: !11499, file: !11422, line: 124, column: 2)
!11499 = distinct !DILexicalBlock(scope: !11500, file: !11422, line: 124, column: 2)
!11500 = distinct !DILexicalBlock(scope: !11459, file: !11422, line: 124, column: 2)
!11501 = !DILocation(line: 131, column: 2, scope: !11459)
!11502 = !DILocation(line: 0, scope: !11479, inlinedAt: !11503)
!11503 = distinct !DILocation(line: 163, column: 24, scope: !11504)
!11504 = distinct !DILexicalBlock(scope: !11505, file: !11422, line: 163, column: 7)
!11505 = distinct !DILexicalBlock(scope: !11506, file: !11422, line: 160, column: 9)
!11506 = distinct !DILexicalBlock(scope: !11459, file: !11422, line: 146, column: 6)
!11507 = !DILocation(line: 73, column: 21, scope: !11479, inlinedAt: !11503)
!11508 = !DILocation(line: 73, column: 26, scope: !11479, inlinedAt: !11503)
!11509 = !DILocation(line: 73, column: 9, scope: !11479, inlinedAt: !11503)
!11510 = !DILocation(line: 163, column: 7, scope: !11505)
!11511 = !DILocalVariable(name: "key", arg: 1, scope: !11512, file: !6121, line: 84, type: !32)
!11512 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6121, file: !6121, line: 84, type: !5951, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2872, retainedNodes: !11513)
!11513 = !{!11511}
!11514 = !DILocation(line: 0, scope: !11512, inlinedAt: !11515)
!11515 = distinct !DILocation(line: 171, column: 4, scope: !11516)
!11516 = distinct !DILexicalBlock(scope: !11504, file: !11422, line: 163, column: 58)
!11517 = !DILocation(line: 95, column: 2, scope: !11512, inlinedAt: !11515)
!11518 = !{i64 2847981}
!11519 = !DILocation(line: 172, column: 4, scope: !11516)
!11520 = !DILocation(line: 163, column: 21, scope: !11504)
!11521 = !DILocation(line: 178, column: 15, scope: !11522)
!11522 = distinct !DILexicalBlock(scope: !11523, file: !11422, line: 178, column: 8)
!11523 = distinct !DILexicalBlock(scope: !11504, file: !11422, line: 174, column: 10)
!11524 = !DILocation(line: 0, scope: !11512, inlinedAt: !11525)
!11525 = distinct !DILocation(line: 179, column: 5, scope: !11526)
!11526 = distinct !DILexicalBlock(scope: !11522, file: !11422, line: 178, column: 38)
!11527 = !DILocation(line: 0, scope: !11512, inlinedAt: !11528)
!11528 = distinct !DILocation(line: 186, column: 2, scope: !11459)
!11529 = !DILocation(line: 178, column: 8, scope: !11523)
!11530 = !DILocation(line: 189, column: 3, scope: !11531)
!11531 = distinct !DILexicalBlock(scope: !11532, file: !11422, line: 188, column: 41)
!11532 = distinct !DILexicalBlock(scope: !11459, file: !11422, line: 188, column: 6)
!11533 = !DILocation(line: 191, column: 1, scope: !11459)
!11534 = distinct !DISubprogram(name: "k_current_get", scope: !804, file: !804, line: 530, type: !11535, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2872, retainedNodes: !1949)
!11535 = !DISubroutineType(types: !11536)
!11536 = !{!11537}
!11537 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !716, line: 347, baseType: !11286)
!11538 = !DILocation(line: 535, column: 9, scope: !11534)
!11539 = !DILocation(line: 535, column: 2, scope: !11534)
!11540 = distinct !DISubprogram(name: "reason_to_str", scope: !11422, file: !11422, line: 62, type: !11541, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2872, retainedNodes: !11543)
!11541 = !DISubroutineType(types: !11542)
!11542 = !{!118, !32}
!11543 = !{!11544}
!11544 = !DILocalVariable(name: "reason", arg: 1, scope: !11540, file: !11422, line: 62, type: !32)
!11545 = !DILocation(line: 0, scope: !11540)
!11546 = !DILocation(line: 64, column: 2, scope: !11540)
!11547 = !DILocation(line: 0, scope: !11548)
!11548 = distinct !DILexicalBlock(scope: !11540, file: !11422, line: 64, column: 18)
!11549 = !DILocation(line: 78, column: 1, scope: !11540)
!11550 = distinct !DISubprogram(name: "thread_name_get", scope: !11422, file: !11422, line: 51, type: !11551, scopeLine: 52, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2872, retainedNodes: !11553)
!11551 = !DISubroutineType(types: !11552)
!11552 = !{!118, !11286}
!11553 = !{!11554, !11555}
!11554 = !DILocalVariable(name: "thread", arg: 1, scope: !11550, file: !11422, line: 51, type: !11286)
!11555 = !DILocalVariable(name: "thread_name", scope: !11550, file: !11422, line: 53, type: !118)
!11556 = !DILocation(line: 0, scope: !11550)
!11557 = !DILocation(line: 53, column: 36, scope: !11550)
!11558 = !DILocation(line: 53, column: 28, scope: !11550)
!11559 = !DILocation(line: 53, column: 47, scope: !11550)
!11560 = !DILocation(line: 55, column: 19, scope: !11561)
!11561 = distinct !DILexicalBlock(scope: !11550, file: !11422, line: 55, column: 6)
!11562 = !DILocation(line: 55, column: 28, scope: !11561)
!11563 = !DILocation(line: 55, column: 32, scope: !11561)
!11564 = !DILocation(line: 55, column: 47, scope: !11561)
!11565 = !DILocation(line: 55, column: 6, scope: !11550)
!11566 = !DILocation(line: 57, column: 2, scope: !11567)
!11567 = distinct !DILexicalBlock(scope: !11561, file: !11422, line: 55, column: 57)
!11568 = !DILocation(line: 59, column: 2, scope: !11550)
!11569 = distinct !DISubprogram(name: "k_thread_abort", scope: !4221, file: !4221, line: 188, type: !11570, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2872, retainedNodes: !11572)
!11570 = !DISubroutineType(types: !11571)
!11571 = !{null, !11537}
!11572 = !{!11573}
!11573 = !DILocalVariable(name: "thread", arg: 1, scope: !11569, file: !4221, line: 188, type: !11537)
!11574 = !DILocation(line: 0, scope: !11569)
!11575 = !DILocation(line: 197, column: 2, scope: !11576)
!11576 = distinct !DILexicalBlock(scope: !11569, file: !4221, line: 197, column: 2)
!11577 = !{i64 2151046307}
!11578 = !DILocation(line: 198, column: 2, scope: !11569)
!11579 = !DILocation(line: 199, column: 1, scope: !11569)
!11580 = distinct !DISubprogram(name: "z_current_get", scope: !4221, file: !4221, line: 173, type: !11535, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2872, retainedNodes: !1949)
!11581 = !DILocation(line: 180, column: 2, scope: !11582)
!11582 = distinct !DILexicalBlock(scope: !11580, file: !4221, line: 180, column: 2)
!11583 = !{i64 2151046239}
!11584 = !DILocation(line: 181, column: 9, scope: !11580)
!11585 = !DILocation(line: 181, column: 2, scope: !11580)
!11586 = distinct !DISubprogram(name: "z_early_memset", scope: !1754, file: !1754, line: 108, type: !11587, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1750, retainedNodes: !11589)
!11587 = !DISubroutineType(types: !11588)
!11588 = !{null, !106, !107, !185}
!11589 = !{!11590, !11591, !11592}
!11590 = !DILocalVariable(name: "dst", arg: 1, scope: !11586, file: !1754, line: 108, type: !106)
!11591 = !DILocalVariable(name: "c", arg: 2, scope: !11586, file: !1754, line: 108, type: !107)
!11592 = !DILocalVariable(name: "n", arg: 3, scope: !11586, file: !1754, line: 108, type: !185)
!11593 = !DILocation(line: 0, scope: !11586)
!11594 = !DILocation(line: 110, column: 9, scope: !11586)
!11595 = !DILocation(line: 111, column: 1, scope: !11586)
!11596 = distinct !DISubprogram(name: "z_early_memcpy", scope: !1754, file: !1754, line: 121, type: !11597, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1750, retainedNodes: !11599)
!11597 = !DISubroutineType(types: !11598)
!11598 = !{null, !106, !13, !185}
!11599 = !{!11600, !11601, !11602}
!11600 = !DILocalVariable(name: "dst", arg: 1, scope: !11596, file: !1754, line: 121, type: !106)
!11601 = !DILocalVariable(name: "src", arg: 2, scope: !11596, file: !1754, line: 121, type: !13)
!11602 = !DILocalVariable(name: "n", arg: 3, scope: !11596, file: !1754, line: 121, type: !185)
!11603 = !DILocation(line: 0, scope: !11596)
!11604 = !DILocation(line: 123, column: 9, scope: !11596)
!11605 = !DILocation(line: 124, column: 1, scope: !11596)
!11606 = distinct !DISubprogram(name: "z_bss_zero", scope: !1754, file: !1754, line: 132, type: !2909, scopeLine: 133, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1750, retainedNodes: !1949)
!11607 = !DILocation(line: 143, column: 2, scope: !11606)
!11608 = !DILocation(line: 168, column: 1, scope: !11606)
!11609 = distinct !DISubprogram(name: "z_init_cpu", scope: !1754, file: !1754, line: 372, type: !11610, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1750, retainedNodes: !11612)
!11610 = !DISubroutineType(types: !11611)
!11611 = !{null, !107}
!11612 = !{!11613}
!11613 = !DILocalVariable(name: "id", arg: 1, scope: !11609, file: !1754, line: 372, type: !107)
!11614 = !DILocation(line: 0, scope: !11609)
!11615 = !DILocation(line: 374, column: 2, scope: !11609)
!11616 = !DILocation(line: 375, column: 34, scope: !11609)
!11617 = !DILocation(line: 375, column: 19, scope: !11609)
!11618 = !DILocation(line: 375, column: 31, scope: !11609)
!11619 = !DILocation(line: 376, column: 24, scope: !11609)
!11620 = !DILocation(line: 376, column: 19, scope: !11609)
!11621 = !DILocation(line: 376, column: 22, scope: !11609)
!11622 = !DILocation(line: 378, column: 26, scope: !11609)
!11623 = !DILocation(line: 378, column: 4, scope: !11609)
!11624 = !DILocation(line: 378, column: 50, scope: !11609)
!11625 = !DILocation(line: 377, column: 19, scope: !11609)
!11626 = !DILocation(line: 377, column: 29, scope: !11609)
!11627 = !DILocation(line: 384, column: 1, scope: !11609)
!11628 = distinct !DISubprogram(name: "init_idle_thread", scope: !1754, file: !1754, line: 343, type: !11610, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1750, retainedNodes: !11629)
!11629 = !{!11630, !11631, !11632, !11635}
!11630 = !DILocalVariable(name: "i", arg: 1, scope: !11628, file: !1754, line: 343, type: !107)
!11631 = !DILocalVariable(name: "thread", scope: !11628, file: !1754, line: 345, type: !1846)
!11632 = !DILocalVariable(name: "stack", scope: !11628, file: !1754, line: 346, type: !11633)
!11633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11634, size: 32)
!11634 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !688, line: 44, baseType: !1958)
!11635 = !DILocalVariable(name: "tname", scope: !11628, file: !1754, line: 354, type: !193)
!11636 = !DILocation(line: 0, scope: !11628)
!11637 = !DILocation(line: 345, column: 29, scope: !11628)
!11638 = !DILocation(line: 346, column: 28, scope: !11628)
!11639 = !DILocation(line: 362, column: 37, scope: !11628)
!11640 = !DILocation(line: 362, column: 36, scope: !11628)
!11641 = !DILocation(line: 361, column: 2, scope: !11628)
!11642 = !DILocation(line: 365, column: 2, scope: !11628)
!11643 = !DILocation(line: 370, column: 1, scope: !11628)
!11644 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !706, file: !706, line: 331, type: !11645, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1750, retainedNodes: !11647)
!11645 = !DISubroutineType(types: !11646)
!11646 = !{!193, !11633}
!11647 = !{!11648}
!11648 = !DILocalVariable(name: "sym", arg: 1, scope: !11644, file: !706, line: 331, type: !11633)
!11649 = !DILocation(line: 0, scope: !11644)
!11650 = !DILocation(line: 333, column: 9, scope: !11644)
!11651 = !DILocation(line: 333, column: 2, scope: !11644)
!11652 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !11653, file: !11653, line: 155, type: !11654, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1750, retainedNodes: !11656)
!11653 = !DIFile(filename: "zephyr/kernel/include/ksched.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11654 = !DISubroutineType(types: !11655)
!11655 = !{null, !1846}
!11656 = !{!11657}
!11657 = !DILocalVariable(name: "thread", arg: 1, scope: !11652, file: !11653, line: 155, type: !1846)
!11658 = !DILocation(line: 0, scope: !11652)
!11659 = !DILocation(line: 157, column: 15, scope: !11652)
!11660 = !DILocation(line: 157, column: 28, scope: !11652)
!11661 = !DILocation(line: 158, column: 1, scope: !11652)
!11662 = distinct !DISubprogram(name: "z_cstart", scope: !1754, file: !1754, line: 501, type: !2909, scopeLine: 502, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1750, retainedNodes: !11663)
!11663 = !{!11664}
!11664 = !DILocalVariable(name: "dummy_thread", scope: !11662, file: !1754, line: 518, type: !1847)
!11665 = !DILocation(line: 507, column: 2, scope: !11662)
!11666 = !DILocation(line: 43, column: 14, scope: !11667, inlinedAt: !11671)
!11667 = distinct !DISubprogram(name: "z_arm_interrupt_stack_setup", scope: !11668, file: !11668, line: 40, type: !2909, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1750, retainedNodes: !11669)
!11668 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11669 = !{!11670}
!11670 = !DILocalVariable(name: "msp", scope: !11667, file: !11668, line: 42, type: !152)
!11671 = distinct !DILocation(line: 44, column: 2, scope: !11672, inlinedAt: !11674)
!11672 = distinct !DISubprogram(name: "arch_kernel_init", scope: !11673, file: !11673, line: 42, type: !2909, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1750, retainedNodes: !1949)
!11673 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/kernel_arch_func.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11674 = distinct !DILocation(line: 510, column: 2, scope: !11662)
!11675 = !DILocation(line: 43, column: 3, scope: !11667, inlinedAt: !11671)
!11676 = !DILocation(line: 43, column: 60, scope: !11667, inlinedAt: !11671)
!11677 = !DILocation(line: 0, scope: !11667, inlinedAt: !11671)
!11678 = !DILocalVariable(name: "topOfMainStack", arg: 1, scope: !11679, file: !6000, line: 1153, type: !152)
!11679 = distinct !DISubprogram(name: "__set_MSP", scope: !6000, file: !6000, line: 1153, type: !6097, scopeLine: 1154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1750, retainedNodes: !11680)
!11680 = !{!11678}
!11681 = !DILocation(line: 0, scope: !11679, inlinedAt: !11682)
!11682 = distinct !DILocation(line: 46, column: 2, scope: !11667, inlinedAt: !11671)
!11683 = !DILocation(line: 1155, column: 3, scope: !11679, inlinedAt: !11682)
!11684 = !{i64 7509923}
!11685 = !DILocation(line: 62, column: 11, scope: !11667, inlinedAt: !11671)
!11686 = !DILocation(line: 102, column: 2, scope: !11687, inlinedAt: !11688)
!11687 = distinct !DISubprogram(name: "z_arm_exc_setup", scope: !6996, file: !6996, line: 97, type: !2909, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1750, retainedNodes: !1949)
!11688 = distinct !DILocation(line: 45, column: 2, scope: !11672, inlinedAt: !11674)
!11689 = !DILocation(line: 108, column: 2, scope: !11687, inlinedAt: !11688)
!11690 = !DILocation(line: 112, column: 2, scope: !11687, inlinedAt: !11688)
!11691 = !DILocation(line: 113, column: 2, scope: !11687, inlinedAt: !11688)
!11692 = !DILocation(line: 114, column: 2, scope: !11687, inlinedAt: !11688)
!11693 = !DILocation(line: 116, column: 2, scope: !11687, inlinedAt: !11688)
!11694 = !DILocation(line: 123, column: 13, scope: !11687, inlinedAt: !11688)
!11695 = !DILocation(line: 46, column: 2, scope: !11672, inlinedAt: !11674)
!11696 = !DILocation(line: 47, column: 2, scope: !11672, inlinedAt: !11674)
!11697 = !DILocation(line: 174, column: 12, scope: !11698, inlinedAt: !11699)
!11698 = distinct !DISubprogram(name: "z_arm_clear_faults", scope: !6996, file: !6996, line: 169, type: !2909, scopeLine: 170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1750, retainedNodes: !1949)
!11699 = distinct !DILocation(line: 48, column: 2, scope: !11672, inlinedAt: !11674)
!11700 = !DILocation(line: 179, column: 12, scope: !11698, inlinedAt: !11699)
!11701 = !DILocation(line: 518, column: 2, scope: !11662)
!11702 = !DILocation(line: 518, column: 18, scope: !11662)
!11703 = !DILocation(line: 520, column: 2, scope: !11662)
!11704 = !DILocation(line: 523, column: 2, scope: !11662)
!11705 = !DILocation(line: 526, column: 2, scope: !11662)
!11706 = !DILocation(line: 527, column: 2, scope: !11662)
!11707 = !DILocation(line: 543, column: 24, scope: !11662)
!11708 = !DILocation(line: 543, column: 2, scope: !11662)
!11709 = !DILocation(line: 0, scope: !1980)
!11710 = !DILocation(line: 246, column: 15, scope: !1998)
!11711 = !DILocation(line: 246, column: 36, scope: !1997)
!11712 = !DILocation(line: 246, column: 2, scope: !1998)
!11713 = !DILocation(line: 247, column: 37, scope: !1996)
!11714 = !DILocation(line: 0, scope: !1996)
!11715 = !DILocation(line: 248, column: 19, scope: !1996)
!11716 = !DILocation(line: 248, column: 12, scope: !1996)
!11717 = !DILocation(line: 250, column: 11, scope: !11718)
!11718 = distinct !DILexicalBlock(scope: !1996, file: !1754, line: 250, column: 7)
!11719 = !DILocation(line: 250, column: 7, scope: !1996)
!11720 = !DILocation(line: 254, column: 11, scope: !11721)
!11721 = distinct !DILexicalBlock(scope: !11722, file: !1754, line: 254, column: 8)
!11722 = distinct !DILexicalBlock(scope: !11718, file: !1754, line: 250, column: 20)
!11723 = !DILocation(line: 254, column: 8, scope: !11722)
!11724 = !DILocation(line: 255, column: 9, scope: !11725)
!11725 = distinct !DILexicalBlock(scope: !11721, file: !1754, line: 254, column: 17)
!11726 = !DILocation(line: 258, column: 9, scope: !11725)
!11727 = !DILocation(line: 261, column: 28, scope: !11725)
!11728 = !DILocation(line: 261, column: 10, scope: !11725)
!11729 = !DILocation(line: 261, column: 17, scope: !11725)
!11730 = !DILocation(line: 261, column: 26, scope: !11725)
!11731 = !DILocation(line: 262, column: 4, scope: !11725)
!11732 = !DILocation(line: 263, column: 9, scope: !11722)
!11733 = !DILocation(line: 263, column: 16, scope: !11722)
!11734 = !DILocation(line: 263, column: 28, scope: !11722)
!11735 = !DILocation(line: 264, column: 3, scope: !11722)
!11736 = !DILocation(line: 246, column: 60, scope: !1997)
!11737 = distinct !{!11737, !11712, !11738}
!11738 = !DILocation(line: 265, column: 2, scope: !1998)
!11739 = !DILocation(line: 266, column: 1, scope: !1980)
!11740 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !1598, file: !1598, line: 1814, type: !6040, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1750, retainedNodes: !11741)
!11741 = !{!11742, !11743}
!11742 = !DILocalVariable(name: "IRQn", arg: 1, scope: !11740, file: !1598, line: 1814, type: !2342)
!11743 = !DILocalVariable(name: "priority", arg: 2, scope: !11740, file: !1598, line: 1814, type: !152)
!11744 = !DILocation(line: 0, scope: !11740)
!11745 = !DILocation(line: 1822, column: 48, scope: !11746)
!11746 = distinct !DILexicalBlock(scope: !11747, file: !1598, line: 1821, column: 3)
!11747 = distinct !DILexicalBlock(scope: !11740, file: !1598, line: 1816, column: 7)
!11748 = !DILocation(line: 1822, column: 32, scope: !11746)
!11749 = !DILocation(line: 1822, column: 40, scope: !11746)
!11750 = !DILocation(line: 1822, column: 5, scope: !11746)
!11751 = !DILocation(line: 1822, column: 46, scope: !11746)
!11752 = !DILocation(line: 1824, column: 1, scope: !11740)
!11753 = !DISubprogram(name: "z_arm_cpu_idle_init", scope: !11673, file: !11673, line: 32, type: !2909, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1949)
!11754 = distinct !DISubprogram(name: "z_dummy_thread_init", scope: !11755, file: !11755, line: 215, type: !11654, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1750, retainedNodes: !11756)
!11755 = !DIFile(filename: "zephyr/kernel/include/kswap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11756 = !{!11757}
!11757 = !DILocalVariable(name: "dummy_thread", arg: 1, scope: !11754, file: !11755, line: 215, type: !1846)
!11758 = !DILocation(line: 0, scope: !11754)
!11759 = !DILocation(line: 217, column: 21, scope: !11754)
!11760 = !DILocation(line: 217, column: 34, scope: !11754)
!11761 = !DILocation(line: 221, column: 21, scope: !11754)
!11762 = !DILocation(line: 221, column: 34, scope: !11754)
!11763 = !DILocation(line: 232, column: 16, scope: !11754)
!11764 = !DILocation(line: 232, column: 30, scope: !11754)
!11765 = !DILocation(line: 239, column: 24, scope: !11754)
!11766 = !DILocation(line: 240, column: 1, scope: !11754)
!11767 = distinct !DISubprogram(name: "prepare_multithreading", scope: !1754, file: !1754, line: 399, type: !11768, scopeLine: 400, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1750, retainedNodes: !11770)
!11768 = !DISubroutineType(types: !11769)
!11769 = !{!193}
!11770 = !{!11771}
!11771 = !DILocalVariable(name: "stack_ptr", scope: !11767, file: !1754, line: 401, type: !193)
!11772 = !DILocation(line: 404, column: 2, scope: !11767)
!11773 = !DILocation(line: 416, column: 24, scope: !11767)
!11774 = !DILocation(line: 418, column: 14, scope: !11767)
!11775 = !DILocation(line: 0, scope: !11767)
!11776 = !DILocation(line: 423, column: 2, scope: !11767)
!11777 = !DILocation(line: 424, column: 2, scope: !11767)
!11778 = !DILocation(line: 426, column: 2, scope: !11767)
!11779 = !DILocation(line: 428, column: 2, scope: !11767)
!11780 = distinct !DISubprogram(name: "switch_to_main_thread", scope: !1754, file: !1754, line: 432, type: !11781, scopeLine: 433, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1750, retainedNodes: !11783)
!11781 = !DISubroutineType(types: !11782)
!11782 = !{null, !193}
!11783 = !{!11784}
!11784 = !DILocalVariable(name: "stack_ptr", arg: 1, scope: !11780, file: !1754, line: 432, type: !193)
!11785 = !DILocation(line: 0, scope: !11780)
!11786 = !DILocation(line: 435, column: 2, scope: !11780)
!11787 = !DILocation(line: 445, column: 2, scope: !11780)
!11788 = distinct !DISubprogram(name: "bg_thread_main", scope: !1754, file: !1754, line: 277, type: !690, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1750, retainedNodes: !11789)
!11789 = !{!11790, !11791, !11792}
!11790 = !DILocalVariable(name: "unused1", arg: 1, scope: !11788, file: !1754, line: 277, type: !106)
!11791 = !DILocalVariable(name: "unused2", arg: 2, scope: !11788, file: !1754, line: 277, type: !106)
!11792 = !DILocalVariable(name: "unused3", arg: 3, scope: !11788, file: !1754, line: 277, type: !106)
!11793 = !DILocation(line: 0, scope: !11788)
!11794 = !DILocation(line: 291, column: 20, scope: !11788)
!11795 = !DILocation(line: 293, column: 2, scope: !11788)
!11796 = !DILocation(line: 297, column: 2, scope: !11788)
!11797 = !DILocation(line: 305, column: 2, scope: !11788)
!11798 = !DILocation(line: 307, column: 2, scope: !11788)
!11799 = !DILocation(line: 330, column: 8, scope: !11788)
!11800 = !DILocation(line: 333, column: 34, scope: !11788)
!11801 = !DILocation(line: 339, column: 1, scope: !11788)
!11802 = distinct !DISubprogram(name: "k_thread_foreach", scope: !2009, file: !2009, line: 45, type: !11803, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2110, retainedNodes: !11811)
!11803 = !DISubroutineType(types: !11804)
!11804 = !{null, !11805, !106}
!11805 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_user_cb_t", file: !804, line: 103, baseType: !11806)
!11806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11807, size: 32)
!11807 = !DISubroutineType(types: !11808)
!11808 = !{null, !11809, !106}
!11809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11810, size: 32)
!11810 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2014)
!11811 = !{!11812, !11813}
!11812 = !DILocalVariable(name: "user_cb", arg: 1, scope: !11802, file: !2009, line: 45, type: !11805)
!11813 = !DILocalVariable(name: "user_data", arg: 2, scope: !11802, file: !2009, line: 45, type: !106)
!11814 = !DILocation(line: 0, scope: !11802)
!11815 = !DILocation(line: 71, column: 1, scope: !11802)
!11816 = distinct !DISubprogram(name: "k_thread_foreach_unlocked", scope: !2009, file: !2009, line: 73, type: !11803, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2110, retainedNodes: !11817)
!11817 = !{!11818, !11819}
!11818 = !DILocalVariable(name: "user_cb", arg: 1, scope: !11816, file: !2009, line: 73, type: !11805)
!11819 = !DILocalVariable(name: "user_data", arg: 2, scope: !11816, file: !2009, line: 73, type: !106)
!11820 = !DILocation(line: 0, scope: !11816)
!11821 = !DILocation(line: 95, column: 1, scope: !11816)
!11822 = distinct !DISubprogram(name: "k_is_in_isr", scope: !2009, file: !2009, line: 97, type: !6997, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2110, retainedNodes: !1949)
!11823 = !DILocation(line: 1031, column: 3, scope: !11824, inlinedAt: !11827)
!11824 = distinct !DISubprogram(name: "__get_IPSR", scope: !6000, file: !6000, line: 1027, type: !6087, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2110, retainedNodes: !11825)
!11825 = !{!11826}
!11826 = !DILocalVariable(name: "result", scope: !11824, file: !6000, line: 1029, type: !152)
!11827 = distinct !DILocation(line: 48, column: 10, scope: !11828, inlinedAt: !11829)
!11828 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !6996, file: !6996, line: 46, type: !6997, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2110, retainedNodes: !1949)
!11829 = distinct !DILocation(line: 99, column: 9, scope: !11822)
!11830 = !{i64 7021767}
!11831 = !DILocation(line: 0, scope: !11824, inlinedAt: !11827)
!11832 = !DILocation(line: 48, column: 9, scope: !11828, inlinedAt: !11829)
!11833 = !DILocation(line: 99, column: 2, scope: !11822)
!11834 = distinct !DISubprogram(name: "z_thread_essential_set", scope: !2009, file: !2009, line: 106, type: !2909, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2110, retainedNodes: !1949)
!11835 = !DILocation(line: 108, column: 2, scope: !11834)
!11836 = !DILocation(line: 108, column: 17, scope: !11834)
!11837 = !DILocation(line: 108, column: 30, scope: !11834)
!11838 = !DILocation(line: 109, column: 1, scope: !11834)
!11839 = distinct !DISubprogram(name: "z_thread_essential_clear", scope: !2009, file: !2009, line: 116, type: !2909, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2110, retainedNodes: !1949)
!11840 = !DILocation(line: 118, column: 2, scope: !11839)
!11841 = !DILocation(line: 118, column: 17, scope: !11839)
!11842 = !DILocation(line: 118, column: 30, scope: !11839)
!11843 = !DILocation(line: 119, column: 1, scope: !11839)
!11844 = distinct !DISubprogram(name: "z_is_thread_essential", scope: !2009, file: !2009, line: 126, type: !6997, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2110, retainedNodes: !1949)
!11845 = !DILocation(line: 128, column: 10, scope: !11844)
!11846 = !DILocation(line: 128, column: 25, scope: !11844)
!11847 = !DILocation(line: 128, column: 38, scope: !11844)
!11848 = !DILocation(line: 128, column: 53, scope: !11844)
!11849 = !DILocation(line: 128, column: 2, scope: !11844)
!11850 = distinct !DISubprogram(name: "z_impl_k_thread_name_set", scope: !2009, file: !2009, line: 187, type: !11851, scopeLine: 188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2110, retainedNodes: !11853)
!11851 = !DISubroutineType(types: !11852)
!11852 = !{!107, !2013, !118}
!11853 = !{!11854, !11855}
!11854 = !DILocalVariable(name: "thread", arg: 1, scope: !11850, file: !2009, line: 187, type: !2013)
!11855 = !DILocalVariable(name: "value", arg: 2, scope: !11850, file: !2009, line: 187, type: !118)
!11856 = !DILocation(line: 0, scope: !11850)
!11857 = !DILocation(line: 190, column: 13, scope: !11858)
!11858 = distinct !DILexicalBlock(scope: !11850, file: !2009, line: 190, column: 6)
!11859 = !DILocation(line: 190, column: 6, scope: !11850)
!11860 = !DILocation(line: 194, column: 10, scope: !11850)
!11861 = !DILocation(line: 194, column: 2, scope: !11850)
!11862 = !DILocation(line: 195, column: 2, scope: !11850)
!11863 = !DILocation(line: 195, column: 47, scope: !11850)
!11864 = !DILocation(line: 199, column: 2, scope: !11850)
!11865 = distinct !DISubprogram(name: "k_thread_name_get", scope: !2009, file: !2009, line: 238, type: !11866, scopeLine: 239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2110, retainedNodes: !11868)
!11866 = !DISubroutineType(types: !11867)
!11867 = !{!118, !2013}
!11868 = !{!11869}
!11869 = !DILocalVariable(name: "thread", arg: 1, scope: !11865, file: !2009, line: 238, type: !2013)
!11870 = !DILocation(line: 0, scope: !11865)
!11871 = !DILocation(line: 241, column: 23, scope: !11865)
!11872 = !DILocation(line: 241, column: 2, scope: !11865)
!11873 = distinct !DISubprogram(name: "z_impl_k_thread_name_copy", scope: !2009, file: !2009, line: 248, type: !11874, scopeLine: 249, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2110, retainedNodes: !11876)
!11874 = !DISubroutineType(types: !11875)
!11875 = !{!107, !2012, !193, !185}
!11876 = !{!11877, !11878, !11879}
!11877 = !DILocalVariable(name: "thread", arg: 1, scope: !11873, file: !2009, line: 248, type: !2012)
!11878 = !DILocalVariable(name: "buf", arg: 2, scope: !11873, file: !2009, line: 248, type: !193)
!11879 = !DILocalVariable(name: "size", arg: 3, scope: !11873, file: !2009, line: 248, type: !185)
!11880 = !DILocation(line: 0, scope: !11873)
!11881 = !DILocation(line: 251, column: 15, scope: !11873)
!11882 = !DILocation(line: 251, column: 2, scope: !11873)
!11883 = !DILocation(line: 252, column: 2, scope: !11873)
!11884 = !DILocation(line: 0, scope: !2008)
!11885 = !DILocation(line: 281, column: 11, scope: !11886)
!11886 = distinct !DILexicalBlock(scope: !2008, file: !2009, line: 281, column: 6)
!11887 = !DILocation(line: 281, column: 20, scope: !11886)
!11888 = !DILocation(line: 275, column: 45, scope: !2008)
!11889 = !DILocation(line: 285, column: 10, scope: !2008)
!11890 = !DILocation(line: 0, scope: !2127)
!11891 = !DILocation(line: 293, column: 39, scope: !11892)
!11892 = distinct !DILexicalBlock(scope: !2127, file: !2009, line: 293, column: 2)
!11893 = !DILocation(line: 293, column: 2, scope: !2127)
!11894 = !DILocation(line: 273, column: 14, scope: !2008)
!11895 = !DILocation(line: 309, column: 2, scope: !2008)
!11896 = !DILocation(line: 309, column: 11, scope: !2008)
!11897 = !DILocation(line: 311, column: 2, scope: !2008)
!11898 = !DILocation(line: 293, column: 26, scope: !11892)
!11899 = !DILocation(line: 294, column: 9, scope: !11900)
!11900 = distinct !DILexicalBlock(scope: !11892, file: !2009, line: 293, column: 54)
!11901 = !DILocation(line: 295, column: 21, scope: !11902)
!11902 = distinct !DILexicalBlock(scope: !11900, file: !2009, line: 295, column: 7)
!11903 = !DILocation(line: 295, column: 28, scope: !11902)
!11904 = !DILocation(line: 295, column: 7, scope: !11900)
!11905 = !DILocation(line: 299, column: 25, scope: !11900)
!11906 = !DILocation(line: 299, column: 41, scope: !11900)
!11907 = !DILocation(line: 300, column: 7, scope: !11900)
!11908 = !DILocation(line: 300, column: 26, scope: !11900)
!11909 = !DILocation(line: 299, column: 10, scope: !11900)
!11910 = !DILocation(line: 299, column: 7, scope: !11900)
!11911 = !DILocation(line: 302, column: 16, scope: !11900)
!11912 = !DILocation(line: 304, column: 20, scope: !11913)
!11913 = distinct !DILexicalBlock(scope: !11900, file: !2009, line: 304, column: 7)
!11914 = !DILocation(line: 304, column: 7, scope: !11900)
!11915 = !DILocation(line: 305, column: 26, scope: !11916)
!11916 = distinct !DILexicalBlock(scope: !11913, file: !2009, line: 304, column: 26)
!11917 = !DILocation(line: 305, column: 42, scope: !11916)
!11918 = !DILocation(line: 305, column: 11, scope: !11916)
!11919 = !DILocation(line: 305, column: 8, scope: !11916)
!11920 = !DILocation(line: 306, column: 3, scope: !11916)
!11921 = !DILocation(line: 293, column: 50, scope: !11892)
!11922 = !DILocation(line: 312, column: 1, scope: !2008)
!11923 = distinct !DISubprogram(name: "copy_bytes", scope: !2009, file: !2009, line: 261, type: !11924, scopeLine: 262, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2110, retainedNodes: !11926)
!11924 = !DISubroutineType(types: !11925)
!11925 = !{!185, !193, !185, !118, !185}
!11926 = !{!11927, !11928, !11929, !11930, !11931}
!11927 = !DILocalVariable(name: "dest", arg: 1, scope: !11923, file: !2009, line: 261, type: !193)
!11928 = !DILocalVariable(name: "dest_size", arg: 2, scope: !11923, file: !2009, line: 261, type: !185)
!11929 = !DILocalVariable(name: "src", arg: 3, scope: !11923, file: !2009, line: 261, type: !118)
!11930 = !DILocalVariable(name: "src_size", arg: 4, scope: !11923, file: !2009, line: 261, type: !185)
!11931 = !DILocalVariable(name: "bytes_to_copy", scope: !11923, file: !2009, line: 263, type: !185)
!11932 = !DILocation(line: 0, scope: !11923)
!11933 = !DILocation(line: 265, column: 18, scope: !11923)
!11934 = !DILocation(line: 266, column: 2, scope: !11923)
!11935 = !DILocation(line: 268, column: 2, scope: !11923)
!11936 = distinct !DISubprogram(name: "z_impl_k_thread_start", scope: !2009, file: !2009, line: 383, type: !11937, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2110, retainedNodes: !11939)
!11937 = !DISubroutineType(types: !11938)
!11938 = !{null, !2013}
!11939 = !{!11940}
!11940 = !DILocalVariable(name: "thread", arg: 1, scope: !11936, file: !2009, line: 383, type: !2013)
!11941 = !DILocation(line: 0, scope: !11936)
!11942 = !DILocation(line: 387, column: 2, scope: !11936)
!11943 = !DILocation(line: 388, column: 1, scope: !11936)
!11944 = distinct !DISubprogram(name: "z_setup_new_thread", scope: !2009, file: !2009, line: 528, type: !11945, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2110, retainedNodes: !11952)
!11945 = !DISubroutineType(types: !11946)
!11946 = !{!193, !2013, !11947, !185, !687, !106, !106, !106, !107, !152, !118}
!11947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11948, size: 32)
!11948 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !688, line: 44, baseType: !11949)
!11949 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !706, line: 47, size: 8, elements: !11950)
!11950 = !{!11951}
!11951 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !11949, file: !706, line: 48, baseType: !120, size: 8)
!11952 = !{!11953, !11954, !11955, !11956, !11957, !11958, !11959, !11960, !11961, !11962, !11963}
!11953 = !DILocalVariable(name: "new_thread", arg: 1, scope: !11944, file: !2009, line: 528, type: !2013)
!11954 = !DILocalVariable(name: "stack", arg: 2, scope: !11944, file: !2009, line: 529, type: !11947)
!11955 = !DILocalVariable(name: "stack_size", arg: 3, scope: !11944, file: !2009, line: 529, type: !185)
!11956 = !DILocalVariable(name: "entry", arg: 4, scope: !11944, file: !2009, line: 530, type: !687)
!11957 = !DILocalVariable(name: "p1", arg: 5, scope: !11944, file: !2009, line: 531, type: !106)
!11958 = !DILocalVariable(name: "p2", arg: 6, scope: !11944, file: !2009, line: 531, type: !106)
!11959 = !DILocalVariable(name: "p3", arg: 7, scope: !11944, file: !2009, line: 531, type: !106)
!11960 = !DILocalVariable(name: "prio", arg: 8, scope: !11944, file: !2009, line: 532, type: !107)
!11961 = !DILocalVariable(name: "options", arg: 9, scope: !11944, file: !2009, line: 532, type: !152)
!11962 = !DILocalVariable(name: "name", arg: 10, scope: !11944, file: !2009, line: 532, type: !118)
!11963 = !DILocalVariable(name: "stack_ptr", scope: !11944, file: !2009, line: 534, type: !193)
!11964 = !DILocation(line: 0, scope: !11944)
!11965 = !DILocation(line: 536, column: 2, scope: !11966)
!11966 = distinct !DILexicalBlock(scope: !11967, file: !2009, line: 536, column: 2)
!11967 = distinct !DILexicalBlock(scope: !11968, file: !2009, line: 536, column: 2)
!11968 = distinct !DILexicalBlock(scope: !11944, file: !2009, line: 536, column: 2)
!11969 = !DILocation(line: 536, column: 2, scope: !11970)
!11970 = distinct !DILexicalBlock(scope: !11966, file: !2009, line: 536, column: 2)
!11971 = !DILocation(line: 550, column: 28, scope: !11944)
!11972 = !DILocation(line: 550, column: 2, scope: !11944)
!11973 = !DILocation(line: 553, column: 34, scope: !11944)
!11974 = !DILocation(line: 553, column: 2, scope: !11944)
!11975 = !DILocation(line: 554, column: 14, scope: !11944)
!11976 = !DILocation(line: 564, column: 2, scope: !11944)
!11977 = !DILocation(line: 567, column: 14, scope: !11944)
!11978 = !DILocation(line: 567, column: 24, scope: !11944)
!11979 = !DILocation(line: 594, column: 11, scope: !11980)
!11980 = distinct !DILexicalBlock(scope: !11944, file: !2009, line: 594, column: 6)
!11981 = !DILocation(line: 0, scope: !11980)
!11982 = !DILocation(line: 594, column: 6, scope: !11944)
!11983 = !DILocation(line: 595, column: 3, scope: !11984)
!11984 = distinct !DILexicalBlock(scope: !11980, file: !2009, line: 594, column: 20)
!11985 = !DILocation(line: 598, column: 3, scope: !11984)
!11986 = !DILocation(line: 598, column: 52, scope: !11984)
!11987 = !DILocation(line: 599, column: 2, scope: !11984)
!11988 = !DILocation(line: 600, column: 23, scope: !11989)
!11989 = distinct !DILexicalBlock(scope: !11980, file: !2009, line: 599, column: 9)
!11990 = !DILocation(line: 612, column: 7, scope: !11991)
!11991 = distinct !DILexicalBlock(scope: !11944, file: !2009, line: 612, column: 6)
!11992 = !DILocation(line: 612, column: 6, scope: !11944)
!11993 = !DILocation(line: 627, column: 40, scope: !11944)
!11994 = !DILocation(line: 637, column: 2, scope: !11944)
!11995 = !DILocation(line: 613, column: 15, scope: !11996)
!11996 = distinct !DILexicalBlock(scope: !11991, file: !2009, line: 612, column: 17)
!11997 = !DILocation(line: 613, column: 29, scope: !11996)
!11998 = !DILocation(line: 638, column: 1, scope: !11944)
!11999 = distinct !DISubprogram(name: "z_is_idle_thread_entry", scope: !11653, file: !11653, line: 78, type: !12000, scopeLine: 79, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2110, retainedNodes: !12002)
!12000 = !DISubroutineType(types: !12001)
!12001 = !{!145, !106}
!12002 = !{!12003}
!12003 = !DILocalVariable(name: "entry_point", arg: 1, scope: !11999, file: !11653, line: 78, type: !106)
!12004 = !DILocation(line: 0, scope: !11999)
!12005 = !DILocation(line: 80, column: 21, scope: !11999)
!12006 = !DILocation(line: 80, column: 2, scope: !11999)
!12007 = distinct !DISubprogram(name: "z_waitq_init", scope: !12008, file: !12008, line: 47, type: !12009, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2110, retainedNodes: !12011)
!12008 = !DIFile(filename: "zephyr/include/zephyr/wait_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12009 = !DISubroutineType(types: !12010)
!12010 = !{null, !2044}
!12011 = !{!12012}
!12012 = !DILocalVariable(name: "w", arg: 1, scope: !12007, file: !12008, line: 47, type: !2044)
!12013 = !DILocation(line: 0, scope: !12007)
!12014 = !DILocation(line: 49, column: 21, scope: !12007)
!12015 = !DILocation(line: 49, column: 2, scope: !12007)
!12016 = !DILocation(line: 50, column: 1, scope: !12007)
!12017 = distinct !DISubprogram(name: "z_init_thread_base", scope: !2009, file: !2009, line: 791, type: !12018, scopeLine: 793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2110, retainedNodes: !12021)
!12018 = !DISubroutineType(types: !12019)
!12019 = !{null, !12020, !107, !152, !32}
!12020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2017, size: 32)
!12021 = !{!12022, !12023, !12024, !12025}
!12022 = !DILocalVariable(name: "thread_base", arg: 1, scope: !12017, file: !2009, line: 791, type: !12020)
!12023 = !DILocalVariable(name: "priority", arg: 2, scope: !12017, file: !2009, line: 791, type: !107)
!12024 = !DILocalVariable(name: "initial_state", arg: 3, scope: !12017, file: !2009, line: 792, type: !152)
!12025 = !DILocalVariable(name: "options", arg: 4, scope: !12017, file: !2009, line: 792, type: !32)
!12026 = !DILocation(line: 0, scope: !12017)
!12027 = !DILocation(line: 795, column: 15, scope: !12017)
!12028 = !DILocation(line: 795, column: 25, scope: !12017)
!12029 = !DILocation(line: 796, column: 30, scope: !12017)
!12030 = !DILocation(line: 796, column: 15, scope: !12017)
!12031 = !DILocation(line: 796, column: 28, scope: !12017)
!12032 = !DILocation(line: 797, column: 30, scope: !12017)
!12033 = !DILocation(line: 797, column: 15, scope: !12017)
!12034 = !DILocation(line: 797, column: 28, scope: !12017)
!12035 = !DILocation(line: 799, column: 22, scope: !12017)
!12036 = !DILocation(line: 799, column: 15, scope: !12017)
!12037 = !DILocation(line: 799, column: 20, scope: !12017)
!12038 = !DILocation(line: 801, column: 15, scope: !12017)
!12039 = !DILocation(line: 801, column: 28, scope: !12017)
!12040 = !DILocation(line: 814, column: 2, scope: !12017)
!12041 = !DILocation(line: 815, column: 1, scope: !12017)
!12042 = distinct !DISubprogram(name: "setup_thread_stack", scope: !2009, file: !2009, line: 449, type: !12043, scopeLine: 451, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2110, retainedNodes: !12045)
!12043 = !DISubroutineType(types: !12044)
!12044 = !{!193, !2013, !11947, !185}
!12045 = !{!12046, !12047, !12048, !12049, !12050, !12051, !12052, !12053}
!12046 = !DILocalVariable(name: "new_thread", arg: 1, scope: !12042, file: !2009, line: 449, type: !2013)
!12047 = !DILocalVariable(name: "stack", arg: 2, scope: !12042, file: !2009, line: 450, type: !11947)
!12048 = !DILocalVariable(name: "stack_size", arg: 3, scope: !12042, file: !2009, line: 450, type: !185)
!12049 = !DILocalVariable(name: "stack_obj_size", scope: !12042, file: !2009, line: 452, type: !185)
!12050 = !DILocalVariable(name: "stack_buf_size", scope: !12042, file: !2009, line: 452, type: !185)
!12051 = !DILocalVariable(name: "stack_ptr", scope: !12042, file: !2009, line: 453, type: !193)
!12052 = !DILocalVariable(name: "stack_buf_start", scope: !12042, file: !2009, line: 453, type: !193)
!12053 = !DILocalVariable(name: "delta", scope: !12042, file: !2009, line: 454, type: !185)
!12054 = !DILocation(line: 0, scope: !12042)
!12055 = !DILocation(line: 465, column: 20, scope: !12056)
!12056 = distinct !DILexicalBlock(scope: !12042, file: !2009, line: 463, column: 2)
!12057 = !DILocation(line: 473, column: 28, scope: !12042)
!12058 = !DILocation(line: 520, column: 2, scope: !12042)
!12059 = distinct !DISubprogram(name: "z_init_thread_timeout", scope: !12060, file: !12060, line: 40, type: !12061, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2110, retainedNodes: !12063)
!12060 = !DIFile(filename: "zephyr/include/zephyr/timeout_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12061 = !DISubroutineType(types: !12062)
!12062 = !{null, !12020}
!12063 = !{!12064}
!12064 = !DILocalVariable(name: "thread_base", arg: 1, scope: !12059, file: !12060, line: 40, type: !12020)
!12065 = !DILocation(line: 0, scope: !12059)
!12066 = !DILocation(line: 42, column: 31, scope: !12059)
!12067 = !DILocation(line: 42, column: 2, scope: !12059)
!12068 = !DILocation(line: 43, column: 1, scope: !12059)
!12069 = distinct !DISubprogram(name: "z_init_timeout", scope: !12060, file: !12060, line: 25, type: !2070, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2110, retainedNodes: !12070)
!12070 = !{!12071}
!12071 = !DILocalVariable(name: "to", arg: 1, scope: !12069, file: !12060, line: 25, type: !2072)
!12072 = !DILocation(line: 0, scope: !12069)
!12073 = !DILocation(line: 27, column: 22, scope: !12069)
!12074 = !DILocation(line: 27, column: 2, scope: !12069)
!12075 = !DILocation(line: 28, column: 1, scope: !12069)
!12076 = distinct !DISubprogram(name: "sys_dnode_init", scope: !726, file: !726, line: 211, type: !12077, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2110, retainedNodes: !12079)
!12077 = !DISubroutineType(types: !12078)
!12078 = !{null, !2113}
!12079 = !{!12080}
!12080 = !DILocalVariable(name: "node", arg: 1, scope: !12076, file: !726, line: 211, type: !2113)
!12081 = !DILocation(line: 0, scope: !12076)
!12082 = !DILocation(line: 213, column: 8, scope: !12076)
!12083 = !DILocation(line: 213, column: 13, scope: !12076)
!12084 = !DILocation(line: 214, column: 8, scope: !12076)
!12085 = !DILocation(line: 214, column: 13, scope: !12076)
!12086 = !DILocation(line: 215, column: 1, scope: !12076)
!12087 = distinct !DISubprogram(name: "sys_dlist_init", scope: !726, file: !726, line: 197, type: !12088, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2110, retainedNodes: !12091)
!12088 = !DISubroutineType(types: !12089)
!12089 = !{null, !12090}
!12090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2049, size: 32)
!12091 = !{!12092}
!12092 = !DILocalVariable(name: "list", arg: 1, scope: !12087, file: !726, line: 197, type: !12090)
!12093 = !DILocation(line: 0, scope: !12087)
!12094 = !DILocation(line: 199, column: 8, scope: !12087)
!12095 = !DILocation(line: 199, column: 13, scope: !12087)
!12096 = !DILocation(line: 200, column: 8, scope: !12087)
!12097 = !DILocation(line: 200, column: 13, scope: !12087)
!12098 = !DILocation(line: 201, column: 1, scope: !12087)
!12099 = distinct !DISubprogram(name: "z_impl_k_thread_create", scope: !2009, file: !2009, line: 641, type: !12100, scopeLine: 646, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2110, retainedNodes: !12106)
!12100 = !DISubroutineType(types: !12101)
!12101 = !{!2012, !2013, !11947, !185, !687, !106, !106, !106, !107, !152, !12102}
!12102 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !693, line: 67, baseType: !12103)
!12103 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !693, line: 65, size: 64, elements: !12104)
!12104 = !{!12105}
!12105 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !12103, file: !693, line: 66, baseType: !692, size: 64)
!12106 = !{!12107, !12108, !12109, !12110, !12111, !12112, !12113, !12114, !12115, !12116}
!12107 = !DILocalVariable(name: "new_thread", arg: 1, scope: !12099, file: !2009, line: 641, type: !2013)
!12108 = !DILocalVariable(name: "stack", arg: 2, scope: !12099, file: !2009, line: 642, type: !11947)
!12109 = !DILocalVariable(name: "stack_size", arg: 3, scope: !12099, file: !2009, line: 643, type: !185)
!12110 = !DILocalVariable(name: "entry", arg: 4, scope: !12099, file: !2009, line: 643, type: !687)
!12111 = !DILocalVariable(name: "p1", arg: 5, scope: !12099, file: !2009, line: 644, type: !106)
!12112 = !DILocalVariable(name: "p2", arg: 6, scope: !12099, file: !2009, line: 644, type: !106)
!12113 = !DILocalVariable(name: "p3", arg: 7, scope: !12099, file: !2009, line: 644, type: !106)
!12114 = !DILocalVariable(name: "prio", arg: 8, scope: !12099, file: !2009, line: 645, type: !107)
!12115 = !DILocalVariable(name: "options", arg: 9, scope: !12099, file: !2009, line: 645, type: !152)
!12116 = !DILocalVariable(name: "delay", arg: 10, scope: !12099, file: !2009, line: 645, type: !12102)
!12117 = !DILocation(line: 0, scope: !12099)
!12118 = !DILocation(line: 1031, column: 3, scope: !11824, inlinedAt: !12119)
!12119 = distinct !DILocation(line: 48, column: 10, scope: !11828, inlinedAt: !12120)
!12120 = distinct !DILocation(line: 647, column: 2, scope: !12121)
!12121 = distinct !DILexicalBlock(scope: !12122, file: !2009, line: 647, column: 2)
!12122 = distinct !DILexicalBlock(scope: !12099, file: !2009, line: 647, column: 2)
!12123 = !DILocation(line: 0, scope: !11824, inlinedAt: !12119)
!12124 = !DILocation(line: 48, column: 9, scope: !11828, inlinedAt: !12120)
!12125 = !DILocation(line: 647, column: 2, scope: !12122)
!12126 = !DILocation(line: 647, column: 2, scope: !12127)
!12127 = distinct !DILexicalBlock(scope: !12121, file: !2009, line: 647, column: 2)
!12128 = !DILocation(line: 649, column: 2, scope: !12099)
!12129 = !DILocation(line: 652, column: 7, scope: !12130)
!12130 = distinct !DILexicalBlock(scope: !12099, file: !2009, line: 652, column: 6)
!12131 = !DILocation(line: 652, column: 6, scope: !12099)
!12132 = !DILocation(line: 653, column: 3, scope: !12133)
!12133 = distinct !DILexicalBlock(scope: !12130, file: !2009, line: 652, column: 39)
!12134 = !DILocation(line: 654, column: 2, scope: !12133)
!12135 = !DILocation(line: 656, column: 2, scope: !12099)
!12136 = distinct !DISubprogram(name: "schedule_new_thread", scope: !2009, file: !2009, line: 401, type: !12137, scopeLine: 402, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2110, retainedNodes: !12139)
!12137 = !DISubroutineType(types: !12138)
!12138 = !{null, !2013, !12102}
!12139 = !{!12140, !12141}
!12140 = !DILocalVariable(name: "thread", arg: 1, scope: !12136, file: !2009, line: 401, type: !2013)
!12141 = !DILocalVariable(name: "delay", arg: 2, scope: !12136, file: !2009, line: 401, type: !12102)
!12142 = !DILocation(line: 0, scope: !12136)
!12143 = !DILocation(line: 404, column: 6, scope: !12144)
!12144 = distinct !DILexicalBlock(scope: !12136, file: !2009, line: 404, column: 6)
!12145 = !DILocation(line: 404, column: 6, scope: !12136)
!12146 = !DILocation(line: 405, column: 3, scope: !12147)
!12147 = distinct !DILexicalBlock(scope: !12144, file: !2009, line: 404, column: 38)
!12148 = !DILocation(line: 406, column: 2, scope: !12147)
!12149 = !DILocation(line: 407, column: 3, scope: !12150)
!12150 = distinct !DILexicalBlock(scope: !12144, file: !2009, line: 406, column: 9)
!12151 = !DILocation(line: 413, column: 1, scope: !12136)
!12152 = distinct !DISubprogram(name: "k_thread_start", scope: !4221, file: !4221, line: 205, type: !12153, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2110, retainedNodes: !12155)
!12153 = !DISubroutineType(types: !12154)
!12154 = !{null, !2012}
!12155 = !{!12156}
!12156 = !DILocalVariable(name: "thread", arg: 1, scope: !12152, file: !4221, line: 205, type: !2012)
!12157 = !DILocation(line: 0, scope: !12152)
!12158 = !DILocation(line: 214, column: 2, scope: !12159)
!12159 = distinct !DILexicalBlock(scope: !12152, file: !4221, line: 214, column: 2)
!12160 = !{i64 2151071531}
!12161 = !DILocation(line: 215, column: 2, scope: !12152)
!12162 = !DILocation(line: 216, column: 1, scope: !12152)
!12163 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !12060, file: !12060, line: 47, type: !12137, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2110, retainedNodes: !12164)
!12164 = !{!12165, !12166}
!12165 = !DILocalVariable(name: "thread", arg: 1, scope: !12163, file: !12060, line: 47, type: !2013)
!12166 = !DILocalVariable(name: "ticks", arg: 2, scope: !12163, file: !12060, line: 47, type: !12102)
!12167 = !DILocation(line: 0, scope: !12163)
!12168 = !DILocation(line: 49, column: 30, scope: !12163)
!12169 = !DILocation(line: 49, column: 2, scope: !12163)
!12170 = !DILocation(line: 50, column: 1, scope: !12163)
!12171 = distinct !DISubprogram(name: "z_init_static_threads", scope: !2009, file: !2009, line: 748, type: !2909, scopeLine: 749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2110, retainedNodes: !12172)
!12172 = !{!12173, !12191}
!12173 = !DILocalVariable(name: "thread_data", scope: !12174, file: !2009, line: 750, type: !12175)
!12174 = distinct !DILexicalBlock(scope: !12171, file: !2009, line: 750, column: 2)
!12175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12176, size: 32)
!12176 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !804, line: 620, size: 384, elements: !12177)
!12177 = !{!12178, !12179, !12180, !12181, !12182, !12183, !12184, !12185, !12186, !12187, !12188, !12190}
!12178 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !12176, file: !804, line: 621, baseType: !2013, size: 32)
!12179 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !12176, file: !804, line: 622, baseType: !11947, size: 32, offset: 32)
!12180 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !12176, file: !804, line: 623, baseType: !32, size: 32, offset: 64)
!12181 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !12176, file: !804, line: 624, baseType: !687, size: 32, offset: 96)
!12182 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !12176, file: !804, line: 625, baseType: !106, size: 32, offset: 128)
!12183 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !12176, file: !804, line: 626, baseType: !106, size: 32, offset: 160)
!12184 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !12176, file: !804, line: 627, baseType: !106, size: 32, offset: 192)
!12185 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !12176, file: !804, line: 628, baseType: !107, size: 32, offset: 224)
!12186 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !12176, file: !804, line: 629, baseType: !152, size: 32, offset: 256)
!12187 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !12176, file: !804, line: 630, baseType: !1149, size: 32, offset: 288)
!12188 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !12176, file: !804, line: 631, baseType: !12189, size: 32, offset: 320)
!12189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2909, size: 32)
!12190 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !12176, file: !804, line: 632, baseType: !118, size: 32, offset: 352)
!12191 = !DILocalVariable(name: "thread_data", scope: !12192, file: !2009, line: 781, type: !12175)
!12192 = distinct !DILexicalBlock(scope: !12171, file: !2009, line: 781, column: 2)
!12193 = !DILocation(line: 0, scope: !12174)
!12194 = !DILocation(line: 750, column: 2, scope: !12195)
!12195 = distinct !DILexicalBlock(scope: !12196, file: !2009, line: 750, column: 2)
!12196 = distinct !DILexicalBlock(scope: !12197, file: !2009, line: 750, column: 2)
!12197 = distinct !DILexicalBlock(scope: !12174, file: !2009, line: 750, column: 2)
!12198 = !DILocation(line: 750, column: 2, scope: !12199)
!12199 = distinct !DILexicalBlock(scope: !12200, file: !2009, line: 750, column: 2)
!12200 = distinct !DILexicalBlock(scope: !12195, file: !2009, line: 750, column: 2)
!12201 = !DILocation(line: 750, column: 2, scope: !12196)
!12202 = !DILocation(line: 750, column: 2, scope: !12174)
!12203 = !DILocation(line: 780, column: 2, scope: !12171)
!12204 = !DILocation(line: 0, scope: !12192)
!12205 = !DILocation(line: 781, column: 2, scope: !12206)
!12206 = distinct !DILexicalBlock(scope: !12207, file: !2009, line: 781, column: 2)
!12207 = distinct !DILexicalBlock(scope: !12208, file: !2009, line: 781, column: 2)
!12208 = distinct !DILexicalBlock(scope: !12192, file: !2009, line: 781, column: 2)
!12209 = !DILocation(line: 752, column: 17, scope: !12210)
!12210 = distinct !DILexicalBlock(scope: !12197, file: !2009, line: 750, column: 38)
!12211 = !DILocation(line: 753, column: 17, scope: !12210)
!12212 = !DILocation(line: 754, column: 17, scope: !12210)
!12213 = !DILocation(line: 755, column: 17, scope: !12210)
!12214 = !DILocation(line: 756, column: 17, scope: !12210)
!12215 = !DILocation(line: 757, column: 17, scope: !12210)
!12216 = !DILocation(line: 758, column: 17, scope: !12210)
!12217 = !DILocation(line: 759, column: 17, scope: !12210)
!12218 = !DILocation(line: 760, column: 17, scope: !12210)
!12219 = !DILocation(line: 761, column: 17, scope: !12210)
!12220 = !DILocation(line: 751, column: 3, scope: !12210)
!12221 = !DILocation(line: 763, column: 16, scope: !12210)
!12222 = !DILocation(line: 763, column: 29, scope: !12210)
!12223 = !DILocation(line: 763, column: 39, scope: !12210)
!12224 = !DILocation(line: 750, column: 2, scope: !12197)
!12225 = !DILocation(line: 750, column: 2, scope: !12200)
!12226 = distinct !{!12226, !12202, !12227}
!12227 = !DILocation(line: 764, column: 2, scope: !12174)
!12228 = !DILocation(line: 781, column: 2, scope: !12229)
!12229 = distinct !DILexicalBlock(scope: !12230, file: !2009, line: 781, column: 2)
!12230 = distinct !DILexicalBlock(scope: !12206, file: !2009, line: 781, column: 2)
!12231 = !DILocation(line: 781, column: 2, scope: !12207)
!12232 = !DILocation(line: 781, column: 2, scope: !12192)
!12233 = !DILocation(line: 787, column: 2, scope: !12171)
!12234 = !DILocation(line: 788, column: 1, scope: !12171)
!12235 = !DILocation(line: 782, column: 20, scope: !12236)
!12236 = distinct !DILexicalBlock(scope: !12237, file: !2009, line: 782, column: 7)
!12237 = distinct !DILexicalBlock(scope: !12208, file: !2009, line: 781, column: 38)
!12238 = !DILocation(line: 782, column: 31, scope: !12236)
!12239 = !DILocation(line: 782, column: 7, scope: !12237)
!12240 = !DILocation(line: 783, column: 37, scope: !12241)
!12241 = distinct !DILexicalBlock(scope: !12236, file: !2009, line: 782, column: 51)
!12242 = !DILocation(line: 784, column: 10, scope: !12241)
!12243 = !DILocation(line: 783, column: 4, scope: !12241)
!12244 = !DILocation(line: 785, column: 3, scope: !12241)
!12245 = !DILocation(line: 781, column: 2, scope: !12208)
!12246 = !DILocation(line: 781, column: 2, scope: !12230)
!12247 = distinct !{!12247, !12232, !12248}
!12248 = !DILocation(line: 786, column: 2, scope: !12192)
!12249 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !8089, file: !8089, line: 403, type: !12250, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2110, retainedNodes: !12252)
!12250 = !DISubroutineType(types: !12251)
!12251 = !{!695, !695}
!12252 = !{!12253}
!12253 = !DILocalVariable(name: "t", arg: 1, scope: !12249, file: !8089, line: 403, type: !695)
!12254 = !DILocation(line: 0, scope: !12249)
!12255 = !DILocalVariable(name: "t", arg: 1, scope: !12256, file: !8089, line: 102, type: !695)
!12256 = distinct !DISubprogram(name: "z_tmcvt", scope: !8089, file: !8089, line: 102, type: !8098, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2110, retainedNodes: !12257)
!12257 = !{!12255, !12258, !12259, !12260, !12261, !12262, !12263, !12264, !12265, !12266, !12267}
!12258 = !DILocalVariable(name: "from_hz", arg: 2, scope: !12256, file: !8089, line: 102, type: !152)
!12259 = !DILocalVariable(name: "to_hz", arg: 3, scope: !12256, file: !8089, line: 103, type: !152)
!12260 = !DILocalVariable(name: "const_hz", arg: 4, scope: !12256, file: !8089, line: 103, type: !145)
!12261 = !DILocalVariable(name: "result32", arg: 5, scope: !12256, file: !8089, line: 104, type: !145)
!12262 = !DILocalVariable(name: "round_up", arg: 6, scope: !12256, file: !8089, line: 104, type: !145)
!12263 = !DILocalVariable(name: "round_off", arg: 7, scope: !12256, file: !8089, line: 105, type: !145)
!12264 = !DILocalVariable(name: "mul_ratio", scope: !12256, file: !8089, line: 107, type: !145)
!12265 = !DILocalVariable(name: "div_ratio", scope: !12256, file: !8089, line: 109, type: !145)
!12266 = !DILocalVariable(name: "off", scope: !12256, file: !8089, line: 116, type: !695)
!12267 = !DILocalVariable(name: "rdivisor", scope: !12268, file: !8089, line: 119, type: !152)
!12268 = distinct !DILexicalBlock(scope: !12269, file: !8089, line: 118, column: 18)
!12269 = distinct !DILexicalBlock(scope: !12256, file: !8089, line: 118, column: 6)
!12270 = !DILocation(line: 0, scope: !12256, inlinedAt: !12271)
!12271 = distinct !DILocation(line: 406, column: 9, scope: !12249)
!12272 = !DILocation(line: 145, column: 13, scope: !12273, inlinedAt: !12271)
!12273 = distinct !DILexicalBlock(scope: !12274, file: !8089, line: 144, column: 10)
!12274 = distinct !DILexicalBlock(scope: !12275, file: !8089, line: 142, column: 7)
!12275 = distinct !DILexicalBlock(scope: !12276, file: !8089, line: 141, column: 24)
!12276 = distinct !DILexicalBlock(scope: !12277, file: !8089, line: 141, column: 13)
!12277 = distinct !DILexicalBlock(scope: !12256, file: !8089, line: 134, column: 6)
!12278 = !DILocation(line: 406, column: 2, scope: !12249)
!12279 = distinct !DISubprogram(name: "k_thread_user_mode_enter", scope: !2009, file: !2009, line: 817, type: !4105, scopeLine: 819, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2110, retainedNodes: !12280)
!12280 = !{!12281, !12282, !12283, !12284}
!12281 = !DILocalVariable(name: "entry", arg: 1, scope: !12279, file: !2009, line: 817, type: !687)
!12282 = !DILocalVariable(name: "p1", arg: 2, scope: !12279, file: !2009, line: 818, type: !106)
!12283 = !DILocalVariable(name: "p2", arg: 3, scope: !12279, file: !2009, line: 818, type: !106)
!12284 = !DILocalVariable(name: "p3", arg: 4, scope: !12279, file: !2009, line: 818, type: !106)
!12285 = !DILocation(line: 0, scope: !12279)
!12286 = !DILocation(line: 822, column: 2, scope: !12279)
!12287 = !DILocation(line: 822, column: 17, scope: !12279)
!12288 = !DILocation(line: 822, column: 30, scope: !12279)
!12289 = !DILocation(line: 823, column: 2, scope: !12279)
!12290 = !DILocation(line: 845, column: 2, scope: !12279)
!12291 = distinct !DISubprogram(name: "z_spin_lock_valid", scope: !2009, file: !2009, line: 853, type: !12292, scopeLine: 854, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2110, retainedNodes: !12295)
!12292 = !DISubroutineType(types: !12293)
!12293 = !{!145, !12294}
!12294 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2102, size: 32)
!12295 = !{!12296, !12297}
!12296 = !DILocalVariable(name: "l", arg: 1, scope: !12291, file: !2009, line: 853, type: !12294)
!12297 = !DILocalVariable(name: "thread_cpu", scope: !12291, file: !2009, line: 855, type: !22)
!12298 = !DILocation(line: 0, scope: !12291)
!12299 = !DILocation(line: 855, column: 28, scope: !12291)
!12300 = !DILocation(line: 857, column: 17, scope: !12301)
!12301 = distinct !DILexicalBlock(scope: !12291, file: !2009, line: 857, column: 6)
!12302 = !DILocation(line: 857, column: 6, scope: !12291)
!12303 = !DILocation(line: 858, column: 19, scope: !12304)
!12304 = distinct !DILexicalBlock(scope: !12305, file: !2009, line: 858, column: 7)
!12305 = distinct !DILexicalBlock(scope: !12301, file: !2009, line: 857, column: 24)
!12306 = !DILocation(line: 858, column: 42, scope: !12304)
!12307 = !DILocation(line: 858, column: 28, scope: !12304)
!12308 = !DILocation(line: 858, column: 25, scope: !12304)
!12309 = !DILocation(line: 858, column: 7, scope: !12305)
!12310 = !DILocation(line: 862, column: 2, scope: !12291)
!12311 = !DILocation(line: 863, column: 1, scope: !12291)
!12312 = distinct !DISubprogram(name: "z_spin_unlock_valid", scope: !2009, file: !2009, line: 865, type: !12292, scopeLine: 866, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2110, retainedNodes: !12313)
!12313 = !{!12314}
!12314 = !DILocalVariable(name: "l", arg: 1, scope: !12312, file: !2009, line: 865, type: !12294)
!12315 = !DILocation(line: 0, scope: !12312)
!12316 = !DILocation(line: 867, column: 9, scope: !12317)
!12317 = distinct !DILexicalBlock(scope: !12312, file: !2009, line: 867, column: 6)
!12318 = !DILocation(line: 867, column: 38, scope: !12317)
!12319 = !DILocation(line: 867, column: 24, scope: !12317)
!12320 = !DILocation(line: 867, column: 54, scope: !12317)
!12321 = !DILocation(line: 867, column: 43, scope: !12317)
!12322 = !DILocation(line: 867, column: 41, scope: !12317)
!12323 = !DILocation(line: 867, column: 20, scope: !12317)
!12324 = !DILocation(line: 867, column: 6, scope: !12312)
!12325 = !DILocation(line: 870, column: 16, scope: !12312)
!12326 = !DILocation(line: 871, column: 2, scope: !12312)
!12327 = !DILocation(line: 872, column: 1, scope: !12312)
!12328 = distinct !DISubprogram(name: "z_spin_lock_set_owner", scope: !2009, file: !2009, line: 874, type: !12329, scopeLine: 875, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2110, retainedNodes: !12331)
!12329 = !DISubroutineType(types: !12330)
!12330 = !{null, !12294}
!12331 = !{!12332}
!12332 = !DILocalVariable(name: "l", arg: 1, scope: !12328, file: !2009, line: 874, type: !12294)
!12333 = !DILocation(line: 0, scope: !12328)
!12334 = !DILocation(line: 876, column: 32, scope: !12328)
!12335 = !DILocation(line: 876, column: 18, scope: !12328)
!12336 = !DILocation(line: 876, column: 48, scope: !12328)
!12337 = !DILocation(line: 876, column: 37, scope: !12328)
!12338 = !DILocation(line: 876, column: 35, scope: !12328)
!12339 = !DILocation(line: 876, column: 5, scope: !12328)
!12340 = !DILocation(line: 876, column: 16, scope: !12328)
!12341 = !DILocation(line: 877, column: 1, scope: !12328)
!12342 = distinct !DISubprogram(name: "z_impl_k_float_disable", scope: !2009, file: !2009, line: 888, type: !12343, scopeLine: 889, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2110, retainedNodes: !12345)
!12343 = !DISubroutineType(types: !12344)
!12344 = !{!107, !2013}
!12345 = !{!12346}
!12346 = !DILocalVariable(name: "thread", arg: 1, scope: !12342, file: !2009, line: 888, type: !2013)
!12347 = !DILocation(line: 0, scope: !12342)
!12348 = !DILocation(line: 893, column: 2, scope: !12342)
!12349 = distinct !DISubprogram(name: "z_impl_k_float_enable", scope: !2009, file: !2009, line: 897, type: !12350, scopeLine: 898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2110, retainedNodes: !12352)
!12350 = !DISubroutineType(types: !12351)
!12351 = !{!107, !2013, !32}
!12352 = !{!12353, !12354}
!12353 = !DILocalVariable(name: "thread", arg: 1, scope: !12349, file: !2009, line: 897, type: !2013)
!12354 = !DILocalVariable(name: "options", arg: 2, scope: !12349, file: !2009, line: 897, type: !32)
!12355 = !DILocation(line: 0, scope: !12349)
!12356 = !DILocation(line: 902, column: 2, scope: !12349)
!12357 = distinct !DISubprogram(name: "k_thread_runtime_stats_get", scope: !2009, file: !2009, line: 1072, type: !12358, scopeLine: 1074, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2110, retainedNodes: !12363)
!12358 = !DISubroutineType(types: !12359)
!12359 = !{!107, !2012, !12360}
!12360 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12361, size: 32)
!12361 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_runtime_stats_t", file: !716, line: 234, baseType: !12362)
!12362 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread_runtime_stats", file: !716, line: 192, elements: !1949)
!12363 = !{!12364, !12365}
!12364 = !DILocalVariable(name: "thread", arg: 1, scope: !12357, file: !2009, line: 1072, type: !2012)
!12365 = !DILocalVariable(name: "stats", arg: 2, scope: !12357, file: !2009, line: 1073, type: !12360)
!12366 = !DILocation(line: 0, scope: !12357)
!12367 = !DILocation(line: 1075, column: 14, scope: !12368)
!12368 = distinct !DILexicalBlock(scope: !12357, file: !2009, line: 1075, column: 6)
!12369 = !DILocation(line: 1075, column: 23, scope: !12368)
!12370 = !DILocation(line: 1086, column: 1, scope: !12357)
!12371 = distinct !DISubprogram(name: "k_thread_runtime_stats_all_get", scope: !2009, file: !2009, line: 1088, type: !12372, scopeLine: 1089, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2110, retainedNodes: !12374)
!12372 = !DISubroutineType(types: !12373)
!12373 = !{!107, !12360}
!12374 = !{!12375}
!12375 = !DILocalVariable(name: "stats", arg: 1, scope: !12371, file: !2009, line: 1088, type: !12360)
!12376 = !DILocation(line: 0, scope: !12371)
!12377 = !DILocation(line: 1094, column: 12, scope: !12378)
!12378 = distinct !DILexicalBlock(scope: !12371, file: !2009, line: 1094, column: 6)
!12379 = !DILocation(line: 1120, column: 1, scope: !12371)
!12380 = distinct !DISubprogram(name: "z_pm_save_idle_exit", scope: !12381, file: !12381, line: 20, type: !2909, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2890, retainedNodes: !1949)
!12381 = !DIFile(filename: "zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12382 = !DILocation(line: 30, column: 2, scope: !12380)
!12383 = !DILocation(line: 31, column: 1, scope: !12380)
!12384 = distinct !DISubprogram(name: "idle", scope: !12381, file: !12381, line: 33, type: !690, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2890, retainedNodes: !12385)
!12385 = !{!12386, !12387, !12388}
!12386 = !DILocalVariable(name: "unused1", arg: 1, scope: !12384, file: !12381, line: 33, type: !106)
!12387 = !DILocalVariable(name: "unused2", arg: 2, scope: !12384, file: !12381, line: 33, type: !106)
!12388 = !DILocalVariable(name: "unused3", arg: 3, scope: !12384, file: !12381, line: 33, type: !106)
!12389 = !DILocation(line: 0, scope: !12384)
!12390 = !DILocation(line: 39, column: 2, scope: !12391)
!12391 = distinct !DILexicalBlock(scope: !12392, file: !12381, line: 39, column: 2)
!12392 = distinct !DILexicalBlock(scope: !12384, file: !12381, line: 39, column: 2)
!12393 = !DILocation(line: 39, column: 2, scope: !12392)
!12394 = !DILocation(line: 39, column: 2, scope: !12395)
!12395 = distinct !DILexicalBlock(scope: !12391, file: !12381, line: 39, column: 2)
!12396 = !DILocation(line: 55, column: 2, scope: !12397, inlinedAt: !12401)
!12397 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6121, file: !6121, line: 42, type: !8801, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2890, retainedNodes: !12398)
!12398 = !{!12399, !12400}
!12399 = !DILocalVariable(name: "key", scope: !12397, file: !6121, line: 44, type: !32)
!12400 = !DILocalVariable(name: "tmp", scope: !12397, file: !6121, line: 53, type: !32)
!12401 = distinct !DILocation(line: 62, column: 10, scope: !12402)
!12402 = distinct !DILexicalBlock(scope: !12384, file: !12381, line: 41, column: 15)
!12403 = !{i64 2845506}
!12404 = !DILocation(line: 0, scope: !12397, inlinedAt: !12401)
!12405 = !DILocation(line: 86, column: 3, scope: !12402)
!12406 = !DILocation(line: 41, column: 2, scope: !12384)
!12407 = distinct !{!12407, !12406, !12408}
!12408 = !DILocation(line: 105, column: 2, scope: !12384)
!12409 = distinct !DISubprogram(name: "k_cpu_idle", scope: !804, file: !804, line: 5627, type: !2909, scopeLine: 5628, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2890, retainedNodes: !1949)
!12410 = !DILocation(line: 5629, column: 2, scope: !12409)
!12411 = !DILocation(line: 5630, column: 1, scope: !12409)
!12412 = !DISubprogram(name: "arch_cpu_idle", scope: !688, file: !688, line: 167, type: !2909, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1949)
!12413 = distinct !DISubprogram(name: "z_sched_prio_cmp", scope: !2236, file: !2236, line: 93, type: !12414, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !12416)
!12414 = !DISubroutineType(types: !12415)
!12415 = !{!1149, !2134, !2134}
!12416 = !{!12417, !12418, !12419, !12420}
!12417 = !DILocalVariable(name: "thread_1", arg: 1, scope: !12413, file: !2236, line: 93, type: !2134)
!12418 = !DILocalVariable(name: "thread_2", arg: 2, scope: !12413, file: !2236, line: 94, type: !2134)
!12419 = !DILocalVariable(name: "b1", scope: !12413, file: !2236, line: 97, type: !1149)
!12420 = !DILocalVariable(name: "b2", scope: !12413, file: !2236, line: 98, type: !1149)
!12421 = !DILocation(line: 0, scope: !12413)
!12422 = !DILocation(line: 97, column: 30, scope: !12413)
!12423 = !DILocation(line: 98, column: 30, scope: !12413)
!12424 = !DILocation(line: 100, column: 9, scope: !12425)
!12425 = distinct !DILexicalBlock(scope: !12413, file: !2236, line: 100, column: 6)
!12426 = !DILocation(line: 100, column: 6, scope: !12413)
!12427 = !DILocation(line: 125, column: 1, scope: !12413)
!12428 = distinct !DISubprogram(name: "z_reset_time_slice", scope: !2236, file: !2236, line: 428, type: !12429, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !12431)
!12429 = !DISubroutineType(types: !12430)
!12430 = !{null, !2134}
!12431 = !{!12432}
!12432 = !DILocalVariable(name: "curr", arg: 1, scope: !12428, file: !2236, line: 428, type: !2134)
!12433 = !DILocation(line: 0, scope: !12428)
!12434 = !DILocation(line: 434, column: 6, scope: !12435)
!12435 = distinct !DILexicalBlock(scope: !12428, file: !2236, line: 434, column: 6)
!12436 = !DILocation(line: 434, column: 23, scope: !12435)
!12437 = !DILocation(line: 434, column: 6, scope: !12428)
!12438 = !DILocation(line: 435, column: 50, scope: !12439)
!12439 = distinct !DILexicalBlock(scope: !12435, file: !2236, line: 434, column: 29)
!12440 = !DILocation(line: 435, column: 48, scope: !12439)
!12441 = !DILocation(line: 435, column: 29, scope: !12439)
!12442 = !DILocation(line: 436, column: 24, scope: !12439)
!12443 = !DILocation(line: 436, column: 3, scope: !12439)
!12444 = !DILocation(line: 437, column: 2, scope: !12439)
!12445 = !DILocation(line: 438, column: 1, scope: !12428)
!12446 = distinct !DISubprogram(name: "slice_time", scope: !2236, file: !2236, line: 407, type: !12447, scopeLine: 408, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !12449)
!12447 = !DISubroutineType(types: !12448)
!12448 = !{!107, !2134}
!12449 = !{!12450, !12451}
!12450 = !DILocalVariable(name: "curr", arg: 1, scope: !12446, file: !2236, line: 407, type: !2134)
!12451 = !DILocalVariable(name: "ret", scope: !12446, file: !2236, line: 409, type: !107)
!12452 = !DILocation(line: 0, scope: !12446)
!12453 = !DILocation(line: 409, column: 12, scope: !12446)
!12454 = !DILocation(line: 416, column: 2, scope: !12446)
!12455 = distinct !DISubprogram(name: "k_sched_time_slice_set", scope: !2236, file: !2236, line: 440, type: !12456, scopeLine: 441, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !12458)
!12456 = !DISubroutineType(types: !12457)
!12457 = !{null, !1149, !107}
!12458 = !{!12459, !12460, !12461, !12467}
!12459 = !DILocalVariable(name: "slice", arg: 1, scope: !12455, file: !2236, line: 440, type: !1149)
!12460 = !DILocalVariable(name: "prio", arg: 2, scope: !12455, file: !2236, line: 440, type: !107)
!12461 = !DILocalVariable(name: "__i", scope: !12462, file: !2236, line: 442, type: !12463)
!12462 = distinct !DILexicalBlock(scope: !12455, file: !2236, line: 442, column: 2)
!12463 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !818, line: 106, baseType: !12464)
!12464 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !818, line: 32, size: 32, elements: !12465)
!12465 = !{!12466}
!12466 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !12464, file: !818, line: 33, baseType: !107, size: 32)
!12467 = !DILocalVariable(name: "__key", scope: !12462, file: !2236, line: 442, type: !12463)
!12468 = !DILocation(line: 0, scope: !12455)
!12469 = !DILocation(line: 0, scope: !12462)
!12470 = !DILocalVariable(name: "l", arg: 1, scope: !12471, file: !818, line: 136, type: !12474)
!12471 = distinct !DISubprogram(name: "k_spin_lock", scope: !818, file: !818, line: 136, type: !12472, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !12475)
!12472 = !DISubroutineType(types: !12473)
!12473 = !{!12463, !12474}
!12474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2223, size: 32)
!12475 = !{!12470, !12476}
!12476 = !DILocalVariable(name: "k", scope: !12471, file: !818, line: 139, type: !12463)
!12477 = !DILocation(line: 0, scope: !12471, inlinedAt: !12478)
!12478 = distinct !DILocation(line: 442, column: 2, scope: !12462)
!12479 = !DILocation(line: 55, column: 2, scope: !12480, inlinedAt: !12484)
!12480 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6121, file: !6121, line: 42, type: !8801, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !12481)
!12481 = !{!12482, !12483}
!12482 = !DILocalVariable(name: "key", scope: !12480, file: !6121, line: 44, type: !32)
!12483 = !DILocalVariable(name: "tmp", scope: !12480, file: !6121, line: 53, type: !32)
!12484 = distinct !DILocation(line: 145, column: 10, scope: !12471, inlinedAt: !12478)
!12485 = !{i64 2889477}
!12486 = !DILocation(line: 0, scope: !12480, inlinedAt: !12484)
!12487 = !DILocation(line: 148, column: 2, scope: !12488, inlinedAt: !12478)
!12488 = distinct !DILexicalBlock(scope: !12489, file: !818, line: 148, column: 2)
!12489 = distinct !DILexicalBlock(scope: !12471, file: !818, line: 148, column: 2)
!12490 = !DILocation(line: 148, column: 2, scope: !12489, inlinedAt: !12478)
!12491 = !DILocation(line: 148, column: 2, scope: !12492, inlinedAt: !12478)
!12492 = distinct !DILexicalBlock(scope: !12488, file: !818, line: 148, column: 2)
!12493 = !DILocation(line: 160, column: 2, scope: !12471, inlinedAt: !12478)
!12494 = !DILocation(line: 443, column: 29, scope: !12495)
!12495 = distinct !DILexicalBlock(scope: !12496, file: !2236, line: 442, column: 26)
!12496 = distinct !DILexicalBlock(scope: !12462, file: !2236, line: 442, column: 2)
!12497 = !DILocation(line: 444, column: 17, scope: !12495)
!12498 = !DILocation(line: 445, column: 51, scope: !12499)
!12499 = distinct !DILexicalBlock(scope: !12495, file: !2236, line: 445, column: 7)
!12500 = !DILocation(line: 445, column: 7, scope: !12495)
!12501 = !DILocation(line: 0, scope: !12495)
!12502 = !DILocation(line: 451, column: 18, scope: !12495)
!12503 = !DILocation(line: 452, column: 3, scope: !12495)
!12504 = !DILocalVariable(name: "key", arg: 2, scope: !12505, file: !818, line: 190, type: !12463)
!12505 = distinct !DISubprogram(name: "k_spin_unlock", scope: !818, file: !818, line: 189, type: !12506, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !12508)
!12506 = !DISubroutineType(types: !12507)
!12507 = !{null, !12474, !12463}
!12508 = !{!12509, !12504}
!12509 = !DILocalVariable(name: "l", arg: 1, scope: !12505, file: !818, line: 189, type: !12474)
!12510 = !DILocation(line: 0, scope: !12505, inlinedAt: !12511)
!12511 = distinct !DILocation(line: 442, column: 2, scope: !12496)
!12512 = !DILocation(line: 194, column: 2, scope: !12513, inlinedAt: !12511)
!12513 = distinct !DILexicalBlock(scope: !12514, file: !818, line: 194, column: 2)
!12514 = distinct !DILexicalBlock(scope: !12505, file: !818, line: 194, column: 2)
!12515 = !DILocation(line: 194, column: 2, scope: !12514, inlinedAt: !12511)
!12516 = !DILocation(line: 194, column: 2, scope: !12517, inlinedAt: !12511)
!12517 = distinct !DILexicalBlock(scope: !12513, file: !818, line: 194, column: 2)
!12518 = !DILocalVariable(name: "key", arg: 1, scope: !12519, file: !6121, line: 84, type: !32)
!12519 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6121, file: !6121, line: 84, type: !5951, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !12520)
!12520 = !{!12518}
!12521 = !DILocation(line: 0, scope: !12519, inlinedAt: !12522)
!12522 = distinct !DILocation(line: 215, column: 2, scope: !12505, inlinedAt: !12511)
!12523 = !DILocation(line: 95, column: 2, scope: !12519, inlinedAt: !12522)
!12524 = !{i64 2890294}
!12525 = !DILocation(line: 454, column: 1, scope: !12455)
!12526 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil32", scope: !8089, file: !8089, line: 389, type: !8090, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !12527)
!12527 = !{!12528}
!12528 = !DILocalVariable(name: "t", arg: 1, scope: !12526, file: !8089, line: 389, type: !152)
!12529 = !DILocation(line: 0, scope: !12526)
!12530 = !DILocalVariable(name: "t", arg: 1, scope: !12531, file: !8089, line: 102, type: !695)
!12531 = distinct !DISubprogram(name: "z_tmcvt", scope: !8089, file: !8089, line: 102, type: !8098, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !12532)
!12532 = !{!12530, !12533, !12534, !12535, !12536, !12537, !12538, !12539, !12540, !12541, !12542}
!12533 = !DILocalVariable(name: "from_hz", arg: 2, scope: !12531, file: !8089, line: 102, type: !152)
!12534 = !DILocalVariable(name: "to_hz", arg: 3, scope: !12531, file: !8089, line: 103, type: !152)
!12535 = !DILocalVariable(name: "const_hz", arg: 4, scope: !12531, file: !8089, line: 103, type: !145)
!12536 = !DILocalVariable(name: "result32", arg: 5, scope: !12531, file: !8089, line: 104, type: !145)
!12537 = !DILocalVariable(name: "round_up", arg: 6, scope: !12531, file: !8089, line: 104, type: !145)
!12538 = !DILocalVariable(name: "round_off", arg: 7, scope: !12531, file: !8089, line: 105, type: !145)
!12539 = !DILocalVariable(name: "mul_ratio", scope: !12531, file: !8089, line: 107, type: !145)
!12540 = !DILocalVariable(name: "div_ratio", scope: !12531, file: !8089, line: 109, type: !145)
!12541 = !DILocalVariable(name: "off", scope: !12531, file: !8089, line: 116, type: !695)
!12542 = !DILocalVariable(name: "rdivisor", scope: !12543, file: !8089, line: 119, type: !152)
!12543 = distinct !DILexicalBlock(scope: !12544, file: !8089, line: 118, column: 18)
!12544 = distinct !DILexicalBlock(scope: !12531, file: !8089, line: 118, column: 6)
!12545 = !DILocation(line: 0, scope: !12531, inlinedAt: !12546)
!12546 = distinct !DILocation(line: 392, column: 9, scope: !12526)
!12547 = !DILocation(line: 143, column: 25, scope: !12548, inlinedAt: !12546)
!12548 = distinct !DILexicalBlock(scope: !12549, file: !8089, line: 142, column: 17)
!12549 = distinct !DILexicalBlock(scope: !12550, file: !8089, line: 142, column: 7)
!12550 = distinct !DILexicalBlock(scope: !12551, file: !8089, line: 141, column: 24)
!12551 = distinct !DILexicalBlock(scope: !12552, file: !8089, line: 141, column: 13)
!12552 = distinct !DILexicalBlock(scope: !12531, file: !8089, line: 134, column: 6)
!12553 = !DILocation(line: 392, column: 2, scope: !12526)
!12554 = distinct !DISubprogram(name: "z_time_slice", scope: !2236, file: !2236, line: 502, type: !11610, scopeLine: 503, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !12555)
!12555 = !{!12556, !12557}
!12556 = !DILocalVariable(name: "ticks", arg: 1, scope: !12554, file: !2236, line: 502, type: !107)
!12557 = !DILocalVariable(name: "key", scope: !12554, file: !2236, line: 511, type: !12463)
!12558 = !DILocation(line: 0, scope: !12554)
!12559 = !DILocation(line: 0, scope: !12471, inlinedAt: !12560)
!12560 = distinct !DILocation(line: 511, column: 25, scope: !12554)
!12561 = !DILocation(line: 55, column: 2, scope: !12480, inlinedAt: !12562)
!12562 = distinct !DILocation(line: 145, column: 10, scope: !12471, inlinedAt: !12560)
!12563 = !DILocation(line: 0, scope: !12480, inlinedAt: !12562)
!12564 = !DILocation(line: 148, column: 2, scope: !12488, inlinedAt: !12560)
!12565 = !DILocation(line: 148, column: 2, scope: !12489, inlinedAt: !12560)
!12566 = !DILocation(line: 148, column: 2, scope: !12492, inlinedAt: !12560)
!12567 = !DILocation(line: 160, column: 2, scope: !12471, inlinedAt: !12560)
!12568 = !DILocation(line: 514, column: 6, scope: !12569)
!12569 = distinct !DILexicalBlock(scope: !12554, file: !2236, line: 514, column: 6)
!12570 = !DILocation(line: 514, column: 25, scope: !12569)
!12571 = !DILocation(line: 514, column: 22, scope: !12569)
!12572 = !DILocation(line: 514, column: 6, scope: !12554)
!12573 = !DILocation(line: 515, column: 3, scope: !12574)
!12574 = distinct !DILexicalBlock(scope: !12569, file: !2236, line: 514, column: 35)
!12575 = !DILocation(line: 0, scope: !12505, inlinedAt: !12576)
!12576 = distinct !DILocation(line: 516, column: 3, scope: !12574)
!12577 = !DILocation(line: 194, column: 2, scope: !12513, inlinedAt: !12576)
!12578 = !DILocation(line: 194, column: 2, scope: !12514, inlinedAt: !12576)
!12579 = !DILocation(line: 194, column: 2, scope: !12517, inlinedAt: !12576)
!12580 = !DILocation(line: 0, scope: !12519, inlinedAt: !12581)
!12581 = distinct !DILocation(line: 215, column: 2, scope: !12505, inlinedAt: !12576)
!12582 = !DILocation(line: 95, column: 2, scope: !12519, inlinedAt: !12581)
!12583 = !DILocation(line: 517, column: 3, scope: !12574)
!12584 = !DILocation(line: 519, column: 18, scope: !12554)
!12585 = !DILocation(line: 522, column: 6, scope: !12586)
!12586 = distinct !DILexicalBlock(scope: !12554, file: !2236, line: 522, column: 6)
!12587 = !DILocation(line: 522, column: 27, scope: !12586)
!12588 = !DILocation(line: 522, column: 30, scope: !12586)
!12589 = !DILocation(line: 522, column: 6, scope: !12554)
!12590 = !DILocation(line: 523, column: 30, scope: !12591)
!12591 = distinct !DILexicalBlock(scope: !12592, file: !2236, line: 523, column: 7)
!12592 = distinct !DILexicalBlock(scope: !12586, file: !2236, line: 522, column: 51)
!12593 = !DILocation(line: 523, column: 13, scope: !12591)
!12594 = !DILocation(line: 523, column: 7, scope: !12592)
!12595 = !DILocation(line: 530, column: 10, scope: !12596)
!12596 = distinct !DILexicalBlock(scope: !12591, file: !2236, line: 523, column: 43)
!12597 = !DILocation(line: 531, column: 3, scope: !12596)
!12598 = !DILocation(line: 532, column: 30, scope: !12599)
!12599 = distinct !DILexicalBlock(scope: !12591, file: !2236, line: 531, column: 10)
!12600 = !DILocation(line: 535, column: 29, scope: !12601)
!12601 = distinct !DILexicalBlock(scope: !12586, file: !2236, line: 534, column: 9)
!12602 = !DILocation(line: 0, scope: !12505, inlinedAt: !12603)
!12603 = distinct !DILocation(line: 537, column: 2, scope: !12554)
!12604 = !DILocation(line: 194, column: 2, scope: !12513, inlinedAt: !12603)
!12605 = !DILocation(line: 194, column: 2, scope: !12514, inlinedAt: !12603)
!12606 = !DILocation(line: 194, column: 2, scope: !12517, inlinedAt: !12603)
!12607 = !DILocation(line: 0, scope: !12519, inlinedAt: !12608)
!12608 = distinct !DILocation(line: 215, column: 2, scope: !12505, inlinedAt: !12603)
!12609 = !DILocation(line: 95, column: 2, scope: !12519, inlinedAt: !12608)
!12610 = !DILocation(line: 538, column: 1, scope: !12554)
!12611 = distinct !DISubprogram(name: "sliceable", scope: !2236, file: !2236, line: 468, type: !12612, scopeLine: 469, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !12614)
!12612 = !DISubroutineType(types: !12613)
!12613 = !{!145, !2134}
!12614 = !{!12615, !12616}
!12615 = !DILocalVariable(name: "thread", arg: 1, scope: !12611, file: !2236, line: 468, type: !2134)
!12616 = !DILocalVariable(name: "ret", scope: !12611, file: !2236, line: 470, type: !145)
!12617 = !DILocation(line: 0, scope: !12611)
!12618 = !DILocation(line: 470, column: 13, scope: !12611)
!12619 = !DILocation(line: 471, column: 3, scope: !12611)
!12620 = !DILocation(line: 471, column: 7, scope: !12611)
!12621 = !DILocation(line: 472, column: 3, scope: !12611)
!12622 = !DILocation(line: 472, column: 37, scope: !12611)
!12623 = !DILocation(line: 472, column: 24, scope: !12611)
!12624 = !DILocation(line: 472, column: 43, scope: !12611)
!12625 = !DILocation(line: 472, column: 7, scope: !12611)
!12626 = !DILocation(line: 473, column: 3, scope: !12611)
!12627 = !DILocation(line: 473, column: 7, scope: !12611)
!12628 = !DILocation(line: 473, column: 6, scope: !12611)
!12629 = !DILocation(line: 479, column: 2, scope: !12611)
!12630 = distinct !DISubprogram(name: "slice_expired_locked", scope: !2236, file: !2236, line: 482, type: !12631, scopeLine: 483, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !12633)
!12631 = !DISubroutineType(types: !12632)
!12632 = !{!12463, !12463}
!12633 = !{!12634, !12635}
!12634 = !DILocalVariable(name: "sched_lock_key", arg: 1, scope: !12630, file: !2236, line: 482, type: !12463)
!12635 = !DILocalVariable(name: "curr", scope: !12630, file: !2236, line: 484, type: !2134)
!12636 = !DILocation(line: 0, scope: !12630)
!12637 = !DILocation(line: 484, column: 26, scope: !12630)
!12638 = !DILocation(line: 493, column: 7, scope: !12639)
!12639 = distinct !DILexicalBlock(scope: !12630, file: !2236, line: 493, column: 6)
!12640 = !DILocation(line: 493, column: 6, scope: !12630)
!12641 = !DILocation(line: 494, column: 3, scope: !12642)
!12642 = distinct !DILexicalBlock(scope: !12639, file: !2236, line: 493, column: 49)
!12643 = !DILocation(line: 495, column: 2, scope: !12642)
!12644 = !DILocation(line: 496, column: 2, scope: !12630)
!12645 = !DILocation(line: 499, column: 1, scope: !12630)
!12646 = distinct !DISubprogram(name: "z_is_thread_prevented_from_running", scope: !11653, file: !11653, line: 106, type: !12612, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !12647)
!12647 = !{!12648, !12649}
!12648 = !DILocalVariable(name: "thread", arg: 1, scope: !12646, file: !11653, line: 106, type: !2134)
!12649 = !DILocalVariable(name: "state", scope: !12646, file: !11653, line: 108, type: !195)
!12650 = !DILocation(line: 0, scope: !12646)
!12651 = !DILocation(line: 108, column: 31, scope: !12646)
!12652 = !DILocation(line: 110, column: 16, scope: !12646)
!12653 = !DILocation(line: 111, column: 41, scope: !12646)
!12654 = !DILocation(line: 110, column: 2, scope: !12646)
!12655 = distinct !DISubprogram(name: "move_thread_to_end_of_prio_q", scope: !2236, file: !2236, line: 393, type: !12429, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !12656)
!12656 = !{!12657}
!12657 = !DILocalVariable(name: "thread", arg: 1, scope: !12655, file: !2236, line: 393, type: !2134)
!12658 = !DILocation(line: 0, scope: !12655)
!12659 = !DILocation(line: 395, column: 6, scope: !12660)
!12660 = distinct !DILexicalBlock(scope: !12655, file: !2236, line: 395, column: 6)
!12661 = !DILocation(line: 395, column: 6, scope: !12655)
!12662 = !DILocalVariable(name: "thread", arg: 1, scope: !12663, file: !2236, line: 264, type: !2134)
!12663 = distinct !DISubprogram(name: "dequeue_thread", scope: !2236, file: !2236, line: 264, type: !12429, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !12664)
!12664 = !{!12662}
!12665 = !DILocation(line: 0, scope: !12663, inlinedAt: !12666)
!12666 = distinct !DILocation(line: 396, column: 3, scope: !12667)
!12667 = distinct !DILexicalBlock(scope: !12660, file: !2236, line: 395, column: 34)
!12668 = !DILocation(line: 266, column: 15, scope: !12663, inlinedAt: !12666)
!12669 = !DILocation(line: 266, column: 28, scope: !12663, inlinedAt: !12666)
!12670 = !DILocalVariable(name: "thread", arg: 1, scope: !12671, file: !2236, line: 232, type: !2134)
!12671 = distinct !DISubprogram(name: "runq_remove", scope: !2236, file: !2236, line: 232, type: !12429, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !12672)
!12672 = !{!12670}
!12673 = !DILocation(line: 0, scope: !12671, inlinedAt: !12674)
!12674 = distinct !DILocation(line: 268, column: 3, scope: !12675, inlinedAt: !12666)
!12675 = distinct !DILexicalBlock(scope: !12676, file: !2236, line: 267, column: 35)
!12676 = distinct !DILexicalBlock(scope: !12663, file: !2236, line: 267, column: 6)
!12677 = !DILocation(line: 234, column: 2, scope: !12671, inlinedAt: !12674)
!12678 = !DILocation(line: 397, column: 2, scope: !12667)
!12679 = !DILocalVariable(name: "thread", arg: 1, scope: !12680, file: !2236, line: 250, type: !2134)
!12680 = distinct !DISubprogram(name: "queue_thread", scope: !2236, file: !2236, line: 250, type: !12429, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !12681)
!12681 = !{!12679}
!12682 = !DILocation(line: 0, scope: !12680, inlinedAt: !12683)
!12683 = distinct !DILocation(line: 398, column: 2, scope: !12655)
!12684 = !DILocation(line: 252, column: 15, scope: !12680, inlinedAt: !12683)
!12685 = !DILocation(line: 252, column: 28, scope: !12680, inlinedAt: !12683)
!12686 = !DILocalVariable(name: "thread", arg: 1, scope: !12687, file: !2236, line: 227, type: !2134)
!12687 = distinct !DISubprogram(name: "runq_add", scope: !2236, file: !2236, line: 227, type: !12429, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !12688)
!12688 = !{!12686}
!12689 = !DILocation(line: 0, scope: !12687, inlinedAt: !12690)
!12690 = distinct !DILocation(line: 254, column: 3, scope: !12691, inlinedAt: !12683)
!12691 = distinct !DILexicalBlock(scope: !12692, file: !2236, line: 253, column: 35)
!12692 = distinct !DILexicalBlock(scope: !12680, file: !2236, line: 253, column: 6)
!12693 = !DILocalVariable(name: "pq", arg: 1, scope: !12694, file: !2236, line: 181, type: !12697)
!12694 = distinct !DISubprogram(name: "z_priq_dumb_add", scope: !2236, file: !2236, line: 181, type: !12695, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !12698)
!12695 = !DISubroutineType(types: !12696)
!12696 = !{null, !12697, !2134}
!12697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2170, size: 32)
!12698 = !{!12693, !12699, !12700}
!12699 = !DILocalVariable(name: "thread", arg: 2, scope: !12694, file: !2236, line: 182, type: !2134)
!12700 = !DILocalVariable(name: "t", scope: !12694, file: !2236, line: 184, type: !2134)
!12701 = !DILocation(line: 0, scope: !12694, inlinedAt: !12702)
!12702 = distinct !DILocation(line: 229, column: 2, scope: !12687, inlinedAt: !12690)
!12703 = !DILocation(line: 186, column: 2, scope: !12704, inlinedAt: !12702)
!12704 = distinct !DILexicalBlock(scope: !12705, file: !2236, line: 186, column: 2)
!12705 = distinct !DILexicalBlock(scope: !12694, file: !2236, line: 186, column: 2)
!12706 = !DILocation(line: 186, column: 2, scope: !12705, inlinedAt: !12702)
!12707 = !DILocation(line: 186, column: 2, scope: !12708, inlinedAt: !12702)
!12708 = distinct !DILexicalBlock(scope: !12704, file: !2236, line: 186, column: 2)
!12709 = !DILocation(line: 188, column: 2, scope: !12710, inlinedAt: !12702)
!12710 = distinct !DILexicalBlock(scope: !12694, file: !2236, line: 188, column: 2)
!12711 = !DILocation(line: 188, column: 2, scope: !12712, inlinedAt: !12702)
!12712 = distinct !DILexicalBlock(scope: !12710, file: !2236, line: 188, column: 2)
!12713 = !DILocation(line: 0, scope: !12710, inlinedAt: !12702)
!12714 = !DILocation(line: 189, column: 7, scope: !12715, inlinedAt: !12702)
!12715 = distinct !DILexicalBlock(scope: !12716, file: !2236, line: 189, column: 7)
!12716 = distinct !DILexicalBlock(scope: !12712, file: !2236, line: 188, column: 56)
!12717 = !DILocation(line: 189, column: 35, scope: !12715, inlinedAt: !12702)
!12718 = !DILocation(line: 189, column: 7, scope: !12716, inlinedAt: !12702)
!12719 = !DILocation(line: 191, column: 21, scope: !12720, inlinedAt: !12702)
!12720 = distinct !DILexicalBlock(scope: !12715, file: !2236, line: 189, column: 40)
!12721 = !DILocation(line: 190, column: 4, scope: !12720, inlinedAt: !12702)
!12722 = !DILocation(line: 192, column: 4, scope: !12720, inlinedAt: !12702)
!12723 = distinct !{!12723, !12709, !12724}
!12724 = !DILocation(line: 194, column: 2, scope: !12710, inlinedAt: !12702)
!12725 = !DILocation(line: 196, column: 37, scope: !12694, inlinedAt: !12702)
!12726 = !DILocation(line: 196, column: 2, scope: !12694, inlinedAt: !12702)
!12727 = !DILocation(line: 197, column: 1, scope: !12694, inlinedAt: !12702)
!12728 = !DILocation(line: 399, column: 25, scope: !12655)
!12729 = !DILocation(line: 399, column: 22, scope: !12655)
!12730 = !DILocation(line: 399, column: 2, scope: !12655)
!12731 = !DILocation(line: 400, column: 1, scope: !12655)
!12732 = distinct !DISubprogram(name: "z_is_thread_queued", scope: !11653, file: !11653, line: 136, type: !12612, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !12733)
!12733 = !{!12734}
!12734 = !DILocalVariable(name: "thread", arg: 1, scope: !12732, file: !11653, line: 136, type: !2134)
!12735 = !DILocation(line: 0, scope: !12732)
!12736 = !DILocation(line: 138, column: 9, scope: !12732)
!12737 = !DILocation(line: 138, column: 2, scope: !12732)
!12738 = distinct !DISubprogram(name: "z_priq_dumb_remove", scope: !2236, file: !2236, line: 1137, type: !12695, scopeLine: 1138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !12739)
!12739 = !{!12740, !12741}
!12740 = !DILocalVariable(name: "pq", arg: 1, scope: !12738, file: !2236, line: 1137, type: !12697)
!12741 = !DILocalVariable(name: "thread", arg: 2, scope: !12738, file: !2236, line: 1137, type: !2134)
!12742 = !DILocation(line: 0, scope: !12738)
!12743 = !DILocation(line: 1139, column: 2, scope: !12744)
!12744 = distinct !DILexicalBlock(scope: !12745, file: !2236, line: 1139, column: 2)
!12745 = distinct !DILexicalBlock(scope: !12738, file: !2236, line: 1139, column: 2)
!12746 = !DILocation(line: 1139, column: 2, scope: !12745)
!12747 = !DILocation(line: 1139, column: 2, scope: !12748)
!12748 = distinct !DILexicalBlock(scope: !12744, file: !2236, line: 1139, column: 2)
!12749 = !DILocation(line: 1141, column: 33, scope: !12738)
!12750 = !DILocation(line: 1141, column: 2, scope: !12738)
!12751 = !DILocation(line: 1142, column: 1, scope: !12738)
!12752 = distinct !DISubprogram(name: "z_is_idle_thread_object", scope: !11653, file: !11653, line: 83, type: !12612, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !12753)
!12753 = !{!12754}
!12754 = !DILocalVariable(name: "thread", arg: 1, scope: !12752, file: !11653, line: 83, type: !2134)
!12755 = !DILocation(line: 0, scope: !12752)
!12756 = !DILocation(line: 89, column: 16, scope: !12752)
!12757 = !DILocation(line: 89, column: 2, scope: !12752)
!12758 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !726, file: !726, line: 294, type: !12759, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !12761)
!12759 = !DISubroutineType(types: !12760)
!12760 = !{!2232, !12697}
!12761 = !{!12762}
!12762 = !DILocalVariable(name: "list", arg: 1, scope: !12758, file: !726, line: 294, type: !12697)
!12763 = !DILocation(line: 0, scope: !12758)
!12764 = !DILocation(line: 296, column: 9, scope: !12758)
!12765 = !DILocation(line: 296, column: 49, scope: !12758)
!12766 = !DILocation(line: 296, column: 2, scope: !12758)
!12767 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !726, file: !726, line: 443, type: !12768, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !12770)
!12768 = !DISubroutineType(types: !12769)
!12769 = !{null, !2232, !2232}
!12770 = !{!12771, !12772, !12773}
!12771 = !DILocalVariable(name: "successor", arg: 1, scope: !12767, file: !726, line: 443, type: !2232)
!12772 = !DILocalVariable(name: "node", arg: 2, scope: !12767, file: !726, line: 443, type: !2232)
!12773 = !DILocalVariable(name: "prev", scope: !12767, file: !726, line: 445, type: !12774)
!12774 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2232)
!12775 = !DILocation(line: 0, scope: !12767)
!12776 = !DILocation(line: 445, column: 39, scope: !12767)
!12777 = !DILocation(line: 447, column: 8, scope: !12767)
!12778 = !DILocation(line: 447, column: 13, scope: !12767)
!12779 = !DILocation(line: 448, column: 8, scope: !12767)
!12780 = !DILocation(line: 448, column: 13, scope: !12767)
!12781 = !DILocation(line: 449, column: 8, scope: !12767)
!12782 = !DILocation(line: 449, column: 13, scope: !12767)
!12783 = !DILocation(line: 450, column: 18, scope: !12767)
!12784 = !DILocation(line: 451, column: 1, scope: !12767)
!12785 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !726, file: !726, line: 341, type: !12786, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !12788)
!12786 = !DISubroutineType(types: !12787)
!12787 = !{!2232, !12697, !2232}
!12788 = !{!12789, !12790}
!12789 = !DILocalVariable(name: "list", arg: 1, scope: !12785, file: !726, line: 341, type: !12697)
!12790 = !DILocalVariable(name: "node", arg: 2, scope: !12785, file: !726, line: 342, type: !2232)
!12791 = !DILocation(line: 0, scope: !12785)
!12792 = !DILocation(line: 344, column: 15, scope: !12785)
!12793 = !DILocation(line: 344, column: 9, scope: !12785)
!12794 = !DILocation(line: 344, column: 26, scope: !12785)
!12795 = !DILocation(line: 344, column: 2, scope: !12785)
!12796 = distinct !DISubprogram(name: "sys_dlist_append", scope: !726, file: !726, line: 404, type: !12797, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !12799)
!12797 = !DISubroutineType(types: !12798)
!12798 = !{null, !12697, !2232}
!12799 = !{!12800, !12801, !12802}
!12800 = !DILocalVariable(name: "list", arg: 1, scope: !12796, file: !726, line: 404, type: !12697)
!12801 = !DILocalVariable(name: "node", arg: 2, scope: !12796, file: !726, line: 404, type: !2232)
!12802 = !DILocalVariable(name: "tail", scope: !12796, file: !726, line: 406, type: !12774)
!12803 = !DILocation(line: 0, scope: !12796)
!12804 = !DILocation(line: 406, column: 34, scope: !12796)
!12805 = !DILocation(line: 408, column: 8, scope: !12796)
!12806 = !DILocation(line: 408, column: 13, scope: !12796)
!12807 = !DILocation(line: 409, column: 8, scope: !12796)
!12808 = !DILocation(line: 409, column: 13, scope: !12796)
!12809 = !DILocation(line: 411, column: 8, scope: !12796)
!12810 = !DILocation(line: 411, column: 13, scope: !12796)
!12811 = !DILocation(line: 412, column: 13, scope: !12796)
!12812 = !DILocation(line: 413, column: 1, scope: !12796)
!12813 = distinct !DISubprogram(name: "update_cache", scope: !2236, file: !2236, line: 559, type: !11610, scopeLine: 560, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !12814)
!12814 = !{!12815, !12816}
!12815 = !DILocalVariable(name: "preempt_ok", arg: 1, scope: !12813, file: !2236, line: 559, type: !107)
!12816 = !DILocalVariable(name: "thread", scope: !12813, file: !2236, line: 562, type: !2134)
!12817 = !DILocation(line: 0, scope: !12813)
!12818 = !DILocation(line: 239, column: 9, scope: !12819, inlinedAt: !12822)
!12819 = distinct !DISubprogram(name: "runq_best", scope: !2236, file: !2236, line: 237, type: !12820, scopeLine: 238, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !1949)
!12820 = !DISubroutineType(types: !12821)
!12821 = !{!2134}
!12822 = distinct !DILocation(line: 314, column: 28, scope: !12823, inlinedAt: !12826)
!12823 = distinct !DISubprogram(name: "next_up", scope: !2236, file: !2236, line: 312, type: !12820, scopeLine: 313, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !12824)
!12824 = !{!12825}
!12825 = !DILocalVariable(name: "thread", scope: !12823, file: !2236, line: 314, type: !2134)
!12826 = distinct !DILocation(line: 562, column: 28, scope: !12813)
!12827 = !DILocation(line: 0, scope: !12823, inlinedAt: !12826)
!12828 = !DILocation(line: 340, column: 17, scope: !12823, inlinedAt: !12826)
!12829 = !DILocation(line: 340, column: 9, scope: !12823, inlinedAt: !12826)
!12830 = !DILocalVariable(name: "thread", arg: 1, scope: !12831, file: !2236, line: 127, type: !2134)
!12831 = distinct !DISubprogram(name: "should_preempt", scope: !2236, file: !2236, line: 127, type: !12832, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !12834)
!12832 = !DISubroutineType(types: !12833)
!12833 = !{!145, !2134, !107}
!12834 = !{!12830, !12835}
!12835 = !DILocalVariable(name: "preempt_ok", arg: 2, scope: !12831, file: !2236, line: 128, type: !107)
!12836 = !DILocation(line: 0, scope: !12831, inlinedAt: !12837)
!12837 = distinct !DILocation(line: 564, column: 6, scope: !12838)
!12838 = distinct !DILexicalBlock(scope: !12813, file: !2236, line: 564, column: 6)
!12839 = !DILocation(line: 133, column: 17, scope: !12840, inlinedAt: !12837)
!12840 = distinct !DILexicalBlock(scope: !12831, file: !2236, line: 133, column: 6)
!12841 = !DILocation(line: 0, scope: !12838)
!12842 = !DILocation(line: 133, column: 6, scope: !12831, inlinedAt: !12837)
!12843 = !DILocation(line: 137, column: 2, scope: !12844, inlinedAt: !12837)
!12844 = distinct !DILexicalBlock(scope: !12845, file: !2236, line: 137, column: 2)
!12845 = distinct !DILexicalBlock(scope: !12831, file: !2236, line: 137, column: 2)
!12846 = !DILocation(line: 137, column: 2, scope: !12845, inlinedAt: !12837)
!12847 = !DILocation(line: 137, column: 2, scope: !12848, inlinedAt: !12837)
!12848 = distinct !DILexicalBlock(scope: !12844, file: !2236, line: 137, column: 2)
!12849 = !DILocation(line: 140, column: 6, scope: !12850, inlinedAt: !12837)
!12850 = distinct !DILexicalBlock(scope: !12831, file: !2236, line: 140, column: 6)
!12851 = !DILocation(line: 140, column: 6, scope: !12831, inlinedAt: !12837)
!12852 = !DILocation(line: 150, column: 9, scope: !12853, inlinedAt: !12837)
!12853 = distinct !DILexicalBlock(scope: !12831, file: !2236, line: 149, column: 6)
!12854 = !DILocation(line: 149, column: 6, scope: !12831, inlinedAt: !12837)
!12855 = !DILocation(line: 157, column: 6, scope: !12856, inlinedAt: !12837)
!12856 = distinct !DILexicalBlock(scope: !12831, file: !2236, line: 157, column: 6)
!12857 = !DILocation(line: 564, column: 6, scope: !12813)
!12858 = !DILocation(line: 566, column: 14, scope: !12859)
!12859 = distinct !DILexicalBlock(scope: !12860, file: !2236, line: 566, column: 7)
!12860 = distinct !DILexicalBlock(scope: !12838, file: !2236, line: 564, column: 42)
!12861 = !DILocation(line: 566, column: 7, scope: !12860)
!12862 = !DILocation(line: 567, column: 4, scope: !12863)
!12863 = distinct !DILexicalBlock(scope: !12859, file: !2236, line: 566, column: 27)
!12864 = !DILocation(line: 568, column: 3, scope: !12863)
!12865 = !DILocation(line: 585, column: 1, scope: !12813)
!12866 = distinct !DISubprogram(name: "z_priq_dumb_best", scope: !2236, file: !2236, line: 1144, type: !12867, scopeLine: 1145, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !12869)
!12867 = !DISubroutineType(types: !12868)
!12868 = !{!2134, !12697}
!12869 = !{!12870, !12871, !12872}
!12870 = !DILocalVariable(name: "pq", arg: 1, scope: !12866, file: !2236, line: 1144, type: !12697)
!12871 = !DILocalVariable(name: "thread", scope: !12866, file: !2236, line: 1146, type: !2134)
!12872 = !DILocalVariable(name: "n", scope: !12866, file: !2236, line: 1147, type: !2232)
!12873 = !DILocation(line: 0, scope: !12866)
!12874 = !DILocation(line: 1147, column: 19, scope: !12866)
!12875 = !DILocation(line: 1152, column: 2, scope: !12866)
!12876 = distinct !DISubprogram(name: "z_is_thread_timeout_active", scope: !11653, file: !11653, line: 115, type: !12612, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !12877)
!12877 = !{!12878}
!12878 = !DILocalVariable(name: "thread", arg: 1, scope: !12876, file: !11653, line: 115, type: !2134)
!12879 = !DILocation(line: 0, scope: !12876)
!12880 = !DILocation(line: 117, column: 46, scope: !12876)
!12881 = !DILocation(line: 117, column: 10, scope: !12876)
!12882 = !DILocation(line: 117, column: 9, scope: !12876)
!12883 = !DILocation(line: 117, column: 2, scope: !12876)
!12884 = distinct !DISubprogram(name: "is_preempt", scope: !2236, file: !2236, line: 62, type: !12447, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !12885)
!12885 = !{!12886}
!12886 = !DILocalVariable(name: "thread", arg: 1, scope: !12884, file: !2236, line: 62, type: !2134)
!12887 = !DILocation(line: 0, scope: !12884)
!12888 = !DILocation(line: 65, column: 22, scope: !12884)
!12889 = !DILocation(line: 65, column: 30, scope: !12884)
!12890 = !DILocation(line: 65, column: 2, scope: !12884)
!12891 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !12060, file: !12060, line: 35, type: !12892, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !12896)
!12892 = !DISubroutineType(types: !12893)
!12893 = !{!145, !12894}
!12894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12895, size: 32)
!12895 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2185)
!12896 = !{!12897}
!12897 = !DILocalVariable(name: "to", arg: 1, scope: !12891, file: !12060, line: 35, type: !12894)
!12898 = !DILocation(line: 0, scope: !12891)
!12899 = !DILocation(line: 37, column: 35, scope: !12891)
!12900 = !DILocation(line: 37, column: 10, scope: !12891)
!12901 = !DILocation(line: 37, column: 9, scope: !12891)
!12902 = !DILocation(line: 37, column: 2, scope: !12891)
!12903 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !726, file: !726, line: 225, type: !12904, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !12908)
!12904 = !DISubroutineType(types: !12905)
!12905 = !{!145, !12906}
!12906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12907, size: 32)
!12907 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2144)
!12908 = !{!12909}
!12909 = !DILocalVariable(name: "node", arg: 1, scope: !12903, file: !726, line: 225, type: !12906)
!12910 = !DILocation(line: 0, scope: !12903)
!12911 = !DILocation(line: 227, column: 15, scope: !12903)
!12912 = !DILocation(line: 227, column: 20, scope: !12903)
!12913 = !DILocation(line: 227, column: 2, scope: !12903)
!12914 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !726, file: !726, line: 325, type: !12786, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !12915)
!12915 = !{!12916, !12917}
!12916 = !DILocalVariable(name: "list", arg: 1, scope: !12914, file: !726, line: 325, type: !12697)
!12917 = !DILocalVariable(name: "node", arg: 2, scope: !12914, file: !726, line: 326, type: !2232)
!12918 = !DILocation(line: 0, scope: !12914)
!12919 = !DILocation(line: 328, column: 24, scope: !12914)
!12920 = !DILocation(line: 328, column: 15, scope: !12914)
!12921 = !DILocation(line: 328, column: 9, scope: !12914)
!12922 = !DILocation(line: 328, column: 45, scope: !12914)
!12923 = !DILocation(line: 328, column: 2, scope: !12914)
!12924 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !726, file: !726, line: 266, type: !12925, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !12927)
!12925 = !DISubroutineType(types: !12926)
!12926 = !{!145, !12697}
!12927 = !{!12928}
!12928 = !DILocalVariable(name: "list", arg: 1, scope: !12924, file: !726, line: 266, type: !12697)
!12929 = !DILocation(line: 0, scope: !12924)
!12930 = !DILocation(line: 268, column: 15, scope: !12924)
!12931 = !DILocation(line: 268, column: 20, scope: !12924)
!12932 = !DILocation(line: 268, column: 2, scope: !12924)
!12933 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !726, file: !726, line: 496, type: !12934, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !12936)
!12934 = !DISubroutineType(types: !12935)
!12935 = !{null, !2232}
!12936 = !{!12937, !12938, !12939}
!12937 = !DILocalVariable(name: "node", arg: 1, scope: !12933, file: !726, line: 496, type: !2232)
!12938 = !DILocalVariable(name: "prev", scope: !12933, file: !726, line: 498, type: !12774)
!12939 = !DILocalVariable(name: "next", scope: !12933, file: !726, line: 499, type: !12774)
!12940 = !DILocation(line: 0, scope: !12933)
!12941 = !DILocation(line: 498, column: 34, scope: !12933)
!12942 = !DILocation(line: 499, column: 34, scope: !12933)
!12943 = !DILocation(line: 501, column: 8, scope: !12933)
!12944 = !DILocation(line: 501, column: 13, scope: !12933)
!12945 = !DILocation(line: 502, column: 8, scope: !12933)
!12946 = !DILocation(line: 502, column: 13, scope: !12933)
!12947 = !DILocation(line: 503, column: 2, scope: !12933)
!12948 = !DILocation(line: 504, column: 1, scope: !12933)
!12949 = distinct !DISubprogram(name: "sys_dnode_init", scope: !726, file: !726, line: 211, type: !12934, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !12950)
!12950 = !{!12951}
!12951 = !DILocalVariable(name: "node", arg: 1, scope: !12949, file: !726, line: 211, type: !2232)
!12952 = !DILocation(line: 0, scope: !12949)
!12953 = !DILocation(line: 213, column: 8, scope: !12949)
!12954 = !DILocation(line: 213, column: 13, scope: !12949)
!12955 = !DILocation(line: 214, column: 8, scope: !12949)
!12956 = !DILocation(line: 214, column: 13, scope: !12949)
!12957 = !DILocation(line: 215, column: 1, scope: !12949)
!12958 = distinct !DISubprogram(name: "z_is_thread_state_set", scope: !11653, file: !11653, line: 131, type: !12959, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !12961)
!12959 = !DISubroutineType(types: !12960)
!12960 = !{!145, !2134, !152}
!12961 = !{!12962, !12963}
!12962 = !DILocalVariable(name: "thread", arg: 1, scope: !12958, file: !11653, line: 131, type: !2134)
!12963 = !DILocalVariable(name: "state", arg: 2, scope: !12958, file: !11653, line: 131, type: !152)
!12964 = !DILocation(line: 0, scope: !12958)
!12965 = !DILocation(line: 133, column: 23, scope: !12958)
!12966 = !DILocation(line: 133, column: 10, scope: !12958)
!12967 = !DILocation(line: 133, column: 36, scope: !12958)
!12968 = !DILocation(line: 133, column: 45, scope: !12958)
!12969 = !DILocation(line: 133, column: 2, scope: !12958)
!12970 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !11653, file: !11653, line: 211, type: !12971, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !12973)
!12971 = !DISubroutineType(types: !12972)
!12972 = !{!145, !107, !107}
!12973 = !{!12974, !12975}
!12974 = !DILocalVariable(name: "prio", arg: 1, scope: !12970, file: !11653, line: 211, type: !107)
!12975 = !DILocalVariable(name: "test_prio", arg: 2, scope: !12970, file: !11653, line: 211, type: !107)
!12976 = !DILocation(line: 0, scope: !12970)
!12977 = !DILocation(line: 213, column: 9, scope: !12970)
!12978 = !DILocation(line: 213, column: 2, scope: !12970)
!12979 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !11653, file: !11653, line: 206, type: !12971, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !12980)
!12980 = !{!12981, !12982}
!12981 = !DILocalVariable(name: "prio1", arg: 1, scope: !12979, file: !11653, line: 206, type: !107)
!12982 = !DILocalVariable(name: "prio2", arg: 2, scope: !12979, file: !11653, line: 206, type: !107)
!12983 = !DILocation(line: 0, scope: !12979)
!12984 = !DILocation(line: 208, column: 15, scope: !12979)
!12985 = !DILocation(line: 208, column: 2, scope: !12979)
!12986 = distinct !DISubprogram(name: "z_ready_thread", scope: !2236, file: !2236, line: 635, type: !12429, scopeLine: 636, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !12987)
!12987 = !{!12988, !12989, !12991}
!12988 = !DILocalVariable(name: "thread", arg: 1, scope: !12986, file: !2236, line: 635, type: !2134)
!12989 = !DILocalVariable(name: "__i", scope: !12990, file: !2236, line: 637, type: !12463)
!12990 = distinct !DILexicalBlock(scope: !12986, file: !2236, line: 637, column: 2)
!12991 = !DILocalVariable(name: "__key", scope: !12990, file: !2236, line: 637, type: !12463)
!12992 = !DILocation(line: 0, scope: !12986)
!12993 = !DILocation(line: 0, scope: !12990)
!12994 = !DILocation(line: 0, scope: !12471, inlinedAt: !12995)
!12995 = distinct !DILocation(line: 637, column: 2, scope: !12990)
!12996 = !DILocation(line: 55, column: 2, scope: !12480, inlinedAt: !12997)
!12997 = distinct !DILocation(line: 145, column: 10, scope: !12471, inlinedAt: !12995)
!12998 = !DILocation(line: 0, scope: !12480, inlinedAt: !12997)
!12999 = !DILocation(line: 148, column: 2, scope: !12488, inlinedAt: !12995)
!13000 = !DILocation(line: 148, column: 2, scope: !12489, inlinedAt: !12995)
!13001 = !DILocation(line: 148, column: 2, scope: !12492, inlinedAt: !12995)
!13002 = !DILocation(line: 160, column: 2, scope: !12471, inlinedAt: !12995)
!13003 = !DILocation(line: 639, column: 4, scope: !13004)
!13004 = distinct !DILexicalBlock(scope: !13005, file: !2236, line: 638, column: 41)
!13005 = distinct !DILexicalBlock(scope: !13006, file: !2236, line: 638, column: 7)
!13006 = distinct !DILexicalBlock(scope: !13007, file: !2236, line: 637, column: 26)
!13007 = distinct !DILexicalBlock(scope: !12990, file: !2236, line: 637, column: 2)
!13008 = !DILocation(line: 0, scope: !12505, inlinedAt: !13009)
!13009 = distinct !DILocation(line: 637, column: 2, scope: !13007)
!13010 = !DILocation(line: 194, column: 2, scope: !12513, inlinedAt: !13009)
!13011 = !DILocation(line: 194, column: 2, scope: !12514, inlinedAt: !13009)
!13012 = !DILocation(line: 194, column: 2, scope: !12517, inlinedAt: !13009)
!13013 = !DILocation(line: 0, scope: !12519, inlinedAt: !13014)
!13014 = distinct !DILocation(line: 215, column: 2, scope: !12505, inlinedAt: !13009)
!13015 = !DILocation(line: 95, column: 2, scope: !12519, inlinedAt: !13014)
!13016 = !DILocation(line: 642, column: 1, scope: !12986)
!13017 = distinct !DISubprogram(name: "ready_thread", scope: !2236, file: !2236, line: 617, type: !12429, scopeLine: 618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !13018)
!13018 = !{!13019}
!13019 = !DILocalVariable(name: "thread", arg: 1, scope: !13017, file: !2236, line: 617, type: !2134)
!13020 = !DILocation(line: 0, scope: !13017)
!13021 = !DILocation(line: 626, column: 7, scope: !13022)
!13022 = distinct !DILexicalBlock(scope: !13017, file: !2236, line: 626, column: 6)
!13023 = !DILocation(line: 626, column: 34, scope: !13022)
!13024 = !DILocation(line: 626, column: 37, scope: !13022)
!13025 = !DILocation(line: 626, column: 6, scope: !13017)
!13026 = !DILocation(line: 0, scope: !12680, inlinedAt: !13027)
!13027 = distinct !DILocation(line: 629, column: 3, scope: !13028)
!13028 = distinct !DILexicalBlock(scope: !13022, file: !2236, line: 626, column: 64)
!13029 = !DILocation(line: 252, column: 15, scope: !12680, inlinedAt: !13027)
!13030 = !DILocation(line: 252, column: 28, scope: !12680, inlinedAt: !13027)
!13031 = !DILocation(line: 0, scope: !12687, inlinedAt: !13032)
!13032 = distinct !DILocation(line: 254, column: 3, scope: !12691, inlinedAt: !13027)
!13033 = !DILocation(line: 0, scope: !12694, inlinedAt: !13034)
!13034 = distinct !DILocation(line: 229, column: 2, scope: !12687, inlinedAt: !13032)
!13035 = !DILocation(line: 186, column: 2, scope: !12704, inlinedAt: !13034)
!13036 = !DILocation(line: 186, column: 2, scope: !12705, inlinedAt: !13034)
!13037 = !DILocation(line: 186, column: 2, scope: !12708, inlinedAt: !13034)
!13038 = !DILocation(line: 188, column: 2, scope: !12710, inlinedAt: !13034)
!13039 = !DILocation(line: 188, column: 2, scope: !12712, inlinedAt: !13034)
!13040 = !DILocation(line: 0, scope: !12710, inlinedAt: !13034)
!13041 = !DILocation(line: 189, column: 7, scope: !12715, inlinedAt: !13034)
!13042 = !DILocation(line: 189, column: 35, scope: !12715, inlinedAt: !13034)
!13043 = !DILocation(line: 189, column: 7, scope: !12716, inlinedAt: !13034)
!13044 = !DILocation(line: 191, column: 21, scope: !12720, inlinedAt: !13034)
!13045 = !DILocation(line: 190, column: 4, scope: !12720, inlinedAt: !13034)
!13046 = !DILocation(line: 192, column: 4, scope: !12720, inlinedAt: !13034)
!13047 = distinct !{!13047, !13038, !13048}
!13048 = !DILocation(line: 194, column: 2, scope: !12710, inlinedAt: !13034)
!13049 = !DILocation(line: 196, column: 37, scope: !12694, inlinedAt: !13034)
!13050 = !DILocation(line: 196, column: 2, scope: !12694, inlinedAt: !13034)
!13051 = !DILocation(line: 197, column: 1, scope: !12694, inlinedAt: !13034)
!13052 = !DILocation(line: 630, column: 3, scope: !13028)
!13053 = !DILocation(line: 632, column: 2, scope: !13028)
!13054 = !DILocation(line: 633, column: 1, scope: !13017)
!13055 = distinct !DISubprogram(name: "z_is_thread_ready", scope: !11653, file: !11653, line: 120, type: !12612, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !13056)
!13056 = !{!13057}
!13057 = !DILocalVariable(name: "thread", arg: 1, scope: !13055, file: !11653, line: 120, type: !2134)
!13058 = !DILocation(line: 0, scope: !13055)
!13059 = !DILocation(line: 122, column: 12, scope: !13055)
!13060 = !DILocation(line: 122, column: 62, scope: !13055)
!13061 = !DILocation(line: 123, column: 4, scope: !13055)
!13062 = !DILocation(line: 122, column: 2, scope: !13055)
!13063 = distinct !DISubprogram(name: "z_move_thread_to_end_of_prio_q", scope: !2236, file: !2236, line: 644, type: !12429, scopeLine: 645, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !13064)
!13064 = !{!13065, !13066, !13068}
!13065 = !DILocalVariable(name: "thread", arg: 1, scope: !13063, file: !2236, line: 644, type: !2134)
!13066 = !DILocalVariable(name: "__i", scope: !13067, file: !2236, line: 646, type: !12463)
!13067 = distinct !DILexicalBlock(scope: !13063, file: !2236, line: 646, column: 2)
!13068 = !DILocalVariable(name: "__key", scope: !13067, file: !2236, line: 646, type: !12463)
!13069 = !DILocation(line: 0, scope: !13063)
!13070 = !DILocation(line: 0, scope: !13067)
!13071 = !DILocation(line: 0, scope: !12471, inlinedAt: !13072)
!13072 = distinct !DILocation(line: 646, column: 2, scope: !13067)
!13073 = !DILocation(line: 55, column: 2, scope: !12480, inlinedAt: !13074)
!13074 = distinct !DILocation(line: 145, column: 10, scope: !12471, inlinedAt: !13072)
!13075 = !DILocation(line: 0, scope: !12480, inlinedAt: !13074)
!13076 = !DILocation(line: 148, column: 2, scope: !12488, inlinedAt: !13072)
!13077 = !DILocation(line: 148, column: 2, scope: !12489, inlinedAt: !13072)
!13078 = !DILocation(line: 148, column: 2, scope: !12492, inlinedAt: !13072)
!13079 = !DILocation(line: 160, column: 2, scope: !12471, inlinedAt: !13072)
!13080 = !DILocation(line: 647, column: 3, scope: !13081)
!13081 = distinct !DILexicalBlock(scope: !13082, file: !2236, line: 646, column: 26)
!13082 = distinct !DILexicalBlock(scope: !13067, file: !2236, line: 646, column: 2)
!13083 = !DILocation(line: 0, scope: !12505, inlinedAt: !13084)
!13084 = distinct !DILocation(line: 646, column: 2, scope: !13082)
!13085 = !DILocation(line: 194, column: 2, scope: !12513, inlinedAt: !13084)
!13086 = !DILocation(line: 194, column: 2, scope: !12514, inlinedAt: !13084)
!13087 = !DILocation(line: 194, column: 2, scope: !12517, inlinedAt: !13084)
!13088 = !DILocation(line: 0, scope: !12519, inlinedAt: !13089)
!13089 = distinct !DILocation(line: 215, column: 2, scope: !12505, inlinedAt: !13084)
!13090 = !DILocation(line: 95, column: 2, scope: !12519, inlinedAt: !13089)
!13091 = !DILocation(line: 649, column: 1, scope: !13063)
!13092 = distinct !DISubprogram(name: "z_sched_start", scope: !2236, file: !2236, line: 651, type: !12429, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !13093)
!13093 = !{!13094, !13095}
!13094 = !DILocalVariable(name: "thread", arg: 1, scope: !13092, file: !2236, line: 651, type: !2134)
!13095 = !DILocalVariable(name: "key", scope: !13092, file: !2236, line: 653, type: !12463)
!13096 = !DILocation(line: 0, scope: !13092)
!13097 = !DILocation(line: 0, scope: !12471, inlinedAt: !13098)
!13098 = distinct !DILocation(line: 653, column: 25, scope: !13092)
!13099 = !DILocation(line: 55, column: 2, scope: !12480, inlinedAt: !13100)
!13100 = distinct !DILocation(line: 145, column: 10, scope: !12471, inlinedAt: !13098)
!13101 = !DILocation(line: 0, scope: !12480, inlinedAt: !13100)
!13102 = !DILocation(line: 148, column: 2, scope: !12488, inlinedAt: !13098)
!13103 = !DILocation(line: 148, column: 2, scope: !12489, inlinedAt: !13098)
!13104 = !DILocation(line: 148, column: 2, scope: !12492, inlinedAt: !13098)
!13105 = !DILocation(line: 160, column: 2, scope: !12471, inlinedAt: !13098)
!13106 = !DILocation(line: 655, column: 6, scope: !13107)
!13107 = distinct !DILexicalBlock(scope: !13092, file: !2236, line: 655, column: 6)
!13108 = !DILocation(line: 655, column: 6, scope: !13092)
!13109 = !DILocation(line: 0, scope: !12505, inlinedAt: !13110)
!13110 = distinct !DILocation(line: 656, column: 3, scope: !13111)
!13111 = distinct !DILexicalBlock(scope: !13107, file: !2236, line: 655, column: 36)
!13112 = !DILocation(line: 194, column: 2, scope: !12513, inlinedAt: !13110)
!13113 = !DILocation(line: 194, column: 2, scope: !12514, inlinedAt: !13110)
!13114 = !DILocation(line: 194, column: 2, scope: !12517, inlinedAt: !13110)
!13115 = !DILocation(line: 0, scope: !12519, inlinedAt: !13116)
!13116 = distinct !DILocation(line: 215, column: 2, scope: !12505, inlinedAt: !13110)
!13117 = !DILocation(line: 95, column: 2, scope: !12519, inlinedAt: !13116)
!13118 = !DILocation(line: 657, column: 3, scope: !13111)
!13119 = !DILocation(line: 660, column: 2, scope: !13092)
!13120 = !DILocation(line: 661, column: 2, scope: !13092)
!13121 = !DILocation(line: 662, column: 2, scope: !13092)
!13122 = !DILocation(line: 663, column: 1, scope: !13092)
!13123 = distinct !DISubprogram(name: "z_has_thread_started", scope: !11653, file: !11653, line: 126, type: !12612, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !13124)
!13124 = !{!13125}
!13125 = !DILocalVariable(name: "thread", arg: 1, scope: !13123, file: !11653, line: 126, type: !2134)
!13126 = !DILocation(line: 0, scope: !13123)
!13127 = !DILocation(line: 128, column: 23, scope: !13123)
!13128 = !DILocation(line: 128, column: 36, scope: !13123)
!13129 = !DILocation(line: 128, column: 56, scope: !13123)
!13130 = !DILocation(line: 128, column: 2, scope: !13123)
!13131 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !11653, file: !11653, line: 155, type: !12429, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !13132)
!13132 = !{!13133}
!13133 = !DILocalVariable(name: "thread", arg: 1, scope: !13131, file: !11653, line: 155, type: !2134)
!13134 = !DILocation(line: 0, scope: !13131)
!13135 = !DILocation(line: 157, column: 15, scope: !13131)
!13136 = !DILocation(line: 157, column: 28, scope: !13131)
!13137 = !DILocation(line: 158, column: 1, scope: !13131)
!13138 = distinct !DISubprogram(name: "z_reschedule", scope: !2236, file: !2236, line: 967, type: !12506, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !13139)
!13139 = !{!13140, !13141}
!13140 = !DILocalVariable(name: "lock", arg: 1, scope: !13138, file: !2236, line: 967, type: !12474)
!13141 = !DILocalVariable(name: "key", arg: 2, scope: !13138, file: !2236, line: 967, type: !12463)
!13142 = !DILocation(line: 0, scope: !13138)
!13143 = !DILocation(line: 969, column: 6, scope: !13144)
!13144 = distinct !DILexicalBlock(scope: !13138, file: !2236, line: 969, column: 6)
!13145 = !DILocation(line: 969, column: 23, scope: !13144)
!13146 = !DILocation(line: 969, column: 26, scope: !13144)
!13147 = !DILocation(line: 969, column: 6, scope: !13138)
!13148 = !DILocalVariable(name: "key", arg: 2, scope: !13149, file: !11755, line: 193, type: !12463)
!13149 = distinct !DISubprogram(name: "z_swap", scope: !11755, file: !11755, line: 193, type: !13150, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !13152)
!13150 = !DISubroutineType(types: !13151)
!13151 = !{!107, !12474, !12463}
!13152 = !{!13153, !13148}
!13153 = !DILocalVariable(name: "lock", arg: 1, scope: !13149, file: !11755, line: 193, type: !12474)
!13154 = !DILocation(line: 0, scope: !13149, inlinedAt: !13155)
!13155 = distinct !DILocation(line: 970, column: 3, scope: !13156)
!13156 = distinct !DILexicalBlock(scope: !13144, file: !2236, line: 969, column: 39)
!13157 = !DILocalVariable(name: "l", arg: 1, scope: !13158, file: !818, line: 221, type: !12474)
!13158 = distinct !DISubprogram(name: "k_spin_release", scope: !818, file: !818, line: 221, type: !13159, scopeLine: 222, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !13161)
!13159 = !DISubroutineType(types: !13160)
!13160 = !{null, !12474}
!13161 = !{!13157}
!13162 = !DILocation(line: 0, scope: !13158, inlinedAt: !13163)
!13163 = distinct !DILocation(line: 195, column: 2, scope: !13149, inlinedAt: !13155)
!13164 = !DILocation(line: 225, column: 2, scope: !13165, inlinedAt: !13163)
!13165 = distinct !DILexicalBlock(scope: !13166, file: !818, line: 225, column: 2)
!13166 = distinct !DILexicalBlock(scope: !13158, file: !818, line: 225, column: 2)
!13167 = !DILocation(line: 225, column: 2, scope: !13166, inlinedAt: !13163)
!13168 = !DILocation(line: 225, column: 2, scope: !13169, inlinedAt: !13163)
!13169 = distinct !DILexicalBlock(scope: !13165, file: !818, line: 225, column: 2)
!13170 = !DILocation(line: 196, column: 9, scope: !13149, inlinedAt: !13155)
!13171 = !DILocation(line: 971, column: 2, scope: !13156)
!13172 = !DILocation(line: 0, scope: !12505, inlinedAt: !13173)
!13173 = distinct !DILocation(line: 972, column: 3, scope: !13174)
!13174 = distinct !DILexicalBlock(scope: !13144, file: !2236, line: 971, column: 9)
!13175 = !DILocation(line: 194, column: 2, scope: !12513, inlinedAt: !13173)
!13176 = !DILocation(line: 194, column: 2, scope: !12514, inlinedAt: !13173)
!13177 = !DILocation(line: 194, column: 2, scope: !12517, inlinedAt: !13173)
!13178 = !DILocation(line: 0, scope: !12519, inlinedAt: !13179)
!13179 = distinct !DILocation(line: 215, column: 2, scope: !12505, inlinedAt: !13173)
!13180 = !DILocation(line: 95, column: 2, scope: !12519, inlinedAt: !13179)
!13181 = !DILocation(line: 975, column: 1, scope: !13138)
!13182 = distinct !DISubprogram(name: "resched", scope: !2236, file: !2236, line: 940, type: !13183, scopeLine: 941, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !13185)
!13183 = !DISubroutineType(types: !13184)
!13184 = !{!145, !152}
!13185 = !{!13186}
!13186 = !DILocalVariable(name: "key", arg: 1, scope: !13182, file: !2236, line: 940, type: !152)
!13187 = !DILocation(line: 0, scope: !13182)
!13188 = !DILocalVariable(name: "key", arg: 1, scope: !13189, file: !6121, line: 112, type: !32)
!13189 = distinct !DISubprogram(name: "arch_irq_unlocked", scope: !6121, file: !6121, line: 112, type: !13190, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !13192)
!13190 = !DISubroutineType(types: !13191)
!13191 = !{!145, !32}
!13192 = !{!13188}
!13193 = !DILocation(line: 0, scope: !13189, inlinedAt: !13194)
!13194 = distinct !DILocation(line: 946, column: 9, scope: !13182)
!13195 = !DILocation(line: 115, column: 13, scope: !13189, inlinedAt: !13194)
!13196 = !DILocation(line: 946, column: 32, scope: !13182)
!13197 = !DILocation(line: 1031, column: 3, scope: !13198, inlinedAt: !13201)
!13198 = distinct !DISubprogram(name: "__get_IPSR", scope: !6000, file: !6000, line: 1027, type: !6087, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !13199)
!13199 = !{!13200}
!13200 = !DILocalVariable(name: "result", scope: !13198, file: !6000, line: 1029, type: !152)
!13201 = distinct !DILocation(line: 48, column: 10, scope: !13202, inlinedAt: !13203)
!13202 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !6996, file: !6996, line: 46, type: !6997, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !1949)
!13203 = distinct !DILocation(line: 946, column: 36, scope: !13182)
!13204 = !{i64 7016883}
!13205 = !DILocation(line: 0, scope: !13198, inlinedAt: !13201)
!13206 = !DILocation(line: 48, column: 9, scope: !13202, inlinedAt: !13203)
!13207 = !DILocation(line: 946, column: 2, scope: !13182)
!13208 = distinct !DISubprogram(name: "need_swap", scope: !2236, file: !2236, line: 953, type: !6997, scopeLine: 954, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !13209)
!13209 = !{!13210}
!13210 = !DILocalVariable(name: "new_thread", scope: !13208, file: !2236, line: 959, type: !2134)
!13211 = !DILocation(line: 962, column: 31, scope: !13208)
!13212 = !DILocation(line: 0, scope: !13208)
!13213 = !DILocation(line: 963, column: 23, scope: !13208)
!13214 = !DILocation(line: 963, column: 20, scope: !13208)
!13215 = !DILocation(line: 963, column: 2, scope: !13208)
!13216 = distinct !DISubprogram(name: "z_swap_irqlock", scope: !11755, file: !11755, line: 181, type: !6010, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !13217)
!13217 = !{!13218, !13219}
!13218 = !DILocalVariable(name: "key", arg: 1, scope: !13216, file: !11755, line: 181, type: !32)
!13219 = !DILocalVariable(name: "ret", scope: !13216, file: !11755, line: 183, type: !107)
!13220 = !DILocation(line: 0, scope: !13216)
!13221 = !DILocation(line: 185, column: 8, scope: !13216)
!13222 = !DILocation(line: 186, column: 2, scope: !13216)
!13223 = distinct !DISubprogram(name: "z_impl_k_thread_suspend", scope: !2236, file: !2236, line: 665, type: !12429, scopeLine: 666, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !13224)
!13224 = !{!13225, !13226, !13228}
!13225 = !DILocalVariable(name: "thread", arg: 1, scope: !13223, file: !2236, line: 665, type: !2134)
!13226 = !DILocalVariable(name: "__i", scope: !13227, file: !2236, line: 671, type: !12463)
!13227 = distinct !DILexicalBlock(scope: !13223, file: !2236, line: 671, column: 2)
!13228 = !DILocalVariable(name: "__key", scope: !13227, file: !2236, line: 671, type: !12463)
!13229 = !DILocation(line: 0, scope: !13223)
!13230 = !DILocation(line: 669, column: 8, scope: !13223)
!13231 = !DILocation(line: 0, scope: !13227)
!13232 = !DILocation(line: 0, scope: !12471, inlinedAt: !13233)
!13233 = distinct !DILocation(line: 671, column: 2, scope: !13227)
!13234 = !DILocation(line: 55, column: 2, scope: !12480, inlinedAt: !13235)
!13235 = distinct !DILocation(line: 145, column: 10, scope: !12471, inlinedAt: !13233)
!13236 = !DILocation(line: 0, scope: !12480, inlinedAt: !13235)
!13237 = !DILocation(line: 148, column: 2, scope: !12488, inlinedAt: !13233)
!13238 = !DILocation(line: 148, column: 2, scope: !12489, inlinedAt: !13233)
!13239 = !DILocation(line: 148, column: 2, scope: !12492, inlinedAt: !13233)
!13240 = !DILocation(line: 160, column: 2, scope: !12471, inlinedAt: !13233)
!13241 = !DILocation(line: 672, column: 7, scope: !13242)
!13242 = distinct !DILexicalBlock(scope: !13243, file: !2236, line: 672, column: 7)
!13243 = distinct !DILexicalBlock(scope: !13244, file: !2236, line: 671, column: 26)
!13244 = distinct !DILexicalBlock(scope: !13227, file: !2236, line: 671, column: 2)
!13245 = !DILocation(line: 672, column: 7, scope: !13243)
!13246 = !DILocation(line: 0, scope: !12663, inlinedAt: !13247)
!13247 = distinct !DILocation(line: 673, column: 4, scope: !13248)
!13248 = distinct !DILexicalBlock(scope: !13242, file: !2236, line: 672, column: 35)
!13249 = !DILocation(line: 266, column: 15, scope: !12663, inlinedAt: !13247)
!13250 = !DILocation(line: 266, column: 28, scope: !12663, inlinedAt: !13247)
!13251 = !DILocation(line: 0, scope: !12671, inlinedAt: !13252)
!13252 = distinct !DILocation(line: 268, column: 3, scope: !12675, inlinedAt: !13247)
!13253 = !DILocation(line: 234, column: 2, scope: !12671, inlinedAt: !13252)
!13254 = !DILocation(line: 674, column: 3, scope: !13248)
!13255 = !DILocation(line: 675, column: 3, scope: !13243)
!13256 = !DILocation(line: 676, column: 26, scope: !13243)
!13257 = !DILocation(line: 676, column: 23, scope: !13243)
!13258 = !DILocation(line: 676, column: 3, scope: !13243)
!13259 = !DILocation(line: 0, scope: !12505, inlinedAt: !13260)
!13260 = distinct !DILocation(line: 671, column: 2, scope: !13244)
!13261 = !DILocation(line: 194, column: 2, scope: !12513, inlinedAt: !13260)
!13262 = !DILocation(line: 194, column: 2, scope: !12514, inlinedAt: !13260)
!13263 = !DILocation(line: 194, column: 2, scope: !12517, inlinedAt: !13260)
!13264 = !DILocation(line: 0, scope: !12519, inlinedAt: !13265)
!13265 = distinct !DILocation(line: 215, column: 2, scope: !12505, inlinedAt: !13260)
!13266 = !DILocation(line: 95, column: 2, scope: !12519, inlinedAt: !13265)
!13267 = !DILocation(line: 679, column: 16, scope: !13268)
!13268 = distinct !DILexicalBlock(scope: !13223, file: !2236, line: 679, column: 6)
!13269 = !DILocation(line: 679, column: 13, scope: !13268)
!13270 = !DILocation(line: 679, column: 6, scope: !13223)
!13271 = !DILocation(line: 680, column: 3, scope: !13272)
!13272 = distinct !DILexicalBlock(scope: !13268, file: !2236, line: 679, column: 26)
!13273 = !DILocation(line: 681, column: 2, scope: !13272)
!13274 = !DILocation(line: 684, column: 1, scope: !13223)
!13275 = distinct !DISubprogram(name: "z_abort_thread_timeout", scope: !12060, file: !12060, line: 52, type: !12447, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !13276)
!13276 = !{!13277}
!13277 = !DILocalVariable(name: "thread", arg: 1, scope: !13275, file: !12060, line: 52, type: !2134)
!13278 = !DILocation(line: 0, scope: !13275)
!13279 = !DILocation(line: 54, column: 39, scope: !13275)
!13280 = !DILocation(line: 54, column: 9, scope: !13275)
!13281 = !DILocation(line: 54, column: 2, scope: !13275)
!13282 = distinct !DISubprogram(name: "z_mark_thread_as_suspended", scope: !11653, file: !11653, line: 141, type: !12429, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !13283)
!13283 = !{!13284}
!13284 = !DILocalVariable(name: "thread", arg: 1, scope: !13282, file: !11653, line: 141, type: !2134)
!13285 = !DILocation(line: 0, scope: !13282)
!13286 = !DILocation(line: 143, column: 15, scope: !13282)
!13287 = !DILocation(line: 143, column: 28, scope: !13282)
!13288 = !DILocation(line: 146, column: 1, scope: !13282)
!13289 = distinct !DISubprogram(name: "z_reschedule_unlocked", scope: !11653, file: !11653, line: 73, type: !2909, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !1949)
!13290 = !DILocation(line: 55, column: 2, scope: !12480, inlinedAt: !13291)
!13291 = distinct !DILocation(line: 75, column: 30, scope: !13289)
!13292 = !DILocation(line: 0, scope: !12480, inlinedAt: !13291)
!13293 = !DILocation(line: 75, column: 9, scope: !13289)
!13294 = !DILocation(line: 76, column: 1, scope: !13289)
!13295 = distinct !DISubprogram(name: "z_reschedule_irqlock", scope: !2236, file: !2236, line: 977, type: !6097, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !13296)
!13296 = !{!13297}
!13297 = !DILocalVariable(name: "key", arg: 1, scope: !13295, file: !2236, line: 977, type: !152)
!13298 = !DILocation(line: 0, scope: !13295)
!13299 = !DILocation(line: 979, column: 6, scope: !13300)
!13300 = distinct !DILexicalBlock(scope: !13295, file: !2236, line: 979, column: 6)
!13301 = !DILocation(line: 979, column: 6, scope: !13295)
!13302 = !DILocation(line: 980, column: 3, scope: !13303)
!13303 = distinct !DILexicalBlock(scope: !13300, file: !2236, line: 979, column: 20)
!13304 = !DILocation(line: 981, column: 2, scope: !13303)
!13305 = !DILocation(line: 0, scope: !12519, inlinedAt: !13306)
!13306 = distinct !DILocation(line: 982, column: 3, scope: !13307)
!13307 = distinct !DILexicalBlock(scope: !13300, file: !2236, line: 981, column: 9)
!13308 = !DILocation(line: 95, column: 2, scope: !12519, inlinedAt: !13306)
!13309 = !DILocation(line: 985, column: 1, scope: !13295)
!13310 = distinct !DISubprogram(name: "z_impl_k_thread_resume", scope: !2236, file: !2236, line: 695, type: !12429, scopeLine: 696, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !13311)
!13311 = !{!13312, !13313}
!13312 = !DILocalVariable(name: "thread", arg: 1, scope: !13310, file: !2236, line: 695, type: !2134)
!13313 = !DILocalVariable(name: "key", scope: !13310, file: !2236, line: 699, type: !12463)
!13314 = !DILocation(line: 0, scope: !13310)
!13315 = !DILocation(line: 0, scope: !12471, inlinedAt: !13316)
!13316 = distinct !DILocation(line: 699, column: 25, scope: !13310)
!13317 = !DILocation(line: 55, column: 2, scope: !12480, inlinedAt: !13318)
!13318 = distinct !DILocation(line: 145, column: 10, scope: !12471, inlinedAt: !13316)
!13319 = !DILocation(line: 0, scope: !12480, inlinedAt: !13318)
!13320 = !DILocation(line: 148, column: 2, scope: !12488, inlinedAt: !13316)
!13321 = !DILocation(line: 148, column: 2, scope: !12489, inlinedAt: !13316)
!13322 = !DILocation(line: 148, column: 2, scope: !12492, inlinedAt: !13316)
!13323 = !DILocation(line: 160, column: 2, scope: !12471, inlinedAt: !13316)
!13324 = !DILocation(line: 702, column: 7, scope: !13325)
!13325 = distinct !DILexicalBlock(scope: !13310, file: !2236, line: 702, column: 6)
!13326 = !DILocation(line: 702, column: 6, scope: !13310)
!13327 = !DILocation(line: 0, scope: !12505, inlinedAt: !13328)
!13328 = distinct !DILocation(line: 703, column: 3, scope: !13329)
!13329 = distinct !DILexicalBlock(scope: !13325, file: !2236, line: 702, column: 38)
!13330 = !DILocation(line: 194, column: 2, scope: !12513, inlinedAt: !13328)
!13331 = !DILocation(line: 194, column: 2, scope: !12514, inlinedAt: !13328)
!13332 = !DILocation(line: 194, column: 2, scope: !12517, inlinedAt: !13328)
!13333 = !DILocation(line: 0, scope: !12519, inlinedAt: !13334)
!13334 = distinct !DILocation(line: 215, column: 2, scope: !12505, inlinedAt: !13328)
!13335 = !DILocation(line: 95, column: 2, scope: !12519, inlinedAt: !13334)
!13336 = !DILocation(line: 704, column: 3, scope: !13329)
!13337 = !DILocation(line: 707, column: 2, scope: !13310)
!13338 = !DILocation(line: 708, column: 2, scope: !13310)
!13339 = !DILocation(line: 710, column: 2, scope: !13310)
!13340 = !DILocation(line: 713, column: 1, scope: !13310)
!13341 = distinct !DISubprogram(name: "z_is_thread_suspended", scope: !11653, file: !11653, line: 96, type: !12612, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !13342)
!13342 = !{!13343}
!13343 = !DILocalVariable(name: "thread", arg: 1, scope: !13341, file: !11653, line: 96, type: !2134)
!13344 = !DILocation(line: 0, scope: !13341)
!13345 = !DILocation(line: 98, column: 23, scope: !13341)
!13346 = !DILocation(line: 98, column: 36, scope: !13341)
!13347 = !DILocation(line: 98, column: 57, scope: !13341)
!13348 = !DILocation(line: 98, column: 2, scope: !13341)
!13349 = distinct !DISubprogram(name: "z_mark_thread_as_not_suspended", scope: !11653, file: !11653, line: 148, type: !12429, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !13350)
!13350 = !{!13351}
!13351 = !DILocalVariable(name: "thread", arg: 1, scope: !13349, file: !11653, line: 148, type: !2134)
!13352 = !DILocation(line: 0, scope: !13349)
!13353 = !DILocation(line: 150, column: 15, scope: !13349)
!13354 = !DILocation(line: 150, column: 28, scope: !13349)
!13355 = !DILocation(line: 153, column: 1, scope: !13349)
!13356 = distinct !DISubprogram(name: "z_pend_thread", scope: !2236, file: !2236, line: 770, type: !13357, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !13363)
!13357 = !DISubroutineType(types: !13358)
!13358 = !{null, !2134, !2165, !13359}
!13359 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !693, line: 67, baseType: !13360)
!13360 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !693, line: 65, size: 64, elements: !13361)
!13361 = !{!13362}
!13362 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !13360, file: !693, line: 66, baseType: !692, size: 64)
!13363 = !{!13364, !13365, !13366, !13367, !13369}
!13364 = !DILocalVariable(name: "thread", arg: 1, scope: !13356, file: !2236, line: 770, type: !2134)
!13365 = !DILocalVariable(name: "wait_q", arg: 2, scope: !13356, file: !2236, line: 770, type: !2165)
!13366 = !DILocalVariable(name: "timeout", arg: 3, scope: !13356, file: !2236, line: 771, type: !13359)
!13367 = !DILocalVariable(name: "__i", scope: !13368, file: !2236, line: 774, type: !12463)
!13368 = distinct !DILexicalBlock(scope: !13356, file: !2236, line: 774, column: 2)
!13369 = !DILocalVariable(name: "__key", scope: !13368, file: !2236, line: 774, type: !12463)
!13370 = !DILocation(line: 0, scope: !13356)
!13371 = !DILocation(line: 773, column: 2, scope: !13372)
!13372 = distinct !DILexicalBlock(scope: !13373, file: !2236, line: 773, column: 2)
!13373 = distinct !DILexicalBlock(scope: !13356, file: !2236, line: 773, column: 2)
!13374 = !DILocation(line: 773, column: 2, scope: !13373)
!13375 = !DILocation(line: 773, column: 2, scope: !13376)
!13376 = distinct !DILexicalBlock(scope: !13372, file: !2236, line: 773, column: 2)
!13377 = !DILocation(line: 0, scope: !13368)
!13378 = !DILocation(line: 0, scope: !12471, inlinedAt: !13379)
!13379 = distinct !DILocation(line: 774, column: 2, scope: !13368)
!13380 = !DILocation(line: 55, column: 2, scope: !12480, inlinedAt: !13381)
!13381 = distinct !DILocation(line: 145, column: 10, scope: !12471, inlinedAt: !13379)
!13382 = !DILocation(line: 0, scope: !12480, inlinedAt: !13381)
!13383 = !DILocation(line: 148, column: 2, scope: !12488, inlinedAt: !13379)
!13384 = !DILocation(line: 148, column: 2, scope: !12489, inlinedAt: !13379)
!13385 = !DILocation(line: 148, column: 2, scope: !12492, inlinedAt: !13379)
!13386 = !DILocation(line: 160, column: 2, scope: !12471, inlinedAt: !13379)
!13387 = !DILocation(line: 775, column: 3, scope: !13388)
!13388 = distinct !DILexicalBlock(scope: !13389, file: !2236, line: 774, column: 26)
!13389 = distinct !DILexicalBlock(scope: !13368, file: !2236, line: 774, column: 2)
!13390 = !DILocation(line: 0, scope: !12505, inlinedAt: !13391)
!13391 = distinct !DILocation(line: 774, column: 2, scope: !13389)
!13392 = !DILocation(line: 194, column: 2, scope: !12513, inlinedAt: !13391)
!13393 = !DILocation(line: 194, column: 2, scope: !12514, inlinedAt: !13391)
!13394 = !DILocation(line: 194, column: 2, scope: !12517, inlinedAt: !13391)
!13395 = !DILocation(line: 0, scope: !12519, inlinedAt: !13396)
!13396 = distinct !DILocation(line: 215, column: 2, scope: !12505, inlinedAt: !13391)
!13397 = !DILocation(line: 95, column: 2, scope: !12519, inlinedAt: !13396)
!13398 = !DILocation(line: 777, column: 1, scope: !13356)
!13399 = distinct !DISubprogram(name: "is_thread_dummy", scope: !2236, file: !2236, line: 79, type: !12612, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !13400)
!13400 = !{!13401}
!13401 = !DILocalVariable(name: "thread", arg: 1, scope: !13399, file: !2236, line: 79, type: !2134)
!13402 = !DILocation(line: 0, scope: !13399)
!13403 = !DILocation(line: 81, column: 23, scope: !13399)
!13404 = !DILocation(line: 81, column: 36, scope: !13399)
!13405 = !DILocation(line: 81, column: 53, scope: !13399)
!13406 = !DILocation(line: 81, column: 2, scope: !13399)
!13407 = distinct !DISubprogram(name: "pend_locked", scope: !2236, file: !2236, line: 760, type: !13357, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !13408)
!13408 = !{!13409, !13410, !13411}
!13409 = !DILocalVariable(name: "thread", arg: 1, scope: !13407, file: !2236, line: 760, type: !2134)
!13410 = !DILocalVariable(name: "wait_q", arg: 2, scope: !13407, file: !2236, line: 760, type: !2165)
!13411 = !DILocalVariable(name: "timeout", arg: 3, scope: !13407, file: !2236, line: 761, type: !13359)
!13412 = !DILocation(line: 0, scope: !13407)
!13413 = !DILocation(line: 766, column: 2, scope: !13407)
!13414 = !DILocation(line: 767, column: 2, scope: !13407)
!13415 = !DILocation(line: 768, column: 1, scope: !13407)
!13416 = distinct !DISubprogram(name: "add_to_waitq_locked", scope: !2236, file: !2236, line: 740, type: !13417, scopeLine: 741, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !13419)
!13417 = !DISubroutineType(types: !13418)
!13418 = !{null, !2134, !2165}
!13419 = !{!13420, !13421}
!13420 = !DILocalVariable(name: "thread", arg: 1, scope: !13416, file: !2236, line: 740, type: !2134)
!13421 = !DILocalVariable(name: "wait_q", arg: 2, scope: !13416, file: !2236, line: 740, type: !2165)
!13422 = !DILocation(line: 0, scope: !13416)
!13423 = !DILocation(line: 742, column: 2, scope: !13416)
!13424 = !DILocation(line: 743, column: 2, scope: !13416)
!13425 = !DILocation(line: 747, column: 13, scope: !13426)
!13426 = distinct !DILexicalBlock(scope: !13416, file: !2236, line: 747, column: 6)
!13427 = !DILocation(line: 747, column: 6, scope: !13416)
!13428 = !DILocation(line: 748, column: 16, scope: !13429)
!13429 = distinct !DILexicalBlock(scope: !13426, file: !2236, line: 747, column: 22)
!13430 = !DILocation(line: 748, column: 26, scope: !13429)
!13431 = !DILocation(line: 749, column: 28, scope: !13429)
!13432 = !DILocation(line: 0, scope: !12694, inlinedAt: !13433)
!13433 = distinct !DILocation(line: 749, column: 3, scope: !13429)
!13434 = !DILocation(line: 186, column: 2, scope: !12704, inlinedAt: !13433)
!13435 = !DILocation(line: 186, column: 2, scope: !12705, inlinedAt: !13433)
!13436 = !DILocation(line: 186, column: 2, scope: !12708, inlinedAt: !13433)
!13437 = !DILocation(line: 188, column: 2, scope: !12710, inlinedAt: !13433)
!13438 = !DILocation(line: 188, column: 2, scope: !12712, inlinedAt: !13433)
!13439 = !DILocation(line: 0, scope: !12710, inlinedAt: !13433)
!13440 = !DILocation(line: 189, column: 7, scope: !12715, inlinedAt: !13433)
!13441 = !DILocation(line: 189, column: 35, scope: !12715, inlinedAt: !13433)
!13442 = !DILocation(line: 189, column: 7, scope: !12716, inlinedAt: !13433)
!13443 = !DILocation(line: 191, column: 21, scope: !12720, inlinedAt: !13433)
!13444 = !DILocation(line: 190, column: 4, scope: !12720, inlinedAt: !13433)
!13445 = !DILocation(line: 192, column: 4, scope: !12720, inlinedAt: !13433)
!13446 = distinct !{!13446, !13437, !13447}
!13447 = !DILocation(line: 194, column: 2, scope: !12710, inlinedAt: !13433)
!13448 = !DILocation(line: 196, column: 37, scope: !12694, inlinedAt: !13433)
!13449 = !DILocation(line: 196, column: 2, scope: !12694, inlinedAt: !13433)
!13450 = !DILocation(line: 197, column: 1, scope: !12694, inlinedAt: !13433)
!13451 = !DILocation(line: 751, column: 1, scope: !13416)
!13452 = distinct !DISubprogram(name: "add_thread_timeout", scope: !2236, file: !2236, line: 753, type: !13453, scopeLine: 754, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !13455)
!13453 = !DISubroutineType(types: !13454)
!13454 = !{null, !2134, !13359}
!13455 = !{!13456, !13457}
!13456 = !DILocalVariable(name: "thread", arg: 1, scope: !13452, file: !2236, line: 753, type: !2134)
!13457 = !DILocalVariable(name: "timeout", arg: 2, scope: !13452, file: !2236, line: 753, type: !13359)
!13458 = !DILocation(line: 0, scope: !13452)
!13459 = !DILocation(line: 755, column: 7, scope: !13460)
!13460 = distinct !DILexicalBlock(scope: !13452, file: !2236, line: 755, column: 6)
!13461 = !DILocation(line: 755, column: 6, scope: !13452)
!13462 = !DILocation(line: 756, column: 3, scope: !13463)
!13463 = distinct !DILexicalBlock(scope: !13460, file: !2236, line: 755, column: 41)
!13464 = !DILocation(line: 757, column: 2, scope: !13463)
!13465 = !DILocation(line: 758, column: 1, scope: !13452)
!13466 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !12060, file: !12060, line: 47, type: !13453, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !13467)
!13467 = !{!13468, !13469}
!13468 = !DILocalVariable(name: "thread", arg: 1, scope: !13466, file: !12060, line: 47, type: !2134)
!13469 = !DILocalVariable(name: "ticks", arg: 2, scope: !13466, file: !12060, line: 47, type: !13359)
!13470 = !DILocation(line: 0, scope: !13466)
!13471 = !DILocation(line: 49, column: 30, scope: !13466)
!13472 = !DILocation(line: 49, column: 2, scope: !13466)
!13473 = !DILocation(line: 50, column: 1, scope: !13466)
!13474 = distinct !DISubprogram(name: "z_thread_timeout", scope: !2236, file: !2236, line: 795, type: !2191, scopeLine: 796, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !13475)
!13475 = !{!13476, !13477, !13478, !13480, !13481}
!13476 = !DILocalVariable(name: "timeout", arg: 1, scope: !13474, file: !2236, line: 795, type: !2193)
!13477 = !DILocalVariable(name: "thread", scope: !13474, file: !2236, line: 797, type: !2134)
!13478 = !DILocalVariable(name: "__i", scope: !13479, file: !2236, line: 800, type: !12463)
!13479 = distinct !DILexicalBlock(scope: !13474, file: !2236, line: 800, column: 2)
!13480 = !DILocalVariable(name: "__key", scope: !13479, file: !2236, line: 800, type: !12463)
!13481 = !DILocalVariable(name: "killed", scope: !13482, file: !2236, line: 801, type: !145)
!13482 = distinct !DILexicalBlock(scope: !13483, file: !2236, line: 800, column: 26)
!13483 = distinct !DILexicalBlock(scope: !13479, file: !2236, line: 800, column: 2)
!13484 = !DILocation(line: 0, scope: !13474)
!13485 = !DILocation(line: 797, column: 28, scope: !13474)
!13486 = !DILocation(line: 0, scope: !13479)
!13487 = !DILocation(line: 0, scope: !12471, inlinedAt: !13488)
!13488 = distinct !DILocation(line: 800, column: 2, scope: !13479)
!13489 = !DILocation(line: 55, column: 2, scope: !12480, inlinedAt: !13490)
!13490 = distinct !DILocation(line: 145, column: 10, scope: !12471, inlinedAt: !13488)
!13491 = !DILocation(line: 0, scope: !12480, inlinedAt: !13490)
!13492 = !DILocation(line: 148, column: 2, scope: !12488, inlinedAt: !13488)
!13493 = !DILocation(line: 148, column: 2, scope: !12489, inlinedAt: !13488)
!13494 = !DILocation(line: 148, column: 2, scope: !12492, inlinedAt: !13488)
!13495 = !DILocation(line: 160, column: 2, scope: !12471, inlinedAt: !13488)
!13496 = !DILocation(line: 801, column: 27, scope: !13482)
!13497 = !DILocation(line: 801, column: 32, scope: !13482)
!13498 = !DILocation(line: 801, column: 61, scope: !13482)
!13499 = !DILocation(line: 0, scope: !13482)
!13500 = !DILocation(line: 804, column: 7, scope: !13482)
!13501 = !DILocation(line: 805, column: 21, scope: !13502)
!13502 = distinct !DILexicalBlock(scope: !13503, file: !2236, line: 805, column: 8)
!13503 = distinct !DILexicalBlock(scope: !13504, file: !2236, line: 804, column: 16)
!13504 = distinct !DILexicalBlock(scope: !13482, file: !2236, line: 804, column: 7)
!13505 = !DILocation(line: 805, column: 31, scope: !13502)
!13506 = !DILocation(line: 805, column: 8, scope: !13503)
!13507 = !DILocation(line: 806, column: 5, scope: !13508)
!13508 = distinct !DILexicalBlock(scope: !13502, file: !2236, line: 805, column: 40)
!13509 = !DILocation(line: 807, column: 4, scope: !13508)
!13510 = !DILocation(line: 808, column: 4, scope: !13503)
!13511 = !DILocation(line: 809, column: 4, scope: !13503)
!13512 = !DILocation(line: 810, column: 4, scope: !13503)
!13513 = !DILocation(line: 811, column: 3, scope: !13503)
!13514 = !DILocation(line: 0, scope: !12505, inlinedAt: !13515)
!13515 = distinct !DILocation(line: 800, column: 2, scope: !13483)
!13516 = !DILocation(line: 194, column: 2, scope: !12513, inlinedAt: !13515)
!13517 = !DILocation(line: 194, column: 2, scope: !12514, inlinedAt: !13515)
!13518 = !DILocation(line: 194, column: 2, scope: !12517, inlinedAt: !13515)
!13519 = !DILocation(line: 0, scope: !12519, inlinedAt: !13520)
!13520 = distinct !DILocation(line: 215, column: 2, scope: !12505, inlinedAt: !13515)
!13521 = !DILocation(line: 95, column: 2, scope: !12519, inlinedAt: !13520)
!13522 = !DILocation(line: 813, column: 1, scope: !13474)
!13523 = distinct !DISubprogram(name: "unpend_thread_no_timeout", scope: !2236, file: !2236, line: 779, type: !12429, scopeLine: 780, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !13524)
!13524 = !{!13525}
!13525 = !DILocalVariable(name: "thread", arg: 1, scope: !13523, file: !2236, line: 779, type: !2134)
!13526 = !DILocation(line: 0, scope: !13523)
!13527 = !DILocation(line: 781, column: 21, scope: !13523)
!13528 = !DILocation(line: 781, column: 2, scope: !13523)
!13529 = !DILocation(line: 782, column: 2, scope: !13523)
!13530 = !DILocation(line: 783, column: 15, scope: !13523)
!13531 = !DILocation(line: 783, column: 25, scope: !13523)
!13532 = !DILocation(line: 784, column: 1, scope: !13523)
!13533 = distinct !DISubprogram(name: "pended_on_thread", scope: !2236, file: !2236, line: 724, type: !13534, scopeLine: 725, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !13536)
!13534 = !DISubroutineType(types: !13535)
!13535 = !{!2165, !2134}
!13536 = !{!13537}
!13537 = !DILocalVariable(name: "thread", arg: 1, scope: !13533, file: !2236, line: 724, type: !2134)
!13538 = !DILocation(line: 0, scope: !13533)
!13539 = !DILocation(line: 726, column: 2, scope: !13540)
!13540 = distinct !DILexicalBlock(scope: !13541, file: !2236, line: 726, column: 2)
!13541 = distinct !DILexicalBlock(scope: !13533, file: !2236, line: 726, column: 2)
!13542 = !DILocation(line: 726, column: 2, scope: !13541)
!13543 = !DILocation(line: 726, column: 2, scope: !13544)
!13544 = distinct !DILexicalBlock(scope: !13540, file: !2236, line: 726, column: 2)
!13545 = !DILocation(line: 728, column: 2, scope: !13533)
!13546 = distinct !DISubprogram(name: "z_mark_thread_as_not_pending", scope: !11653, file: !11653, line: 165, type: !12429, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !13547)
!13547 = !{!13548}
!13548 = !DILocalVariable(name: "thread", arg: 1, scope: !13546, file: !11653, line: 165, type: !2134)
!13549 = !DILocation(line: 0, scope: !13546)
!13550 = !DILocation(line: 167, column: 15, scope: !13546)
!13551 = !DILocation(line: 167, column: 28, scope: !13546)
!13552 = !DILocation(line: 168, column: 1, scope: !13546)
!13553 = distinct !DISubprogram(name: "unready_thread", scope: !2236, file: !2236, line: 731, type: !12429, scopeLine: 732, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !13554)
!13554 = !{!13555}
!13555 = !DILocalVariable(name: "thread", arg: 1, scope: !13553, file: !2236, line: 731, type: !2134)
!13556 = !DILocation(line: 0, scope: !13553)
!13557 = !DILocation(line: 733, column: 6, scope: !13558)
!13558 = distinct !DILexicalBlock(scope: !13553, file: !2236, line: 733, column: 6)
!13559 = !DILocation(line: 733, column: 6, scope: !13553)
!13560 = !DILocation(line: 0, scope: !12663, inlinedAt: !13561)
!13561 = distinct !DILocation(line: 734, column: 3, scope: !13562)
!13562 = distinct !DILexicalBlock(scope: !13558, file: !2236, line: 733, column: 34)
!13563 = !DILocation(line: 266, column: 15, scope: !12663, inlinedAt: !13561)
!13564 = !DILocation(line: 266, column: 28, scope: !12663, inlinedAt: !13561)
!13565 = !DILocation(line: 0, scope: !12671, inlinedAt: !13566)
!13566 = distinct !DILocation(line: 268, column: 3, scope: !12675, inlinedAt: !13561)
!13567 = !DILocation(line: 234, column: 2, scope: !12671, inlinedAt: !13566)
!13568 = !DILocation(line: 735, column: 2, scope: !13562)
!13569 = !DILocation(line: 736, column: 25, scope: !13553)
!13570 = !DILocation(line: 736, column: 22, scope: !13553)
!13571 = !DILocation(line: 736, column: 2, scope: !13553)
!13572 = !DILocation(line: 737, column: 1, scope: !13553)
!13573 = distinct !DISubprogram(name: "z_mark_thread_as_pending", scope: !11653, file: !11653, line: 160, type: !12429, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !13574)
!13574 = !{!13575}
!13575 = !DILocalVariable(name: "thread", arg: 1, scope: !13573, file: !11653, line: 160, type: !2134)
!13576 = !DILocation(line: 0, scope: !13573)
!13577 = !DILocation(line: 162, column: 15, scope: !13573)
!13578 = !DILocation(line: 162, column: 28, scope: !13573)
!13579 = !DILocation(line: 163, column: 1, scope: !13573)
!13580 = distinct !DISubprogram(name: "z_unpend_thread_no_timeout", scope: !2236, file: !2236, line: 786, type: !12429, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !13581)
!13581 = !{!13582, !13583, !13585}
!13582 = !DILocalVariable(name: "thread", arg: 1, scope: !13580, file: !2236, line: 786, type: !2134)
!13583 = !DILocalVariable(name: "__i", scope: !13584, file: !2236, line: 788, type: !12463)
!13584 = distinct !DILexicalBlock(scope: !13580, file: !2236, line: 788, column: 2)
!13585 = !DILocalVariable(name: "__key", scope: !13584, file: !2236, line: 788, type: !12463)
!13586 = !DILocation(line: 0, scope: !13580)
!13587 = !DILocation(line: 0, scope: !13584)
!13588 = !DILocation(line: 0, scope: !12471, inlinedAt: !13589)
!13589 = distinct !DILocation(line: 788, column: 2, scope: !13584)
!13590 = !DILocation(line: 55, column: 2, scope: !12480, inlinedAt: !13591)
!13591 = distinct !DILocation(line: 145, column: 10, scope: !12471, inlinedAt: !13589)
!13592 = !DILocation(line: 0, scope: !12480, inlinedAt: !13591)
!13593 = !DILocation(line: 148, column: 2, scope: !12488, inlinedAt: !13589)
!13594 = !DILocation(line: 148, column: 2, scope: !12489, inlinedAt: !13589)
!13595 = !DILocation(line: 148, column: 2, scope: !12492, inlinedAt: !13589)
!13596 = !DILocation(line: 160, column: 2, scope: !12471, inlinedAt: !13589)
!13597 = !DILocation(line: 789, column: 3, scope: !13598)
!13598 = distinct !DILexicalBlock(scope: !13599, file: !2236, line: 788, column: 26)
!13599 = distinct !DILexicalBlock(scope: !13584, file: !2236, line: 788, column: 2)
!13600 = !DILocation(line: 0, scope: !12505, inlinedAt: !13601)
!13601 = distinct !DILocation(line: 788, column: 2, scope: !13599)
!13602 = !DILocation(line: 194, column: 2, scope: !12513, inlinedAt: !13601)
!13603 = !DILocation(line: 194, column: 2, scope: !12514, inlinedAt: !13601)
!13604 = !DILocation(line: 194, column: 2, scope: !12517, inlinedAt: !13601)
!13605 = !DILocation(line: 0, scope: !12519, inlinedAt: !13606)
!13606 = distinct !DILocation(line: 215, column: 2, scope: !12505, inlinedAt: !13601)
!13607 = !DILocation(line: 95, column: 2, scope: !12519, inlinedAt: !13606)
!13608 = !DILocation(line: 791, column: 1, scope: !13580)
!13609 = distinct !DISubprogram(name: "z_pend_curr_irqlock", scope: !2236, file: !2236, line: 816, type: !13610, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !13612)
!13610 = !DISubroutineType(types: !13611)
!13611 = !{!107, !152, !2165, !13359}
!13612 = !{!13613, !13614, !13615, !13616, !13617, !13619}
!13613 = !DILocalVariable(name: "key", arg: 1, scope: !13609, file: !2236, line: 816, type: !152)
!13614 = !DILocalVariable(name: "wait_q", arg: 2, scope: !13609, file: !2236, line: 816, type: !2165)
!13615 = !DILocalVariable(name: "timeout", arg: 3, scope: !13609, file: !2236, line: 816, type: !13359)
!13616 = !DILocalVariable(name: "ret", scope: !13609, file: !2236, line: 828, type: !107)
!13617 = !DILocalVariable(name: "__i", scope: !13618, file: !2236, line: 829, type: !12463)
!13618 = distinct !DILexicalBlock(scope: !13609, file: !2236, line: 829, column: 2)
!13619 = !DILocalVariable(name: "__key", scope: !13618, file: !2236, line: 829, type: !12463)
!13620 = !DILocation(line: 0, scope: !13609)
!13621 = !DILocation(line: 823, column: 14, scope: !13609)
!13622 = !DILocation(line: 823, column: 2, scope: !13609)
!13623 = !DILocation(line: 826, column: 20, scope: !13609)
!13624 = !DILocation(line: 826, column: 18, scope: !13609)
!13625 = !DILocation(line: 828, column: 12, scope: !13609)
!13626 = !DILocation(line: 0, scope: !13618)
!13627 = !DILocation(line: 0, scope: !12471, inlinedAt: !13628)
!13628 = distinct !DILocation(line: 829, column: 2, scope: !13618)
!13629 = !DILocation(line: 55, column: 2, scope: !12480, inlinedAt: !13630)
!13630 = distinct !DILocation(line: 145, column: 10, scope: !12471, inlinedAt: !13628)
!13631 = !DILocation(line: 0, scope: !12480, inlinedAt: !13630)
!13632 = !DILocation(line: 148, column: 2, scope: !12488, inlinedAt: !13628)
!13633 = !DILocation(line: 148, column: 2, scope: !12489, inlinedAt: !13628)
!13634 = !DILocation(line: 148, column: 2, scope: !12492, inlinedAt: !13628)
!13635 = !DILocation(line: 160, column: 2, scope: !12471, inlinedAt: !13628)
!13636 = !DILocation(line: 830, column: 7, scope: !13637)
!13637 = distinct !DILexicalBlock(scope: !13638, file: !2236, line: 830, column: 7)
!13638 = distinct !DILexicalBlock(scope: !13639, file: !2236, line: 829, column: 26)
!13639 = distinct !DILexicalBlock(scope: !13618, file: !2236, line: 829, column: 2)
!13640 = !DILocation(line: 830, column: 26, scope: !13637)
!13641 = !DILocation(line: 830, column: 23, scope: !13637)
!13642 = !DILocation(line: 830, column: 7, scope: !13638)
!13643 = !DILocation(line: 831, column: 20, scope: !13644)
!13644 = distinct !DILexicalBlock(scope: !13637, file: !2236, line: 830, column: 36)
!13645 = !DILocation(line: 832, column: 3, scope: !13644)
!13646 = !DILocation(line: 0, scope: !12505, inlinedAt: !13647)
!13647 = distinct !DILocation(line: 829, column: 2, scope: !13639)
!13648 = !DILocation(line: 194, column: 2, scope: !12513, inlinedAt: !13647)
!13649 = !DILocation(line: 194, column: 2, scope: !12514, inlinedAt: !13647)
!13650 = !DILocation(line: 194, column: 2, scope: !12517, inlinedAt: !13647)
!13651 = !DILocation(line: 0, scope: !12519, inlinedAt: !13652)
!13652 = distinct !DILocation(line: 215, column: 2, scope: !12505, inlinedAt: !13647)
!13653 = !DILocation(line: 95, column: 2, scope: !12519, inlinedAt: !13652)
!13654 = !DILocation(line: 834, column: 2, scope: !13609)
!13655 = distinct !DISubprogram(name: "z_pend_curr", scope: !2236, file: !2236, line: 840, type: !13656, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !13658)
!13656 = !DISubroutineType(types: !13657)
!13657 = !{!107, !12474, !12463, !2165, !13359}
!13658 = !{!13659, !13660, !13661, !13662}
!13659 = !DILocalVariable(name: "lock", arg: 1, scope: !13655, file: !2236, line: 840, type: !12474)
!13660 = !DILocalVariable(name: "key", arg: 2, scope: !13655, file: !2236, line: 840, type: !12463)
!13661 = !DILocalVariable(name: "wait_q", arg: 3, scope: !13655, file: !2236, line: 841, type: !2165)
!13662 = !DILocalVariable(name: "timeout", arg: 4, scope: !13655, file: !2236, line: 841, type: !13359)
!13663 = !DILocation(line: 0, scope: !13655)
!13664 = !DILocation(line: 844, column: 20, scope: !13655)
!13665 = !DILocation(line: 844, column: 18, scope: !13655)
!13666 = !DILocation(line: 846, column: 2, scope: !13667)
!13667 = distinct !DILexicalBlock(scope: !13668, file: !2236, line: 846, column: 2)
!13668 = distinct !DILexicalBlock(scope: !13655, file: !2236, line: 846, column: 2)
!13669 = !DILocation(line: 846, column: 2, scope: !13668)
!13670 = !DILocation(line: 846, column: 2, scope: !13671)
!13671 = distinct !DILexicalBlock(scope: !13667, file: !2236, line: 846, column: 2)
!13672 = !DILocation(line: 0, scope: !12471, inlinedAt: !13673)
!13673 = distinct !DILocation(line: 856, column: 9, scope: !13655)
!13674 = !DILocation(line: 55, column: 2, scope: !12480, inlinedAt: !13675)
!13675 = distinct !DILocation(line: 145, column: 10, scope: !12471, inlinedAt: !13673)
!13676 = !DILocation(line: 0, scope: !12480, inlinedAt: !13675)
!13677 = !DILocation(line: 148, column: 2, scope: !12488, inlinedAt: !13673)
!13678 = !DILocation(line: 148, column: 2, scope: !12489, inlinedAt: !13673)
!13679 = !DILocation(line: 148, column: 2, scope: !12492, inlinedAt: !13673)
!13680 = !DILocation(line: 160, column: 2, scope: !12471, inlinedAt: !13673)
!13681 = !DILocation(line: 857, column: 14, scope: !13655)
!13682 = !DILocation(line: 857, column: 2, scope: !13655)
!13683 = !DILocation(line: 0, scope: !13158, inlinedAt: !13684)
!13684 = distinct !DILocation(line: 858, column: 2, scope: !13655)
!13685 = !DILocation(line: 225, column: 2, scope: !13165, inlinedAt: !13684)
!13686 = !DILocation(line: 225, column: 2, scope: !13166, inlinedAt: !13684)
!13687 = !DILocation(line: 225, column: 2, scope: !13169, inlinedAt: !13684)
!13688 = !DILocation(line: 0, scope: !13149, inlinedAt: !13689)
!13689 = distinct !DILocation(line: 859, column: 9, scope: !13655)
!13690 = !DILocation(line: 0, scope: !13158, inlinedAt: !13691)
!13691 = distinct !DILocation(line: 195, column: 2, scope: !13149, inlinedAt: !13689)
!13692 = !DILocation(line: 225, column: 2, scope: !13165, inlinedAt: !13691)
!13693 = !DILocation(line: 225, column: 2, scope: !13166, inlinedAt: !13691)
!13694 = !DILocation(line: 225, column: 2, scope: !13169, inlinedAt: !13691)
!13695 = !DILocation(line: 196, column: 9, scope: !13149, inlinedAt: !13689)
!13696 = !DILocation(line: 859, column: 2, scope: !13655)
!13697 = distinct !DISubprogram(name: "z_unpend1_no_timeout", scope: !2236, file: !2236, line: 862, type: !13698, scopeLine: 863, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !13700)
!13698 = !DISubroutineType(types: !13699)
!13699 = !{!2134, !2165}
!13700 = !{!13701, !13702, !13703, !13705}
!13701 = !DILocalVariable(name: "wait_q", arg: 1, scope: !13697, file: !2236, line: 862, type: !2165)
!13702 = !DILocalVariable(name: "thread", scope: !13697, file: !2236, line: 864, type: !2134)
!13703 = !DILocalVariable(name: "__i", scope: !13704, file: !2236, line: 866, type: !12463)
!13704 = distinct !DILexicalBlock(scope: !13697, file: !2236, line: 866, column: 2)
!13705 = !DILocalVariable(name: "__key", scope: !13704, file: !2236, line: 866, type: !12463)
!13706 = !DILocation(line: 0, scope: !13697)
!13707 = !DILocation(line: 0, scope: !13704)
!13708 = !DILocation(line: 0, scope: !12471, inlinedAt: !13709)
!13709 = distinct !DILocation(line: 866, column: 2, scope: !13704)
!13710 = !DILocation(line: 55, column: 2, scope: !12480, inlinedAt: !13711)
!13711 = distinct !DILocation(line: 145, column: 10, scope: !12471, inlinedAt: !13709)
!13712 = !DILocation(line: 0, scope: !12480, inlinedAt: !13711)
!13713 = !DILocation(line: 148, column: 2, scope: !12488, inlinedAt: !13709)
!13714 = !DILocation(line: 148, column: 2, scope: !12489, inlinedAt: !13709)
!13715 = !DILocation(line: 148, column: 2, scope: !12492, inlinedAt: !13709)
!13716 = !DILocation(line: 160, column: 2, scope: !12471, inlinedAt: !13709)
!13717 = !DILocation(line: 867, column: 12, scope: !13718)
!13718 = distinct !DILexicalBlock(scope: !13719, file: !2236, line: 866, column: 26)
!13719 = distinct !DILexicalBlock(scope: !13704, file: !2236, line: 866, column: 2)
!13720 = !DILocation(line: 869, column: 14, scope: !13721)
!13721 = distinct !DILexicalBlock(scope: !13718, file: !2236, line: 869, column: 7)
!13722 = !DILocation(line: 869, column: 7, scope: !13718)
!13723 = !DILocation(line: 870, column: 4, scope: !13724)
!13724 = distinct !DILexicalBlock(scope: !13721, file: !2236, line: 869, column: 23)
!13725 = !DILocation(line: 871, column: 3, scope: !13724)
!13726 = !DILocation(line: 0, scope: !12505, inlinedAt: !13727)
!13727 = distinct !DILocation(line: 866, column: 2, scope: !13719)
!13728 = !DILocation(line: 194, column: 2, scope: !12513, inlinedAt: !13727)
!13729 = !DILocation(line: 194, column: 2, scope: !12514, inlinedAt: !13727)
!13730 = !DILocation(line: 194, column: 2, scope: !12517, inlinedAt: !13727)
!13731 = !DILocation(line: 0, scope: !12519, inlinedAt: !13732)
!13732 = distinct !DILocation(line: 215, column: 2, scope: !12505, inlinedAt: !13727)
!13733 = !DILocation(line: 95, column: 2, scope: !12519, inlinedAt: !13732)
!13734 = !DILocation(line: 874, column: 2, scope: !13697)
!13735 = distinct !DISubprogram(name: "z_unpend_first_thread", scope: !2236, file: !2236, line: 877, type: !13698, scopeLine: 878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !13736)
!13736 = !{!13737, !13738, !13739, !13741}
!13737 = !DILocalVariable(name: "wait_q", arg: 1, scope: !13735, file: !2236, line: 877, type: !2165)
!13738 = !DILocalVariable(name: "thread", scope: !13735, file: !2236, line: 879, type: !2134)
!13739 = !DILocalVariable(name: "__i", scope: !13740, file: !2236, line: 881, type: !12463)
!13740 = distinct !DILexicalBlock(scope: !13735, file: !2236, line: 881, column: 2)
!13741 = !DILocalVariable(name: "__key", scope: !13740, file: !2236, line: 881, type: !12463)
!13742 = !DILocation(line: 0, scope: !13735)
!13743 = !DILocation(line: 0, scope: !13740)
!13744 = !DILocation(line: 0, scope: !12471, inlinedAt: !13745)
!13745 = distinct !DILocation(line: 881, column: 2, scope: !13740)
!13746 = !DILocation(line: 55, column: 2, scope: !12480, inlinedAt: !13747)
!13747 = distinct !DILocation(line: 145, column: 10, scope: !12471, inlinedAt: !13745)
!13748 = !DILocation(line: 0, scope: !12480, inlinedAt: !13747)
!13749 = !DILocation(line: 148, column: 2, scope: !12488, inlinedAt: !13745)
!13750 = !DILocation(line: 148, column: 2, scope: !12489, inlinedAt: !13745)
!13751 = !DILocation(line: 148, column: 2, scope: !12492, inlinedAt: !13745)
!13752 = !DILocation(line: 160, column: 2, scope: !12471, inlinedAt: !13745)
!13753 = !DILocation(line: 882, column: 12, scope: !13754)
!13754 = distinct !DILexicalBlock(scope: !13755, file: !2236, line: 881, column: 26)
!13755 = distinct !DILexicalBlock(scope: !13740, file: !2236, line: 881, column: 2)
!13756 = !DILocation(line: 884, column: 14, scope: !13757)
!13757 = distinct !DILexicalBlock(scope: !13754, file: !2236, line: 884, column: 7)
!13758 = !DILocation(line: 884, column: 7, scope: !13754)
!13759 = !DILocation(line: 885, column: 4, scope: !13760)
!13760 = distinct !DILexicalBlock(scope: !13757, file: !2236, line: 884, column: 23)
!13761 = !DILocation(line: 886, column: 10, scope: !13760)
!13762 = !DILocation(line: 887, column: 3, scope: !13760)
!13763 = !DILocation(line: 0, scope: !12505, inlinedAt: !13764)
!13764 = distinct !DILocation(line: 881, column: 2, scope: !13755)
!13765 = !DILocation(line: 194, column: 2, scope: !12513, inlinedAt: !13764)
!13766 = !DILocation(line: 194, column: 2, scope: !12514, inlinedAt: !13764)
!13767 = !DILocation(line: 194, column: 2, scope: !12517, inlinedAt: !13764)
!13768 = !DILocation(line: 0, scope: !12519, inlinedAt: !13769)
!13769 = distinct !DILocation(line: 215, column: 2, scope: !12505, inlinedAt: !13764)
!13770 = !DILocation(line: 95, column: 2, scope: !12519, inlinedAt: !13769)
!13771 = !DILocation(line: 890, column: 2, scope: !13735)
!13772 = distinct !DISubprogram(name: "z_unpend_thread", scope: !2236, file: !2236, line: 893, type: !12429, scopeLine: 894, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !13773)
!13773 = !{!13774}
!13774 = !DILocalVariable(name: "thread", arg: 1, scope: !13772, file: !2236, line: 893, type: !2134)
!13775 = !DILocation(line: 0, scope: !13772)
!13776 = !DILocation(line: 0, scope: !13580, inlinedAt: !13777)
!13777 = distinct !DILocation(line: 895, column: 2, scope: !13772)
!13778 = !DILocation(line: 0, scope: !13584, inlinedAt: !13777)
!13779 = !DILocation(line: 0, scope: !12471, inlinedAt: !13780)
!13780 = distinct !DILocation(line: 788, column: 2, scope: !13584, inlinedAt: !13777)
!13781 = !DILocation(line: 55, column: 2, scope: !12480, inlinedAt: !13782)
!13782 = distinct !DILocation(line: 145, column: 10, scope: !12471, inlinedAt: !13780)
!13783 = !DILocation(line: 0, scope: !12480, inlinedAt: !13782)
!13784 = !DILocation(line: 148, column: 2, scope: !12488, inlinedAt: !13780)
!13785 = !DILocation(line: 148, column: 2, scope: !12489, inlinedAt: !13780)
!13786 = !DILocation(line: 148, column: 2, scope: !12492, inlinedAt: !13780)
!13787 = !DILocation(line: 160, column: 2, scope: !12471, inlinedAt: !13780)
!13788 = !DILocation(line: 789, column: 3, scope: !13598, inlinedAt: !13777)
!13789 = !DILocation(line: 0, scope: !12505, inlinedAt: !13790)
!13790 = distinct !DILocation(line: 788, column: 2, scope: !13599, inlinedAt: !13777)
!13791 = !DILocation(line: 194, column: 2, scope: !12513, inlinedAt: !13790)
!13792 = !DILocation(line: 194, column: 2, scope: !12514, inlinedAt: !13790)
!13793 = !DILocation(line: 194, column: 2, scope: !12517, inlinedAt: !13790)
!13794 = !DILocation(line: 0, scope: !12519, inlinedAt: !13795)
!13795 = distinct !DILocation(line: 215, column: 2, scope: !12505, inlinedAt: !13790)
!13796 = !DILocation(line: 95, column: 2, scope: !12519, inlinedAt: !13795)
!13797 = !DILocation(line: 896, column: 8, scope: !13772)
!13798 = !DILocation(line: 897, column: 1, scope: !13772)
!13799 = distinct !DISubprogram(name: "z_set_prio", scope: !2236, file: !2236, line: 902, type: !12832, scopeLine: 903, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !13800)
!13800 = !{!13801, !13802, !13803, !13804, !13806}
!13801 = !DILocalVariable(name: "thread", arg: 1, scope: !13799, file: !2236, line: 902, type: !2134)
!13802 = !DILocalVariable(name: "prio", arg: 2, scope: !13799, file: !2236, line: 902, type: !107)
!13803 = !DILocalVariable(name: "need_sched", scope: !13799, file: !2236, line: 904, type: !145)
!13804 = !DILocalVariable(name: "__i", scope: !13805, file: !2236, line: 906, type: !12463)
!13805 = distinct !DILexicalBlock(scope: !13799, file: !2236, line: 906, column: 2)
!13806 = !DILocalVariable(name: "__key", scope: !13805, file: !2236, line: 906, type: !12463)
!13807 = !DILocation(line: 0, scope: !13799)
!13808 = !DILocation(line: 0, scope: !13805)
!13809 = !DILocation(line: 0, scope: !12471, inlinedAt: !13810)
!13810 = distinct !DILocation(line: 906, column: 2, scope: !13805)
!13811 = !DILocation(line: 55, column: 2, scope: !12480, inlinedAt: !13812)
!13812 = distinct !DILocation(line: 145, column: 10, scope: !12471, inlinedAt: !13810)
!13813 = !DILocation(line: 0, scope: !12480, inlinedAt: !13812)
!13814 = !DILocation(line: 148, column: 2, scope: !12488, inlinedAt: !13810)
!13815 = !DILocation(line: 148, column: 2, scope: !12489, inlinedAt: !13810)
!13816 = !DILocation(line: 148, column: 2, scope: !12492, inlinedAt: !13810)
!13817 = !DILocation(line: 160, column: 2, scope: !12471, inlinedAt: !13810)
!13818 = !DILocation(line: 907, column: 16, scope: !13819)
!13819 = distinct !DILexicalBlock(scope: !13820, file: !2236, line: 906, column: 26)
!13820 = distinct !DILexicalBlock(scope: !13805, file: !2236, line: 906, column: 2)
!13821 = !DILocation(line: 909, column: 7, scope: !13819)
!13822 = !DILocation(line: 0, scope: !12663, inlinedAt: !13823)
!13823 = distinct !DILocation(line: 912, column: 5, scope: !13824)
!13824 = distinct !DILexicalBlock(scope: !13825, file: !2236, line: 911, column: 63)
!13825 = distinct !DILexicalBlock(scope: !13826, file: !2236, line: 911, column: 8)
!13826 = distinct !DILexicalBlock(scope: !13827, file: !2236, line: 909, column: 19)
!13827 = distinct !DILexicalBlock(scope: !13819, file: !2236, line: 909, column: 7)
!13828 = !DILocation(line: 266, column: 28, scope: !12663, inlinedAt: !13823)
!13829 = !DILocation(line: 0, scope: !12671, inlinedAt: !13830)
!13830 = distinct !DILocation(line: 268, column: 3, scope: !12675, inlinedAt: !13823)
!13831 = !DILocation(line: 234, column: 2, scope: !12671, inlinedAt: !13830)
!13832 = !DILocation(line: 913, column: 23, scope: !13824)
!13833 = !DILocation(line: 0, scope: !12680, inlinedAt: !13834)
!13834 = distinct !DILocation(line: 914, column: 5, scope: !13824)
!13835 = !DILocation(line: 252, column: 28, scope: !12680, inlinedAt: !13834)
!13836 = !DILocation(line: 0, scope: !12687, inlinedAt: !13837)
!13837 = distinct !DILocation(line: 254, column: 3, scope: !12691, inlinedAt: !13834)
!13838 = !DILocation(line: 0, scope: !12694, inlinedAt: !13839)
!13839 = distinct !DILocation(line: 229, column: 2, scope: !12687, inlinedAt: !13837)
!13840 = !DILocation(line: 186, column: 2, scope: !12704, inlinedAt: !13839)
!13841 = !DILocation(line: 186, column: 2, scope: !12705, inlinedAt: !13839)
!13842 = !DILocation(line: 186, column: 2, scope: !12708, inlinedAt: !13839)
!13843 = !DILocation(line: 188, column: 2, scope: !12710, inlinedAt: !13839)
!13844 = !DILocation(line: 188, column: 2, scope: !12712, inlinedAt: !13839)
!13845 = !DILocation(line: 0, scope: !12710, inlinedAt: !13839)
!13846 = !DILocation(line: 189, column: 7, scope: !12715, inlinedAt: !13839)
!13847 = !DILocation(line: 189, column: 35, scope: !12715, inlinedAt: !13839)
!13848 = !DILocation(line: 189, column: 7, scope: !12716, inlinedAt: !13839)
!13849 = !DILocation(line: 190, column: 4, scope: !12720, inlinedAt: !13839)
!13850 = !DILocation(line: 192, column: 4, scope: !12720, inlinedAt: !13839)
!13851 = distinct !{!13851, !13843, !13852}
!13852 = !DILocation(line: 194, column: 2, scope: !12710, inlinedAt: !13839)
!13853 = !DILocation(line: 196, column: 2, scope: !12694, inlinedAt: !13839)
!13854 = !DILocation(line: 197, column: 1, scope: !12694, inlinedAt: !13839)
!13855 = !DILocation(line: 918, column: 4, scope: !13826)
!13856 = !DILocation(line: 919, column: 3, scope: !13826)
!13857 = !DILocation(line: 920, column: 22, scope: !13858)
!13858 = distinct !DILexicalBlock(scope: !13827, file: !2236, line: 919, column: 10)
!13859 = !DILocation(line: 0, scope: !12505, inlinedAt: !13860)
!13860 = distinct !DILocation(line: 906, column: 2, scope: !13820)
!13861 = !DILocation(line: 194, column: 2, scope: !12513, inlinedAt: !13860)
!13862 = !DILocation(line: 194, column: 2, scope: !12514, inlinedAt: !13860)
!13863 = !DILocation(line: 194, column: 2, scope: !12517, inlinedAt: !13860)
!13864 = !DILocation(line: 0, scope: !12519, inlinedAt: !13865)
!13865 = distinct !DILocation(line: 215, column: 2, scope: !12505, inlinedAt: !13860)
!13866 = !DILocation(line: 95, column: 2, scope: !12519, inlinedAt: !13865)
!13867 = !DILocation(line: 926, column: 2, scope: !13799)
!13868 = distinct !DISubprogram(name: "z_thread_priority_set", scope: !2236, file: !2236, line: 929, type: !13869, scopeLine: 930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !13871)
!13869 = !DISubroutineType(types: !13870)
!13870 = !{null, !2134, !107}
!13871 = !{!13872, !13873, !13874}
!13872 = !DILocalVariable(name: "thread", arg: 1, scope: !13868, file: !2236, line: 929, type: !2134)
!13873 = !DILocalVariable(name: "prio", arg: 2, scope: !13868, file: !2236, line: 929, type: !107)
!13874 = !DILocalVariable(name: "need_sched", scope: !13868, file: !2236, line: 931, type: !145)
!13875 = !DILocation(line: 0, scope: !13868)
!13876 = !DILocation(line: 931, column: 20, scope: !13868)
!13877 = !DILocation(line: 935, column: 17, scope: !13878)
!13878 = distinct !DILexicalBlock(scope: !13868, file: !2236, line: 935, column: 6)
!13879 = !DILocation(line: 935, column: 20, scope: !13878)
!13880 = !DILocation(line: 935, column: 35, scope: !13878)
!13881 = !DILocation(line: 935, column: 48, scope: !13878)
!13882 = !DILocation(line: 935, column: 6, scope: !13868)
!13883 = !DILocation(line: 936, column: 3, scope: !13884)
!13884 = distinct !DILexicalBlock(scope: !13878, file: !2236, line: 935, column: 55)
!13885 = !DILocation(line: 937, column: 2, scope: !13884)
!13886 = !DILocation(line: 938, column: 1, scope: !13868)
!13887 = distinct !DISubprogram(name: "k_sched_lock", scope: !2236, file: !2236, line: 987, type: !2909, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !13888)
!13888 = !{!13889, !13891}
!13889 = !DILocalVariable(name: "__i", scope: !13890, file: !2236, line: 989, type: !12463)
!13890 = distinct !DILexicalBlock(scope: !13887, file: !2236, line: 989, column: 2)
!13891 = !DILocalVariable(name: "__key", scope: !13890, file: !2236, line: 989, type: !12463)
!13892 = !DILocation(line: 0, scope: !13890)
!13893 = !DILocation(line: 0, scope: !12471, inlinedAt: !13894)
!13894 = distinct !DILocation(line: 989, column: 2, scope: !13890)
!13895 = !DILocation(line: 55, column: 2, scope: !12480, inlinedAt: !13896)
!13896 = distinct !DILocation(line: 145, column: 10, scope: !12471, inlinedAt: !13894)
!13897 = !DILocation(line: 0, scope: !12480, inlinedAt: !13896)
!13898 = !DILocation(line: 148, column: 2, scope: !12488, inlinedAt: !13894)
!13899 = !DILocation(line: 148, column: 2, scope: !12489, inlinedAt: !13894)
!13900 = !DILocation(line: 148, column: 2, scope: !12492, inlinedAt: !13894)
!13901 = !DILocation(line: 160, column: 2, scope: !12471, inlinedAt: !13894)
!13902 = !DILocation(line: 992, column: 3, scope: !13903)
!13903 = distinct !DILexicalBlock(scope: !13904, file: !2236, line: 989, column: 26)
!13904 = distinct !DILexicalBlock(scope: !13890, file: !2236, line: 989, column: 2)
!13905 = !DILocation(line: 0, scope: !12505, inlinedAt: !13906)
!13906 = distinct !DILocation(line: 989, column: 2, scope: !13904)
!13907 = !DILocation(line: 194, column: 2, scope: !12513, inlinedAt: !13906)
!13908 = !DILocation(line: 194, column: 2, scope: !12514, inlinedAt: !13906)
!13909 = !DILocation(line: 194, column: 2, scope: !12517, inlinedAt: !13906)
!13910 = !DILocation(line: 0, scope: !12519, inlinedAt: !13911)
!13911 = distinct !DILocation(line: 215, column: 2, scope: !12505, inlinedAt: !13906)
!13912 = !DILocation(line: 95, column: 2, scope: !12519, inlinedAt: !13911)
!13913 = !DILocation(line: 994, column: 1, scope: !13887)
!13914 = distinct !DISubprogram(name: "z_sched_lock", scope: !11653, file: !11653, line: 251, type: !2909, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !1949)
!13915 = !DILocation(line: 1031, column: 3, scope: !13198, inlinedAt: !13916)
!13916 = distinct !DILocation(line: 48, column: 10, scope: !13202, inlinedAt: !13917)
!13917 = distinct !DILocation(line: 253, column: 2, scope: !13918)
!13918 = distinct !DILexicalBlock(scope: !13919, file: !11653, line: 253, column: 2)
!13919 = distinct !DILexicalBlock(scope: !13914, file: !11653, line: 253, column: 2)
!13920 = !DILocation(line: 0, scope: !13198, inlinedAt: !13916)
!13921 = !DILocation(line: 48, column: 9, scope: !13202, inlinedAt: !13917)
!13922 = !DILocation(line: 253, column: 2, scope: !13919)
!13923 = !DILocation(line: 253, column: 2, scope: !13924)
!13924 = distinct !DILexicalBlock(scope: !13918, file: !11653, line: 253, column: 2)
!13925 = !DILocation(line: 254, column: 2, scope: !13926)
!13926 = distinct !DILexicalBlock(scope: !13927, file: !11653, line: 254, column: 2)
!13927 = distinct !DILexicalBlock(scope: !13914, file: !11653, line: 254, column: 2)
!13928 = !DILocation(line: 254, column: 2, scope: !13927)
!13929 = !DILocation(line: 254, column: 2, scope: !13930)
!13930 = distinct !DILexicalBlock(scope: !13926, file: !11653, line: 254, column: 2)
!13931 = !DILocation(line: 256, column: 2, scope: !13914)
!13932 = !DILocation(line: 258, column: 2, scope: !13933)
!13933 = distinct !DILexicalBlock(scope: !13914, file: !11653, line: 258, column: 2)
!13934 = !{i64 2154802604}
!13935 = !DILocation(line: 259, column: 1, scope: !13914)
!13936 = distinct !DISubprogram(name: "k_sched_unlock", scope: !2236, file: !2236, line: 996, type: !2909, scopeLine: 997, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !13937)
!13937 = !{!13938, !13940}
!13938 = !DILocalVariable(name: "__i", scope: !13939, file: !2236, line: 998, type: !12463)
!13939 = distinct !DILexicalBlock(scope: !13936, file: !2236, line: 998, column: 2)
!13940 = !DILocalVariable(name: "__key", scope: !13939, file: !2236, line: 998, type: !12463)
!13941 = !DILocation(line: 0, scope: !13939)
!13942 = !DILocation(line: 0, scope: !12471, inlinedAt: !13943)
!13943 = distinct !DILocation(line: 998, column: 2, scope: !13939)
!13944 = !DILocation(line: 55, column: 2, scope: !12480, inlinedAt: !13945)
!13945 = distinct !DILocation(line: 145, column: 10, scope: !12471, inlinedAt: !13943)
!13946 = !DILocation(line: 0, scope: !12480, inlinedAt: !13945)
!13947 = !DILocation(line: 148, column: 2, scope: !12488, inlinedAt: !13943)
!13948 = !DILocation(line: 148, column: 2, scope: !12489, inlinedAt: !13943)
!13949 = !DILocation(line: 148, column: 2, scope: !12492, inlinedAt: !13943)
!13950 = !DILocation(line: 160, column: 2, scope: !12471, inlinedAt: !13943)
!13951 = !DILocation(line: 999, column: 3, scope: !13952)
!13952 = distinct !DILexicalBlock(scope: !13953, file: !2236, line: 999, column: 3)
!13953 = distinct !DILexicalBlock(scope: !13954, file: !2236, line: 999, column: 3)
!13954 = distinct !DILexicalBlock(scope: !13955, file: !2236, line: 998, column: 26)
!13955 = distinct !DILexicalBlock(scope: !13939, file: !2236, line: 998, column: 2)
!13956 = !DILocation(line: 999, column: 3, scope: !13953)
!13957 = !DILocation(line: 999, column: 3, scope: !13958)
!13958 = distinct !DILexicalBlock(scope: !13952, file: !2236, line: 999, column: 3)
!13959 = !DILocation(line: 1031, column: 3, scope: !13198, inlinedAt: !13960)
!13960 = distinct !DILocation(line: 48, column: 10, scope: !13202, inlinedAt: !13961)
!13961 = distinct !DILocation(line: 1000, column: 3, scope: !13962)
!13962 = distinct !DILexicalBlock(scope: !13963, file: !2236, line: 1000, column: 3)
!13963 = distinct !DILexicalBlock(scope: !13954, file: !2236, line: 1000, column: 3)
!13964 = !DILocation(line: 0, scope: !13198, inlinedAt: !13960)
!13965 = !DILocation(line: 48, column: 9, scope: !13202, inlinedAt: !13961)
!13966 = !DILocation(line: 1000, column: 3, scope: !13963)
!13967 = !DILocation(line: 1000, column: 3, scope: !13968)
!13968 = distinct !DILexicalBlock(scope: !13962, file: !2236, line: 1000, column: 3)
!13969 = !DILocation(line: 1002, column: 5, scope: !13954)
!13970 = !DILocation(line: 1002, column: 20, scope: !13954)
!13971 = !DILocation(line: 1002, column: 3, scope: !13954)
!13972 = !DILocation(line: 1003, column: 3, scope: !13954)
!13973 = !DILocation(line: 0, scope: !12505, inlinedAt: !13974)
!13974 = distinct !DILocation(line: 998, column: 2, scope: !13955)
!13975 = !DILocation(line: 194, column: 2, scope: !12513, inlinedAt: !13974)
!13976 = !DILocation(line: 194, column: 2, scope: !12514, inlinedAt: !13974)
!13977 = !DILocation(line: 194, column: 2, scope: !12517, inlinedAt: !13974)
!13978 = !DILocation(line: 0, scope: !12519, inlinedAt: !13979)
!13979 = distinct !DILocation(line: 215, column: 2, scope: !12505, inlinedAt: !13974)
!13980 = !DILocation(line: 95, column: 2, scope: !12519, inlinedAt: !13979)
!13981 = !DILocation(line: 1011, column: 2, scope: !13936)
!13982 = !DILocation(line: 1012, column: 1, scope: !13936)
!13983 = distinct !DISubprogram(name: "z_swap_next_thread", scope: !2236, file: !2236, line: 1014, type: !12820, scopeLine: 1015, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !1949)
!13984 = !DILocation(line: 1028, column: 25, scope: !13983)
!13985 = !DILocation(line: 1028, column: 2, scope: !13983)
!13986 = distinct !DISubprogram(name: "z_priq_rb_lessthan", scope: !2236, file: !2236, line: 1155, type: !13987, scopeLine: 1156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !13989)
!13987 = !DISubroutineType(types: !13988)
!13988 = !{!145, !2163, !2163}
!13989 = !{!13990, !13991, !13992, !13993, !13994}
!13990 = !DILocalVariable(name: "a", arg: 1, scope: !13986, file: !2236, line: 1155, type: !2163)
!13991 = !DILocalVariable(name: "b", arg: 2, scope: !13986, file: !2236, line: 1155, type: !2163)
!13992 = !DILocalVariable(name: "thread_a", scope: !13986, file: !2236, line: 1157, type: !2134)
!13993 = !DILocalVariable(name: "thread_b", scope: !13986, file: !2236, line: 1157, type: !2134)
!13994 = !DILocalVariable(name: "cmp", scope: !13986, file: !2236, line: 1158, type: !1149)
!13995 = !DILocation(line: 0, scope: !13986)
!13996 = !DILocation(line: 1160, column: 13, scope: !13986)
!13997 = !DILocation(line: 1161, column: 13, scope: !13986)
!13998 = !DILocation(line: 1163, column: 8, scope: !13986)
!13999 = !DILocation(line: 1165, column: 10, scope: !14000)
!14000 = distinct !DILexicalBlock(scope: !13986, file: !2236, line: 1165, column: 6)
!14001 = !DILocation(line: 1165, column: 6, scope: !13986)
!14002 = !DILocation(line: 1167, column: 17, scope: !14003)
!14003 = distinct !DILexicalBlock(scope: !14000, file: !2236, line: 1167, column: 13)
!14004 = !DILocation(line: 1167, column: 13, scope: !14000)
!14005 = !DILocation(line: 1170, column: 25, scope: !14006)
!14006 = distinct !DILexicalBlock(scope: !14003, file: !2236, line: 1169, column: 9)
!14007 = !DILocation(line: 1170, column: 52, scope: !14006)
!14008 = !DILocation(line: 1170, column: 35, scope: !14006)
!14009 = !DILocation(line: 1170, column: 3, scope: !14006)
!14010 = !DILocation(line: 0, scope: !14000)
!14011 = !DILocation(line: 1173, column: 1, scope: !13986)
!14012 = distinct !DISubprogram(name: "z_priq_rb_add", scope: !2236, file: !2236, line: 1175, type: !14013, scopeLine: 1176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !14028)
!14013 = !DISubroutineType(types: !14014)
!14014 = !{null, !14015, !2134}
!14015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14016, size: 32)
!14016 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_rb", file: !14017, line: 37, size: 128, elements: !14018)
!14017 = !DIFile(filename: "zephyr/include/zephyr/kernel/sched_priq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14018 = !{!14019, !14027}
!14019 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !14016, file: !14017, line: 38, baseType: !14020, size: 96)
!14020 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbtree", file: !742, line: 83, size: 96, elements: !14021)
!14021 = !{!14022, !14023, !14026}
!14022 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !14020, file: !742, line: 84, baseType: !2163, size: 32)
!14023 = !DIDerivedType(tag: DW_TAG_member, name: "lessthan_fn", scope: !14020, file: !742, line: 85, baseType: !14024, size: 32, offset: 32)
!14024 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_lessthan_t", file: !742, line: 81, baseType: !14025)
!14025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13987, size: 32)
!14026 = !DIDerivedType(tag: DW_TAG_member, name: "max_depth", scope: !14020, file: !742, line: 86, baseType: !107, size: 32, offset: 64)
!14027 = !DIDerivedType(tag: DW_TAG_member, name: "next_order_key", scope: !14016, file: !14017, line: 39, baseType: !107, size: 32, offset: 96)
!14028 = !{!14029, !14030, !14031, !14032, !14041}
!14029 = !DILocalVariable(name: "pq", arg: 1, scope: !14012, file: !2236, line: 1175, type: !14015)
!14030 = !DILocalVariable(name: "thread", arg: 2, scope: !14012, file: !2236, line: 1175, type: !2134)
!14031 = !DILocalVariable(name: "t", scope: !14012, file: !2236, line: 1177, type: !2134)
!14032 = !DILocalVariable(name: "__f", scope: !14033, file: !2236, line: 1190, type: !14036)
!14033 = distinct !DILexicalBlock(scope: !14034, file: !2236, line: 1190, column: 3)
!14034 = distinct !DILexicalBlock(scope: !14035, file: !2236, line: 1189, column: 27)
!14035 = distinct !DILexicalBlock(scope: !14012, file: !2236, line: 1189, column: 6)
!14036 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rb_foreach", file: !742, line: 155, size: 96, elements: !14037)
!14037 = !{!14038, !14039, !14040}
!14038 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !14036, file: !742, line: 156, baseType: !2231, size: 32)
!14039 = !DIDerivedType(tag: DW_TAG_member, name: "is_left", scope: !14036, file: !742, line: 157, baseType: !194, size: 32, offset: 32)
!14040 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !14036, file: !742, line: 158, baseType: !1149, size: 32, offset: 64)
!14041 = !DILocalVariable(name: "n", scope: !14042, file: !2236, line: 1190, type: !2163)
!14042 = distinct !DILexicalBlock(scope: !14043, file: !2236, line: 1190, column: 3)
!14043 = distinct !DILexicalBlock(scope: !14033, file: !2236, line: 1190, column: 3)
!14044 = !DILocation(line: 0, scope: !14012)
!14045 = !DILocation(line: 1179, column: 2, scope: !14046)
!14046 = distinct !DILexicalBlock(scope: !14047, file: !2236, line: 1179, column: 2)
!14047 = distinct !DILexicalBlock(scope: !14012, file: !2236, line: 1179, column: 2)
!14048 = !DILocation(line: 1179, column: 2, scope: !14047)
!14049 = !DILocation(line: 1179, column: 2, scope: !14050)
!14050 = distinct !DILexicalBlock(scope: !14046, file: !2236, line: 1179, column: 2)
!14051 = !DILocation(line: 1181, column: 31, scope: !14012)
!14052 = !DILocation(line: 1181, column: 45, scope: !14012)
!14053 = !DILocation(line: 1181, column: 15, scope: !14012)
!14054 = !DILocation(line: 1181, column: 25, scope: !14012)
!14055 = !DILocation(line: 1189, column: 11, scope: !14035)
!14056 = !DILocation(line: 1189, column: 7, scope: !14035)
!14057 = !DILocation(line: 1189, column: 6, scope: !14012)
!14058 = !DILocation(line: 1190, column: 3, scope: !14033)
!14059 = !DILocation(line: 1190, column: 3, scope: !14042)
!14060 = !DILocation(line: 0, scope: !14042)
!14061 = !DILocation(line: 1190, column: 3, scope: !14043)
!14062 = !DILocation(line: 1193, column: 2, scope: !14034)
!14063 = !DILocation(line: 1191, column: 42, scope: !14064)
!14064 = distinct !DILexicalBlock(scope: !14043, file: !2236, line: 1190, column: 54)
!14065 = !DILocation(line: 1191, column: 12, scope: !14064)
!14066 = !DILocation(line: 1191, column: 22, scope: !14064)
!14067 = distinct !{!14067, !14058, !14068}
!14068 = !DILocation(line: 1192, column: 3, scope: !14033)
!14069 = !DILocation(line: 1195, column: 17, scope: !14012)
!14070 = !DILocation(line: 1195, column: 37, scope: !14012)
!14071 = !DILocation(line: 1195, column: 2, scope: !14012)
!14072 = !DILocation(line: 1196, column: 1, scope: !14012)
!14073 = !DISubprogram(name: "z_rb_foreach_next", scope: !742, file: !742, line: 176, type: !14074, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1949)
!14074 = !DISubroutineType(types: !14075)
!14075 = !{!2163, !14076, !14077}
!14076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14020, size: 32)
!14077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14036, size: 32)
!14078 = !DISubprogram(name: "rb_insert", scope: !742, file: !742, line: 105, type: !14079, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1949)
!14079 = !DISubroutineType(types: !14080)
!14080 = !{null, !14076, !2163}
!14081 = distinct !DISubprogram(name: "z_priq_rb_remove", scope: !2236, file: !2236, line: 1198, type: !14013, scopeLine: 1199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !14082)
!14082 = !{!14083, !14084}
!14083 = !DILocalVariable(name: "pq", arg: 1, scope: !14081, file: !2236, line: 1198, type: !14015)
!14084 = !DILocalVariable(name: "thread", arg: 2, scope: !14081, file: !2236, line: 1198, type: !2134)
!14085 = !DILocation(line: 0, scope: !14081)
!14086 = !DILocation(line: 1200, column: 2, scope: !14087)
!14087 = distinct !DILexicalBlock(scope: !14088, file: !2236, line: 1200, column: 2)
!14088 = distinct !DILexicalBlock(scope: !14081, file: !2236, line: 1200, column: 2)
!14089 = !DILocation(line: 1200, column: 2, scope: !14088)
!14090 = !DILocation(line: 1200, column: 2, scope: !14091)
!14091 = distinct !DILexicalBlock(scope: !14087, file: !2236, line: 1200, column: 2)
!14092 = !DILocation(line: 1202, column: 17, scope: !14081)
!14093 = !DILocation(line: 1202, column: 37, scope: !14081)
!14094 = !DILocation(line: 1202, column: 2, scope: !14081)
!14095 = !DILocation(line: 1204, column: 16, scope: !14096)
!14096 = distinct !DILexicalBlock(scope: !14081, file: !2236, line: 1204, column: 6)
!14097 = !DILocation(line: 1204, column: 7, scope: !14096)
!14098 = !DILocation(line: 1204, column: 6, scope: !14081)
!14099 = !DILocation(line: 1205, column: 7, scope: !14100)
!14100 = distinct !DILexicalBlock(scope: !14096, file: !2236, line: 1204, column: 22)
!14101 = !DILocation(line: 1205, column: 22, scope: !14100)
!14102 = !DILocation(line: 1206, column: 2, scope: !14100)
!14103 = !DILocation(line: 1207, column: 1, scope: !14081)
!14104 = !DISubprogram(name: "rb_remove", scope: !742, file: !742, line: 110, type: !14079, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1949)
!14105 = distinct !DISubprogram(name: "z_priq_rb_best", scope: !2236, file: !2236, line: 1209, type: !14106, scopeLine: 1210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !14108)
!14106 = !DISubroutineType(types: !14107)
!14107 = !{!2134, !14015}
!14108 = !{!14109, !14110, !14111}
!14109 = !DILocalVariable(name: "pq", arg: 1, scope: !14105, file: !2236, line: 1209, type: !14015)
!14110 = !DILocalVariable(name: "thread", scope: !14105, file: !2236, line: 1211, type: !2134)
!14111 = !DILocalVariable(name: "n", scope: !14105, file: !2236, line: 1212, type: !2163)
!14112 = !DILocation(line: 0, scope: !14105)
!14113 = !DILocation(line: 1212, column: 37, scope: !14105)
!14114 = !DILocation(line: 1212, column: 21, scope: !14105)
!14115 = !DILocation(line: 1217, column: 2, scope: !14105)
!14116 = distinct !DISubprogram(name: "rb_get_min", scope: !742, file: !742, line: 115, type: !14117, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !14119)
!14117 = !DISubroutineType(types: !14118)
!14118 = !{!2163, !14076}
!14119 = !{!14120}
!14120 = !DILocalVariable(name: "tree", arg: 1, scope: !14116, file: !742, line: 115, type: !14076)
!14121 = !DILocation(line: 0, scope: !14116)
!14122 = !DILocation(line: 117, column: 9, scope: !14116)
!14123 = !DILocation(line: 117, column: 2, scope: !14116)
!14124 = !DISubprogram(name: "z_rb_get_minmax", scope: !742, file: !742, line: 100, type: !14125, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1949)
!14125 = !DISubroutineType(types: !14126)
!14126 = !{!2163, !14076, !195}
!14127 = distinct !DISubprogram(name: "z_priq_mq_best", scope: !2236, file: !2236, line: 1246, type: !14128, scopeLine: 1247, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !14136)
!14128 = !DISubroutineType(types: !14129)
!14129 = !{!2134, !14130}
!14130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14131, size: 32)
!14131 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_mq", file: !14017, line: 53, size: 2080, elements: !14132)
!14132 = !{!14133, !14135}
!14133 = !DIDerivedType(tag: DW_TAG_member, name: "queues", scope: !14131, file: !14017, line: 54, baseType: !14134, size: 2048)
!14134 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2170, size: 2048, elements: !584)
!14135 = !DIDerivedType(tag: DW_TAG_member, name: "bitmask", scope: !14131, file: !14017, line: 55, baseType: !32, size: 32, offset: 2048)
!14136 = !{!14137, !14138, !14139, !14140}
!14137 = !DILocalVariable(name: "pq", arg: 1, scope: !14127, file: !2236, line: 1246, type: !14130)
!14138 = !DILocalVariable(name: "thread", scope: !14127, file: !2236, line: 1252, type: !2134)
!14139 = !DILocalVariable(name: "l", scope: !14127, file: !2236, line: 1253, type: !12697)
!14140 = !DILocalVariable(name: "n", scope: !14127, file: !2236, line: 1254, type: !2232)
!14141 = !DILocation(line: 0, scope: !14127)
!14142 = !DILocation(line: 1248, column: 11, scope: !14143)
!14143 = distinct !DILexicalBlock(scope: !14127, file: !2236, line: 1248, column: 6)
!14144 = !DILocation(line: 1248, column: 7, scope: !14143)
!14145 = !DILocation(line: 1248, column: 6, scope: !14127)
!14146 = !DILocation(line: 1253, column: 31, scope: !14127)
!14147 = !{i32 0, i32 33}
!14148 = !DILocation(line: 1253, column: 20, scope: !14127)
!14149 = !DILocation(line: 1254, column: 19, scope: !14127)
!14150 = !DILocation(line: 1260, column: 1, scope: !14127)
!14151 = distinct !DISubprogram(name: "z_unpend_all", scope: !2236, file: !2236, line: 1262, type: !14152, scopeLine: 1263, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !14154)
!14152 = !DISubroutineType(types: !14153)
!14153 = !{!107, !2165}
!14154 = !{!14155, !14156, !14157}
!14155 = !DILocalVariable(name: "wait_q", arg: 1, scope: !14151, file: !2236, line: 1262, type: !2165)
!14156 = !DILocalVariable(name: "need_sched", scope: !14151, file: !2236, line: 1264, type: !107)
!14157 = !DILocalVariable(name: "thread", scope: !14151, file: !2236, line: 1265, type: !2134)
!14158 = !DILocation(line: 0, scope: !14151)
!14159 = !DILocation(line: 1267, column: 19, scope: !14151)
!14160 = !DILocation(line: 1267, column: 41, scope: !14151)
!14161 = !DILocation(line: 1267, column: 2, scope: !14151)
!14162 = !DILocation(line: 1268, column: 3, scope: !14163)
!14163 = distinct !DILexicalBlock(scope: !14151, file: !2236, line: 1267, column: 50)
!14164 = !DILocation(line: 1269, column: 3, scope: !14163)
!14165 = distinct !{!14165, !14161, !14166}
!14166 = !DILocation(line: 1271, column: 2, scope: !14151)
!14167 = !DILocation(line: 1273, column: 2, scope: !14151)
!14168 = distinct !DISubprogram(name: "z_waitq_head", scope: !12008, file: !12008, line: 52, type: !13698, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !14169)
!14169 = !{!14170}
!14170 = !DILocalVariable(name: "w", arg: 1, scope: !14168, file: !12008, line: 52, type: !2165)
!14171 = !DILocation(line: 0, scope: !14168)
!14172 = !DILocation(line: 54, column: 52, scope: !14168)
!14173 = !DILocation(line: 54, column: 28, scope: !14168)
!14174 = !DILocation(line: 54, column: 9, scope: !14168)
!14175 = !DILocation(line: 54, column: 2, scope: !14168)
!14176 = distinct !DISubprogram(name: "init_ready_q", scope: !2236, file: !2236, line: 1276, type: !14177, scopeLine: 1277, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !14184)
!14177 = !DISubroutineType(types: !14178)
!14178 = !{null, !14179}
!14179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14180, size: 32)
!14180 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !752, line: 83, size: 96, elements: !14181)
!14181 = !{!14182, !14183}
!14182 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !14180, file: !752, line: 86, baseType: !2134, size: 32)
!14183 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !14180, file: !752, line: 90, baseType: !2170, size: 64, offset: 32)
!14184 = !{!14185}
!14185 = !DILocalVariable(name: "rq", arg: 1, scope: !14176, file: !2236, line: 1276, type: !14179)
!14186 = !DILocation(line: 0, scope: !14176)
!14187 = !DILocation(line: 1289, column: 22, scope: !14176)
!14188 = !DILocation(line: 1289, column: 2, scope: !14176)
!14189 = !DILocation(line: 1291, column: 1, scope: !14176)
!14190 = distinct !DISubprogram(name: "sys_dlist_init", scope: !726, file: !726, line: 197, type: !14191, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !14193)
!14191 = !DISubroutineType(types: !14192)
!14192 = !{null, !12697}
!14193 = !{!14194}
!14194 = !DILocalVariable(name: "list", arg: 1, scope: !14190, file: !726, line: 197, type: !12697)
!14195 = !DILocation(line: 0, scope: !14190)
!14196 = !DILocation(line: 199, column: 8, scope: !14190)
!14197 = !DILocation(line: 199, column: 13, scope: !14190)
!14198 = !DILocation(line: 200, column: 8, scope: !14190)
!14199 = !DILocation(line: 200, column: 13, scope: !14190)
!14200 = !DILocation(line: 201, column: 1, scope: !14190)
!14201 = distinct !DISubprogram(name: "z_sched_init", scope: !2236, file: !2236, line: 1293, type: !2909, scopeLine: 1294, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !1949)
!14202 = !DILocation(line: 1302, column: 2, scope: !14201)
!14203 = !DILocation(line: 1306, column: 2, scope: !14201)
!14204 = !DILocation(line: 1309, column: 1, scope: !14201)
!14205 = distinct !DISubprogram(name: "z_impl_k_thread_priority_get", scope: !2236, file: !2236, line: 1311, type: !14206, scopeLine: 1312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !14209)
!14206 = !DISubroutineType(types: !14207)
!14207 = !{!107, !14208}
!14208 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !716, line: 347, baseType: !2134)
!14209 = !{!14210}
!14210 = !DILocalVariable(name: "thread", arg: 1, scope: !14205, file: !2236, line: 1311, type: !14208)
!14211 = !DILocation(line: 0, scope: !14205)
!14212 = !DILocation(line: 1313, column: 22, scope: !14205)
!14213 = !DILocation(line: 1313, column: 9, scope: !14205)
!14214 = !DILocation(line: 1313, column: 2, scope: !14205)
!14215 = distinct !DISubprogram(name: "z_impl_k_thread_priority_set", scope: !2236, file: !2236, line: 1325, type: !14216, scopeLine: 1326, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !14218)
!14216 = !DISubroutineType(types: !14217)
!14217 = !{null, !14208, !107}
!14218 = !{!14219, !14220, !14221}
!14219 = !DILocalVariable(name: "thread", arg: 1, scope: !14215, file: !2236, line: 1325, type: !14208)
!14220 = !DILocalVariable(name: "prio", arg: 2, scope: !14215, file: !2236, line: 1325, type: !107)
!14221 = !DILocalVariable(name: "th", scope: !14215, file: !2236, line: 1334, type: !2134)
!14222 = !DILocation(line: 0, scope: !14215)
!14223 = !DILocation(line: 1331, column: 2, scope: !14224)
!14224 = distinct !DILexicalBlock(scope: !14225, file: !2236, line: 1331, column: 2)
!14225 = distinct !DILexicalBlock(scope: !14226, file: !2236, line: 1331, column: 2)
!14226 = distinct !DILexicalBlock(scope: !14215, file: !2236, line: 1331, column: 2)
!14227 = !DILocation(line: 1331, column: 2, scope: !14228)
!14228 = distinct !DILexicalBlock(scope: !14224, file: !2236, line: 1331, column: 2)
!14229 = !DILocation(line: 1031, column: 3, scope: !13198, inlinedAt: !14230)
!14230 = distinct !DILocation(line: 48, column: 10, scope: !13202, inlinedAt: !14231)
!14231 = distinct !DILocation(line: 1332, column: 2, scope: !14232)
!14232 = distinct !DILexicalBlock(scope: !14233, file: !2236, line: 1332, column: 2)
!14233 = distinct !DILexicalBlock(scope: !14215, file: !2236, line: 1332, column: 2)
!14234 = !DILocation(line: 0, scope: !13198, inlinedAt: !14230)
!14235 = !DILocation(line: 48, column: 9, scope: !13202, inlinedAt: !14231)
!14236 = !DILocation(line: 1332, column: 2, scope: !14233)
!14237 = !DILocation(line: 1332, column: 2, scope: !14238)
!14238 = distinct !DILexicalBlock(scope: !14232, file: !2236, line: 1332, column: 2)
!14239 = !DILocation(line: 1336, column: 2, scope: !14215)
!14240 = !DILocation(line: 1337, column: 1, scope: !14215)
!14241 = distinct !DISubprogram(name: "k_can_yield", scope: !2236, file: !2236, line: 1384, type: !6997, scopeLine: 1385, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !1949)
!14242 = !DILocation(line: 1386, column: 11, scope: !14241)
!14243 = !DILocation(line: 1386, column: 29, scope: !14241)
!14244 = !DILocation(line: 1386, column: 32, scope: !14241)
!14245 = !DILocation(line: 1386, column: 46, scope: !14241)
!14246 = !DILocation(line: 1387, column: 28, scope: !14241)
!14247 = !DILocation(line: 1387, column: 4, scope: !14241)
!14248 = !DILocation(line: 1386, column: 2, scope: !14241)
!14249 = distinct !DISubprogram(name: "k_is_pre_kernel", scope: !804, file: !804, line: 989, type: !6997, scopeLine: 990, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !1949)
!14250 = !DILocation(line: 993, column: 10, scope: !14249)
!14251 = !DILocation(line: 993, column: 2, scope: !14249)
!14252 = distinct !DISubprogram(name: "z_impl_k_yield", scope: !2236, file: !2236, line: 1390, type: !2909, scopeLine: 1391, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !14253)
!14253 = !{!14254}
!14254 = !DILocalVariable(name: "key", scope: !14252, file: !2236, line: 1396, type: !12463)
!14255 = !DILocation(line: 1031, column: 3, scope: !13198, inlinedAt: !14256)
!14256 = distinct !DILocation(line: 48, column: 10, scope: !13202, inlinedAt: !14257)
!14257 = distinct !DILocation(line: 1392, column: 2, scope: !14258)
!14258 = distinct !DILexicalBlock(scope: !14259, file: !2236, line: 1392, column: 2)
!14259 = distinct !DILexicalBlock(scope: !14252, file: !2236, line: 1392, column: 2)
!14260 = !DILocation(line: 0, scope: !13198, inlinedAt: !14256)
!14261 = !DILocation(line: 48, column: 9, scope: !13202, inlinedAt: !14257)
!14262 = !DILocation(line: 1392, column: 2, scope: !14259)
!14263 = !DILocation(line: 1392, column: 2, scope: !14264)
!14264 = distinct !DILexicalBlock(scope: !14258, file: !2236, line: 1392, column: 2)
!14265 = !DILocation(line: 0, scope: !12471, inlinedAt: !14266)
!14266 = distinct !DILocation(line: 1396, column: 25, scope: !14252)
!14267 = !DILocation(line: 55, column: 2, scope: !12480, inlinedAt: !14268)
!14268 = distinct !DILocation(line: 145, column: 10, scope: !12471, inlinedAt: !14266)
!14269 = !DILocation(line: 0, scope: !12480, inlinedAt: !14268)
!14270 = !DILocation(line: 148, column: 2, scope: !12488, inlinedAt: !14266)
!14271 = !DILocation(line: 148, column: 2, scope: !12489, inlinedAt: !14266)
!14272 = !DILocation(line: 148, column: 2, scope: !12492, inlinedAt: !14266)
!14273 = !DILocation(line: 160, column: 2, scope: !12471, inlinedAt: !14266)
!14274 = !DILocation(line: 0, scope: !14252)
!14275 = !DILocation(line: 1400, column: 18, scope: !14276)
!14276 = distinct !DILexicalBlock(scope: !14277, file: !2236, line: 1399, column: 36)
!14277 = distinct !DILexicalBlock(scope: !14252, file: !2236, line: 1398, column: 6)
!14278 = !DILocation(line: 0, scope: !12663, inlinedAt: !14279)
!14279 = distinct !DILocation(line: 1400, column: 3, scope: !14276)
!14280 = !DILocation(line: 266, column: 15, scope: !12663, inlinedAt: !14279)
!14281 = !DILocation(line: 266, column: 28, scope: !12663, inlinedAt: !14279)
!14282 = !DILocation(line: 0, scope: !12671, inlinedAt: !14283)
!14283 = distinct !DILocation(line: 268, column: 3, scope: !12675, inlinedAt: !14279)
!14284 = !DILocation(line: 234, column: 2, scope: !12671, inlinedAt: !14283)
!14285 = !DILocation(line: 1402, column: 15, scope: !14252)
!14286 = !DILocation(line: 0, scope: !12680, inlinedAt: !14287)
!14287 = distinct !DILocation(line: 1402, column: 2, scope: !14252)
!14288 = !DILocation(line: 252, column: 15, scope: !12680, inlinedAt: !14287)
!14289 = !DILocation(line: 252, column: 28, scope: !12680, inlinedAt: !14287)
!14290 = !DILocation(line: 0, scope: !12687, inlinedAt: !14291)
!14291 = distinct !DILocation(line: 254, column: 3, scope: !12691, inlinedAt: !14287)
!14292 = !DILocation(line: 0, scope: !12694, inlinedAt: !14293)
!14293 = distinct !DILocation(line: 229, column: 2, scope: !12687, inlinedAt: !14291)
!14294 = !DILocation(line: 186, column: 2, scope: !12704, inlinedAt: !14293)
!14295 = !DILocation(line: 186, column: 2, scope: !12705, inlinedAt: !14293)
!14296 = !DILocation(line: 186, column: 2, scope: !12708, inlinedAt: !14293)
!14297 = !DILocation(line: 188, column: 2, scope: !12710, inlinedAt: !14293)
!14298 = !DILocation(line: 188, column: 2, scope: !12712, inlinedAt: !14293)
!14299 = !DILocation(line: 0, scope: !12710, inlinedAt: !14293)
!14300 = !DILocation(line: 189, column: 7, scope: !12715, inlinedAt: !14293)
!14301 = !DILocation(line: 189, column: 35, scope: !12715, inlinedAt: !14293)
!14302 = !DILocation(line: 189, column: 7, scope: !12716, inlinedAt: !14293)
!14303 = !DILocation(line: 191, column: 21, scope: !12720, inlinedAt: !14293)
!14304 = !DILocation(line: 190, column: 4, scope: !12720, inlinedAt: !14293)
!14305 = !DILocation(line: 192, column: 4, scope: !12720, inlinedAt: !14293)
!14306 = distinct !{!14306, !14297, !14307}
!14307 = !DILocation(line: 194, column: 2, scope: !12710, inlinedAt: !14293)
!14308 = !DILocation(line: 196, column: 37, scope: !12694, inlinedAt: !14293)
!14309 = !DILocation(line: 196, column: 2, scope: !12694, inlinedAt: !14293)
!14310 = !DILocation(line: 197, column: 1, scope: !12694, inlinedAt: !14293)
!14311 = !DILocation(line: 1403, column: 2, scope: !14252)
!14312 = !DILocation(line: 0, scope: !13149, inlinedAt: !14313)
!14313 = distinct !DILocation(line: 1404, column: 2, scope: !14252)
!14314 = !DILocation(line: 0, scope: !13158, inlinedAt: !14315)
!14315 = distinct !DILocation(line: 195, column: 2, scope: !13149, inlinedAt: !14313)
!14316 = !DILocation(line: 225, column: 2, scope: !13165, inlinedAt: !14315)
!14317 = !DILocation(line: 225, column: 2, scope: !13166, inlinedAt: !14315)
!14318 = !DILocation(line: 225, column: 2, scope: !13169, inlinedAt: !14315)
!14319 = !DILocation(line: 196, column: 9, scope: !13149, inlinedAt: !14313)
!14320 = !DILocation(line: 1405, column: 1, scope: !14252)
!14321 = distinct !DISubprogram(name: "z_impl_k_sleep", scope: !2236, file: !2236, line: 1459, type: !14322, scopeLine: 1460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !14324)
!14322 = !DISubroutineType(types: !14323)
!14323 = !{!1149, !13359}
!14324 = !{!14325, !14326, !14327}
!14325 = !DILocalVariable(name: "timeout", arg: 1, scope: !14321, file: !2236, line: 1459, type: !13359)
!14326 = !DILocalVariable(name: "ticks", scope: !14321, file: !2236, line: 1461, type: !692)
!14327 = !DILocalVariable(name: "ret", scope: !14321, file: !2236, line: 1480, type: !1149)
!14328 = !DILocation(line: 0, scope: !14321)
!14329 = !DILocation(line: 1031, column: 3, scope: !13198, inlinedAt: !14330)
!14330 = distinct !DILocation(line: 48, column: 10, scope: !13202, inlinedAt: !14331)
!14331 = distinct !DILocation(line: 1463, column: 2, scope: !14332)
!14332 = distinct !DILexicalBlock(scope: !14333, file: !2236, line: 1463, column: 2)
!14333 = distinct !DILexicalBlock(scope: !14321, file: !2236, line: 1463, column: 2)
!14334 = !DILocation(line: 0, scope: !13198, inlinedAt: !14330)
!14335 = !DILocation(line: 48, column: 9, scope: !13202, inlinedAt: !14331)
!14336 = !DILocation(line: 1463, column: 2, scope: !14333)
!14337 = !DILocation(line: 1463, column: 2, scope: !14338)
!14338 = distinct !DILexicalBlock(scope: !14332, file: !2236, line: 1463, column: 2)
!14339 = !DILocation(line: 1468, column: 6, scope: !14340)
!14340 = distinct !DILexicalBlock(scope: !14321, file: !2236, line: 1468, column: 6)
!14341 = !DILocation(line: 1468, column: 6, scope: !14321)
!14342 = !DILocation(line: 1469, column: 20, scope: !14343)
!14343 = distinct !DILexicalBlock(scope: !14340, file: !2236, line: 1468, column: 40)
!14344 = !DILocation(line: 1469, column: 3, scope: !14343)
!14345 = !DILocation(line: 1473, column: 3, scope: !14343)
!14346 = !DILocation(line: 1478, column: 10, scope: !14321)
!14347 = !DILocation(line: 1480, column: 16, scope: !14321)
!14348 = !DILocation(line: 1485, column: 1, scope: !14321)
!14349 = distinct !DISubprogram(name: "k_thread_suspend", scope: !4221, file: !4221, line: 310, type: !14350, scopeLine: 311, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !14352)
!14350 = !DISubroutineType(types: !14351)
!14351 = !{null, !14208}
!14352 = !{!14353}
!14353 = !DILocalVariable(name: "thread", arg: 1, scope: !14349, file: !4221, line: 310, type: !14208)
!14354 = !DILocation(line: 0, scope: !14349)
!14355 = !DILocation(line: 319, column: 2, scope: !14356)
!14356 = distinct !DILexicalBlock(scope: !14349, file: !4221, line: 319, column: 2)
!14357 = !{i64 2151089096}
!14358 = !DILocation(line: 320, column: 2, scope: !14349)
!14359 = !DILocation(line: 321, column: 1, scope: !14349)
!14360 = distinct !DISubprogram(name: "z_tick_sleep", scope: !2236, file: !2236, line: 1415, type: !14361, scopeLine: 1416, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !14363)
!14361 = !DISubroutineType(types: !14362)
!14362 = !{!1149, !692}
!14363 = !{!14364, !14365, !14366, !14367}
!14364 = !DILocalVariable(name: "ticks", arg: 1, scope: !14360, file: !2236, line: 1415, type: !692)
!14365 = !DILocalVariable(name: "expected_wakeup_ticks", scope: !14360, file: !2236, line: 1418, type: !152)
!14366 = !DILocalVariable(name: "timeout", scope: !14360, file: !2236, line: 1430, type: !13359)
!14367 = !DILocalVariable(name: "key", scope: !14360, file: !2236, line: 1437, type: !12463)
!14368 = !DILocation(line: 0, scope: !14360)
!14369 = !DILocation(line: 1031, column: 3, scope: !13198, inlinedAt: !14370)
!14370 = distinct !DILocation(line: 48, column: 10, scope: !13202, inlinedAt: !14371)
!14371 = distinct !DILocation(line: 1420, column: 2, scope: !14372)
!14372 = distinct !DILexicalBlock(scope: !14373, file: !2236, line: 1420, column: 2)
!14373 = distinct !DILexicalBlock(scope: !14360, file: !2236, line: 1420, column: 2)
!14374 = !DILocation(line: 0, scope: !13198, inlinedAt: !14370)
!14375 = !DILocation(line: 48, column: 9, scope: !13202, inlinedAt: !14371)
!14376 = !DILocation(line: 1420, column: 2, scope: !14373)
!14377 = !DILocation(line: 1420, column: 2, scope: !14378)
!14378 = distinct !DILexicalBlock(scope: !14372, file: !2236, line: 1420, column: 2)
!14379 = !DILocation(line: 1425, column: 12, scope: !14380)
!14380 = distinct !DILexicalBlock(scope: !14360, file: !2236, line: 1425, column: 6)
!14381 = !DILocation(line: 1425, column: 6, scope: !14360)
!14382 = !DILocation(line: 1426, column: 3, scope: !14383)
!14383 = distinct !DILexicalBlock(scope: !14380, file: !2236, line: 1425, column: 18)
!14384 = !DILocation(line: 1427, column: 3, scope: !14383)
!14385 = !DILocation(line: 1431, column: 24, scope: !14386)
!14386 = distinct !DILexicalBlock(scope: !14360, file: !2236, line: 1431, column: 6)
!14387 = !DILocation(line: 1431, column: 6, scope: !14360)
!14388 = !DILocation(line: 1432, column: 35, scope: !14389)
!14389 = distinct !DILexicalBlock(scope: !14386, file: !2236, line: 1431, column: 30)
!14390 = !DILocation(line: 1432, column: 27, scope: !14389)
!14391 = !DILocation(line: 1433, column: 2, scope: !14389)
!14392 = !DILocation(line: 1434, column: 27, scope: !14393)
!14393 = distinct !DILexicalBlock(scope: !14386, file: !2236, line: 1433, column: 9)
!14394 = !DILocation(line: 0, scope: !14386)
!14395 = !DILocation(line: 0, scope: !12471, inlinedAt: !14396)
!14396 = distinct !DILocation(line: 1437, column: 25, scope: !14360)
!14397 = !DILocation(line: 55, column: 2, scope: !12480, inlinedAt: !14398)
!14398 = distinct !DILocation(line: 145, column: 10, scope: !12471, inlinedAt: !14396)
!14399 = !DILocation(line: 0, scope: !12480, inlinedAt: !14398)
!14400 = !DILocation(line: 148, column: 2, scope: !12488, inlinedAt: !14396)
!14401 = !DILocation(line: 148, column: 2, scope: !12489, inlinedAt: !14396)
!14402 = !DILocation(line: 148, column: 2, scope: !12492, inlinedAt: !14396)
!14403 = !DILocation(line: 160, column: 2, scope: !12471, inlinedAt: !14396)
!14404 = !DILocation(line: 1440, column: 20, scope: !14360)
!14405 = !DILocation(line: 1440, column: 18, scope: !14360)
!14406 = !DILocation(line: 1442, column: 2, scope: !14360)
!14407 = !DILocation(line: 1443, column: 23, scope: !14360)
!14408 = !DILocation(line: 1443, column: 2, scope: !14360)
!14409 = !DILocation(line: 1444, column: 29, scope: !14360)
!14410 = !DILocation(line: 1444, column: 2, scope: !14360)
!14411 = !DILocation(line: 0, scope: !13149, inlinedAt: !14412)
!14412 = distinct !DILocation(line: 1446, column: 8, scope: !14360)
!14413 = !DILocation(line: 0, scope: !13158, inlinedAt: !14414)
!14414 = distinct !DILocation(line: 195, column: 2, scope: !13149, inlinedAt: !14412)
!14415 = !DILocation(line: 225, column: 2, scope: !13165, inlinedAt: !14414)
!14416 = !DILocation(line: 225, column: 2, scope: !13166, inlinedAt: !14414)
!14417 = !DILocation(line: 225, column: 2, scope: !13169, inlinedAt: !14414)
!14418 = !DILocation(line: 196, column: 9, scope: !13149, inlinedAt: !14412)
!14419 = !DILocation(line: 1448, column: 2, scope: !14420)
!14420 = distinct !DILexicalBlock(scope: !14421, file: !2236, line: 1448, column: 2)
!14421 = distinct !DILexicalBlock(scope: !14360, file: !2236, line: 1448, column: 2)
!14422 = !DILocation(line: 1448, column: 2, scope: !14421)
!14423 = !DILocation(line: 1448, column: 2, scope: !14424)
!14424 = distinct !DILexicalBlock(scope: !14420, file: !2236, line: 1448, column: 2)
!14425 = !DILocation(line: 1450, column: 10, scope: !14360)
!14426 = !DILocation(line: 1450, column: 45, scope: !14360)
!14427 = !DILocation(line: 1450, column: 43, scope: !14360)
!14428 = !DILocation(line: 1451, column: 6, scope: !14360)
!14429 = !DILocation(line: 1457, column: 1, scope: !14360)
!14430 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !8089, file: !8089, line: 1103, type: !12250, scopeLine: 1104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !14431)
!14431 = !{!14432}
!14432 = !DILocalVariable(name: "t", arg: 1, scope: !14430, file: !8089, line: 1103, type: !695)
!14433 = !DILocation(line: 0, scope: !14430)
!14434 = !DILocation(line: 0, scope: !12531, inlinedAt: !14435)
!14435 = distinct !DILocation(line: 1106, column: 9, scope: !14430)
!14436 = !DILocation(line: 139, column: 13, scope: !14437, inlinedAt: !14435)
!14437 = distinct !DILexicalBlock(scope: !14438, file: !8089, line: 138, column: 10)
!14438 = distinct !DILexicalBlock(scope: !14439, file: !8089, line: 136, column: 7)
!14439 = distinct !DILexicalBlock(scope: !12552, file: !8089, line: 134, column: 17)
!14440 = !DILocation(line: 1106, column: 2, scope: !14430)
!14441 = distinct !DISubprogram(name: "k_yield", scope: !4221, file: !4221, line: 140, type: !2909, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !1949)
!14442 = !DILocation(line: 148, column: 2, scope: !14443)
!14443 = distinct !DILexicalBlock(scope: !14441, file: !4221, line: 148, column: 2)
!14444 = !{i64 2151088416}
!14445 = !DILocation(line: 149, column: 2, scope: !14441)
!14446 = !DILocation(line: 150, column: 1, scope: !14441)
!14447 = distinct !DISubprogram(name: "z_impl_k_usleep", scope: !2236, file: !2236, line: 1495, type: !14448, scopeLine: 1496, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !14450)
!14448 = !DISubroutineType(types: !14449)
!14449 = !{!1149, !107}
!14450 = !{!14451, !14452}
!14451 = !DILocalVariable(name: "us", arg: 1, scope: !14447, file: !2236, line: 1495, type: !107)
!14452 = !DILocalVariable(name: "ticks", scope: !14447, file: !2236, line: 1497, type: !1149)
!14453 = !DILocation(line: 0, scope: !14447)
!14454 = !DILocation(line: 1501, column: 31, scope: !14447)
!14455 = !DILocation(line: 1501, column: 10, scope: !14447)
!14456 = !DILocation(line: 1502, column: 23, scope: !14447)
!14457 = !DILocation(line: 1502, column: 10, scope: !14447)
!14458 = !DILocation(line: 1506, column: 31, scope: !14447)
!14459 = !DILocation(line: 1506, column: 9, scope: !14447)
!14460 = !DILocation(line: 1506, column: 2, scope: !14447)
!14461 = distinct !DISubprogram(name: "k_us_to_ticks_ceil64", scope: !8089, file: !8089, line: 571, type: !12250, scopeLine: 572, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !14462)
!14462 = !{!14463}
!14463 = !DILocalVariable(name: "t", arg: 1, scope: !14461, file: !8089, line: 571, type: !695)
!14464 = !DILocation(line: 0, scope: !14461)
!14465 = !DILocation(line: 0, scope: !12531, inlinedAt: !14466)
!14466 = distinct !DILocation(line: 574, column: 9, scope: !14461)
!14467 = !DILocation(line: 135, column: 5, scope: !14439, inlinedAt: !14466)
!14468 = !DILocation(line: 139, column: 13, scope: !14437, inlinedAt: !14466)
!14469 = !DILocation(line: 574, column: 2, scope: !14461)
!14470 = distinct !DISubprogram(name: "k_ticks_to_us_floor64", scope: !8089, file: !8089, line: 1187, type: !12250, scopeLine: 1188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !14471)
!14471 = !{!14472}
!14472 = !DILocalVariable(name: "t", arg: 1, scope: !14470, file: !8089, line: 1187, type: !695)
!14473 = !DILocation(line: 0, scope: !14470)
!14474 = !DILocation(line: 0, scope: !12531, inlinedAt: !14475)
!14475 = distinct !DILocation(line: 1190, column: 9, scope: !14470)
!14476 = !DILocation(line: 145, column: 13, scope: !14477, inlinedAt: !14475)
!14477 = distinct !DILexicalBlock(scope: !12549, file: !8089, line: 144, column: 10)
!14478 = !DILocation(line: 1190, column: 2, scope: !14470)
!14479 = distinct !DISubprogram(name: "z_impl_k_wakeup", scope: !2236, file: !2236, line: 1517, type: !14350, scopeLine: 1518, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !14480)
!14480 = !{!14481}
!14481 = !DILocalVariable(name: "thread", arg: 1, scope: !14479, file: !2236, line: 1517, type: !14208)
!14482 = !DILocation(line: 0, scope: !14479)
!14483 = !DILocation(line: 1521, column: 6, scope: !14484)
!14484 = distinct !DILexicalBlock(scope: !14479, file: !2236, line: 1521, column: 6)
!14485 = !DILocation(line: 1521, column: 6, scope: !14479)
!14486 = !DILocation(line: 1525, column: 6, scope: !14487)
!14487 = distinct !DILexicalBlock(scope: !14479, file: !2236, line: 1525, column: 6)
!14488 = !DILocation(line: 1525, column: 37, scope: !14487)
!14489 = !DILocation(line: 1525, column: 6, scope: !14479)
!14490 = !DILocation(line: 1527, column: 20, scope: !14491)
!14491 = distinct !DILexicalBlock(scope: !14492, file: !2236, line: 1527, column: 7)
!14492 = distinct !DILexicalBlock(scope: !14487, file: !2236, line: 1525, column: 42)
!14493 = !DILocation(line: 1527, column: 33, scope: !14491)
!14494 = !DILocation(line: 1527, column: 7, scope: !14492)
!14495 = !DILocation(line: 1532, column: 2, scope: !14479)
!14496 = !DILocation(line: 1533, column: 2, scope: !14479)
!14497 = !DILocation(line: 1031, column: 3, scope: !13198, inlinedAt: !14498)
!14498 = distinct !DILocation(line: 48, column: 10, scope: !13202, inlinedAt: !14499)
!14499 = distinct !DILocation(line: 1537, column: 7, scope: !14500)
!14500 = distinct !DILexicalBlock(scope: !14479, file: !2236, line: 1537, column: 6)
!14501 = !DILocation(line: 0, scope: !13198, inlinedAt: !14498)
!14502 = !DILocation(line: 48, column: 9, scope: !13202, inlinedAt: !14499)
!14503 = !DILocation(line: 1537, column: 6, scope: !14479)
!14504 = !DILocation(line: 1538, column: 3, scope: !14505)
!14505 = distinct !DILexicalBlock(scope: !14500, file: !2236, line: 1537, column: 25)
!14506 = !DILocation(line: 1539, column: 2, scope: !14505)
!14507 = !DILocation(line: 1540, column: 1, scope: !14479)
!14508 = distinct !DISubprogram(name: "z_is_thread_pending", scope: !11653, file: !11653, line: 101, type: !12612, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !14509)
!14509 = !{!14510}
!14510 = !DILocalVariable(name: "thread", arg: 1, scope: !14508, file: !11653, line: 101, type: !2134)
!14511 = !DILocation(line: 0, scope: !14508)
!14512 = !DILocation(line: 103, column: 23, scope: !14508)
!14513 = !DILocation(line: 103, column: 36, scope: !14508)
!14514 = !DILocation(line: 103, column: 55, scope: !14508)
!14515 = !DILocation(line: 103, column: 2, scope: !14508)
!14516 = distinct !DISubprogram(name: "z_impl_z_current_get", scope: !2236, file: !2236, line: 1567, type: !14517, scopeLine: 1568, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !14519)
!14517 = !DISubroutineType(types: !14518)
!14518 = !{!14208}
!14519 = !{!14520}
!14520 = !DILocalVariable(name: "ret", scope: !14516, file: !2236, line: 1577, type: !14208)
!14521 = !DILocation(line: 1577, column: 30, scope: !14516)
!14522 = !DILocation(line: 0, scope: !14516)
!14523 = !DILocation(line: 1582, column: 2, scope: !14516)
!14524 = distinct !DISubprogram(name: "z_impl_k_is_preempt_thread", scope: !2236, file: !2236, line: 1593, type: !14525, scopeLine: 1594, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !1949)
!14525 = !DISubroutineType(types: !14526)
!14526 = !{!107}
!14527 = !DILocation(line: 1031, column: 3, scope: !13198, inlinedAt: !14528)
!14528 = distinct !DILocation(line: 48, column: 10, scope: !13202, inlinedAt: !14529)
!14529 = distinct !DILocation(line: 1595, column: 10, scope: !14524)
!14530 = !DILocation(line: 0, scope: !13198, inlinedAt: !14528)
!14531 = !DILocation(line: 48, column: 9, scope: !13202, inlinedAt: !14529)
!14532 = !DILocation(line: 1595, column: 27, scope: !14524)
!14533 = !DILocation(line: 1595, column: 41, scope: !14524)
!14534 = !DILocation(line: 1595, column: 30, scope: !14524)
!14535 = !DILocation(line: 1595, column: 2, scope: !14524)
!14536 = distinct !DISubprogram(name: "z_thread_abort", scope: !2236, file: !2236, line: 1725, type: !12429, scopeLine: 1726, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !14537)
!14537 = !{!14538, !14539}
!14538 = !DILocalVariable(name: "thread", arg: 1, scope: !14536, file: !2236, line: 1725, type: !2134)
!14539 = !DILocalVariable(name: "key", scope: !14536, file: !2236, line: 1727, type: !12463)
!14540 = !DILocation(line: 0, scope: !14536)
!14541 = !DILocation(line: 0, scope: !12471, inlinedAt: !14542)
!14542 = distinct !DILocation(line: 1727, column: 25, scope: !14536)
!14543 = !DILocation(line: 55, column: 2, scope: !12480, inlinedAt: !14544)
!14544 = distinct !DILocation(line: 145, column: 10, scope: !12471, inlinedAt: !14542)
!14545 = !DILocation(line: 0, scope: !12480, inlinedAt: !14544)
!14546 = !DILocation(line: 148, column: 2, scope: !12488, inlinedAt: !14542)
!14547 = !DILocation(line: 148, column: 2, scope: !12489, inlinedAt: !14542)
!14548 = !DILocation(line: 148, column: 2, scope: !12492, inlinedAt: !14542)
!14549 = !DILocation(line: 160, column: 2, scope: !12471, inlinedAt: !14542)
!14550 = !DILocation(line: 1729, column: 20, scope: !14551)
!14551 = distinct !DILexicalBlock(scope: !14536, file: !2236, line: 1729, column: 6)
!14552 = !DILocation(line: 1729, column: 33, scope: !14551)
!14553 = !DILocation(line: 1729, column: 48, scope: !14551)
!14554 = !DILocation(line: 1729, column: 6, scope: !14536)
!14555 = !DILocation(line: 0, scope: !12505, inlinedAt: !14556)
!14556 = distinct !DILocation(line: 1730, column: 3, scope: !14557)
!14557 = distinct !DILexicalBlock(scope: !14551, file: !2236, line: 1729, column: 54)
!14558 = !DILocation(line: 194, column: 2, scope: !12513, inlinedAt: !14556)
!14559 = !DILocation(line: 194, column: 2, scope: !12514, inlinedAt: !14556)
!14560 = !DILocation(line: 194, column: 2, scope: !12517, inlinedAt: !14556)
!14561 = !DILocation(line: 0, scope: !12519, inlinedAt: !14562)
!14562 = distinct !DILocation(line: 215, column: 2, scope: !12505, inlinedAt: !14556)
!14563 = !DILocation(line: 95, column: 2, scope: !12519, inlinedAt: !14562)
!14564 = !DILocation(line: 1731, column: 3, scope: !14565)
!14565 = distinct !DILexicalBlock(scope: !14566, file: !2236, line: 1731, column: 3)
!14566 = distinct !DILexicalBlock(scope: !14567, file: !2236, line: 1731, column: 3)
!14567 = distinct !DILexicalBlock(scope: !14557, file: !2236, line: 1731, column: 3)
!14568 = !DILocation(line: 1736, column: 20, scope: !14569)
!14569 = distinct !DILexicalBlock(scope: !14536, file: !2236, line: 1736, column: 6)
!14570 = !DILocation(line: 1736, column: 33, scope: !14569)
!14571 = !DILocation(line: 1736, column: 49, scope: !14569)
!14572 = !DILocation(line: 1736, column: 6, scope: !14536)
!14573 = !DILocation(line: 0, scope: !12505, inlinedAt: !14574)
!14574 = distinct !DILocation(line: 1737, column: 3, scope: !14575)
!14575 = distinct !DILexicalBlock(scope: !14569, file: !2236, line: 1736, column: 56)
!14576 = !DILocation(line: 194, column: 2, scope: !12513, inlinedAt: !14574)
!14577 = !DILocation(line: 194, column: 2, scope: !12514, inlinedAt: !14574)
!14578 = !DILocation(line: 194, column: 2, scope: !12517, inlinedAt: !14574)
!14579 = !DILocation(line: 0, scope: !12519, inlinedAt: !14580)
!14580 = distinct !DILocation(line: 215, column: 2, scope: !12505, inlinedAt: !14574)
!14581 = !DILocation(line: 95, column: 2, scope: !12519, inlinedAt: !14580)
!14582 = !DILocation(line: 1738, column: 3, scope: !14575)
!14583 = !DILocation(line: 1775, column: 2, scope: !14536)
!14584 = !DILocation(line: 1776, column: 16, scope: !14585)
!14585 = distinct !DILexicalBlock(scope: !14536, file: !2236, line: 1776, column: 6)
!14586 = !DILocation(line: 1776, column: 13, scope: !14585)
!14587 = !DILocation(line: 1776, column: 25, scope: !14585)
!14588 = !DILocation(line: 1031, column: 3, scope: !13198, inlinedAt: !14589)
!14589 = distinct !DILocation(line: 48, column: 10, scope: !13202, inlinedAt: !14590)
!14590 = distinct !DILocation(line: 1776, column: 29, scope: !14585)
!14591 = !DILocation(line: 0, scope: !13198, inlinedAt: !14589)
!14592 = !DILocation(line: 48, column: 9, scope: !13202, inlinedAt: !14590)
!14593 = !DILocation(line: 1776, column: 6, scope: !14536)
!14594 = !DILocation(line: 0, scope: !13149, inlinedAt: !14595)
!14595 = distinct !DILocation(line: 1777, column: 3, scope: !14596)
!14596 = distinct !DILexicalBlock(scope: !14585, file: !2236, line: 1776, column: 47)
!14597 = !DILocation(line: 0, scope: !13158, inlinedAt: !14598)
!14598 = distinct !DILocation(line: 195, column: 2, scope: !13149, inlinedAt: !14595)
!14599 = !DILocation(line: 225, column: 2, scope: !13165, inlinedAt: !14598)
!14600 = !DILocation(line: 225, column: 2, scope: !13166, inlinedAt: !14598)
!14601 = !DILocation(line: 225, column: 2, scope: !13169, inlinedAt: !14598)
!14602 = !DILocation(line: 196, column: 9, scope: !13149, inlinedAt: !14595)
!14603 = !DILocation(line: 1778, column: 3, scope: !14604)
!14604 = distinct !DILexicalBlock(scope: !14605, file: !2236, line: 1778, column: 3)
!14605 = distinct !DILexicalBlock(scope: !14606, file: !2236, line: 1778, column: 3)
!14606 = distinct !DILexicalBlock(scope: !14596, file: !2236, line: 1778, column: 3)
!14607 = !DILocation(line: 0, scope: !12505, inlinedAt: !14608)
!14608 = distinct !DILocation(line: 1780, column: 2, scope: !14536)
!14609 = !DILocation(line: 194, column: 2, scope: !12513, inlinedAt: !14608)
!14610 = !DILocation(line: 194, column: 2, scope: !12514, inlinedAt: !14608)
!14611 = !DILocation(line: 194, column: 2, scope: !12517, inlinedAt: !14608)
!14612 = !DILocation(line: 0, scope: !12519, inlinedAt: !14613)
!14613 = distinct !DILocation(line: 215, column: 2, scope: !12505, inlinedAt: !14608)
!14614 = !DILocation(line: 95, column: 2, scope: !12519, inlinedAt: !14613)
!14615 = !DILocation(line: 1781, column: 1, scope: !14536)
!14616 = distinct !DISubprogram(name: "end_thread", scope: !2236, file: !2236, line: 1690, type: !12429, scopeLine: 1691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !14617)
!14617 = !{!14618}
!14618 = !DILocalVariable(name: "thread", arg: 1, scope: !14616, file: !2236, line: 1690, type: !2134)
!14619 = !DILocation(line: 0, scope: !14616)
!14620 = !DILocation(line: 1695, column: 20, scope: !14621)
!14621 = distinct !DILexicalBlock(scope: !14616, file: !2236, line: 1695, column: 6)
!14622 = !DILocation(line: 1695, column: 33, scope: !14621)
!14623 = !DILocation(line: 1695, column: 49, scope: !14621)
!14624 = !DILocation(line: 1695, column: 6, scope: !14616)
!14625 = !DILocation(line: 1697, column: 29, scope: !14626)
!14626 = distinct !DILexicalBlock(scope: !14621, file: !2236, line: 1695, column: 56)
!14627 = !DILocation(line: 1698, column: 7, scope: !14628)
!14628 = distinct !DILexicalBlock(scope: !14626, file: !2236, line: 1698, column: 7)
!14629 = !DILocation(line: 1698, column: 7, scope: !14626)
!14630 = !DILocation(line: 0, scope: !12663, inlinedAt: !14631)
!14631 = distinct !DILocation(line: 1699, column: 4, scope: !14632)
!14632 = distinct !DILexicalBlock(scope: !14628, file: !2236, line: 1698, column: 35)
!14633 = !DILocation(line: 266, column: 28, scope: !12663, inlinedAt: !14631)
!14634 = !DILocation(line: 0, scope: !12671, inlinedAt: !14635)
!14635 = distinct !DILocation(line: 268, column: 3, scope: !12675, inlinedAt: !14631)
!14636 = !DILocation(line: 234, column: 2, scope: !12671, inlinedAt: !14635)
!14637 = !DILocation(line: 1700, column: 3, scope: !14632)
!14638 = !DILocation(line: 1701, column: 20, scope: !14639)
!14639 = distinct !DILexicalBlock(scope: !14626, file: !2236, line: 1701, column: 7)
!14640 = !DILocation(line: 1701, column: 30, scope: !14639)
!14641 = !DILocation(line: 1701, column: 7, scope: !14626)
!14642 = !DILocation(line: 1702, column: 4, scope: !14643)
!14643 = distinct !DILexicalBlock(scope: !14639, file: !2236, line: 1701, column: 39)
!14644 = !DILocation(line: 1703, column: 3, scope: !14643)
!14645 = !DILocation(line: 1704, column: 9, scope: !14626)
!14646 = !DILocation(line: 1705, column: 23, scope: !14626)
!14647 = !DILocation(line: 1705, column: 3, scope: !14626)
!14648 = !DILocation(line: 1706, column: 3, scope: !14626)
!14649 = !DILocation(line: 1722, column: 2, scope: !14626)
!14650 = !DILocation(line: 1723, column: 1, scope: !14616)
!14651 = distinct !DISubprogram(name: "unpend_all", scope: !2236, file: !2236, line: 1674, type: !14652, scopeLine: 1675, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !14654)
!14652 = !DISubroutineType(types: !14653)
!14653 = !{null, !2165}
!14654 = !{!14655, !14656}
!14655 = !DILocalVariable(name: "wait_q", arg: 1, scope: !14651, file: !2236, line: 1674, type: !2165)
!14656 = !DILocalVariable(name: "thread", scope: !14651, file: !2236, line: 1676, type: !2134)
!14657 = !DILocation(line: 0, scope: !14651)
!14658 = !DILocation(line: 1678, column: 19, scope: !14651)
!14659 = !DILocation(line: 1678, column: 41, scope: !14651)
!14660 = !DILocation(line: 1678, column: 2, scope: !14651)
!14661 = !DILocation(line: 1679, column: 3, scope: !14662)
!14662 = distinct !DILexicalBlock(scope: !14651, file: !2236, line: 1678, column: 50)
!14663 = !DILocation(line: 1680, column: 9, scope: !14662)
!14664 = !DILocalVariable(name: "thread", arg: 1, scope: !14665, file: !11673, line: 65, type: !2134)
!14665 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !11673, file: !11673, line: 65, type: !14666, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !14668)
!14666 = !DISubroutineType(types: !14667)
!14667 = !{null, !2134, !32}
!14668 = !{!14664, !14669}
!14669 = !DILocalVariable(name: "value", arg: 2, scope: !14665, file: !11673, line: 65, type: !32)
!14670 = !DILocation(line: 0, scope: !14665, inlinedAt: !14671)
!14671 = distinct !DILocation(line: 1681, column: 3, scope: !14662)
!14672 = !DILocation(line: 67, column: 15, scope: !14665, inlinedAt: !14671)
!14673 = !DILocation(line: 67, column: 33, scope: !14665, inlinedAt: !14671)
!14674 = !DILocation(line: 1682, column: 3, scope: !14662)
!14675 = distinct !{!14675, !14660, !14676}
!14676 = !DILocation(line: 1683, column: 2, scope: !14651)
!14677 = !DILocation(line: 1684, column: 1, scope: !14651)
!14678 = distinct !DISubprogram(name: "z_impl_k_thread_join", scope: !2236, file: !2236, line: 1794, type: !14679, scopeLine: 1795, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !14681)
!14679 = !DISubroutineType(types: !14680)
!14680 = !{!107, !2134, !13359}
!14681 = !{!14682, !14683, !14684, !14685}
!14682 = !DILocalVariable(name: "thread", arg: 1, scope: !14678, file: !2236, line: 1794, type: !2134)
!14683 = !DILocalVariable(name: "timeout", arg: 2, scope: !14678, file: !2236, line: 1794, type: !13359)
!14684 = !DILocalVariable(name: "key", scope: !14678, file: !2236, line: 1796, type: !12463)
!14685 = !DILocalVariable(name: "ret", scope: !14678, file: !2236, line: 1797, type: !107)
!14686 = !DILocation(line: 0, scope: !14678)
!14687 = !DILocation(line: 0, scope: !12471, inlinedAt: !14688)
!14688 = distinct !DILocation(line: 1796, column: 25, scope: !14678)
!14689 = !DILocation(line: 55, column: 2, scope: !12480, inlinedAt: !14690)
!14690 = distinct !DILocation(line: 145, column: 10, scope: !12471, inlinedAt: !14688)
!14691 = !DILocation(line: 0, scope: !12480, inlinedAt: !14690)
!14692 = !DILocation(line: 148, column: 2, scope: !12488, inlinedAt: !14688)
!14693 = !DILocation(line: 148, column: 2, scope: !12489, inlinedAt: !14688)
!14694 = !DILocation(line: 148, column: 2, scope: !12492, inlinedAt: !14688)
!14695 = !DILocation(line: 160, column: 2, scope: !12471, inlinedAt: !14688)
!14696 = !DILocation(line: 1801, column: 20, scope: !14697)
!14697 = distinct !DILexicalBlock(scope: !14678, file: !2236, line: 1801, column: 6)
!14698 = !DILocation(line: 1801, column: 33, scope: !14697)
!14699 = !DILocation(line: 1801, column: 49, scope: !14697)
!14700 = !DILocation(line: 1801, column: 6, scope: !14678)
!14701 = !DILocation(line: 1803, column: 13, scope: !14702)
!14702 = distinct !DILexicalBlock(scope: !14697, file: !2236, line: 1803, column: 13)
!14703 = !DILocation(line: 1803, column: 13, scope: !14697)
!14704 = !DILocation(line: 1805, column: 24, scope: !14705)
!14705 = distinct !DILexicalBlock(scope: !14702, file: !2236, line: 1805, column: 13)
!14706 = !DILocation(line: 1805, column: 21, scope: !14705)
!14707 = !DILocation(line: 1805, column: 34, scope: !14705)
!14708 = !DILocation(line: 1806, column: 20, scope: !14705)
!14709 = !DILocation(line: 1806, column: 44, scope: !14705)
!14710 = !DILocation(line: 1806, column: 30, scope: !14705)
!14711 = !DILocation(line: 1805, column: 13, scope: !14702)
!14712 = !DILocation(line: 1031, column: 3, scope: !13198, inlinedAt: !14713)
!14713 = distinct !DILocation(line: 48, column: 10, scope: !13202, inlinedAt: !14714)
!14714 = distinct !DILocation(line: 1809, column: 3, scope: !14715)
!14715 = distinct !DILexicalBlock(scope: !14716, file: !2236, line: 1809, column: 3)
!14716 = distinct !DILexicalBlock(scope: !14717, file: !2236, line: 1809, column: 3)
!14717 = distinct !DILexicalBlock(scope: !14705, file: !2236, line: 1808, column: 9)
!14718 = !DILocation(line: 0, scope: !13198, inlinedAt: !14713)
!14719 = !DILocation(line: 48, column: 9, scope: !13202, inlinedAt: !14714)
!14720 = !DILocation(line: 1809, column: 3, scope: !14716)
!14721 = !DILocation(line: 1809, column: 3, scope: !14722)
!14722 = distinct !DILexicalBlock(scope: !14715, file: !2236, line: 1809, column: 3)
!14723 = !DILocation(line: 1810, column: 23, scope: !14717)
!14724 = !DILocation(line: 1810, column: 42, scope: !14717)
!14725 = !DILocation(line: 1810, column: 3, scope: !14717)
!14726 = !DILocation(line: 1811, column: 22, scope: !14717)
!14727 = !DILocation(line: 1811, column: 3, scope: !14717)
!14728 = !DILocation(line: 0, scope: !13149, inlinedAt: !14729)
!14729 = distinct !DILocation(line: 1814, column: 9, scope: !14717)
!14730 = !DILocation(line: 0, scope: !13158, inlinedAt: !14731)
!14731 = distinct !DILocation(line: 195, column: 2, scope: !13149, inlinedAt: !14729)
!14732 = !DILocation(line: 225, column: 2, scope: !13165, inlinedAt: !14731)
!14733 = !DILocation(line: 225, column: 2, scope: !13166, inlinedAt: !14731)
!14734 = !DILocation(line: 225, column: 2, scope: !13169, inlinedAt: !14731)
!14735 = !DILocation(line: 196, column: 9, scope: !13149, inlinedAt: !14729)
!14736 = !DILocation(line: 1817, column: 3, scope: !14717)
!14737 = !DILocation(line: 0, scope: !14697)
!14738 = !DILocation(line: 0, scope: !12505, inlinedAt: !14739)
!14739 = distinct !DILocation(line: 1822, column: 2, scope: !14678)
!14740 = !DILocation(line: 194, column: 2, scope: !12513, inlinedAt: !14739)
!14741 = !DILocation(line: 194, column: 2, scope: !12514, inlinedAt: !14739)
!14742 = !DILocation(line: 194, column: 2, scope: !12517, inlinedAt: !14739)
!14743 = !DILocation(line: 0, scope: !12519, inlinedAt: !14744)
!14744 = distinct !DILocation(line: 215, column: 2, scope: !12505, inlinedAt: !14739)
!14745 = !DILocation(line: 95, column: 2, scope: !12519, inlinedAt: !14744)
!14746 = !DILocation(line: 1823, column: 2, scope: !14678)
!14747 = !DILocation(line: 1824, column: 1, scope: !14678)
!14748 = distinct !DISubprogram(name: "z_sched_wake", scope: !2236, file: !2236, line: 1882, type: !14749, scopeLine: 1883, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !14751)
!14749 = !DISubroutineType(types: !14750)
!14750 = !{!145, !2165, !107, !106}
!14751 = !{!14752, !14753, !14754, !14755, !14756, !14757, !14759}
!14752 = !DILocalVariable(name: "wait_q", arg: 1, scope: !14748, file: !2236, line: 1882, type: !2165)
!14753 = !DILocalVariable(name: "swap_retval", arg: 2, scope: !14748, file: !2236, line: 1882, type: !107)
!14754 = !DILocalVariable(name: "swap_data", arg: 3, scope: !14748, file: !2236, line: 1882, type: !106)
!14755 = !DILocalVariable(name: "thread", scope: !14748, file: !2236, line: 1884, type: !2134)
!14756 = !DILocalVariable(name: "ret", scope: !14748, file: !2236, line: 1885, type: !145)
!14757 = !DILocalVariable(name: "__i", scope: !14758, file: !2236, line: 1887, type: !12463)
!14758 = distinct !DILexicalBlock(scope: !14748, file: !2236, line: 1887, column: 2)
!14759 = !DILocalVariable(name: "__key", scope: !14758, file: !2236, line: 1887, type: !12463)
!14760 = !DILocation(line: 0, scope: !14748)
!14761 = !DILocation(line: 0, scope: !14758)
!14762 = !DILocation(line: 0, scope: !12471, inlinedAt: !14763)
!14763 = distinct !DILocation(line: 1887, column: 2, scope: !14758)
!14764 = !DILocation(line: 55, column: 2, scope: !12480, inlinedAt: !14765)
!14765 = distinct !DILocation(line: 145, column: 10, scope: !12471, inlinedAt: !14763)
!14766 = !DILocation(line: 0, scope: !12480, inlinedAt: !14765)
!14767 = !DILocation(line: 148, column: 2, scope: !12488, inlinedAt: !14763)
!14768 = !DILocation(line: 148, column: 2, scope: !12489, inlinedAt: !14763)
!14769 = !DILocation(line: 148, column: 2, scope: !12492, inlinedAt: !14763)
!14770 = !DILocation(line: 160, column: 2, scope: !12471, inlinedAt: !14763)
!14771 = !DILocation(line: 1888, column: 12, scope: !14772)
!14772 = distinct !DILexicalBlock(scope: !14773, file: !2236, line: 1887, column: 26)
!14773 = distinct !DILexicalBlock(scope: !14758, file: !2236, line: 1887, column: 2)
!14774 = !DILocation(line: 1890, column: 14, scope: !14775)
!14775 = distinct !DILexicalBlock(scope: !14772, file: !2236, line: 1890, column: 7)
!14776 = !DILocation(line: 1890, column: 7, scope: !14772)
!14777 = !DILocalVariable(name: "thread", arg: 1, scope: !14778, file: !14779, line: 134, type: !2134)
!14778 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !14779, file: !14779, line: 134, type: !14780, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !14782)
!14779 = !DIFile(filename: "zephyr/kernel/include/kernel_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14780 = !DISubroutineType(types: !14781)
!14781 = !{null, !2134, !32, !106}
!14782 = !{!14777, !14783, !14784}
!14783 = !DILocalVariable(name: "value", arg: 2, scope: !14778, file: !14779, line: 135, type: !32)
!14784 = !DILocalVariable(name: "data", arg: 3, scope: !14778, file: !14779, line: 136, type: !106)
!14785 = !DILocation(line: 0, scope: !14778, inlinedAt: !14786)
!14786 = distinct !DILocation(line: 1891, column: 4, scope: !14787)
!14787 = distinct !DILexicalBlock(scope: !14775, file: !2236, line: 1890, column: 23)
!14788 = !DILocation(line: 0, scope: !14665, inlinedAt: !14789)
!14789 = distinct !DILocation(line: 138, column: 2, scope: !14778, inlinedAt: !14786)
!14790 = !DILocation(line: 67, column: 15, scope: !14665, inlinedAt: !14789)
!14791 = !DILocation(line: 67, column: 33, scope: !14665, inlinedAt: !14789)
!14792 = !DILocation(line: 139, column: 15, scope: !14778, inlinedAt: !14786)
!14793 = !DILocation(line: 139, column: 25, scope: !14778, inlinedAt: !14786)
!14794 = !DILocation(line: 1894, column: 4, scope: !14787)
!14795 = !DILocation(line: 1895, column: 10, scope: !14787)
!14796 = !DILocation(line: 1896, column: 4, scope: !14787)
!14797 = !DILocation(line: 1898, column: 3, scope: !14787)
!14798 = !DILocation(line: 0, scope: !12505, inlinedAt: !14799)
!14799 = distinct !DILocation(line: 1887, column: 2, scope: !14773)
!14800 = !DILocation(line: 194, column: 2, scope: !12513, inlinedAt: !14799)
!14801 = !DILocation(line: 194, column: 2, scope: !12514, inlinedAt: !14799)
!14802 = !DILocation(line: 194, column: 2, scope: !12517, inlinedAt: !14799)
!14803 = !DILocation(line: 0, scope: !12519, inlinedAt: !14804)
!14804 = distinct !DILocation(line: 215, column: 2, scope: !12505, inlinedAt: !14799)
!14805 = !DILocation(line: 95, column: 2, scope: !12519, inlinedAt: !14804)
!14806 = !DILocation(line: 1901, column: 2, scope: !14748)
!14807 = distinct !DISubprogram(name: "z_sched_wait", scope: !2236, file: !2236, line: 1904, type: !14808, scopeLine: 1906, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2131, retainedNodes: !14811)
!14808 = !DISubroutineType(types: !14809)
!14809 = !{!107, !12474, !12463, !2165, !13359, !14810}
!14810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !106, size: 32)
!14811 = !{!14812, !14813, !14814, !14815, !14816, !14817}
!14812 = !DILocalVariable(name: "lock", arg: 1, scope: !14807, file: !2236, line: 1904, type: !12474)
!14813 = !DILocalVariable(name: "key", arg: 2, scope: !14807, file: !2236, line: 1904, type: !12463)
!14814 = !DILocalVariable(name: "wait_q", arg: 3, scope: !14807, file: !2236, line: 1905, type: !2165)
!14815 = !DILocalVariable(name: "timeout", arg: 4, scope: !14807, file: !2236, line: 1905, type: !13359)
!14816 = !DILocalVariable(name: "data", arg: 5, scope: !14807, file: !2236, line: 1905, type: !14810)
!14817 = !DILocalVariable(name: "ret", scope: !14807, file: !2236, line: 1907, type: !107)
!14818 = !DILocation(line: 0, scope: !14807)
!14819 = !DILocation(line: 1907, column: 12, scope: !14807)
!14820 = !DILocation(line: 1909, column: 11, scope: !14821)
!14821 = distinct !DILexicalBlock(scope: !14807, file: !2236, line: 1909, column: 6)
!14822 = !DILocation(line: 1909, column: 6, scope: !14807)
!14823 = !DILocation(line: 1910, column: 11, scope: !14824)
!14824 = distinct !DILexicalBlock(scope: !14821, file: !2236, line: 1909, column: 20)
!14825 = !DILocation(line: 1910, column: 26, scope: !14824)
!14826 = !DILocation(line: 1910, column: 9, scope: !14824)
!14827 = !DILocation(line: 1911, column: 2, scope: !14824)
!14828 = !DILocation(line: 1912, column: 2, scope: !14807)
!14829 = distinct !DISubprogram(name: "z_data_copy", scope: !14830, file: !14830, line: 22, type: !2909, scopeLine: 23, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2892, retainedNodes: !1949)
!14830 = !DIFile(filename: "zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14831 = !DILocation(line: 24, column: 2, scope: !14829)
!14832 = !DILocation(line: 27, column: 2, scope: !14829)
!14833 = !DILocation(line: 71, column: 1, scope: !14829)
!14834 = distinct !DISubprogram(name: "z_add_timeout", scope: !2273, file: !2273, line: 88, type: !14835, scopeLine: 90, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2243, retainedNodes: !14841)
!14835 = !DISubroutineType(types: !14836)
!14836 = !{null, !2246, !2265, !14837}
!14837 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !693, line: 67, baseType: !14838)
!14838 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !693, line: 65, size: 64, elements: !14839)
!14839 = !{!14840}
!14840 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !14838, file: !693, line: 66, baseType: !692, size: 64)
!14841 = !{!14842, !14843, !14844, !14845, !14851, !14852, !14855, !14858}
!14842 = !DILocalVariable(name: "to", arg: 1, scope: !14834, file: !2273, line: 88, type: !2246)
!14843 = !DILocalVariable(name: "fn", arg: 2, scope: !14834, file: !2273, line: 88, type: !2265)
!14844 = !DILocalVariable(name: "timeout", arg: 3, scope: !14834, file: !2273, line: 89, type: !14837)
!14845 = !DILocalVariable(name: "__i", scope: !14846, file: !2273, line: 102, type: !14847)
!14846 = distinct !DILexicalBlock(scope: !14834, file: !2273, line: 102, column: 2)
!14847 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !818, line: 106, baseType: !14848)
!14848 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !818, line: 32, size: 32, elements: !14849)
!14849 = !{!14850}
!14850 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !14848, file: !818, line: 33, baseType: !107, size: 32)
!14851 = !DILocalVariable(name: "__key", scope: !14846, file: !2273, line: 102, type: !14847)
!14852 = !DILocalVariable(name: "t", scope: !14853, file: !2273, line: 103, type: !2246)
!14853 = distinct !DILexicalBlock(scope: !14854, file: !2273, line: 102, column: 24)
!14854 = distinct !DILexicalBlock(scope: !14846, file: !2273, line: 102, column: 2)
!14855 = !DILocalVariable(name: "ticks", scope: !14856, file: !2273, line: 107, type: !692)
!14856 = distinct !DILexicalBlock(scope: !14857, file: !2273, line: 106, column: 39)
!14857 = distinct !DILexicalBlock(scope: !14853, file: !2273, line: 105, column: 7)
!14858 = !DILocalVariable(name: "next_time", scope: !14859, file: !2273, line: 137, type: !1149)
!14859 = distinct !DILexicalBlock(scope: !14860, file: !2273, line: 127, column: 22)
!14860 = distinct !DILexicalBlock(scope: !14853, file: !2273, line: 127, column: 7)
!14861 = !DILocation(line: 0, scope: !14834)
!14862 = !DILocation(line: 91, column: 6, scope: !14863)
!14863 = distinct !DILexicalBlock(scope: !14834, file: !2273, line: 91, column: 6)
!14864 = !DILocation(line: 91, column: 6, scope: !14834)
!14865 = !DILocation(line: 99, column: 2, scope: !14866)
!14866 = distinct !DILexicalBlock(scope: !14867, file: !2273, line: 99, column: 2)
!14867 = distinct !DILexicalBlock(scope: !14834, file: !2273, line: 99, column: 2)
!14868 = !DILocation(line: 99, column: 2, scope: !14867)
!14869 = !DILocation(line: 99, column: 2, scope: !14870)
!14870 = distinct !DILexicalBlock(scope: !14866, file: !2273, line: 99, column: 2)
!14871 = !DILocation(line: 100, column: 6, scope: !14834)
!14872 = !DILocation(line: 100, column: 9, scope: !14834)
!14873 = !DILocation(line: 0, scope: !14846)
!14874 = !DILocalVariable(name: "l", arg: 1, scope: !14875, file: !818, line: 136, type: !14878)
!14875 = distinct !DISubprogram(name: "k_spin_lock", scope: !818, file: !818, line: 136, type: !14876, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2243, retainedNodes: !14879)
!14876 = !DISubroutineType(types: !14877)
!14877 = !{!14847, !14878}
!14878 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2279, size: 32)
!14879 = !{!14874, !14880}
!14880 = !DILocalVariable(name: "k", scope: !14875, file: !818, line: 139, type: !14847)
!14881 = !DILocation(line: 0, scope: !14875, inlinedAt: !14882)
!14882 = distinct !DILocation(line: 102, column: 2, scope: !14846)
!14883 = !DILocation(line: 55, column: 2, scope: !14884, inlinedAt: !14888)
!14884 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6121, file: !6121, line: 42, type: !8801, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2243, retainedNodes: !14885)
!14885 = !{!14886, !14887}
!14886 = !DILocalVariable(name: "key", scope: !14884, file: !6121, line: 44, type: !32)
!14887 = !DILocalVariable(name: "tmp", scope: !14884, file: !6121, line: 53, type: !32)
!14888 = distinct !DILocation(line: 145, column: 10, scope: !14875, inlinedAt: !14882)
!14889 = !{i64 2851019}
!14890 = !DILocation(line: 0, scope: !14884, inlinedAt: !14888)
!14891 = !DILocation(line: 148, column: 2, scope: !14892, inlinedAt: !14882)
!14892 = distinct !DILexicalBlock(scope: !14893, file: !818, line: 148, column: 2)
!14893 = distinct !DILexicalBlock(scope: !14875, file: !818, line: 148, column: 2)
!14894 = !DILocation(line: 148, column: 2, scope: !14893, inlinedAt: !14882)
!14895 = !DILocation(line: 148, column: 2, scope: !14896, inlinedAt: !14882)
!14896 = distinct !DILexicalBlock(scope: !14892, file: !818, line: 148, column: 2)
!14897 = !DILocation(line: 160, column: 2, scope: !14875, inlinedAt: !14882)
!14898 = !DILocation(line: 106, column: 33, scope: !14857)
!14899 = !DILocation(line: 105, column: 7, scope: !14853)
!14900 = !DILocation(line: 107, column: 50, scope: !14856)
!14901 = !DILocation(line: 107, column: 48, scope: !14856)
!14902 = !DILocation(line: 0, scope: !14856)
!14903 = !DILocation(line: 109, column: 17, scope: !14856)
!14904 = !DILocation(line: 110, column: 3, scope: !14856)
!14905 = !DILocation(line: 111, column: 31, scope: !14906)
!14906 = distinct !DILexicalBlock(scope: !14857, file: !2273, line: 110, column: 10)
!14907 = !DILocation(line: 111, column: 37, scope: !14906)
!14908 = !DILocation(line: 111, column: 35, scope: !14906)
!14909 = !DILocation(line: 0, scope: !14857)
!14910 = !DILocation(line: 109, column: 8, scope: !14856)
!14911 = !DILocation(line: 109, column: 15, scope: !14856)
!14912 = !DILocation(line: 114, column: 12, scope: !14913)
!14913 = distinct !DILexicalBlock(scope: !14853, file: !2273, line: 114, column: 3)
!14914 = !DILocation(line: 0, scope: !14853)
!14915 = !DILocation(line: 114, column: 3, scope: !14913)
!14916 = !DILocation(line: 115, column: 24, scope: !14917)
!14917 = distinct !DILexicalBlock(scope: !14918, file: !2273, line: 115, column: 8)
!14918 = distinct !DILexicalBlock(scope: !14919, file: !2273, line: 114, column: 45)
!14919 = distinct !DILexicalBlock(scope: !14913, file: !2273, line: 114, column: 3)
!14920 = !DILocation(line: 115, column: 11, scope: !14917)
!14921 = !DILocation(line: 115, column: 18, scope: !14917)
!14922 = !DILocation(line: 115, column: 8, scope: !14918)
!14923 = !DILocation(line: 116, column: 15, scope: !14924)
!14924 = distinct !DILexicalBlock(scope: !14917, file: !2273, line: 115, column: 32)
!14925 = !DILocation(line: 117, column: 26, scope: !14924)
!14926 = !DILocation(line: 117, column: 5, scope: !14924)
!14927 = !DILocation(line: 123, column: 7, scope: !14853)
!14928 = !DILocation(line: 120, column: 15, scope: !14918)
!14929 = !DILocation(line: 114, column: 36, scope: !14919)
!14930 = distinct !{!14930, !14915, !14931}
!14931 = !DILocation(line: 121, column: 3, scope: !14913)
!14932 = !DILocation(line: 124, column: 4, scope: !14933)
!14933 = distinct !DILexicalBlock(scope: !14934, file: !2273, line: 123, column: 18)
!14934 = distinct !DILexicalBlock(scope: !14853, file: !2273, line: 123, column: 7)
!14935 = !DILocation(line: 125, column: 3, scope: !14933)
!14936 = !DILocation(line: 127, column: 13, scope: !14860)
!14937 = !DILocation(line: 127, column: 10, scope: !14860)
!14938 = !DILocation(line: 127, column: 7, scope: !14853)
!14939 = !DILocation(line: 137, column: 24, scope: !14859)
!14940 = !DILocation(line: 0, scope: !14859)
!14941 = !DILocation(line: 139, column: 18, scope: !14942)
!14942 = distinct !DILexicalBlock(scope: !14859, file: !2273, line: 139, column: 8)
!14943 = !DILocation(line: 139, column: 23, scope: !14942)
!14944 = !DILocation(line: 141, column: 5, scope: !14945)
!14945 = distinct !DILexicalBlock(scope: !14942, file: !2273, line: 140, column: 48)
!14946 = !DILocation(line: 142, column: 4, scope: !14945)
!14947 = !DILocalVariable(name: "key", arg: 2, scope: !14948, file: !818, line: 190, type: !14847)
!14948 = distinct !DISubprogram(name: "k_spin_unlock", scope: !818, file: !818, line: 189, type: !14949, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2243, retainedNodes: !14951)
!14949 = !DISubroutineType(types: !14950)
!14950 = !{null, !14878, !14847}
!14951 = !{!14952, !14947}
!14952 = !DILocalVariable(name: "l", arg: 1, scope: !14948, file: !818, line: 189, type: !14878)
!14953 = !DILocation(line: 0, scope: !14948, inlinedAt: !14954)
!14954 = distinct !DILocation(line: 102, column: 2, scope: !14854)
!14955 = !DILocation(line: 194, column: 2, scope: !14956, inlinedAt: !14954)
!14956 = distinct !DILexicalBlock(scope: !14957, file: !818, line: 194, column: 2)
!14957 = distinct !DILexicalBlock(scope: !14948, file: !818, line: 194, column: 2)
!14958 = !DILocation(line: 194, column: 2, scope: !14957, inlinedAt: !14954)
!14959 = !DILocation(line: 194, column: 2, scope: !14960, inlinedAt: !14954)
!14960 = distinct !DILexicalBlock(scope: !14956, file: !818, line: 194, column: 2)
!14961 = !DILocalVariable(name: "key", arg: 1, scope: !14962, file: !6121, line: 84, type: !32)
!14962 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6121, file: !6121, line: 84, type: !5951, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2243, retainedNodes: !14963)
!14963 = !{!14961}
!14964 = !DILocation(line: 0, scope: !14962, inlinedAt: !14965)
!14965 = distinct !DILocation(line: 215, column: 2, scope: !14948, inlinedAt: !14954)
!14966 = !DILocation(line: 95, column: 2, scope: !14962, inlinedAt: !14965)
!14967 = !{i64 2851836}
!14968 = !DILocation(line: 148, column: 1, scope: !14834)
!14969 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !726, file: !726, line: 225, type: !14970, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2243, retainedNodes: !14974)
!14970 = !DISubroutineType(types: !14971)
!14971 = !{!145, !14972}
!14972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14973, size: 32)
!14973 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2250)
!14974 = !{!14975}
!14975 = !DILocalVariable(name: "node", arg: 1, scope: !14969, file: !726, line: 225, type: !14972)
!14976 = !DILocation(line: 0, scope: !14969)
!14977 = !DILocation(line: 227, column: 15, scope: !14969)
!14978 = !DILocation(line: 227, column: 20, scope: !14969)
!14979 = !DILocation(line: 227, column: 2, scope: !14969)
!14980 = distinct !DISubprogram(name: "elapsed", scope: !2273, file: !2273, line: 62, type: !14981, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2243, retainedNodes: !1949)
!14981 = !DISubroutineType(types: !14982)
!14982 = !{!1149}
!14983 = !DILocation(line: 64, column: 9, scope: !14980)
!14984 = !DILocation(line: 64, column: 28, scope: !14980)
!14985 = !DILocation(line: 64, column: 35, scope: !14980)
!14986 = !DILocation(line: 64, column: 2, scope: !14980)
!14987 = distinct !DISubprogram(name: "first", scope: !2273, file: !2273, line: 39, type: !14988, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2243, retainedNodes: !14990)
!14988 = !DISubroutineType(types: !14989)
!14989 = !{!2246}
!14990 = !{!14991}
!14991 = !DILocalVariable(name: "t", scope: !14987, file: !2273, line: 41, type: !14992)
!14992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2250, size: 32)
!14993 = !DILocation(line: 41, column: 19, scope: !14987)
!14994 = !DILocation(line: 0, scope: !14987)
!14995 = !DILocation(line: 43, column: 9, scope: !14987)
!14996 = !DILocation(line: 43, column: 2, scope: !14987)
!14997 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !726, file: !726, line: 443, type: !14998, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2243, retainedNodes: !15000)
!14998 = !DISubroutineType(types: !14999)
!14999 = !{null, !14992, !14992}
!15000 = !{!15001, !15002, !15003}
!15001 = !DILocalVariable(name: "successor", arg: 1, scope: !14997, file: !726, line: 443, type: !14992)
!15002 = !DILocalVariable(name: "node", arg: 2, scope: !14997, file: !726, line: 443, type: !14992)
!15003 = !DILocalVariable(name: "prev", scope: !14997, file: !726, line: 445, type: !15004)
!15004 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !14992)
!15005 = !DILocation(line: 0, scope: !14997)
!15006 = !DILocation(line: 445, column: 39, scope: !14997)
!15007 = !DILocation(line: 447, column: 8, scope: !14997)
!15008 = !DILocation(line: 447, column: 13, scope: !14997)
!15009 = !DILocation(line: 448, column: 8, scope: !14997)
!15010 = !DILocation(line: 448, column: 13, scope: !14997)
!15011 = !DILocation(line: 449, column: 8, scope: !14997)
!15012 = !DILocation(line: 449, column: 13, scope: !14997)
!15013 = !DILocation(line: 450, column: 18, scope: !14997)
!15014 = !DILocation(line: 451, column: 1, scope: !14997)
!15015 = distinct !DISubprogram(name: "next", scope: !2273, file: !2273, line: 46, type: !15016, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2243, retainedNodes: !15018)
!15016 = !DISubroutineType(types: !15017)
!15017 = !{!2246, !2246}
!15018 = !{!15019, !15020}
!15019 = !DILocalVariable(name: "t", arg: 1, scope: !15015, file: !2273, line: 46, type: !2246)
!15020 = !DILocalVariable(name: "n", scope: !15015, file: !2273, line: 48, type: !14992)
!15021 = !DILocation(line: 0, scope: !15015)
!15022 = !DILocation(line: 48, column: 58, scope: !15015)
!15023 = !DILocation(line: 48, column: 19, scope: !15015)
!15024 = !DILocation(line: 50, column: 9, scope: !15015)
!15025 = !DILocation(line: 50, column: 2, scope: !15015)
!15026 = distinct !DISubprogram(name: "sys_dlist_append", scope: !726, file: !726, line: 404, type: !15027, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2243, retainedNodes: !15030)
!15027 = !DISubroutineType(types: !15028)
!15028 = !{null, !15029, !14992}
!15029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2278, size: 32)
!15030 = !{!15031, !15032, !15033}
!15031 = !DILocalVariable(name: "list", arg: 1, scope: !15026, file: !726, line: 404, type: !15029)
!15032 = !DILocalVariable(name: "node", arg: 2, scope: !15026, file: !726, line: 404, type: !14992)
!15033 = !DILocalVariable(name: "tail", scope: !15026, file: !726, line: 406, type: !15004)
!15034 = !DILocation(line: 0, scope: !15026)
!15035 = !DILocation(line: 406, column: 34, scope: !15026)
!15036 = !DILocation(line: 408, column: 8, scope: !15026)
!15037 = !DILocation(line: 408, column: 13, scope: !15026)
!15038 = !DILocation(line: 409, column: 8, scope: !15026)
!15039 = !DILocation(line: 409, column: 13, scope: !15026)
!15040 = !DILocation(line: 411, column: 8, scope: !15026)
!15041 = !DILocation(line: 411, column: 13, scope: !15026)
!15042 = !DILocation(line: 412, column: 13, scope: !15026)
!15043 = !DILocation(line: 413, column: 1, scope: !15026)
!15044 = distinct !DISubprogram(name: "next_timeout", scope: !2273, file: !2273, line: 67, type: !14981, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2243, retainedNodes: !15045)
!15045 = !{!15046, !15047, !15048}
!15046 = !DILocalVariable(name: "to", scope: !15044, file: !2273, line: 69, type: !2246)
!15047 = !DILocalVariable(name: "ticks_elapsed", scope: !15044, file: !2273, line: 70, type: !1149)
!15048 = !DILocalVariable(name: "ret", scope: !15044, file: !2273, line: 71, type: !1149)
!15049 = !DILocation(line: 69, column: 24, scope: !15044)
!15050 = !DILocation(line: 0, scope: !15044)
!15051 = !DILocation(line: 70, column: 26, scope: !15044)
!15052 = !DILocation(line: 73, column: 10, scope: !15053)
!15053 = distinct !DILexicalBlock(scope: !15044, file: !2273, line: 73, column: 6)
!15054 = !DILocation(line: 73, column: 19, scope: !15053)
!15055 = !DILocation(line: 74, column: 21, scope: !15053)
!15056 = !DILocation(line: 74, column: 30, scope: !15053)
!15057 = !DILocation(line: 74, column: 28, scope: !15053)
!15058 = !DILocation(line: 74, column: 45, scope: !15053)
!15059 = !DILocation(line: 73, column: 6, scope: !15044)
!15060 = !DILocation(line: 77, column: 9, scope: !15061)
!15061 = distinct !DILexicalBlock(scope: !15053, file: !2273, line: 76, column: 9)
!15062 = !DILocation(line: 0, scope: !15053)
!15063 = !DILocation(line: 81, column: 20, scope: !15064)
!15064 = distinct !DILexicalBlock(scope: !15044, file: !2273, line: 81, column: 6)
!15065 = !DILocation(line: 81, column: 6, scope: !15064)
!15066 = !DILocation(line: 81, column: 32, scope: !15064)
!15067 = !DILocation(line: 85, column: 2, scope: !15044)
!15068 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !726, file: !726, line: 341, type: !15069, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2243, retainedNodes: !15071)
!15069 = !DISubroutineType(types: !15070)
!15070 = !{!14992, !15029, !14992}
!15071 = !{!15072, !15073}
!15072 = !DILocalVariable(name: "list", arg: 1, scope: !15068, file: !726, line: 341, type: !15029)
!15073 = !DILocalVariable(name: "node", arg: 2, scope: !15068, file: !726, line: 342, type: !14992)
!15074 = !DILocation(line: 0, scope: !15068)
!15075 = !DILocation(line: 344, column: 15, scope: !15068)
!15076 = !DILocation(line: 344, column: 9, scope: !15068)
!15077 = !DILocation(line: 344, column: 26, scope: !15068)
!15078 = !DILocation(line: 344, column: 2, scope: !15068)
!15079 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !726, file: !726, line: 325, type: !15069, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2243, retainedNodes: !15080)
!15080 = !{!15081, !15082}
!15081 = !DILocalVariable(name: "list", arg: 1, scope: !15079, file: !726, line: 325, type: !15029)
!15082 = !DILocalVariable(name: "node", arg: 2, scope: !15079, file: !726, line: 326, type: !14992)
!15083 = !DILocation(line: 0, scope: !15079)
!15084 = !DILocation(line: 328, column: 24, scope: !15079)
!15085 = !DILocation(line: 328, column: 15, scope: !15079)
!15086 = !DILocation(line: 328, column: 9, scope: !15079)
!15087 = !DILocation(line: 328, column: 45, scope: !15079)
!15088 = !DILocation(line: 328, column: 2, scope: !15079)
!15089 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !726, file: !726, line: 294, type: !15090, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2243, retainedNodes: !15092)
!15090 = !DISubroutineType(types: !15091)
!15091 = !{!14992, !15029}
!15092 = !{!15093}
!15093 = !DILocalVariable(name: "list", arg: 1, scope: !15089, file: !726, line: 294, type: !15029)
!15094 = !DILocation(line: 0, scope: !15089)
!15095 = !DILocation(line: 296, column: 9, scope: !15089)
!15096 = !DILocation(line: 296, column: 2, scope: !15089)
!15097 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !726, file: !726, line: 266, type: !15098, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2243, retainedNodes: !15100)
!15098 = !DISubroutineType(types: !15099)
!15099 = !{!145, !15029}
!15100 = !{!15101}
!15101 = !DILocalVariable(name: "list", arg: 1, scope: !15097, file: !726, line: 266, type: !15029)
!15102 = !DILocation(line: 0, scope: !15097)
!15103 = !DILocation(line: 268, column: 15, scope: !15097)
!15104 = !DILocation(line: 268, column: 20, scope: !15097)
!15105 = !DILocation(line: 268, column: 2, scope: !15097)
!15106 = distinct !DISubprogram(name: "z_abort_timeout", scope: !2273, file: !2273, line: 150, type: !15107, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2243, retainedNodes: !15109)
!15107 = !DISubroutineType(types: !15108)
!15108 = !{!107, !2246}
!15109 = !{!15110, !15111, !15112, !15114}
!15110 = !DILocalVariable(name: "to", arg: 1, scope: !15106, file: !2273, line: 150, type: !2246)
!15111 = !DILocalVariable(name: "ret", scope: !15106, file: !2273, line: 152, type: !107)
!15112 = !DILocalVariable(name: "__i", scope: !15113, file: !2273, line: 154, type: !14847)
!15113 = distinct !DILexicalBlock(scope: !15106, file: !2273, line: 154, column: 2)
!15114 = !DILocalVariable(name: "__key", scope: !15113, file: !2273, line: 154, type: !14847)
!15115 = !DILocation(line: 0, scope: !15106)
!15116 = !DILocation(line: 0, scope: !15113)
!15117 = !DILocation(line: 0, scope: !14875, inlinedAt: !15118)
!15118 = distinct !DILocation(line: 154, column: 2, scope: !15113)
!15119 = !DILocation(line: 55, column: 2, scope: !14884, inlinedAt: !15120)
!15120 = distinct !DILocation(line: 145, column: 10, scope: !14875, inlinedAt: !15118)
!15121 = !DILocation(line: 0, scope: !14884, inlinedAt: !15120)
!15122 = !DILocation(line: 148, column: 2, scope: !14892, inlinedAt: !15118)
!15123 = !DILocation(line: 148, column: 2, scope: !14893, inlinedAt: !15118)
!15124 = !DILocation(line: 148, column: 2, scope: !14896, inlinedAt: !15118)
!15125 = !DILocation(line: 160, column: 2, scope: !14875, inlinedAt: !15118)
!15126 = !DILocation(line: 155, column: 7, scope: !15127)
!15127 = distinct !DILexicalBlock(scope: !15128, file: !2273, line: 155, column: 7)
!15128 = distinct !DILexicalBlock(scope: !15129, file: !2273, line: 154, column: 24)
!15129 = distinct !DILexicalBlock(scope: !15113, file: !2273, line: 154, column: 2)
!15130 = !DILocation(line: 155, column: 7, scope: !15128)
!15131 = !DILocation(line: 156, column: 4, scope: !15132)
!15132 = distinct !DILexicalBlock(scope: !15127, file: !2273, line: 155, column: 39)
!15133 = !DILocation(line: 158, column: 3, scope: !15132)
!15134 = !DILocation(line: 0, scope: !14948, inlinedAt: !15135)
!15135 = distinct !DILocation(line: 154, column: 2, scope: !15129)
!15136 = !DILocation(line: 194, column: 2, scope: !14956, inlinedAt: !15135)
!15137 = !DILocation(line: 194, column: 2, scope: !14957, inlinedAt: !15135)
!15138 = !DILocation(line: 194, column: 2, scope: !14960, inlinedAt: !15135)
!15139 = !DILocation(line: 0, scope: !14962, inlinedAt: !15140)
!15140 = distinct !DILocation(line: 215, column: 2, scope: !14948, inlinedAt: !15135)
!15141 = !DILocation(line: 95, column: 2, scope: !14962, inlinedAt: !15140)
!15142 = !DILocation(line: 161, column: 2, scope: !15106)
!15143 = distinct !DISubprogram(name: "remove_timeout", scope: !2273, file: !2273, line: 53, type: !2267, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2243, retainedNodes: !15144)
!15144 = !{!15145}
!15145 = !DILocalVariable(name: "t", arg: 1, scope: !15143, file: !2273, line: 53, type: !2246)
!15146 = !DILocation(line: 0, scope: !15143)
!15147 = !DILocation(line: 55, column: 6, scope: !15148)
!15148 = distinct !DILexicalBlock(scope: !15143, file: !2273, line: 55, column: 6)
!15149 = !DILocation(line: 55, column: 14, scope: !15148)
!15150 = !DILocation(line: 55, column: 6, scope: !15143)
!15151 = !DILocation(line: 56, column: 25, scope: !15152)
!15152 = distinct !DILexicalBlock(scope: !15148, file: !2273, line: 55, column: 23)
!15153 = !DILocation(line: 56, column: 12, scope: !15152)
!15154 = !DILocation(line: 56, column: 19, scope: !15152)
!15155 = !DILocation(line: 57, column: 2, scope: !15152)
!15156 = !DILocation(line: 59, column: 23, scope: !15143)
!15157 = !DILocation(line: 59, column: 2, scope: !15143)
!15158 = !DILocation(line: 60, column: 1, scope: !15143)
!15159 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !726, file: !726, line: 496, type: !15160, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2243, retainedNodes: !15162)
!15160 = !DISubroutineType(types: !15161)
!15161 = !{null, !14992}
!15162 = !{!15163, !15164, !15165}
!15163 = !DILocalVariable(name: "node", arg: 1, scope: !15159, file: !726, line: 496, type: !14992)
!15164 = !DILocalVariable(name: "prev", scope: !15159, file: !726, line: 498, type: !15004)
!15165 = !DILocalVariable(name: "next", scope: !15159, file: !726, line: 499, type: !15004)
!15166 = !DILocation(line: 0, scope: !15159)
!15167 = !DILocation(line: 498, column: 34, scope: !15159)
!15168 = !DILocation(line: 499, column: 34, scope: !15159)
!15169 = !DILocation(line: 501, column: 8, scope: !15159)
!15170 = !DILocation(line: 501, column: 13, scope: !15159)
!15171 = !DILocation(line: 502, column: 8, scope: !15159)
!15172 = !DILocation(line: 502, column: 13, scope: !15159)
!15173 = !DILocation(line: 503, column: 2, scope: !15159)
!15174 = !DILocation(line: 504, column: 1, scope: !15159)
!15175 = distinct !DISubprogram(name: "sys_dnode_init", scope: !726, file: !726, line: 211, type: !15160, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2243, retainedNodes: !15176)
!15176 = !{!15177}
!15177 = !DILocalVariable(name: "node", arg: 1, scope: !15175, file: !726, line: 211, type: !14992)
!15178 = !DILocation(line: 0, scope: !15175)
!15179 = !DILocation(line: 213, column: 8, scope: !15175)
!15180 = !DILocation(line: 213, column: 13, scope: !15175)
!15181 = !DILocation(line: 214, column: 8, scope: !15175)
!15182 = !DILocation(line: 214, column: 13, scope: !15175)
!15183 = !DILocation(line: 215, column: 1, scope: !15175)
!15184 = distinct !DISubprogram(name: "z_timeout_remaining", scope: !2273, file: !2273, line: 183, type: !15185, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2243, retainedNodes: !15189)
!15185 = !DISubroutineType(types: !15186)
!15186 = !{!692, !15187}
!15187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15188, size: 32)
!15188 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2247)
!15189 = !{!15190, !15191, !15192, !15194}
!15190 = !DILocalVariable(name: "timeout", arg: 1, scope: !15184, file: !2273, line: 183, type: !15187)
!15191 = !DILocalVariable(name: "ticks", scope: !15184, file: !2273, line: 185, type: !692)
!15192 = !DILocalVariable(name: "__i", scope: !15193, file: !2273, line: 187, type: !14847)
!15193 = distinct !DILexicalBlock(scope: !15184, file: !2273, line: 187, column: 2)
!15194 = !DILocalVariable(name: "__key", scope: !15193, file: !2273, line: 187, type: !14847)
!15195 = !DILocation(line: 0, scope: !15184)
!15196 = !DILocation(line: 0, scope: !15193)
!15197 = !DILocation(line: 0, scope: !14875, inlinedAt: !15198)
!15198 = distinct !DILocation(line: 187, column: 2, scope: !15193)
!15199 = !DILocation(line: 55, column: 2, scope: !14884, inlinedAt: !15200)
!15200 = distinct !DILocation(line: 145, column: 10, scope: !14875, inlinedAt: !15198)
!15201 = !DILocation(line: 0, scope: !14884, inlinedAt: !15200)
!15202 = !DILocation(line: 148, column: 2, scope: !14892, inlinedAt: !15198)
!15203 = !DILocation(line: 148, column: 2, scope: !14893, inlinedAt: !15198)
!15204 = !DILocation(line: 148, column: 2, scope: !14896, inlinedAt: !15198)
!15205 = !DILocation(line: 160, column: 2, scope: !14875, inlinedAt: !15198)
!15206 = !DILocation(line: 188, column: 11, scope: !15207)
!15207 = distinct !DILexicalBlock(scope: !15208, file: !2273, line: 187, column: 24)
!15208 = distinct !DILexicalBlock(scope: !15193, file: !2273, line: 187, column: 2)
!15209 = !DILocation(line: 0, scope: !14948, inlinedAt: !15210)
!15210 = distinct !DILocation(line: 187, column: 2, scope: !15208)
!15211 = !DILocation(line: 194, column: 2, scope: !14956, inlinedAt: !15210)
!15212 = !DILocation(line: 194, column: 2, scope: !14957, inlinedAt: !15210)
!15213 = !DILocation(line: 194, column: 2, scope: !14960, inlinedAt: !15210)
!15214 = !DILocation(line: 0, scope: !14962, inlinedAt: !15215)
!15215 = distinct !DILocation(line: 215, column: 2, scope: !14948, inlinedAt: !15210)
!15216 = !DILocation(line: 95, column: 2, scope: !14962, inlinedAt: !15215)
!15217 = !DILocation(line: 191, column: 2, scope: !15184)
!15218 = distinct !DISubprogram(name: "timeout_rem", scope: !2273, file: !2273, line: 165, type: !15185, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2243, retainedNodes: !15219)
!15219 = !{!15220, !15221, !15222}
!15220 = !DILocalVariable(name: "timeout", arg: 1, scope: !15218, file: !2273, line: 165, type: !15187)
!15221 = !DILocalVariable(name: "ticks", scope: !15218, file: !2273, line: 167, type: !692)
!15222 = !DILocalVariable(name: "t", scope: !15223, file: !2273, line: 173, type: !2246)
!15223 = distinct !DILexicalBlock(scope: !15218, file: !2273, line: 173, column: 2)
!15224 = !DILocation(line: 0, scope: !15218)
!15225 = !DILocation(line: 169, column: 6, scope: !15226)
!15226 = distinct !DILexicalBlock(scope: !15218, file: !2273, line: 169, column: 6)
!15227 = !DILocation(line: 169, column: 6, scope: !15218)
!15228 = !DILocation(line: 173, column: 28, scope: !15223)
!15229 = !DILocation(line: 0, scope: !15223)
!15230 = !DILocation(line: 173, column: 39, scope: !15231)
!15231 = distinct !DILexicalBlock(scope: !15223, file: !2273, line: 173, column: 2)
!15232 = !DILocation(line: 173, column: 2, scope: !15223)
!15233 = !DILocation(line: 174, column: 15, scope: !15234)
!15234 = distinct !DILexicalBlock(scope: !15231, file: !2273, line: 173, column: 61)
!15235 = !DILocation(line: 174, column: 9, scope: !15234)
!15236 = !DILocation(line: 175, column: 15, scope: !15237)
!15237 = distinct !DILexicalBlock(scope: !15234, file: !2273, line: 175, column: 7)
!15238 = !DILocation(line: 175, column: 7, scope: !15234)
!15239 = !DILocation(line: 173, column: 52, scope: !15231)
!15240 = distinct !{!15240, !15232, !15241}
!15241 = !DILocation(line: 178, column: 2, scope: !15223)
!15242 = !DILocation(line: 180, column: 17, scope: !15218)
!15243 = !DILocation(line: 180, column: 15, scope: !15218)
!15244 = !DILocation(line: 180, column: 2, scope: !15218)
!15245 = !DILocation(line: 181, column: 1, scope: !15218)
!15246 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !12060, file: !12060, line: 35, type: !15247, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2243, retainedNodes: !15249)
!15247 = !DISubroutineType(types: !15248)
!15248 = !{!145, !15187}
!15249 = !{!15250}
!15250 = !DILocalVariable(name: "to", arg: 1, scope: !15246, file: !12060, line: 35, type: !15187)
!15251 = !DILocation(line: 0, scope: !15246)
!15252 = !DILocation(line: 37, column: 35, scope: !15246)
!15253 = !DILocation(line: 37, column: 10, scope: !15246)
!15254 = !DILocation(line: 37, column: 9, scope: !15246)
!15255 = !DILocation(line: 37, column: 2, scope: !15246)
!15256 = distinct !DISubprogram(name: "z_timeout_expires", scope: !2273, file: !2273, line: 194, type: !15185, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2243, retainedNodes: !15257)
!15257 = !{!15258, !15259, !15260, !15262}
!15258 = !DILocalVariable(name: "timeout", arg: 1, scope: !15256, file: !2273, line: 194, type: !15187)
!15259 = !DILocalVariable(name: "ticks", scope: !15256, file: !2273, line: 196, type: !692)
!15260 = !DILocalVariable(name: "__i", scope: !15261, file: !2273, line: 198, type: !14847)
!15261 = distinct !DILexicalBlock(scope: !15256, file: !2273, line: 198, column: 2)
!15262 = !DILocalVariable(name: "__key", scope: !15261, file: !2273, line: 198, type: !14847)
!15263 = !DILocation(line: 0, scope: !15256)
!15264 = !DILocation(line: 0, scope: !15261)
!15265 = !DILocation(line: 0, scope: !14875, inlinedAt: !15266)
!15266 = distinct !DILocation(line: 198, column: 2, scope: !15261)
!15267 = !DILocation(line: 55, column: 2, scope: !14884, inlinedAt: !15268)
!15268 = distinct !DILocation(line: 145, column: 10, scope: !14875, inlinedAt: !15266)
!15269 = !DILocation(line: 0, scope: !14884, inlinedAt: !15268)
!15270 = !DILocation(line: 148, column: 2, scope: !14892, inlinedAt: !15266)
!15271 = !DILocation(line: 148, column: 2, scope: !14893, inlinedAt: !15266)
!15272 = !DILocation(line: 148, column: 2, scope: !14896, inlinedAt: !15266)
!15273 = !DILocation(line: 160, column: 2, scope: !14875, inlinedAt: !15266)
!15274 = !DILocation(line: 199, column: 11, scope: !15275)
!15275 = distinct !DILexicalBlock(scope: !15276, file: !2273, line: 198, column: 24)
!15276 = distinct !DILexicalBlock(scope: !15261, file: !2273, line: 198, column: 2)
!15277 = !DILocation(line: 199, column: 23, scope: !15275)
!15278 = !DILocation(line: 0, scope: !14948, inlinedAt: !15279)
!15279 = distinct !DILocation(line: 198, column: 2, scope: !15276)
!15280 = !DILocation(line: 194, column: 2, scope: !14956, inlinedAt: !15279)
!15281 = !DILocation(line: 194, column: 2, scope: !14957, inlinedAt: !15279)
!15282 = !DILocation(line: 194, column: 2, scope: !14960, inlinedAt: !15279)
!15283 = !DILocation(line: 0, scope: !14962, inlinedAt: !15284)
!15284 = distinct !DILocation(line: 215, column: 2, scope: !14948, inlinedAt: !15279)
!15285 = !DILocation(line: 95, column: 2, scope: !14962, inlinedAt: !15284)
!15286 = !DILocation(line: 199, column: 21, scope: !15275)
!15287 = !DILocation(line: 202, column: 2, scope: !15256)
!15288 = distinct !DISubprogram(name: "z_get_next_timeout_expiry", scope: !2273, file: !2273, line: 205, type: !14981, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2243, retainedNodes: !15289)
!15289 = !{!15290, !15291, !15293}
!15290 = !DILocalVariable(name: "ret", scope: !15288, file: !2273, line: 207, type: !1149)
!15291 = !DILocalVariable(name: "__i", scope: !15292, file: !2273, line: 209, type: !14847)
!15292 = distinct !DILexicalBlock(scope: !15288, file: !2273, line: 209, column: 2)
!15293 = !DILocalVariable(name: "__key", scope: !15292, file: !2273, line: 209, type: !14847)
!15294 = !DILocation(line: 0, scope: !15288)
!15295 = !DILocation(line: 0, scope: !15292)
!15296 = !DILocation(line: 0, scope: !14875, inlinedAt: !15297)
!15297 = distinct !DILocation(line: 209, column: 2, scope: !15292)
!15298 = !DILocation(line: 55, column: 2, scope: !14884, inlinedAt: !15299)
!15299 = distinct !DILocation(line: 145, column: 10, scope: !14875, inlinedAt: !15297)
!15300 = !DILocation(line: 0, scope: !14884, inlinedAt: !15299)
!15301 = !DILocation(line: 148, column: 2, scope: !14892, inlinedAt: !15297)
!15302 = !DILocation(line: 148, column: 2, scope: !14893, inlinedAt: !15297)
!15303 = !DILocation(line: 148, column: 2, scope: !14896, inlinedAt: !15297)
!15304 = !DILocation(line: 160, column: 2, scope: !14875, inlinedAt: !15297)
!15305 = !DILocation(line: 210, column: 9, scope: !15306)
!15306 = distinct !DILexicalBlock(scope: !15307, file: !2273, line: 209, column: 24)
!15307 = distinct !DILexicalBlock(scope: !15292, file: !2273, line: 209, column: 2)
!15308 = !DILocation(line: 0, scope: !14948, inlinedAt: !15309)
!15309 = distinct !DILocation(line: 209, column: 2, scope: !15307)
!15310 = !DILocation(line: 194, column: 2, scope: !14956, inlinedAt: !15309)
!15311 = !DILocation(line: 194, column: 2, scope: !14957, inlinedAt: !15309)
!15312 = !DILocation(line: 194, column: 2, scope: !14960, inlinedAt: !15309)
!15313 = !DILocation(line: 0, scope: !14962, inlinedAt: !15314)
!15314 = distinct !DILocation(line: 215, column: 2, scope: !14948, inlinedAt: !15309)
!15315 = !DILocation(line: 95, column: 2, scope: !14962, inlinedAt: !15314)
!15316 = !DILocation(line: 212, column: 2, scope: !15288)
!15317 = distinct !DISubprogram(name: "z_set_timeout_expiry", scope: !2273, file: !2273, line: 215, type: !9477, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2243, retainedNodes: !15318)
!15318 = !{!15319, !15320, !15321, !15323, !15324, !15327, !15328}
!15319 = !DILocalVariable(name: "ticks", arg: 1, scope: !15317, file: !2273, line: 215, type: !1149)
!15320 = !DILocalVariable(name: "is_idle", arg: 2, scope: !15317, file: !2273, line: 215, type: !145)
!15321 = !DILocalVariable(name: "__i", scope: !15322, file: !2273, line: 217, type: !14847)
!15322 = distinct !DILexicalBlock(scope: !15317, file: !2273, line: 217, column: 2)
!15323 = !DILocalVariable(name: "__key", scope: !15322, file: !2273, line: 217, type: !14847)
!15324 = !DILocalVariable(name: "next_to", scope: !15325, file: !2273, line: 218, type: !107)
!15325 = distinct !DILexicalBlock(scope: !15326, file: !2273, line: 217, column: 24)
!15326 = distinct !DILexicalBlock(scope: !15322, file: !2273, line: 217, column: 2)
!15327 = !DILocalVariable(name: "sooner", scope: !15325, file: !2273, line: 219, type: !145)
!15328 = !DILocalVariable(name: "imminent", scope: !15325, file: !2273, line: 221, type: !145)
!15329 = !DILocation(line: 0, scope: !15317)
!15330 = !DILocation(line: 0, scope: !15322)
!15331 = !DILocation(line: 0, scope: !14875, inlinedAt: !15332)
!15332 = distinct !DILocation(line: 217, column: 2, scope: !15322)
!15333 = !DILocation(line: 55, column: 2, scope: !14884, inlinedAt: !15334)
!15334 = distinct !DILocation(line: 145, column: 10, scope: !14875, inlinedAt: !15332)
!15335 = !DILocation(line: 0, scope: !14884, inlinedAt: !15334)
!15336 = !DILocation(line: 148, column: 2, scope: !14892, inlinedAt: !15332)
!15337 = !DILocation(line: 148, column: 2, scope: !14893, inlinedAt: !15332)
!15338 = !DILocation(line: 148, column: 2, scope: !14896, inlinedAt: !15332)
!15339 = !DILocation(line: 160, column: 2, scope: !14875, inlinedAt: !15332)
!15340 = !DILocation(line: 218, column: 17, scope: !15325)
!15341 = !DILocation(line: 0, scope: !15325)
!15342 = !DILocation(line: 221, column: 27, scope: !15325)
!15343 = !DILocation(line: 233, column: 17, scope: !15344)
!15344 = distinct !DILexicalBlock(scope: !15325, file: !2273, line: 233, column: 7)
!15345 = !DILocation(line: 234, column: 26, scope: !15346)
!15346 = distinct !DILexicalBlock(scope: !15344, file: !2273, line: 233, column: 56)
!15347 = !DILocation(line: 234, column: 4, scope: !15346)
!15348 = !DILocation(line: 235, column: 3, scope: !15346)
!15349 = !DILocation(line: 0, scope: !14948, inlinedAt: !15350)
!15350 = distinct !DILocation(line: 217, column: 2, scope: !15326)
!15351 = !DILocation(line: 194, column: 2, scope: !14956, inlinedAt: !15350)
!15352 = !DILocation(line: 194, column: 2, scope: !14957, inlinedAt: !15350)
!15353 = !DILocation(line: 194, column: 2, scope: !14960, inlinedAt: !15350)
!15354 = !DILocation(line: 0, scope: !14962, inlinedAt: !15355)
!15355 = distinct !DILocation(line: 215, column: 2, scope: !14948, inlinedAt: !15350)
!15356 = !DILocation(line: 95, column: 2, scope: !14962, inlinedAt: !15355)
!15357 = !DILocation(line: 237, column: 1, scope: !15317)
!15358 = distinct !DISubprogram(name: "sys_clock_announce", scope: !2273, file: !2273, line: 239, type: !15359, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2243, retainedNodes: !15361)
!15359 = !DISubroutineType(types: !15360)
!15360 = !{null, !1149}
!15361 = !{!15362, !15363, !15364, !15366}
!15362 = !DILocalVariable(name: "ticks", arg: 1, scope: !15358, file: !2273, line: 239, type: !1149)
!15363 = !DILocalVariable(name: "key", scope: !15358, file: !2273, line: 245, type: !14847)
!15364 = !DILocalVariable(name: "t", scope: !15365, file: !2273, line: 262, type: !2246)
!15365 = distinct !DILexicalBlock(scope: !15358, file: !2273, line: 261, column: 67)
!15366 = !DILocalVariable(name: "dt", scope: !15365, file: !2273, line: 263, type: !107)
!15367 = !DILocation(line: 0, scope: !15358)
!15368 = !DILocation(line: 242, column: 2, scope: !15358)
!15369 = !DILocation(line: 0, scope: !14875, inlinedAt: !15370)
!15370 = distinct !DILocation(line: 245, column: 25, scope: !15358)
!15371 = !DILocation(line: 55, column: 2, scope: !14884, inlinedAt: !15372)
!15372 = distinct !DILocation(line: 145, column: 10, scope: !14875, inlinedAt: !15370)
!15373 = !DILocation(line: 0, scope: !14884, inlinedAt: !15372)
!15374 = !DILocation(line: 148, column: 2, scope: !14892, inlinedAt: !15370)
!15375 = !DILocation(line: 148, column: 2, scope: !14893, inlinedAt: !15370)
!15376 = !DILocation(line: 148, column: 2, scope: !14896, inlinedAt: !15370)
!15377 = !DILocation(line: 160, column: 2, scope: !14875, inlinedAt: !15370)
!15378 = !DILocation(line: 261, column: 9, scope: !15358)
!15379 = !DILocation(line: 261, column: 17, scope: !15358)
!15380 = !DILocation(line: 261, column: 25, scope: !15358)
!15381 = !DILocation(line: 261, column: 37, scope: !15358)
!15382 = !DILocation(line: 261, column: 47, scope: !15358)
!15383 = !DILocation(line: 261, column: 44, scope: !15358)
!15384 = !DILocation(line: 261, column: 2, scope: !15358)
!15385 = !DILocation(line: 0, scope: !15365)
!15386 = !DILocation(line: 263, column: 12, scope: !15365)
!15387 = !DILocation(line: 265, column: 16, scope: !15365)
!15388 = !DILocation(line: 265, column: 13, scope: !15365)
!15389 = !DILocation(line: 266, column: 13, scope: !15365)
!15390 = !DILocation(line: 267, column: 3, scope: !15365)
!15391 = !DILocation(line: 0, scope: !14948, inlinedAt: !15392)
!15392 = distinct !DILocation(line: 269, column: 3, scope: !15365)
!15393 = !DILocation(line: 194, column: 2, scope: !14956, inlinedAt: !15392)
!15394 = !DILocation(line: 194, column: 2, scope: !14957, inlinedAt: !15392)
!15395 = !DILocation(line: 194, column: 2, scope: !14960, inlinedAt: !15392)
!15396 = !DILocation(line: 0, scope: !14962, inlinedAt: !15397)
!15397 = distinct !DILocation(line: 215, column: 2, scope: !14948, inlinedAt: !15392)
!15398 = !DILocation(line: 95, column: 2, scope: !14962, inlinedAt: !15397)
!15399 = !DILocation(line: 270, column: 6, scope: !15365)
!15400 = !DILocation(line: 270, column: 3, scope: !15365)
!15401 = !DILocation(line: 0, scope: !14875, inlinedAt: !15402)
!15402 = distinct !DILocation(line: 271, column: 9, scope: !15365)
!15403 = !DILocation(line: 55, column: 2, scope: !14884, inlinedAt: !15404)
!15404 = distinct !DILocation(line: 145, column: 10, scope: !14875, inlinedAt: !15402)
!15405 = !DILocation(line: 0, scope: !14884, inlinedAt: !15404)
!15406 = !DILocation(line: 148, column: 2, scope: !14892, inlinedAt: !15402)
!15407 = !DILocation(line: 148, column: 2, scope: !14893, inlinedAt: !15402)
!15408 = !DILocation(line: 148, column: 2, scope: !14896, inlinedAt: !15402)
!15409 = !DILocation(line: 160, column: 2, scope: !14875, inlinedAt: !15402)
!15410 = !DILocation(line: 272, column: 22, scope: !15365)
!15411 = distinct !{!15411, !15384, !15412}
!15412 = !DILocation(line: 273, column: 2, scope: !15358)
!15413 = !DILocation(line: 276, column: 19, scope: !15414)
!15414 = distinct !DILexicalBlock(scope: !15415, file: !2273, line: 275, column: 23)
!15415 = distinct !DILexicalBlock(scope: !15358, file: !2273, line: 275, column: 6)
!15416 = !DILocation(line: 277, column: 2, scope: !15414)
!15417 = !DILocation(line: 279, column: 15, scope: !15358)
!15418 = !DILocation(line: 279, column: 12, scope: !15358)
!15419 = !DILocation(line: 280, column: 21, scope: !15358)
!15420 = !DILocation(line: 282, column: 24, scope: !15358)
!15421 = !DILocation(line: 282, column: 2, scope: !15358)
!15422 = !DILocation(line: 0, scope: !14948, inlinedAt: !15423)
!15423 = distinct !DILocation(line: 284, column: 2, scope: !15358)
!15424 = !DILocation(line: 194, column: 2, scope: !14956, inlinedAt: !15423)
!15425 = !DILocation(line: 194, column: 2, scope: !14957, inlinedAt: !15423)
!15426 = !DILocation(line: 194, column: 2, scope: !14960, inlinedAt: !15423)
!15427 = !DILocation(line: 0, scope: !14962, inlinedAt: !15428)
!15428 = distinct !DILocation(line: 215, column: 2, scope: !14948, inlinedAt: !15423)
!15429 = !DILocation(line: 95, column: 2, scope: !14962, inlinedAt: !15428)
!15430 = !DILocation(line: 285, column: 1, scope: !15358)
!15431 = distinct !DISubprogram(name: "sys_clock_tick_get", scope: !2273, file: !2273, line: 287, type: !15432, scopeLine: 288, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2243, retainedNodes: !15434)
!15432 = !DISubroutineType(types: !15433)
!15433 = !{!694}
!15434 = !{!15435, !15436, !15438}
!15435 = !DILocalVariable(name: "t", scope: !15431, file: !2273, line: 289, type: !695)
!15436 = !DILocalVariable(name: "__i", scope: !15437, file: !2273, line: 291, type: !14847)
!15437 = distinct !DILexicalBlock(scope: !15431, file: !2273, line: 291, column: 2)
!15438 = !DILocalVariable(name: "__key", scope: !15437, file: !2273, line: 291, type: !14847)
!15439 = !DILocation(line: 0, scope: !15431)
!15440 = !DILocation(line: 0, scope: !15437)
!15441 = !DILocation(line: 0, scope: !14875, inlinedAt: !15442)
!15442 = distinct !DILocation(line: 291, column: 2, scope: !15437)
!15443 = !DILocation(line: 55, column: 2, scope: !14884, inlinedAt: !15444)
!15444 = distinct !DILocation(line: 145, column: 10, scope: !14875, inlinedAt: !15442)
!15445 = !DILocation(line: 0, scope: !14884, inlinedAt: !15444)
!15446 = !DILocation(line: 148, column: 2, scope: !14892, inlinedAt: !15442)
!15447 = !DILocation(line: 148, column: 2, scope: !14893, inlinedAt: !15442)
!15448 = !DILocation(line: 148, column: 2, scope: !14896, inlinedAt: !15442)
!15449 = !DILocation(line: 160, column: 2, scope: !14875, inlinedAt: !15442)
!15450 = !DILocation(line: 292, column: 7, scope: !15451)
!15451 = distinct !DILexicalBlock(scope: !15452, file: !2273, line: 291, column: 24)
!15452 = distinct !DILexicalBlock(scope: !15437, file: !2273, line: 291, column: 2)
!15453 = !DILocation(line: 292, column: 19, scope: !15451)
!15454 = !DILocation(line: 0, scope: !14948, inlinedAt: !15455)
!15455 = distinct !DILocation(line: 291, column: 2, scope: !15452)
!15456 = !DILocation(line: 194, column: 2, scope: !14956, inlinedAt: !15455)
!15457 = !DILocation(line: 194, column: 2, scope: !14957, inlinedAt: !15455)
!15458 = !DILocation(line: 194, column: 2, scope: !14960, inlinedAt: !15455)
!15459 = !DILocation(line: 0, scope: !14962, inlinedAt: !15460)
!15460 = distinct !DILocation(line: 215, column: 2, scope: !14948, inlinedAt: !15455)
!15461 = !DILocation(line: 95, column: 2, scope: !14962, inlinedAt: !15460)
!15462 = !DILocation(line: 292, column: 17, scope: !15451)
!15463 = !DILocation(line: 294, column: 2, scope: !15431)
!15464 = distinct !DISubprogram(name: "sys_clock_tick_get_32", scope: !2273, file: !2273, line: 297, type: !6087, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2243, retainedNodes: !1949)
!15465 = !DILocation(line: 300, column: 19, scope: !15464)
!15466 = !DILocation(line: 300, column: 9, scope: !15464)
!15467 = !DILocation(line: 300, column: 2, scope: !15464)
!15468 = distinct !DISubprogram(name: "z_impl_k_uptime_ticks", scope: !2273, file: !2273, line: 306, type: !15432, scopeLine: 307, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2243, retainedNodes: !1949)
!15469 = !DILocation(line: 308, column: 9, scope: !15468)
!15470 = !DILocation(line: 308, column: 2, scope: !15468)
!15471 = distinct !DISubprogram(name: "z_impl_k_busy_wait", scope: !2273, file: !2273, line: 319, type: !6097, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2243, retainedNodes: !15472)
!15472 = !{!15473, !15474, !15475, !15476}
!15473 = !DILocalVariable(name: "usec_to_wait", arg: 1, scope: !15471, file: !2273, line: 319, type: !152)
!15474 = !DILocalVariable(name: "start_cycles", scope: !15471, file: !2273, line: 328, type: !152)
!15475 = !DILocalVariable(name: "cycles_to_wait", scope: !15471, file: !2273, line: 331, type: !152)
!15476 = !DILocalVariable(name: "current_cycles", scope: !15477, file: !2273, line: 338, type: !152)
!15477 = distinct !DILexicalBlock(scope: !15478, file: !2273, line: 337, column: 11)
!15478 = distinct !DILexicalBlock(scope: !15479, file: !2273, line: 337, column: 2)
!15479 = distinct !DILexicalBlock(scope: !15471, file: !2273, line: 337, column: 2)
!15480 = !DILocation(line: 0, scope: !15471)
!15481 = !DILocation(line: 322, column: 19, scope: !15482)
!15482 = distinct !DILexicalBlock(scope: !15471, file: !2273, line: 322, column: 6)
!15483 = !DILocation(line: 322, column: 6, scope: !15471)
!15484 = !DILocation(line: 328, column: 26, scope: !15471)
!15485 = !DILocation(line: 333, column: 43, scope: !15471)
!15486 = !DILocation(line: 337, column: 2, scope: !15471)
!15487 = !DILocation(line: 338, column: 29, scope: !15477)
!15488 = !DILocation(line: 0, scope: !15477)
!15489 = !DILocation(line: 341, column: 23, scope: !15490)
!15490 = distinct !DILexicalBlock(scope: !15477, file: !2273, line: 341, column: 7)
!15491 = !DILocation(line: 341, column: 39, scope: !15490)
!15492 = !DILocation(line: 349, column: 1, scope: !15471)
!15493 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !804, file: !804, line: 1675, type: !6087, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2243, retainedNodes: !1949)
!15494 = !DILocation(line: 1677, column: 9, scope: !15493)
!15495 = !DILocation(line: 1677, column: 2, scope: !15493)
!15496 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !8123, file: !8123, line: 24, type: !6087, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2243, retainedNodes: !1949)
!15497 = !DILocation(line: 26, column: 9, scope: !15496)
!15498 = !DILocation(line: 26, column: 2, scope: !15496)
!15499 = distinct !DISubprogram(name: "sys_clock_timeout_end_calc", scope: !2273, file: !2273, line: 364, type: !15500, scopeLine: 365, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2243, retainedNodes: !15502)
!15500 = !DISubroutineType(types: !15501)
!15501 = !{!695, !14837}
!15502 = !{!15503, !15504}
!15503 = !DILocalVariable(name: "timeout", arg: 1, scope: !15499, file: !2273, line: 364, type: !14837)
!15504 = !DILocalVariable(name: "dt", scope: !15499, file: !2273, line: 366, type: !692)
!15505 = !DILocation(line: 0, scope: !15499)
!15506 = !DILocation(line: 368, column: 6, scope: !15499)
!15507 = !DILocation(line: 371, column: 10, scope: !15508)
!15508 = distinct !DILexicalBlock(scope: !15509, file: !2273, line: 370, column: 47)
!15509 = distinct !DILexicalBlock(scope: !15510, file: !2273, line: 370, column: 13)
!15510 = distinct !DILexicalBlock(scope: !15499, file: !2273, line: 368, column: 6)
!15511 = !DILocation(line: 371, column: 3, scope: !15508)
!15512 = !DILocation(line: 376, column: 58, scope: !15513)
!15513 = distinct !DILexicalBlock(scope: !15514, file: !2273, line: 376, column: 7)
!15514 = distinct !DILexicalBlock(scope: !15509, file: !2273, line: 372, column: 9)
!15515 = !DILocation(line: 376, column: 7, scope: !15514)
!15516 = !DILocation(line: 376, column: 43, scope: !15513)
!15517 = !DILocation(line: 377, column: 4, scope: !15518)
!15518 = distinct !DILexicalBlock(scope: !15513, file: !2273, line: 376, column: 64)
!15519 = !DILocation(line: 379, column: 10, scope: !15514)
!15520 = !DILocation(line: 379, column: 33, scope: !15514)
!15521 = !DILocation(line: 379, column: 31, scope: !15514)
!15522 = !DILocation(line: 379, column: 3, scope: !15514)
!15523 = !DILocation(line: 0, scope: !15510)
!15524 = !DILocation(line: 381, column: 1, scope: !15499)
!15525 = distinct !DISubprogram(name: "boot_banner", scope: !15526, file: !15526, line: 26, type: !2909, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2895, retainedNodes: !1949)
!15526 = !DIFile(filename: "zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15527 = !DILocation(line: 34, column: 2, scope: !15525)
!15528 = !DILocation(line: 36, column: 1, scope: !15525)
